With timestamps:

00:00 - day three no day four of the javascript
00:03 - challenge
00:04 - and today we are finishing up the amazon
00:06 - clone
00:07 - 2.0 i want to show you what it is that
00:10 - we're doing right
00:11 - so we've got the amazon clone 2.0 that
00:14 - is built with javascript tail and css
00:16 - it is built with firebase it is built
00:20 - with media queries it is built
00:23 - with an amazing design we've got here
00:26 - categories right here
00:28 - okay so once you at some point when you
00:31 - when you click on the category your
00:33 - product should actually change
00:34 - you've got products right here okay
00:37 - these are the products that are
00:38 - available on amazon
00:40 - we've got ourselves the amazon logo we
00:42 - got ourselves the categories okay
00:44 - we have ourselves a search bar now
00:47 - here's the cool part i want you to pay
00:48 - attention to this really quickly guys
00:49 - okay
00:50 - pay attention to this this is so cool
00:52 - when you go ahead and click okay you see
00:54 - this
00:54 - number 50 right here i want you to pay
00:56 - attention to this number 50 right here
00:58 - let me make this a little bit bigger
01:00 - if you click on this add to cart which
01:01 - i'm going to do right now pay attention
01:03 - oh look
01:05 - the 5354 changes by itself by the way
01:08 - right this is
01:09 - live reload now libraries about live
01:11 - database
01:12 - right that's right and now if i go ahead
01:14 - and click on the cart
01:16 - right now we can see that what do we
01:18 - have we have
01:19 - 29 macbook pros which is pretty
01:21 - impressive
01:22 - i'm guessing if you want to win on
01:24 - macbook pro stick around guys because
01:26 - we'll show you how to make them work
01:27 - okay
01:29 - there's 15 nintendo switches in here
01:31 - there's 11 panasonic's
01:33 - that's right that's a lot of tech guys
01:34 - that's 53 000
01:36 - guys that's a lot that would be good
01:37 - giveaways for the challenge you know
01:39 - okay let's not promise that we can't we
01:41 - can't do that it's a lot it's a lot
01:45 - but right as you can see for example if
01:48 - i decrease the number here it decreases
01:50 - the whole total cost
01:51 - not only does this decrease this
01:53 - decreases and so does this
01:55 - so if i just simply right it'll work
01:58 - perfectly if i could increase the number
02:00 - if i wanted to as well look at that it
02:01 - looks or just works seamlessly
02:03 - if i now remove something which i can
02:06 - it's gone
02:07 - i can move another one it's gone now
02:09 - it's just fifty fifteen thousand
02:11 - it all works live so
02:14 - let's go ahead and build this together
02:16 - let's finish it up remember
02:18 - part one of this amazon clone was in the
02:20 - previous video so make sure
02:22 - if you are just here to start out uh
02:24 - feel free to
02:25 - check out the videos before uh they will
02:27 - be there
02:28 - but if you're here just also watch feel
02:29 - free to watch those you can zoom
02:31 - thank you guys let's go ahead and make
02:32 - sure we have our project uh
02:35 - open and we'll get started right now
02:37 - okay
02:38 - so right now before we start can you get
02:41 - push everything for the final project
02:44 - oh you got it jesse thank you
02:47 - i'm gonna get push everything because
02:48 - jesse wants me to get push stuff so i'm
02:50 - going to say
02:52 - sudo this is this is github by the way
02:54 - if you guys don't know so for example if
02:56 - i want to
02:57 - use git and i want to go ahead and
03:00 - you know add something to commit i do
03:03 - sudo git add
03:04 - dot and this by the way is just old code
03:07 - not out code but this is called the me
03:08 - and js i've been working on
03:10 - and then if i want to commit something i
03:11 - do sudo git
03:13 - commit dash m okay and then i give it a
03:17 - message so for example
03:18 - here this is day four day four of the
03:20 - challenge
03:21 - right boom boom right there and so
03:24 - sudoku ad is like kind of staging
03:26 - the changes they're not committed yet
03:28 - but they're staging the chain again
03:29 - getting it ready
03:30 - and then we do pseudokit commit we
03:33 - actually fully commit that
03:34 - you know uh that piece of code and then
03:36 - i can do sudo
03:38 - get i'm only using sudo because of my
03:40 - computer it's a little bit dumb right
03:41 - now
03:42 - so to get push origin master
03:46 - and boom right so what does it mean
03:49 - origin by the way origin master so
03:50 - a few things we push now to github this
03:53 - is what it means when we push to github
03:55 - uh basically we're going to push to
03:58 - origin which origin is
04:00 - where github is okay and then master
04:03 - is the branch that we're going to push
04:06 - so our
04:07 - branch we're going to push is called
04:08 - master and then we're going to push it
04:10 - to github okay
04:12 - and that's it all right jesse you got it
04:15 - yes awesome so guys
04:17 - this is really important git github is
04:20 - something you definitely need when
04:21 - you're working a team
04:23 - okay so because nash push and commit
04:25 - everything
04:26 - to get i'm now able to pull it
04:29 - from git and then and i only have to do
04:31 - i only have to go into the project
04:33 - and basically do the command uh git
04:37 - pull and that's it i'll get everything
04:40 - all of the code all the changes that we
04:41 - made that's right
04:43 - all right so let's go ahead and get
04:44 - started right away i'm going to close up
04:46 - my other vs code and i'm going to open
04:48 - up a recent one which is the one we're
04:50 - working on which is amazon clone 2.
04:51 - now all of you guys that are currently
04:53 - on zoom
04:54 - raise your hand if you have the amazon
04:56 - clone 2 if you have the up-to-date
04:58 - uh functionality do you guys have that
05:01 - yes or no
05:02 - you guys have the update functionality
05:04 - yes or no you guys have that yes yes yes
05:06 - yes
05:07 - good good good good good good good if
05:09 - you guys don't
05:10 - we have the link amanoth drop the link
05:12 - below if you are here
05:14 - please drop the link below into the chat
05:16 - so that we can tell show everybody the
05:18 - github link and they can download it
05:20 - okay but if we go ahead and i'm going to
05:23 - open up the current one so
05:25 - open with live server
05:28 - all right this is our current one you
05:31 - see look it looks pretty good i kind of
05:33 - like it i kind of like it a lot
05:35 - uh but of course it doesn't have the
05:36 - functionality that we talked about right
05:38 - we can't delete we can't you know add
05:40 - the card
05:41 - pretty much none of that stuff um but
05:44 - this is how now we're gonna make that
05:46 - all work so i'm
05:47 - let me go ahead and open up new window
05:49 - here just for me that's not for you guys
05:51 - okay for me actually
05:53 - because i want to see some of the code
05:54 - that i have as just kind of honestly as
05:57 - a
05:57 - uh as a cheat sheet i like to use a
06:00 - cheat sheet all the time
06:02 - don't judge me that's right we're not
06:05 - perfect okay
06:06 - okay nobody's perfect guys but
06:09 - um it's okay all right so part one
06:13 - where are we at well we first need to go
06:16 - ahead and do a few things
06:18 - if i go to amazon 2.0 let me go back to
06:21 - my index.html
06:23 - all right right we have this number one
06:27 - right here this counter
06:28 - it's just kind of there but if i go to
06:30 - the cart that counter is not there so
06:32 - let's
06:32 - first make sure that that counter is
06:34 - there okay and the counter is going to
06:36 - come from where let me go ahead and hide
06:37 - this for you guys
06:40 - hide this for you if i go to insta html
06:43 - you can see that
06:44 - we have a counter let me see let me see
06:46 - let me see
06:48 - it is a counter two two two two
06:51 - no not this one it's in the header
06:53 - somewhere
06:54 - card icon and we have this right there
06:57 - card item number you see that right
06:58 - there
06:58 - cart item number right there this one
07:00 - right here and it's right
07:02 - underneath the card icon so make sure
07:04 - you pay attention to that guys please
07:05 - pay attention that's really important
07:07 - all right
07:08 - card icon i'm going to copy the whole
07:10 - card item number i'll paste it even for
07:12 - you guys
07:12 - in the chat so you guys have it as well
07:14 - okay
07:17 - right there right there this is the one
07:19 - okay
07:22 - okay i'll place it for you guys in the
07:23 - chat and then what you guys want to do
07:25 - is let's go
07:26 - back to you know our file pages go back
07:30 - to card.html
07:32 - and then let's go ahead and put that in
07:34 - where put them near the card icon
07:36 - so if i simply just do command f and i
07:38 - say cart
07:40 - dash icon boom you see
07:43 - it show me the card icon is where it's
07:45 - at i'm going to
07:46 - hit enter paste it in there and boom
07:50 - we got it nice let's go and save that
07:54 - and then i'm going to give it a comment
07:56 - because sometimes i like to use comments
07:57 - it's very important guys okay pay
07:59 - attention to the way i'm doing this
08:01 - all right so we have cart icons
08:04 - boom right card icon
08:07 - all right so that way if i go ahead and
08:09 - save this
08:11 - save this in the html i don't exactly
08:14 - see it for some
08:15 - reason but why is that because i cannot
08:17 - okay
08:18 - the reason why i don't see is actually
08:19 - this is maybe why joe why you don't see
08:21 - it as well because
08:22 - right i put inside the card item number
08:25 - but the issue is
08:26 - where is it it's all the way here i
08:29 - don't know if you guys can see that it's
08:30 - right here you see that you need to do
08:34 - the positioning
08:35 - that's right because currently this
08:37 - little icon
08:38 - cutout number is position absolute but
08:42 - absolute to what so we need to give it a
08:44 - relative positioning for this specific
08:47 - dip that means i need to go back to my
08:49 - card icon
08:51 - i need to say relative using tailwind
08:54 - css
08:55 - and boom now it's there you see that joe
08:59 - make sure you have it just like that
09:00 - okay joe all right
09:03 - beautiful beautiful beautiful social
09:05 - relative so now we have that
09:07 - we've got that that's all looking great
09:10 - jesse what do you think this is the next
09:11 - thing that we should be working on
09:15 - so let's start at the start right when
09:18 - we are in the main section indeed
09:21 - when we're on the main section and we
09:22 - see one of those hot deals
09:25 - we want to buy that that's right so
09:29 - first let's start off with adding the
09:31 - button
09:32 - add to card okay and
09:36 - the logic is this guys when you click
09:37 - the button boom
09:39 - the item is in your cart so guess what
09:42 - the one
09:43 - becomes a two if you have two items so
09:46 - let's add all of that functionality
09:48 - and let's start here that's right so
09:50 - it's going to add added functionality
09:51 - for add to cart so
09:52 - if you go to in this.html let's scroll
09:55 - down and let's go to our product so we
09:56 - have one product right now which is this
09:58 - product
09:59 - right that's pretty much just just this
10:00 - product image and
10:02 - what do you think we should do in order
10:03 - to add another div
10:05 - for the cart well it's very simple i
10:08 - think we should add another deal for the
10:10 - card
10:10 - so i pretty much answer my question
10:15 - pun intended i know i know
10:18 - but that's okay it was very clear mm-hmm
10:21 - so let's go ahead and do that jesse you
10:22 - want to do that right you give me a
10:23 - lecture
10:24 - oh dang yeah if you can give me your
10:26 - life here i need to get thank you sure
10:27 - that's right
10:28 - jesse oh damn you fancy live here fancy
10:32 - jesse
10:33 - it's it's the share of life
10:39 - let me see start collaborating oh it's
10:42 - still starting so while
10:43 - starting collaboration sessions you give
10:45 - me please be patient with me for a
10:46 - second
10:47 - and while we're doing that let's kind of
10:48 - create a new div okay
10:50 - i'm gonna say dude i'm gonna say class
10:52 - and this is gonna be
10:56 - add to dash card right there
11:00 - okay add to cart so so guys look at this
11:04 - closely it's in the inside the hot deal
11:07 - okay so main sections deal see that it's
11:10 - inside the main product so
11:11 - it's inside this product this is one
11:13 - product guys and we're going to put a
11:15 - add to cart inside that product okay
11:18 - that's what we're going to do i'm going
11:19 - to create that div and then we're going
11:21 - to give it a few different
11:23 - uh things so this at the car should have
11:25 - a text of
11:26 - add to cart let's go and save that
11:29 - i can see by the way the bottom is
11:30 - showing right there you see
11:32 - right there okay then i'm gonna do a few
11:35 - things
11:36 - we're going to give the height so let's
11:37 - do h dash eight
11:39 - okay and let's do with dash 28
11:44 - boom nothing so far let's give it a
11:46 - background color and let's say
11:48 - bg bg yellow 500 so let's do this
11:53 - bg yellow 500
11:56 - save that okay all right and then we
11:59 - have a bg
12:00 - yellow 500 to fully make it centered
12:03 - what are we gonna do guys
12:04 - well we need to add a flex to it so
12:06 - let's do flex
12:08 - okay and let's do items center
12:12 - oops items dash center again this is
12:15 - going to
12:16 - uh do item center oh there we go now the
12:19 - link is getting copied nice job
12:20 - jesse hey send it to jesse here for a
12:24 - second
12:26 - there you go yeah yeah yeah
12:30 - so that's good so that means it's center
12:32 - uh horizontally
12:34 - and then let's do vertically so actually
12:36 - this is a vertical
12:37 - vertical actually i forgot about that
12:39 - and then let's do now
12:40 - justify center to center horizontally
12:46 - boom okay then we're going to do text
12:50 - white
12:52 - boom and then let's go ahead and do some
12:53 - rounded corners okay
12:55 - well to give us around the corners it's
12:56 - just gonna be um
12:58 - just say rounded that's it so let's do
13:02 - rounded save that i'm gonna give you
13:04 - guys a word wrap
13:06 - so you guys can see a little bit better
13:07 - here boom there we go
13:09 - you see all right okay
13:12 - we're all good there add to card justify
13:15 - center it's time to look and that's
13:16 - pretty much it that's the art at the
13:17 - card is pretty much done
13:19 - i just want to make the text a little
13:20 - bit bigger so we're going to do the text
13:22 - md text
13:26 - md save and
13:29 - that's it that is it my friends all
13:32 - right
13:32 - also i want to be able to make it a
13:34 - hover so when i hover over this it
13:36 - feels like it's a pointer it's a cursor
13:38 - pointer right so i'm going to give it a
13:40 - cursor pointer
13:43 - cursor dash pointer
13:47 - okay so that means if i wrote this you
13:49 - see it's like a hand button now so boom
13:56 - anyways right it's a cursor pointer and
13:58 - then the final thing is
14:00 - i want to add a hover so when i hover
14:02 - over over this whole thing
14:03 - i want to be able to change the color
14:05 - that means i'm going to say
14:07 - hover again this is all tail and css
14:10 - hover
14:10 - with i'm going to change the bg yellow
14:13 - to not
14:14 - b500 to actually be 600
14:17 - this is the really cool thing about
14:18 - telling css you can really add make this
14:20 - stuff so fast so for example if i just
14:22 - do this this this
14:23 - you see that's it it's already a hover
14:25 - and it's clickable and everything
14:26 - so bun done at the cart is now all
14:30 - done okay guys so now add to cart is
14:33 - add to cart is is done
14:37 - okay all right we've got that portion
14:39 - now what i want to do is actually i want
14:41 - to
14:42 - be able to add this at the card to
14:45 - a database but before i do that i want
14:48 - to be able to
14:50 - get the card items from my database guys
14:53 - because right now
14:54 - this is what let me go upstairs this
14:56 - right now is static
14:58 - this div is static it's not dependent
15:01 - any database
15:02 - it's not dependent on anything it's just
15:03 - a static html
15:05 - i want to be able to change that to
15:07 - where i get the data
15:09 - from the actual firebase database so
15:11 - let's go ahead and go to firebase right
15:12 - now okay guys
15:13 - everybody i went through firebase
15:15 - yesterday i'm gonna go through firebase
15:16 - again here
15:18 - so i'm gonna say firebase
15:21 - okay firebase.google.com great
15:24 - and then what i'm going to do is i'm
15:27 - going to say
15:28 - go i'm going to log in if you are not
15:30 - logged in make sure you log
15:31 - in i'm going to use my my other little
15:34 - thing here and then i'm going to say
15:38 - go to console go
15:41 - to console right here so go to console
15:45 - beautiful nice and i've got a few things
15:48 - so the one that we're going to work on
15:50 - is i think is this amazon clone 2 let me
15:52 - see amazon clone 2
15:55 - right here okay
15:58 - all right and this is firestore now for
15:59 - those of you who do not have amazon or
16:01 - this firebase done
16:03 - i'm going to show you exactly how to do
16:04 - it so just one last time just to recap
16:06 - so you guys are not fully lost okay
16:08 - click add to project
16:10 - let's go ahead and i'm going to say
16:11 - amazon name your project whatever you
16:13 - want so amazon test
16:14 - if you want to okay click continue
16:19 - sure continue all right
16:22 - set an account that's fine default
16:24 - account firebase crew project
16:25 - there we go so click create project
16:28 - then you should be all good give it a
16:30 - little bit of a second
16:34 - and while we're doing that i'm gonna
16:35 - keep playing this move music
16:38 - and jesse just keeps trying to get into
16:40 - this culture it's my god my god
16:44 - got this okay i can i can control this
16:46 - code
16:48 - hell yeah
16:55 - okay beautiful let's go to so this is
16:58 - has been done right
16:59 - let's go now to uh project settings
17:02 - right here
17:03 - click on this project settings right
17:06 - there
17:07 - project settings select uh this little
17:10 - map right here
17:12 - now map what is this called like uh i'm
17:14 - not sure this is called like
17:16 - tag i'm not sure this is actually called
17:18 - but just select this
17:19 - okay all right from my web app
17:23 - say amazon clone
17:26 - i'm going to say test because this is a
17:28 - test one for me or you can call it
17:29 - whatever you
17:30 - call whatever
17:42 - great so now you have your firebase
17:45 - configuration
17:46 - that's it okay fibre configuration is
17:49 - done
17:50 - but what are we going to do now with
17:52 - this config
17:53 - well a few things we're going to go back
17:56 - into
17:57 - our project folder some of you might
18:00 - have fibro.js already here
18:02 - some you might not right if you don't
18:04 - have it do new file and say
18:06 - firebase firebase base.js
18:10 - dot gs sure right i already have it so i
18:14 - need to create it but that's it
18:15 - i have my firebase.js then what i'm
18:18 - going to do with this firebase gs is i'm
18:19 - going to copy everything that's from
18:21 - here
18:21 - this config command c that config
18:25 - and then command v that config right
18:27 - there okay
18:28 - that's it that's what i'm going to do
18:30 - right with this config
18:32 - then i'm pretty much done let's go to
18:35 - index.html
18:37 - i now need to import firebase into here
18:40 - so check this out i'm going to copy
18:43 - firebase app.js this script tag right
18:45 - here
18:46 - all right and you guys should all have
18:48 - that or if you don't i'm going to put it
18:50 - in the chat yeah
18:52 - boom right there and then put it is
18:54 - somewhere inside here so i'm going to
18:56 - say i'm going to put it in here right
18:57 - there see script tag
18:58 - firebase app
19:01 - then i'm going to copy this analytics
19:03 - portion which you really don't need but
19:04 - we'll just have it there for now
19:07 - and that's it and we're not done yet
19:09 - though honestly
19:10 - because i'm going to show you how to
19:11 - actually use the firestore because
19:13 - firebase is a lot of things
19:15 - firestore is the database that we're
19:16 - going to use so
19:19 - using firebase firestore
19:24 - okay so getting started with firestore
19:27 - let's go ahead and scroll down right
19:29 - there
19:30 - so with firestore it's telling you a few
19:32 - things right you need to
19:33 - import the actual firestore script right
19:36 - here you see we imported this one
19:38 - firebase
19:38 - app by the way jesse were you able to
19:41 - log in it's all good
19:42 - yeah okay great i'm labeled i just
19:44 - logged in now yeah okay great
19:45 - so i'm gonna go through this right now
19:47 - so firestore let's copy that i'm gonna
19:49 - put a few guys in the chat
19:51 - boom a month can we please um and
19:54 - include comments on youtube i want to
19:56 - make sure that we have comments on
19:58 - youtube
19:59 - command v on there okay
20:02 - so we have all these three different
20:04 - files we have one
20:05 - the initial firebase app that's the most
20:07 - important thing now you can see here i
20:09 - already have
20:10 - it there let's go ahead and delete that
20:12 - right now because i already have it
20:13 - there
20:14 - next one is we have the analytics
20:15 - portion i have that there too so i'm
20:17 - going to delete my second
20:19 - duplicate so i don't have i don't have a
20:20 - duplicate and the third one is going to
20:22 - be this firebase firestore
20:24 - so there's three things you need to
20:26 - include in your application in order to
20:27 - make the database
20:28 - work is everybody with it you guys
20:30 - understand that yes or no
20:33 - yeah good good all right so we got that
20:36 - and here you see it shows us hey you
20:38 - know the npm install all this kind of
20:40 - stuff but we're not going to do that
20:41 - instead
20:42 - we're going to do the following the one
20:44 - thing we're going to do is just simply
20:45 - do db
20:46 - firebase firestore so do that right now
20:48 - i'm going to save this
20:50 - okay and within that i'm going to create
20:54 - a new file
20:55 - called new file uh actually i'm going to
20:57 - go fibres.js
20:58 - and i'm going to say uh
21:02 - all right oh oop not the one that's not
21:04 - this one i'm going to copy this var db
21:06 - firebase firestore and this is going to
21:09 - make this db variable available to the
21:11 - whole index.html or the whole script.js
21:14 - when we're going to create this right
21:15 - now so
21:16 - oh that's right this db variable is
21:19 - going to be available everywhere that's
21:20 - why we're putting into like a var
21:22 - variable right
21:23 - because now if i do new file and i say
21:26 - script.js guys
21:28 - okay this is the actual script we're
21:31 - going to use to
21:32 - get the data from the firebase so now
21:34 - check this out
21:35 - all right really quickly
21:39 - i will go ahead and i will go to
21:40 - insta.html and i'm going to include my
21:42 - script.js inside
21:44 - here so let's do that right now script
21:48 - source is equal to
21:52 - script.js close it out boom and done
21:55 - right that's it you can see here is
21:58 - telling us hey how do we actually add
21:59 - the data you know how do we get the data
22:02 - like read the data so it's telling us
22:03 - right there right
22:05 - uh before we read the data from firebase
22:06 - let's actually add some
22:08 - items to the database because of course
22:10 - if we got nothing we're not
22:11 - we're going to get nothing simple as
22:13 - that i will go back to my
22:15 - uh firebase here right there oh not here
22:20 - close this one out i will continue to
22:22 - continue to console
22:24 - and i will go ahead and go to firestore
22:27 - database
22:28 - i will create my database i'm going to
22:31 - put into test mode for now
22:33 - just for now test mode click on next
22:37 - you can select the location wherever
22:39 - you're at so if you're in some other
22:40 - locations
22:41 - like this one i'm currently here in this
22:42 - u.s central so i will click enable
22:50 - that's right
23:04 - okay great so i'm going to start my
23:06 - first color so collection guys is a
23:08 - database right it's a database table
23:10 - that's how i think about it right a
23:11 - table
23:13 - what's a table anybody know what a table
23:15 - is
23:17 - anybody know what a table is raise your
23:18 - hand if you know the table is well it's
23:20 - kind of like this
23:21 - if i have this kind of table i can have
23:24 - rows of different data in here you see
23:28 - boom rows see and every single row is
23:32 - another item maybe this could be an item
23:34 - this could be an item this could be and
23:35 - this could be an item
23:36 - every single row has certain data maybe
23:39 - this could be the name
23:40 - this could be the image this could be
23:43 - you know
23:44 - maybe the url this could be the price
23:46 - and so forth and it continues on and
23:48 - every single row has the same
23:50 - data you see the same data now i know
23:53 - what i'm showing is very visual
23:55 - but let's convert it to actual uh data
23:58 - i will click start collection and i'm
24:00 - going to say
24:01 - i'm going to say items items
24:05 - next okay so now we're going to create
24:07 - our one our first row of data
24:09 - in our case is called a document we have
24:12 - a document id
24:13 - which basically is a unique id that
24:15 - represents that
24:16 - piece of item okay i'm just like
24:19 - i'm gonna say hey let's auto generate
24:21 - that id and now i'm gonna give the
24:23 - fields that i need so first field is
24:26 - gonna be what
24:28 - image okay it's a string and what is the
24:31 - value of the image well
24:33 - if i go back to my uh shopping cart oh
24:36 - that's not working there oh it's okay
24:38 - it's okay no okay
24:39 - it's okay i got it i'll put live server
24:42 - hey let's go see oh so quick oh no
24:46 - wait which one nice
24:49 - good good good good nice job guys wait
24:52 - let me go and open this up with live
24:53 - server as well
24:55 - nice good good good the smell one so
24:57 - this is my other application
24:58 - i'm going to copy this image address and
25:01 - right here and again if it looks like
25:03 - here on youtube you can go ahead copy
25:04 - your image edges as well
25:05 - and maybe you can paste it in uh as well
25:07 - i might maybe keep pasting the image
25:09 - somewhere else as well so i'm going to
25:10 - paste the image for you guys right now
25:14 - boom it's there okay all right it's
25:16 - there
25:17 - and then i'm going to use that one all
25:20 - right
25:21 - and then i will go ahead and go to my
25:23 - amazon application
25:26 - my firebase and i'm going to paste that
25:28 - in here as well
25:29 - guys that's then we're going to add
25:30 - another field called name
25:32 - and this name is a very simple well it's
25:35 - apple macbook pro
25:39 - all right let's go back to our firebase
25:42 - right here
25:43 - give it up a pro next one's going to be
25:45 - we'll do make
25:47 - make and that's going to be apple okay
25:50 - next one after that is going to be which
25:51 - one it's going to be
25:53 - the rating okay
25:56 - so we have the rating rating
26:00 - and you give it a number but let's not
26:02 - make it a string but make it a type
26:03 - number so i'm going to say 4.8
26:06 - now i'm going to do 5.0 because i love
26:07 - mac so don't hate me
26:12 - all right and then i'm gonna give you
26:13 - the price of 1149
26:15 - as well so let's go to uh firebase back
26:18 - we'll say price
26:20 - that's going to be a number and we'll do
26:23 - five uh two
26:24 - one thousand one forty nine again it's a
26:26 - number guys okay
26:27 - there's a difference between strings
26:30 - strings
26:31 - and numbers okay a string is just a kind
26:33 - of like a string like
26:34 - you know you can use a string like
26:36 - nazari or the actual word
26:38 - it's a word basically a number is a
26:39 - number right
26:41 - click save and check this out guys we
26:44 - have our first
26:45 - document in the collection this is our
26:47 - first row
26:48 - over from a database now how do we get
26:51 - the actual data and let me know if
26:52 - you're still with me are you guys still
26:53 - with me kind of
26:56 - yeah you guys still with me somebody
26:58 - said i just joined it's okay good good
26:59 - samir nice job good good good nice job
27:02 - match up
27:03 - so we have this field right here that's
27:05 - awesome sweet
27:08 - so now what i'm going to do is i will go
27:10 - ahead and actually
27:12 - go to my amazon
27:15 - and let's see what we can do
27:18 - when we go to documentation you can see
27:20 - this is how we get the data
27:21 - give me the collection users.getdata so
27:23 - i'm actually going to copy this
27:25 - with the collection and i'm going to
27:27 - paste it in i'm not pasting it for you
27:28 - guys as well in the chat
27:31 - boom let's go to script.js and let's
27:34 - create a new function called
27:36 - function
27:39 - function get items
27:43 - okay so
27:46 - jesse can you explain to us what is a
27:47 - function
27:49 - so get items guys
27:53 - this function will get all of the items
27:56 - that are
27:57 - inside of firebase that nas just added
28:01 - so
28:03 - um what is a function but what is a
28:05 - function in general like what does a
28:06 - function do
28:07 - for some people who don't know what a
28:09 - function is in general
28:11 - what a function just in general yeah
28:13 - what is a function
28:14 - so here on line three guys
28:18 - this is called a function well actually
28:20 - more technical
28:21 - a function definition okay this is how
28:24 - you define the function
28:26 - and this function is called get items
28:30 - okay so what you call the with the
28:33 - keyword function
28:36 - you're saying basically to visual studio
28:38 - code
28:39 - hey the code is coming after that that's
28:42 - going to be a function
28:43 - so you're going to give that the name oh
28:45 - my light went out
28:47 - and you're going to give it round
28:48 - parentheses because that means
28:50 - it's a function okay then when you open
28:54 - up the brackets
28:55 - that means all of the code inside of
28:57 - those brackets
28:58 - are being executed when you call the
29:01 - function
29:02 - this code how do you call a function
29:06 - guess what very easy you just say
29:10 - get items
29:13 - parentheses yeah and you call whatever
29:15 - you want so if you wanna whatever you
29:17 - function this name you give
29:18 - that's the name you call here so if you
29:20 - wanna say hey get item
29:22 - or get random items yeah yeah for
29:24 - example if you call it say hello
29:26 - then this function also needs to be
29:28 - called say hello
29:29 - does that make sense guys with the exact
29:31 - same decks can i get a thumbnail from
29:33 - everybody
29:34 - good good good good good so let's go and
29:36 - change it to edit items now of course
29:37 - when we name functions we are very
29:39 - careful with how we name them because
29:41 - it tells us a lot about what the
29:42 - function is all about okay
29:45 - tells us a lot about that if we just
29:46 - name it randomly
29:48 - if we name it like this
29:50 - [Music]
29:52 - good luck understanding
29:59 - [Laughter]
30:02 - that's funny right there so look guys
30:06 - this is a function called get items and
30:07 - this item is we're doing a few things
30:10 - we have git items we're going to be the
30:13 - collection if we go to our firebase we
30:14 - have a collection called items you see
30:16 - right here
30:17 - so because of that what do you think
30:18 - needs to go inside here
30:20 - put in a chat guys what do you guys
30:21 - think needs to go inside here
30:23 - that's right items so users we're going
30:26 - to say
30:27 - items dot get that then there's gonna be
30:30 - query snapshot this is a function right
30:32 - here this itself is a function as well
30:34 - it's called an arrow function and then
30:37 - the query snapchat is actually just a
30:38 - list of something a list of items so if
30:40 - i do console.log
30:43 - query snapshot right i'm going to
30:47 - console.log here and i want to show you
30:48 - something so check this out
30:50 - before i'm going to count this out just
30:51 - so you can see it
30:53 - we're going to call this kit items now
30:55 - let's double check to make sure
30:56 - the script is inside it is html
31:00 - yep that's there that's all good so now
31:02 - if we open our amazon
31:04 - if we right click and expect element on
31:06 - here
31:09 - it says what db is not defined
31:15 - which is fine why do you think that's
31:16 - the case
31:19 - well i think it's the case why is it why
31:20 - do you think that's the case over db
31:22 - is not defined because we have a db
31:24 - right here
31:25 - db and then we have db inside
31:29 - here why is it the case what do you guys
31:31 - think
31:33 - i know why the ideas
31:37 - that's right maria we need to import db
31:39 - but because we're using just vanilla
31:41 - javascript
31:42 - for now that's right that means
31:45 - something is not
31:46 - connected you guys it's a good hunch
31:48 - because right now look at this
31:50 - it's firebase.js but are we including
31:54 - that
31:54 - that somewhere no
31:58 - if i look at my insta.html virus.js is
32:01 - normally be found in here
32:03 - you see it's nowhere so we need to
32:05 - include firebase.js i'm going to say
32:06 - script and we need to include it after
32:10 - we
32:10 - initialize firebase right here and we
32:13 - can include it before the actual
32:14 - script.js
32:16 - so you need to be careful on the actual
32:18 - in which order you put it
32:19 - in put it in so go to script source
32:23 - papa i'm going to say firebase.js
32:28 - save that there we go so now we have
32:30 - firebase.js in there which has the
32:32 - configuration file
32:34 - as well as the script.gs and now if we
32:36 - right click on this inspect element
32:40 - console oh see we don't have an error
32:44 - but we have a weird something it's like
32:46 - nm it's a delicate it's a fire star has
32:48 - dogs it's like a weird data you see that
32:51 - right it has got like a weird data
32:54 - right so well when i say about weird
32:58 - data what is the data well
32:59 - here's how it's going to work let's go
33:01 - back to script the gs
33:03 - all right what's going to happen is
33:06 - basically we have a query snapshot
33:08 - that's the query that's the actual
33:10 - the the data that we get from here
33:13 - we're going to loop through the query
33:15 - snapshot using it for each loop
33:17 - then we're going to update and showcase
33:19 - hey what is the id of the document
33:21 - and what is the data for that id because
33:23 - why
33:24 - if i go to my firebase this is how the
33:27 - documentation is telling us to use it
33:29 - the doc.id then dock the data this
33:32 - right here represents the actual id of
33:34 - the row
33:35 - element this is the actual data for that
33:39 - element okay let's save it
33:42 - let's go back to our amazon right click
33:45 - inspect element
33:47 - oh console oh
33:50 - look at that we my friends have got
33:54 - some data this is the idea of the actual
33:56 - data object the one that we showcased
33:58 - and this is the object guys that is it
34:01 - all right
34:01 - maybe you can also show it in the fire
34:03 - store nuts that's right so if i go to
34:05 - firestore
34:06 - here it is you see it says p7 p7gl
34:10 - that's the id the same data is going to
34:13 - be
34:13 - if i inspect element
34:17 - console right there gl
34:20 - so it's coming directly from the
34:22 - database
34:24 - that is so snapshot guys is basically
34:27 - making a snapshot of everything you have
34:30 - in your firestore
34:32 - and then looping through all of the
34:33 - documents all of the items that's right
34:35 - that's how you take a picture yeah by
34:38 - taking a picture
34:39 - click click click
34:44 - anyways right so there you go so we've
34:46 - got that okay we've got the data
34:48 - which is great right because we have we
34:49 - have this doc data that's all gray it's
34:51 - all it's all good and dandy
34:53 - but of course we're not done yet because
34:55 - now it comes the hard part we need to
34:57 - actually use something that's on the
34:58 - data well
34:59 - let's actually use the data we have the
35:00 - doctor data when you do first number one
35:04 - create the actual item so right
35:07 - let's do let items
35:10 - i'm going to say this in an array is
35:12 - equal to an empty array for now
35:15 - okay then when we are looping through
35:18 - this
35:20 - when we're looping through this i'm
35:22 - gonna do the following
35:24 - items dot push
35:27 - items.push right open up the parenthesis
35:32 - and what's going to happen is we're
35:33 - going to push an object into this array
35:36 - right and here's the object the first
35:38 - this object has an id
35:41 - of doc dot id comma
35:44 - and then this object has an image right
35:47 - here
35:48 - doc dot image oh two
35:52 - not duct id but dot data
35:56 - no yeah it is no that's right it's right
35:59 - that id
36:01 - dot data dot image
36:04 - right then we have what
36:08 - name so now we have donk dot
36:12 - data dot name you see we're grabbing all
36:16 - the data from the document
36:18 - that we got from the firebase then we
36:20 - have what
36:21 - we have um image name
36:24 - we have make doc
36:27 - dot data dot make
36:31 - comma what is the last one that we have
36:33 - guys reading
36:36 - okay this is what we have doc dot data
36:41 - right dot rating
36:46 - oh and one last one's gonna be price
36:49 - so price
36:54 - the doctor data the
36:57 - price oh that's a lot of properties
37:01 - there's a lot of properties guys you see
37:03 - we're grabbing the properties and so now
37:05 - if i let's take a look at it so now
37:06 - after we push all this let's console the
37:09 - console load the item so console.log
37:13 - items items
37:16 - boom right let's take a look at it right
37:18 - click inspect element
37:22 - console array oh
37:26 - look at that id make
37:29 - name price rating everything is
37:32 - right there you my friends have got it
37:35 - you see
37:36 - that's literally all we had to do right
37:38 - all we had to do guys
37:40 - that's it yeah right and now we're
37:41 - getting the data from i know
37:43 - from the database right that's it
37:45 - goodbye have a good day
37:48 - so guys now that we have the data
37:53 - what do we do with this data actually
37:56 - i'm really curious what you guys think
37:57 - here in the youtube chat yeah so
37:59 - let's see how because this is the logic
38:01 - of the app right
38:02 - so um your script the js is working
38:07 - once your index.html loads up okay so
38:10 - get items
38:11 - being called as you can see so the items
38:14 - are all getting retrieved from the
38:15 - firebase and then what
38:18 - we still don't see anything in the front
38:21 - end right
38:22 - what do you guys think what do you guys
38:24 - think
38:26 - put it in the chat
38:31 - anybody anybody having any idea buddy
38:35 - hey be an idea well okay
38:38 - basically now what we want to do is we
38:41 - want to
38:42 - take the items we have here and show
38:44 - them in the actual database
38:48 - see or show them in the actual html
38:51 - that's not going to be the hard part
38:53 - that's right samir
38:54 - show the linux index.html and this is
38:57 - where we're going to create a function
38:59 - and what should we call that function i
39:02 - think
39:02 - we should call it generate items
39:06 - okay and once we generate items guys
39:10 - what is the data that we need
39:13 - so what do we have to give as an
39:16 - argument
39:18 - well i think it's items jesse definitely
39:21 - items so this is the thing guys we have
39:24 - a function we want to call it a function
39:27 - called generate
39:28 - items and we give it an argument of
39:29 - items that said
39:31 - we got to of course make that function
39:35 - that's right let's call it
39:36 - again function
39:39 - boom generate items
39:43 - guess what takes one parameter now i'm
39:45 - going to call it different
39:47 - parameter okay so
39:50 - items and once we have items like nas
39:53 - said
39:54 - we have to loop through the items okay
39:56 - so items
39:57 - dot four each
40:00 - item arrow function bracket
40:03 - open because now i'm going to do
40:05 - something with each
40:07 - item
40:09 - [Music]
40:11 - what do we want to do with each item
40:12 - remember when we
40:15 - let me go back to index.html
40:22 - in the index.html remember we were
40:26 - in the main section deals correct
40:28 - [Music]
40:30 - right here main section products right
40:32 - here right exactly main section products
40:34 - that's right nice
40:35 - and as you can see each main product
40:39 - is actually the item that we're talking
40:41 - about
40:41 - [Music]
40:43 - so so there's actually there's actually
40:45 - two ways to do this jesse okay
40:47 - okay so one way to do this is going to
40:49 - be that we simply just put the html so
40:51 - let's take a look let's go and just test
40:53 - this out okay i want you guys to see
40:54 - here okay so look think about like this
40:57 - this is the html and i'm gonna
40:59 - use this html to put it using javascript
41:02 - just take a look at this i'm going to
41:04 - copy this whole thing
41:06 - okay copy pasta command
41:09 - c and and that's it let's go back to the
41:12 - gs
41:13 - the cool thing is here is the following
41:15 - i can do
41:16 - let items html
41:20 - okay and this is a really cool way to do
41:22 - to do using using vanilla javascript
41:24 - guys this is so
41:25 - cool right i'm going to loop through
41:28 - every single item
41:29 - and then for a single item i'm going to
41:31 - say item is html
41:34 - right plus equal to
41:38 - i'm going to use something called
41:39 - backticks they're called string literals
41:42 - right right here and then i'm going to
41:45 - use
41:46 - to paste the whole thing in that's
41:48 - exactly oh
41:49 - so you're going to concatenate you're
41:51 - going to paste it next
41:52 - that's right follow up to each other
41:54 - yeah that's right so i'm literally
41:56 - pasting the whole html
41:57 - but this is this can only be done if you
41:58 - use backticks be careful guys
42:00 - back ticks if you use normal quotes like
42:03 - this
42:04 - it's not going to work you have to use
42:06 - backticks and that's found on your
42:08 - keyboard somewhere on the left hand side
42:10 - right here
42:10 - on the corner right near the number one
42:13 - okay
42:13 - so you can do shift that one okay
42:16 - so back is our stream literals and what
42:18 - they allow us to do they allow us to
42:20 - kind of use a lot of things well
42:21 - the biggest thing allows to do is they
42:23 - allow us to switch this data out and
42:25 - actually use data we get from
42:27 - us a javascript object like item here
42:30 - so you can see right here she has item
42:32 - and then she's placing item.name
42:34 - into the actual text that's right
42:38 - then she's going to place item dot
42:41 - make into the actual text then she's
42:44 - gonna change the uh
42:45 - keep the stars there jesse no sorry
42:49 - okay just change the number change the
42:52 - number right here
42:55 - right there and the item.rating is going
42:57 - to change the price right here as well
43:00 - and that's going to call item.price you
43:02 - see
43:03 - that's right and that's it but it gets
43:05 - even better because
43:07 - then look at this what about the source
43:11 - well the source jesse right here right
43:14 - let's change under the source of the
43:15 - actual image jesse
43:18 - yeah yeah yeah this one here you can do
43:21 - the same thing again
43:22 - you can do boom that's right item
43:25 - dot image and the image again where's
43:28 - this all coming from because remember if
43:30 - i did console log of the items here
43:32 - right
43:32 - i do console.log
43:36 - log items right
43:40 - items i just want to show you so you
43:41 - guys can see it okay
43:43 - all right inspect element and this one
43:46 - console
43:48 - boom console array one
43:51 - what do you guys see right all this data
43:54 - and so this right here is one item okay
43:58 - and now what i'm what we're doing here
44:00 - is we're doing the following here this
44:01 - image
44:01 - is gonna go into here okay this make
44:05 - is gonna go into here hey this
44:08 - name it's gonna go into
44:12 - here hey this price is gonna go directly
44:15 - into
44:16 - here and then this rating gonna go
44:18 - directly into
44:20 - here do you see that yes or no right and
44:22 - that's it guys right
44:24 - and so because of that we've we're
44:25 - creating this html
44:28 - dinah makely dynamically
44:31 - all right and now and i want to add
44:35 - something to this by the way guys
44:36 - because the price
44:38 - is not just going to be number it needs
44:40 - a format of course
44:41 - okay so you can do that really easily in
44:43 - javascript but you can call you can
44:45 - use something called numeral we actually
44:48 - need to import the first gesture you
44:50 - need to import numeral first jesse
44:51 - oh right yeah yeah yeah yeah yeah yeah
44:52 - yeah yeah yeah yeah yeah yeah yeah yeah
44:53 - oh let's do that let's do it a little
44:54 - bit okay
44:55 - yeah okay let's do that later yeah yeah
44:57 - so that's right
44:59 - so good so then what i'm gonna do once
45:00 - we loop through this which is all good
45:02 - all good and handy we need to replace
45:05 - this html
45:06 - with what we need to replace whatever is
45:10 - inside this main section product with
45:11 - the html that we generate
45:13 - so for example i'm going to go to main
45:14 - section product
45:17 - right let me say the following outside
45:20 - this for each loop
45:22 - okay i will say document
45:26 - dot query selector
45:29 - selector okay i'm going to select the
45:31 - element
45:32 - dot main section product the
45:36 - inner html is equal to what guys what do
45:38 - you guys think put in the
45:39 - put in the chat what do you guys think
45:44 - what do you guys think here at line 25
45:48 - guys
45:49 - items html that's right so now what i do
45:52 - items html
45:56 - save that my friend and then that's
46:00 - it look we got ourselves the array
46:03 - that's looking good and let's see if we
46:06 - actually get the general item let's go
46:08 - ahead and remove this console log we
46:09 - don't need this anymore
46:11 - this generate items right here is
46:14 - being called through here this items
46:17 - gets the data
46:18 - and then we actually create the items
46:19 - using html and so now if i simply just
46:22 - go
46:24 - oh look at that this is the data that's
46:27 - coming directly from a database guys
46:30 - directly from a database
46:34 - because that means if i simply just
46:36 - remove if i go back to
46:37 - minus html if i remove the whole main
46:39 - product thing
46:41 - this whole main product right remove it
46:44 - so there's nothing inside me such a
46:45 - product
46:46 - save it look it's
46:49 - there because why it's in the database
46:53 - so for example right that's right if for
46:55 - example i want to add a new document
46:56 - let's just say i want a new
46:57 - document i'm going to say image image
46:59 - let's just add a new document here guys
47:00 - ready
47:01 - let's do it right now let's join title
47:03 - switch copy image address
47:07 - paste the value here add field name
47:11 - also nintendo
47:15 - yo switch okay yeah field
47:18 - make make nintendo
47:24 - rating uh 290
47:28 - waiting is gonna be two four point seven
47:33 - two ninety minutes uh it's a high
47:36 - ratings make it also into a number
47:39 - let's give it a 290 number
47:42 - save right so now we have two products
47:45 - and now if i go to my amazon
47:47 - and i refresh it oh
47:53 - you see it's right there but you can see
47:56 - now this tells us that oh
47:57 - doesn't work you know it doesn't work
48:00 - very well
48:01 - you know because now we have two
48:04 - products
48:05 - so we can fix that really easily if we
48:07 - go back to where if we go to main
48:09 - section product
48:11 - we just simply change this right here
48:13 - main such a product to be flex
48:16 - save that and that's it of course right
48:19 - and then let's go ahead and maybe add a
48:21 - margin right to the actual thing so if i
48:23 - go to back to my
48:25 - script.js let's do a margin right on the
48:28 - actual main product so
48:30 - mr-5 save that oh
48:34 - you see now it's spaced out very evenly
48:36 - you have this item
48:37 - this item and this is coming directly
48:40 - guys from a database
48:41 - nowhere else how cool is that
48:44 - that's pretty sweet that's pretty
48:46 - awesome all right
48:48 - we've got ourselves the main product
48:52 - all right beautiful okay all right
48:53 - beautiful the next thing to do is let's
48:56 - go ahead and actually make this add to
48:57 - cart button work
49:00 - let's add the card button all right so
49:02 - that we actually add card items
49:04 - all right jesse you want to get started
49:06 - on the add to cart button
49:08 - yeah for sure oh you okay oh
49:11 - yeah jesse her camera just went down
49:13 - just oh my god
49:14 - i'm here still is she alive yeah it just
49:16 - is alive
49:18 - jesse didn't die no no please not
49:23 - awesome so where are we at now we
49:26 - have generated the items guys
49:30 - isn't that cool so i would say
49:34 - hmm what's up next well like i said
49:38 - we want to make sure that we have that
49:39 - to cart we're gonna make sure that the
49:41 - card is working yeah if we add something
49:45 - add to cart
49:46 - we want notification at the at the top
49:50 - that orange cart we want that to you
49:52 - know give the number
49:54 - of items that's right that's right
49:57 - plus we also want to if we go to our
50:00 - cart
50:01 - we want to see the products that we
50:02 - added to the cart
50:04 - that's right right here which we don't
50:06 - see right now
50:08 - no because this is static
50:11 - okay well we coded up yesterday that's
50:13 - right exactly hey
50:18 - jesse yeah i was gonna say okay now i
50:22 - guess i'll just continue
50:23 - okay so then what's gonna happen is we
50:26 - have
50:26 - the add to cart guys okay um now
50:30 - the hard thing understood we understand
50:32 - is
50:33 - we need to do something with javascript
50:35 - in with this button
50:38 - and react.js this stuff is pretty easy
50:40 - to make that work because you're just
50:41 - buying the actual thing
50:43 - but unfortunately with javascript is not
50:45 - as easy okay
50:46 - with vanilla javascript but this will
50:48 - show you how this needs to be done
50:51 - when you go underneath the hood
50:53 - underneath the hood
50:54 - this is actually how react gs works
50:57 - so in order to make this fully work it's
51:00 - going to be a little bit more tricky
51:02 - than we thought all right
51:04 - and how is that the case well let's take
51:06 - a look at it
51:08 - we need to make this button function
51:10 - when we click add to cart we need to
51:12 - know
51:13 - what card to add or what item to add but
51:16 - it gets a little bit tricky because how
51:17 - do we get this data
51:18 - once inside the html the data is inside
51:21 - the items right the actual items which
51:23 - is
51:23 - an array so to fix that
51:28 - we're going to create an actual element
51:31 - check it out
51:31 - okay and just pay attention here just
51:33 - pay very close attention don't worry
51:35 - so much not
51:48 - own documents or available own elements
51:51 - html element
51:53 - create element okay and this is an
51:56 - element going to be a div element
51:59 - all right document not this is horrible
52:03 - right there okay document underneath
52:07 - that we're going to say hey you know
52:08 - what doc
52:09 - that class list we're going to add all
52:11 - the classes of the actual main product
52:13 - dot class list dot add
52:19 - i'm going to add all the classes again
52:20 - this is using javascriptionality i'm
52:22 - going to say hey
52:23 - you see just how we have main product
52:25 - we're going to add the main product
52:26 - inside here
52:27 - so main dash product
52:31 - comma then we have mr
52:35 - margin right five
52:38 - right and then we have what um honestly
52:41 - on that that's pretty much it
52:43 - i want to say yeah that's it i'm
52:45 - identified that's all the ones we got so
52:46 - far
52:48 - so to create this document right it's
52:50 - nothing so far
52:52 - because all everything else is still
52:53 - working
52:55 - but here's the cool part inside here i
52:58 - want to say
52:58 - doc dot inner html
53:02 - is equal to the following also backticks
53:06 - we're going to take everything that's
53:08 - inside here
53:09 - this div product image right command
53:14 - exit cut it put it inside the dock
53:19 - yeah so we're going a little bit deeper
53:21 - guys
53:22 - it's going to be a little bit harder now
53:25 - but that's okay all right
53:28 - let me make sure that we have that okay
53:30 - there we go so now inside here we have
53:33 - that we create this div
53:34 - we have inside that we have the product
53:36 - image you know the product name
53:38 - all that stuff that's looking pretty
53:39 - good
53:41 - but what we're going to change now
53:42 - that's going to make this whole thing
53:44 - worth it is actually going to be
53:46 - the add to cart because you see how we
53:47 - have at the card is just an html element
53:49 - which we can't really do anything right
53:51 - now because to a string we can't
53:53 - do an event listener to a string
53:57 - all right so i'm going to default i'm
54:00 - going to say
54:01 - let add to cart element and i'm going to
54:05 - create a new element i'm going to say
54:06 - document
54:08 - dot create create element
54:12 - boom i'm gonna say this is a div
54:16 - okay all right and then i'm going to add
54:20 - all of these little uh kind of class
54:23 - list
54:23 - to it separately so i actually have this
54:26 - html right here
54:27 - or this javascript here so add to cart
54:30 - element
54:31 - that classes.ad the same thing is did it
54:34 - here
54:35 - we're do we're doing the same thing here
54:38 - i can copy and paste this
54:40 - oh what happened here there we go i'm
54:43 - going to copy and paste this for you
54:45 - guys so you guys can have it inside the
54:46 - zoom chat
54:49 - boom right there and that's it
54:53 - okay now we're not done yet because we
54:56 - have this add to cart element that's all
54:57 - good no problem
54:58 - right then check this out what we're
55:01 - gonna do is we're gonna say hey you know
55:02 - what the inner text this one add
55:04 - to cart element the inner text
55:08 - is equal to add
55:11 - to cart basically we're replacing this
55:14 - whole
55:15 - div as a string to an actual html
55:18 - element all right
55:22 - and this is where it gets really
55:23 - interesting because now look at this i
55:26 - can say the following
55:27 - doc which is the whole main product
55:30 - which is this one
55:32 - doc dot append child
55:36 - add to card element right
55:40 - oh good nothing crazy right nothing
55:41 - crazy
55:43 - but it gets even better because now look
55:45 - at this i say document
55:48 - remember this right here query selector
55:49 - i'm going to say document
55:53 - the query selector main section products
55:56 - that
55:56 - append child
56:00 - and then append child the actual doc
56:03 - which is this whole doc that we just
56:04 - said right here boom
56:06 - a pen child save that we can remove this
56:09 - inner html stuff
56:11 - save that and look it's there right we
56:15 - have add to cart
56:16 - you know right and so forth why do we
56:18 - have multiple out the cars because we
56:19 - have this add to cart it says html
56:21 - and we also have it here so let's go
56:22 - ahead and remove that
56:25 - save it and right there it's looking
56:27 - pretty good the same as before
56:29 - and so i know what you're asking
56:30 - probably at this point like nas didn't
56:31 - we have this before
56:32 - why are you telling us all this
56:34 - complicated stuff with the
56:36 - you know create element and and that's
56:37 - it well
56:39 - there's a few reasons because now i can
56:42 - go back okay
56:45 - because i have access to the actual
56:46 - element i can create event listeners
56:49 - you see it looked the same as before but
56:51 - before just a string
56:53 - this time it's an actual object and i
56:55 - can work with objects but i can't work
56:56 - with strings
56:58 - and so if i that's right if i go ahead
57:01 - and do this and i
57:02 - say hey add to cart
57:05 - add to cart element dot
57:09 - add event listener this allows us to add
57:12 - an event click listener
57:14 - i'm going to say on the click of this
57:16 - button
57:18 - comma okay
57:21 - i'm going to create a function like this
57:25 - boom and inside the function i'm going
57:27 - to call
57:28 - a function called add to cart and i'm
57:31 - going to pass in the actual item
57:35 - so the whole item data which is this
57:37 - item data
57:39 - is going to go directly into the add to
57:41 - confessionality and we're going to
57:42 - create the function at the card right
57:44 - now
57:45 - function add to cart
57:50 - boom of course it takes in one item
57:54 - save that that's it and now i'm going to
57:57 - console log
57:58 - right here console.log
58:02 - right add to
58:06 - cart clicked
58:09 - and then i'm going to show what data are
58:11 - we actually passing in
58:12 - console.log item
58:17 - boom now here's the cool thing add to
58:22 - cart is there
58:23 - beautiful add to cart is here
58:27 - let's see what's going to happen inspect
58:29 - element
58:33 - console log click add to cart
58:39 - oh look at that add to cart is clicked
58:43 - and here's the data that we clicked we
58:45 - clicked on the nintendo switch
58:47 - because i can now get the data i can
58:50 - pass it into our database okay otherwise
58:52 - i wouldn't be able to guys
58:54 - i cannot just pass in a string of html
58:57 - into database and then let the database
58:59 - figure out hey i'm gonna use this data
59:01 - this data and this data
59:02 - it does not happen i
59:06 - have to use actual data like
59:09 - strings you know right here like numbers
59:13 - that's why i had to create the whole
59:15 - create element thing
59:16 - otherwise i wouldn't be able to do it
59:20 - okay does everyone does that make sense
59:22 - guys i know this is a little hard to
59:24 - grasp but
59:25 - it's it's something we need you guys
59:27 - need to understand kind of sometimes
59:30 - okay because we now have this okay we
59:32 - have we're getting this data inside here
59:35 - we can do something with it okay and
59:37 - what can we do
59:39 - well let's figure out how do we actually
59:40 - add data to a firebase database
59:43 - so let's think about it so if i go
59:46 - to add data right here but we see it
59:49 - says add data
59:50 - that's exactly how we're going to do it
59:51 - but we're going to do a little bit a
59:53 - little bit differently
59:54 - because i'm going to say the following
59:58 - i'm going to say okay so db the
60:01 - collection
60:04 - the collection okay i'm gonna say
60:07 - you know i'm going to give the
60:09 - collection called the cart item
60:11 - card items okay
60:14 - that document so i'm going to create a
60:18 - new document that we're using
60:20 - with the id of item dot id
60:24 - okay so i'm going to create that right
60:26 - now so let
60:28 - card item
60:31 - db the collection id so i'm gonna do
60:33 - that right now
60:34 - actually let's do that kind of like this
60:36 - i got id
60:37 - and then i'm going to do um
60:39 - [Music]
60:41 - dot document dot i wanna say
60:44 - set data id i'm gonna do
60:47 - dot set right same thing
60:51 - to set the data and now here's the data
60:54 - okay the data is going to be what well
60:57 - first thing is going to be
60:58 - image right item.image
61:04 - that image comma then we have
61:07 - make item.make
61:14 - right then we have name
61:19 - item.name
61:22 - thank you jesse rating item that rating
61:27 - that's right then we have right uh
61:30 - quantity and already price but we also
61:33 - have to include the quantity remember
61:35 - how much quantity are we actually giving
61:36 - it right well let's think about this
61:38 - right
61:39 - let's do a quantity oh jesse
61:42 - a zoo quantity of just initially one we
61:45 - click add to card we're just any
61:46 - quantity of one
61:48 - item that quantity yeah right there
61:51 - that's it right set the price we have
61:53 - the rating we have the name
61:54 - make although that the question card
61:56 - items that dock item id
61:58 - and so forth all right but this is where
62:01 - it gets a little bit trickier
62:03 - because what i want to do is the
62:05 - following okay
62:08 - i'm going to go back to my uh
62:11 - amazon application inspect element
62:14 - and then let's test out what's going to
62:16 - happen console
62:18 - add to cart nothing
62:22 - all right well hold on let's go to our
62:25 - amazon database
62:27 - oh we have to make the collection of
62:29 - card items
62:30 - um not necessarily actually not
62:33 - necessarily
62:35 - necessarily because let's think about
62:38 - this
62:39 - card item dvd collection card items let
62:42 - me remove this portion right here
62:46 - that's set um
62:51 - id let me try one more time was it not
62:55 - add let me try it
62:58 - nothing let me try it one more time
63:00 - let's go inspect down but on this one
63:06 - console
63:07 - [Music]
63:12 - i think it's because we need to use dot
63:14 - ad so let's do that add
63:16 - oh let's do that add like this but i
63:18 - want to use a specific id so i
63:20 - kind of want to do that document item
63:22 - that id let me see
63:28 - so log oh are we give
63:33 - the item id or we giving the item
63:36 - we're giving the whole item oh yeah no
63:38 - the whole item so let me see so
63:40 - we're gonna do uh yeah console.log item
63:44 - when we click on it let's see
63:47 - okay amazon inspect element on this one
63:56 - console add to cart
63:59 - okay so it's adding to cart it's
64:01 - actually functioning
64:02 - but it's not doing the way i kind of
64:04 - want it to work mainly
64:06 - [Music]
64:10 - i i do think that that we need to add a
64:12 - collection called card items otherwise
64:14 - he doesn't know
64:15 - to which collection to add a document
64:17 - correct
64:18 - yeah i think we're going to do okay so
64:20 - in that case
64:26 - otherwise we first have to make a new
64:27 - collection
64:30 - joe you're doing that's good joe i like
64:32 - it that's good that's good so you're
64:33 - right
64:34 - so let's see so at first i want to just
64:37 - show you guys what if we did it just
64:38 - simply this way just that ad okay
64:40 - so i just said simply did that add
64:45 - that ad just how they have it here
64:48 - okay command c
64:51 - you know oh let me do this let me see
64:55 - hold on
64:56 - add to firestore
65:00 - with a with a custom id
65:07 - let me see so the duck and that's set so
65:10 - right there did we like collect the car
65:11 - items
65:12 - that dock
65:16 - let me see that should that should still
65:18 - tell you where that dog
65:21 - but then you're giving yeah you have
65:24 - yeah
65:24 - dog item id the dog
65:28 - item does id
65:32 - and the make and then you can use set if
65:35 - you like probably
65:36 - let me see the set
65:39 - that should work actually i'm not sure
65:41 - what that looking let's see command c
65:44 - let's see inspect element
65:51 - oh
65:56 - console yeah database
65:59 - nothing
66:03 - am i looking the right yellow base by
66:04 - the way oh
66:06 - it just didn't refresh oh it was working
66:10 - the whole time guys look at this
66:12 - i know i'll come on fire but i do think
66:16 - it's because you added the
66:17 - doc item id and no it was there it was
66:20 - there it was there the whole time
66:21 - actually
66:21 - oh so yeah so look we are creating a new
66:24 - document
66:25 - specific id which is this id28m and then
66:28 - we're sending the data for this right
66:30 - and so here it is it's showing up
66:31 - right here guys okay right here which is
66:34 - perfect exactly we want
66:35 - but of course here's the issue when i
66:38 - click add to cart here guys
66:41 - the issue is it's just going to add one
66:44 - quantity it's gonna
66:45 - it's gonna replace that one thing again
66:48 - and again and again
66:49 - look see look we also have another and
66:52 - again it's always gonna be quantity one
66:55 - but
66:56 - shouldn't we if we for example
67:00 - if i click add to cart shouldn't it add
67:02 - the quantity one plus one plus one plus
67:04 - one
67:05 - can i get a thumbs up if you guys agree
67:06 - with me on that one yeah
67:08 - right so it should be plus one
67:12 - on the quantity that's already there but
67:15 - here's the question
67:16 - what if the iron item does not exist
67:18 - inside the card item
67:20 - what if it does not exist this is weird
67:23 - well
67:23 - you have to check first if it's new
67:25 - that's right so you have to be a little
67:27 - bit smaller now at this point
67:28 - that's right right so what we're gonna
67:31 - do is a little bit different now
67:33 - we're going to grab that dock right here
67:37 - okay listen up we're gonna do card items
67:41 - i'm going to say let card item
67:45 - ezekiel do the clutch the card so
67:46 - basically we're going to grab a specific
67:49 - card item based on the item id
67:51 - okay we're going to say card item
67:54 - dot get right they're just gonna get it
67:58 - and then that then on the card item
68:02 - and then we'll do a function right
68:05 - like this now there's a lot of
68:07 - complicated stuff but don't worry we'll
68:09 - do doc
68:11 - okay and then inside the dock a few
68:14 - things we can do we can say check the
68:15 - following we say
68:16 - if doc exists
68:20 - dot exists basically if it's if that
68:23 - already exists
68:24 - right meaning we have already added our
68:27 - first quantity to the cart
68:29 - then what should we do what are we going
68:32 - to do
68:34 - plus one on top of that if you don't
68:36 - want we will do a card item
68:38 - dot update right
68:41 - the update that update i'm going to say
68:45 - update the quantity we'll do quantity
68:48 - right quantity and we're going to get
68:52 - the current doc
68:53 - theta right there
68:56 - the quantity plus one
69:01 - plus one right there you see so we're
69:04 - gonna up
69:05 - if the basically if card exists it's
69:07 - like this right
69:08 - it's like this kind of like this
69:12 - if item exists
69:16 - exist right add quantity
69:22 - to t to current one
69:26 - otherwise
69:32 - otherwise
69:34 - create a new card item
69:38 - okay that's the functionality that's the
69:40 - pseudo code and that's it guys
69:43 - so we have the if doc exists else
69:46 - meaning it does not exist yet it's a new
69:48 - one that we're going to add
69:50 - i'm going to say caroline.set like this
69:53 - boom boom card iron.set
69:58 - the image the make the name the price
70:00 - the rating
70:01 - and of course it's going to start up
70:02 - with quantity one but once it's there
70:05 - it's always going to increase the
70:06 - quantity plus one plus one
70:08 - plus one you guys got it so let me go
70:11 - and save that and let me show you guys
70:12 - how that works
70:14 - so at the cart let me see
70:18 - let's look at this now the quantity is
70:19 - one two
70:21 - you see right there let me show you i'm
70:22 - gonna show this to live to you guys
70:24 - i want you guys to watch this portion
70:26 - right here watch this
70:28 - quantity as i increase it on my end
70:33 - three four five six seven
70:36 - eight nine a ten that's a lot of
70:39 - nintendo switches
70:42 - how cool is that you guys did it it is
70:45 - now in a database
70:46 - and that's it right and if i add a new
70:49 - idea for example this is a macbook pro
70:51 - right
70:52 - look at the cart you see it just
70:54 - appeared right here
70:55 - and now this one started out with a
70:57 - quantity of one
71:01 - that's it right so again add the card
71:04 - one
71:04 - two three four five six assembly and
71:08 - nine and then
71:08 - you see the quantity is now increasing
71:13 - that's it my friends so we've done that
71:17 - and that's pretty pretty pretty much it
71:19 - which is really cool let me go and
71:20 - remove this set because we need a set
71:22 - right here
71:23 - right here right save that and our
71:26 - active card functionality is now working
71:28 - and it's working pretty darn good
71:33 - so now what we can do now we have the
71:35 - add to cart we have the generate items
71:37 - regain the data from there just see
71:41 - what's next jesse tell me hmm what's
71:44 - next what next what's next where
71:48 - you want to write that notification
71:50 - function or
71:51 - shall we go to the cards html let's make
71:54 - this notification
71:55 - i can work awesome so
71:59 - that means so what does that
72:01 - notification actually say guys put it in
72:04 - the chat
72:04 - what does it say what does it represent
72:07 - i want you guys to start thinking about
72:09 - that
72:12 - what does it represent
72:16 - it represents the amount of items that
72:19 - we have in our cart
72:20 - so the amount that we added the total
72:23 - amount
72:24 - correct so if that's right monique
72:30 - exactly monique number of products in
72:33 - cart
72:34 - very well so let's go to
72:37 - our index.html okay and let's
72:40 - look up that um that card
72:44 - and as you can see on i believe
72:48 - on line 45 nas has made that beautiful
72:52 - comment there
72:53 - of card icon okay and indeed
72:56 - on line 48 that's exactly
72:59 - where we're going we're going to be
73:01 - working with that because here look
73:03 - we have a hard-coded one there
73:07 - but it should not be hard-coded right
73:08 - it's dynamic because it represents
73:11 - the whole um everything that's inside of
73:14 - the items
73:16 - so nas what's the functionality we
73:18 - should write for that
73:19 - so let's create the functionality to
73:21 - actually get the card items
73:23 - right get the card items that's right
73:25 - and get the card items
73:27 - and then let's try the functionality to
73:29 - where
73:30 - we can actually you know generate that
73:32 - amount of quantity
73:34 - now because we're going to be smart
73:35 - about this you see we have card.html
73:38 - that both have the same data cut the
73:40 - html index.html right
73:42 - they both have the header we're going to
73:44 - create our own javascript
73:46 - file called called head.gs so let's do
73:48 - that header
73:50 - dot js all right
73:54 - and this header.js is going to be shared
73:56 - by
73:57 - the card.html and index.html
74:00 - all right that's right so let's go ahead
74:03 - and do that let's go ahead and go to
74:04 - index.html
74:05 - and let's include head.gs so inside here
74:09 - we'll do script source
74:13 - is equal to header dot gs
74:17 - boom done all right so let's include
74:19 - instead of html and it's included
74:21 - inside this card.html as well
74:24 - in both pages guys that's right so let's
74:28 - do it like this
74:29 - script source
74:33 - right cart um
74:37 - header dot gs boom in both pages
74:40 - all right yes that means now let's go to
74:43 - header.js and the first function we need
74:45 - to create is going to be
74:47 - a get card items
74:50 - so that's right thank you jesse so get
74:52 - the card items and this going to get the
74:54 - card items from an actual database
74:57 - right and what is that database guys
75:01 - guess what the collection that we
75:03 - already have
75:04 - that's right cards items by the way guys
75:08 - make sure that this
75:09 - cart items is exactly written the same
75:11 - way as
75:12 - the collection is called in firebase
75:14 - okay otherwise you're not able to
75:15 - retrieve
75:16 - the data okay so
75:20 - that said let's continue again
75:24 - i want to know what's inside of the fire
75:26 - store i want to know all of the items
75:28 - that are
75:29 - inside of it so i'm going to say on
75:31 - snapshot
75:32 - that's right but look at check this out
75:34 - on snapchat is a little bit different
75:36 - than what we had before if you go to
75:37 - script ngs
75:38 - you see before to get data we used the
75:41 - get.then
75:42 - let's try that right now and then we'll
75:44 - talk about what on snapchat works
75:46 - so let's see yeah that's a good one
75:48 - that's a good one
75:49 - so first get okay which is a function
75:52 - first function and then
75:54 - then so we're going to wait whoops not
75:56 - touch event
75:57 - then okay
76:01 - and then we're going to wait what was it
76:04 - quick query snapshot that's right so
76:06 - let's do query snapshot
76:08 - query snapshot right here okay
76:11 - that's right and just how we have it
76:13 - inside here this for each loop okay
76:16 - inside the for each loop let's go and
76:17 - open this up uh one second jesse
76:20 - one second so be careful with that
76:22 - because i need to create
76:23 - you to put into a function oh sorry
76:25 - sorry right so
76:26 - inside the query snapshot we're going to
76:28 - loop through that just how do we we did
76:29 - it before it's no question i'm sure that
76:31 - what for each right here
76:35 - oops not like that four each right for
76:38 - every single element
76:40 - we're gonna grab the dock right
76:44 - right there and of course we'll get the
76:47 - card items but
76:48 - now let's be smart about this because
76:51 - look
76:52 - we have the quantity you guys tell me
76:54 - how do we figure out
76:56 - what is the total of card items inside
76:59 - the card
77:00 - because it's definitely not two
77:04 - what is the equation we need to use to
77:07 - figure out what is the total amount of
77:09 - card items inside the card it is not two
77:12 - what is it guys well the first
77:16 - we have 14 nintendo switches
77:21 - okay i think how many macbooks do we
77:24 - have
77:24 - which is going to be 10.
77:28 - so that's 24. that's right but what i do
77:31 - know
77:31 - is that with the query snapshot we made
77:34 - a snapshot of all the items so we're
77:36 - looping through each document
77:38 - so nintendo switch and mac
77:41 - and from each document what do i want to
77:43 - get guys
77:45 - yes the quantity that's right so
77:48 - i think we should make like a variable
77:50 - called count
77:52 - total count and of course we're always
77:54 - gonna start off with zero
77:56 - so total count indeed and then we're
77:59 - going to say
77:59 - total count
78:02 - plus equal to the quantity of
78:07 - each document so doc data parentheses
78:10 - dot quantity
78:14 - [Music]
78:15 - so that way when we're looping through
78:18 - all the documents we're adding up the
78:20 - quantity of
78:21 - each document each card item makes total
78:25 - sense right
78:26 - that's right then of course now that we
78:28 - have that number
78:30 - next thing is of course that we have to
78:32 - do something with that number but let's
78:33 - first log
78:34 - our total currency of our calculation is
78:36 - correct
78:37 - let's go and call our function called
78:39 - get card items
78:42 - save that inspect alma on this one
78:47 - so guys the answer should be here 24
78:53 - [Music]
78:57 - let's go michael there we go that's what
78:59 - i'm talking about are you are you in the
79:00 - library again
79:03 - nice beautiful so we got that right it's
79:07 - 24 because why we just added the
79:09 - quantities together but of course now we
79:11 - need to we need to do something with the
79:12 - quantity right
79:14 - we need to actually change this data
79:17 - right here
79:19 - that's it yeah so just like we were
79:21 - generating card items or you were
79:23 - generating items
79:25 - we also
79:28 - you know need to set the counter so
79:31 - indeed set card counter
79:33 - and then give it total count
79:37 - that means also we gotta write a
79:39 - function called
79:40 - set card counter of course
79:44 - with the total count
79:48 - okay and now let's look in our
79:51 - what was the class again where we had
79:54 - that little one
79:55 - where we had that heart coded let me
79:57 - show you a card icon it is called
79:59 - cart item number aha here guys on
80:02 - line 49 cart item number
80:07 - so we're gonna get this class and look
80:10 - now we got the hard-coded one inside of
80:12 - there but if we go back to our header.js
80:16 - let's add that in and say exactly
80:20 - document.queryselector
80:26 - and we're going to select the card item
80:28 - number class
80:29 - and then we're going to change the inner
80:31 - text tada
80:34 - with total count
80:39 - that's it guys hey let's go
80:45 - hey that's a big win for us look 24
80:48 - just the way it should be 24 right
80:53 - now in the um index.html you can remove
80:57 - that one
80:59 - okay you can remove that one so if you
81:00 - go to any html
81:03 - remove that one we don't need that
81:04 - anymore sign up baby
81:06 - let's go let's go let's go back to
81:09 - head.gs
81:11 - okay and let's see this so so let's take
81:13 - a look at this okay
81:15 - so if i an add to cart let's do add to
81:17 - cart
81:18 - see i click add to cart but
81:19 - unfortunately it's not showing
81:21 - a new number i need to refresh in order
81:24 - for it to show 27
81:25 - because i clicked it three times oh yeah
81:29 - so it's now real time right now but this
81:32 - is where it's a trick for us
81:33 - we need to make a real time that's right
81:36 - we need to make a real time
81:39 - so the real time here nas is that
81:42 - you know when we're adding something to
81:44 - the cart when you're pressing that
81:45 - button
81:46 - we said right we're gonna add something
81:48 - to firestore that's right
81:50 - and then the cart is actually getting
81:52 - the items from a firestore however
81:55 - it only does that when you refresh the
81:57 - page again
81:59 - but firebase can help us a little bit
82:00 - with that
82:02 - right that's right so let me see db
82:05 - okay let me see you guys you can type
82:08 - jesse go heck i'm going
82:09 - okay so db collection
82:13 - and now i'm gonna use the on snapshot
82:15 - function of
82:16 - firestore so instead of first getting it
82:20 - and then waiting for it till i got it
82:22 - i'm gonna remove this okay i'm gonna
82:25 - remove this line
82:26 - and i'm gonna say on snapshot
82:30 - and not query snapshot but just snapshot
82:34 - okay and
82:38 - that's it well no that's not totally it
82:40 - here snapshot
82:42 - for each now what is it that snapshot
82:45 - does
82:45 - on snapshot has something called an
82:49 - event listener so when something changes
82:52 - inside of the firestore firebase knows
82:55 - that
82:56 - and then it will just pass the data
82:57 - through and say like hey something
82:59 - changed in my database maybe
83:01 - um you need to keep track of that
83:04 - so to give you a technical term guys
83:05 - this is called the websocket
83:09 - all right this is called a web socket
83:14 - when you on snapchat it's going to
83:16 - create a websocket so really what's
83:17 - happening here is add to cart
83:19 - and you click on that that adds
83:21 - something to a database
83:23 - because we have a consistent web socket
83:26 - it's called it's like you have a kinesis
83:28 - for example it's like me have always
83:31 - having you know you guys ever
83:33 - used uh for example anybody use those
83:36 - cups you know what they're called those
83:37 - uh listening cups you know those like uh
83:39 - what are they called
83:40 - yeah one cup you put a strawberry you
83:41 - have a rope in between and then you can
83:43 - listen to somebody
83:44 - yeah yeah yeah yeah that's right that's
83:45 - right that's right that's right so right
83:48 - every time we do we do that right
83:50 - between the cup
83:51 - it's like you're always listening to the
83:52 - database that is what's called a
83:54 - websocket
83:55 - you're listening to any changes inside
83:57 - the database so what's happening here
84:00 - when you click add to cart because we're
84:01 - using on snapshot
84:03 - this gets triggered every single time
84:06 - something inside the database to the car
84:08 - items trick gets triggered
84:10 - and then that sends the update back to
84:13 - us to the amazon clone
84:15 - that's why you can do on snapshot here
84:18 - and then you can do snapshot.docs
84:22 - for each and this will always be updated
84:26 - every time you change something in a
84:28 - database all right
84:30 - so let me show you how exactly that
84:32 - works
84:34 - let me save that oop save that
84:37 - if i go ahead and click add to cart i
84:39 - want you to pay attention right here
84:40 - everybody ready pay attention
84:42 - are you guys ready for this you guys
84:43 - ready zoom in zoom in though
84:46 - uh well if i zoom in then it won't you
84:47 - won't see the me click at the cart
84:49 - so okay pay attention to here
84:52 - three two one
84:56 - are you ready let's see
85:00 - oh look at that boom boom boom
85:03 - boom boom it's working automatically
85:06 - this is a real-time database now
85:09 - you have a real-time connection to
85:12 - the database now so nas can you show
85:15 - that again with the coding screen
85:17 - oh there's no coding screen it's there
85:19 - no
85:21 - this one it's right here right jesse on
85:25 - youtube
85:26 - it's just our facebook i keep always
85:27 - forgetting about the youtube thing all
85:29 - right
85:30 - oh man sorry youtube so guys right so
85:33 - like i said we have the card items right
85:34 - here
85:35 - right we have the snapshot because we're
85:37 - using snapshot it's got it's like always
85:39 - having the connection right
85:41 - and if i do it again at the card one two
85:44 - three
85:44 - four watch this one
85:47 - two three four five it's always there
85:51 - and it's always going to be updated who
85:53 - found the really cool guys
85:54 - i always find this really cool anytime
85:56 - this is a real-time situation i'm always
85:57 - like
85:58 - [Applause]
85:59 - [Music]
86:00 - you can do that you can do that in
86:02 - coding of course you can't coding is
86:04 - cool
86:05 - so there you go rehearsing is the best
86:08 - we have our functionality
86:09 - to add to cart okay so before we get
86:12 - into the actual card that you asked the
86:14 - card you know the actual card um
86:16 - app i want to do something really small
86:19 - right now
86:20 - and i wanna you see how kind of right
86:22 - now when i make something smaller
86:24 - it's kind of like um it feels weird
86:27 - you see how this goes outside the box
86:29 - right there you see
86:31 - i don't like that way too much right so
86:34 - let's make that change right now because
86:35 - i want to make it clean
86:37 - all right so to make that clean i
86:39 - actually want to make sure that this
86:41 - whole thing grabs
86:42 - down to the bottom okay
86:45 - we'll make sure it wraps down to the
86:46 - bottom so let's go back to our inner
86:48 - html all right
86:51 - let's go to our categories
86:56 - right there cyber uh not those
86:57 - categories
86:59 - popular categories which are uh
87:02 - da here
87:06 - these categories right here right and
87:09 - what do we know well in order to make
87:11 - sure that it actually fully wraps around
87:13 - we're going to say flex dash rap
87:16 - boom see when we
87:20 - because we decreased it wrapped the
87:21 - second line otherwise it's just going to
87:24 - keep going one line all the time like
87:26 - strap but because of that problem
87:28 - because there's a padding on the left
87:29 - hand side of every single element see
87:31 - when i when i look at this here
87:33 - there's a margin left and every single
87:35 - element let me show you here see margin
87:36 - left six right here
87:38 - that's a problem and so that's why it's
87:40 - pushing it like this
87:43 - and to remove that we're going to
87:45 - actually do a margin
87:46 - right six out of our module left check
87:48 - this out i'm gonna say like this
87:52 - so i'm gonna say like this so uh i'm
87:54 - gonna select this one
87:56 - i'm gonna do command d or ctrl d to
87:58 - select multiple things
88:00 - boom boom my trick that's right i know
88:03 - jesse's trick exactly we'll call the
88:04 - jessie's magic
88:08 - mr-6
88:11 - boom then that work out oh mr
88:16 - my bad save that right there you see now
88:19 - it's a lot better right we have space on
88:21 - the left hand side and we have here
88:23 - let's copy this to mar sj6 and let's
88:25 - make sure to put it all the way on the
88:27 - first item as well
88:28 - because the first item has nothing so
88:30 - let me go back up
88:31 - this first item does not have any mr6
88:36 - right boom a little bit cleaner now much
88:38 - better but we're not done yet guys
88:40 - not there yet what i want to do now is i
88:43 - want to
88:44 - uh add a padding top you see how there's
88:46 - no spacing between right here do we see
88:48 - that everybody
88:49 - well let's add that let's be smart about
88:51 - that okay
88:53 - let's be smart about that to do that
88:56 - we're gonna
88:56 - actually add a margin top i'm gonna
88:59 - select mr6 again
89:01 - command d command d command d command d
89:04 - command d that way i can type all the
89:07 - same time much faster
89:08 - so multiple cursors multiple cursors
89:11 - that's right
89:12 - right and then what i'm gonna do is i'm
89:15 - gonna go to the left hand side
89:17 - click space and do a margin top dash
89:20 - five all right and that added everywhere
89:23 - you see it added margin top
89:24 - right here right here right here
89:28 - to every single element so i'm going to
89:30 - save that now
89:31 - and look at that there is no margin
89:33 - inside here but this created now too
89:35 - much spacing around here which i don't
89:36 - like
89:37 - which we can remove right now all i have
89:39 - to do is go to the
89:40 - uh popular categories and just simply
89:43 - remove
89:44 - the margin top 10 i think that's on the
89:47 - main section probably no no not here
89:50 - no this one module 5 that's under
89:53 - categories
89:54 - save that boom and look at that
89:58 - our popular categories are now much much
90:00 - cleaner
90:01 - than before would you guys agree with me
90:04 - i mean i do i don't know if you don't
90:06 - but it's too bad you know if you don't
90:07 - and if you make the screen smaller nice
90:10 - it would also have to be yes let's go
90:14 - it's becoming now a lot more mobile
90:15 - friendly and that's our goal is to make
90:17 - this a lot more mobile friendly
90:19 - so now look is that cool guys that's
90:21 - really cool
90:22 - we've got our index.html that's all
90:25 - working very
90:25 - well let's get to the hard part and
90:29 - let's
90:30 - work on the card jesse okay are you
90:32 - ready
90:35 - i know what is the hard part well
90:39 - we already did a lot of hard things so
90:41 - we added a functionality to the add to
90:44 - cart
90:44 - button uh once we had that
90:48 - we um had the notification functionality
90:52 - okay that is showing up in our card but
90:54 - now
90:55 - if we go to the cart page we actually
90:58 - want to see the items that we
91:00 - added correct so
91:03 - in our car touch html yesterday
91:07 - we already added i believe the nintendo
91:10 - switch
91:10 - yes but guys remember this one was
91:14 - hard coded yeah fully static
91:18 - fully static so let's make it dynamic
91:21 - okay let's do that jesse and as you can
91:23 - see the part that
91:24 - that knot is highlighting guess what
91:27 - that's the part that we're going to be
91:29 - making um dynamic and that is
91:32 - one card item one card item
91:36 - and guess what guys to what class are we
91:39 - adding
91:40 - card items boom
91:44 - cart items line 111 okay
91:47 - so let's do that and let's open up and
91:50 - make a new file
91:51 - called car.js so new file
91:55 - card.js book
91:58 - okay and of course the card.js
92:01 - where do we want this file to work guys
92:04 - in our card.html
92:06 - correct so let's link that up at the top
92:09 - okay so just like we linked up the
92:13 - header.js i'm just going to copy that
92:15 - one
92:16 - and i'm going to boop paste it in
92:20 - and here i'm going to say card.js
92:24 - like this okay uh that's it right now
92:28 - i'm not forgetting anything right
92:30 - yeah that's it the only thing we need to
92:31 - now import besides the
92:33 - gs is let's import the header.js
92:36 - inside the card.html to make sure that's
92:38 - all working all right
92:40 - so we got the header how the gs is
92:41 - centered html which is all great that's
92:43 - great and dandy
92:44 - uh but it looks like for some reason
92:46 - it's not updating this number
92:47 - i'm not sure why that's the case let me
92:50 - take a look at it here
92:52 - the card icon card item number
92:56 - that should work it still says want for
92:58 - some reason
93:01 - had that gs actually i know that's not
93:03 - working because why
93:05 - we don't have don't have any firebase
93:07 - that's right
93:08 - that's right so let's go back to our
93:10 - index.html and you see all this firebase
93:12 - database let me go and make this a
93:13 - little bit smaller so you guys can see
93:14 - it better
93:15 - let's take all this firebase stuff and
93:18 - it kind of starts
93:19 - from here command c i'll paste it in for
93:22 - you guys as well
93:25 - okay paste it for you guys right there
93:28 - yeah guys
93:29 - so make sure you have the exact scripts
93:32 - with the gstatic.com okay like we got
93:36 - different documentation yesterday
93:38 - and then you're gonna add your
93:40 - firebase.js file yeah
93:42 - you may have to make sure that you add
93:43 - that beforehand.js because because
93:46 - header.js uses firebase
93:49 - to actually get the data right so we
93:50 - need to include this that this right
93:52 - here
93:53 - we also need to include firebase.js
93:55 - because firebase.js
93:56 - contains all of the configuration files
93:59 - right
94:00 - so we'll do right there just doing it
94:03 - right now firebase.js
94:06 - yeah header.gs and the card.gs is right
94:09 - here so save that
94:10 - and boom you can see right there 409 is
94:13 - right there just how it should be
94:15 - we can now go ahead and remove that
94:18 - portion where's the card icon
94:22 - card icon card dash icon
94:25 - let's remove that from
94:28 - one second here this one we don't need
94:31 - this one anymore
94:32 - save that one and that's it you see now
94:35 - it's just
94:36 - 49. and now we can focus on actually
94:38 - making sure that
94:39 - all of this stuff now works the way it
94:42 - should be and they're actually coming
94:43 - from a database and not just static
94:47 - hey let's go so let's
94:50 - write some code in our cart.js file
94:56 - so let's go call the gs and let's write
94:58 - some code right
95:00 - as if we don't have run any code in it
95:02 - before
95:05 - well we're going to write functions
95:06 - again guys so by now you know the drill
95:09 - right
95:09 - so what are we what do we want to show
95:13 - at the cart page tell me we want to show
95:16 - card items right
95:17 - so like before we wanted to show items
95:20 - the hot deals
95:21 - now you want to show cart items and we
95:24 - wanted to make dynamically you want them
95:26 - to get out of the database okay
95:28 - so whoops function
95:31 - get heart items
95:34 - i'm going to name a function like this
95:37 - okay
95:38 - and of course um
95:43 - we're gonna be using firebase so we have
95:45 - everything already imported so i can
95:47 - just say collection
95:49 - cart items and
95:53 - guess what what do you think we should
95:55 - be using should we
95:56 - be using the query snapshot or the on
95:59 - snapshot
96:02 - and why let me know in the chat guys
96:05 - what do you guys think
96:06 - honestly what do you guys think snapchat
96:09 - because what if we update something what
96:11 - if we update something right
96:13 - we put it so on snapshot is
96:17 - like i said and now snapchat is going to
96:18 - have a websocket right it's going to
96:20 - have a live connection to database that
96:22 - means any
96:24 - update that happens to a database is
96:26 - going to
96:27 - update our application right away if you
96:29 - just do
96:30 - you know if you just do uh you know get
96:33 - that then it's just gonna say hey no let
96:36 - me just get the data currently that
96:37 - currently there
96:38 - is that one time when you reload when
96:40 - you load the page
96:41 - but then if we do you know do any
96:43 - updates it's actually not going to
96:45 - reload because it does not have a live
96:46 - connection to a database
96:48 - right well on snapshot does that's right
96:51 - samir
96:52 - on snapchat has a constant connection
96:55 - and
96:55 - dynamic updating that's right samir so
96:58 - i'll do it right now
96:59 - so i'm gonna use on snapshot and again
97:02 - guys
97:03 - it's making a snapshot of what's inside
97:05 - of my
97:07 - firestore okay so you want to map
97:10 - through that okay so snapshot.docs
97:14 - for each and then we're gonna do
97:17 - something
97:17 - with each dock of course now we want to
97:20 - get each dog
97:22 - we want to get each card item so
97:25 - we would have to store that somewhere
97:26 - right in order to get that so let's make
97:28 - here let's make an array
97:30 - and let's call that cart items okay
97:34 - and when we're looping through our fire
97:37 - store
97:38 - you know based on the snapshot that was
97:40 - made made
97:41 - we're going to say oops items
97:45 - that push and inside of here we're going
97:49 - to
97:50 - push an object inside of it with these
97:53 - properties
97:54 - doc dot id and remember
97:58 - you could like
98:01 - you want to do it the short the short
98:03 - way or the long way
98:05 - let's do it a long way for now jesse the
98:07 - long way okay
98:08 - got it so remember this guys we're gonna
98:12 - add
98:12 - all of the properties of the card item
98:14 - inside of there
98:16 - so let's check what we did at
98:19 - script.js because i wanna have exactly
98:23 - the same
98:24 - here like this these so i'm gonna copy
98:28 - paste this
98:29 - go back to my card.js okay
98:32 - and boom this is what i need so just to
98:35 - give you guys a little bit of an update
98:37 - okay
98:37 - what are we doing here well hey you know
98:39 - what we'll say hey give us
98:41 - the latest snapshot kind of like hey
98:43 - take a picture of our current database
98:45 - from card items for every single item
98:48 - that we have inside here we're going to
98:51 - loop through it okay and we're going to
98:55 - add it to our array right here but
98:58 - i want to give you a little bit of a
99:00 - cool trick guys are you guys ready for
99:01 - this
99:02 - you see how we always have to do this
99:04 - whole thing every single time you see
99:06 - how we have to do is to do like
99:07 - image name make rating do you want to
99:10 - keep doing that
99:11 - like it's that's that's probably tiring
99:13 - right all the time to just keep doing
99:14 - the same thing over and over again am i
99:15 - right
99:16 - give me a raise of hand if you don't do
99:17 - that because i definitely don't right i
99:19 - don't i don't either
99:20 - so we can actually remove all of this
99:23 - and make it shorter
99:24 - and here's here's how because we can do
99:27 - dot dot dot dot
99:30 - data and that
99:34 - is it mic drop why
99:37 - this is what is this called this is
99:39 - called i call the underwrapper red
99:41 - operator the spread operator
99:43 - is going to take any data which is all
99:45 - this data that we have right here
99:48 - and it's going to put it kind of like
99:50 - unpack it it's kind of like how you have
99:51 - a package
99:53 - how you have a you know present you
99:55 - unpack the present and you take out all
99:57 - the items from the present and you you
99:59 - lay them out
100:00 - yeah the same thing happening here is
100:02 - taking out all the items from the doctor
100:04 - data
100:05 - and laying them out and putting them
100:06 - inside the card items
100:08 - that is it dot dot dot is your savior
100:13 - right there
100:17 - so now that we have this let's log the
100:20 - items that we have
100:22 - console cut lock card items
100:25 - [Music]
100:27 - okay and of course we have to call the
100:30 - function because otherwise
100:32 - nothing's gonna happen okay so let's do
100:35 - inspect element on here right here
100:38 - console right console
100:42 - right there all right it's got two items
100:44 - one and two
100:46 - that's it guys it's all done so all done
100:48 - though
100:50 - all right cool all right what's next so
100:54 - again guys once we have the data what do
100:56 - we need to do with the data
100:59 - [Music]
101:00 - we need to generate it this is always
101:04 - the hard part
101:06 - this is the hard part guys for sure this
101:08 - is the hard part that's right
101:09 - that was the hard part this is the hard
101:11 - part because now you gotta
101:13 - add it to your html and think about
101:16 - what is actually going on okay
101:20 - but that's okay we're just gonna guide
101:22 - you through this okay
101:23 - so generate card items start at the
101:26 - start
101:27 - make the function okay function generate
101:31 - card items and we got the card items as
101:34 - an
101:35 - argument here okay that's my function
101:37 - definition
101:38 - now we can do this a few ways and
101:42 - before now i showed you you can either
101:44 - concatenate the string
101:46 - in your html or
101:50 - you can do it the other way um we did
101:52 - after
101:53 - with creating the elements
101:55 - [Music]
101:56 - however this time it's a little bit more
102:00 - complicated so let's break it down into
102:03 - steps
102:05 - okay so let's start off
102:09 - with this and first say
102:12 - like we did before say let items html
102:15 - and let's make this an empty string like
102:17 - this okay
102:19 - then we're going to loop through each
102:21 - card item so we're going to take card
102:23 - items
102:24 - for each item
102:28 - okay arrow function and this is going to
102:31 - return
102:33 - boom it's going to be a it's going to be
102:36 - a concatenation too so here
102:38 - items 1880
102:41 - can i talk anymore items html
102:44 - plus equal backtick backtick
102:48 - okay and we're going to type inside of
102:50 - the backticks
102:52 - i don't see you typing jesse no you
102:55 - didn't see me typing nope
102:59 - here no hello
103:02 - okay so i'll just do in that case okay
103:06 - okay so we're going to go ahead i'm
103:08 - going to
103:09 - loop through every single item which we
103:10 - have done right now cut items down for
103:12 - each
103:13 - and then for each item which we get from
103:15 - here we will add the two html so i'm
103:18 - going to say
103:19 - items html
103:22 - html plus equal to
103:25 - oh there we go now it's there working
103:27 - okay
103:28 - all right now it's working jesse go
103:30 - ahead jesse now oh oh no i haven't there
103:32 - okay
103:33 - okay okay good good so
103:36 - card items we're gonna be looping
103:39 - through
103:40 - okay and um
103:44 - so let's go back to our card.html
103:48 - because that is where we had the card
103:50 - items right
103:51 - that's right the card so line 115
103:56 - okay that's where we have all the card
103:57 - items and guess what
103:59 - we want to have yes we want to have
104:04 - one card item boom
104:07 - so if you can copy this nas yeah i got
104:09 - it
104:10 - awesome right and we go back to card.js
104:13 - guys
104:14 - and now it's going to paste it in here
104:17 - html plus equal to back to tactic
104:22 - tactic command v boom boom done
104:25 - awesome done and done so
104:29 - and now guys like we did before right
104:32 - because we're using backtick backtick
104:34 - guess what we can use something called
104:38 - template literals okay so here for the
104:41 - image
104:42 - guess what dollar sign bracket open
104:47 - image okay and we're calling it here
104:50 - item
104:51 - okay so you can always call this also
104:53 - cart item if you want um
104:55 - you want more clarity but we call this
104:56 - item now okay
104:58 - so it's gonna be the same this one's
105:00 - gonna be item that name
105:02 - or not that name but bracket okay
105:05 - item that name okay
105:08 - here it is gonna be make
105:13 - right and
105:17 - this is in the total cost for first
105:22 - i'm gonna
105:25 - say and then we're going to go ahead and
105:29 - change up the price so we'll do right
105:31 - here
105:33 - item.price okay
105:36 - let's go ahead and save that oh jessie
105:39 - just suggested just adjust it just
105:40 - adjust it just adjust it to see
105:43 - okay oh hey i don't see your code i am
105:45 - the price
105:47 - right and honestly that's pretty much it
105:48 - at this point the only other thing that
105:50 - we have to do is do the quantity so
105:51 - let's go ahead and change this one to
105:52 - quantity
105:54 - right here item.quantity
105:59 - quantity save that that's looking all
106:02 - good and that name and that make
106:04 - and then add that image and we're all
106:06 - pretty much good look we have the images
106:08 - it's all looking great nothing bad so
106:10 - far so now we can replace
106:12 - html and actually put that into our what
106:14 - into our card.html
106:16 - so if i go back to it right if i go back
106:19 - i see my card items
106:21 - what class i'm going to use to replace
106:24 - the inner html4
106:26 - you guys tell me you guys tell me
106:30 - you guys should notice by now we've done
106:31 - this with the normal items what is it
106:34 - what is it it is going to which one card
106:37 - items right here
106:38 - that's right yes the card item so i'm
106:41 - going to copy this one
106:42 - go to card.js and i'm going to say
106:45 - document but this needs to have an
106:46 - outsider for each loop i will say no
106:50 - not inside here jesse outside the for
106:52 - each loop okay
106:54 - yeah it makes sense i'm gonna say
106:57 - document
106:58 - that query selector
107:01 - right that's something that card items
107:04 - all right dot what for each or two
107:08 - what we're thinking about for each inner
107:10 - html
107:11 - is equal to what is it items html right
107:14 - there so i'm going to say
107:15 - items no isn't it inside of the for loop
107:19 - because we want to add
107:21 - each item to the card items
107:28 - no actually it's fine it's fine like
107:29 - that
107:32 - it's fine yeah okay it's fine actually
107:34 - yep so there you go guys look we have 14
107:36 - nintendo switches
107:38 - 35 apple macbook pros
107:41 - that's pretty good but of course one
107:44 - thing i want you guys to pay attention
107:45 - to is
107:46 - this total cost is a wrong cost so when
107:48 - we do ironed our price
107:50 - what should be the actual price it
107:51 - should be what item that price
107:53 - times what you guys tell me oh it would
107:55 - be nice though to have
107:57 - 14 nintendo switches for the price of
107:59 - one yeah
108:00 - tell me what is it i'm waiting for you
108:01 - guys waiting for someone to be in the
108:03 - chat to say that to it come on what is
108:05 - it what is it what is it what is it what
108:06 - is it
108:06 - that's right times the quantity i doubt
108:09 - price times
108:10 - quan tt
108:13 - yes save that hey you see
108:17 - oh what happened here i know that
108:19 - quantity my bad item that quantity
108:21 - right there boom four thousand dollars
108:24 - and
108:24 - forty thousand dollars for 35 macbook
108:27 - pros so now you know
108:28 - if you ever want to buy 35 macbook pros
108:31 - it would actually cost you forty
108:33 - thousand dollars guys which is not a bad
108:35 - price tag at all
108:36 - get it while it's hot because it's gonna
108:38 - bon it's gonna be gone pretty soon okay
108:43 - that's like a commercial
108:46 - i like apple so that means we can go to
108:49 - college html guys
108:50 - and we can remove all of these little
108:52 - main products
108:53 - so let's remove this one card item we
108:55 - don't need that anymore
108:57 - let's remove another card item right
108:59 - here
109:01 - boom by nintendo switch right
109:05 - and that's it yeah now it's empty and so
109:06 - what i like to do actually in this case
109:08 - i like to say
109:10 - i shall do like this wait time time
109:14 - all right um cart
109:17 - items or cart items right here no card
109:21 - yep card items from let's get db
109:24 - that's it save yeah there you go look at
109:26 - that that's it guys
109:28 - but of course we're not done yet because
109:30 - now we need to make sure that this kind
109:32 - of stuff works so let me go and remove
109:33 - this stuff
109:34 - we need to make sure that this works
109:36 - this works and this works yeah
109:39 - so what is what are we gonna do to make
109:41 - that happen
109:44 - what are we going to do to make that
109:46 - happen well guys
109:48 - so as you know those little arrows
109:51 - are called chevrons right and yesterday
109:55 - we used those from the font awesome
109:58 - library
109:59 - so what you want to do is you want
110:02 - to click on that arrow and then either
110:04 - your amount your quantity
110:07 - increases or decreases
110:10 - correct that also means that that arrow
110:14 - should have event listener right of
110:16 - click
110:17 - because you're clicking upon it and boom
110:19 - something needs to happen
110:22 - correct so what you can do
110:25 - plus what else is important you need to
110:28 - know
110:29 - which item you click because you want to
110:31 - know if you click upon
110:33 - uh decreasing the nintendo switch you
110:35 - want to
110:36 - you know have 13 instead of 14.
110:39 - if you want to up it then it's going to
110:41 - be 15 or 60.
110:42 - that's right but you have to know it
110:44 - because apple macbook
110:46 - has way more it's 35 right not 14 or 15.
110:49 - that's right so what we do first is
110:52 - we're going to add another class
110:55 - to um the chef front
110:59 - actually that right now so here line 31
111:02 - pay attention guys we can say data
111:06 - hyphen id is equal to
111:11 - item dot id but why are we doing why we
111:14 - end data jesse
111:18 - why we end data why we have the data why
111:20 - are we doing this
111:22 - because when we add an event listener to
111:26 - this
111:27 - we can grab that data from this div
111:30 - that's right and why do we need that
111:32 - data yeah
111:34 - we need the data because we need to know
111:36 - exactly what
111:37 - cart item we want to increase or
111:39 - decrease
111:40 - that's right because of course right if
111:42 - you guys go back to firebase right
111:44 - this has a specific id and so does this
111:47 - and so we need to know exactly well what
111:49 - are we going to update
111:50 - are we going to increase the quantity
111:53 - for this
111:54 - nintendo or for this apple right and so
111:56 - that's what we need a specific
111:58 - id of when we click on these little
112:01 - icons right
112:02 - here right and so we can do that by
112:04 - simply just putting a data id
112:05 - inside html which we can grab
112:09 - later on and extract it so watch how we
112:12 - do that which is really cool
112:13 - so guys i added item ids on the left
112:16 - chef front and i added
112:18 - an item id on the right chef run so that
112:20 - will
112:21 - you know let us know what item we're
112:24 - going to be increasing and decreasing
112:26 - that's right correct so that said though
112:29 - this is not going to happen just out of
112:31 - nowhere right
112:33 - the chevrons they need they need to know
112:36 - when they're being clicked on so we're
112:38 - going to create
112:39 - event listeners okay for them so
112:43 - let's create a function called create
112:46 - event listeners
112:48 - okay okay let's do that right now yeah
112:51 - create event
112:52 - listeners whoop listeners
112:56 - okay like this and
113:00 - of course now that we want to call it we
113:01 - need to define it so here
113:03 - create event listeners
113:07 - and let's think about this guys what is
113:10 - it that we want to do
113:11 - we want to have we want to decrease
113:14 - we want to increase and we also want to
113:18 - delete
113:19 - those are all things that have to do
113:21 - with quantity right
113:22 - so what we do is let's
113:26 - do this we're going to create decrease
113:28 - buttons
113:31 - okay and what do you think these
113:33 - decrease buttons are equal to
113:36 - basically we're going to grab every
113:37 - single decrease a button
113:40 - we're going to grab it from the html and
113:42 - then we're going to add any click
113:44 - listener on that
113:45 - button but first we need to actually
113:47 - grab it so let's do it right now
113:49 - right so the decrease button is always
113:51 - the left chef run
113:52 - that's something that we know for sure
113:54 - correct so we called it here we called
113:57 - it class chef from left
113:59 - but we can also call it to be a bit more
114:01 - um
114:02 - descriptive instead of chevron left we
114:05 - can call it
114:07 - cart item decrease
114:10 - you see that what happens is
114:12 - highlighting and instead of chevron
114:14 - right
114:15 - we know that this one's always adding
114:18 - something so we're going to call this
114:20 - cart
114:21 - item increase okay
114:25 - like this that said
114:29 - when we're you know going to create
114:32 - event listeners for the buttons
114:34 - and we know that all of the decrease
114:36 - buttons all of the buttons that decrease
114:38 - the amount
114:39 - are d look guys
114:43 - document query selector
114:48 - and i'm gonna say oh i'm gonna get out
114:51 - all of them
114:52 - because look if you have more items in
114:54 - your card
114:55 - you want all left chef runs all
114:58 - left uh cart item decrease buttons you
115:01 - want all of them
115:02 - to be targeted right so that's why you
115:05 - got to use query selector all
115:07 - so let's do this card
115:10 - whoop card item
115:14 - decrease boom
115:17 - like this okay then
115:21 - very easy once you know how you did this
115:23 - for the decrease
115:24 - of course the increase is going to be
115:26 - easy okay just going to copy this
115:30 - paste it and then my little trick you're
115:33 - going to select the d
115:34 - e command d boom
115:37 - you're going to say i n increase so we
115:41 - have now selected
115:42 - all of the increased buttons you see
115:44 - that
115:45 - and of course not only that we're also
115:48 - going to be making
115:49 - the delete buttons so let's focus on
115:51 - that later jesse
115:53 - let's focus on that one later oh okay
115:57 - so that said guys now that
116:00 - we have the increase and the decrease
116:03 - what do you think we should be doing
116:06 - well like i said before right
116:08 - uh we're calling this multiple we're
116:10 - calling this buttons because if you have
116:12 - more items you have more decreased
116:14 - buttons
116:15 - so we're gonna loop through those
116:19 - okay and then for each button
116:24 - guess what we're gonna add an event
116:27 - listener so we know that something needs
116:30 - to be done
116:31 - when that button is being clicked on
116:33 - okay
116:34 - so button dot
116:38 - add event listener and guess what is the
116:40 - event guys what is the event
116:43 - that the button will be listening to
116:46 - click right the click event and let's
116:48 - think about this why are we using it for
116:49 - each loop right
116:51 - mainly reason b is because we have
116:52 - multiple chevrons we have multiple
116:54 - decrease buttons
116:55 - and so for every single button that we
116:57 - have here we're going to create the
116:59 - exact if same event listener but just
117:01 - with different data
117:03 - yeah just with different data
117:06 - so here i got the click okay i defined
117:10 - my
117:10 - event okay and once
117:13 - the click happens then decrease
117:17 - the count that's what we want this
117:20 - button
117:20 - to do and guess what this button
117:24 - hey now we're gonna be using the data
117:27 - set
117:28 - oh shoot what's that data set
117:31 - dot id but this data set is actually
117:35 - coming from where
117:36 - well because we're using data dash id
117:38 - which is right here
117:40 - this data dash id i'm getting the data
117:41 - id html gives us
117:44 - access to that so if i'm going to grab
117:46 - that button
117:47 - right for every single button i'm going
117:49 - to grab the button i'm going to give the
117:50 - data set
117:51 - the way to get the data id is to use
117:53 - button that data set
117:55 - and then whatever you want in our case
117:57 - it's the id whatever it is on here is
117:59 - what we're going to put so if i said
118:00 - if i put here apple i would say here
118:04 - dataset.apple apple understand does that
118:06 - make sense yeah
118:07 - so whatever it says on there is what
118:08 - we're going to grab that's why
118:12 - for sure and now guys we made the we
118:16 - we're calling a decrease count function
118:18 - but we haven't exactly made that yet so
118:20 - it's not going to do anything
118:22 - so let's go to the top of our of our
118:25 - card.js
118:26 - and here after the get card items let's
118:29 - create a function
118:30 - where we're actually decreasing the
118:32 - count okay so
118:34 - decrease count boom or
118:37 - giving that the item id now why do you
118:39 - think the item id is important guys
118:42 - oh no you tell me jesse well
118:46 - if i decrease i want to know exactly
118:48 - which item
118:49 - i am decreasing in quantity of right if
118:52 - i
118:52 - would click on the left chaff run of the
118:54 - nintendo switch
118:56 - i'm going to get 13 instead of 14.
118:59 - that's right
119:00 - right so guess what guys
119:03 - we gotta work with firestore again so
119:06 - i'm gonna say here card item
119:10 - is equal to db collection you guys know
119:14 - the drill
119:15 - card items and guess what
119:19 - we're grabbing that specific id
119:22 - card item by saying doc
119:26 - item id you see that now we got the
119:30 - specific document
119:31 - from the firestore now that we have that
119:35 - we're going to get it
119:36 - we're going to say cart item dot get
119:41 - then okay okay then
119:44 - and once we have that okay we're gonna
119:48 - be
119:48 - checking whether that document really
119:51 - exists
119:53 - okay like this
119:56 - if document exists because it might not
119:59 - exist
120:00 - might not most of cases will because
120:03 - it's in the actual card you know
120:05 - most of the time yeah but it might not
120:08 - so if it exists
120:12 - okay then what do we want to do guys if
120:14 - we want to decrease the amount
120:16 - what do we want to do we want what do we
120:18 - want to do we want to
120:19 - update the card item oh we want to
120:22 - update the quantity but
120:24 - if i um what should my
120:27 - amount at least be in order to decrease
120:30 - from it
120:31 - what does it do because we cannot let
120:33 - the item go down to zero
120:35 - right because that would completely
120:37 - delete it there's no point of doing that
120:38 - at that point
120:39 - we have to make sure that there's more
120:41 - than one card items right now
120:43 - or more quantity that we have to make
120:45 - sure there's more than one so that's
120:47 - very well said so doc
120:49 - dot data quantities bigger than one
120:54 - a and then we're going to do something
120:57 - now we're going to update it that's
120:59 - right
121:01 - now we're going to update it so now we
121:02 - say cart item dot
121:04 - update and we're going to update it with
121:07 - the following
121:08 - we're going to say quantity which is the
121:11 - you know the property inside of the
121:12 - firestore right what not has been making
121:14 - there
121:15 - and then we're going to say we could say
121:17 - minus 1
121:18 - but that's not really what we want why
121:21 - is that guys
121:24 - why is that because there's no point
121:28 - it's like minus one from what
121:30 - exactly minus one from what so tommy
121:33 - says
121:33 - that's great what you have but you want
121:35 - yours we're now
121:37 - we're going through it so you want to
121:39 - make it a little bit more dynamic
121:41 - and go like this you're saying dot data
121:45 - quantity
121:49 - minus one so you want to get the
121:52 - existing quantity but you want to
121:55 - decrease one of that that's it right and
121:58 - that's it
122:00 - that's it guys so now based on that
122:03 - let's see if it actually works jesse we
122:06 - have decreased count
122:08 - recalling decrease count inside here
122:10 - right
122:11 - all right are you guys ready shall we
122:13 - test this out guys i guess
122:14 - let's test this out log here oh i don't
122:18 - know but i'm just ready to test it out
122:19 - let's go let's say
122:20 - okay three okay two one let's go
122:26 - wait oh
122:29 - let's go hey look at that
122:33 - and even this total cost is decreasing
122:36 - also guys look at pay attention to this
122:39 - boom damn how cool is that huh
122:43 - did you guys enjoy that yeah
122:46 - anybody here confused raise your hand if
122:48 - you're confused
122:50 - pretty much everybody that's great
122:51 - that's awesome
122:52 - [Music]
122:54 - but are you learning a lot there you go
122:56 - see so guys
122:58 - we have got the actual chevron it's all
123:01 - working really well we're decreasing the
123:02 - count
123:03 - that is it my friends so now now let's
123:06 - work on the increase
123:07 - the count right let's look at the
123:09 - increased count all right
123:10 - so the increase is not that much
123:13 - different from the decrease
123:15 - okay so let's do it
123:18 - increase buttons i already
123:22 - uh we're doing there again we're doing
123:24 - the query selector oh we're selecting
123:25 - all right chevrons all the buttons that
123:28 - can increase the quantity
123:29 - and here look increase
123:32 - buttons we're gonna loop through those
123:35 - buttons
123:36 - okay button and of course also to this
123:41 - right
123:41 - chef front we're going to be adding an
123:42 - event listener so button
123:45 - dot add event listener and the event is
123:48 - gonna be
123:50 - guess what a click okay and once
123:53 - that click happens whoops once that
123:57 - clink happens
123:58 - we're gonna fire off a function okay and
124:01 - guess what that function is
124:03 - we're gonna increase the count with this
124:05 - function so
124:06 - increase count and
124:10 - what do we need to know when we're
124:12 - increasing something we need to know
124:13 - which
124:13 - which item it is so we're going to give
124:15 - them that data
124:17 - button that data set that i t
124:21 - now okay guys so we wrote we just wrote
124:24 - this
124:25 - okay so now we're going to wrote the
124:27 - increase function
124:28 - because that's what happens upon the
124:30 - click right so
124:31 - awesome increase count thank you nas
124:36 - mm-hmm we're going to give that the item
124:39 - id
124:41 - yes and then and
124:45 - again whoops we're going to get
124:48 - um that from first from the database
124:52 - from the firestore okay so just how we
124:55 - did it here
124:57 - we're going to the same thing here
124:59 - exactly and again we need a specific
125:03 - is id for the dock so we're going to say
125:05 - dock parentheses open and feed it
125:08 - the item id now that we have the card
125:11 - item
125:12 - we're going to get it oh get it
125:15 - like this and once we have it
125:18 - again like before we're going to check
125:20 - right
125:21 - whether that document really exists
125:25 - if doc dot exists
125:29 - okay what do we want to know guys when
125:32 - we're
125:33 - we want to add something to
125:36 - um we want to buy another macbook pro
125:39 - what is it that we actually need to do
125:41 - we need to update it correct
125:44 - but we want to update it even when
125:47 - even when it's zero but that's not
125:50 - we still want it right
125:54 - so the condition here should be
125:57 - dot data quantity
126:00 - is at least bigger than zero okay
126:05 - and then we're gonna update the cart
126:09 - like this boom now
126:13 - instead of decreasing or now increasing
126:16 - so what are we going to do guys
126:18 - let me know guys let me know in the chat
126:20 - guys well we're going to take the data
126:22 - doc.data.quantity jesse and then we're
126:24 - going to do plus one on that one guys
126:26 - okay
126:27 - yes that's right plus one that's right
126:31 - like this boom and that's it
126:33 - and so now if we save that let's see so
126:35 - let's see
126:36 - let's see if that works now have the
126:38 - increase count function right here just
126:40 - double check
126:41 - recall the increased count function here
126:43 - we have an event listener and every
126:44 - single button
126:45 - which is perfect if i do this now
126:49 - oh there's wait does it work it works
126:52 - let's go
126:54 - i do this and pay attention to this as
126:58 - well
126:58 - not only this works right not only does
127:01 - this work
127:01 - right right right here no does this work
127:05 - but this works as well and this works
127:08 - right
127:08 - so if i increase the count look at that
127:11 - fourteen thousand
127:12 - two thousand two thousand three hundred
127:14 - three six hundred and we just keep going
127:16 - keep going so we have
127:18 - everything working together beautifully
127:20 - we have six
127:22 - 56 items in our cart i know it's a lot
127:24 - of items guys
127:26 - i mean you know if you if you want the
127:28 - technology you want the tech you know
127:30 - you gotta get go
127:30 - for what you want yeah you gotta gotta
127:32 - go what you want for sure
127:34 - you know life's short so let's now go
127:36 - ahead and work on the functionality for
127:38 - the delete
127:39 - this delete button because of course we
127:40 - can only go to one so if i keep
127:42 - decreasing this number right here right
127:45 - right
127:46 - i just i can't go any lower because
127:47 - there's no point there's no point in me
127:49 - going lower
127:50 - only way to do is now just remove it
127:52 - from the actual thing
127:54 - so let's go ahead and instead of doing
127:56 - decrease buttons we'll do
127:58 - let delete buttons right
128:01 - right same thing we're going to grab
128:04 - every single button from the html that's
128:06 - inside here
128:07 - right like this grab every single button
128:10 - that's inside right here grab that from
128:14 - the html
128:15 - and we're going to add an event listener
128:16 - so i'm saying document
128:20 - document the query selector all
128:23 - right here that's going to grab us all
128:25 - of those specific html elements okay
128:28 - all right and then we'll do like this
128:32 - what is the class name called it's
128:34 - called card item delete right there
128:36 - but of course remember we have to know
128:38 - what we're going to get data from so
128:39 - what's that we need to put this data id
128:42 - also for the card item delete
128:45 - boom save that that way when we click on
128:48 - it we have the functionality too
128:50 - so let's do that right now let's go back
128:52 - to our daily buttons
128:54 - dot what card i delete right here
128:57 - two to two
129:00 - card item delete which is let me see
129:02 - where is it where is the reserve is it
129:04 - it's going to be card item delete right
129:07 - here command c
129:09 - command v to paste it in there beautiful
129:12 - so now we're going to grab all the
129:14 - buttons and i want to show you exactly
129:15 - what's happening here i'm going to
129:16 - console log
129:19 - delete buttons that way you understand
129:21 - what's actually going on
129:22 - when we do document the query to all and
129:24 - i want you to pay attention to this
129:25 - really closely okay so guys listen up
129:27 - please
129:27 - listen up if you're here listen up i
129:30 - will right click inspect that one on
129:32 - this one
129:33 - let me put the right hand side let's go
129:35 - to console
129:37 - put on the left hand side oh right here
129:40 - you see these buttons right here look
129:43 - when i do
129:44 - the query selector all this is what it's
129:47 - giving me
129:48 - we have what we have this one div you
129:50 - can see it's even highlighting it inside
129:52 - our html i have another div so it
129:54 - literally got me the html element i
129:57 - think if it's an object think of an html
129:58 - almond is like a cup
130:00 - right right and we just kind of got
130:02 - whatever is in this cup
130:04 - and we cannot use whatever is in that
130:06 - cup that's literally all that happened
130:08 - the same thing happens when we do when
130:10 - we do what
130:11 - the increase buttons and when we do the
130:14 - decrease buttons
130:15 - right same thing happens there so now
130:18 - what we are going to do is
130:19 - with delete buttons we're going to use
130:21 - them
130:22 - okay then i'm going to do delete buttons
130:27 - right dot add event listener
130:30 - so three buttons
130:33 - buttons dot
130:37 - for each like this right
130:40 - for every single button that we are
130:42 - going to grab from the html
130:45 - right so it's going to be every single
130:47 - button right here
130:49 - we'll do button dot
130:53 - add event listener right there
130:56 - beautiful we'll say click
131:00 - boom and i will say function
131:03 - okay function and now we'll be able to
131:07 - actually
131:08 - call delete count so let's do delete
131:11 - item and we'll pass in the what
131:15 - the button that data set
131:20 - that id all right let's go ahead and
131:23 - create this delete item function
131:26 - we have the increased count ooh let's
131:28 - remove this what is this i'm not sure
131:29 - this is this is interesting
131:31 - let's create a function called delete
131:32 - item
131:36 - function delete item
131:40 - item right here let's pass the item id
131:44 - boom and now jesse what are we going to
131:47 - do inside this delete item
131:48 - delete item functionality jesse well
131:52 - um you want of course to know
131:55 - which item in its total will be removed
131:59 - from your cart right so
132:02 - we can actually ask firestore to hey
132:06 - the document uh the item that i'm gonna
132:09 - give you the id that i'm gonna give you
132:10 - i want that to be removed
132:13 - okay so you can go to
132:16 - um wait a moment so you can either look
132:19 - up in a firebase documentation
132:21 - you know like hey how to remove a
132:22 - document but this is how you do it
132:25 - so inside of your delete account or
132:28 - delete item
132:29 - you're going to indeed you're going to
132:30 - target the cart items collection
132:32 - you're going gonna say doc you're gonna
132:34 - give it that specific item id
132:36 - and then super easy you're just gonna
132:38 - say dot delete
132:40 - parentheses okay and then we're gonna
132:43 - wait for that
132:47 - and that's it we have that delete
132:51 - right that's working all well give you
132:54 - the collection
132:55 - the card item do the trick dot delete
132:58 - and that's it guys okay
133:00 - so now let's try it out that means we're
133:01 - going to remove the element from the
133:03 - from the card items
133:04 - let's shut out right now if i will click
133:06 - this button
133:07 - let's see if it actually works three
133:11 - two one what
133:14 - oh there we go guys it deleted the item
133:20 - that's it and because delete the item it
133:22 - actually decreased the count
133:23 - of here and of course it decreased the
133:25 - total cost right that's here
133:27 - so now let's let's add another item to
133:28 - here let's go back to our amazon
133:30 - that you should let's go back to
133:31 - index.html we should really create a
133:34 - link to go back home
133:35 - let's add a nintendo switch back right
133:39 - which we'll add it to here let me go
133:41 - back to cart and nintendo back right
133:43 - right here let me delete delete
133:45 - one more time pay attention to the card
133:47 - count
133:48 - boom done you see we removed it and so
133:51 - now if we go back again to the
133:53 - html right let's add it one more time
133:56 - let's see boom done it's there
133:59 - that's it guys that's it that's right
134:02 - samir we're gonna we should do an a
134:03 - strap
134:04 - so guys look the decrease is working the
134:06 - increase is working right
134:08 - the delete is working there's one last
134:10 - thing that we need to do
134:12 - to fully make this perfectly functional
134:14 - i mean not perfectly
134:16 - but amazingly functional okay that's
134:19 - going to be this number right here this
134:20 - total count
134:21 - right we need to get hey what is the
134:23 - actual total cost of the sum of the all
134:25 - the card items so because of course you
134:27 - want to know that
134:28 - hey you know what i'm about to spend a
134:30 - thousand dollars on this whole thing
134:32 - right otherwise that'd be pretty bad so
134:34 - we need to create a
134:35 - get total count get to the cost
134:38 - functionality let's do that
134:41 - i'm going to say here function i'll say
134:44 - get
134:45 - total cost okay
134:49 - okay get total cost i'm going to
134:52 - grab the items whatever items i'm going
134:55 - to be given so maybe
134:56 - i will call this function inside my get
134:59 - car items because i have access to all
135:01 - of the items
135:03 - and then i'm going to call get total
135:05 - cost
135:06 - right and i'm going to pass in the items
135:09 - or the card items my bad
135:12 - oh right there okay so let's do that
135:16 - okay let's initially start up total cost
135:18 - with let total cost
135:20 - cost is equal to zero all right
135:23 - let's loop through every single item so
135:25 - we'll say items
135:27 - dot for each for each
135:30 - okay now for each i'm going to say
135:33 - like this dot dot dot oh sorry nash
135:37 - sorry jesse run hold on hold on hold
135:41 - hold on hold on hold on
135:42 - hold on hold the phone hold on
135:47 - so item okay
135:50 - then beside that we're going to do jesse
135:52 - inside that
135:54 - well you want to add the cost
135:57 - of each item so total cost and since
136:01 - we're looping through this yes exactly
136:03 - total cost plus
136:04 - equal item quantity
136:07 - quantity what is it guys tell me times
136:10 - what is the total cost
136:13 - come on it's not that hard what do we
136:15 - add to here to make this work
136:18 - you know it did i just i just said it
136:20 - come on no you did not wait hold
136:22 - on let them say it come on
136:26 - come on guys come on come on come on
136:27 - come on come on no
136:29 - what is it what is it i don't know we
136:31 - don't have the total cost
136:33 - that's right quantity times price
136:37 - we have access to the quantity one
136:40 - times the price so what do we do
136:44 - we have item dot
136:47 - price multiply by item dot
136:51 - quantity and that is it okay and this is
136:54 - your asmr version
136:56 - of the amazon clone okay
136:59 - then what we're gonna do is we'll go
137:01 - ahead and since we have the total cost
137:04 - i'm going to update that inside the
137:06 - whole the whole
137:08 - what inside this thing right here okay
137:11 - so to do that let's go back to
137:14 - covercut.html
137:15 - okay let's scroll down and you can see
137:18 - that this is the actual
137:20 - text that we need to update well to
137:22 - update that we need to give it a certain
137:24 - class so let's give it a class
137:25 - let's say the class is going to be total
137:28 - cost number
137:29 - total dash cost dash number okay you
137:32 - guys ready
137:33 - good total cost number okay
137:36 - are you okay are you ready let's go back
137:39 - to
137:39 - cart at
137:52 - okay prayer selector let's grab that div
137:56 - okay let's grab the div and we'll go and
137:58 - say
137:59 - that total cost cost number
138:02 - i'm kidding that total cost number right
138:06 - that inner text right in our text
138:11 - is going to be the total cost that we
138:13 - calculate
138:16 - save that and that's it now we have the
138:19 - price this is the total cost but let's
138:21 - do we're like this we have the total
138:22 - cost is going to be
138:23 - let's use string literals to actually
138:25 - create this there we go
138:27 - two looney tunes that's right
138:32 - there we go so like this right here
138:36 - let's use the tata
138:39 - total cost command x let's put that
138:42 - inside here
138:43 - let's also use the dollar sign to make
138:46 - sure that we actually use a dollar sign
138:47 - don't tone
138:49 - and boom 5 hundred and fourteen dollars
138:52 - is a total cost so if i
138:54 - increase the macbook pros to what fifty
138:56 - five thousand
138:57 - actually sixty thousand dollars sixty
138:59 - two thousand dollars sixty five
139:01 - let's keep going sixty seventy thousand
139:02 - dollars 73
139:05 - seventy seven seventy eight seventy nine
139:07 - eight hundred how many
139:08 - people go let's do it right now how many
139:10 - can we go can we go to 100k 100k
139:13 - 100k and we're a hundred thousand
139:15 - dollars officially
139:18 - that's right guys and we have 88 car
139:20 - items and we are buying 87 macbook pros
139:24 - there you go 87 macbook pros
139:28 - that's it so guys that's pretty much it
139:30 - i mean i mean it's not it i have a few
139:32 - few more tweaks we want to do oh look
139:34 - we've got the card items they're working
139:36 - really well everything is showing up the
139:38 - way it needs to be
139:39 - the one thing i want to fix now is i
139:41 - really hate how these numbers are
139:42 - showing up okay
139:44 - do you guys agree with that one i don't
139:45 - like the fact that it's like there's not
139:47 - formatted nothing
139:48 - so to make that work we're going to use
139:50 - something called pneumodo.js so numeral
139:53 - that yes check this out right all right
139:56 - right numero sam is like you need my
139:58 - address i'm in my book pro
140:00 - guys that's right we're sending
140:02 - everybody macbook pros guys
140:04 - just kidding it's not it's not a promise
140:06 - at all
140:08 - we'd be bankrupt if we did that
140:11 - so let's do that right now right i'm
140:14 - going to
140:14 - copy a new.js again this is what was
140:17 - going to help us
140:18 - um actually format the numbers
140:22 - right it's just a javascript library
140:23 - that we're going to use and i will copy
140:25 - this one for you i'll put it to you guys
140:26 - in the chat
140:27 - those you guys who are on youtube just
140:29 - go to email.js and you'll see it in
140:30 - there okay
140:32 - all right beautiful then what's going to
140:33 - happen let's put that inside our
140:35 - card.html
140:37 - let's go to our card.html hopefully you
140:39 - guys can see that
140:40 - and let's put it underneath the
140:41 - header.js actually let's put it inside
140:43 - uh
140:45 - our gs like this oh what happened here
140:50 - nope uh copy
140:54 - fancy but yeah this is bad now okay
140:58 - there we go
140:59 - command c command v and so this gives us
141:01 - the actual numeral gs and in order to
141:03 - use numer.js it kind of works like this
141:05 - right
141:06 - you kind of give it a number right here
141:08 - you see that right there
141:10 - you give it a number and then you say
141:12 - format and then you tell what how do you
141:14 - want to format so for example if i want
141:15 - to format it in a number sign
141:17 - kind of like that then i just use this
141:20 - format so let's do that right now
141:22 - if i go to my card.html right and if i
141:25 - go to
141:26 - let's just say card.js i need to form a
141:28 - total cost
141:30 - i'm going to use the actual the whole
141:32 - thing so i'm going to say
141:33 - like this instead of doing the inner
141:35 - text i'm going to say
141:37 - numeral watch this guys numeral
141:41 - right numeral
141:45 - numeral i will give it a number right
141:48 - total cost dot format
141:52 - right and then what we're going to put
141:54 - inside the format we're just going to
141:56 - put this right here
141:57 - right there that's it oh what just
142:00 - happened
142:01 - i'm going to put that right there boom
142:04 - that's it so let me go and make this a
142:06 - little bit smaller so
142:07 - you guys can see that beautiful and
142:09 - that's it guys so let me go and save
142:11 - this for you
142:12 - let's go back to our amazon go back to
142:15 - our cart
142:16 - and look at that a hundred thousand 253
142:19 - a beautifully formatted number
142:21 - i love the way that just works right the
142:23 - same thing can happen with the other
142:24 - stuff so let's go ahead and change the
142:25 - number that's
142:26 - here which i really don't like as well
142:28 - same thing let's use the numeral
142:31 - let's go down to where we add that which
142:33 - is going to be down inside the html
142:36 - and this will give the quantity let's
142:38 - also use that here
142:40 - so i'm going to set a sort of item price
142:41 - i'm going to do like this
142:46 - right there numeral format and instead
142:49 - of the total cost
142:50 - we're just going to use item price times
142:52 - i'm the quantity right there
142:53 - boom you see so now we can just delete
142:56 - all this right here
142:58 - save that boom 209.99963
143:04 - is the cost of our whole situation you
143:06 - see
143:07 - look very clean very nice informative
143:10 - beautifully formatted
143:12 - that's so good now let's now go back to
143:14 - our home page and i think to go back to
143:16 - our homepage we should probably make a
143:17 - link so let's create a link right now
143:19 - because i'm really sick with the fact
143:20 - that we don't have a link
143:21 - let's go to card.html to link
143:25 - our actual um logo right
143:28 - we can just do like this we'll do look
143:31 - a shrek
143:34 - ashraf is equal to
143:38 - index.html boom
143:41 - like that command x and put it inside
143:45 - around the in the logo image
143:47 - boom that's it boom
143:50 - save beautiful right so we just put a
143:53 - link around
143:54 - our uh card image that way we can just
143:56 - go back so if i want to go back
143:59 - now we're back at home and that my
144:01 - friends is it and so now i can actually
144:03 - go add to cart again
144:04 - you see now this increase it to 90 right
144:06 - here
144:07 - let's format out these numbers because
144:08 - again i just hate the way it's being
144:10 - formatted
144:11 - right that means we need to go back to
144:13 - our script.js because again remember if
144:15 - we go to script.js
144:17 - right way to perform the number it's
144:20 - inside
144:20 - right here the item price all right now
144:22 - of course we need to include
144:24 - um that cdn first and numerol.js inside
144:26 - our index.html so let's go into html
144:30 - let's include it inside here
144:33 - and make sure to include before
144:34 - everything else or try to do that
144:37 - and we'll do it like the following cdn
144:40 - cloudflare ajax right here
144:42 - this new number.js and again you can get
144:44 - that from
144:46 - right here okay
144:49 - let's go back go back to here jks
144:53 - right there save that let's go back to
144:55 - script.js
144:57 - right here yeah and instead of using
144:59 - iron.price we're going to do what
145:01 - jesse let's say what we're going to say
145:03 - numeral
145:05 - yes and then item.price
145:08 - we're gonna format that so we're gonna
145:11 - give it a d
145:12 - format and then single quotes dollar
145:15 - sign
145:17 - exactly zero comma zero dot zero zero so
145:20 - you're giving it a format so that way it
145:22 - knows
145:23 - how to format your numbers and that's it
145:26 - that's it guys
145:27 - and that my friends is the end of the
145:30 - amazon clone 2.0
145:35 - this has been a really
145:38 - really really long one but it's okay
145:41 - we've got this one
145:42 - okay i'm gonna do one last thing for you
145:45 - okay one
145:46 - last thing is just a small little thing
145:48 - because i want to make it look good
145:51 - so good all right okay i wanted to do it
145:55 - where oh no not complete order that's
145:57 - gonna take another
145:58 - five days to do complete order that's
146:01 - gonna be way too much guys
146:05 - so wait i want you just to show you
146:09 - not stripe either joe not this one i
146:12 - want to show
146:12 - you just how okay maybe in the next
146:15 - challenge we can do stripe i think that
146:17 - would be really interesting is we
146:18 - continue on this amazon clone
146:20 - right i want to show you how do we go
146:23 - ahead and remove this and make this
146:25 - mobile friendly
146:26 - all right oh that's right that's right
146:28 - so let's do that i want to show you how
146:30 - do we make it mobile friendly okay
146:32 - a few ways well if we go to index.html
146:37 - all right look at our categories where
146:39 - are the categories rather here
146:41 - right there right there you see sidebar
146:44 - and our main sidebar is here well what
146:47 - we can do
146:48 - is we can basically hide it so imagine
146:50 - like this
146:52 - when we have a small screen right let's
146:54 - just say
146:55 - the screen is small right we make this a
147:00 - hidden
147:02 - a hidden or you know display none kind
147:04 - of display not right
147:06 - it's kind of like here okay it's hidden
147:09 - right
147:10 - this is a small screen right what
147:12 - happens is
147:13 - after it becomes small after it becomes
147:15 - a median screen
147:16 - then we want to show it
147:20 - okay and then we want to show it
147:24 - right now
147:27 - this is how it works until when css i
147:29 - can tell like this you see how
147:30 - we have this main sidebar i can say
147:33 - hidden here
147:35 - hidden measure this out
147:39 - see it's hidden it's no longer there
147:40 - it's done adios
147:42 - sayonara baby let's go all right
147:45 - but i can say hey when it becomes median
147:48 - size i can say block
147:51 - so basically if the size of the screen
147:54 - is median
147:55 - medium see right there now it's block so
147:58 - it's
147:59 - from minimum of medium size it's blocked
148:01 - but then when i get to a small screen
148:04 - it's disappearing see and then my
148:07 - friends is how you make it
148:08 - mobile friendly that's it and so that's
148:12 - pretty much it my friends let's do the
148:13 - same thing actually let's do the same
148:15 - thing to our card.html
148:18 - [Music]
148:19 - okay let's go back to record.html
148:22 - the same thing here
148:26 - and put inside here so that way if we go
148:28 - to car.html
148:29 - same thing here if we make this smaller
148:34 - boom there we go it just kind of shuts
148:37 - off and that's
148:38 - it and of course there's more things so
148:40 - my challenge to you
148:41 - uh at this point is gonna be really
148:42 - simple guys i challenge you to make this
148:44 - mobile friendly
148:46 - yeah right let me say how about doing a
148:48 - dark mode that'd be great you guys
148:49 - should do that for your homework
148:51 - doing diamond would be amazing if you
148:53 - guys do that for your homework okay
148:55 - make that your task make that your
148:56 - challenge so make it a task to make it
148:59 - not only dark theme but also make them
149:00 - fully mobile friendly maybe
149:02 - you fully make it so that this hides
149:04 - right this whole thing hides
149:06 - this whole thing hides everything right
149:08 - and you just make it a simple thing
149:10 - a simple like a a simple uh website
149:14 - that's fully mobile friendly right so
149:17 - you can think about that
149:18 - how do you do that and of course it's
149:19 - possible guys it's possible
149:22 - maybe you put this count underneath it
149:24 - and this total cost underneath it
149:26 - you know as you make the screen even
149:27 - smaller maybe that's what you do as well
149:31 - that's right somebody said uh
149:34 - osala says i mean mobile friendly that's
149:36 - amazing guys
149:37 - so guys that's it that is your amazon
149:40 - clone
149:41 - and i want to say this has been an
149:43 - amazing five days did you guys enjoy
149:45 - this amazon cologne
149:46 - that probably nobody has ever seen
149:48 - before did you guys enjoy
149:50 - that yeah give me a raise of hands give
149:52 - me a sub thumbs up
149:53 - there we go that's what i'm talking
149:55 - about yeah this
149:56 - is oh day four my bad this is day four
150:00 - and tomorrow of course of course it's
150:01 - going to be day five guys tomorrow is a
150:03 - really important day
150:04 - we'll be talking about your next full
150:06 - stack developer roadmap okay what you
150:08 - need to do to get started
150:09 - and to take whatever you learned here to
150:12 - the next level all right if those who
150:15 - actually want to be developers those who
150:16 - actually want to do something from this
150:18 - and not just watch and be stagnant
150:21 - right and to take action come tomorrow
150:24 - okay
150:24 - so and that make sure you set your alarm
150:28 - clock for tomorrow 11
150:29 - mpst on youtube thank you so much for
150:32 - watching those of you on zoom stay here
150:33 - for a little bit
150:34 - but on youtube that is it for youtube
150:38 - thank you guys thank you so much for
150:40 - watching hope you guys have a great day
150:42 - and we'll see you guys in the next video
150:45 - we got more videos coming up
150:46 - just go ready because we're not done
151:05 - all right guys bye bye youtube bye
151:07 - everybody
151:11 - come in tomorrow alone npc

Cleaned transcript:

day three no day four of the javascript challenge and today we are finishing up the amazon clone 2.0 i want to show you what it is that we're doing right so we've got the amazon clone 2.0 that is built with javascript tail and css it is built with firebase it is built with media queries it is built with an amazing design we've got here categories right here okay so once you at some point when you when you click on the category your product should actually change you've got products right here okay these are the products that are available on amazon we've got ourselves the amazon logo we got ourselves the categories okay we have ourselves a search bar now here's the cool part i want you to pay attention to this really quickly guys okay pay attention to this this is so cool when you go ahead and click okay you see this number 50 right here i want you to pay attention to this number 50 right here let me make this a little bit bigger if you click on this add to cart which i'm going to do right now pay attention oh look the 5354 changes by itself by the way right this is live reload now libraries about live database right that's right and now if i go ahead and click on the cart right now we can see that what do we have we have 29 macbook pros which is pretty impressive i'm guessing if you want to win on macbook pro stick around guys because we'll show you how to make them work okay there's 15 nintendo switches in here there's 11 panasonic's that's right that's a lot of tech guys that's 53 000 guys that's a lot that would be good giveaways for the challenge you know okay let's not promise that we can't we can't do that it's a lot it's a lot but right as you can see for example if i decrease the number here it decreases the whole total cost not only does this decrease this decreases and so does this so if i just simply right it'll work perfectly if i could increase the number if i wanted to as well look at that it looks or just works seamlessly if i now remove something which i can it's gone i can move another one it's gone now it's just fifty fifteen thousand it all works live so let's go ahead and build this together let's finish it up remember part one of this amazon clone was in the previous video so make sure if you are just here to start out uh feel free to check out the videos before uh they will be there but if you're here just also watch feel free to watch those you can zoom thank you guys let's go ahead and make sure we have our project uh open and we'll get started right now okay so right now before we start can you get push everything for the final project oh you got it jesse thank you i'm gonna get push everything because jesse wants me to get push stuff so i'm going to say sudo this is this is github by the way if you guys don't know so for example if i want to use git and i want to go ahead and you know add something to commit i do sudo git add dot and this by the way is just old code not out code but this is called the me and js i've been working on and then if i want to commit something i do sudo git commit dash m okay and then i give it a message so for example here this is day four day four of the challenge right boom boom right there and so sudoku ad is like kind of staging the changes they're not committed yet but they're staging the chain again getting it ready and then we do pseudokit commit we actually fully commit that you know uh that piece of code and then i can do sudo get i'm only using sudo because of my computer it's a little bit dumb right now so to get push origin master and boom right so what does it mean origin by the way origin master so a few things we push now to github this is what it means when we push to github uh basically we're going to push to origin which origin is where github is okay and then master is the branch that we're going to push so our branch we're going to push is called master and then we're going to push it to github okay and that's it all right jesse you got it yes awesome so guys this is really important git github is something you definitely need when you're working a team okay so because nash push and commit everything to get i'm now able to pull it from git and then and i only have to do i only have to go into the project and basically do the command uh git pull and that's it i'll get everything all of the code all the changes that we made that's right all right so let's go ahead and get started right away i'm going to close up my other vs code and i'm going to open up a recent one which is the one we're working on which is amazon clone 2. now all of you guys that are currently on zoom raise your hand if you have the amazon clone 2 if you have the uptodate uh functionality do you guys have that yes or no you guys have the update functionality yes or no you guys have that yes yes yes yes good good good good good good good if you guys don't we have the link amanoth drop the link below if you are here please drop the link below into the chat so that we can tell show everybody the github link and they can download it okay but if we go ahead and i'm going to open up the current one so open with live server all right this is our current one you see look it looks pretty good i kind of like it i kind of like it a lot uh but of course it doesn't have the functionality that we talked about right we can't delete we can't you know add the card pretty much none of that stuff um but this is how now we're gonna make that all work so i'm let me go ahead and open up new window here just for me that's not for you guys okay for me actually because i want to see some of the code that i have as just kind of honestly as a uh as a cheat sheet i like to use a cheat sheet all the time don't judge me that's right we're not perfect okay okay nobody's perfect guys but um it's okay all right so part one where are we at well we first need to go ahead and do a few things if i go to amazon 2.0 let me go back to my index.html all right right we have this number one right here this counter it's just kind of there but if i go to the cart that counter is not there so let's first make sure that that counter is there okay and the counter is going to come from where let me go ahead and hide this for you guys hide this for you if i go to insta html you can see that we have a counter let me see let me see let me see it is a counter two two two two no not this one it's in the header somewhere card icon and we have this right there card item number you see that right there cart item number right there this one right here and it's right underneath the card icon so make sure you pay attention to that guys please pay attention that's really important all right card icon i'm going to copy the whole card item number i'll paste it even for you guys in the chat so you guys have it as well okay right there right there this is the one okay okay i'll place it for you guys in the chat and then what you guys want to do is let's go back to you know our file pages go back to card.html and then let's go ahead and put that in where put them near the card icon so if i simply just do command f and i say cart dash icon boom you see it show me the card icon is where it's at i'm going to hit enter paste it in there and boom we got it nice let's go and save that and then i'm going to give it a comment because sometimes i like to use comments it's very important guys okay pay attention to the way i'm doing this all right so we have cart icons boom right card icon all right so that way if i go ahead and save this save this in the html i don't exactly see it for some reason but why is that because i cannot okay the reason why i don't see is actually this is maybe why joe why you don't see it as well because right i put inside the card item number but the issue is where is it it's all the way here i don't know if you guys can see that it's right here you see that you need to do the positioning that's right because currently this little icon cutout number is position absolute but absolute to what so we need to give it a relative positioning for this specific dip that means i need to go back to my card icon i need to say relative using tailwind css and boom now it's there you see that joe make sure you have it just like that okay joe all right beautiful beautiful beautiful social relative so now we have that we've got that that's all looking great jesse what do you think this is the next thing that we should be working on so let's start at the start right when we are in the main section indeed when we're on the main section and we see one of those hot deals we want to buy that that's right so first let's start off with adding the button add to card okay and the logic is this guys when you click the button boom the item is in your cart so guess what the one becomes a two if you have two items so let's add all of that functionality and let's start here that's right so it's going to add added functionality for add to cart so if you go to in this.html let's scroll down and let's go to our product so we have one product right now which is this product right that's pretty much just just this product image and what do you think we should do in order to add another div for the cart well it's very simple i think we should add another deal for the card so i pretty much answer my question pun intended i know i know but that's okay it was very clear mmhmm so let's go ahead and do that jesse you want to do that right you give me a lecture oh dang yeah if you can give me your life here i need to get thank you sure that's right jesse oh damn you fancy live here fancy jesse it's it's the share of life let me see start collaborating oh it's still starting so while starting collaboration sessions you give me please be patient with me for a second and while we're doing that let's kind of create a new div okay i'm gonna say dude i'm gonna say class and this is gonna be add to dash card right there okay add to cart so so guys look at this closely it's in the inside the hot deal okay so main sections deal see that it's inside the main product so it's inside this product this is one product guys and we're going to put a add to cart inside that product okay that's what we're going to do i'm going to create that div and then we're going to give it a few different uh things so this at the car should have a text of add to cart let's go and save that i can see by the way the bottom is showing right there you see right there okay then i'm gonna do a few things we're going to give the height so let's do h dash eight okay and let's do with dash 28 boom nothing so far let's give it a background color and let's say bg bg yellow 500 so let's do this bg yellow 500 save that okay all right and then we have a bg yellow 500 to fully make it centered what are we gonna do guys well we need to add a flex to it so let's do flex okay and let's do items center oops items dash center again this is going to uh do item center oh there we go now the link is getting copied nice job jesse hey send it to jesse here for a second there you go yeah yeah yeah so that's good so that means it's center uh horizontally and then let's do vertically so actually this is a vertical vertical actually i forgot about that and then let's do now justify center to center horizontally boom okay then we're going to do text white boom and then let's go ahead and do some rounded corners okay well to give us around the corners it's just gonna be um just say rounded that's it so let's do rounded save that i'm gonna give you guys a word wrap so you guys can see a little bit better here boom there we go you see all right okay we're all good there add to card justify center it's time to look and that's pretty much it that's the art at the card is pretty much done i just want to make the text a little bit bigger so we're going to do the text md text md save and that's it that is it my friends all right also i want to be able to make it a hover so when i hover over this it feels like it's a pointer it's a cursor pointer right so i'm going to give it a cursor pointer cursor dash pointer okay so that means if i wrote this you see it's like a hand button now so boom anyways right it's a cursor pointer and then the final thing is i want to add a hover so when i hover over over this whole thing i want to be able to change the color that means i'm going to say hover again this is all tail and css hover with i'm going to change the bg yellow to not b500 to actually be 600 this is the really cool thing about telling css you can really add make this stuff so fast so for example if i just do this this this you see that's it it's already a hover and it's clickable and everything so bun done at the cart is now all done okay guys so now add to cart is add to cart is is done okay all right we've got that portion now what i want to do is actually i want to be able to add this at the card to a database but before i do that i want to be able to get the card items from my database guys because right now this is what let me go upstairs this right now is static this div is static it's not dependent any database it's not dependent on anything it's just a static html i want to be able to change that to where i get the data from the actual firebase database so let's go ahead and go to firebase right now okay guys everybody i went through firebase yesterday i'm gonna go through firebase again here so i'm gonna say firebase okay firebase.google.com great and then what i'm going to do is i'm going to say go i'm going to log in if you are not logged in make sure you log in i'm going to use my my other little thing here and then i'm going to say go to console go to console right here so go to console beautiful nice and i've got a few things so the one that we're going to work on is i think is this amazon clone 2 let me see amazon clone 2 right here okay all right and this is firestore now for those of you who do not have amazon or this firebase done i'm going to show you exactly how to do it so just one last time just to recap so you guys are not fully lost okay click add to project let's go ahead and i'm going to say amazon name your project whatever you want so amazon test if you want to okay click continue sure continue all right set an account that's fine default account firebase crew project there we go so click create project then you should be all good give it a little bit of a second and while we're doing that i'm gonna keep playing this move music and jesse just keeps trying to get into this culture it's my god my god got this okay i can i can control this code hell yeah okay beautiful let's go to so this is has been done right let's go now to uh project settings right here click on this project settings right there project settings select uh this little map right here now map what is this called like uh i'm not sure this is called like tag i'm not sure this is actually called but just select this okay all right from my web app say amazon clone i'm going to say test because this is a test one for me or you can call it whatever you call whatever great so now you have your firebase configuration that's it okay fibre configuration is done but what are we going to do now with this config well a few things we're going to go back into our project folder some of you might have fibro.js already here some you might not right if you don't have it do new file and say firebase firebase base.js dot gs sure right i already have it so i need to create it but that's it i have my firebase.js then what i'm going to do with this firebase gs is i'm going to copy everything that's from here this config command c that config and then command v that config right there okay that's it that's what i'm going to do right with this config then i'm pretty much done let's go to index.html i now need to import firebase into here so check this out i'm going to copy firebase app.js this script tag right here all right and you guys should all have that or if you don't i'm going to put it in the chat yeah boom right there and then put it is somewhere inside here so i'm going to say i'm going to put it in here right there see script tag firebase app then i'm going to copy this analytics portion which you really don't need but we'll just have it there for now and that's it and we're not done yet though honestly because i'm going to show you how to actually use the firestore because firebase is a lot of things firestore is the database that we're going to use so using firebase firestore okay so getting started with firestore let's go ahead and scroll down right there so with firestore it's telling you a few things right you need to import the actual firestore script right here you see we imported this one firebase app by the way jesse were you able to log in it's all good yeah okay great i'm labeled i just logged in now yeah okay great so i'm gonna go through this right now so firestore let's copy that i'm gonna put a few guys in the chat boom a month can we please um and include comments on youtube i want to make sure that we have comments on youtube command v on there okay so we have all these three different files we have one the initial firebase app that's the most important thing now you can see here i already have it there let's go ahead and delete that right now because i already have it there next one is we have the analytics portion i have that there too so i'm going to delete my second duplicate so i don't have i don't have a duplicate and the third one is going to be this firebase firestore so there's three things you need to include in your application in order to make the database work is everybody with it you guys understand that yes or no yeah good good all right so we got that and here you see it shows us hey you know the npm install all this kind of stuff but we're not going to do that instead we're going to do the following the one thing we're going to do is just simply do db firebase firestore so do that right now i'm going to save this okay and within that i'm going to create a new file called new file uh actually i'm going to go fibres.js and i'm going to say uh all right oh oop not the one that's not this one i'm going to copy this var db firebase firestore and this is going to make this db variable available to the whole index.html or the whole script.js when we're going to create this right now so oh that's right this db variable is going to be available everywhere that's why we're putting into like a var variable right because now if i do new file and i say script.js guys okay this is the actual script we're going to use to get the data from the firebase so now check this out all right really quickly i will go ahead and i will go to insta.html and i'm going to include my script.js inside here so let's do that right now script source is equal to script.js close it out boom and done right that's it you can see here is telling us hey how do we actually add the data you know how do we get the data like read the data so it's telling us right there right uh before we read the data from firebase let's actually add some items to the database because of course if we got nothing we're not we're going to get nothing simple as that i will go back to my uh firebase here right there oh not here close this one out i will continue to continue to console and i will go ahead and go to firestore database i will create my database i'm going to put into test mode for now just for now test mode click on next you can select the location wherever you're at so if you're in some other locations like this one i'm currently here in this u.s central so i will click enable that's right okay great so i'm going to start my first color so collection guys is a database right it's a database table that's how i think about it right a table what's a table anybody know what a table is anybody know what a table is raise your hand if you know the table is well it's kind of like this if i have this kind of table i can have rows of different data in here you see boom rows see and every single row is another item maybe this could be an item this could be an item this could be and this could be an item every single row has certain data maybe this could be the name this could be the image this could be you know maybe the url this could be the price and so forth and it continues on and every single row has the same data you see the same data now i know what i'm showing is very visual but let's convert it to actual uh data i will click start collection and i'm going to say i'm going to say items items next okay so now we're going to create our one our first row of data in our case is called a document we have a document id which basically is a unique id that represents that piece of item okay i'm just like i'm gonna say hey let's auto generate that id and now i'm gonna give the fields that i need so first field is gonna be what image okay it's a string and what is the value of the image well if i go back to my uh shopping cart oh that's not working there oh it's okay it's okay no okay it's okay i got it i'll put live server hey let's go see oh so quick oh no wait which one nice good good good good nice job guys wait let me go and open this up with live server as well nice good good good the smell one so this is my other application i'm going to copy this image address and right here and again if it looks like here on youtube you can go ahead copy your image edges as well and maybe you can paste it in uh as well i might maybe keep pasting the image somewhere else as well so i'm going to paste the image for you guys right now boom it's there okay all right it's there and then i'm going to use that one all right and then i will go ahead and go to my amazon application my firebase and i'm going to paste that in here as well guys that's then we're going to add another field called name and this name is a very simple well it's apple macbook pro all right let's go back to our firebase right here give it up a pro next one's going to be we'll do make make and that's going to be apple okay next one after that is going to be which one it's going to be the rating okay so we have the rating rating and you give it a number but let's not make it a string but make it a type number so i'm going to say 4.8 now i'm going to do 5.0 because i love mac so don't hate me all right and then i'm gonna give you the price of 1149 as well so let's go to uh firebase back we'll say price that's going to be a number and we'll do five uh two one thousand one forty nine again it's a number guys okay there's a difference between strings strings and numbers okay a string is just a kind of like a string like you know you can use a string like nazari or the actual word it's a word basically a number is a number right click save and check this out guys we have our first document in the collection this is our first row over from a database now how do we get the actual data and let me know if you're still with me are you guys still with me kind of yeah you guys still with me somebody said i just joined it's okay good good samir nice job good good good nice job match up so we have this field right here that's awesome sweet so now what i'm going to do is i will go ahead and actually go to my amazon and let's see what we can do when we go to documentation you can see this is how we get the data give me the collection users.getdata so i'm actually going to copy this with the collection and i'm going to paste it in i'm not pasting it for you guys as well in the chat boom let's go to script.js and let's create a new function called function function get items okay so jesse can you explain to us what is a function so get items guys this function will get all of the items that are inside of firebase that nas just added so um what is a function but what is a function in general like what does a function do for some people who don't know what a function is in general what a function just in general yeah what is a function so here on line three guys this is called a function well actually more technical a function definition okay this is how you define the function and this function is called get items okay so what you call the with the keyword function you're saying basically to visual studio code hey the code is coming after that that's going to be a function so you're going to give that the name oh my light went out and you're going to give it round parentheses because that means it's a function okay then when you open up the brackets that means all of the code inside of those brackets are being executed when you call the function this code how do you call a function guess what very easy you just say get items parentheses yeah and you call whatever you want so if you wanna whatever you function this name you give that's the name you call here so if you wanna say hey get item or get random items yeah yeah for example if you call it say hello then this function also needs to be called say hello does that make sense guys with the exact same decks can i get a thumbnail from everybody good good good good good so let's go and change it to edit items now of course when we name functions we are very careful with how we name them because it tells us a lot about what the function is all about okay tells us a lot about that if we just name it randomly if we name it like this good luck understanding [Laughter] that's funny right there so look guys this is a function called get items and this item is we're doing a few things we have git items we're going to be the collection if we go to our firebase we have a collection called items you see right here so because of that what do you think needs to go inside here put in a chat guys what do you guys think needs to go inside here that's right items so users we're going to say items dot get that then there's gonna be query snapshot this is a function right here this itself is a function as well it's called an arrow function and then the query snapchat is actually just a list of something a list of items so if i do console.log query snapshot right i'm going to console.log here and i want to show you something so check this out before i'm going to count this out just so you can see it we're going to call this kit items now let's double check to make sure the script is inside it is html yep that's there that's all good so now if we open our amazon if we right click and expect element on here it says what db is not defined which is fine why do you think that's the case well i think it's the case why is it why do you think that's the case over db is not defined because we have a db right here db and then we have db inside here why is it the case what do you guys think i know why the ideas that's right maria we need to import db but because we're using just vanilla javascript for now that's right that means something is not connected you guys it's a good hunch because right now look at this it's firebase.js but are we including that that somewhere no if i look at my insta.html virus.js is normally be found in here you see it's nowhere so we need to include firebase.js i'm going to say script and we need to include it after we initialize firebase right here and we can include it before the actual script.js so you need to be careful on the actual in which order you put it in put it in so go to script source papa i'm going to say firebase.js save that there we go so now we have firebase.js in there which has the configuration file as well as the script.gs and now if we right click on this inspect element console oh see we don't have an error but we have a weird something it's like nm it's a delicate it's a fire star has dogs it's like a weird data you see that right it has got like a weird data right so well when i say about weird data what is the data well here's how it's going to work let's go back to script the gs all right what's going to happen is basically we have a query snapshot that's the query that's the actual the the data that we get from here we're going to loop through the query snapshot using it for each loop then we're going to update and showcase hey what is the id of the document and what is the data for that id because why if i go to my firebase this is how the documentation is telling us to use it the doc.id then dock the data this right here represents the actual id of the row element this is the actual data for that element okay let's save it let's go back to our amazon right click inspect element oh console oh look at that we my friends have got some data this is the idea of the actual data object the one that we showcased and this is the object guys that is it all right maybe you can also show it in the fire store nuts that's right so if i go to firestore here it is you see it says p7 p7gl that's the id the same data is going to be if i inspect element console right there gl so it's coming directly from the database that is so snapshot guys is basically making a snapshot of everything you have in your firestore and then looping through all of the documents all of the items that's right that's how you take a picture yeah by taking a picture click click click anyways right so there you go so we've got that okay we've got the data which is great right because we have we have this doc data that's all gray it's all it's all good and dandy but of course we're not done yet because now it comes the hard part we need to actually use something that's on the data well let's actually use the data we have the doctor data when you do first number one create the actual item so right let's do let items i'm going to say this in an array is equal to an empty array for now okay then when we are looping through this when we're looping through this i'm gonna do the following items dot push items.push right open up the parenthesis and what's going to happen is we're going to push an object into this array right and here's the object the first this object has an id of doc dot id comma and then this object has an image right here doc dot image oh two not duct id but dot data no yeah it is no that's right it's right that id dot data dot image right then we have what name so now we have donk dot data dot name you see we're grabbing all the data from the document that we got from the firebase then we have what we have um image name we have make doc dot data dot make comma what is the last one that we have guys reading okay this is what we have doc dot data right dot rating oh and one last one's gonna be price so price the doctor data the price oh that's a lot of properties there's a lot of properties guys you see we're grabbing the properties and so now if i let's take a look at it so now after we push all this let's console the console load the item so console.log items items boom right let's take a look at it right click inspect element console array oh look at that id make name price rating everything is right there you my friends have got it you see that's literally all we had to do right all we had to do guys that's it yeah right and now we're getting the data from i know from the database right that's it goodbye have a good day so guys now that we have the data what do we do with this data actually i'm really curious what you guys think here in the youtube chat yeah so let's see how because this is the logic of the app right so um your script the js is working once your index.html loads up okay so get items being called as you can see so the items are all getting retrieved from the firebase and then what we still don't see anything in the front end right what do you guys think what do you guys think put it in the chat anybody anybody having any idea buddy hey be an idea well okay basically now what we want to do is we want to take the items we have here and show them in the actual database see or show them in the actual html that's not going to be the hard part that's right samir show the linux index.html and this is where we're going to create a function and what should we call that function i think we should call it generate items okay and once we generate items guys what is the data that we need so what do we have to give as an argument well i think it's items jesse definitely items so this is the thing guys we have a function we want to call it a function called generate items and we give it an argument of items that said we got to of course make that function that's right let's call it again function boom generate items guess what takes one parameter now i'm going to call it different parameter okay so items and once we have items like nas said we have to loop through the items okay so items dot four each item arrow function bracket open because now i'm going to do something with each item what do we want to do with each item remember when we let me go back to index.html in the index.html remember we were in the main section deals correct right here main section products right here right exactly main section products that's right nice and as you can see each main product is actually the item that we're talking about so so there's actually there's actually two ways to do this jesse okay okay so one way to do this is going to be that we simply just put the html so let's take a look let's go and just test this out okay i want you guys to see here okay so look think about like this this is the html and i'm gonna use this html to put it using javascript just take a look at this i'm going to copy this whole thing okay copy pasta command c and and that's it let's go back to the gs the cool thing is here is the following i can do let items html okay and this is a really cool way to do to do using using vanilla javascript guys this is so cool right i'm going to loop through every single item and then for a single item i'm going to say item is html right plus equal to i'm going to use something called backticks they're called string literals right right here and then i'm going to use to paste the whole thing in that's exactly oh so you're going to concatenate you're going to paste it next that's right follow up to each other yeah that's right so i'm literally pasting the whole html but this is this can only be done if you use backticks be careful guys back ticks if you use normal quotes like this it's not going to work you have to use backticks and that's found on your keyboard somewhere on the left hand side right here on the corner right near the number one okay so you can do shift that one okay so back is our stream literals and what they allow us to do they allow us to kind of use a lot of things well the biggest thing allows to do is they allow us to switch this data out and actually use data we get from us a javascript object like item here so you can see right here she has item and then she's placing item.name into the actual text that's right then she's going to place item dot make into the actual text then she's gonna change the uh keep the stars there jesse no sorry okay just change the number change the number right here right there and the item.rating is going to change the price right here as well and that's going to call item.price you see that's right and that's it but it gets even better because then look at this what about the source well the source jesse right here right let's change under the source of the actual image jesse yeah yeah yeah this one here you can do the same thing again you can do boom that's right item dot image and the image again where's this all coming from because remember if i did console log of the items here right i do console.log log items right items i just want to show you so you guys can see it okay all right inspect element and this one console boom console array one what do you guys see right all this data and so this right here is one item okay and now what i'm what we're doing here is we're doing the following here this image is gonna go into here okay this make is gonna go into here hey this name it's gonna go into here hey this price is gonna go directly into here and then this rating gonna go directly into here do you see that yes or no right and that's it guys right and so because of that we've we're creating this html dinah makely dynamically all right and now and i want to add something to this by the way guys because the price is not just going to be number it needs a format of course okay so you can do that really easily in javascript but you can call you can use something called numeral we actually need to import the first gesture you need to import numeral first jesse oh right yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah oh let's do that let's do it a little bit okay yeah okay let's do that later yeah yeah so that's right so good so then what i'm gonna do once we loop through this which is all good all good and handy we need to replace this html with what we need to replace whatever is inside this main section product with the html that we generate so for example i'm going to go to main section product right let me say the following outside this for each loop okay i will say document dot query selector selector okay i'm going to select the element dot main section product the inner html is equal to what guys what do you guys think put in the put in the chat what do you guys think what do you guys think here at line 25 guys items html that's right so now what i do items html save that my friend and then that's it look we got ourselves the array that's looking good and let's see if we actually get the general item let's go ahead and remove this console log we don't need this anymore this generate items right here is being called through here this items gets the data and then we actually create the items using html and so now if i simply just go oh look at that this is the data that's coming directly from a database guys directly from a database because that means if i simply just remove if i go back to minus html if i remove the whole main product thing this whole main product right remove it so there's nothing inside me such a product save it look it's there because why it's in the database so for example right that's right if for example i want to add a new document let's just say i want a new document i'm going to say image image let's just add a new document here guys ready let's do it right now let's join title switch copy image address paste the value here add field name also nintendo yo switch okay yeah field make make nintendo rating uh 290 waiting is gonna be two four point seven two ninety minutes uh it's a high ratings make it also into a number let's give it a 290 number save right so now we have two products and now if i go to my amazon and i refresh it oh you see it's right there but you can see now this tells us that oh doesn't work you know it doesn't work very well you know because now we have two products so we can fix that really easily if we go back to where if we go to main section product we just simply change this right here main such a product to be flex save that and that's it of course right and then let's go ahead and maybe add a margin right to the actual thing so if i go to back to my script.js let's do a margin right on the actual main product so mr5 save that oh you see now it's spaced out very evenly you have this item this item and this is coming directly guys from a database nowhere else how cool is that that's pretty sweet that's pretty awesome all right we've got ourselves the main product all right beautiful okay all right beautiful the next thing to do is let's go ahead and actually make this add to cart button work let's add the card button all right so that we actually add card items all right jesse you want to get started on the add to cart button yeah for sure oh you okay oh yeah jesse her camera just went down just oh my god i'm here still is she alive yeah it just is alive jesse didn't die no no please not awesome so where are we at now we have generated the items guys isn't that cool so i would say hmm what's up next well like i said we want to make sure that we have that to cart we're gonna make sure that the card is working yeah if we add something add to cart we want notification at the at the top that orange cart we want that to you know give the number of items that's right that's right plus we also want to if we go to our cart we want to see the products that we added to the cart that's right right here which we don't see right now no because this is static okay well we coded up yesterday that's right exactly hey jesse yeah i was gonna say okay now i guess i'll just continue okay so then what's gonna happen is we have the add to cart guys okay um now the hard thing understood we understand is we need to do something with javascript in with this button and react.js this stuff is pretty easy to make that work because you're just buying the actual thing but unfortunately with javascript is not as easy okay with vanilla javascript but this will show you how this needs to be done when you go underneath the hood underneath the hood this is actually how react gs works so in order to make this fully work it's going to be a little bit more tricky than we thought all right and how is that the case well let's take a look at it we need to make this button function when we click add to cart we need to know what card to add or what item to add but it gets a little bit tricky because how do we get this data once inside the html the data is inside the items right the actual items which is an array so to fix that we're going to create an actual element check it out okay and just pay attention here just pay very close attention don't worry so much not own documents or available own elements html element create element okay and this is an element going to be a div element all right document not this is horrible right there okay document underneath that we're going to say hey you know what doc that class list we're going to add all the classes of the actual main product dot class list dot add i'm going to add all the classes again this is using javascriptionality i'm going to say hey you see just how we have main product we're going to add the main product inside here so main dash product comma then we have mr margin right five right and then we have what um honestly on that that's pretty much it i want to say yeah that's it i'm identified that's all the ones we got so far so to create this document right it's nothing so far because all everything else is still working but here's the cool part inside here i want to say doc dot inner html is equal to the following also backticks we're going to take everything that's inside here this div product image right command exit cut it put it inside the dock yeah so we're going a little bit deeper guys it's going to be a little bit harder now but that's okay all right let me make sure that we have that okay there we go so now inside here we have that we create this div we have inside that we have the product image you know the product name all that stuff that's looking pretty good but what we're going to change now that's going to make this whole thing worth it is actually going to be the add to cart because you see how we have at the card is just an html element which we can't really do anything right now because to a string we can't do an event listener to a string all right so i'm going to default i'm going to say let add to cart element and i'm going to create a new element i'm going to say document dot create create element boom i'm gonna say this is a div okay all right and then i'm going to add all of these little uh kind of class list to it separately so i actually have this html right here or this javascript here so add to cart element that classes.ad the same thing is did it here we're do we're doing the same thing here i can copy and paste this oh what happened here there we go i'm going to copy and paste this for you guys so you guys can have it inside the zoom chat boom right there and that's it okay now we're not done yet because we have this add to cart element that's all good no problem right then check this out what we're gonna do is we're gonna say hey you know what the inner text this one add to cart element the inner text is equal to add to cart basically we're replacing this whole div as a string to an actual html element all right and this is where it gets really interesting because now look at this i can say the following doc which is the whole main product which is this one doc dot append child add to card element right oh good nothing crazy right nothing crazy but it gets even better because now look at this i say document remember this right here query selector i'm going to say document the query selector main section products that append child and then append child the actual doc which is this whole doc that we just said right here boom a pen child save that we can remove this inner html stuff save that and look it's there right we have add to cart you know right and so forth why do we have multiple out the cars because we have this add to cart it says html and we also have it here so let's go ahead and remove that save it and right there it's looking pretty good the same as before and so i know what you're asking probably at this point like nas didn't we have this before why are you telling us all this complicated stuff with the you know create element and and that's it well there's a few reasons because now i can go back okay because i have access to the actual element i can create event listeners you see it looked the same as before but before just a string this time it's an actual object and i can work with objects but i can't work with strings and so if i that's right if i go ahead and do this and i say hey add to cart add to cart element dot add event listener this allows us to add an event click listener i'm going to say on the click of this button comma okay i'm going to create a function like this boom and inside the function i'm going to call a function called add to cart and i'm going to pass in the actual item so the whole item data which is this item data is going to go directly into the add to confessionality and we're going to create the function at the card right now function add to cart boom of course it takes in one item save that that's it and now i'm going to console log right here console.log right add to cart clicked and then i'm going to show what data are we actually passing in console.log item boom now here's the cool thing add to cart is there beautiful add to cart is here let's see what's going to happen inspect element console log click add to cart oh look at that add to cart is clicked and here's the data that we clicked we clicked on the nintendo switch because i can now get the data i can pass it into our database okay otherwise i wouldn't be able to guys i cannot just pass in a string of html into database and then let the database figure out hey i'm gonna use this data this data and this data it does not happen i have to use actual data like strings you know right here like numbers that's why i had to create the whole create element thing otherwise i wouldn't be able to do it okay does everyone does that make sense guys i know this is a little hard to grasp but it's it's something we need you guys need to understand kind of sometimes okay because we now have this okay we have we're getting this data inside here we can do something with it okay and what can we do well let's figure out how do we actually add data to a firebase database so let's think about it so if i go to add data right here but we see it says add data that's exactly how we're going to do it but we're going to do a little bit a little bit differently because i'm going to say the following i'm going to say okay so db the collection the collection okay i'm gonna say you know i'm going to give the collection called the cart item card items okay that document so i'm going to create a new document that we're using with the id of item dot id okay so i'm going to create that right now so let card item db the collection id so i'm gonna do that right now actually let's do that kind of like this i got id and then i'm going to do um dot document dot i wanna say set data id i'm gonna do dot set right same thing to set the data and now here's the data okay the data is going to be what well first thing is going to be image right item.image that image comma then we have make item.make right then we have name item.name thank you jesse rating item that rating that's right then we have right uh quantity and already price but we also have to include the quantity remember how much quantity are we actually giving it right well let's think about this right let's do a quantity oh jesse a zoo quantity of just initially one we click add to card we're just any quantity of one item that quantity yeah right there that's it right set the price we have the rating we have the name make although that the question card items that dock item id and so forth all right but this is where it gets a little bit trickier because what i want to do is the following okay i'm going to go back to my uh amazon application inspect element and then let's test out what's going to happen console add to cart nothing all right well hold on let's go to our amazon database oh we have to make the collection of card items um not necessarily actually not necessarily necessarily because let's think about this card item dvd collection card items let me remove this portion right here that's set um id let me try one more time was it not add let me try it nothing let me try it one more time let's go inspect down but on this one console i think it's because we need to use dot ad so let's do that add oh let's do that add like this but i want to use a specific id so i kind of want to do that document item that id let me see so log oh are we give the item id or we giving the item we're giving the whole item oh yeah no the whole item so let me see so we're gonna do uh yeah console.log item when we click on it let's see okay amazon inspect element on this one console add to cart okay so it's adding to cart it's actually functioning but it's not doing the way i kind of want it to work mainly i i do think that that we need to add a collection called card items otherwise he doesn't know to which collection to add a document correct yeah i think we're going to do okay so in that case otherwise we first have to make a new collection joe you're doing that's good joe i like it that's good that's good so you're right so let's see so at first i want to just show you guys what if we did it just simply this way just that ad okay so i just said simply did that add that ad just how they have it here okay command c you know oh let me do this let me see hold on add to firestore with a with a custom id let me see so the duck and that's set so right there did we like collect the car items that dock let me see that should that should still tell you where that dog but then you're giving yeah you have yeah dog item id the dog item does id and the make and then you can use set if you like probably let me see the set that should work actually i'm not sure what that looking let's see command c let's see inspect element oh console yeah database nothing am i looking the right yellow base by the way oh it just didn't refresh oh it was working the whole time guys look at this i know i'll come on fire but i do think it's because you added the doc item id and no it was there it was there it was there the whole time actually oh so yeah so look we are creating a new document specific id which is this id28m and then we're sending the data for this right and so here it is it's showing up right here guys okay right here which is perfect exactly we want but of course here's the issue when i click add to cart here guys the issue is it's just going to add one quantity it's gonna it's gonna replace that one thing again and again and again look see look we also have another and again it's always gonna be quantity one but shouldn't we if we for example if i click add to cart shouldn't it add the quantity one plus one plus one plus one can i get a thumbs up if you guys agree with me on that one yeah right so it should be plus one on the quantity that's already there but here's the question what if the iron item does not exist inside the card item what if it does not exist this is weird well you have to check first if it's new that's right so you have to be a little bit smaller now at this point that's right right so what we're gonna do is a little bit different now we're going to grab that dock right here okay listen up we're gonna do card items i'm going to say let card item ezekiel do the clutch the card so basically we're going to grab a specific card item based on the item id okay we're going to say card item dot get right they're just gonna get it and then that then on the card item and then we'll do a function right like this now there's a lot of complicated stuff but don't worry we'll do doc okay and then inside the dock a few things we can do we can say check the following we say if doc exists dot exists basically if it's if that already exists right meaning we have already added our first quantity to the cart then what should we do what are we going to do plus one on top of that if you don't want we will do a card item dot update right the update that update i'm going to say update the quantity we'll do quantity right quantity and we're going to get the current doc theta right there the quantity plus one plus one right there you see so we're gonna up if the basically if card exists it's like this right it's like this kind of like this if item exists exist right add quantity to t to current one otherwise otherwise create a new card item okay that's the functionality that's the pseudo code and that's it guys so we have the if doc exists else meaning it does not exist yet it's a new one that we're going to add i'm going to say caroline.set like this boom boom card iron.set the image the make the name the price the rating and of course it's going to start up with quantity one but once it's there it's always going to increase the quantity plus one plus one plus one you guys got it so let me go and save that and let me show you guys how that works so at the cart let me see let's look at this now the quantity is one two you see right there let me show you i'm gonna show this to live to you guys i want you guys to watch this portion right here watch this quantity as i increase it on my end three four five six seven eight nine a ten that's a lot of nintendo switches how cool is that you guys did it it is now in a database and that's it right and if i add a new idea for example this is a macbook pro right look at the cart you see it just appeared right here and now this one started out with a quantity of one that's it right so again add the card one two three four five six assembly and nine and then you see the quantity is now increasing that's it my friends so we've done that and that's pretty pretty pretty much it which is really cool let me go and remove this set because we need a set right here right here right save that and our active card functionality is now working and it's working pretty darn good so now what we can do now we have the add to cart we have the generate items regain the data from there just see what's next jesse tell me hmm what's next what next what's next where you want to write that notification function or shall we go to the cards html let's make this notification i can work awesome so that means so what does that notification actually say guys put it in the chat what does it say what does it represent i want you guys to start thinking about that what does it represent it represents the amount of items that we have in our cart so the amount that we added the total amount correct so if that's right monique exactly monique number of products in cart very well so let's go to our index.html okay and let's look up that um that card and as you can see on i believe on line 45 nas has made that beautiful comment there of card icon okay and indeed on line 48 that's exactly where we're going we're going to be working with that because here look we have a hardcoded one there but it should not be hardcoded right it's dynamic because it represents the whole um everything that's inside of the items so nas what's the functionality we should write for that so let's create the functionality to actually get the card items right get the card items that's right and get the card items and then let's try the functionality to where we can actually you know generate that amount of quantity now because we're going to be smart about this you see we have card.html that both have the same data cut the html index.html right they both have the header we're going to create our own javascript file called called head.gs so let's do that header dot js all right and this header.js is going to be shared by the card.html and index.html all right that's right so let's go ahead and do that let's go ahead and go to index.html and let's include head.gs so inside here we'll do script source is equal to header dot gs boom done all right so let's include instead of html and it's included inside this card.html as well in both pages guys that's right so let's do it like this script source right cart um header dot gs boom in both pages all right yes that means now let's go to header.js and the first function we need to create is going to be a get card items so that's right thank you jesse so get the card items and this going to get the card items from an actual database right and what is that database guys guess what the collection that we already have that's right cards items by the way guys make sure that this cart items is exactly written the same way as the collection is called in firebase okay otherwise you're not able to retrieve the data okay so that said let's continue again i want to know what's inside of the fire store i want to know all of the items that are inside of it so i'm going to say on snapshot that's right but look at check this out on snapchat is a little bit different than what we had before if you go to script ngs you see before to get data we used the get.then let's try that right now and then we'll talk about what on snapchat works so let's see yeah that's a good one that's a good one so first get okay which is a function first function and then then so we're going to wait whoops not touch event then okay and then we're going to wait what was it quick query snapshot that's right so let's do query snapshot query snapshot right here okay that's right and just how we have it inside here this for each loop okay inside the for each loop let's go and open this up uh one second jesse one second so be careful with that because i need to create you to put into a function oh sorry sorry right so inside the query snapshot we're going to loop through that just how do we we did it before it's no question i'm sure that what for each right here oops not like that four each right for every single element we're gonna grab the dock right right there and of course we'll get the card items but now let's be smart about this because look we have the quantity you guys tell me how do we figure out what is the total of card items inside the card because it's definitely not two what is the equation we need to use to figure out what is the total amount of card items inside the card it is not two what is it guys well the first we have 14 nintendo switches okay i think how many macbooks do we have which is going to be 10. so that's 24. that's right but what i do know is that with the query snapshot we made a snapshot of all the items so we're looping through each document so nintendo switch and mac and from each document what do i want to get guys yes the quantity that's right so i think we should make like a variable called count total count and of course we're always gonna start off with zero so total count indeed and then we're going to say total count plus equal to the quantity of each document so doc data parentheses dot quantity so that way when we're looping through all the documents we're adding up the quantity of each document each card item makes total sense right that's right then of course now that we have that number next thing is of course that we have to do something with that number but let's first log our total currency of our calculation is correct let's go and call our function called get card items save that inspect alma on this one so guys the answer should be here 24 let's go michael there we go that's what i'm talking about are you are you in the library again nice beautiful so we got that right it's 24 because why we just added the quantities together but of course now we need to we need to do something with the quantity right we need to actually change this data right here that's it yeah so just like we were generating card items or you were generating items we also you know need to set the counter so indeed set card counter and then give it total count that means also we gotta write a function called set card counter of course with the total count okay and now let's look in our what was the class again where we had that little one where we had that heart coded let me show you a card icon it is called cart item number aha here guys on line 49 cart item number so we're gonna get this class and look now we got the hardcoded one inside of there but if we go back to our header.js let's add that in and say exactly document.queryselector and we're going to select the card item number class and then we're going to change the inner text tada with total count that's it guys hey let's go hey that's a big win for us look 24 just the way it should be 24 right now in the um index.html you can remove that one okay you can remove that one so if you go to any html remove that one we don't need that anymore sign up baby let's go let's go let's go back to head.gs okay and let's see this so so let's take a look at this okay so if i an add to cart let's do add to cart see i click add to cart but unfortunately it's not showing a new number i need to refresh in order for it to show 27 because i clicked it three times oh yeah so it's now real time right now but this is where it's a trick for us we need to make a real time that's right we need to make a real time so the real time here nas is that you know when we're adding something to the cart when you're pressing that button we said right we're gonna add something to firestore that's right and then the cart is actually getting the items from a firestore however it only does that when you refresh the page again but firebase can help us a little bit with that right that's right so let me see db okay let me see you guys you can type jesse go heck i'm going okay so db collection and now i'm gonna use the on snapshot function of firestore so instead of first getting it and then waiting for it till i got it i'm gonna remove this okay i'm gonna remove this line and i'm gonna say on snapshot and not query snapshot but just snapshot okay and that's it well no that's not totally it here snapshot for each now what is it that snapshot does on snapshot has something called an event listener so when something changes inside of the firestore firebase knows that and then it will just pass the data through and say like hey something changed in my database maybe um you need to keep track of that so to give you a technical term guys this is called the websocket all right this is called a web socket when you on snapchat it's going to create a websocket so really what's happening here is add to cart and you click on that that adds something to a database because we have a consistent web socket it's called it's like you have a kinesis for example it's like me have always having you know you guys ever used uh for example anybody use those cups you know what they're called those uh listening cups you know those like uh what are they called yeah one cup you put a strawberry you have a rope in between and then you can listen to somebody yeah yeah yeah yeah that's right that's right that's right that's right so right every time we do we do that right between the cup it's like you're always listening to the database that is what's called a websocket you're listening to any changes inside the database so what's happening here when you click add to cart because we're using on snapshot this gets triggered every single time something inside the database to the car items trick gets triggered and then that sends the update back to us to the amazon clone that's why you can do on snapshot here and then you can do snapshot.docs for each and this will always be updated every time you change something in a database all right so let me show you how exactly that works let me save that oop save that if i go ahead and click add to cart i want you to pay attention right here everybody ready pay attention are you guys ready for this you guys ready zoom in zoom in though uh well if i zoom in then it won't you won't see the me click at the cart so okay pay attention to here three two one are you ready let's see oh look at that boom boom boom boom boom it's working automatically this is a realtime database now you have a realtime connection to the database now so nas can you show that again with the coding screen oh there's no coding screen it's there no this one it's right here right jesse on youtube it's just our facebook i keep always forgetting about the youtube thing all right oh man sorry youtube so guys right so like i said we have the card items right here right we have the snapshot because we're using snapshot it's got it's like always having the connection right and if i do it again at the card one two three four watch this one two three four five it's always there and it's always going to be updated who found the really cool guys i always find this really cool anytime this is a realtime situation i'm always like you can do that you can do that in coding of course you can't coding is cool so there you go rehearsing is the best we have our functionality to add to cart okay so before we get into the actual card that you asked the card you know the actual card um app i want to do something really small right now and i wanna you see how kind of right now when i make something smaller it's kind of like um it feels weird you see how this goes outside the box right there you see i don't like that way too much right so let's make that change right now because i want to make it clean all right so to make that clean i actually want to make sure that this whole thing grabs down to the bottom okay we'll make sure it wraps down to the bottom so let's go back to our inner html all right let's go to our categories right there cyber uh not those categories popular categories which are uh da here these categories right here right and what do we know well in order to make sure that it actually fully wraps around we're going to say flex dash rap boom see when we because we decreased it wrapped the second line otherwise it's just going to keep going one line all the time like strap but because of that problem because there's a padding on the left hand side of every single element see when i when i look at this here there's a margin left and every single element let me show you here see margin left six right here that's a problem and so that's why it's pushing it like this and to remove that we're going to actually do a margin right six out of our module left check this out i'm gonna say like this so i'm gonna say like this so uh i'm gonna select this one i'm gonna do command d or ctrl d to select multiple things boom boom my trick that's right i know jesse's trick exactly we'll call the jessie's magic mr6 boom then that work out oh mr my bad save that right there you see now it's a lot better right we have space on the left hand side and we have here let's copy this to mar sj6 and let's make sure to put it all the way on the first item as well because the first item has nothing so let me go back up this first item does not have any mr6 right boom a little bit cleaner now much better but we're not done yet guys not there yet what i want to do now is i want to uh add a padding top you see how there's no spacing between right here do we see that everybody well let's add that let's be smart about that okay let's be smart about that to do that we're gonna actually add a margin top i'm gonna select mr6 again command d command d command d command d command d that way i can type all the same time much faster so multiple cursors multiple cursors that's right right and then what i'm gonna do is i'm gonna go to the left hand side click space and do a margin top dash five all right and that added everywhere you see it added margin top right here right here right here to every single element so i'm going to save that now and look at that there is no margin inside here but this created now too much spacing around here which i don't like which we can remove right now all i have to do is go to the uh popular categories and just simply remove the margin top 10 i think that's on the main section probably no no not here no this one module 5 that's under categories save that boom and look at that our popular categories are now much much cleaner than before would you guys agree with me i mean i do i don't know if you don't but it's too bad you know if you don't and if you make the screen smaller nice it would also have to be yes let's go it's becoming now a lot more mobile friendly and that's our goal is to make this a lot more mobile friendly so now look is that cool guys that's really cool we've got our index.html that's all working very well let's get to the hard part and let's work on the card jesse okay are you ready i know what is the hard part well we already did a lot of hard things so we added a functionality to the add to cart button uh once we had that we um had the notification functionality okay that is showing up in our card but now if we go to the cart page we actually want to see the items that we added correct so in our car touch html yesterday we already added i believe the nintendo switch yes but guys remember this one was hard coded yeah fully static fully static so let's make it dynamic okay let's do that jesse and as you can see the part that that knot is highlighting guess what that's the part that we're going to be making um dynamic and that is one card item one card item and guess what guys to what class are we adding card items boom cart items line 111 okay so let's do that and let's open up and make a new file called car.js so new file card.js book okay and of course the card.js where do we want this file to work guys in our card.html correct so let's link that up at the top okay so just like we linked up the header.js i'm just going to copy that one and i'm going to boop paste it in and here i'm going to say card.js like this okay uh that's it right now i'm not forgetting anything right yeah that's it the only thing we need to now import besides the gs is let's import the header.js inside the card.html to make sure that's all working all right so we got the header how the gs is centered html which is all great that's great and dandy uh but it looks like for some reason it's not updating this number i'm not sure why that's the case let me take a look at it here the card icon card item number that should work it still says want for some reason had that gs actually i know that's not working because why we don't have don't have any firebase that's right that's right so let's go back to our index.html and you see all this firebase database let me go and make this a little bit smaller so you guys can see it better let's take all this firebase stuff and it kind of starts from here command c i'll paste it in for you guys as well okay paste it for you guys right there yeah guys so make sure you have the exact scripts with the gstatic.com okay like we got different documentation yesterday and then you're gonna add your firebase.js file yeah you may have to make sure that you add that beforehand.js because because header.js uses firebase to actually get the data right so we need to include this that this right here we also need to include firebase.js because firebase.js contains all of the configuration files right so we'll do right there just doing it right now firebase.js yeah header.gs and the card.gs is right here so save that and boom you can see right there 409 is right there just how it should be we can now go ahead and remove that portion where's the card icon card icon card dash icon let's remove that from one second here this one we don't need this one anymore save that one and that's it you see now it's just 49. and now we can focus on actually making sure that all of this stuff now works the way it should be and they're actually coming from a database and not just static hey let's go so let's write some code in our cart.js file so let's go call the gs and let's write some code right as if we don't have run any code in it before well we're going to write functions again guys so by now you know the drill right so what are we what do we want to show at the cart page tell me we want to show card items right so like before we wanted to show items the hot deals now you want to show cart items and we wanted to make dynamically you want them to get out of the database okay so whoops function get heart items i'm going to name a function like this okay and of course um we're gonna be using firebase so we have everything already imported so i can just say collection cart items and guess what what do you think we should be using should we be using the query snapshot or the on snapshot and why let me know in the chat guys what do you guys think honestly what do you guys think snapchat because what if we update something what if we update something right we put it so on snapshot is like i said and now snapchat is going to have a websocket right it's going to have a live connection to database that means any update that happens to a database is going to update our application right away if you just do you know if you just do uh you know get that then it's just gonna say hey no let me just get the data currently that currently there is that one time when you reload when you load the page but then if we do you know do any updates it's actually not going to reload because it does not have a live connection to a database right well on snapshot does that's right samir on snapchat has a constant connection and dynamic updating that's right samir so i'll do it right now so i'm gonna use on snapshot and again guys it's making a snapshot of what's inside of my firestore okay so you want to map through that okay so snapshot.docs for each and then we're gonna do something with each dock of course now we want to get each dog we want to get each card item so we would have to store that somewhere right in order to get that so let's make here let's make an array and let's call that cart items okay and when we're looping through our fire store you know based on the snapshot that was made made we're going to say oops items that push and inside of here we're going to push an object inside of it with these properties doc dot id and remember you could like you want to do it the short the short way or the long way let's do it a long way for now jesse the long way okay got it so remember this guys we're gonna add all of the properties of the card item inside of there so let's check what we did at script.js because i wanna have exactly the same here like this these so i'm gonna copy paste this go back to my card.js okay and boom this is what i need so just to give you guys a little bit of an update okay what are we doing here well hey you know what we'll say hey give us the latest snapshot kind of like hey take a picture of our current database from card items for every single item that we have inside here we're going to loop through it okay and we're going to add it to our array right here but i want to give you a little bit of a cool trick guys are you guys ready for this you see how we always have to do this whole thing every single time you see how we have to do is to do like image name make rating do you want to keep doing that like it's that's that's probably tiring right all the time to just keep doing the same thing over and over again am i right give me a raise of hand if you don't do that because i definitely don't right i don't i don't either so we can actually remove all of this and make it shorter and here's here's how because we can do dot dot dot dot data and that is it mic drop why this is what is this called this is called i call the underwrapper red operator the spread operator is going to take any data which is all this data that we have right here and it's going to put it kind of like unpack it it's kind of like how you have a package how you have a you know present you unpack the present and you take out all the items from the present and you you lay them out yeah the same thing happening here is taking out all the items from the doctor data and laying them out and putting them inside the card items that is it dot dot dot is your savior right there so now that we have this let's log the items that we have console cut lock card items okay and of course we have to call the function because otherwise nothing's gonna happen okay so let's do inspect element on here right here console right console right there all right it's got two items one and two that's it guys it's all done so all done though all right cool all right what's next so again guys once we have the data what do we need to do with the data we need to generate it this is always the hard part this is the hard part guys for sure this is the hard part that's right that was the hard part this is the hard part because now you gotta add it to your html and think about what is actually going on okay but that's okay we're just gonna guide you through this okay so generate card items start at the start make the function okay function generate card items and we got the card items as an argument here okay that's my function definition now we can do this a few ways and before now i showed you you can either concatenate the string in your html or you can do it the other way um we did after with creating the elements however this time it's a little bit more complicated so let's break it down into steps okay so let's start off with this and first say like we did before say let items html and let's make this an empty string like this okay then we're going to loop through each card item so we're going to take card items for each item okay arrow function and this is going to return boom it's going to be a it's going to be a concatenation too so here items 1880 can i talk anymore items html plus equal backtick backtick okay and we're going to type inside of the backticks i don't see you typing jesse no you didn't see me typing nope here no hello okay so i'll just do in that case okay okay so we're going to go ahead i'm going to loop through every single item which we have done right now cut items down for each and then for each item which we get from here we will add the two html so i'm going to say items html html plus equal to oh there we go now it's there working okay all right now it's working jesse go ahead jesse now oh oh no i haven't there okay okay okay good good so card items we're gonna be looping through okay and um so let's go back to our card.html because that is where we had the card items right that's right the card so line 115 okay that's where we have all the card items and guess what we want to have yes we want to have one card item boom so if you can copy this nas yeah i got it awesome right and we go back to card.js guys and now it's going to paste it in here html plus equal to back to tactic tactic command v boom boom done awesome done and done so and now guys like we did before right because we're using backtick backtick guess what we can use something called template literals okay so here for the image guess what dollar sign bracket open image okay and we're calling it here item okay so you can always call this also cart item if you want um you want more clarity but we call this item now okay so it's gonna be the same this one's gonna be item that name or not that name but bracket okay item that name okay here it is gonna be make right and this is in the total cost for first i'm gonna say and then we're going to go ahead and change up the price so we'll do right here item.price okay let's go ahead and save that oh jessie just suggested just adjust it just adjust it just adjust it to see okay oh hey i don't see your code i am the price right and honestly that's pretty much it at this point the only other thing that we have to do is do the quantity so let's go ahead and change this one to quantity right here item.quantity quantity save that that's looking all good and that name and that make and then add that image and we're all pretty much good look we have the images it's all looking great nothing bad so far so now we can replace html and actually put that into our what into our card.html so if i go back to it right if i go back i see my card items what class i'm going to use to replace the inner html4 you guys tell me you guys tell me you guys should notice by now we've done this with the normal items what is it what is it it is going to which one card items right here that's right yes the card item so i'm going to copy this one go to card.js and i'm going to say document but this needs to have an outsider for each loop i will say no not inside here jesse outside the for each loop okay yeah it makes sense i'm gonna say document that query selector right that's something that card items all right dot what for each or two what we're thinking about for each inner html is equal to what is it items html right there so i'm going to say items no isn't it inside of the for loop because we want to add each item to the card items no actually it's fine it's fine like that it's fine yeah okay it's fine actually yep so there you go guys look we have 14 nintendo switches 35 apple macbook pros that's pretty good but of course one thing i want you guys to pay attention to is this total cost is a wrong cost so when we do ironed our price what should be the actual price it should be what item that price times what you guys tell me oh it would be nice though to have 14 nintendo switches for the price of one yeah tell me what is it i'm waiting for you guys waiting for someone to be in the chat to say that to it come on what is it what is it what is it what is it what is it that's right times the quantity i doubt price times quan tt yes save that hey you see oh what happened here i know that quantity my bad item that quantity right there boom four thousand dollars and forty thousand dollars for 35 macbook pros so now you know if you ever want to buy 35 macbook pros it would actually cost you forty thousand dollars guys which is not a bad price tag at all get it while it's hot because it's gonna bon it's gonna be gone pretty soon okay that's like a commercial i like apple so that means we can go to college html guys and we can remove all of these little main products so let's remove this one card item we don't need that anymore let's remove another card item right here boom by nintendo switch right and that's it yeah now it's empty and so what i like to do actually in this case i like to say i shall do like this wait time time all right um cart items or cart items right here no card yep card items from let's get db that's it save yeah there you go look at that that's it guys but of course we're not done yet because now we need to make sure that this kind of stuff works so let me go and remove this stuff we need to make sure that this works this works and this works yeah so what is what are we gonna do to make that happen what are we going to do to make that happen well guys so as you know those little arrows are called chevrons right and yesterday we used those from the font awesome library so what you want to do is you want to click on that arrow and then either your amount your quantity increases or decreases correct that also means that that arrow should have event listener right of click because you're clicking upon it and boom something needs to happen correct so what you can do plus what else is important you need to know which item you click because you want to know if you click upon uh decreasing the nintendo switch you want to you know have 13 instead of 14. if you want to up it then it's going to be 15 or 60. that's right but you have to know it because apple macbook has way more it's 35 right not 14 or 15. that's right so what we do first is we're going to add another class to um the chef front actually that right now so here line 31 pay attention guys we can say data hyphen id is equal to item dot id but why are we doing why we end data jesse why we end data why we have the data why are we doing this because when we add an event listener to this we can grab that data from this div that's right and why do we need that data yeah we need the data because we need to know exactly what cart item we want to increase or decrease that's right because of course right if you guys go back to firebase right this has a specific id and so does this and so we need to know exactly well what are we going to update are we going to increase the quantity for this nintendo or for this apple right and so that's what we need a specific id of when we click on these little icons right here right and so we can do that by simply just putting a data id inside html which we can grab later on and extract it so watch how we do that which is really cool so guys i added item ids on the left chef front and i added an item id on the right chef run so that will you know let us know what item we're going to be increasing and decreasing that's right correct so that said though this is not going to happen just out of nowhere right the chevrons they need they need to know when they're being clicked on so we're going to create event listeners okay for them so let's create a function called create event listeners okay okay let's do that right now yeah create event listeners whoop listeners okay like this and of course now that we want to call it we need to define it so here create event listeners and let's think about this guys what is it that we want to do we want to have we want to decrease we want to increase and we also want to delete those are all things that have to do with quantity right so what we do is let's do this we're going to create decrease buttons okay and what do you think these decrease buttons are equal to basically we're going to grab every single decrease a button we're going to grab it from the html and then we're going to add any click listener on that button but first we need to actually grab it so let's do it right now right so the decrease button is always the left chef run that's something that we know for sure correct so we called it here we called it class chef from left but we can also call it to be a bit more um descriptive instead of chevron left we can call it cart item decrease you see that what happens is highlighting and instead of chevron right we know that this one's always adding something so we're going to call this cart item increase okay like this that said when we're you know going to create event listeners for the buttons and we know that all of the decrease buttons all of the buttons that decrease the amount are d look guys document query selector and i'm gonna say oh i'm gonna get out all of them because look if you have more items in your card you want all left chef runs all left uh cart item decrease buttons you want all of them to be targeted right so that's why you got to use query selector all so let's do this card whoop card item decrease boom like this okay then very easy once you know how you did this for the decrease of course the increase is going to be easy okay just going to copy this paste it and then my little trick you're going to select the d e command d boom you're going to say i n increase so we have now selected all of the increased buttons you see that and of course not only that we're also going to be making the delete buttons so let's focus on that later jesse let's focus on that one later oh okay so that said guys now that we have the increase and the decrease what do you think we should be doing well like i said before right uh we're calling this multiple we're calling this buttons because if you have more items you have more decreased buttons so we're gonna loop through those okay and then for each button guess what we're gonna add an event listener so we know that something needs to be done when that button is being clicked on okay so button dot add event listener and guess what is the event guys what is the event that the button will be listening to click right the click event and let's think about this why are we using it for each loop right mainly reason b is because we have multiple chevrons we have multiple decrease buttons and so for every single button that we have here we're going to create the exact if same event listener but just with different data yeah just with different data so here i got the click okay i defined my event okay and once the click happens then decrease the count that's what we want this button to do and guess what this button hey now we're gonna be using the data set oh shoot what's that data set dot id but this data set is actually coming from where well because we're using data dash id which is right here this data dash id i'm getting the data id html gives us access to that so if i'm going to grab that button right for every single button i'm going to grab the button i'm going to give the data set the way to get the data id is to use button that data set and then whatever you want in our case it's the id whatever it is on here is what we're going to put so if i said if i put here apple i would say here dataset.apple apple understand does that make sense yeah so whatever it says on there is what we're going to grab that's why for sure and now guys we made the we we're calling a decrease count function but we haven't exactly made that yet so it's not going to do anything so let's go to the top of our of our card.js and here after the get card items let's create a function where we're actually decreasing the count okay so decrease count boom or giving that the item id now why do you think the item id is important guys oh no you tell me jesse well if i decrease i want to know exactly which item i am decreasing in quantity of right if i would click on the left chaff run of the nintendo switch i'm going to get 13 instead of 14. that's right right so guess what guys we gotta work with firestore again so i'm gonna say here card item is equal to db collection you guys know the drill card items and guess what we're grabbing that specific id card item by saying doc item id you see that now we got the specific document from the firestore now that we have that we're going to get it we're going to say cart item dot get then okay okay then and once we have that okay we're gonna be checking whether that document really exists okay like this if document exists because it might not exist might not most of cases will because it's in the actual card you know most of the time yeah but it might not so if it exists okay then what do we want to do guys if we want to decrease the amount what do we want to do we want what do we want to do we want to update the card item oh we want to update the quantity but if i um what should my amount at least be in order to decrease from it what does it do because we cannot let the item go down to zero right because that would completely delete it there's no point of doing that at that point we have to make sure that there's more than one card items right now or more quantity that we have to make sure there's more than one so that's very well said so doc dot data quantities bigger than one a and then we're going to do something now we're going to update it that's right now we're going to update it so now we say cart item dot update and we're going to update it with the following we're going to say quantity which is the you know the property inside of the firestore right what not has been making there and then we're going to say we could say minus 1 but that's not really what we want why is that guys why is that because there's no point it's like minus one from what exactly minus one from what so tommy says that's great what you have but you want yours we're now we're going through it so you want to make it a little bit more dynamic and go like this you're saying dot data quantity minus one so you want to get the existing quantity but you want to decrease one of that that's it right and that's it that's it guys so now based on that let's see if it actually works jesse we have decreased count recalling decrease count inside here right all right are you guys ready shall we test this out guys i guess let's test this out log here oh i don't know but i'm just ready to test it out let's go let's say okay three okay two one let's go wait oh let's go hey look at that and even this total cost is decreasing also guys look at pay attention to this boom damn how cool is that huh did you guys enjoy that yeah anybody here confused raise your hand if you're confused pretty much everybody that's great that's awesome but are you learning a lot there you go see so guys we have got the actual chevron it's all working really well we're decreasing the count that is it my friends so now now let's work on the increase the count right let's look at the increased count all right so the increase is not that much different from the decrease okay so let's do it increase buttons i already uh we're doing there again we're doing the query selector oh we're selecting all right chevrons all the buttons that can increase the quantity and here look increase buttons we're gonna loop through those buttons okay button and of course also to this right chef front we're going to be adding an event listener so button dot add event listener and the event is gonna be guess what a click okay and once that click happens whoops once that clink happens we're gonna fire off a function okay and guess what that function is we're gonna increase the count with this function so increase count and what do we need to know when we're increasing something we need to know which which item it is so we're going to give them that data button that data set that i t now okay guys so we wrote we just wrote this okay so now we're going to wrote the increase function because that's what happens upon the click right so awesome increase count thank you nas mmhmm we're going to give that the item id yes and then and again whoops we're going to get um that from first from the database from the firestore okay so just how we did it here we're going to the same thing here exactly and again we need a specific is id for the dock so we're going to say dock parentheses open and feed it the item id now that we have the card item we're going to get it oh get it like this and once we have it again like before we're going to check right whether that document really exists if doc dot exists okay what do we want to know guys when we're we want to add something to um we want to buy another macbook pro what is it that we actually need to do we need to update it correct but we want to update it even when even when it's zero but that's not we still want it right so the condition here should be dot data quantity is at least bigger than zero okay and then we're gonna update the cart like this boom now instead of decreasing or now increasing so what are we going to do guys let me know guys let me know in the chat guys well we're going to take the data doc.data.quantity jesse and then we're going to do plus one on that one guys okay yes that's right plus one that's right like this boom and that's it and so now if we save that let's see so let's see let's see if that works now have the increase count function right here just double check recall the increased count function here we have an event listener and every single button which is perfect if i do this now oh there's wait does it work it works let's go i do this and pay attention to this as well not only this works right not only does this work right right right here no does this work but this works as well and this works right so if i increase the count look at that fourteen thousand two thousand two thousand three hundred three six hundred and we just keep going keep going so we have everything working together beautifully we have six 56 items in our cart i know it's a lot of items guys i mean you know if you if you want the technology you want the tech you know you gotta get go for what you want yeah you gotta gotta go what you want for sure you know life's short so let's now go ahead and work on the functionality for the delete this delete button because of course we can only go to one so if i keep decreasing this number right here right right i just i can't go any lower because there's no point there's no point in me going lower only way to do is now just remove it from the actual thing so let's go ahead and instead of doing decrease buttons we'll do let delete buttons right right same thing we're going to grab every single button from the html that's inside here right like this grab every single button that's inside right here grab that from the html and we're going to add an event listener so i'm saying document document the query selector all right here that's going to grab us all of those specific html elements okay all right and then we'll do like this what is the class name called it's called card item delete right there but of course remember we have to know what we're going to get data from so what's that we need to put this data id also for the card item delete boom save that that way when we click on it we have the functionality too so let's do that right now let's go back to our daily buttons dot what card i delete right here two to two card item delete which is let me see where is it where is the reserve is it it's going to be card item delete right here command c command v to paste it in there beautiful so now we're going to grab all the buttons and i want to show you exactly what's happening here i'm going to console log delete buttons that way you understand what's actually going on when we do document the query to all and i want you to pay attention to this really closely okay so guys listen up please listen up if you're here listen up i will right click inspect that one on this one let me put the right hand side let's go to console put on the left hand side oh right here you see these buttons right here look when i do the query selector all this is what it's giving me we have what we have this one div you can see it's even highlighting it inside our html i have another div so it literally got me the html element i think if it's an object think of an html almond is like a cup right right and we just kind of got whatever is in this cup and we cannot use whatever is in that cup that's literally all that happened the same thing happens when we do when we do what the increase buttons and when we do the decrease buttons right same thing happens there so now what we are going to do is with delete buttons we're going to use them okay then i'm going to do delete buttons right dot add event listener so three buttons buttons dot for each like this right for every single button that we are going to grab from the html right so it's going to be every single button right here we'll do button dot add event listener right there beautiful we'll say click boom and i will say function okay function and now we'll be able to actually call delete count so let's do delete item and we'll pass in the what the button that data set that id all right let's go ahead and create this delete item function we have the increased count ooh let's remove this what is this i'm not sure this is this is interesting let's create a function called delete item function delete item item right here let's pass the item id boom and now jesse what are we going to do inside this delete item delete item functionality jesse well um you want of course to know which item in its total will be removed from your cart right so we can actually ask firestore to hey the document uh the item that i'm gonna give you the id that i'm gonna give you i want that to be removed okay so you can go to um wait a moment so you can either look up in a firebase documentation you know like hey how to remove a document but this is how you do it so inside of your delete account or delete item you're going to indeed you're going to target the cart items collection you're going gonna say doc you're gonna give it that specific item id and then super easy you're just gonna say dot delete parentheses okay and then we're gonna wait for that and that's it we have that delete right that's working all well give you the collection the card item do the trick dot delete and that's it guys okay so now let's try it out that means we're going to remove the element from the from the card items let's shut out right now if i will click this button let's see if it actually works three two one what oh there we go guys it deleted the item that's it and because delete the item it actually decreased the count of here and of course it decreased the total cost right that's here so now let's let's add another item to here let's go back to our amazon that you should let's go back to index.html we should really create a link to go back home let's add a nintendo switch back right which we'll add it to here let me go back to cart and nintendo back right right here let me delete delete one more time pay attention to the card count boom done you see we removed it and so now if we go back again to the html right let's add it one more time let's see boom done it's there that's it guys that's it that's right samir we're gonna we should do an a strap so guys look the decrease is working the increase is working right the delete is working there's one last thing that we need to do to fully make this perfectly functional i mean not perfectly but amazingly functional okay that's going to be this number right here this total count right we need to get hey what is the actual total cost of the sum of the all the card items so because of course you want to know that hey you know what i'm about to spend a thousand dollars on this whole thing right otherwise that'd be pretty bad so we need to create a get total count get to the cost functionality let's do that i'm going to say here function i'll say get total cost okay okay get total cost i'm going to grab the items whatever items i'm going to be given so maybe i will call this function inside my get car items because i have access to all of the items and then i'm going to call get total cost right and i'm going to pass in the items or the card items my bad oh right there okay so let's do that okay let's initially start up total cost with let total cost cost is equal to zero all right let's loop through every single item so we'll say items dot for each for each okay now for each i'm going to say like this dot dot dot oh sorry nash sorry jesse run hold on hold on hold hold on hold on hold on hold on hold the phone hold on so item okay then beside that we're going to do jesse inside that well you want to add the cost of each item so total cost and since we're looping through this yes exactly total cost plus equal item quantity quantity what is it guys tell me times what is the total cost come on it's not that hard what do we add to here to make this work you know it did i just i just said it come on no you did not wait hold on let them say it come on come on guys come on come on come on come on come on no what is it what is it i don't know we don't have the total cost that's right quantity times price we have access to the quantity one times the price so what do we do we have item dot price multiply by item dot quantity and that is it okay and this is your asmr version of the amazon clone okay then what we're gonna do is we'll go ahead and since we have the total cost i'm going to update that inside the whole the whole what inside this thing right here okay so to do that let's go back to covercut.html okay let's scroll down and you can see that this is the actual text that we need to update well to update that we need to give it a certain class so let's give it a class let's say the class is going to be total cost number total dash cost dash number okay you guys ready good total cost number okay are you okay are you ready let's go back to cart at okay prayer selector let's grab that div okay let's grab the div and we'll go and say that total cost cost number i'm kidding that total cost number right that inner text right in our text is going to be the total cost that we calculate save that and that's it now we have the price this is the total cost but let's do we're like this we have the total cost is going to be let's use string literals to actually create this there we go two looney tunes that's right there we go so like this right here let's use the tata total cost command x let's put that inside here let's also use the dollar sign to make sure that we actually use a dollar sign don't tone and boom 5 hundred and fourteen dollars is a total cost so if i increase the macbook pros to what fifty five thousand actually sixty thousand dollars sixty two thousand dollars sixty five let's keep going sixty seventy thousand dollars 73 seventy seven seventy eight seventy nine eight hundred how many people go let's do it right now how many can we go can we go to 100k 100k 100k and we're a hundred thousand dollars officially that's right guys and we have 88 car items and we are buying 87 macbook pros there you go 87 macbook pros that's it so guys that's pretty much it i mean i mean it's not it i have a few few more tweaks we want to do oh look we've got the card items they're working really well everything is showing up the way it needs to be the one thing i want to fix now is i really hate how these numbers are showing up okay do you guys agree with that one i don't like the fact that it's like there's not formatted nothing so to make that work we're going to use something called pneumodo.js so numeral that yes check this out right all right right numero sam is like you need my address i'm in my book pro guys that's right we're sending everybody macbook pros guys just kidding it's not it's not a promise at all we'd be bankrupt if we did that so let's do that right now right i'm going to copy a new.js again this is what was going to help us um actually format the numbers right it's just a javascript library that we're going to use and i will copy this one for you i'll put it to you guys in the chat those you guys who are on youtube just go to email.js and you'll see it in there okay all right beautiful then what's going to happen let's put that inside our card.html let's go to our card.html hopefully you guys can see that and let's put it underneath the header.js actually let's put it inside uh our gs like this oh what happened here nope uh copy fancy but yeah this is bad now okay there we go command c command v and so this gives us the actual numeral gs and in order to use numer.js it kind of works like this right you kind of give it a number right here you see that right there you give it a number and then you say format and then you tell what how do you want to format so for example if i want to format it in a number sign kind of like that then i just use this format so let's do that right now if i go to my card.html right and if i go to let's just say card.js i need to form a total cost i'm going to use the actual the whole thing so i'm going to say like this instead of doing the inner text i'm going to say numeral watch this guys numeral right numeral numeral i will give it a number right total cost dot format right and then what we're going to put inside the format we're just going to put this right here right there that's it oh what just happened i'm going to put that right there boom that's it so let me go and make this a little bit smaller so you guys can see that beautiful and that's it guys so let me go and save this for you let's go back to our amazon go back to our cart and look at that a hundred thousand 253 a beautifully formatted number i love the way that just works right the same thing can happen with the other stuff so let's go ahead and change the number that's here which i really don't like as well same thing let's use the numeral let's go down to where we add that which is going to be down inside the html and this will give the quantity let's also use that here so i'm going to set a sort of item price i'm going to do like this right there numeral format and instead of the total cost we're just going to use item price times i'm the quantity right there boom you see so now we can just delete all this right here save that boom 209.99963 is the cost of our whole situation you see look very clean very nice informative beautifully formatted that's so good now let's now go back to our home page and i think to go back to our homepage we should probably make a link so let's create a link right now because i'm really sick with the fact that we don't have a link let's go to card.html to link our actual um logo right we can just do like this we'll do look a shrek ashraf is equal to index.html boom like that command x and put it inside around the in the logo image boom that's it boom save beautiful right so we just put a link around our uh card image that way we can just go back so if i want to go back now we're back at home and that my friends is it and so now i can actually go add to cart again you see now this increase it to 90 right here let's format out these numbers because again i just hate the way it's being formatted right that means we need to go back to our script.js because again remember if we go to script.js right way to perform the number it's inside right here the item price all right now of course we need to include um that cdn first and numerol.js inside our index.html so let's go into html let's include it inside here and make sure to include before everything else or try to do that and we'll do it like the following cdn cloudflare ajax right here this new number.js and again you can get that from right here okay let's go back go back to here jks right there save that let's go back to script.js right here yeah and instead of using iron.price we're going to do what jesse let's say what we're going to say numeral yes and then item.price we're gonna format that so we're gonna give it a d format and then single quotes dollar sign exactly zero comma zero dot zero zero so you're giving it a format so that way it knows how to format your numbers and that's it that's it guys and that my friends is the end of the amazon clone 2.0 this has been a really really really long one but it's okay we've got this one okay i'm gonna do one last thing for you okay one last thing is just a small little thing because i want to make it look good so good all right okay i wanted to do it where oh no not complete order that's gonna take another five days to do complete order that's gonna be way too much guys so wait i want you just to show you not stripe either joe not this one i want to show you just how okay maybe in the next challenge we can do stripe i think that would be really interesting is we continue on this amazon clone right i want to show you how do we go ahead and remove this and make this mobile friendly all right oh that's right that's right so let's do that i want to show you how do we make it mobile friendly okay a few ways well if we go to index.html all right look at our categories where are the categories rather here right there right there you see sidebar and our main sidebar is here well what we can do is we can basically hide it so imagine like this when we have a small screen right let's just say the screen is small right we make this a hidden a hidden or you know display none kind of display not right it's kind of like here okay it's hidden right this is a small screen right what happens is after it becomes small after it becomes a median screen then we want to show it okay and then we want to show it right now this is how it works until when css i can tell like this you see how we have this main sidebar i can say hidden here hidden measure this out see it's hidden it's no longer there it's done adios sayonara baby let's go all right but i can say hey when it becomes median size i can say block so basically if the size of the screen is median medium see right there now it's block so it's from minimum of medium size it's blocked but then when i get to a small screen it's disappearing see and then my friends is how you make it mobile friendly that's it and so that's pretty much it my friends let's do the same thing actually let's do the same thing to our card.html okay let's go back to record.html the same thing here and put inside here so that way if we go to car.html same thing here if we make this smaller boom there we go it just kind of shuts off and that's it and of course there's more things so my challenge to you uh at this point is gonna be really simple guys i challenge you to make this mobile friendly yeah right let me say how about doing a dark mode that'd be great you guys should do that for your homework doing diamond would be amazing if you guys do that for your homework okay make that your task make that your challenge so make it a task to make it not only dark theme but also make them fully mobile friendly maybe you fully make it so that this hides right this whole thing hides this whole thing hides everything right and you just make it a simple thing a simple like a a simple uh website that's fully mobile friendly right so you can think about that how do you do that and of course it's possible guys it's possible maybe you put this count underneath it and this total cost underneath it you know as you make the screen even smaller maybe that's what you do as well that's right somebody said uh osala says i mean mobile friendly that's amazing guys so guys that's it that is your amazon clone and i want to say this has been an amazing five days did you guys enjoy this amazon cologne that probably nobody has ever seen before did you guys enjoy that yeah give me a raise of hands give me a sub thumbs up there we go that's what i'm talking about yeah this is oh day four my bad this is day four and tomorrow of course of course it's going to be day five guys tomorrow is a really important day we'll be talking about your next full stack developer roadmap okay what you need to do to get started and to take whatever you learned here to the next level all right if those who actually want to be developers those who actually want to do something from this and not just watch and be stagnant right and to take action come tomorrow okay so and that make sure you set your alarm clock for tomorrow 11 mpst on youtube thank you so much for watching those of you on zoom stay here for a little bit but on youtube that is it for youtube thank you guys thank you so much for watching hope you guys have a great day and we'll see you guys in the next video we got more videos coming up just go ready because we're not done all right guys bye bye youtube bye everybody come in tomorrow alone npc
