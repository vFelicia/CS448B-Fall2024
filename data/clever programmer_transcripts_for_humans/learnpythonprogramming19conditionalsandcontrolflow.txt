With timestamps:

00:00 - hey guys what is going on my brain is
00:03 - about to blow up I've been reading this
00:05 - book called the little schemer and it's
00:09 - about this programming language called
00:12 - scheme and in this programming language
00:16 - everything is done really difficult in a
00:20 - very difficult way and I spent eight
00:23 - hours studying it so my brain is like
00:25 - fried but I'm excited to take a break
00:28 - from studying it and get on with
00:31 - teaching something about computer
00:33 - programming in Python so we covered in
00:36 - our last video boolean's
00:39 - and we talked more specifically covered
00:42 - the boolean logical operators we talked
00:44 - about and and we talked about or and we
00:47 - talked about not so another thing I
00:50 - wanted to mention to you guys I had it
00:51 - open here so I don't freak yet if you
00:53 - guys are on my website you can write
00:55 - code directly underneath while you're
00:57 - watching the video so you can write
00:58 - something like print 5 or whatever and
01:02 - hit this and it'll run it and actually
01:04 - give you the results so if you don't
01:06 - know if you're having term if you're
01:08 - having problems running your code or you
01:10 - just want somewhere easy to run it well
01:12 - you can go here and watch the videos and
01:14 - run it at the same time back to where we
01:17 - were okay so as you can see we covered a
01:21 - lot of this stuff right with and or and
01:24 - not so now let's do some examples where
01:27 - we combine our conditionals control flow
01:30 - with our boolean logic okay so this is
01:35 - what's gonna tie it all together this is
01:36 - what's gonna allow you to make powerful
01:38 - games and do powerful things right now
01:41 - okay not in hundred more videos not
01:45 - reading one whole another book you can
01:48 - start to build games and functional
01:50 - programs doing what I'm about to show
01:52 - you okay so let's get to it so you saw I
01:57 - showed you okay you have boolean
01:59 - operators like you true and false and
02:01 - you get some result
02:02 - now I also showed you how you can have
02:05 - some examples like Johnny homework and
02:08 - this and then this code runs here okay
02:12 - I showed you that at the top so let me
02:14 - just bring that down whoops the whole
02:19 - example this is not real code this is
02:21 - just you know it is going to give you
02:24 - wrong answers for now so now let's try
02:27 - to do those things where if you had an
02:29 - employee those getting paid over 40
02:31 - hours and you want her to give him
02:33 - overtime pay again let's tap it all in
02:37 - here and let's see how that would work
02:38 - so if I did Bob hours work and I said
02:44 - okay he work let's say 40 hours and if I
02:48 - said if Bob hours greater than 39 then
02:52 - print
02:53 - he worked overtime for some reason we
02:56 - have less than 40 hours as overtime but
03:01 - whatever never mind that he worked
03:04 - overtime so let's see if that prints out
03:06 - if it does print out then that means he
03:07 - worked overtime as and as you can see
03:10 - Bob hours worked for 44 T is greater
03:14 - than 39 so that part evaluated to true
03:17 - and then you got back the statement now
03:20 - what if we wanted to make it a little
03:21 - bit more interesting let's go back to
03:24 - the example of the kid where he throws
03:26 - the garbage and he does his homework
03:30 - right so for example let's say Johnny
03:33 - homework aha is equal to true meaning he
03:39 - completed his homework assignment now
03:42 - let's say I Johnny whoops
03:46 - Johnny throw out garbage and let's make
03:51 - that also true so he's done both of the
03:54 - things now let's see if he gets to play
03:56 - a a video game okay let's let's see if
03:59 - he gets to play his Xbox 360 so if
04:02 - Johnny homework right dad says if Johnny
04:06 - does his homework and Johnny throws out
04:10 - the garbage whoops I'm sorry then
04:15 - um Johnny can play xbox 360 right so if
04:27 - that statement points out he can play
04:29 - xbox 360 and I don't know why I'm
04:30 - running Xbox 360 I feel like I'm living
04:33 - in 2005 Xbox one has been out and I'm
04:36 - pretty sure in the next few years I'm
04:37 - gonna bring out the new one so let's
04:38 - change this Xbox one and let's hit enter
04:41 - so it printed it out Johnny can play
04:45 - xbox one how did this work Johnny
04:48 - homework evaluated to a true statement
04:50 - Johnny throw out garbage evaluator true
04:53 - statement the only time you get back a
04:55 - true when you combine something with an
04:57 - end is when both of the statements are
05:00 - true so true true and we got back that
05:03 - right now just for some little exercises
05:07 - here and there what if I did something
05:09 - like not Johnny homework oops
05:14 - Johnny homework or Johnny Johnny throw
05:22 - out garbage right what do you think I
05:31 - would get here as a result hmm let's
05:34 - think about it so if you guessed it
05:37 - correctly good pause the video or let's
05:39 - try to figure out together so not throw
05:42 - out garbage not true right throughout
05:44 - garbage sure not true gives you false
05:46 - and this part is true so you essentially
05:51 - get true or true and then not true or
05:56 - true gives you back true because for an
05:58 - or condition to value to true only one
06:00 - of the conditions have to be true and
06:02 - then calling not on a true statement
06:04 - gives you Backa false and hence we get a
06:06 - false okay again I'm not going to focus
06:09 - so much on these contrived
06:11 - force boolean examples because your
06:14 - thing is never going to get like that
06:15 - and but it's just good to know how it
06:18 - works right it works through the inner
06:21 - parentheses inside of the parentheses
06:23 - first and then it goes outside of the
06:25 - parentheses and starts to evaluate
06:26 - things
06:27 - okay so you can see we were able to put
06:31 - things together now imagine if you were
06:33 - making a game of rock-paper-scissors
06:36 - right let's rock paper scissors right I
06:42 - can say if human picked let's say rock
06:46 - and computer picked scissors now I can
06:53 - say if now I can say let's see what what
06:56 - can I say I can say something like if
07:00 - human equal equal Rock and computer
07:05 - picked scissors then who wins right who
07:09 - gets the point here so I am going to say
07:12 - that human score is equal to 1 okay
07:18 - so human picked Rock computer pick
07:21 - scissors right in rock paper scissor
07:24 - just in case you didn't know rock beats
07:25 - scissors and now let's check the human
07:29 - score and you can see that when I got
07:32 - back of one okay so that's why if
07:35 - conditions are so important we can also
07:38 - start to tack them on okay so let's say
07:42 - that let's say if human picked Rock and
07:47 - computer pick scissors if this was not
07:50 - the case what if there was some other
07:53 - case let's say computer pick something
07:55 - else so let's say computer is bananas
07:58 - right so if I write this line of code
08:01 - how can I check for other things so I
08:04 - can say oops I can say else if oh I got
08:09 - to get outside of the if statement I can
08:11 - say else if computer sorry human picked
08:18 - Rock and computer picked
08:26 - bananas then you can say I don't know
08:31 - computer is equal to computer score is
08:35 - equal to zero and human score is equal
08:39 - to zero because bananas is not really a
08:42 - valid thing so you get back both got
08:44 - zero and then it says something like
08:47 - prints
08:49 - you can't pick herbs
08:52 - you can't pick anything other than rock
08:58 - paper or scissors right something like
09:03 - that and let's hit it
09:04 - and so you can see that first it check
09:07 - this if condition it checked if human is
09:10 - equal to rock while human was equal to
09:12 - rock the only way this statement will
09:15 - run if both of the statements are true
09:17 - that's what the end forces you to do if
09:20 - we had an order here what it would do is
09:22 - it says if human is rocking computer is
09:25 - scissors okay
09:27 - so in our case it would go as human
09:29 - equal to rock it would say true and then
09:32 - would go or computer equal scissors it
09:35 - would evaluate that to false because
09:37 - bananas bananas right there does not
09:41 - equal scissors so it would go true or
09:44 - false it would evaluate that as true
09:46 - because true or false is true and it
09:49 - would go okay human score is equal to
09:51 - one okay but we don't want that we want
09:56 - both of the things to be true if human
09:58 - picks rock and the computer pick
10:00 - scissors at the same time that's when
10:02 - the human wins but in this case computer
10:05 - picked bananas and we said if you pick
10:07 - bananas as you know if that happened
10:10 - where human picked Rock and computer
10:11 - picked bananas we can say that you know
10:15 - you can't pick that you got to try again
10:18 - now why our statement is useful as
10:20 - imagine if I mean do you care who picks
10:24 - bananas do care if computer picks
10:26 - bananas or human picks bananas should
10:30 - you stop the game if either of those
10:31 - people pick bananas yeah you should
10:34 - right you should stop the game and start
10:37 - it again
10:37 - because
10:38 - Anna should not be one of the options so
10:40 - you don't care who picked something
10:42 - that's not the wrong one you just care
10:45 - that wrong one is picked that's why you
10:48 - would use or you would say if human
10:52 - equal equal bananas or computer equal
10:58 - equal bananas then print blah blah blah
11:03 - blah blah
11:04 - right in this case it won't make sense
11:05 - but then whatever right we print out
11:09 - this line of code elsif notice the else
11:12 - if it's used to connect these if you
11:15 - want to actually write it as i can show
11:21 - you that later but if you essentially
11:22 - want to write it you know what you have
11:26 - to do and you're writing it where these
11:27 - three dots aren't there right your three
11:30 - dots that are showing up here so let me
11:32 - bring down this if-then whatever
11:34 - statement down for you so if you ever
11:37 - have the case where these three dots are
11:40 - three these three greater than signs are
11:42 - there then you have to put the else if
11:46 - not at the same indentation level as an
11:49 - if but if you're doing it and you're
11:51 - writing this code as a script then
11:54 - that's how would be the if and else if
11:57 - or at the same indentation level okay
12:00 - they're not at a different indentation
12:02 - level that's very important otherwise
12:03 - the code is not going to run okay an
12:05 - else--if helps you join an F with an
12:08 - else if statement and another one that
12:11 - you might need is else and else does not
12:12 - care for a condition okay you see your
12:15 - if statement cares for a condition and
12:17 - then it runs the code your else if
12:20 - statement cares for a condition and if
12:23 - that condition is satisfied it runs the
12:25 - code else does not take in condition if
12:27 - none of these guys match then else runs
12:30 - by default okay so if
12:37 - condition all right if this condition
12:41 - evaluates to true then then this block
12:49 - of code runs okay good
12:57 - again or we don't care who did the thing
13:01 - we don't care who committed the crime if
13:03 - any one of them did we just break it
13:06 - realistically when you have this case
13:08 - where a human is bananas or I mean
13:11 - you're not going to put every single
13:12 - option ever that could be wrong right so
13:17 - you can't check for bananas or spaghetti
13:19 - or pizza what you can check for is human
13:22 - did not pick if one of them did not pick
13:27 - let's say rock papers or scissors then
13:31 - it should be wrong right so let's see if
13:34 - we can write that if computer does not
13:37 - equal right we can say a rock or
13:43 - computer does not equal scissors or
13:48 - computer does not equal paper then print
13:54 - wrong choice pick again okay
14:01 - so now let's try it now let's say
14:03 - computer is equal to rock and let's run
14:07 - that piece of code and it says wrong
14:11 - choice
14:12 - pick again okay so you can see how using
14:16 - the or statement here ended up giving me
14:19 - the wrong result what I want to make
14:20 - sure is that the computer is equal to
14:25 - any one of these right so let's try it
14:27 - like this let's say computer is not
14:30 - equal rock
14:32 - and computer does not equal scissors
14:37 - right and computer does not equal paper
14:46 - right let's let me let me just go a
14:49 - little bit here make it bigger then
14:52 - print wrong choice pick again okay so
14:59 - the only way this code will run is if
15:01 - all of these things are true meaning
15:06 - computer is not wrong computers not
15:07 - scissors and computers not paper right
15:10 - so if I made computer is equal to banana
15:13 - and I went up here and I ran this code
15:17 - you can see that it checked his computer
15:20 - rock his computer scissors its computer
15:22 - paper if it's not any of these then
15:24 - print wrong choice okay so you can see
15:27 - how powerful these Combinator's are is
15:31 - that what I would call him like you're a
15:33 - logical operator boolean operators right
15:36 - like and and or you really really need
15:39 - them to be able to do this stuff okay to
15:42 - be able to do really powerful things ok
15:45 - I'm going to cut this video off here
15:47 - hopefully you have a much better
15:49 - understanding of how this stuff works ok
15:52 - in the next video we will cover for
15:55 - loops and I will see you there

Cleaned transcript:

hey guys what is going on my brain is about to blow up I've been reading this book called the little schemer and it's about this programming language called scheme and in this programming language everything is done really difficult in a very difficult way and I spent eight hours studying it so my brain is like fried but I'm excited to take a break from studying it and get on with teaching something about computer programming in Python so we covered in our last video boolean's and we talked more specifically covered the boolean logical operators we talked about and and we talked about or and we talked about not so another thing I wanted to mention to you guys I had it open here so I don't freak yet if you guys are on my website you can write code directly underneath while you're watching the video so you can write something like print 5 or whatever and hit this and it'll run it and actually give you the results so if you don't know if you're having term if you're having problems running your code or you just want somewhere easy to run it well you can go here and watch the videos and run it at the same time back to where we were okay so as you can see we covered a lot of this stuff right with and or and not so now let's do some examples where we combine our conditionals control flow with our boolean logic okay so this is what's gonna tie it all together this is what's gonna allow you to make powerful games and do powerful things right now okay not in hundred more videos not reading one whole another book you can start to build games and functional programs doing what I'm about to show you okay so let's get to it so you saw I showed you okay you have boolean operators like you true and false and you get some result now I also showed you how you can have some examples like Johnny homework and this and then this code runs here okay I showed you that at the top so let me just bring that down whoops the whole example this is not real code this is just you know it is going to give you wrong answers for now so now let's try to do those things where if you had an employee those getting paid over 40 hours and you want her to give him overtime pay again let's tap it all in here and let's see how that would work so if I did Bob hours work and I said okay he work let's say 40 hours and if I said if Bob hours greater than 39 then print he worked overtime for some reason we have less than 40 hours as overtime but whatever never mind that he worked overtime so let's see if that prints out if it does print out then that means he worked overtime as and as you can see Bob hours worked for 44 T is greater than 39 so that part evaluated to true and then you got back the statement now what if we wanted to make it a little bit more interesting let's go back to the example of the kid where he throws the garbage and he does his homework right so for example let's say Johnny homework aha is equal to true meaning he completed his homework assignment now let's say I Johnny whoops Johnny throw out garbage and let's make that also true so he's done both of the things now let's see if he gets to play a a video game okay let's let's see if he gets to play his Xbox 360 so if Johnny homework right dad says if Johnny does his homework and Johnny throws out the garbage whoops I'm sorry then um Johnny can play xbox 360 right so if that statement points out he can play xbox 360 and I don't know why I'm running Xbox 360 I feel like I'm living in 2005 Xbox one has been out and I'm pretty sure in the next few years I'm gonna bring out the new one so let's change this Xbox one and let's hit enter so it printed it out Johnny can play xbox one how did this work Johnny homework evaluated to a true statement Johnny throw out garbage evaluator true statement the only time you get back a true when you combine something with an end is when both of the statements are true so true true and we got back that right now just for some little exercises here and there what if I did something like not Johnny homework oops Johnny homework or Johnny Johnny throw out garbage right what do you think I would get here as a result hmm let's think about it so if you guessed it correctly good pause the video or let's try to figure out together so not throw out garbage not true right throughout garbage sure not true gives you false and this part is true so you essentially get true or true and then not true or true gives you back true because for an or condition to value to true only one of the conditions have to be true and then calling not on a true statement gives you Backa false and hence we get a false okay again I'm not going to focus so much on these contrived force boolean examples because your thing is never going to get like that and but it's just good to know how it works right it works through the inner parentheses inside of the parentheses first and then it goes outside of the parentheses and starts to evaluate things okay so you can see we were able to put things together now imagine if you were making a game of rockpaperscissors right let's rock paper scissors right I can say if human picked let's say rock and computer picked scissors now I can say if now I can say let's see what what can I say I can say something like if human equal equal Rock and computer picked scissors then who wins right who gets the point here so I am going to say that human score is equal to 1 okay so human picked Rock computer pick scissors right in rock paper scissor just in case you didn't know rock beats scissors and now let's check the human score and you can see that when I got back of one okay so that's why if conditions are so important we can also start to tack them on okay so let's say that let's say if human picked Rock and computer pick scissors if this was not the case what if there was some other case let's say computer pick something else so let's say computer is bananas right so if I write this line of code how can I check for other things so I can say oops I can say else if oh I got to get outside of the if statement I can say else if computer sorry human picked Rock and computer picked bananas then you can say I don't know computer is equal to computer score is equal to zero and human score is equal to zero because bananas is not really a valid thing so you get back both got zero and then it says something like prints you can't pick herbs you can't pick anything other than rock paper or scissors right something like that and let's hit it and so you can see that first it check this if condition it checked if human is equal to rock while human was equal to rock the only way this statement will run if both of the statements are true that's what the end forces you to do if we had an order here what it would do is it says if human is rocking computer is scissors okay so in our case it would go as human equal to rock it would say true and then would go or computer equal scissors it would evaluate that to false because bananas bananas right there does not equal scissors so it would go true or false it would evaluate that as true because true or false is true and it would go okay human score is equal to one okay but we don't want that we want both of the things to be true if human picks rock and the computer pick scissors at the same time that's when the human wins but in this case computer picked bananas and we said if you pick bananas as you know if that happened where human picked Rock and computer picked bananas we can say that you know you can't pick that you got to try again now why our statement is useful as imagine if I mean do you care who picks bananas do care if computer picks bananas or human picks bananas should you stop the game if either of those people pick bananas yeah you should right you should stop the game and start it again because Anna should not be one of the options so you don't care who picked something that's not the wrong one you just care that wrong one is picked that's why you would use or you would say if human equal equal bananas or computer equal equal bananas then print blah blah blah blah blah right in this case it won't make sense but then whatever right we print out this line of code elsif notice the else if it's used to connect these if you want to actually write it as i can show you that later but if you essentially want to write it you know what you have to do and you're writing it where these three dots aren't there right your three dots that are showing up here so let me bring down this ifthen whatever statement down for you so if you ever have the case where these three dots are three these three greater than signs are there then you have to put the else if not at the same indentation level as an if but if you're doing it and you're writing this code as a script then that's how would be the if and else if or at the same indentation level okay they're not at a different indentation level that's very important otherwise the code is not going to run okay an elseif helps you join an F with an else if statement and another one that you might need is else and else does not care for a condition okay you see your if statement cares for a condition and then it runs the code your else if statement cares for a condition and if that condition is satisfied it runs the code else does not take in condition if none of these guys match then else runs by default okay so if condition all right if this condition evaluates to true then then this block of code runs okay good again or we don't care who did the thing we don't care who committed the crime if any one of them did we just break it realistically when you have this case where a human is bananas or I mean you're not going to put every single option ever that could be wrong right so you can't check for bananas or spaghetti or pizza what you can check for is human did not pick if one of them did not pick let's say rock papers or scissors then it should be wrong right so let's see if we can write that if computer does not equal right we can say a rock or computer does not equal scissors or computer does not equal paper then print wrong choice pick again okay so now let's try it now let's say computer is equal to rock and let's run that piece of code and it says wrong choice pick again okay so you can see how using the or statement here ended up giving me the wrong result what I want to make sure is that the computer is equal to any one of these right so let's try it like this let's say computer is not equal rock and computer does not equal scissors right and computer does not equal paper right let's let me let me just go a little bit here make it bigger then print wrong choice pick again okay so the only way this code will run is if all of these things are true meaning computer is not wrong computers not scissors and computers not paper right so if I made computer is equal to banana and I went up here and I ran this code you can see that it checked his computer rock his computer scissors its computer paper if it's not any of these then print wrong choice okay so you can see how powerful these Combinator's are is that what I would call him like you're a logical operator boolean operators right like and and or you really really need them to be able to do this stuff okay to be able to do really powerful things ok I'm going to cut this video off here hopefully you have a much better understanding of how this stuff works ok in the next video we will cover for loops and I will see you there
