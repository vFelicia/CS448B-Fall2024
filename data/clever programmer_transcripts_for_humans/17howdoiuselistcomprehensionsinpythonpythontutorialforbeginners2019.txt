With timestamps:

00:00 - hey guys what's up how's it going this
00:02 - is Kazi from claro programmer now in
00:04 - this tutorial
00:13 - was that better yeah I want you to take
00:16 - his seat oh can we just edit it like oh
00:19 - yeah oh yeah yeah yeah just and I'm
00:21 - doing like fault all right now you go
00:23 - sit
00:25 - [Music]
00:30 - this is a rolling yeah I'm taking over
00:33 - boys let's do this
00:41 - sup you guys this is Eric and clever
00:44 - programmer and we just have a quick
00:46 - short little video for you today all
00:47 - we're gonna be talking about list
00:49 - comprehensions in Python so this is a
00:56 - neat little trick that uh that is unique
00:58 - the Python I believe I don't know any
00:59 - other programming languages that have it
01:01 - but pretty much what it allows you to do
01:03 - is to make lists out of cool little
01:06 - expressions so you can actually populate
01:09 - an entire list with just one line with
01:11 - this little um unique thing a little bit
01:13 - weird to explain but I'll just show you
01:14 - and then you see how it works so let's
01:16 - get started let's say we have a list
01:18 - called names let's just put in some
01:23 - names here so we have Jennifer Susan
01:36 - Jane and Sophie alright cool so this is
01:39 - our short little list list of names and
01:41 - um first of all if you wanted to put all
01:45 - of these names in a list then the first
01:47 - way you can do it was actually use a for
01:49 - loop so I will show that first this is
01:51 - the way that you guys should be familiar
01:52 - with doing so we would just have an
01:54 - empty list here and then we would have
01:56 - to iterate for every person in the list
02:01 - we would simply append that person to
02:06 - the new list so what we did here was we
02:10 - put every name in the names list and put
02:12 - it into the L list so we're just gonna
02:14 - print this out just like that give this
02:18 - a run and um there's an error
02:22 - oh let's see what's going on here oh
02:26 - yeah there we go stupid me you guys
02:28 - pardon me we want to append the person
02:30 - to the list not the list to the list all
02:33 - right so let's run that again and as you
02:35 - can see the UM all the names are printed
02:37 - out nice and nice and clean here so what
02:39 - we did here was we created a new list we
02:41 - read from the list and we put everything
02:43 - um in that list into a new list and
02:45 - printed that new list pretty cool right
02:47 - now I'm gonna show you the list
02:49 - comprehension for this so the way you
02:51 - can um the way you do that is you would
02:53 - actually just
02:56 - make a list like this so the syntax for
02:59 - this is the item that you want to be in
03:01 - the list goes first so we could just put
03:03 - a person here on I'll show how this
03:07 - relates to the for-loop later but we'll
03:10 - go here and then we'll say for person in
03:14 - names simply like that
03:16 - so what's happening here is we actually
03:18 - have a for loop in in one line here so
03:21 - it's gonna loop through so person is
03:23 - gonna loop through this for loop is
03:24 - gonna loop through names and each
03:27 - element in the names list will be person
03:28 - and all we're doing is simply taking
03:30 - this variable here and we're sticking it
03:33 - here and these things that are over here
03:34 - will be what's actually in the list when
03:36 - we're done so let's try to print this
03:38 - and see what happens it should be
03:39 - exactly the same go like that hit run
03:43 - and as you can see the output is the
03:46 - same both times so these two pieces of
03:48 - code this for loop and this list
03:50 - comprehension are actually equivalent
03:52 - but you see how we collapse these four
03:54 - four lines of code into one line that's
03:57 - the power of list comprehensions so
04:00 - that's the most basic one that everybody
04:01 - learns first that's the one I learned
04:03 - first but actually the true power of
04:05 - list comprehensions is that if you have
04:08 - a list of something you can actually do
04:09 - a Shinzon every element of the list and
04:12 - create a new list that way so let's say
04:14 - you had a bunch of numbers in a list you
04:17 - had one two three four and then you
04:19 - wanted to maybe multiply everything by
04:23 - two so it'd become two four six eight
04:25 - just like that you could use the list
04:27 - comprehension to do an operation on
04:29 - every element and it would come out like
04:31 - that so let's how let's have another
04:33 - example um
04:34 - let's make another list and I'm gonna
04:37 - change I'm actually into an operation on
04:39 - all of these so let's create another
04:41 - empty list here this is gonna overwrite
04:43 - the empty list cell from above actually
04:47 - let's just paste this in boom just like
04:50 - that so for person in names we can
04:55 - actually um edit everything in here so
04:58 - if we instead of just wanting to add
04:59 - person we could actually edit this thing
05:01 - before we add to list so that it looks
05:03 - new so all I'm going to do here is a
05:05 - very simple and um slightly personal
05:07 - thing
05:08 - but I'm just gonna type in dumped me
05:10 - right here so now let's run this and as
05:14 - you can see this has suddenly turned
05:16 - into a list of X's not just people
05:18 - alright so let's go on turning of this
05:25 - tool this comprehension will be as
05:26 - simple as copy and pasting this and the
05:31 - way this will work is for each person in
05:35 - in the names list we would actually just
05:37 - add the string to here just like that
05:46 - what am i doing you guys so as you can
05:49 - see everything is reiterated here I
05:51 - probably written this out on paper many
05:52 - many times but it's actually on a stream
05:54 - now forever in the electronic abyss
05:56 - let's move on so that's how all this
05:59 - comprehension works all you do is you
06:01 - can actually go through an entire list
06:02 - so the list we're going through here is
06:03 - names and we wanted to do an operation
06:05 - to every element in that list which is
06:07 - ADD dumped me to the end of every name
06:09 - and so I actually just put those things
06:10 - together and put it in this new list so
06:12 - now the list looks like that you guys
06:14 - falling lastly there's actually a couple
06:19 - other cool things you can do you can
06:20 - actually get pretty verbose in these and
06:22 - do some weird nesting but then it gets a
06:23 - little bit messy it might actually be
06:25 - better just use for loops at that point
06:26 - like nested for loops but if it's just
06:28 - two statements that might actually be
06:31 - okay like two nested for loops are a for
06:32 - loop with an if statement inside we'll
06:34 - try that next so getting to a slightly
06:37 - more positive note we'll go back to on
06:41 - this list l Oh actually yeah well we'll
06:46 - have a new list down here let's just
06:47 - start something new so let's have a
06:49 - dictionary called movies and ratings
06:53 - just like that alright and then we're
06:55 - just going to have interstellar like
07:00 - that and give this a rating of nine out
07:03 - of ten and then we'll also have dark
07:06 - night let's move this over so you can
07:09 - see dark night rating of eight we'll
07:16 - have fifty shades
07:19 - reading of three and then we'll have
07:22 - again fifty shades darker rating of two
07:28 - and this has this progressing you can
07:31 - see how this is going 50 shades darkest
07:34 - reading of one okay so now let's say we
07:39 - have we have this dictionary here yeah
07:41 - you can also run uhm comprehensions over
07:44 - dictionary so this will actually call
07:45 - the dictionary comprehension you can
07:47 - make a list here and let's say I just
07:53 - wanted to filter out all of the movies
07:55 - that have a rating less than six so I
07:57 - only want to show the ones that have a
07:58 - reading more than more than six so how
08:02 - that would work would just be four movie
08:04 - in movies and ratings what they're
08:07 - autocomplete that they're if movies and
08:12 - ratings at movie is greater than 6 so
08:19 - we're filtering out here so if the movie
08:20 - is greater than six then we will append
08:22 - it to the the anti empty new list so
08:28 - that will just be movie just like that
08:30 - and then we'll print this out and let's
08:36 - see how that works these three movies
08:39 - should have been cut out and then it
08:41 - should only show these two here I should
08:44 - just show the names because when we
08:45 - index into a dictionary only they'll key
08:48 - here the key string here is is put in
08:51 - the list let's run this and as you can
08:54 - see ignore all this stuff I'm over it
08:57 - but we can see that the the three movies
09:01 - of that and anything with the rating
09:03 - less than six and on these fifty shades
09:05 - ones all got cut out and interstellar in
09:07 - the dark night oh these awesome sci-fi
09:10 - and superhero movies stayed in so that's
09:12 - how that works but we can actually put
09:13 - this all into a list comprehension this
09:15 - will be the final one because it's a
09:16 - little bit complicated but if you
09:18 - understand this you can pretty much
09:19 - understand any list comprehension
09:20 - because you can do I don't think there's
09:23 - a limit to it but you could probably
09:24 - nest as many as you want into one line
09:26 - but it gets unruly at some point so just
09:28 - be conscious of that but this is great
09:30 - for saving a lot of space for a short
09:31 - little for the
09:32 - oops so this one falls on you guys is
09:34 - going to be movie so we want the movie
09:37 - name to be in the list for movie in
09:41 - movies in the list movie in ratings but
09:45 - we only want the movies that are in
09:48 - movies and ratings if the movies and
09:55 - movies and ratings at movie is greater
10:01 - than 6 so what this is saying is for
10:05 - every movie movie about ratings or a
10:06 - movie and readings if if the movie
10:10 - rating is greater than 6 then stick the
10:12 - movie name in the list so let's see how
10:15 - that runs it should have the same exact
10:17 - output and as you can see has the same
10:19 - exact output is a for-loop all done in
10:21 - one line so let's take a one final look
10:23 - at this to compare the code so this
10:26 - first example we have a list of names
10:28 - and then this for-loop became this last
10:30 - comprehension this for-loop became this
10:32 - list comprehension and this for-loop
10:34 - became this list comprehension um that's
10:36 - pretty much it you guys i'm really cool
10:39 - little thing you can do in Python a very
10:40 - good for being very descripted in a
10:43 - single line of code and super super
10:44 - useful if you want to do a some kind of
10:47 - calculation on every element of a list
10:49 - and create a new list from that it's
10:51 - probably one of my favorite things in
10:52 - Python I don't know about you guys but
10:54 - yeah just let me know what you guys
10:55 - think in the comments
10:56 - um and that should be it for this video
10:58 - thanks you guys for watching and see you
11:00 - later good bye
11:05 - [Music]

Cleaned transcript:

hey guys what's up how's it going this is Kazi from claro programmer now in this tutorial was that better yeah I want you to take his seat oh can we just edit it like oh yeah oh yeah yeah yeah just and I'm doing like fault all right now you go sit this is a rolling yeah I'm taking over boys let's do this sup you guys this is Eric and clever programmer and we just have a quick short little video for you today all we're gonna be talking about list comprehensions in Python so this is a neat little trick that uh that is unique the Python I believe I don't know any other programming languages that have it but pretty much what it allows you to do is to make lists out of cool little expressions so you can actually populate an entire list with just one line with this little um unique thing a little bit weird to explain but I'll just show you and then you see how it works so let's get started let's say we have a list called names let's just put in some names here so we have Jennifer Susan Jane and Sophie alright cool so this is our short little list list of names and um first of all if you wanted to put all of these names in a list then the first way you can do it was actually use a for loop so I will show that first this is the way that you guys should be familiar with doing so we would just have an empty list here and then we would have to iterate for every person in the list we would simply append that person to the new list so what we did here was we put every name in the names list and put it into the L list so we're just gonna print this out just like that give this a run and um there's an error oh let's see what's going on here oh yeah there we go stupid me you guys pardon me we want to append the person to the list not the list to the list all right so let's run that again and as you can see the UM all the names are printed out nice and nice and clean here so what we did here was we created a new list we read from the list and we put everything um in that list into a new list and printed that new list pretty cool right now I'm gonna show you the list comprehension for this so the way you can um the way you do that is you would actually just make a list like this so the syntax for this is the item that you want to be in the list goes first so we could just put a person here on I'll show how this relates to the forloop later but we'll go here and then we'll say for person in names simply like that so what's happening here is we actually have a for loop in in one line here so it's gonna loop through so person is gonna loop through this for loop is gonna loop through names and each element in the names list will be person and all we're doing is simply taking this variable here and we're sticking it here and these things that are over here will be what's actually in the list when we're done so let's try to print this and see what happens it should be exactly the same go like that hit run and as you can see the output is the same both times so these two pieces of code this for loop and this list comprehension are actually equivalent but you see how we collapse these four four lines of code into one line that's the power of list comprehensions so that's the most basic one that everybody learns first that's the one I learned first but actually the true power of list comprehensions is that if you have a list of something you can actually do a Shinzon every element of the list and create a new list that way so let's say you had a bunch of numbers in a list you had one two three four and then you wanted to maybe multiply everything by two so it'd become two four six eight just like that you could use the list comprehension to do an operation on every element and it would come out like that so let's how let's have another example um let's make another list and I'm gonna change I'm actually into an operation on all of these so let's create another empty list here this is gonna overwrite the empty list cell from above actually let's just paste this in boom just like that so for person in names we can actually um edit everything in here so if we instead of just wanting to add person we could actually edit this thing before we add to list so that it looks new so all I'm going to do here is a very simple and um slightly personal thing but I'm just gonna type in dumped me right here so now let's run this and as you can see this has suddenly turned into a list of X's not just people alright so let's go on turning of this tool this comprehension will be as simple as copy and pasting this and the way this will work is for each person in in the names list we would actually just add the string to here just like that what am i doing you guys so as you can see everything is reiterated here I probably written this out on paper many many times but it's actually on a stream now forever in the electronic abyss let's move on so that's how all this comprehension works all you do is you can actually go through an entire list so the list we're going through here is names and we wanted to do an operation to every element in that list which is ADD dumped me to the end of every name and so I actually just put those things together and put it in this new list so now the list looks like that you guys falling lastly there's actually a couple other cool things you can do you can actually get pretty verbose in these and do some weird nesting but then it gets a little bit messy it might actually be better just use for loops at that point like nested for loops but if it's just two statements that might actually be okay like two nested for loops are a for loop with an if statement inside we'll try that next so getting to a slightly more positive note we'll go back to on this list l Oh actually yeah well we'll have a new list down here let's just start something new so let's have a dictionary called movies and ratings just like that alright and then we're just going to have interstellar like that and give this a rating of nine out of ten and then we'll also have dark night let's move this over so you can see dark night rating of eight we'll have fifty shades reading of three and then we'll have again fifty shades darker rating of two and this has this progressing you can see how this is going 50 shades darkest reading of one okay so now let's say we have we have this dictionary here yeah you can also run uhm comprehensions over dictionary so this will actually call the dictionary comprehension you can make a list here and let's say I just wanted to filter out all of the movies that have a rating less than six so I only want to show the ones that have a reading more than more than six so how that would work would just be four movie in movies and ratings what they're autocomplete that they're if movies and ratings at movie is greater than 6 so we're filtering out here so if the movie is greater than six then we will append it to the the anti empty new list so that will just be movie just like that and then we'll print this out and let's see how that works these three movies should have been cut out and then it should only show these two here I should just show the names because when we index into a dictionary only they'll key here the key string here is is put in the list let's run this and as you can see ignore all this stuff I'm over it but we can see that the the three movies of that and anything with the rating less than six and on these fifty shades ones all got cut out and interstellar in the dark night oh these awesome scifi and superhero movies stayed in so that's how that works but we can actually put this all into a list comprehension this will be the final one because it's a little bit complicated but if you understand this you can pretty much understand any list comprehension because you can do I don't think there's a limit to it but you could probably nest as many as you want into one line but it gets unruly at some point so just be conscious of that but this is great for saving a lot of space for a short little for the oops so this one falls on you guys is going to be movie so we want the movie name to be in the list for movie in movies in the list movie in ratings but we only want the movies that are in movies and ratings if the movies and movies and ratings at movie is greater than 6 so what this is saying is for every movie movie about ratings or a movie and readings if if the movie rating is greater than 6 then stick the movie name in the list so let's see how that runs it should have the same exact output and as you can see has the same exact output is a forloop all done in one line so let's take a one final look at this to compare the code so this first example we have a list of names and then this forloop became this last comprehension this forloop became this list comprehension and this forloop became this list comprehension um that's pretty much it you guys i'm really cool little thing you can do in Python a very good for being very descripted in a single line of code and super super useful if you want to do a some kind of calculation on every element of a list and create a new list from that it's probably one of my favorite things in Python I don't know about you guys but yeah just let me know what you guys think in the comments um and that should be it for this video thanks you guys for watching and see you later good bye
