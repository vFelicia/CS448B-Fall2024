With timestamps:

00:00 - today we are super excited to bring you
00:02 - a pumpt enjoyable we we've been excited
00:05 - for this one for a while but I'm not
00:07 - alone today I am here with somebody new
00:10 - it's a new face to the channel so I am
00:13 - here
00:15 - with David how's it going guys um I'm
00:19 - actually a student in profit with
00:20 - JavaScript course and I have the honor
00:24 - to uh go live with sunny and show you
00:27 - the M Stack um
00:30 - Tik Tock
00:31 - clone so I'm super fun for today it's a
00:36 - where yeah nice yeah so we're super
00:39 - pumped for today guys we already have
00:41 - 200 people watching that's awesome we
00:44 - have loads of comments flying in and
00:47 - guys what I want to say is let's run
00:49 - through the app itself okay so let's run
00:51 - through the app itself and let's go
00:53 - ahead and check so David this is what
00:55 - we're building today right we've got the
00:56 - Tik Tok clone and what's different about
00:58 - this Tik Tok clone
01:13 - JS with Firebase so Firebase is actually
01:16 - a suite of tool that is like it it is
01:19 - kind of replacing serers side uh
01:22 - development and so you don't have to go
01:25 - around uh building the server side
01:27 - application uh and the back end but this
01:30 - time we are going to actually build the
01:33 - backand
01:41 - as oh David I don't know if they can I
01:44 - think they can't actually hear you at
01:46 - the moment David one second it's volume
01:49 - side I'm not available to justify right
01:52 - give me one second guys let's go ahead
01:53 - and see what's going on there so can't
01:56 - hear David let's
01:57 - go there we go just speak David for a
02:01 - second right I think I think we're good
02:05 - now all right sorry for that guys so we
02:06 - actually had a little bit of an issue
02:07 - David if you're in to chat and you guys
02:09 - just let us know in the comments if you
02:10 - can hear David that would be awesome so
02:13 - just to tell you guys what David was
02:15 - saying we went ahead and we built the
02:18 - Tik Tok Clon you guys saw this before
02:20 - and all the data was being pulled from
02:21 - Firebase before but David has worked
02:24 - with mongod DB quite a lot in his time
02:27 - and what he's essentially done is he
02:29 - transformed the app so we have a pumped
02:32 - and exciting build for you guys today we
02:34 - are going to be building this Tik Tok
02:36 - clone with react deploying it on
02:38 - Firebase but David where is the data
02:41 - actually coming from
02:42 - today so the data today is not going to
02:46 - come from Firebase we are actually going
02:48 - to be using mongod DB mongodb is a nosql
02:53 - database it's kind of like uh filebase
02:56 - like data structure wise but it's like
02:59 - super professional and lot of companies
03:02 - are using mongod DB and yeah so we are
03:06 - actually going to be building no JS apis
03:09 - as well and they are going to be pulling
03:11 - the data and throwing it to the front
03:13 - end exactly guys that's exactly what
03:15 - we're going to be doing let's run
03:17 - through a quick demo of the app so we
03:18 - have a working Tik Tok app and the nice
03:20 - thing is as you scroll guys you can see
03:22 - it actually snaps so we have this lovely
03:24 - snap functionality a lot of you guys
03:26 - liked this last time let us know if
03:27 - you're pumped for this by the way guys
03:29 - and let's go ahead and see so if I tap
03:30 - on the video you can
03:35 - see we get a live
03:39 - video and then if you scroll down and
03:42 - click the next one you can see I love
03:44 - this
03:45 - [Laughter]
03:48 - video and then if you got you guys are
03:52 - crushing routine
03:56 - yeah nice so they said David son is low
04:00 - but yeah guys I've just up dav's volume
04:02 - so if you guys want to go ahead and
04:03 - check that out then um go ahead and
04:06 - check it out but what we're going to do
04:07 - essentially now is actually go ahead and
04:09 - build this app so the main difference
04:11 - between this and the previous Tik Tok
04:13 - clone is that we are going to be
04:15 - powering everything with an Express JS
04:19 - uh back end so it's going to be it's
04:21 - going to be the data is going to be
04:22 - coming from mongod DB we're going to
04:24 - show you guys how to set up mongod DB
04:26 - we're also going to be showing you guys
04:27 - how you can combine Firebase as a front
04:29 - end sort of service and then also David
04:32 - are we going to deploy mongod DB in
04:35 - where are we going to deploy it to uh of
04:37 - course actually actually actually mongod
04:39 - DB is an online service but you
04:42 - definitely want to go ahead and deploy
04:44 - the API the OJs API and we are going to
04:47 - be using Heroku for that yeah nice dope
04:51 - it's going to be all live David Jonathan
04:55 - just said Sunny you need help with the
04:56 - dance just dude I mean my friend is a
05:00 - professional dancer so she you know like
05:02 - if if you're with a professional dancer
05:03 - of course you're going to look bad you
05:06 - know uh guys some things to point out so
05:09 - like let me go ahead and just get this
05:10 - again so like some things to point out
05:12 - we have material UI as well here we have
05:15 - material UI icons we have a lovely
05:16 - little animation over here we have this
05:19 - nice little ticker we call it like a
05:21 - react ticker here I'm going to show you
05:22 - guys how to build that and then we also
05:24 - have this lovely snap functionality that
05:26 - you guys saw earlier and also these
05:29 - videos are actually from Tik Tok so you
05:30 - can go ahead follow kazzy's Tik Tok over
05:33 - here and follow my Tik Tok or my
05:36 - girlfriend's Tik Tok over here and we
05:38 - appreciate that also guys if you're
05:40 - enjoying this content and you're excited
05:42 - make sure to go ahead and actually grab
05:44 - out your phones right now and snap the
05:48 - the snap today's session and tag myself
05:51 - here and David I've added his tag over
05:54 - on his side of the screen that's perfect
05:57 - yeah down there right and with that guys
06:01 - also before we get started I don't know
06:03 - how many of you guys are following me on
06:05 - Tik Tok on um on um and also somebody
06:09 - just said it's front end covered in the
06:10 - other video guys we're doing the entire
06:12 - build today so we're not we're not
06:14 - playing around we're doday we are going
06:16 - to be developing a full stack
06:18 - application front and back and covered
06:21 - full stack application guys so full
06:23 - front end functionality back end
06:24 - functionality we just hit over
06:26 - 750 people on this stream thank you so
06:29 - so much guys and all we ask is that you
06:31 - just smash the Thumbs Up Button if
06:33 - you're excited for this um also I was
06:36 - going to mention yes so guys if you
06:38 - haven't already seen we actually have a
06:41 - react challenge so get excited for this
06:44 - because this is huge guys we have a 5day
06:48 - react JavaScript challenge the link is
06:51 - in the description right now so all you
06:53 - need to do is go over and actually you
06:55 - know what I want everyone right now to
06:58 - go to that link in the description
07:00 - and sign up for this challenge do you
07:01 - know why because it's completely free
07:04 - guys it's completely free and I'm
07:06 - dropping these videos with David with
07:08 - kazy with everyone all we ask guys is
07:10 - you go and make the most of this
07:12 - challenge the challenge starts on
07:13 - September the 7th it starts in 5 days
07:16 - all you need to do is go into the uh go
07:18 - into the description open up the
07:20 - challenge and enter your first name and
07:22 - your email address and you'll get
07:24 - registered up for the challenge you'll
07:25 - get an email telling you when the
07:27 - challenge starts and all you guys have
07:28 - to do is go along with with us right so
07:30 - we're going to be building a souped up
07:32 - version of the Amazon clone with full
07:34 - e-commerce functionality everything that
07:36 - you guys love and asked for is going to
07:38 - be inside that build and you guys can
07:40 - get involved in that by just going to
07:42 - the link in the description hitting it
07:44 - and then signing up so let me know in
07:45 - the comments right now if you've signed
07:47 - up to this right let's get loads of
07:49 - people we can see we've got samat nepon
07:53 - just said I've already signed up awesome
07:55 - dude love to see that let's see who else
07:57 - we get on this right so we've actually
07:58 - got a huge huge amount of people and
08:00 - guys we have
08:03 - $6,000 in prizes right so $6,000 David
08:07 - that's pretty exciting
08:09 - right
08:12 - yes you're very quiet David at the
08:15 - moment you're you're super quiet at the
08:17 - moment
08:18 - David So to just speak a little closer
08:20 - to the
08:22 - mic okay so actually I highly recommend
08:26 - everybody going ahead and joining
08:29 - because uh back in March uh Nazi's first
08:32 - uh JavaScript challenge helped me uh
08:36 - Kickstart My development uh developing
08:38 - career and today I'm getting uh getting
08:42 - clients like almost every day nice yeah
08:45 - so David actually came from the uh the
08:49 - one of the first JavaScript challenges
08:50 - that we actually did U and I can see
08:53 - some people actually signing up that is
08:54 - awesome and guys like David was once a
08:56 - student who came from a challenge so
08:58 - like think about it this way if you want
08:59 - to get involved you want to be a part
09:01 - like of the Journey part of these live
09:02 - streams then there is nothing stopping
09:04 - you all you need to go ahead and do is
09:07 - First Link in the description make sure
09:09 - you go ahead and check that out rishav
09:12 - rishav sorry if I didn't pronounce what
09:13 - I said it's for beginners 100% if you've
09:17 - never coded before I want you guys to go
09:19 - into that right now and sign up right we
09:21 - also have a free live webinar training
09:23 - um which you guys can go ahead and check
09:25 - out that will be in the description at
09:27 - some point as well um but yeah so guys
09:30 - all I'm asking for is that you go ahead
09:31 - and smash the thumbs up button and sign
09:33 - up to that uh free uh react Challenge
09:37 - and you can win yourself uh a huge priz
09:40 - prize if you if you actually go ahead
09:43 - and get involved inside of that so make
09:45 - sure you get super pumped up for that we
09:48 - have loads of people signed up this is
09:50 - insane so we have Beast rwa Bobby Kumar
09:53 - Juran he says samat says encouraged
09:56 - everyone to enjoy it that's awesome
09:58 - Leroy says what is the challenge about
10:00 - we are teaching you how to do a full
10:01 - stack application we're going to be
10:03 - running through the Amazon clone and
10:05 - we're going to actually be having the
10:06 - entire app up and running built for you
10:09 - guys um and you guys are going to have
10:12 - homework each day of the challenge it's
10:14 - it's a very intensive challenge guys but
10:16 - you guys are going to learn a huge
10:17 - amount in those days and you have the
10:19 - chance of winning a
10:21 - $6,000 coding boot camp and if you're
10:23 - referred then that person wins too so we
10:26 - it's very very exciting stuff um I can
10:28 - see a lot of people saying the mic is
10:30 - low I hope it's it's okay now um but
10:34 - yeah guys and also today you don't need
10:35 - to know anything if you're complete
10:37 - beginner it's completely all it's all
10:38 - good right like David this video is for
10:40 - everyone
10:42 - right exactly exactly we are going to be
10:44 - explaining everything for everybody
10:47 - awesome love that wow we have a lot of
10:49 - people signed up this is insane right
10:52 - with that said guys we're just about to
10:54 - hit 800 likes before the videos even
10:56 - started just about 880 people get
10:59 - everyone that you know share this video
11:02 - out get as many people on this right now
11:04 - smash that Thumbs Up Button we're about
11:05 - to get started right now and let's just
11:07 - jump straight into it David what' you
11:10 - say yes let's go let's jump right into
11:13 - it let's do it dude so the first thing
11:16 - that we're going to do guys is we're
11:17 - actually going to go ahead and build the
11:19 - front end portion of the app right so um
11:22 - what we going to do here is we're
11:24 - actually going to pull up our terminal
11:25 - so command J is a nice little shortcut
11:27 - that you can use here and what we're
11:28 - going to say is LS just make sure we're
11:30 - in the right directory so this is the
11:31 - directory that we're in right now we're
11:32 - going to say MPX create react app and
11:36 - then you want to give it a name so in
11:37 - this case we're going to call it Tik Tok
11:39 - right now while that's happening guys
11:42 - what that's going to actually set up a
11:43 - starter template for us I also see a
11:46 - bunch of questions about react native
11:48 - that is coming guys so if you're excited
11:50 - about that smash that damn Thumbs Up
11:52 - Button this is insane David we're at 868
11:55 - likes already oh man I mean this is
11:59 - yes exactly and if if you're if you
12:01 - haven't smashed that uh this is what
12:04 - your like button should see yeah exactly
12:07 - guys we just got a donation from suit
12:09 - and he says watching YouTube during
12:11 - working hours # zero regrets dude that's
12:14 - what I'm talking about that's the kind
12:16 - of energy we need on this channel thank
12:17 - you so much um so this video so some
12:20 - people asking if it's going to be
12:21 - recorded yep everything is recorded it's
12:23 - going to be up straight away afterwards
12:25 - so stay tuned for that guys 900 likes oh
12:28 - man we're about to hit 900 viewers as
12:30 - well so let's let's keep pushing that
12:31 - number up guys and you guys will see and
12:33 - guys we're not only here today we're
12:35 - here tomorrow and the day after doing
12:37 - man stack build so don't worry you we've
12:40 - got a lot of fun coming your way guys
12:41 - and we have a react challenge starting
12:43 - next Monday so we got a lot of stuff for
12:45 - you guys all right now um we have oh
12:50 - great time to be
12:51 - uh go for
12:55 - it what was that D I just said uh it's
12:57 - such a great time to be
12:59 - it's such a great time to be a
13:01 - programming student yeah really is
13:03 - honestly really really is nice so guys
13:06 - while this is getting set up right now
13:07 - what we're going to do is we're going to
13:08 - go ahead and go over to Firebase and
13:10 - we're going to set up our Firebase
13:12 - instance so with that said let's go over
13:14 - to the console and you want all you need
13:17 - here is a Gmail account to get started
13:19 - you can see we've got the other clones
13:21 - here but let's go ahead and click on ADD
13:22 - project and here I'm going to say Tik
13:24 - Tok clone right Tik Tok clone and all
13:26 - what you want to do is click on continue
13:28 - we're going to disable Google analytics
13:30 - cuz we're not too interested and this
13:31 - will actually go ahead and set up the um
13:34 - the project for you and now the reason
13:36 - why we're using Firebase is it's a suite
13:38 - of tools provided by Google but it's
13:40 - going to allow us to deploy the app in a
13:43 - extremely simple way we just got another
13:46 - donation from gamer 001 thank you so
13:48 - much dude I appreciate that W thank you
13:50 - so much insane so some people are saying
13:53 - you still need Firebase even with node
13:55 - and so uh the only reason we're
13:58 - using Firebase is to make the deployment
14:00 - of the front end Super S simple right so
14:03 - let's just let's go ahead and separate
14:05 - our concerns there the the background is
14:08 - going to be uh the back end sorry is
14:09 - going to be completely in node.js
14:12 - Express and using mongodb so yes it is a
14:16 - completely separate build so so right
14:18 - now we've set up our Firebase project
14:20 - which is all good now we can go ahead
14:22 - and close that that's awesome and let's
14:25 - go ahead and actually run our app so I'm
14:27 - going to stop the one that I have
14:29 - running locally right now and I'm going
14:32 - to go instead so now we should see the
14:34 - site can't be reached awesome let's go
14:36 - back here and you can see once you've
14:38 - actually set up create react app or
14:40 - create react app has finished its job
14:42 - then we basically want to go ahead and
14:43 - CD into that folder so CD into it uh and
14:47 - then you want to hit mpm start and that
14:50 - will spin up this template app right now
14:52 - David you've coded in react before
14:56 - right yes that's correct yeah and what's
14:58 - your experience of react so far do you
15:00 - enjoy it why do you like it what's
15:02 - what's what's good about it yeah so so
15:04 - react is uh I think it's it's super uh
15:07 - cool to Pro uh program in react I mean
15:09 - it's uh very uh very easy to code I
15:12 - think yep uh it's it's so much easier
15:15 - than actually typing up the HTML CSS and
15:19 - JavaScript because it's it's like in one
15:21 - file and then I can see everything and
15:24 - uh also it um by default it features the
15:28 - hot reloading which is very developer
15:31 - friendly and also with the uh component
15:34 - based stuff it's it's very very very
15:37 - nice way to program so yeah exactly
15:39 - awesome dude really enjoyed it nice so
15:42 - with that guys we just got another
15:44 - donation from abishek devans thank you
15:46 - so much dude we appreciate any donation
15:48 - you guys are sending in um so Madan this
15:51 - is a good question he says you're going
15:52 - to host the front end and back end
15:54 - separately yes and there's a really
15:56 - distinctive reason why I want to do that
15:58 - because because guys when you create a
16:01 - front end and a back end it's kind of
16:03 - confusing in the beginning it's like
16:04 - well I have a react app I have some
16:06 - nodejs app are they two separate things
16:08 - or they are going to be two completely
16:11 - separate um sort of entities we're going
16:13 - to have a react app on on the front end
16:15 - we're going to have a nodejs server on
16:16 - the back end we're going to separately
16:18 - deploy them so the front end app is
16:19 - going to go to Firebase and then we're
16:21 - going to have the back end app go ahead
16:24 - and live on Heroku and then we're going
16:26 - to show you how the communication still
16:27 - works everything will still work in its
16:29 - place right um so really really exciting
16:32 - stuff uh we are at
16:34 - 990 likes guys this is insane thank you
16:37 - so much wow this is insane right let's
16:41 - go ahead and carry on guys so this is
16:44 - what you're going to get when you
16:45 - actually set up your first react app and
16:48 - you do mpm start so if you get to this
16:49 - page that's very good let's go ahead and
16:53 - actually show you this on one screen so
16:55 - you guys can actually see this a little
16:56 - bit easier because right now it might be
16:57 - a bit confusing to see
16:59 - so there we go and just tell me guys if
17:02 - it gets too small I can make the font a
17:04 - little bit bigger so what we're going to
17:05 - do at this point is we are actually
17:07 - going to go ahead and open our Tik Tok
17:10 - folder open the source and we got we
17:12 - need to do a cleanup process so what we
17:14 - do in the cleanup process is we get rid
17:15 - of app. test.js we get rid of the logo.
17:19 - SVG and we get rid of the setup
17:22 - test.js right so we're going to go ahead
17:24 - and do that and we're going to do this
17:26 - not here to test exactly not today and
17:30 - you should get an error because we just
17:31 - deleted the logo file that was part of
17:33 - that spinning app right and we just hit
17:37 - 1K likes that is insane guys thank you
17:40 - so much we massively appreciate that
17:44 - we've just started this stream we have
17:45 - 930 people watching this is insane we
17:48 - love you guys and appreciate every
17:50 - single one of you that's insane dude uh
17:53 - so we need to delete much guys yeah
17:55 - honestly it's super cool delete the
17:57 - header over here and let's just take
17:58 - type in H1 and we're going to say let's
18:00 - build a full stack man Tick Tock clone
18:06 - that's exciting stuff dude and let's do
18:09 - that and we're also going to change this
18:10 - to a lowercase a because we are
18:12 - following something called the bem
18:15 - naming
18:16 - convention exactly yeah go to app.css
18:19 - and then you want to go ahead press
18:21 - contrl a command a and delete everything
18:23 - inside app. CSS The Next Step that we
18:26 - want to do is you see this little Gap up
18:28 - here right you get this like this bit of
18:30 - spacing at the top and you don't want
18:32 - that whenever you sort of open up a a
18:35 - fresh project damn we just got two
18:36 - donations back to back we've got uh kka
18:41 - I can't pronounce the last name I think
18:42 - it's Ash ashanta thank you so much dude
18:46 - yeah and we have niten as well got from
18:49 - nitt that's it dude thank you so much I
18:51 - appreciate that massively uh We've even
18:53 - got viewers in France hey love that
18:56 - what's up fian nice so um so somebody
19:00 - asked a quick question address this he
19:02 - goes what do I need for the challenge
19:03 - I'm an absolute beginner all you need to
19:05 - do for the react challenge guys is go
19:06 - ahead and sign up that's it link is in
19:09 - the description make sure you go ahead
19:11 - and sign up to that challenge I'll show
19:13 - you guys one more time this is the
19:15 - challenge I'm talking about it is a huge
19:17 - amount of value for you guys so the link
19:19 - is in the description we go live on
19:21 - Monday with this challenge it starts in
19:23 - 5 days if you aren't there you are
19:25 - missing out guys so go ahead and check
19:27 - this out and I'm pushing ping it hard
19:29 - because like I literally we have put our
19:31 - heart and soul into this challenge so if
19:33 - you guys enjoy the content if you enjoy
19:35 - everything then you will love this
19:37 - challenge so please please please it's
19:39 - it's a big deal and I really really feel
19:41 - like you guys are going to love this so
19:42 - we've gone out of our way to make this
19:43 - massive for you guys and yeah go ahead
19:46 - and benefit from that guys so we just
19:48 - got another donation David damn we got a
19:51 - donation from damn
19:55 - from lith y lith just he says waiting
19:58 - for reca oh react native builds nice
20:02 - react native yeah awesome on the way
20:05 - somebody said please another one hey
20:08 - nice damn that's awesome dude so Sean we
20:11 - got Shan mugam and we also got an from
20:15 - an nice he goes way to be a full stack
20:18 - developer that's insane yeah guys you're
20:20 - going to be full stack developers you
20:21 - can actually call yourself full stack
20:22 - developer after this video cuz he is a
20:24 - full stack build right um nice so let's
20:28 - go ahead and jump in so somebody said
20:29 - please increase the font size I will do
20:31 - that for you guys so inside of index.css
20:33 - that little Gap that we had at the top
20:35 - right here to get rid of that we're
20:37 - going to go ahead and do the following
20:38 - we're going to say margin of zero like
20:41 - so and what that will do is that will go
20:44 - ahead and remove it as such right so we
20:46 - won't have that issue that we have right
20:48 - there now I'm going to go ahead and
20:49 - start the other app on the side so I can
20:52 - show you guys when we're building
20:53 - certain things how it will look on the
20:56 - screen so that might help you guys
20:57 - visualize what we're building building
20:58 - as we build it um let me go ahead and
21:01 - pop that in there there we go nice so
21:05 - what we're going to do guys first thing
21:06 - is you see now we have a fresh build
21:09 - right we have a fresh fresh starting
21:10 - template this is insane um let's go
21:14 - ahead and check this out so test oh guys
21:17 - and actually you know what I will we'll
21:19 - just cover this right now because the
21:21 - tech that we're going to use today right
21:22 - this is a really important point because
21:24 - I feel like you guys are going to learn
21:25 - a huge amount today and it's going to be
21:26 - really valuable for you guys to actually
21:28 - see and understand the exact Tech that
21:30 - we're going to be doing so that you get
21:31 - the most value from today's session so
21:34 - what we're going to be doing guys is I'm
21:35 - going to quickly draft out so David what
21:37 - we what have we got in today's session
21:39 - we have react so we we have react that
21:42 - is a letter r from uh earn we also have
21:48 - nodejs that is yeah so let's separate
21:51 - let's separate this into two sections
21:52 - just have the front end front so for
21:56 - front end we are going to be using uh
21:58 - react and we will be hosting react on
22:01 - the Firebase right so for front end we
22:05 - are just uh going to be using these two
22:07 - technologies yep no no we still got more
22:09 - we got material UI for the designs we
22:11 - got material UI we have flexbox guys so
22:14 - we're going to be showing you how to use
22:16 - flexbox even a third party Library so we
22:18 - have a third party ticker library and
22:21 - the ticker that I'm referring to is this
22:23 - one over here so um oh God oops not that
22:28 - one y this lovely ticker over here I'm
22:31 - going to show you guys how to do that
22:33 - right so you're going to have all of
22:34 - that inside of this we're also going to
22:36 - be showing you guys how to actually go
22:39 - ahead and have this beautiful
22:41 - functionality where you can the scroll
22:43 - snap functionality whoa we just got
22:45 - loads of donations guys I'm going to be
22:47 - dropping those in a second guys right
22:49 - after we um right after we you know I
22:53 - have to I want let's let's quickly take
22:55 - a minute to appreciate that guys we have
22:58 - so many all right so let me go ahead and
22:59 - go through this so we've got manav
23:02 - Aurora says do I need JavaScript
23:04 - Advanced for web like promise closures
23:06 - no you don't need to be Advanced for
23:07 - this kind of stuff guys keep it simple
23:09 - don't over complicate it just follow the
23:11 - builds pattern recognition will teach
23:12 - you a lot of this stuff and you'll learn
23:14 - it as you need to learn it okay so don't
23:16 - worry about
23:18 - beinged little motivation uh I just
23:21 - started programming back in March
23:24 - exactly and here I am now exactly guys
23:27 - so you can be complete beginner and you
23:30 - will be able to build it by yourself in
23:33 - in half a year even less exactly David
23:36 - we just broke over a thousand viewers
23:39 - damn dude we just got 1,00 likes this is
23:43 - insane okay this is awesome another
23:45 - donation by Jason Francis he says good
23:47 - job guys any react native tutorials
23:49 - coming soon yes so we have three man
23:51 - builds we have today tomorrow and the
23:53 - next day uh and then we have the react
23:56 - Challenge and after that on the road map
23:58 - I have definitely got react native in my
24:00 - in my eyes so like so I'm going to be
24:02 - dropping some content for you guys for
24:03 - that if you interested in that if you
24:05 - are smash that thumbs up button and
24:06 - we'll be happy to deliver uh another
24:09 - donation from netra he says how can we
24:11 - enable terminal in our vs code using
24:14 - hyper right now so if you go ahead and
24:16 - press command J inside of your terminal
24:19 - um then you can actually so right now
24:21 - I've got it open if I press command J
24:23 - you can actually go ahead and pull up a
24:24 - terminal so it has a terminal built into
24:26 - vs code so that should help you out
24:29 - there uh let's go ahead and check we've
24:31 - got another one he goes I also want to
24:32 - become a full stack developer Danny
24:34 - Great Dane you are in the right place my
24:36 - friend make sure you are in that
24:38 - challenge next week and I promise you
24:39 - you will get a huge amount of value from
24:41 - that um so yeah you're in the right
24:43 - place well done for for watching this
24:45 - and being here let's go ahead and see
24:47 - that is awesome guys massively massively
24:50 - appreciate that so let's go ahead and
24:52 - jump and Carry On David So now we've got
24:55 - the so the tech we were talking about
24:57 - we've got the front end which is this
24:58 - portion right we've got all of this
25:00 - stuff now the back end David break it
25:03 - down for me what is on the back
25:07 - end so the back end we are going to be
25:10 - using something called nodejs uh nodejs
25:13 - is a backend uh framework for JavaScript
25:17 - and we are going to be running an
25:18 - expressjs server for that y um and we
25:23 - will be using mongodb as a database yep
25:28 - and we will be hosting this whole thing
25:31 - on Heroku right okay so hosting on
25:34 - Heroku right and also there was
25:37 - something you said about was it mongus
25:39 - yeah yes exactly yes uh so for uh to
25:43 - connect to mongodb there is a tool
25:46 - called mongus uh which will make the
25:49 - connection between the database and your
25:51 - application super simple
25:54 - awesome yeah yeah so this is uh there
25:57 - was mindblowing for me uh back in the
26:00 - day nice dude that is awesome I'm
26:03 - excited for this build so like this is
26:05 - awesome and guys this is a in case
26:07 - you're wondering this is a full stack
26:09 - build okay so everything else has
26:11 - actually been a full stack build we've
26:12 - just used um react Firebase to make it
26:14 - super simple so it doesn't actually feel
26:16 - that big but yep today you can be sure
26:19 - that this is a full stack build okay so
26:22 - with that said let's jump straight into
26:24 - we just got another donation dude we got
26:27 - another one over here
26:29 - hey check that out that's awesome dude
26:32 - nice we got another one oh my god um
26:36 - damn oh somebody says Hey Sunny I'm
26:38 - hearing your breathing sound louder can
26:39 - you hear yeah sorry about that guys I
26:41 - actually I have a bad habit of breathing
26:42 - into this mic and it's super it's just
26:45 - so delicate like I can hear it all the
26:46 - time so we've got another one from Pine
26:48 - thank you so much another one from tan
26:50 - Mishra thank you guys that that is
26:53 - really really nice yeah so thank you so
26:55 - much um okay so with that said let's go
26:58 - ahead and carry on so here let's close
27:00 - this up we don't need this so for the
27:03 - app so let's go ahead and I always like
27:05 - to start off these builds by starting
27:08 - off with sort of drafting out what we're
27:10 - going to be building right so in today's
27:12 - build what we're going to have is
27:13 - essentially a container so we're going
27:16 - to call this like an app container so
27:18 - we're going to have a container and this
27:19 - is basically going to hold all the
27:20 - videos right so here it's a very simple
27:23 - architecture in today we're going to
27:24 - have just this is going to be like a
27:25 - list of videos right so we're going to
27:27 - have all the videos inside of that app
27:29 - container and then what we want it to do
27:31 - is basically render out in such a way
27:33 - that it's essentially you'll have some
27:35 - kind of like video like this right and
27:39 - it will basically just be like this so
27:40 - so we would like pull something from the
27:42 - database and then we would actually have
27:45 - um several videos show up here but then
27:47 - they render out like so like this right
27:51 - let me actually remove that comment
27:52 - sorry guys I've got that on there still
27:55 - um so somebody said The more
27:57 - enthusiastic sun he becomes the more he
27:59 - breathes louder you know what guys it's
28:01 - probably true I don't know you know it's
28:04 - a small price to pay for the the the
28:06 - content you get so we got sa Chan thank
28:08 - you he says what about authentication
28:11 - method um so we're not going to be
28:13 - covering authentication in today's build
28:14 - we have plenty of Builds on that yeah we
28:17 - have plenty of Builds on that um and
28:19 - somebody says you don't use fir store
28:21 - why we actually have a video where we
28:23 - built the entire thing with fir store so
28:25 - go ahead and check that out if you're
28:26 - interested that is uh the Tik Tok build
28:28 - that we previously built has it from um
28:32 - from firestore So today we're focusing
28:34 - on a complete full stack build so get
28:36 - excited for that right let's go ahead
28:38 - and jump on so we're going to have it
28:40 - like this right so David I think what we
28:42 - should be doing right now is essentially
28:44 - maybe let's go ahead and create the
28:46 - video component yeah okay let's go so
28:49 - you want to go into your file type in
28:51 - video.js like so whoa we just got a big
28:54 - donation somebody said Super Chat I have
28:56 - completed the Google clone Instagram
28:57 - clone and YouTube clone thank you sunny
29:00 - and Kazi for that I'm super pumped for
29:01 - man development that is awesome dude
29:04 - that is awesome well done for completing
29:06 - all of those things um and guys I I'll
29:09 - say again and again like honestly if you
29:11 - just follow these tutorials you're going
29:12 - to get so much value from it so make
29:15 - sure you actually stick with this
29:18 - somebody just dropped another 2 pound he
29:19 - said man like Sunny top Che appreciate
29:22 - that dude uh and today it's not just me
29:24 - we got David in the house too so that's
29:26 - awesome exactly thank you so much dude
29:30 - um another donation a man like Sunny top
29:33 - tutor I couldn't agree more yeah thank
29:36 - you guys that is awesome um right so
29:40 - let's go ahead and jump on so now we're
29:43 - going to create a video component so I
29:45 - like to use something called Snippets so
29:47 - you can see here I'm using RFC as soon
29:49 - as I hit enter boom it pops out the
29:51 - entire code for me now how do we get
29:54 - that to work right so I'm going to go
29:55 - ahead and hide the mini map so we get a
29:56 - bit more room so in order to get those
29:58 - Snippets features go into the extensions
30:00 - type in es7 in the search bar and the
30:03 - top one that you see right here so es7
30:05 - Redux react graph cure Snippets that is
30:08 - the one that you want to click on
30:09 - install for very very important stuff um
30:12 - so a lot of people are asking what's
30:14 - being covered in today's build that that
30:16 - wasn't covered in the last one guys if
30:18 - you have seen the last one today we are
30:20 - going to be including an entire back end
30:23 - so we're going to run through the front
30:24 - end get everything up and running and
30:26 - then we're going to show you how to do
30:27 - an entire back end to this build right
30:29 - so Express server we're going to have a
30:31 -  database and then we're going to
30:33 - have everything running on the back end
30:34 - so really really powerful stuff we will
30:37 - be understanding what's going on in
30:39 - Firebase exactly eventually yeah yeah
30:42 - exactly so now let's go ahead and when
30:46 - we create a new file we need to do the
30:47 - following we need to create a video. CSS
30:50 - file so let's go ahead and do this so
30:51 - video. CSS as such and then we're going
30:53 - to create a class name for that as well
30:55 - and we're going to call this one video
30:56 - like that right
30:58 - now inside of video let's go ahead and
31:00 - do a few things so in here we're going
31:03 - to basically have the F we're going to
31:04 - have the video itself so this is going
31:06 - to be a video component like so and this
31:09 - can be uh let's just let's grab a source
31:12 - temporarily so let me go ahead and grab
31:13 - this one um there we go so this is a
31:17 - video Source right here and then we're
31:19 - going to have a so this is actually like
31:22 - a hard value I've got straight from Tik
31:24 - Tok at the moment so this is kaz's video
31:27 - and then we're actually going to have a
31:29 - video
31:30 - phoo and a video sidebar Right video
31:34 - sidebar David we got another donation
31:37 - Dam dude he says oh my god oh I can't
31:40 - actually see that one oh okay so it's
31:41 - actually on YouTube it actually looks a
31:43 - bit different so on YouTube it looks a
31:45 - bit like this it says Mahesh PO with a
31:48 - dancing chicken thank you so much dude
31:50 - appreciate that thumbs up chicken
31:52 - actually yeah doesn't always show
31:54 - properly and somebody you ask what does
31:57 - the man stand for David so why don't you
31:59 - go ahead and tell them what does M Stack
32:01 - actually stands for mongod DB expressjs
32:04 - reactjs and no JS so these are super hot
32:08 - topics uh in in today in in nowadays uh
32:12 - development world but we just got
32:14 - another donation hey and it's actually
32:17 - orange yeah so it's from anit agoal and
32:20 - he says sunny can we use other de
32:22 - databases like Cassandra later also
32:24 - would love to see Docker in the upcoming
32:25 - videos what's your thoughts on this it's
32:27 - my second donation in the video love you
32:29 - guys firstly massively appreciate that
32:31 - dude thank you so much for a second
32:33 - donation and also to answer your
32:35 - question so I like to keep it somewhat
32:37 - focused because we can very quickly go
32:39 - into all sorts of areas and we never
32:41 - really sort of specialize or get good in
32:42 - one so what I would say is focus your
32:44 - energy on your actual development and in
32:47 - this case what I would say is Firebase
32:49 - and M M Stack development focus on those
32:52 - two things and you will really sort of
32:54 - go far you want to get really really
32:56 - good at those things guys and then like
32:57 - then you can look into the other things
32:59 - in your own time as a hobby but I would
33:00 - say really harness on this and that's
33:02 - when you can actually start making money
33:03 - from it cuz you have to be really good
33:05 - at this stuff yeah once you get great in
33:08 - the fundamental fundamentals then you
33:11 - can just go ahead and learn whatever and
33:13 - super in in like no time yeah exactly
33:16 - once you get that build up that ability
33:17 - to learn and you you're going to go very
33:19 - far with that so uh awesome stuff now um
33:23 - I'm just trying to see if I can get the
33:25 - starts up okay so okay so I can't
33:28 - actually see anything there okay so
33:29 - let's carry on so we've got the video
33:30 - footer component and the video sidebar
33:32 - component when I talk about those guys
33:34 - we're actually going to go let me clear
33:35 - this off the screen for a sec so here
33:37 - you can see the video footer oops I've
33:40 - got it stuck on the video footer is
33:42 - referring to this right here so
33:44 - everything inside of this video footer
33:47 - is what I'm referring to as the footer
33:49 - element uh and then we also have the
33:51 - sidebar which is this element right so
33:53 - the sidebar is that element over there
33:56 - and these are the sort of markings of
33:58 - what we're doing there so it's always
33:59 - good to mark it out because it will help
34:01 - you sort of structure out your build and
34:03 - and sort of like if you ever get stuck
34:04 - or you kind of get into a bit of brain
34:06 - fog you know what you're going to be
34:07 - doing next and it does honestly guys I
34:09 - know it seems a bit pointless at times
34:11 - but it does actually make things a lot
34:13 - easier it really does it really does
34:16 - help especially for uh beginners yeah
34:18 - really really will help you out it will
34:20 - make you overall a a better developer
34:22 - guys if you're doing that so that's
34:24 - going to help you out a lot I'm just
34:26 - pulling up some stats as well nice so
34:28 - we've got the video um footer on the
34:30 - side so now what we're going to do is
34:31 - we're actually going to render this to
34:32 - see if it plays in the uh if if we can
34:35 - actually go ahead and see this so let's
34:37 - go ahead and do the following we're
34:38 - going say video and you can see it says
34:39 - Auto Import from video so we can
34:41 - actually do that little trick so we've
34:43 - imported the component that we just
34:45 - wrote over here and if we save this now
34:47 - and go to our Local Host it says cannot
34:49 - resolve video CSS that's because we
34:52 - created a CSS file uh we didn't create
34:54 - the CSS file sorry but we imported it so
34:57 - if we do that we should be able to see
34:58 - it now guys we can't actually see
35:00 - anything on our page the first thing I
35:02 - want to check is actually that this is a
35:04 - correct video
35:06 - so so that is a video that's working um
35:09 - wow an again he said had to say thanks
35:12 - again really appreciate that dude that's
35:14 - insane thank you so much man like really
35:17 - really love that and appreciate that um
35:20 - let me go ahead and activity stream okay
35:24 - nice so we are $25 in chat Revenue right
35:29 - now guys thank you so much that's insane
35:32 - God yep
35:34 - 1,266 likes as well so really really
35:36 - massively appreciate that nice so we can
35:40 - see that the video isn't actually
35:42 - showing on the output right so we oh no
35:44 - it is here yeah awesome so it is here
35:46 - yeah so that's we can see our video is
35:48 - here and it's working um so let's go
35:51 - ahead and actually take it a step
35:52 - further now so we have the video right
35:54 - here but we actually want this firstly
35:57 - we don't want want it to play autop
35:58 - playay so we're not going to add any
35:59 - kind of autoplay elements we are going
36:01 - to add a few attributes to this we're
36:03 - going to add one which says Loop so that
36:05 - way if you do choose to play the video
36:07 - then we want to be able to Loop through
36:08 - it we also want to have some kind of
36:10 - Click Handler but we will come to that
36:11 - in a sec um and we're also going to give
36:13 - this a class name so let's give this a
36:15 - class name so we can sty it later and
36:16 - we're going to say video player so
36:19 - that's going to be the video player now
36:21 - let's get that swiping functionality
36:24 - done first thing because that's the most
36:26 - crucial part about Tik Tok right so
36:28 - let's go ahead and drop two videos in
36:30 - like so and if we see this now we've got
36:32 - two videos right but we want it so that
36:35 - it actually snaps right so it's actually
36:37 - going to go ahead and snap when you are
36:40 - scrolling so David if we check this one
36:41 - out if I scroll like a little bit and I
36:44 - let go it actually snaps you see that so
36:46 - I'm scrolling and I let go and it
36:48 - snapped just like it has a very nice
36:50 - behavior to it right let me go ahead and
36:51 - get rid of this there we go sorry guys I
36:54 - just saw it says remove the donation I
36:56 - removed that so there we go if we can
36:58 - see it snaps very nicely right so we
37:00 - want to achieve that same functionality
37:02 - in here right now guys please don't um
37:05 - spam if you do spam I'm just simply
37:07 - going to block you like honestly like if
37:10 - you do that I'm going to block you so
37:11 - don't go ahead and spam um right so
37:15 - let's go ahead and the first thing in
37:16 - order to get that functionality what
37:18 - we're going to do is we're going to
37:20 - basically wrap this in a container right
37:22 - so we're going to say um app container
37:26 - so I'm going to say say div and I'm
37:29 - using emit here to get the shortcut I'm
37:31 - going to say app um I think it's app
37:33 - container what did I call it I call it
37:35 - app videos it makes sense just yeah
37:38 - videos oops read app videos there and
37:41 - what we're going to do is we're just
37:42 - simply going to Chuck this inside of
37:43 - here like that right now we are using
37:46 - prettier and prettier is a very nice uh
37:48 - uh formatting tool which is why I didn't
37:50 - have to actually fix all my indentation
37:52 - so if I save the file it fixes it to get
37:54 - this tool all you need to do is go into
37:56 - the extensions type in prettier like so
37:59 - and you'll see the top one you want to
38:01 - enable that it's got so many downloads
38:04 - so you know it's pretty legit um and
38:06 - then what you want to do is go into code
38:08 - insiders preferences settings and make
38:10 - sure you enable this format on Save uh
38:14 - tick that and you'll basically get the
38:15 - functionality that we get right now when
38:17 - we're coding right so let's go ahead and
38:20 - carry on so we've got this app vide so
38:21 - let's go ahead and style this right now
38:24 - so in order to get that snap
38:25 - functionality what we need to do now is
38:27 - we need to open up app. CSS on the side
38:30 - over here we're going to go ahead and
38:32 - pop this over like so and I'm going to
38:34 - make this a bit smaller because right
38:35 - now it's extremely difficult to see that
38:37 - so there we go and you can see app. CSS
38:40 - right so in firstly we're going to have
38:42 - to Target all we're going to have to
38:44 - Target all of the HTML so this is a
38:47 - trick that you have to do when you do
38:48 - this snapping functionality so we're
38:50 - going to add the following line and this
38:52 - will actually allow us to get that um
38:55 - that snapping functionality so you see
38:57 - here we're actually going to go ahead
38:58 - and say for all of the HTML go ahead and
39:01 - make a y snap mandatory right so that
39:04 - will actually start to give us that
39:05 - snapping functionality but here you see
39:07 - nothing's actually snapping at the
39:08 - moment right so it doesn't snap
39:12 - now um what we're going to do is next
39:15 - we're going to basically we have an app
39:16 - container surrounding everything so I'm
39:18 - going to go ahead and at this point
39:19 - remove where it says let's build a full
39:21 - stack man Tic Tac Tik Tok clone we just
39:24 - got a $5 Canadian donation from Ibrahim
39:27 - Ryan
39:28 - yeah thank you dude thank you so much
39:30 - that brought the chat Revenue up to $30
39:32 - guys thank you so much amazing and we've
39:35 - got 1.3k likes that's what I'm talking
39:37 - about that is what I'm talking about
39:39 - guys and we're still at 900 viewers so
39:41 - this is insane um let's go ahead and
39:44 - check it out so we've got the app video
39:46 - so firstly what I'm going to do is we
39:47 - need to set some boundaries right so for
39:49 - the app itself I'm going to go here and
39:51 - I'm going to say inside of the for the
39:53 - app component I'm going to do a height
39:54 - of 100 view height so let's go ahead and
39:57 - first do that and the reason why we want
39:58 - to do that is because we want to snap
40:00 - according to that 100 view height of
40:03 - whatever device you're on and then I'm
40:05 - going to do a background color of black
40:07 - so just to emphasize if there's anything
40:09 - behind us we want it to be black so like
40:11 - you see like there now it's black right
40:14 - want to be a black background and then
40:16 - basically guys this is a very nice trick
40:18 - that I've learned yeah and basically the
40:20 - way what you're going to do is you
40:21 - basically going to go ahead and change
40:22 - the display to grid right change the
40:26 - display to grid and then what you going
40:28 - to do is you to click Place items Center
40:31 - and what this will do is you see it just
40:33 - perfectly centered and the beautiful
40:35 - thing about this guys is it will
40:37 - perfectly center right now and this is
40:39 - something which we'll fix afterwards you
40:40 - can see I've set it to 100 view height
40:42 - which means that this is actually only
40:44 - going to color in up to 100 view height
40:46 - of the original device height which is
40:49 - what we want at this point because I
40:50 - want trying to show you guys that we
40:51 - want to have that snap functionality
40:53 - perfect um but you can see now it's
40:56 - actually centered everything vertically
40:58 - and horizontally in the center so that's
41:00 - a really really cool trick with just two
41:02 - lines of code so make sure you guys use
41:05 - that trick quite a lot the next part
41:06 - we're going to do is for the app videos
41:08 - right so here we're going to go ahead
41:10 - and do app videos like so and here we're
41:14 - going to say position is relative like
41:17 - so and then we're going to say for the
41:19 - video container itself I want it to be
41:21 - 800 pixels I don't want it to be like a
41:23 - too too big right 800 pixels is good uh
41:26 - and then what we're going to say is a
41:28 - border radius uh let's give it a border
41:30 - radius of 20 pixels um but the overflow
41:34 - will be a scroll so overflow
41:37 - scroll like so and you can see now look
41:41 - at that guys so so you see before it was
41:43 - acting a weird right it was acting
41:45 - strange it was going off the screen but
41:47 - now we've actually contained it so we've
41:48 - said your maximum height is your your
41:51 - actual height is 800 pixels your border
41:53 - radius over here is 20 pixels and we
41:56 - want it to be scrollable okay so it's
41:58 - scrollable but it's not snapping yet
42:00 - then what we're going to say is I want
42:02 - to make the width 80% of the screen so
42:05 - let's go ahead and make it 80% of the
42:06 - screen like so and you can see like that
42:09 - right um and then we're going to say
42:11 - give it a Max width of 500 pixels so
42:15 - we're going to limit that growth right
42:17 - so we're going to limit the growth um
42:19 - and then we're going to go ahead and do
42:21 - scroll snap type so scroll snap type y
42:25 - mandatory now this is another step which
42:27 - is crucial so you see it's the same line
42:28 - of code that we did earlier you need to
42:30 - apply it to HTML and you need to apply
42:32 - it to The Container itself but that's
42:34 - done that's the second part right that's
42:37 - the second part um of getting this to
42:39 - work but you see it still doesn't snap
42:41 - so we almost there but we're not
42:43 - actually we've not got it down just yet
42:45 - another lovely donation from Joe Jamon
42:48 - thank you so much dude I appreciate that
42:49 - that brought us to $30 in chat Revenue
42:52 - thank you so much guys W thank you
42:54 - really really awesome and what we want
42:56 - to do is we want to hide these scroll
42:58 - bars right so to hide these scroll bars
43:00 - I'm going to copy a snippet that I've
43:01 - got online and actually I don't actually
43:03 - remember this snippet I always just
43:04 - Google it and then I always find this
43:05 - again but this is the snippet right here
43:07 - what you want to do is you want to
43:08 - Target the container so app videos and
43:11 - for Chrome Safari and Oprah you want to
43:14 - do this colon colon webkit scroll bar
43:16 - and then you want to do display none and
43:18 - for Internet Explorer Edge and Firefox
43:20 - you want to apply these rules now these
43:22 - rules cuz it is just targeting this you
43:23 - can put them inside of here but I like
43:25 - to keep it separate because I always
43:27 - know that this is the code that's just
43:29 - explicitly doing it for hiding the uh
43:33 - the the bars and you see when I do that
43:35 - now you've actually got this nice little
43:36 - viewfinder right you got like a nice
43:38 - little viewfinder but the video's too
43:40 - big and it's not snapping so let's go
43:43 - ahead and fix that so inside of our
43:45 - video component so this this actual
43:47 - video here we gave it a class name of
43:50 - video player so what we're going to do
43:51 - is we're going to open up video. CSS
43:53 - like so and we're going to go ahead and
43:56 - style that so inside of here what we're
43:58 - going to say is Target video make the
44:00 - position relative like so change the
44:03 - background color to white in case that
44:05 - it ever has any sort of space behind it
44:07 - or anything let's go ahead and make that
44:08 - white yeah so you can see it's very very
44:11 - subtle but there is a white background
44:13 - there uh and then we're going to change
44:14 - the this is the magic bit here so
44:16 - there's there's three lines of code that
44:18 - that are going to completely change the
44:20 - UI here we're going to change the width
44:22 - and the height to
44:24 - 100% that's the first part
44:27 - and if I save that it automatically
44:30 - should fit the container to the content
44:32 - so you see that now it's actually the
44:34 - the video is the correct height right so
44:37 - the video should be the correct height
44:38 - oh no not yet sorry not yet it's almost
44:41 - there it's almost there um so if I do
44:44 - this video yeah so then that we're going
44:45 - to do that and then we're going to say
44:47 - scroll snap
44:49 - align scroll snap align start and this
44:53 - is what will give us that snap
44:55 - functionality you see that now it
44:58 - snaps so if I scroll a little bit down
45:00 - it snaps because what we're doing is
45:02 - we're making the child snap to the start
45:05 - point of the child when we're scrolling
45:07 - so you see that as soon as I sort of
45:08 - scroll a little bit it kind of snaps and
45:10 - you see you get this very very nice sort
45:12 - of snapping functionality so if if you
45:15 - guys didn't know about that trick and
45:16 - you just found out now drop us a thumbs
45:18 - up and let us know in the comments I'd
45:19 - love to see who sees that and who
45:21 - doesn't see that right um a lot of
45:24 - people are saying give us the video URL
45:26 - guys like you can use any video right
45:28 - you can use the any video like please
45:30 - don't focus on the video URL focus on
45:33 - the actual learning behind it because
45:36 - it's not going to benefit you by knowing
45:37 - the exact video you I mean you can pause
45:39 - at this point and copy that but um yeah
45:42 - focus on the actual functionality take a
45:44 - lot of time actually I think it it even
45:47 - work for me with a simple YouTube video
45:50 - so yeah oh yeah so you could use a
45:51 - YouTube video even you could use any
45:53 - video just to see so juren Hector said
45:55 - first time seeing that snap function
45:57 - awesome dude really really glad sham
45:59 - says you are the best shoter Sunny thank
46:01 - you very much dude appreciate that uh it
46:03 - says which language are you using this
46:05 - is all in uh JavaScript right now and
46:07 - we're using the react library to get
46:09 - everything up and running right so with
46:11 - that said now the actual player itself
46:13 - so this video itself to make sure that
46:17 - that doesn't sort of look too big or
46:19 - look a bit strange we're going to go
46:21 - ahead and do video player and then we're
46:22 - going to say firstly we're going to say
46:24 - object fit fill because I want to just
46:26 - use up the cont contents as it needs to
46:28 - and then we're going to say a width and
46:29 - height of 100% so it's only going to use
46:32 - up 100% of its parent container so 100%
46:35 - oops that's 10% oops so you can see it
46:37 - does work if you say 100% now there we
46:40 - go you see that guys you get a lovely
46:42 - perfectly sized and just to prove if we
46:44 - made it 200% see it's stretched out
46:47 - right so it does it just shows you that
46:49 - it is doing something right we just got
46:52 - another donation by J jittin Saina
46:55 - awesome
46:57 - awesome oh thank you so
47:00 - much massive yeah this is this is
47:04 - awesome guys and just if you are new
47:06 - here so we still have 800 people
47:07 - watching guys if you are new here today
47:09 - just to run through you guys we are
47:11 - building the Tik Tok clone with a
47:14 - complete man architecture so it's going
47:17 - to have a react front end and then we're
47:19 - going to have all of the data coming
47:21 - from the back end which is going to be a
47:23 - node.js server and it's going to um be
47:26 - running on the express and then we're
47:28 - also going to be pulling from a mongod
47:29 - DB database and that's what David is
47:32 - going to be showing us so that is going
47:33 - to be some awesome fun stuff to go
47:35 - through
47:37 - guys yeah and we just got another
47:39 - donation from Stephen who is glad that
47:41 - we are not using Firebase well that's
47:44 - why we are here that's why we are going
47:45 - to be using nodejs Express and mongod DB
47:49 - yeah honestly and guys this this video
47:51 - is not to bash Firebase I love Firebase
47:54 - it's so powerful it it has a place and
47:57 - it really like if I had to choose
47:59 - between the two I would choose Firebase
48:01 - but I want to show you guys yeah and
48:04 - even for this build I would go with
48:06 - Firebase as well but just so that you
48:10 - get the most value out of this Channel
48:12 - and out of um watching these lives I
48:15 - think it's crucial to understand uh what
48:18 - is happening in the background using a
48:20 - backend uh service like Firebase right
48:23 - yeah exactly and in a job setting and in
48:25 - a professional environment you're going
48:27 - to be pretty much needing to know full
48:28 - stack development so there may be an
48:30 - Express server on the back end and
48:32 - things like that and you need to know
48:33 - about those two things and how just like
48:35 - in the beginning I remember I was kind
48:36 - of confused I was like hang on is is is
48:39 - my node.js server a separate app that
48:42 - I'm running cuz I was like shouldn't it
48:43 - all be one app right like and I was
48:45 - super conf and it took me ages to figure
48:47 - that out like so guys if anyone else has
48:49 - that same like pain or got confused let
48:51 - us know in the comments because I really
48:53 - kind of was like whoo whoa whoo I'm
48:55 - already doing mpm stuff so my app's
48:57 - already running why do I need another
48:59 - app running which is a node.js server so
49:01 - that kind of confused me when I was
49:03 - learning but we're going to clear all of
49:05 - that up for you today uh and somebody
49:07 - says do I need to learn node and express
49:09 - before learning mongod DB uh yeah I
49:11 - would say it's a prerequisite you would
49:13 - need to know node but guys don't even
49:15 - worry about learning all those things
49:16 - separately just follow us along and you
49:18 - guys will will be able to uh be able to
49:20 - see that right uh we just got another we
49:23 - got a PHP donation he says hey guys we
49:26 - are watching from the
49:29 - Philipp hey we have some team members
49:31 - from the Philippines that's awesome dude
49:34 - yeah
49:35 - nice oh guys thank you so much for these
49:38 - donations let's go ahead and jump back
49:41 - on so let's go ahead let me move this
49:44 - out the way thank you so much Stephen K
49:46 - for that donation as well right so we
49:48 - have the video player so now we've got
49:49 - the the UI sort of looking pretty good
49:51 - right so the eyes looking pretty decent
49:53 - uh so we're going to go ahead and carry
49:55 - on so for the video itself what we're
49:58 - going to now do is we are going to go
50:00 - ahead and go over to let's go ahead and
50:03 - let's actually add over some of the
50:05 - components let's add a video Foo and
50:06 - let's add a video sidebar and then we'll
50:08 - enhance this afterwards with what we're
50:10 - doing actually no before we do that
50:12 - let's actually sort out this
50:13 - functionality CU right now if I click
50:15 - this it doesn't play right if if I click
50:18 - this it doesn't actually play anything
50:20 - so what we need to do now guys is to be
50:22 - able to make this video actually play
50:24 - when we click it we're going to use
50:26 - something called a reference right so a
50:28 - reference in JavaScript is essentially
50:30 - just think of it as like a pointer right
50:31 - it's just like literally imagine your
50:32 - finger is a pointer you just point
50:34 - towards that video video sort of element
50:37 - and then every time you click it you're
50:38 - saying all right the thing you're
50:39 - pointing at play it and then if you
50:41 - click it again the thing you're pointing
50:42 - out pause it that's that's the the
50:44 - easiest way to kind of think of what a
50:45 - reference is right so let's go ahead and
50:48 - actually Implement that and it should
50:49 - make a bit more sense so we're going to
50:51 - be using the use ref hook because this
50:53 - is a functional component so we're going
50:54 - to say const
50:57 - um video reference so con video ref
51:01 - equals use ref and initially it will
51:04 - start off with a no right value so you
51:06 - see it says us ref is not defined so
51:09 - let's go ahead and import that from
51:10 - react you can do it two ways you can
51:11 - either go to the end of us ref and click
51:14 - type in control space bar and it will
51:16 - actually come up and say Auto Import
51:18 - from react or you can type it in it's
51:19 - whatever is your preference click save
51:22 - and then you should be able to see
51:23 - everything loaded okay so that's all
51:25 - good and then what we can do is we need
51:26 - to attach this we need to point towards
51:29 - the video so in order to attach it to
51:31 - the video we say reference equals that
51:33 - video reference and that's it that's
51:35 - pretty much at this point this reference
51:37 - now is like it's like a giant finger
51:38 - which is just pointing towards that
51:40 - video right so now we have a way of
51:42 - targeting that video if we want to play
51:44 - it if we want to pause it whatever we
51:45 - want to do right um also I love I love
51:50 - the fact that in our comment section
51:51 - people are actually answering other
51:53 - people's questions like it's really nice
51:55 - to see that so somebody say you don't
51:56 - need to connect you just create an API
51:58 - on a backend server and then use the API
52:00 - in your front end hope this helps yeah
52:02 - so that's exactly what we're doing today
52:03 - we're going to be building an API on the
52:05 - back end so we're going to have like a
52:06 - little backend server running and then
52:07 - we're going to actually be communicating
52:08 - it from our front end so this is amazing
52:10 - guys to see that you guys are helping
52:12 - each other out uh really really love and
52:14 - appreciate that and guys David what can
52:17 - they do if they're enjoying the content
52:18 - so
52:19 - far uh they can just go ahead and
52:22 - destroy that like button like literally
52:25 - this is what the like button should see
52:26 - like boom exactly guys you just want to
52:29 - completely smash that thumbs up button
52:31 - and yeah that's all we want guys this
52:33 - will help the video get out to as many
52:35 - people as possible we are actually over
52:38 - nearly over 14,000 playbacks already
52:42 - which is just mindblowing like it's
52:44 - insane we're just about to hit 1500
52:46 - likes as well so really really amazing
52:48 - stuff guys let's carry on strong so now
52:51 - what we're going to do is when we click
52:53 - on that video we want to click trigger
52:55 - off a function right and that function
52:57 - is going to be like Play the video stop
52:58 - the video so what we're going to do is
53:00 - we're going to say onclick so on click
53:02 - and then we're going to have something
53:03 - like handle video press right so we're
53:05 - going to create a function called handle
53:07 - video press so let's go ahead and create
53:09 - that function we're going to say handle
53:10 - oops whoa handle video press
53:14 - oops and then that's going to take
53:17 - nothing as an argument uh so this is an
53:19 - arrow function in es6 that's how you
53:21 - write them and now guys we need to
53:23 - somehow say like if video is playing
53:27 - right so if the video is
53:29 - playing stop it I guess right um
53:33 - otherwise like like literally if the
53:35 - video is playing stop it
53:37 - otherwise if it's not playing yeah
53:41 - literally play it right and it seems
53:43 - silly right it seems like why would you
53:44 - need to write that out trust me guys
53:46 - when you're learning do that like it
53:48 - will save you time like do that and
53:50 - actually just write out because some
53:52 - people will kind of run away and think
53:53 - oh I'm too clever I don't need to
53:54 - comment things but like trust me it just
53:56 - makes it a lot easier guys like when you
53:58 - just do that right like um it does make
54:00 - it a lot easier so now the reason why
54:02 - this will make it easier is because now
54:03 - it will actually answer a question we
54:05 - need a piece of state or some kind of
54:08 - variable to keep track of if the video
54:09 - is playing right right now we don't have
54:12 - that we have no way of telling if the
54:14 - video is currently playing or not right
54:16 - so what we're going to do is we're going
54:17 - to introduce a piece of state and this
54:19 - one's going to be called const we're
54:21 - going to call it playing like is the
54:23 - video playing right and this is how you
54:25 - write a very inside of react so it's
54:27 - called H we use the use
54:29 - State hook and we're going to give it an
54:32 - initial value of FAL because the video
54:33 - won't be playing by
54:35 - default right now what we can do is we
54:38 - and you want to import that at the top
54:40 - now you what you want to do is uh so
54:43 - David Jonathan says are we ever going to
54:45 - try graph ql of course we are David of
54:48 - course we are we got we got react native
54:50 - coming up we will go ahead and do graph
54:52 - ql we'll try like some Apollo stuff even
54:55 - nextjs like if we get enough like hype
54:58 - on that we'll jump on that so yeah we'll
55:00 - be jumping on all of that and even
55:02 - typescript so I actually code in
55:03 - typescript quite a lot uh when I'm doing
55:05 - side projects so I happy to go through
55:07 - all of that yeah awesome um so now what
55:13 - we're going to do is we are going to say
55:15 - if playing so now we have something to
55:18 - check against if it's playing then what
55:20 - we do is we say video ref right which is
55:24 - the pointer that I spoke about earlier
55:26 - video and gats spe I will we can cover
55:28 - gatp as well so video ref dot current
55:31 - right so this means what is the current
55:32 - thing it's pointing at then we just say
55:35 - pause right so if it's playing then
55:38 - pause the video right else yeah oops God
55:41 - damn it else if it's not playing then
55:44 - what we're going to do is Target the
55:46 - video ref get the current thing that
55:48 - it's pointing at and play it right so
55:50 - that's pretty much what we said here in
55:52 - a nutshell so we have this but whenever
55:54 - we do that we have to update that little
55:56 - variable so that it's it keeps it keeps
55:58 - track of what's going on so if we pause
56:01 - the video we need to set playing to F
56:03 - right and if we play the video we need
56:05 - to set playing to true and that way that
56:08 - little variable that we're checking
56:09 - against knows if the video is playing or
56:12 - if we pause the video right so we're
56:15 - going to go ahead and save that um so
56:17 - James Gardner says do you guys look into
56:19 - microservices at all um very good
56:22 - question actually I we look at I try
56:26 - like to kind of focus on things like
56:28 - Firebase because it kind of like
56:29 - abstracts a lot of the complexities of
56:31 - like microservices out of the way but I
56:33 - think microservices are very important
56:35 - to know what they are and so I would
56:36 - recommend everyone researches what that
56:38 - is and also this is the good start to
56:41 - actually understanding those sort of
56:42 - principles because we are learning full
56:45 - stack development right now we're going
56:46 - to be doing a complete man stack build
56:48 - and how you choose to host these small
56:50 - Services which could be considered as
56:52 - small Services um will actually open up
56:56 - um
56:57 - the door to that that sort of domain
56:59 - so is heru is capable of handling
57:03 - microservices pretty well yeah as far as
57:06 - I know yeah exactly thov vinard says any
57:09 - update on the react course we have an
57:11 - amazing course guys called profit with
57:13 - JavaScript the link is in the
57:15 - description I coach on there every
57:16 - single Tuesday we have tons of good
57:19 - content in there including a bunch of
57:21 - react content and a few people even in
57:23 - today's session like David Jonathan are
57:24 - in those react coaching calls uh and
57:26 - David actually ran yesterday's one so
57:28 - amazing stuff and yeah and like guys
57:31 - like there is a lot of react content in
57:32 - there so so definitely yes we have it
57:35 - inside of the uh course at the moment
57:38 - okay so awesome stuff so now what we can
57:39 - do is we can actually go ahead and check
57:41 - if this works so let's go ahead and
57:42 - click
57:44 - refresh and if I click if I tap this now
57:46 - so I'm going to click hey and if I press
57:50 - it again look at that guys so it works
57:54 - so you can see I'm actually clicking it
57:56 - nice right and it does
57:59 - work awesome nice
58:03 - so that's a that's an awesome thing
58:05 - right now so do you make okay so nice
58:07 - now what we're going to do is that
58:09 - actually fixed the video playing
58:11 - functionality so a very simple level
58:12 - this app is pretty much working as we
58:14 - need it to at this point but we're going
58:16 - to go ahead and enhance the UI a little
58:17 - bit right we're going to go ahead and
58:19 - Implement these two components the video
58:21 - footer and the video sidebar right so
58:24 - let's go ahead and create both of those
58:25 - components so video foo.js and let's go
58:29 - ahead and do RFC boom we get that let's
58:32 - go ahead and do a class name so this is
58:35 - setup which we just should get very fast
58:37 - at doing and it makes our life a lot
58:38 - easier and we also need to go ahead and
58:40 - create the video photo. CSS file so
58:43 - video photo. CSS whoa we just got
58:46 - another donation thank you so much he
58:47 - goes my pathmaker S react God you missed
58:50 - one s dude damn it that's my fault for
58:53 - having too many s's in my name no
58:56 - appreciate that dude thank you so much
58:59 - uh D DM sing nice uh and we need to go
59:02 - ahead and create the corresponding video
59:05 - I just did it for you oh okay uh one sec
59:09 - video for CSS so David went ahead and
59:10 - created this one so let's go ahead and
59:13 - actually create a video sidebar as well
59:16 - so I'm going to create a video sidebar
59:18 - so video sidebar. JS and David you want
59:21 - to go ahead and create the CSS file
59:23 - while I set this up yep so
59:27 - nice so I'm going to create a class name
59:29 - and this one is going to be video
59:32 - sidebar like so and we're going to do
59:36 - import video
59:39 - sidebar. CSS nice awesome and David went
59:43 - ahead and created the video sidebar CSS
59:46 - file so that's why we don't have the
59:49 - issue popping up right so somebody said
59:52 - should Co PA programming yeah that's
59:54 - exctly this cool pairr we doing it with
59:56 - VSS code live share so really exciting
59:58 - stuff um somebody said should I also
60:01 - learn JavaScript dude if you're not
60:03 - learning JavaScript what are you doing
60:05 - make sure you go ahead and learn
60:06 - JavaScript there is so much money in
60:08 - this field right now I want to scream
60:10 - like if somebody says should I learn it
60:12 - like go ahead and learn it guys like the
60:15 - the the market is booming right now like
60:17 - and and especially with react that's the
60:19 - only thing you should be learning yeah
60:20 - like react like guys you can work from
60:22 - Bahamas Caribbean like anywhere you want
60:25 - in the world is if you know this skill
60:26 - like all you need is an internet con
60:28 - connection and I see so many people like
60:30 - oh do I need to know this like or like
60:32 - do I should I do this or I'm it's too
60:35 - difficult I'm too young I'm too old
60:38 - throw all the excuses Straight Out The
60:40 - Window Guys like you don't need to like
60:42 - over complicate this stuff if you are on
60:45 - the edge just start right just start
60:47 - just follow the live streams these are
60:49 - all free right now right and we so have
60:51 - a react challenge link is in the
60:53 - description if you haven't signed up yet
60:55 - and you're new watching right now please
60:57 - please please go ahead and sign up to
60:59 - that react challenge because it's
61:00 - completely free and it's going to give
61:02 - you guys so much value especially you
61:04 - guys who are new to programming so go
61:06 - ahead and sign up to that 6,000 worth uh
61:09 - $6,000 worth of prizes as well so really
61:12 - fun stuff there so now we've got the
61:13 - video sidebar open let's go ahead and
61:16 - actually work on these components David
61:18 - so let's firstly let's do the video foot
61:21 - yeah let's do the video fo video foot
61:25 - there there we go Auto
61:27 - Import nice and guys it's David's first
61:30 - video as well like we just hit 1.5k
61:33 - likes can we can we give David some love
61:35 - right now in the chat right now right
61:37 - guys cuz he is
61:39 - literally super super Brave to just jump
61:43 - onto these intense builds and like try
61:45 - and provide you guys as much value as
61:46 - you can like guys these are M Stack
61:48 - builds these are full builds right there
61:50 - a full full builds and like David has
61:52 - literally just jumped down and said like
61:53 - I'm ready for this like he said he just
61:55 - started coding um not long ago March
61:58 - March yeah yeah actually it was April
62:02 - exactly yeah yeah um for the challenge
62:05 - if you guys are on the fence the
62:07 - challenge is the best kickart like ever
62:09 - that you could think like I mean we
62:11 - there are these lives every single day
62:14 - it's cool and all but to actually get
62:17 - started you need a bigger project that
62:19 - looks awesome and that will just kick
62:22 - you kick you in the butt and you will
62:23 - just go ahead yeah it's exactly exactly
62:26 - guys like it will yeah it really will
62:29 - David you're getting so much love right
62:30 - now in the chat damn dude yeah that's
62:33 - insane thank you guys hey love that guys
62:36 - we love that positivity that is awesome
62:38 - guys let's go ahead and carry on so this
62:42 - so we got the video footer component so
62:44 - we're going to go ahead and jump into
62:45 - that and what we're going to do inside
62:47 - of here is we're going to have a few
62:49 - things in here so we are going to have a
62:52 - div which is going to in include all of
62:55 - the text so when I mean all of the text
62:57 - I'm just I'm talking about all of this
62:59 - stuff right here so all of this text
63:01 - right here in the bottom is going to be
63:03 - referred to as video foter text right so
63:06 - let's go ahead and do that now so here
63:09 - I'm going to say we're going to create a
63:10 - div and this one's going to be called
63:12 - video footer text like that and then in
63:16 - here we're going to have a H3 so the H3
63:18 - is going to have a channel name so here
63:20 - let's just do uh Instagram handle for
63:23 - now and it's it's going to have a P tag
63:25 - and this is going to be some kind of
63:27 - description right so it's going to have
63:29 - some kind of description somewhere uh
63:31 - and then we're also going to have the
63:33 - ticker so the ticker will Implement
63:35 - afterwards um so somebody's what about
63:38 - making Tinder Tinder is tomorrow dude so
63:41 - we have yeah we have Tinder coming
63:42 - tomorrow so you guys wa for treat there
63:44 - yes so today we're gonna be bu we
63:46 - building the Tik Tok tomorrow is going
63:47 - to be Tinder and on Friday we're going
63:50 - to be building what'sapp yeah God Friday
63:53 - is a big boy build guys like you're ex
63:56 - yeah that's going to be huge so massive
63:58 - massive things coming so for the video
64:00 - fo. CSS now what we're going to do is
64:02 - we're going to style this a bit so we
64:03 - can actually see some of that text and
64:05 - in order to do that what we're going to
64:07 - do is I'm going to add the following to
64:08 - the video footer going to say video
64:10 - footer position relative the color
64:12 - should be white bottom should be 150
64:15 - pixels uh away from it and right now
64:17 - obviously we can't see anything oh no
64:18 - there we can we can finally see it pop
64:20 - in so you can see it's relative uh it's
64:23 - got we've got a color white text the
64:25 - bottom is pushed up so if I went ahead
64:27 - and changed this to zero pixels you'll
64:29 - see that it actually kind of snaps way
64:30 - far down so we need to actually go ahead
64:32 - and give it a little bit less so you see
64:33 - like if I do 100 it comes up there so
64:35 - 150 up from the bottom left 40 pixels
64:38 - away from the left so that way that's
64:40 - why we've got this little Gap here and
64:42 - then we're also going to say display
64:43 - Flex because we're going to have some
64:45 - stuff inside of it for that text field I
64:47 - want it to grow as much as possible so
64:49 - I'm going to go ahead and add Flex one
64:51 - to that field and it will make sense as
64:53 - as to why we're going to do that in a
64:54 - sec but I'm going to go ahead and Target
64:57 - the P tag inside of the text field and
64:59 - say give it a padding bottom of uh of 20
65:03 - pixels so that way whenever we've got
65:05 - some stuff underneath it um we can
65:07 - actually sort of have a little bit of a
65:08 - gap underneath so it shouldn't be too
65:11 - bunched up we're then going to Target
65:12 - the H3 so you can see the H3 sits on top
65:16 - where it says SSS s and then we're going
65:18 - to go ahead and give that some padding
65:20 - bottom so it separates a little bit so
65:21 - now you see where it says this is some
65:23 - description we actually have a bit more
65:25 - space in away from that right so that
65:27 - makes it a little bit more readable now
65:30 - what we're going to do is let's go ahead
65:32 - and
65:33 - actually add a few things in so the
65:36 - first thing we need is some icons right
65:38 - so we need some icons uh so we're going
65:40 - to need this music icon so let me go
65:43 - ahead and get rid of that we're going to
65:44 - need this music icon right here this one
65:46 - is called the music note icon for
65:48 - material UI and I'm going to show you
65:49 - guys what material you in a second and
65:51 - we need this ticker this ticker is a
65:53 - third party Library sort of that we're
65:55 - going to import that somebody else has
65:57 - created and we're going to go ahead and
65:58 - create that and then we're also going to
66:00 - pull this icon so let's start with the
66:02 - icons right so the icons and also I just
66:05 - want to address this question so Ahmed
66:06 - Ali says sunny how much difference is
66:09 - there between react and react native put
66:11 - it this way Amed if you can code and
66:13 - react and a job says to you hey I need
66:15 - you to code and react native you can do
66:17 - that and I'm living proof because my
66:18 - first job I'd never coded in in react n
66:21 - before um but I got the job for the for
66:24 - the react position and then before you
66:26 - know it I was coding react native so
66:28 - extremely similar extremely close builds
66:30 - uh we have a lot of people who are
66:31 - reposting stories and all sorts of stuff
66:33 - like that where they're actually
66:35 - building some react native apps which is
66:36 - awesome because we haven't even taught
66:37 - react native yet so if you know react
66:39 - you can code in react native put it that
66:41 - way um the Heidi
66:46 - B yeah so someone from the pwj uh
66:49 - Community reached out to me that he got
66:51 - a client and he wants me to help with
66:54 - react native
66:56 - and I was like well I never CAU it in
66:58 - react native but let's go ahead and try
67:00 - it and within like 15 or 20 minutes I
67:02 - had react native up running yeah so it's
67:06 - super easy to start with it yeah and I
67:08 - think the updates lately have made it
67:10 - even better so it's really awesome Heidi
67:12 - I think she's from um she actually
67:14 - joined not too long ago inside a Prof
67:15 - JavaScript she said great job loving the
67:17 - build today sunny and David thank you so
67:19 - much appreciate that yo thank you oh
67:23 - nice check this one out okay so we we
67:25 - actually have a really lovely comment
67:27 - here by Redan uh it hasn't popped up but
67:30 - let me go ahead and see if I can grab it
67:32 - in the cuz this is actually something
67:34 - quite cool so Redan says let me go ahead
67:37 - and pop it in here guys and we'll carry
67:39 - on with the build so Redan said I got a
67:41 - front-end job with only JavaScript it
67:43 - pays so well if you want a good job
67:45 - follow these videos it's super good I
67:47 - wish I had this back in the day dude I
67:49 - wish I had this back in the day when I
67:50 - was learning too like if if somebody
67:52 - could actually give practical knowledge
67:54 - but ran is living proof guys and um
67:56 - that's another person we should add to
67:58 - the the guys our goal is yeah our goal
68:01 - is literally to get 5,000 developers um
68:06 - on uh
68:08 - in this year with a developer job right
68:13 - yeah exactly and then next year 10,000
68:15 - as far as I know EXA exactly that's it
68:18 - and we are going to hit that guys like
68:20 - so that is awesome uh another donation
68:23 - thank you so much he say can we make it
68:24 - load Rand vids every time when refreshed
68:27 - we will show you the full stack build
68:29 - first if we get time we can do that but
68:31 - um it's not a main priority for today I
68:33 - think the full stack element is more
68:35 - important for today um so let's carry on
68:38 - guys so to get those beautiful looking
68:40 - icons that you guys have at the bottom
68:42 - and those and those sort of things what
68:44 - we're going to do is we're going to go
68:45 - ahead and install something called
68:46 - material UI so it's a design Library by
68:48 - Google you want to go in and you want to
68:50 - do this line right here mpm install
68:52 - material UI core so we're going to go
68:54 - ahead I like like to just click on ADD
68:56 - so you don't actually close that
68:57 - previously running terminal so we're
69:00 - going to go ahead and do this so mpm
69:02 - install material UI core like so okay uh
69:06 - so we're going to do that and then what
69:08 - you want to do is you want to go on
69:12 - to so that will install and then that
69:14 - will give us all of the material UI
69:16 - components so they have a bunch of
69:17 - components like an avatar a few other
69:20 - things we might need um but you're
69:21 - actually going to need that in order to
69:23 - choose the icon so the next thing you
69:25 - want do is to the search by typing icons
69:27 - and then you want to do this mpm install
69:30 - material UI icons like so so you want to
69:32 - go ahead and drop that in like that and
69:35 - that will go ahead and pop in oh guys
69:37 - actually don't go ahead and do this make
69:39 - sure you're in the right directory so
69:41 - right now what I'm going to go ahead and
69:42 - do is I was in the wrong directory so
69:44 - I'm going to actually go ahead and
69:45 - delete that one so package lock delete
69:47 - make sure you don't do that mistake that
69:48 - will bite you back later on when it
69:50 - comes to deploying so make sure you're
69:52 - cded into the right
69:54 - directory uh and then let's do it so
69:56 - let's do that again so mpm install
69:58 - material UI
70:00 - core and then you want to do mpm install
70:02 - material UI
70:04 - icons um so somebody says bootstrap is
70:07 - not as good as material UI uh I I tend
70:10 - to I mean uh bootstrap is it's good for
70:13 - when you're learning it's good for like
70:14 - if you're doing a lot of freelance work
70:15 - material UI is just so clean it's
70:17 - honestly has such a clean looking fill
70:19 - to it it look it's very easy to
70:21 - implement and use it documentation is
70:23 - amazing and we use it in every re build
70:25 - and you guys can see the power of it
70:26 - because the apps look amazing right um
70:30 - and I end up fighting yeah I mean David
70:32 - I don't know about you but I find that I
70:34 - fight a lot with um with um material UI
70:39 - no sorry not Material I find I fight a
70:41 - lot with
70:42 - bootstrap with bootstrap I don't know um
70:45 - I I usually before these lives I was
70:48 - using always um bootstrap and I I I
70:52 - could get by pretty easily I mean uh for
70:56 - the for uh for beginners I would
70:58 - definitely recommend using bootstrap uh
71:00 - they actually give you like Snippets of
71:02 - code and you don't have to um import
71:05 - that much stuff and you don't have to
71:07 - like mpm install stuff you can just uh
71:09 - use the cian um but then when when you
71:13 - get Advanced I would definitely go with
71:15 - the material UI yeah exactly and I agree
71:18 - uh we have a good question which just
71:19 - relates to ahed says yo Papa react Sunny
71:21 - I'm feeling really bad about
71:22 - responsiveness and he basically says
71:24 - like after I do projects I suck at the
71:26 - responsive part of it my advice here is
71:29 - use something like material UI and read
71:31 - up on it and because it will help you
71:33 - get like the especially the grid
71:34 - functionality inside of it that will
71:36 - help a lot but I would say use something
71:38 - called storybook storybook will help you
71:40 - become a very good responsive uh coder
71:43 - so if you're interested go and learn
71:45 - story book I might drop a um a video on
71:48 - that actually I find I think it might
71:49 - help a lot of people Rin also said I
71:51 - joined pwp and the knowledge I gained
71:53 - massive knowledge within a short span of
71:55 - time plus views of my portfolio
71:56 - increased by
71:58 - 600% due to live projects by Sunny oh
72:01 - that's amazing dude wow that's amazing
72:04 - actually for responsiveness I have like
72:06 - a very beginner friendly and not too
72:09 - elegant way but it's a great way to
72:11 - start yeah so back in the day when I
72:14 - started coding I uh actually created
72:16 - three different CSS files and based on
72:19 - the width of the screen I imported uh
72:23 - the other one so I had one for uh optic
72:25 - for iPhones another one for iPads and
72:27 - another one for
72:30 - Macs you can go ahead it's not the most
72:33 - elegant but then you will have a a bit
72:37 - of understanding on what what's where
72:39 - right my my advice would be is because
72:41 - you want to stick to a convention that's
72:43 - recognized by as many people as possible
72:46 - so media queries would be my start if I
72:49 - if you're talking responsive design
72:50 - media qu will be a really good place to
72:52 - start and then flexbox guys learn Flex
72:55 - box and your responsive design will go
72:56 - through the roof and my best
72:58 - recommendation can be flexbox froggy so
73:00 - this website will change your life when
73:01 - it comes to responsive design so if
73:03 - you're interested in that go ahead and
73:05 - check that out but yeah honestly like
73:07 - it's it's all a case of just trying and
73:08 - playing around with it I think we should
73:09 - definitely jump back into the code so
73:11 - the next part guys is for the material
73:13 - icons you want to click on this link
73:15 - here so search the full list of these
73:17 - icons this is how we find the icons
73:20 - whenever we're coding so if I want to go
73:21 - ahead and type in something like dis or
73:24 - something you see like dis full pops up
73:25 - I think the one I was looking for is
73:26 - music note icon so music note icon so
73:30 - music note so this one is how you get
73:32 - like the music note icon and it'll give
73:33 - you the import code at the top and then
73:35 - you can just pull it into the app so if
73:36 - you see any import logic and things like
73:39 - that this is how we find the icon itself
73:41 - so let's go ahead and do this um
73:45 - somebody says which is best flexbox or
73:47 - css CSS is the language flexbox is part
73:50 - of CSS so just clear that up tool yeah y
73:54 - um um nice so you've also got CSS grid
73:57 - so Alex code says good day evening
73:59 - everyone that yeah that's nice thank you
74:01 - dude good day to you too yo how's it
74:04 - going
74:06 - nice uh awesome so let's go ahead and
74:09 - carry on guys so the music no icon we're
74:11 - going to import into our code so at the
74:13 - top boom we have it there save the file
74:16 - and then inside so underneath the the
74:19 - text over here we're going to create a
74:21 - div and this one's going to be called
74:22 - the video footer ticker because it's
74:24 - going to have the ticker inside of it as
74:27 - well as that music note icon so I'm
74:29 - going to go ahead and pop the icon in
74:30 - here and you can see that we're giving a
74:33 - class name or video footo icon so that
74:34 - way we can start it afterwards um so now
74:39 - what we're also going to do is so you
74:40 - see that ticker at the bottom guys so
74:41 - you see we've got the music note icon
74:43 - popped in but this beautiful ticker that
74:45 - kind of Scrolls across that right there
74:48 - is actually something which wasn't built
74:50 - by us it was built by somebody else so
74:52 - what we're going to be using is
74:53 - something called react ticker so we need
74:55 - to go ahead and import this so to do
74:57 - that we're going to say open this say
74:59 - mpm install react ticker and hit the ENT
75:03 - key and that will go ahead and install
75:05 - this package into our app and then what
75:08 - we need to do is import that into the
75:10 - project so let's go to the top go here
75:12 - and we're going to say import ticker
75:13 - from react ticker like so and then what
75:16 - we're going to do is to actually use the
75:18 - ticker I'm going to paste the snippet of
75:20 - code that we pretty much need to use and
75:23 - I'll explain what it does so we're going
75:24 - to put it inside of our container here
75:26 - so we're going to drop that down and
75:28 - this is the code right here so it takes
75:30 - a prop that they've actually implemented
75:32 - so this one right here and the mode is
75:35 - you see if I hover over it says smooth
75:36 - chain or a weight and smooth essentially
75:39 - means that like it will start showing
75:41 - the text again once it goes out of the
75:43 - screen right so that's what we're using
75:45 - smooth for and then what we're going to
75:47 - say is here the index we don't actually
75:50 - need this Index right here so this is
75:51 - called a higher order component so it's
75:53 - actually giving us a something called a
75:55 - render prop uh and then it's rendering
75:57 - out this jsx here but right now we don't
76:00 - have a song prop so instead I'm just
76:02 - going to say I am a song so I am a song
76:05 - like so save it and you can see look at
76:07 - that it says I am a song and it works
76:10 - right and if I get rid of the mode you
76:12 - can see you actually see like I am a
76:14 - song I am a song I am a song I am a song
76:16 - so like they built it in a way that if
76:18 - you say smooth it will only show once it
76:20 - goes past that point which is really
76:22 - nice yeah then what we're going to do is
76:25 - we're actually going to have an image
76:27 - tag underneath all of this so let's go
76:29 - ahead and drop this in over here so
76:31 - underneath everything outside those divs
76:33 - I'm going to add a video foter record
76:36 - and this huge record that spins so on
76:38 - the actual one you can see it spins and
76:40 - we're going to add that spinning
76:41 - animation but this is the actual record
76:44 - itself and and this is the URL for it
76:46 - it's just a PNG and the class name of
76:47 - video footer record
76:50 - okay um whoa dude I just saw ahed Ali
76:55 - say papa react by the way thanks to you
76:57 - I have sold the Amazon clone by eding
77:00 - eding it based on client needs fonts and
77:04 - logos $400 $400 oh my God that's insane
77:09 - guys that is insane like I love that and
77:12 - guys like you know a lot of people do
77:14 - say like like oh like the course is this
77:16 - much or this that like guys he just made
77:18 - it back from like literally one of the
77:20 - Clones which are completely free so like
77:22 - if you find that that's valuable then
77:25 - the course and things like that we take
77:26 - it a whole step further um so make sure
77:29 - if you're not already I'm going to
77:31 - repeat again be sure to join the 5day
77:36 - coding react challenge which goes live
77:38 - on Monday starting um and guys you're
77:41 - going to get huge value this is yeah you
77:44 - you will get that thing for free and you
77:46 - can sell it for
77:47 - $400 yeah exactly yeah so he got that he
77:51 - sold this he sold that app for $400 and
77:54 - this is actually the complete this is
77:57 - actually the like a more advanced
77:59 - version of the Amazon app with payment
78:01 - and things like that so we're going to
78:02 - be using stripe so it's insane oh I said
78:05 - you oops this is not you will be using
78:08 - stripe yeah stripe yeah using stripe let
78:12 - me move the uh we're actually blocking
78:15 - the uh footer somebody said so I'm going
78:17 - to make us a little bit smaller guys and
78:18 - pop us over to the side so that should
78:20 - be a bit easier uh and now if I go ahead
78:23 - and check there we go so now you guys
78:24 - should be able to see a little bit
78:26 - easier you can see that little spinning
78:27 - icon at the bottom there you go now whoa
78:31 - multilingual program has just said I
78:34 - just joined profit with JavaScript uh if
78:37 - that's Todd Brown then let me know in
78:40 - the comments below cuz that is amazing
78:42 - if you just joined thank you so much we
78:44 - actually get notified when people join
78:46 - so if you have joined I will definitely
78:48 - see it through my phone right now so let
78:50 - me know if that was you Todd Brown thank
78:53 - you that's awesome dude right so let's
78:56 - go ahead and check
78:58 - so now what we're going to do is we're
79:00 - going to save this and you see we've got
79:01 - all the list up it doesn't look like the
79:03 - final thing right
79:06 - um oh wow also Pap I have credit limits
79:09 - on card I won't use that $400 that's
79:12 - yours man we'll join pwj right right
79:14 - after limits lift up oh snap dude
79:17 - honestly like this is insane dude this
79:19 - is insane like dude like look you landed
79:22 - the client well done to you firstly like
79:24 - you you've crushed it and keep up that
79:26 - positivity that's the kind of stuff we
79:28 - want to see in this community that's
79:29 - insane we just hit4 in dollar and $40 in
79:32 - chat revenues thank you so much guys
79:34 - thank you right so now we have um where
79:38 - it says I am a song so now I'm basically
79:40 - going to go ahead and actually style
79:43 - this to make it look nicer because right
79:45 - now it doesn't look that good right so
79:47 - let's go to the video footer and what
79:49 - we're going to do is we are going to go
79:51 - ahead and firstly we're going to Target
79:54 - the ACT ual um video for a ticker right
79:57 - so let's go ahead and Target the ticker
79:59 - and basically they give you a so that
80:03 - that ticker itself actually has an
80:04 - internal class that they don't tell you
80:06 - about and it's called ticker so I
80:08 - inspected and I found out we're going to
80:09 - give it a height to fit the content
80:11 - margin left of 30 pixels and a width of
80:13 - 60 so if I save
80:15 - that it will change the look and feel of
80:17 - that a little bit um we're also going to
80:20 - go ahead and actually so you see right
80:23 - now it's actually flying
80:25 - not next to it right so it's kind of
80:27 - like underneath it we don't want that
80:29 - right so in order to fix that what we do
80:31 - is we say video foter icon which is what
80:34 - I gave the uh music note so that little
80:37 - floating music note I'm gave that and
80:38 - say position absolute save that and we
80:42 - should see now let's go ahead and we
80:45 - should see that it now Pops in next to
80:47 - it which is a lot cleaner right because
80:49 - it's absolutely positioned within its
80:51 - little container so that will make it a
80:53 - little bit cleaner then we're going to
80:55 - do is we're going to Target that H1
80:56 - we're going to give it a um padding top
80:59 - of seven pixels so that's going to be
81:01 - the little H1 that we have where it says
81:04 - I am a song uh and then basically I'm
81:07 - going to add an animation so this
81:08 - animation I got from actually create
81:10 - react app so it's I'm going to call it
81:12 - spin the record and what it's going to
81:13 - do is it's going to go from a rotation
81:16 - of 0° to a rotation of
81:19 - 360° right now how do we actually apply
81:22 - this animation like cuz it sounds kind
81:24 - of cool
81:25 - right but I don't know how we actually
81:26 - apply that so in order to apply that
81:28 - what we do is we target the record and
81:31 - the record is over here so we go ahead
81:32 - and Target the record to the class name
81:34 - here we grab it and we pretty much do
81:37 - the following so we say go ahead and use
81:39 - the animation spin the record so this
81:42 - one make it an infinite Loop and
81:45 - basically go from 0° to 360 in 5 seconds
81:49 - in a linear speed right then it's going
81:51 - to say height of 50 pixels this filter
81:54 - you see this is a black image right here
81:56 - right so this was actually a black image
81:57 - over here so I'm going to go ahead and
81:59 - move that this one is a black image over
82:00 - here I'm actually going to go ahead and
82:02 - invert the color so this one when I save
82:05 - will go white and then we're going to
82:06 - say position absolute bottom zero right
82:08 - 20 so it should stick to the bottom
82:10 - right over here here as soon as I hit
82:12 - save boom there we go beautiful and this
82:15 - is all in relation to the container
82:18 - itself so if I go ahead and scroll up
82:19 - you see it's actually part of just that
82:21 - video container so very very very nice
82:23 - design
82:25 - right so that's clean that's very very
82:27 - nice and now what we're going to do is
82:30 - we are actually with that said and done
82:32 - we have finished the uh video footer so
82:36 - that's super clean David and I think we
82:38 - actually went at a very good speed there
82:39 - so we've got the video for done yeah uh
82:42 - so we're almost done with the
82:47 - is so we done the uh I just done the
82:51 - little round of
82:52 - applause nice yeah so so we actually
82:55 - need to now do yeah so we are almost
82:57 - actually done with the Clone the the
82:59 - front end portion of the Clone yeah and
83:01 - then we're basically going to go ahead
83:02 - so I'm going to go ahead and finish off
83:04 - the video foot video sidebar with
83:06 - yourself and then let's actually move
83:08 - over to the back end right and we'll
83:10 - show everything in that sense silicon TV
83:13 - says is reactjs and Django a backend as
83:16 - backend good combination yeah I mean I
83:18 - see a lot of people do it uh we're going
83:20 - to be using reactjs and nodejs as the
83:22 - back end because that's even better in
83:24 - my opinion because it's both JavaScript
83:26 - so it's easier to maintain easier to
83:28 - sort of work on um but uh yeah there's
83:31 - nothing wrong with using Jango as a
83:33 - backend and if you're good at Django if
83:34 - you're good at if you have python
83:36 - experience go for it yeah then go for it
83:39 - yeah yeah and thank you by the way silic
83:40 - TV you just pushed us over $40 in chat
83:43 - donations so
83:44 - amazing now we're going to say video
83:47 - sidebar let's go ahead and create this
83:49 - right now so video sidebar uh and then
83:52 - it's going to complain cuz there is no
83:53 - video sidebar I'm going to do video
83:56 - sidebar. JS oops did I create that oops
84:00 - oh yeah we did create that yeah you
84:01 - created yeah yeah yeah I forgot we
84:03 - actually prepared so in order to import
84:04 - it little trick control space bar Auto
84:07 - Import and it will pull in this right
84:09 - here hit save and there we go we have
84:12 - the sidebar so right now obviously the
84:14 - sidebar doesn't have anything so let's
84:16 - go ahead and add what we need inside the
84:17 - sidebar so over here now what we're
84:20 - going to do is we have we have a few
84:24 - different buttons right so over here we
84:27 - have like a like button you see it even
84:28 - has clickable functionality um and and
84:31 - let's go to this one cuz you can see it
84:32 - a bit clearer but you see we have like a
84:34 - a container here we have a container
84:37 - here and we have a container here right
84:40 - each one we're going to be we're going
84:41 - to call it so we're going to say Dev
84:43 - video sidebar uncore button so it's
84:46 - going to be like a button container and
84:48 - it's going to be repeated three times
84:51 - right so three times each one is going
84:53 - to have an IC icon and a number icon a
84:55 - number icon a number the first one the
84:59 - second uh no so the first one is
85:01 - actually going to have a favorite icon
85:03 - so we're going to go ahead and do this
85:05 - import the favorite icon and then what
85:08 - we're going to do is we're going to go
85:11 - ahead and add the following so we're
85:12 - going to say favorite icon and they
85:15 - actually take a prop called font size
85:17 - which will actually make it a little bit
85:18 - bigger so if I go ahead and add that in
85:20 - now and save the app and go back here we
85:23 - can't see anything but it is there right
85:26 - uh and I'll show you we'll style it so
85:28 - you guys will see it in just a second so
85:30 - we're going to add in this one we're
85:31 - going to add something called a message
85:32 - icon and in the last one we're going to
85:34 - add something called a share icon right
85:37 - so in this one we're going to add
85:38 - something called a share icon then we're
85:40 - going to go ahead and import these at
85:41 - the top of the page so let's go ahead
85:42 - and do
85:44 - this and then we have all of those
85:46 - inside now obviously it's not pulling
85:48 - the correct uh things right now so I'm
85:50 - going to go ahead open up the sidebar
85:52 - CSS and let go ahead and make this
85:54 - visible so for the parent container
85:56 - we're going to say video sidebar like so
85:59 - we're going to say position
86:01 - absolute right so position is absolute
86:03 - we're going to say the top you should be
86:05 - 50% from the top and we're going to say
86:07 - you should stick away from the right
86:09 - side of the screen by 10 pixels go ahead
86:11 - and save that and you can see now we
86:13 - actually have those beautiful little
86:15 - icons pop up oh nice so they pop up and
86:19 - because uh the parent is relative it's
86:21 - going to stick to you see it sticks to
86:23 - that video yeah yeah and then we say the
86:26 - color should be white so let's go ahead
86:28 - and do that and it actually turns to
86:30 - White and then for the the button itself
86:32 - what we're going to say is that
86:33 - container itself so that video sideb
86:36 - button container give it a padding of 20
86:38 - and align the text centrally so when we
86:40 - have some text there it will send to
86:42 - that text so let's hop over back here
86:45 - and each one of these now will just
86:47 - simply have a number underneath it right
86:50 - so they're just going to be pretty much
86:52 - P tags underneath so this one would be
86:54 - something like P and it would say
86:56 - something like 100 this one would be
86:58 - something like this and it would say
86:59 - something like uh let's just say it was
87:02 - like 250 messages on it and this one
87:05 - would be the number of shares so let's
87:06 - just say 12 people shared it if we hit
87:09 - save you can see the numbers pop up
87:11 - nicely yeah now nice so very very clean
87:16 - right very very clean very very um slick
87:19 - implementation there so now what we're
87:21 - going to do is we have
87:24 - we want to pass this information in as a
87:26 - prop but I want this to be clickable as
87:27 - well so to make this clickable what
87:29 - we're going to do is we're going to
87:30 - introduce a piece of state and it's
87:31 - going to keep track of if you click like
87:33 - or not like so if you click like so
87:35 - we're actually going to get a variable
87:36 - called liked and it's going to initially
87:38 - start with a value of false now what
87:41 - we're going to say is if so this is jsx
87:44 - right here we're going to say if it's
87:45 - liked so if you have already liked it
87:48 - then you should render out the favorite
87:50 - icon because this one is actually the
87:52 - one that's populated um and it's sort of
87:55 - colored in right and then there's also
87:57 - an icon which is a heart but it's not
87:59 - colored in right so the one that we're
88:01 - going to use here is something called
88:03 - favorite border icon so if I go ahead
88:05 - and click
88:06 - save uh and I import this from Material
88:10 - UI so let's go ahead and import at the
88:12 - top now what you'll see is use State
88:14 - also needs to be imported so let's go
88:16 - ahead and click Auto Import do it and we
88:19 - just got another donation thank you so
88:20 - much he says no JS is worth to learn
88:23 - because of the Firebase so honestly guys
88:26 - node.js is whoa I got my friend in the
88:29 - chat as well this is dope so chery
88:31 - firstly um nodejs is worth to learn
88:34 - because of the fireus yes so today we're
88:36 - going to be showing you how to use
88:37 - nodejs in a M Stack build so it's going
88:39 - to pretty much be front end and back end
88:41 - front end is in react JavaScript and the
88:44 - back end is in nodejs which is server
88:46 - side JavaScript so essentially the same
88:47 - thing various minor differences but if
88:50 - you can C in JavaScript you can use them
88:51 - across now I just want to highlight this
88:53 - one this is one of my best friends um
88:55 - and I actually caught up with him today
88:57 - he goes I used to study with sunny and
88:59 - my God this guy is such a beast of cing
89:01 - oh that's that's awesome to see my
89:02 - friends watching this massively
89:04 - appreciate that Jay and yeah and he
89:07 - actually contacted me today about a
89:09 - coding interview was a python one and he
89:12 - Sunny my man such a you smash that like
89:14 - button you heard him guys we are just
89:16 - under David we're just under 20,000
89:20 - playbacks already oh my God 20,000 yeah
89:24 - just under just under 1,700 likes guys
89:27 - if you're enjoying the content please
89:29 - just smash that Thumbs Up Button
89:30 - massively appreciate it'll send this
89:32 - video out to as many people as you
89:33 - possibly can uh I appreciate that bro uh
89:36 - nice that is awesome and also yeah to
89:39 - answer the other question uh if you do
89:41 - learn node.js on um on Firebase if you
89:45 - ever need to write a cloud function
89:49 - which is essentially something which
89:50 - lives in the in in the cloud and it can
89:52 - scale up scale down but it's it's pretty
89:54 - much just a piece of JavaScript code
89:55 - that you can call on when needed um you
89:58 - can write that in nodejs so that will
89:59 - help you out a lot um Ahmed Ali just
90:02 - said I earned my first $400 from you
90:05 - having a goal of earning my first 1K
90:07 - with react wish me I working hard day
90:10 - and night David what have you got to say
90:11 - to
90:12 - that who good luck dude and and let's go
90:15 - and keep crushing that's all I can say I
90:18 - mean yeah those 400 there we go more to
90:21 - come yeah exactly as a few people are
90:24 - excited for you David they said I'm
90:25 - waiting for David's part that must be
90:27 - fire too hell yeah dude that's exciting
90:30 - oh actually I know that guy he's one of
90:33 - my friends hey're going to college yeah
90:36 - yo Dani what's good that's awesome dude
90:39 - nice we got friends on this chat as well
90:42 - that is nice all right of
90:45 - course so oh I love this sunny you're so
90:49 - cool you're you're proof that you can be
90:51 - cool and a programmer I appreciate that
90:53 - dude David's cool too you know like
90:54 - there was a sick
90:58 - guy
91:00 - was I mean if if his backend works like
91:03 - as if if his nodejs stuff works then
91:06 - he's cool right so no no pressure David
91:10 - no pressure oh man so we're going to
91:14 - make it so that when we click on the
91:16 - notice how when we click on the uh so
91:19 - when it's like this if I added this on
91:20 - click here which say set like to true so
91:24 - if I click that you see it actually
91:25 - changed right if I do the same thing for
91:28 - when it's populated and we say onclick
91:31 - set like to false then what we have now
91:34 - is actually a really nice implementation
91:35 - where it will flick the liked variable
91:38 - between true and false based on which
91:40 - one is rendering and you can see now
91:42 - look at that we get this nice little
91:44 - thing right here right now that works
91:47 - really nicely but we also want that
91:49 - number to update so here what we could
91:50 - say is if liked then it's going to to be
91:54 - 100 else it'll be 101 right this is
91:58 - temporarily for now and obviously we
92:00 - will make this a bit oh sorry if it's
92:01 - like it should be 101 otherwise it
92:03 - should be 100 just for now we are going
92:05 - to make this properly implemented but
92:06 - you can see now it says 101 100 right so
92:09 - a very dummy level that works really
92:11 - nice
92:13 - um
92:15 - uh oh nice this guy arm dude you're
92:17 - crushing man he says by the way I'm
92:19 - turning 18 this year so same age as
92:21 - amanath one of our key students who I
92:23 - work with daily um and he's crushing it
92:25 - as well same age as you he says just
92:27 - hate universities if somebody would ask
92:29 - me who is my best teacher we point them
92:30 - to you lots of love appreciate that dude
92:32 - and just wanted to say this is living
92:34 - proof guys it doesn't matter what age
92:35 - you are just start right it doesn't
92:38 - matter I have one of my youngest
92:39 - students is 12 years old and he landed
92:41 - his own school yeah my youngest student
92:43 - did you just say 12 like one and two
92:46 - he's 12 years old and he and and he
92:49 - landed his school as his um as his uh is
92:53 - it his first client so they asked for a
92:55 - website and he was like oh I can code
92:57 - and they were like really and then like
92:58 - he was like yeah sure I I'll build this
93:00 - thing for you and then he literally
93:01 - built it within two days boom came back
93:03 - they actually paid him for it so 12
93:05 - years old oh my goodness insane yeah
93:08 - really really insane really really
93:10 - lovely to see as well yeah nice so um
93:15 - let's go ahead and check it out so
93:16 - somebody says why don't they have a
93:18 - startup dude I have had a startup
93:20 - company before uh so it's a lot of work
93:24 - um yeah but yeah once you once you can
93:26 - code you can do whatever you want to do
93:28 - so really really nice all right so let's
93:30 - carry on guys so there we go it works
93:33 - really beautifully now what we want to
93:35 - do is somebody said you can use a hook
93:37 - and put the camera right there you can
93:38 - use a hook but we're going to pass in
93:40 - those things as a prop right so now what
93:44 - we want to do is for the video sidebar
93:46 - I'm going to show you guys props so
93:47 - obviously I don't want it to be 100 I
93:49 - don't want these to be set numbers I
93:50 - want to pass in a value and then render
93:52 - it based on the the value gets passed in
93:54 - so in this case this is where the props
93:56 - come in so Props are
93:58 - basically uh like properties for a
94:00 - component so in this case what we can do
94:02 - is we can actually go ahead and
94:03 - destructure this is es6 syntax and we
94:06 - can pass in something like likes shares
94:08 - and messages right and then here what I
94:11 - can say is the likes should be if it was
94:14 - 101 we could say this should be likes
94:17 - oops this is already in jsx we say likes
94:20 - plus one and here should just be the
94:22 - likes and we're going to replace
94:23 - everything so here the messages should
94:25 - be messages whatever prop we passed in
94:28 - and here
94:29 - the shares should interrupt you bro but
94:33 - we got Abdul who earned
94:36 - $800 uh in one month yes damn bro let's
94:41 - have a look so he says because of you
94:43 - guys I earned $800 in one month love you
94:46 - dude that's insane oh my God I love like
94:50 - that just like oh that makes you so
94:53 - happy dude
94:54 - damn and like guys if like Abdul for
94:57 - example like you landed a client who
94:59 - paid 800 in one month do you mind just
95:02 - dropping it in the comment section like
95:03 - where was your client from how did you
95:06 - find them cuz I see a few other people
95:07 - asking I think that would be really
95:09 - helpful to actually tell other people we
95:11 - have loads of videos where we actually
95:13 - share this out um and we actually sort
95:15 - of talk about this Rachel did an amazing
95:18 - one on freelancing with kazy which you
95:20 - guys should definitely check out that is
95:21 - a free video on the channel um make sure
95:24 - you go and check that out because that
95:25 - is that was awesome and actually helped
95:26 - a lot of people land clients so that's
95:29 - really good and it showed you how to
95:30 - sign up to upwork and the sort of a
95:31 - template you can use to get started with
95:33 - that that is really really
95:36 - goodly um so okay let's jump back just
95:39 - do it that's awesome dude no thank you
95:41 - for pointing that out that's really
95:42 - really that's good stuff like nice so
95:44 - you can see now the numbers have
95:46 - disappeared right so if we go inside of
95:48 - the video footer if we go down to our
95:51 - video components let's go down to video
95:53 - so now we actually need to pass it
95:55 - through so here if I said the likes were
95:57 - for example 111 the shares were for
96:01 - example 222 just to exaggerate this and
96:03 - the messages were for example
96:06 - 333 now if we save it that gets passed
96:10 - through as a prop and you can see now it
96:12 - comes through so obviously I passed it
96:14 - in in a weird way that's why it doesn't
96:16 - seem right but it is right so likes 111
96:18 - messages 333 and the shares is 222 so
96:21 - you see it actually does pass through as
96:22 - a prop right which is awesome we want to
96:24 - do the same thing with the video footer
96:27 - U so let's go over to our video footer
96:29 - and we can see here we actually need to
96:31 - go ahead and pass in a few things so for
96:33 - the video photo this is where the props
96:35 - comes in so we're going to destructure
96:37 - it and we're going to say pass in a
96:39 - channel a
96:41 - description a description and a song
96:45 - like so right and instead of doing this
96:48 - we're going to say this one should be at
96:50 - the channel name so like so this one
96:52 - should be a description deson so like a
96:55 - description like this and the final one
96:58 - should be a song right like so so it
97:00 - should be song right and now you can see
97:03 - obviously it's not going to render
97:04 - anything because we have actually passed
97:05 - it something so we need to go back to
97:07 - video and we need to pass in the F so
97:09 - let's just say for example the channel
97:11 - is um let's go ahead and say ssss s and
97:16 - then the
97:17 - description
97:20 - is wow epic M Stack clone
97:24 - TI to Tik Tok alone yeah Tik Tok let's
97:28 - scream at this
97:30 - thing yeah yeah and then and then we'll
97:33 - say song is
97:35 - song is I don't know 99 problems but
97:39 - react a
97:40 - one there we go
97:43 - hey I I mean guys I think that was
97:47 - smooth yeah I I don't think that is the
97:49 - original title yeah I mean like I think
97:52 - that does have like if you found that
97:53 - good I think you smash that thumbs up
97:58 - button oh man
98:02 - oh it's Jay-Z
98:05 - right yeah that's Jay-Z oh I love this
98:08 - one by ler out such a class thank you so
98:10 - much for the kind words lay through off
98:13 - uh we will keep on bringing the content
98:15 - that is awesome thank you dude right
98:19 - yeah that's Jay-Z nice so Jay-Z feed
98:22 - sunny exactly
98:24 - yeah and so now what we're going to do
98:27 - is we've got everything sort of like
98:29 - passing through as a prop right now the
98:32 - video itself what we want to do is we
98:34 - kind of want to drill down and pass that
98:36 - as a prop so we actually want everything
98:38 - to come through as props here and then
98:40 - we kind of pass it through the video so
98:43 - so to to make sense of this what I'm
98:45 - going to say is essentially the the URL
98:49 - of the video should be a prop so this
98:51 - one here should actually be a prop so
98:53 - I'm going to go ahead and cut this and
98:54 - say that this should just be something
98:55 - like
98:57 - URL right because we want to make the
98:59 - video customizable so here I can just
99:00 - pass in url and then save it and then
99:03 - what we can do is we can go back to
99:04 - app.js and then here I could just say
99:06 - the URL should be for example that that
99:10 - that um URL here and then if we refresh
99:13 - it you see it
99:15 - works yeah but we also want to pass in
99:17 - all the properties at this point as well
99:20 - so uh we want to pass in like all of the
99:22 - other things like and then that way it's
99:24 - just essentially we're just rendering
99:25 - out the video with a bunch of props and
99:27 - then it kind of gets passed down right
99:30 - um this is a lovely comment as well from
99:32 - deanii AG while Sunny because of you I
99:35 - could complete a whole clone project
99:37 - which I couldn't when I was following
99:38 - regular videos you and your team is
99:39 - super fun and awesome we love that thank
99:41 - you so much and thank you for just
99:43 - watching these videos cuz honestly like
99:45 - the fact you guys watch this stuff and
99:46 - find it useful it changes everything and
99:49 - it makes this whole thing worth it so
99:51 - really appreciate that nice um so here
99:55 - we're going to pass in a few things so
99:57 - all of the props that we pretty much saw
99:59 - before whoa dude we just got a huge
100:03 - donation D wow Diego Serano just says
100:08 - working in a side project that's worth a
100:11 - few thousand us I'm applying all your
100:15 - tricks for react plain JavaScript CSS
100:17 - and material UI just sharing this
100:19 - minimum amount but worth too much to me
100:22 - all love for the knowledge you share
100:24 - that's insane dude that's amazing and
100:27 - that's another example yeah that's
100:30 - another example of someone else who has
100:31 - got a job or a client or a job like a
100:34 - gig from these videos guys so like oh
100:37 - that's that's just I love to see that
100:39 - and and thank you so much Diego like $20
100:41 - is insane like thank you so much for
100:43 - that we really really do appreciate that
100:45 - and that actually brought the chat
100:46 - Revenue up to $63 guys so thank you so
100:49 - much whoa that is awesome nice yeah
100:53 - really really awesome now um let's go
100:57 - ahead and actually add the rest of the
100:58 - props in so we're going to add in all of
101:00 - those props that we pretty much passed
101:01 - before we're going to pass at this level
101:03 - and then we're going to basically filter
101:05 - them through so you see it says Channel
101:06 - description song Etc so here what we
101:09 - would say is the channel would be um the
101:12 - channel here the description would be
101:15 - the description because it's coming from
101:17 - the props now here the song would be the
101:20 - song like that and then for the video
101:23 - sidebar here it would be the likes so
101:26 - you see the likes the messages and the
101:28 - shares so we're basically passing it
101:29 - through now and even here we're passing
101:32 - it through and with that said now it
101:35 - shouldn't actually be uh okay so we're
101:38 - still passing but you see all of the
101:39 - details have gone right so all those
101:41 - details have actually gone so now we
101:43 - need to go to app.js and we need to go
101:46 - down here and we basically need to just
101:48 - pass in those props so you can see what
101:49 - we done here guys we actually done
101:50 - something called it's a like it's like a
101:52 - two level prop drilling situation so
101:54 - it's very light it's not very bad in
101:56 - doing it like that um but when you start
101:58 - going to levels where you're drilling
102:00 - down three four levels deep that's when
102:03 - you need to bring in something like
102:04 - Redux or the react context API but in
102:06 - this case it's perfectly fine to do that
102:08 - so let's go ahead and add in some of the
102:09 - props you can see the channel Pops in
102:11 - the description is going to be yo this
102:16 - works uh the what other ones was it the
102:19 - song is going to be song was 99 problem
102:23 - about react name
102:25 - one react one nice by JayZ
102:32 - featuring nice the likes are going to be
102:36 - 123 the messages not a prop yeah that's
102:40 - not not a state oh yeah no that works
102:43 - yeah that work messages are going to be
102:46 - 456 and the shares are going to be 789
102:51 - so let's just go ahead with some generic
102:53 - numbers like that boom and you can see
102:55 - everything got passed down so that's
102:57 - awesome like everything gets passed down
102:59 - that looks really really clean and you
103:01 - can see how little add-on works really
103:03 - nice and everything's spinning so this
103:04 - at this point we've got the build
103:05 - working so you see now the second one
103:07 - rendering is is blank because we don't
103:09 - actually have anything here so what I'm
103:11 - going to go ahead and do is paste that
103:14 - and you can see now that that comes in
103:16 - like so um and basically just to prove
103:19 - to you guys that this is two different
103:20 - components what I'm going to do is I'm
103:21 - going to get the video of me and my
103:22 - girlfriend here copy the video address
103:24 - change it here to this one and you
103:28 - should be able to see in our W now that
103:30 - if we go back here you see it renders
103:31 - that
103:33 - one right and you can change those props
103:36 - so this could be like just an example
103:38 - 999 likes in the second video so you see
103:40 - kazi's one has 1 two three and this one
103:42 - has 999 so everything works of course
103:45 - yeah oh yeah I I
103:48 - didn't no no furing shade
103:53 - you
103:54 - know um yeah so this is awesome guys and
103:58 - with this said right so previously with
104:00 - the last build what we did is at this
104:03 - point we pretty much migrated things
104:05 - over to Firebase and then we deployed
104:07 - right so we actually all of this data we
104:09 - kind of pulled it from Firebase right
104:11 - but today we're doing something
104:14 - different we're doing a full stack M
104:16 - build so if you haven't already smashed
104:18 - the like button smash that like button
104:20 - because we're going to try and drive
104:21 - that number up to 2,000 likes because
104:23 - this video is about to get really really
104:25 - interesting because David is about to
104:27 - drop some fire for you guys on how we
104:30 - can go ahead and pretty much build a
104:32 - back end which we haven't properly done
104:34 - on this channel yet so David without
104:36 - further Ado let's go ahead and shock
104:38 - these guys and let's go ahead do some go
104:41 - okay first let's go and stretch
104:43 - everybody because yeah yeah is nice just
104:47 - have a have a stand up have some water
104:49 - if you need to you know get get pumped
104:52 - up again cuz this is is where things
104:53 - pick up again and this is something
104:55 - which you guys haven't seen before so
104:56 - it's going to be really really awesome
104:58 - as Jay said smash that like button
105:00 - that's it guys goly yeah let's go so um
105:05 - Sonny do you mind creating another uh
105:08 - folder for the backand yes so is it
105:11 - actually a separate app so how how do we
105:13 - explain
105:15 - this so we could go with this project uh
105:19 - and we can um implement it inside in
105:22 - here or we can actually create a
105:24 - complete different workspace within we
105:27 - code yep and and go with that one let me
105:30 - go ahead and delete this node modules
105:31 - but that's the wrong node modules it
105:33 - should be this one yeah so guys at the
105:35 - top level we have Tik Tok which is our
105:37 - this is actually our react build right
105:40 - this is the react one with the source
105:41 - code inside of it and then what we're
105:43 - going to do is like David said we're
105:45 - going to actually create a folder and
105:47 - what should we call should we call this
105:48 - one Tik Tok back end or something yeah
105:50 - let's go with that yeah so Tik Tok back
105:54 - there we go so this is the front end Tik
105:56 - Tok this is the back end right so this
105:58 - is going to be where all the data comes
106:00 - from so uh yep done that I I think I I I
106:04 - think I need to refresh because I I
106:06 - don't need I don't see that folder yeah
106:10 - you're going to have to refresh that
106:12 - okay yeah it's right there okay nice um
106:16 - I'm going to take over a
106:17 - terminal and can you can you see it into
106:20 - that Tik Tok backend folder for me yep
106:22 - so let's go back back level so we're
106:24 - back at this level if I do LS you can
106:25 - see the two folders so I'm going to do
106:27 - CD Tik Tock backend so I'm going to go
106:30 - into the back end and then now we're
106:32 - inside the back end so it's empty so I'm
106:33 - going to clear the terminal and what we
106:35 - going to do now David so now we are
106:38 - going to uh Define uh all the uh details
106:42 - of our uh nodejs app and we can do that
106:45 - by simply uh typing in mpm in it
106:49 - uh uh it's only it's read only terminal
106:53 - uh you just need to click on the request
106:55 - and it should be able to to you be go so
106:59 - make the terminal read and write for
107:00 - everyone there we go so you need to type
107:02 - in mpm in it mpm in it uh that's going
107:05 - to start setting up our uh no JS
107:09 - package.json file and let a couple of
107:13 - questions yeah yeah so it's going to
107:17 - throw a couple of questions at us um
107:19 - first up we have to name uh our package
107:22 - it's by Def fold it's going to be the
107:24 - name of the F the containing folder I
107:26 - think Tik Tok backend is pretty
107:27 - descriptive so we can go with that um we
107:31 - will uh have the version and just to
107:33 - just to show them David you're just
107:35 - hitting enter right now right yeah
107:37 - exactly I'm just hitting return and
107:39 - doing nothing else okay um I'm going to
107:41 - give a quick description I think EP epic
107:46 - uh Tik Tock back end is is pretty good
107:49 - okay uh entry point uh we us usually use
107:54 - server.js so it's um because it's the
107:57 - server file dop yeah um test command I'm
108:01 - just going to ignore and hit return once
108:04 - again get repository no uh don't worry
108:07 - about that uh keywords again author I
108:11 - think um I will go with my name okay and
108:15 - yours hey love that JavaScript right
108:18 - there nice
108:20 - yeah yeah and we don't have to worry
108:23 - about license for now and it's going to
108:26 - prompt if we are satisfied with it but
108:29 - yes so I'm just going to hit return once
108:31 - again and that is pretty much uh it for
108:34 - sending up our uh package.json file
108:38 - nice yes so so that's actually going
108:42 - ahead and guys just to show you guys
108:43 - that's actually inside the backend photo
108:46 - right so David just went ahead and used
108:48 - mpm and nit to set up package Json and
108:51 - package Json has this basically this
108:54 - config inside of it right which which
108:56 - means and this this kind of allows us to
108:58 - then do things like mpm install to
109:00 - basically go ahead and use like modules
109:02 - inside of this foldo okay now we need to
109:06 - add actually a script like a trigger
109:10 - that we will be using when we are
109:12 - deploying our application to Heroku but
109:15 - this is the good time to actually add it
109:17 - because you will forget it it's just the
109:19 - best practice that I uh I learned over
109:22 - time yeah I can y oh I'm inan terminal
109:26 - yeah uh so yeah um let's go ahead and
109:28 - just type in start okay and H and
109:32 - actually add whoops I added too much
109:35 - spaces and actually type in node app.js
109:38 - and that will pretty much help Heroku
109:41 - start this uh server this this should be
109:43 - server.js right because we main is
109:45 - server oh yeah yeah yeah right so
109:48 - whatever you whatever you give the main
109:50 - over here guys make sure it's that one
109:51 - right so that exactly exactly exactly
109:55 - and now um can you open up a terminal
109:58 - for me
109:59 - uh acally closed that one so you might
110:02 - have to go ahead yeah so let's go ahead
110:04 - and do LS and you need to CD back into
110:07 - Tik Tok and let me make this read and
110:09 - right for you guys so this is going to
110:11 - be share
110:14 - terminal boom there we go oh okay I mean
110:18 - we're inside of this one again so uh let
110:21 - me go back and get rid of this one there
110:23 - we go boom you should have access okay
110:26 - yeah yeah yeah perfect so now I'm just
110:29 - going to install a couple of De
110:30 - dependencies it's going to be the exact
110:33 - same method that you guys did with
110:36 - material Ur for UI for example yeah uh
110:39 - so let's just go ahead and type in mpm
110:41 - install um and we are going to be using
110:45 - Express y yeah Express and mongus so
110:49 - Express is going to be our server uh
110:52 - framework and is a tool that we
110:55 - will be using to connect to our database
110:57 - right right so just to pause there one
110:59 - sec David so we've got two things that
111:01 - you guys are going to need to install
111:03 - one is Express and I saw somebody said
111:05 - the breathing was quite heavy so sorry
111:07 - about that I moved away from the mic I
111:09 - get carried in I forget about that so
111:11 - I'm going to go ahead and do so Express
111:12 - and mongus yeah so you want to go ahead
111:15 - and install these two things uh right
111:17 - here and the the way you do that is
111:19 - essentially what David's writing in here
111:22 - right here so perfect nice one David
111:24 - yeah so now with that done uh let's
111:27 - actually go ahead and set up our uh
111:29 - database okay so actually if you could
111:32 - uh share your screen and go to mongod
111:35 - db.com that would be very helpful okay
111:37 - so mongod db.com
111:39 - yes yeah and guys if you don't have a
111:43 - mongodb account uh now is a great time
111:46 - to pause this video go there register
111:48 - it's completely free you don't even need
111:50 - to provide your credit card like it's
111:53 - 100% free and yeah and and just uh
111:57 - resume the video once you're done
111:59 - awesome yeah so sign so let's go ahead
112:01 - and click sign in at the top and I think
112:03 - we can use our Google account yep we can
112:05 - use Google here I'm going to use my
112:07 - personal cuz we haven't actually set up
112:08 - on my I think we use the cover program
112:10 - so let's go ahead and do this
112:12 - one and can you share your screen by the
112:14 - way oh it says server oh uh I am sharing
112:18 - on the oh do you mean on Skype do you
112:20 - mean yeah yeah yeah yeah yeah okay do
112:22 - let me go ahead I should have done that
112:24 - actually in the beginning sorry David um
112:26 - good let me go ahead and share my I'll
112:29 - share my I'll share eam because then you
112:31 - can see everything that I'm sharing okay
112:33 - there we go nice oh awesome yeah yeah so
112:37 - now let's go ahead and do um I mean
112:40 - should I
112:41 - use let me go ahead and try something
112:43 - which you want to use let me do Sunny uh
112:47 - test oh okay it doesn't work okay so let
112:50 - me try and use this one again so let's
112:52 - go ahead you sang gmail.com doesn't work
112:55 - okay let me just go ahead and do this
112:58 - then and um let close this L into your
113:03 - let's click sign up oh man going do this
113:05 - I tell you what guys let's go ahead and
113:07 - log in with Google and let's go ahead
113:08 - and do I'm going to log into my one and
113:10 - what happens David when you log in
113:12 - initially it will just ask you a few
113:15 - question you will just see yeah yeah
113:17 - it's it's going to ask you a few
113:18 - questions uh and it's going to prompt
113:20 - you to create your first very first CL
113:23 - yeah let me let me get rid of this one
113:25 - so they can see this one yeah so
113:27 - actually you can oh yeah okay right so
113:30 - you guys will actually get to a point
113:31 - where this will be empty or it will ask
113:33 - you like what do you want to uh
113:36 - essentially create right what we're
113:38 - going to do is we're just going to click
113:39 - on create a new cluster yeah exactly so
113:43 - let's go ahead and do that um one second
113:45 - sorry I've got everything everywhere
113:46 - oops what the hell happened all right so
113:50 - let's go ahead and click create a new
113:51 - cluster okay and and let's one me
113:53 - through this y uh because you still have
113:56 - the other one running uh just go ahead
113:59 - and create a new
114:00 - um project a new
114:04 - project yeah yeah okay where do I do
114:06 - that uh oh I see okay yep so okay so
114:11 - nice so here yeah new project there we
114:13 - go project and everybody you can just
114:16 - name it whatever um like Tik Tok M okay
114:19 - Tik Tok M there we go Tik Tok m
114:22 - uh next and this is where you can add
114:25 - collab uh collabor collaborators but I
114:28 - don't think we need need any of them you
114:30 - can just go ahead and create project
114:32 - nice nice and this is what you guys will
114:36 - see when you uh sign up awesome so this
114:39 - is literally it yeah right go ahead and
114:43 - just to explain to them quickly David
114:44 - what is a cluster so cluster is
114:48 - basically a server which runs several uh
114:52 - databases right okay yeah so technically
114:56 - it's it's something called like a node
114:57 - right and which is funny because it's
114:58 - we're using node to run it but yeah it's
115:00 - like a server which is running the
115:01 - database perfect so let's go ahead and
115:03 - click on build a cluster build a cluster
115:06 - you can just go with the left one uh the
115:08 - free okay yeah and you don't have to
115:12 - worry about any of these uh setups you
115:15 - can just go ahead and uh hit bu cluster
115:18 - something interesting here guys is you
115:20 - can actually go ahead and use something
115:21 - like Google CL AO here as well but we're
115:23 - going to be using AWS and like we said
115:26 - just like in Firebase it asks which
115:28 - server but we don't really care about
115:29 - this at this point we don't even care
115:30 - about this stuff just go ahead and click
115:32 - create okay and the cluster name can be
115:34 - cluster zero that's
115:35 - fine yeah exactly yeah and you want to
115:38 - click on create cluster at the bottom
115:41 - nice yeah and it's going to take a
115:43 - couple of minutes don't worry if it it
115:45 - can even take up to 10 minutes doesn't
115:47 - matter okay um but yeah um while it's
115:52 - work working let's actually go back to
115:54 - our um server. js5 and start setting up
115:57 - our server right let's actually have
115:59 - something up and running okay let's do
116:01 - it dude
116:02 - so I'm just going to go ahead and create
116:05 - the server.js file okay and yeah it's
116:10 - all done and okay nice and for uh and
116:15 - you did some magic that made the whole
116:17 - thing uh
116:19 - es6 yes yep so I'll explain what that is
116:24 - so yeah so so essentially guys when
116:27 - you're using nodejs things like
116:28 - importing modules from other files you
116:31 - can't use that nice little import syntax
116:34 - you have to use like this old school
116:35 - sort of const and require syntax right
116:39 - so to get R to get around that what you
116:41 - need to is go to package Json um go here
116:43 - and basically go ahead and add this line
116:46 - of coding so you need to add in this
116:49 - right here where it says type module so
116:52 - this this right here is what you want to
116:53 - add where it says type module and this
116:55 - will give you es6 sort of syntax to your
116:58 - nodejs right so this is going to be uh
117:01 - this is really going to help you out
117:02 - when you're sort of setting up that that
117:04 - back endend so you actually have all
117:06 - that nice fancy um fancy syntax right so
117:09 - we're going to go ahead and it says oh
117:11 - oops overwrite this o let's go ahead and
117:13 - save that nice okay now so now uh go for
117:18 - yeah uh just like with react you have to
117:20 - actually import the core stuff
117:22 - so let's go ahead and import uh Express
117:26 - uh from Express and it's literally like
117:29 - like reading English it's it's super
117:31 - easy to understand what's going on right
117:34 - and the other thing that we just
117:36 - installed and we need uh is going to be
117:39 - mongus so let's import that as well okay
117:42 - so import mongus from
117:46 - mongus and there we
117:48 - go and now with that done we will
117:52 - actually go ahead and configure our
117:55 - application right yeah so let's actually
117:57 - create our instance which will be a
118:01 - const app and that is going to equal to
118:05 - express and that is basically creating
118:08 - uh simple uh instance of our application
118:11 - right nice okay uh we also need to
118:15 - define a port where our application is
118:17 - going to run okay um and that is going
118:20 - to be another variable so const Port
118:23 - equals and for development servers uh
118:26 - usually we use 9,000 or 8,000 I'm just
118:29 - going to go with 9,000 now okay
118:33 - um and let's actually create a health
118:36 - check API which is going to just return
118:39 - hello world it's a nice little thing to
118:41 - do uh I will explain it a bit later uh
118:44 - and it's going to be very useful when
118:46 - you are actually deploying your
118:48 - application y so that's actually good go
118:52 - ahead and say
118:54 - app.get and when we are calling with the
118:58 - get method so when we are calling our
119:00 - application with the get method on the
119:02 - root uh root
119:05 - directory um we will be having a
119:07 - callback function and that will have a
119:10 - request and a response in it okay and
119:13 - let's create a um an arrow function okay
119:17 - and set the response status to response
119:20 - status could code to 200
119:23 - and let's send back hello world right
119:27 - okay oh we done some weird stuff oh yeah
119:30 - yeah
119:32 - send and hello world so what I what did
119:36 - I just do I just defined uh that if I'm
119:41 - uh if somebody's calling my uh
119:43 - application with a get method on the
119:46 - root
119:47 - folder um I will send the response
119:50 - status to 200 which means
119:53 - okay um and it will send back hello
119:56 - world right okay yeah let's make this
119:59 - though some reason the pr is not working
120:01 - let's just space this out a little
120:04 - bit all right yeah thanks yeah and I
120:08 - think we have too much of these
120:11 - brackets
120:12 - y okay nice yeah nice okay and to
120:19 - actually make that app listen for our
120:22 - requests we have to tell them that you
120:24 - should listen on whatever report we just
120:27 - uh configured right yeah so let's go
120:29 - ahead and type in app. listen okay
120:33 - and this is the port where we are when
120:36 - we want this to listen Okay and let's
120:39 - actually add the Callback function here
120:40 - as well okay which will just console log
120:45 - um listening on Local Host whatever Port
120:49 - right right so listening on
120:53 - whoops Local Host and I'm going to use
120:57 - something called uh string concatenation
121:00 - Y and I'm just going to pass in whatever
121:02 - value that I have right that worked with
121:05 - using back ticks right exactly yeah it
121:08 - worked using back Tex not single quote
121:10 - not double quote it's back Tex it's uh
121:13 - in the United States keyboard it's right
121:16 - left to the uh one number nice okay
121:19 - awesome okay so now now uh if if you
121:23 - could just go ahead and uh open up a
121:25 - terminal okay and and um you can just
121:29 - type in or or if you haven't already you
121:33 - can just uh install nodemon which is
121:36 - going to enable you to run uh your stuff
121:39 - in your development environment right
121:42 - okay and you can just go ahead and and
121:44 - uh type in uh npm install DG node modon
121:49 - so what does DG mean dasg literally
121:51 - means that it's going to install this
121:54 - dependency for your whole computer so
121:56 - you have to only run it once so if you
121:59 - have done that you don't have to worry
122:01 - about it and I believe you have it right
122:04 - yeah I mean we we could do it but I
122:05 - think at this point we do have nodon
122:07 - yeah yeah yeah yeah and with nodemon you
122:11 - can just uh trigger your server so I'm
122:14 - just going to type in noon
122:18 - server.js and it should be working and
122:21 - there we go
122:22 - uh it says listening on Local Host 9000
122:25 - as we uh said it right nice
122:29 - so if Sunny if you could just go ahead
122:32 - and uh open up a postman that would
122:35 - actually let us show people that we have
122:39 - a live no. JS app yeah I just want to
122:42 - quickly run just run through a quick
122:44 - visual breakdown of what's Happening
122:46 - Here Right yeah so so I think cuz cuz
122:48 - one thing that gets confusing with front
122:49 - end and backend development is how it
122:51 - all kind of comes together together and
122:52 - this is an amazing example of what David
122:54 - just showed you guys so this is the code
122:56 - required to set up a server on the back
122:58 - end right so this is actually what you
123:00 - need to get everything up on the back
123:01 - end so what we need to do now is I'm
123:03 - just going to do a visual breakdown here
123:04 - I'm going to say like imagine we have
123:06 - the front end on the left and we have
123:08 - the back end on the right okay so we
123:10 - have the back end on the right now here
123:12 - is our front end right so this is like
123:14 - the Tik Tok clone that we just built
123:16 - right and then on the right side we have
123:19 - a back end right so the back end is like
123:20 - this little server and let's just make
123:22 - it look a bit like a server or something
123:24 - right so you got the back in which is
123:25 - like a server now whenever basically
123:29 - whenever we want to do for example David
123:31 - here has done
123:32 - app.get right now get you can send
123:35 - different types of requests to your
123:38 - backend server from your device so like
123:40 - imagine this is the Tik Tok clone right
123:42 - so we've got the Tik Tok clone working
123:43 - on the app so this is like the Tik to
123:45 - clone that you guys were seeing before
123:48 - what you can do is you can send
123:49 - different types of requests and this is
123:51 - called a API and the different types of
123:53 - requests you might see are like a get
123:55 - request is one you have something called
123:57 - a post request you have like a delete
123:59 - request you have update and so forth
124:02 - right so these are examples of what we
124:04 - like to call arrest API right and arrest
124:07 - API all it essentially means is
124:09 - communication between a front end and a
124:12 - back end in this case David created
124:14 - something called a get request and what
124:17 - that one is essentially saying is that
124:19 - if we go to the endpoint um local host
124:22 - 9,000 which is on our local machine
124:25 - 9,000 and then we say forward slash
124:27 - because that's that's the directory here
124:30 - then it would actually go ahead and
124:31 - should if we've done it right David it
124:33 - should give us a hello world
124:35 - right exactly okay so we're going to use
124:39 - a tool called uh Postman to actually
124:42 - test this right and guys yes there are
124:44 - more than get post delete those was just
124:46 - three examples um but usually you use
124:48 - get to sort of fetch information from
124:50 - your back end you use post
124:53 - toload yeah yeah use post to push
124:56 - information it's pretty descriptive so G
124:57 - is basically getting data from the
124:59 - server yeah so when you are like let's
125:02 - go with uh with an example that I uh I
125:05 - did yesterday so get is literally when
125:09 - you're going to Facebook and you're uh
125:11 - loading up the whole thing that's a
125:14 - couple of get requests right Y and when
125:16 - you are actually posting on Facebook
125:19 - it's the same thing uh you will be using
125:21 - a post
125:24 - um method and I think delete is pretty
125:28 - descriptive enough yeah so imagine like
125:30 - you had a Facebook Messenger app the get
125:32 - would be fetching the messages the post
125:34 - would be when you type in the message
125:35 - and you hit send that's going to post
125:37 - that message to the server and then the
125:39 - delete would be for example if an admin
125:41 - comes along and deletes something right
125:43 - so yeah exactly yeah so uh and and
125:46 - somebody did mention a good point rest
125:47 - API is used um between communicating
125:50 - between any two kind of applications not
125:51 - just front end and back end so in this
125:53 - case these are the two applications in
125:55 - question we've got a front end and we've
125:56 - got a back end and what it's not just
125:58 - one way to guys as well like if you make
126:00 - a request to get you the messages for
126:02 - example a get request the backend can
126:04 - actually go ahead and send back the
126:06 - messages for example so here you could
126:08 - actually send back the messages or in
126:10 - this case when we do a get request to
126:12 - for slash it sends back a message saying
126:15 - hello world right now something that's
126:19 - worth remembering is that David also
126:21 - said here result. status 200 right now
126:26 - 200 typically means for anyone who's new
126:28 - to web development is a 200 means
126:30 - basically it means okay okay right so it
126:33 - means everything was okay right a 404
126:36 - you might have seen before a 404 means
126:39 - like page not found for example page not
126:42 - found and a 500 means like a server
126:44 - error I believe I always forget anyway
126:46 - exactly that that that is internet
126:48 - server so if you're getting uh a status
126:51 - code any kind of 200 uh codes that means
126:55 - we are fine we are on track if you're
126:57 - getting a status code with uh in the 400
127:00 - area that means uh there is a client
127:03 - side error yeah um and if if it's a five
127:08 - 500 something that means the server
127:10 - needs to be uh made better Ser yeah
127:15 - exactly yeah and something worth
127:17 - mentioning is that we David mentioned
127:18 - here that there's a request and a oops a
127:21 - request and a server right the request
127:23 - is this one this Arrow right
127:26 - here response is the other one exactly
127:28 - so the response status the back end what
127:31 - he's doing is when it gets over there
127:32 - he's setting the status to 200 and then
127:35 - he's sending back hello world right so
127:39 - now instead of actually pointing from
127:40 - the front end what we can use is we can
127:42 - use a tool called Postman so Postman I'm
127:45 - going to open up something called
127:46 - Postman Postman is a very handy tool
127:48 - which I recommend everyone goes ahead
127:50 - and guess yeah exactly uh now is a great
127:53 - time again to uh pause this video and go
127:56 - ahead and download and install it uh
127:58 - it's a free testing Tool uh for backend
128:01 - developers and yeah uh and if you are
128:04 - even a front end developer and you are
128:06 - pulling some random data from I don't
128:09 - know let's say uh you building a weather
128:11 - application and you pull you're pulling
128:13 - data from the API it's a good way to
128:16 - know how the response is going to be
128:18 - built up right yeah exactly exactly yeah
128:22 - and I would really recommend so ready
128:24 - Dev say best explanation ever that's
128:26 - awesome David really nice yeah uh I
128:29 - think guys I give David some love
128:30 - because I think he's explaining this
128:32 - really really good and like even even
128:34 - today I haven't coded in this quite a
128:35 - lot and I think it's really really
128:37 - top-notch stuff that David ran through
128:38 - Jessica just dropped A50 Mexican dollar
128:41 - I think pesos uh donation thank you so
128:44 - much says super useful I didn't have a
128:46 - clue how to keep together a backend
128:47 - front-end application and honestly I I
128:50 - can really relate to that because I had
128:52 - the same problem as well when uh I was
128:54 - starting off um so really really
128:56 - massively appreciate that jica that's
128:59 - amazing yeah thank you yeah thanks a lot
129:01 - um so this is a really really good tool
129:03 - that I would recommend everyone goes
129:05 - ahead and grabs and basically you can
129:06 - mimic that back end so basically what
129:09 - you're doing here is you're pretending
129:10 - to be the front end with Postman right
129:13 - so the front end can either be the react
129:14 - app or we can pretend to be with the PO
129:17 - you can even at this point even use the
129:19 - browser so like if I was to literally go
129:20 - to local
129:22 - let's go to Local Host 9000 and let's
129:24 - just go to
129:25 - the yeah look hello world you see in the
129:29 - there we go so it actually says oh they
129:31 - can't actually see the uh the top of the
129:33 - there we go so it says Local Host 9,000
129:35 - up here and hello world it's very very
129:37 - small for them so what we're going to do
129:39 - is let's actually show them in Postman
129:41 - so Postman is like the official way of
129:43 - of doing any sort of API testing I would
129:45 - say and what you want to do is click on
129:46 - the new tab so click on this new tab
129:48 - button here uh yeah yeah click on the
129:51 - new tab uh you can set the method but
129:54 - it's by default it's get you can just go
129:56 - ahead and type in Local
129:57 - Host oh my God HTTP I know HTTP for/
130:03 - localhost uh 9,000 which is our 9,000
130:07 - exactly and you can uh leave out the
130:11 - forward slash
130:12 - after uh yeah yeah so you can leave it
130:15 - out or because by default it goes to
130:16 - this but let's let's just put it there
130:18 - for now so they can really see and let's
130:20 - click on send and and look at that guys
130:22 - it says hello world so this is exactly
130:24 - what we were saying here it's it's
130:25 - pretty much acting as the front end so
130:28 - you see we pretty much sent a request so
130:30 - we sent a get request at this point so
130:33 - this get request was sent over and we
130:36 - pretty much got a response of 200 so you
130:38 - see this is the status it says 200 okay
130:41 - and it pretty much replied with a body
130:43 - of hello world so I think that's that's
130:46 - really really awesome way of showing
130:47 - them David I think that's that's that's
130:49 - really really nice so like with that
130:52 - I think I think at this point it will be
130:53 - a good point to show them how we can
130:55 - send kind said guys you have a working
130:58 - API with an endo yeah right exactly yeah
131:01 - you have your that's it you have your
131:03 - first
131:05 - yeah in like a couple of line of codes
131:09 - okay um I think we can just jump back
131:12 - and and and go ahead let's go for it
131:15 - dude so we have the server running now
131:17 - what is
131:20 - next yeah yeah uh just like you did I
131:23 - like to uh like sketch out how our
131:26 - application is going to look like so we
131:29 - will be so this is this is where uh I
131:32 - like to divide it uh this way so we will
131:34 - be having some app config stuff okay uh
131:37 - coming over here uh we will need some
131:40 - middle Wares uh which I will uh explain
131:44 - a bit later yep um we will also need DB
131:49 - config that goes here and this is where
131:52 - our API routes will go or and actually
131:55 - we can go we can say API end points yeah
131:59 - and we also have to have a listener
132:03 - section that's really clean dude I I
132:06 - really like how you laid that out nice
132:08 - yeah yeah it's super clean to and it's
132:11 - easy to understand and it organizes your
132:12 - code yeah yeah um okay so I think we
132:17 - should go and connect to our database
132:19 - now right yes so I think uh what we did
132:23 - where initially when we were working
132:24 - with this guys is we actually set some
132:26 - dummy data so right so before we fetch
132:29 - from mongod DB what we do is we start
132:31 - off by mimicking the data that we're
132:33 - going to send back right so what we
132:36 - could do here is we can create something
132:37 - called like
132:39 - data.js right and David what goes in
132:44 - here so here basically uh goes a simple
132:49 - um J on file and and actually there was
132:54 - a way that you exported it yeah so uh
132:58 - export default so we can say con data
133:01 - and we can just pass in an array of
133:02 - objects here and the array the array of
133:04 - objects here would pretty much just be
133:06 - those props that we showed you guys
133:07 - earlier so imagine we had this right
133:10 - here so let's go ahead and actually make
133:12 - this very visible for you guys so you
133:13 - can see here we have con data and it's
133:16 - just an array of objects and this is
133:18 - going to mimic like a like mimic back
133:21 - kind of the response that we're going to
133:22 - get right and then what we're going to
133:23 - do is to make sure that we can use it
133:25 - outside of the file we're going to say
133:26 - export default data right and this will
133:30 - actually go ahead and and Export this
133:32 - data and make it usable outside so David
133:35 - with that done how can I actually go
133:37 - ahead and pull from this from this data
133:40 - file so first we have to import uh this
133:43 - file just like we did uh before okay uh
133:48 - so let's actually import this file so
133:51 - Port uh data
133:53 - from
133:55 - who um we had a
133:59 - file I think yeah it it just uh said we
134:03 - we do have to say JS uh when we're doing
134:06 - um no y yeah that is correct and this is
134:11 - guys this is literally how our um
134:15 - DB is going to be built up uh it's super
134:18 - easy way to visualize the the uh no SQL
134:22 - database like this right y
134:25 - so let's actually um go ahead and create
134:31 - another endpoint okay and we will be uh
134:34 - saying at dog once again okay and we
134:38 - will have another endpoint uh I think we
134:41 - should we can just go and say version
134:43 - one yeah and like posts okay we will
134:48 - have an other uh
134:51 - what's that called call back function
134:53 - with request and
134:55 - response and let's create the uh Arrow
135:00 - function again and what we want to do
135:02 - now is literally go into the data file
135:07 - okay so the one we import grab whatever
135:09 - data we got yeah what we just imported
135:12 - exactly and just go ahead and send that
135:15 - uh data back right go ahead so we will
135:18 - be doing uh response status
135:22 - um my inter sense is not working yeah so
135:25 - response status uh and to 200 again
135:29 - because it's a good request and we will
135:31 - be sending back uh data right okay
135:37 - yeah and it should be working if you go
135:40 - ahead and test it out I just want to
135:43 - mention as well some people asking how
135:45 - we using how are we're using import
135:47 - instead of commonjs like the require uh
135:50 - somebody says you need
135:51 - Babel and I always forget how you
135:53 - pronounce it but guys like honestly at
135:55 - this point don't bother doing any of
135:56 - that stuff just go into your package
135:58 - Json and add this type module and that
136:00 - will give you those es6 Imports so it
136:03 - will be a very very handy thing so in
136:04 - case anyone joined afterwards that's how
136:06 - we're doing Import in rather than
136:09 - require right so you just add this it is
136:11 - an experimental feature at the moment
136:14 - but I mean is is essentially what we're
136:16 - what we're doing here um nice so David
136:19 - went ahead and added this uh endpoint
136:21 - which means that if we save this now
136:23 - what we should see David if we go to
136:25 - this endpoint so for/ V1 posts it's a
136:28 - get request so let's actually go ahead
136:30 - and set this up so it's say get request
136:32 - and then what we want to do is we're
136:33 - going to say make this a little bit
136:35 - bigger for everyone to see and what we
136:37 - say it was V1 and it was for/ posts
136:41 - right now if I click Send what should I
136:43 - see now like if let's go ahead and do
136:46 - it uh send you should be seeing the
136:49 - data. js5
136:51 - and there we go nice dude awesome this
136:54 - is exactly the data that we just had so
136:58 - for small like super small projects uh
137:01 - this is a good way to kickart uh if you
137:04 - don't have access to a database at that
137:09 - moment um but yeah uh for bigger stuff
137:12 - then definitely you need to go ahead and
137:14 - set up a mongod DB so can we actually go
137:17 - back to our mongod DB yeah let's do it
137:19 - dude I just want to say as well guys we
137:21 - just broke over
137:23 - 262,000 playbacks and we are just under
137:27 - 2,000 likes so like this is huge guys
137:31 - and this is amazing we at $66 in chat
137:33 - Revenue massively massively appreciated
137:35 - if you guys are enjoying this let's push
137:37 - that like up to 2,000 today cuz that is
137:39 - amazing and David's dropping some
137:41 - serious knowledge here for you guys
137:42 - regarding the M Stack so I think he's
137:44 - doing an awesome job show him some love
137:46 - and David let's carry on
137:48 - strong yeah let's go uh um so let's go
137:52 - to mongod db.com uh let's actually set
137:55 - up our database right go ahead
137:58 - yeah so I see clusters
138:02 - here exactly and Below clusters there
138:06 - should be a a network access right
138:11 - y uh okay right awesome yeah so on the
138:14 - leftand side so over here guys it was
138:17 - actually kind of hard for me to find in
138:18 - the beginning so just over on this left
138:20 - side where it's under security you need
138:22 - to actually set up some security rules
138:24 - over here so what we need to do now is
138:26 - go to let's do database access first or
138:30 - network yeah let's go with database
138:31 - access where uh whichever you prefer
138:33 - okay nice okay let's go with database
138:36 - access So currently we are going to
138:38 - create a user a technical user to log uh
138:42 - to uh access our database right let's go
138:45 - ahead and uh click that button
138:49 - nice yeah uh and you can just type in
138:52 - whatever username you want to uh we will
138:54 - be using password uh so let's use admin
138:57 - as us only two thing that
139:00 - you yeah yeah the only two thing that
139:02 - you will need to worry about is those
139:04 - two text box nothing else right yeah
139:08 - okay so in this case we'll do admin as a
139:10 - user because it's kind of an easy one to
139:12 - remember and then we're going to say
139:13 - autogenerate a secure password and I'll
139:15 - show you guys cuz this is going to be
139:17 - we're going to take this down afterwards
139:18 - so you basically just want to copy this
139:20 - make make sure you copy this because
139:21 - David I I believe they can't actually
139:23 - see the password after right exactly so
139:27 - you create this user and I couldn't
139:29 - retrieve the password at any time uh I
139:32 - had to delete and create a new user yeah
139:36 - exactly if you know how to retrieve it
139:37 - with without creating a new user let me
139:39 - know yeah exactly nice I think you might
139:42 - be able to reset but I'm not sure you
139:44 - can do it but at this point that's the
139:45 - username and this is the password you
139:47 - want to make sure this is all good this
139:49 - just read and write and that's all good
139:50 - rightly add user yeah and you don't have
139:53 - to worry about anything else you can
139:54 - just go ahead and add the user that's
139:56 - correct so we're going to go down here
139:57 - and click on add user nice
140:00 - exactly uh with that done uh on the left
140:03 - hand side there is the network access
140:05 - button right so we're talking about this
140:07 - button here network access yeah exactly
140:11 - uh you can just go ahead and click it Y
140:13 - and now you can just add an IP address
140:17 - uh rule this literally uh will will
140:21 - restrict restrict any uh un unauthorized
140:26 - IP address to call our uh database right
140:30 - yeah but for today and it's for only
140:32 - educational purposes disclaimer do not
140:34 - do this in production environment we
140:36 - will be using allow access from anywhere
140:39 - yeah so it doesn't make exactly and this
140:42 - will set it to z00 Z uh but what David
140:45 - said is really important there guys so
140:47 - this is for like demo purposes it's
140:49 - completely fine if if you're doing a
140:51 - demo but when you do have production
140:53 - environments you tend to limit the IP
140:56 - addresses which actually can access your
140:58 - database right now um Firebase do this
141:01 - in a really clever way this
141:04 - yeah go for that working with a client
141:07 - just do not do it yeah yeah exactly yeah
141:10 - if you're working with a client don't do
141:12 - it yeah don't do a don't don't make it
141:14 - like super open to everyone make sure
141:16 - it's restricted if you are working for a
141:17 - client um oh amona is in the house nice
141:20 - dude he
141:23 - keep going guys on the verge to get 2K
141:25 - yes guys you heard let push them likes
141:27 - to 2,000 today and um uh yeah am 17year
141:33 - old student he's crushing it in pwj I
141:35 - work with him every day he is absolutely
141:38 - a boss of what he does and guys like
141:41 - just be surrounded by these good people
141:43 - and you will go far also sh this is a
141:45 - question for you David uh here David Shi
141:48 - says David I hope we will also use the
141:51 - best practices for error handling
141:54 - also uh I think it's not today uh we
141:57 - will be doing some error handling stuff
142:00 - it's our application will not like Crush
142:03 - if uh something error happens but uh we
142:07 - will not cancel out any um user
142:11 - stupidness right yeah to be fair I mean
142:13 - I think we are we are following best
142:15 - practices with what we're doing today
142:17 - we're going to check if there is an
142:18 - error and we change the response
142:20 - depending on if if there's an error so I
142:21 - think we will be doing that yeah to
142:23 - answer the question yeah I mean we we
142:24 - will be we will be canceling out any
142:27 - technical errors that could happen right
142:29 - yeah exactly yeah nice so with that said
142:33 - guys we are now going to click on
142:35 - confirm and that means we added this
142:38 - sort of a whitelisting rule now so the
142:40 - next step is to go over to clusters and
142:43 - what do we do David now we click on
142:48 - connect uh it's with in the cluster yeah
142:51 - that that's the button that you want to
142:53 - click and you will go with the middle
142:55 - option so connect with your application
142:58 - okay and you can just go ahead and copy
143:01 - that uh long um like text that is what
143:06 - we will be using to connect to our
143:08 - application now actually realize that
143:10 - there are two uh two like variables that
143:14 - you will need to pass in one of them is
143:17 - going to be the password exactly you
143:19 - will have to delete that uh and place
143:23 - your password in there that you just uh
143:25 - copied with the
143:28 - uh the DB user uh do you have that Sunny
143:32 - yeah so let's actually visually do this
143:34 - so let's go ahead and do let's say const
143:37 - and let's just say like um
143:40 - connection connection URL so let's just
143:43 - do connection URL equals and let's paste
143:45 - that so you see this is what we got from
143:47 - that thing and then right here where
143:49 - we've got the uh admin password I'm
143:51 - going to go ahead and paste the password
143:53 - that we had so whatever you set as your
143:55 - password go ahead and do that there and
143:58 - then David there's another important
144:00 - part this one
144:01 - right exactly that is going to be the
144:04 - name of the database that we will be
144:06 - creating so you can just type in
144:09 - whatever you want but if you just ignore
144:11 - that it will be create your database
144:13 - will be created with the name of DB name
144:16 - right with with the crocodile
144:18 - brackets exactly yeah yeah yeah so we're
144:22 - going to call it Tik Tok you can just
144:24 - Tik Tok y nice
144:27 - um and actually we will be now is the
144:31 - time that we will be using the uh
144:35 - so if you don't mind I will uh remove
144:38 - this line and move it down here to DB
144:40 - config nice okay and we will be using
144:43 - mongus for now okay and is it's
144:48 - going to be super easy to connect so
144:50 - let's go ahead and type in
144:52 -  that connect okay
144:57 - and let's actually uh use the
145:01 - connection uh URL that we just created
145:05 - nice and we will need to add a couple of
145:10 - like options okay
145:13 - nice yeah so mango is actually under
145:16 - development and under constant upgra
145:19 - updating so we will be need to use
145:22 - something called the new URL parser so
145:24 - let's go and type in and it's going to
145:27 - uh pop up the new URL parser which will
145:31 - be true yep and we have two other stuff
145:35 - the one of them is
145:38 - use I think it's uh use create index and
145:44 - what something is where is happening use
145:47 - create index yeah there we go okay
145:51 - and the last one that we will be using
145:53 - today is use unified topology right okay
145:58 - so and these three uh things are are
146:02 - going to be needed so that it doesn't
146:04 - freak out in the uh terminal and it's
146:08 - running peacefully right okay and with
146:11 - that done we pretty much have connected
146:14 - to our database nice and if we go back
146:18 - to um mongod DB come and refresh a
146:21 - couple of times and like wait for two or
146:24 - three minutes it will show that we are
146:27 - connected right okay so at this point we
146:31 - could safely assume whoa Frank's in the
146:33 - house dude nice Frank just dropped $5 he
146:38 - says learning the mon stack is a great
146:40 - way to start a career in hot technology
146:42 - companies very valuable info sunny and
146:44 - David love that Frank Frank always comes
146:46 - in like swinging thank you so much dude
146:49 - and he just took us over $70 in chat
146:51 - Revenue so thankk you dude massively
146:53 - appreciate that also guys I want to
146:55 - mention just quickly I to take a little
146:57 - note here Frank was somebody who took
146:59 - the Spotify clone that we built um not
147:02 - long ago and actually showed that to um
147:06 - so the company called Sonos which is
147:09 - many of you may know they produce really
147:11 - high quality premium speakers and he
147:13 - landed a six figure contract guys and
147:17 - the Spotify clone helped him do that and
147:20 - that blew our minds when we heard that
147:22 - it is insane that he's doing that and
147:24 - and he actually worked with Frank quite
147:26 - closely now and he shows me the progress
147:28 - as it goes on and it's just amazing what
147:30 - he's doing really really awesome stuff
147:32 - Frank um and guys like it just goes to
147:35 - show you stick with these clones you
147:37 - will learn you will pick up a lot of
147:38 - stuff and it's no joke like six figures
147:40 - and and it's real stuff like uh Frank's
147:42 - always on the coaching call inside a
147:44 - profit with JavaScript every Tuesday as
147:45 - well links in the description make sure
147:47 - you go and check out if you're
147:49 - interested in learning more but let's
147:50 - Carry On David so yeah let's go so now
147:55 - we will be creating a a model which will
147:58 - be the data structure that is in the um
148:02 - that we will be using within our
148:04 - database so I will just create a new
148:07 - file and I will call that uh DB model.
148:12 - JS okay uh super descriptive super easy
148:16 - and we will be doing uh so
148:20 - we will be uh importing uh once
148:24 - again uh from of course okay I
148:28 - added a that
148:32 - um yeah there we go and now we will be
148:35 - creating a schema that it will be in our
148:39 - application right right so let's
148:41 - actually create a const and guys just to
148:46 - clear this up for you guys um so a
148:48 - schema is essentially something which is
148:51 - going to tell it's going to tell the
148:53 - database or like the collection that
148:55 - we're storing information in what kind
148:58 - of data structure to expect right so
149:01 - what kind of oh we just hit 2,000 likes
149:03 - dude
149:05 - hey Zaza says we just hit 2,000 likes my
149:08 - first time watching your guys streams J
149:10 - what's up dude you goes just hit 2K
149:12 - likes what it and let's touch 3K let's
149:14 - go dude um that's insane that's oh I
149:17 - love that dude amazing stuff well done
149:20 - David this is your first stream and it's
149:22 - it's hitting 2K likes that's awesome
149:24 - dude thank you yeah thanks a lot so I
149:29 - just dropped in a snippet of code and
149:33 - this is actually uh the definition of
149:36 - our schema right so I am creating a um
149:41 - variable called Tik toac schema which is
149:44 - a schema and I am just passing in
149:48 - all the names of the fields and I'm
149:52 - telling what kind of data that will be
149:54 - in right so everything is going to be
149:56 - string that's the easiest way to go okay
149:59 - and we will have a URL a Channel song
150:03 - likes messages description and shares
150:05 - all of these are going to be stored in
150:07 - mongodb right okay and we will have to
150:11 - export it uh and I think it it's uh
150:15 - exports. default right yeah um
150:20 - exactly export defa we will be we will
150:24 - be saying like Mong goose. model yep and
150:30 - this is a great uh now we have now you
150:33 - will have to pay attention what are you
150:35 - typing in because this is going to be
150:37 - the collection within your database
150:39 - right so we Define the database name uh
150:43 - inside uh of the huge link where we
150:47 - connected to our database and this is
150:49 - going to be the colle ction okay okay so
150:51 - it's the document collection and I will
150:54 - say um Tik Tok videos okay it's pretty
150:59 - descriptive and with a comma I will just
151:03 - add uh Tik Tock schema right so what
151:06 - you're essentially saying here is we've
151:08 - got a collection of Tik Tok videos which
151:10 - has this data
151:14 - structure exactly exactly yeah so we
151:17 - just created our data structure right
151:19 - nice okay yeah uh and I think uh we can
151:23 - go back uh to our server.js and we need
151:27 - to import this I think one thing worth
151:30 - mentioning is for anyone who's new to um
151:32 - actually uh sort of no SQL development
151:35 - whenever you have like so if you're
151:37 - wondering what a collection is for
151:39 - example like we keep saying collection
151:41 - uh in a nosql database so no SQL is what
151:44 - we're working with here and this mongod
151:46 - DB pretty much so no SQL is mongod DB
151:49 - and David just interrupt me at any time
151:51 - if what I'm saying is incorrect it
151:53 - follows um a structure as such it'll be
151:55 - a collection is essentially like an
151:57 - array of documents so think of it this
151:59 - way and then we have and then you have
152:01 - you can have another collection and then
152:03 - you can have another array of documents
152:05 - and so forth right it basically just
152:07 - takes this pattern yeah so collection if
152:10 - you're coming from SQL background
152:12 - collection is kind of like the table
152:16 - right yeah uh I I I understand it that
152:19 - way
152:20 - okay that's really good inside of
152:22 - collection you can have several
152:24 - documents and one document is
152:26 - essentially going to be a Json
152:28 - object and and that's pretty easy way to
152:32 - understand it if you can if you go back
152:35 - to our data.js file yeah um real
152:41 - quick uh that that's that's pretty easy
152:44 - way to show um yeah so here's like the
152:48 - collection yeah
152:50 - yeah the whole thing is a collection
152:52 - right okay and each one is collection
152:56 - and exactly exactly go ahead yeah yeah
153:00 - and I think it's a super easy way to
153:03 - understand databases yeah I think that
153:05 - awesome explanation I think that would
153:06 - help a lot of people also David I just
153:08 - want to stop uh for one second um
153:11 - because this is this is really really
153:13 - awesome like somebody said based on the
153:15 - Airbnb clone I created an application
153:17 - for a local company in my city and so
153:19 - sold it for $200 thanks so much and
153:22 - greetings from Poland that's awesome
153:25 - dude whoa that's insane right that's
153:28 - cool awesome yeah that's insane like
153:30 - yeah so that's amazing like just from
153:32 - the Airbnb clone like this person's
153:34 - probably restructured it for a client
153:36 - used it yeah
153:39 - awesome let's carry
153:41 - on awesome yeah yeah let's carry on
153:46 - so now we need to go back to our server
153:49 - that J file okay and we will have to uh
153:53 - import uh this model that we just
153:56 - created right okay so I will just go
153:58 - ahead and say import uh and I think I
154:02 - will name it videos okay and I and we
154:06 - will import it from uh DB model file
154:11 - yeah it's F I found it awesome so we
154:16 - pretty much have it and now it's going
154:19 - to be a super easy way uh to just go
154:22 - ahead and actually post data into our
154:24 - database and we don't have to worry
154:26 - about manually creating our database and
154:29 - collection and whatsoever because mongos
154:32 - will take care of it for us right okay y
154:36 - so let's actually create a post uh
154:39 - endpoint so app. post right and we will
154:45 - be using the version two SL poost uh end
154:50 - point
154:51 - okay which yeah and in the Callback
154:55 - function as usual we have a request and
154:58 - response uh variable oops sorry and
155:01 - let's
155:03 - actually uh let's actually create the
155:05 - arrow function
155:09 - and uh we will be passing in whatever
155:12 - data that we want to save into our
155:14 - database uh inside the request body uh
155:18 - and this is a
155:20 - this can be done with Postman pretty
155:22 - easily but first we have to yeah yeah we
155:26 - have to just go ahead and save it into a
155:28 - variable so we don't have to worry about
155:30 - it anymore so let's go ahead and c and
155:33 - the naming convention that I learned is
155:36 - uh DB Videos or okay it's like DB and
155:41 - whatever you want to save and it's going
155:43 - to be the
155:45 - requestbody right so David just to just
155:47 - to tell everyone like what are we trying
155:49 - what are we trying to achieve right now
155:51 - like what is this what is this post
155:53 - request doing what's the purpose of this
155:56 - for okay so the post requests per
155:59 - purpose is um literally adding data to
156:03 - our database it's like posting on
156:05 - Facebook when you are posting on
156:06 - Facebook you go ahead type in a string
156:10 - and then you hit the button that will
156:12 - send the request into Facebook server
156:15 - that will save your post into their
156:17 - database and then Rend it out right this
156:21 - is literally what we will be doing now
156:23 - right nice and and you you will pass in
156:27 - your stream what's up we just got
156:29 - another donation dude sorry sering Cen
156:31 - he watches these videos quite a lot uh
156:33 - and he just jumped in as well he goes
156:35 - thank you for doing a m project slightly
156:36 - different what I'm used to you guys are
156:38 - killing it dude I love the fact you show
156:40 - up every time keep doing that um and
156:43 - just like I'm glad you're just watching
156:44 - these videos every time like it's
156:46 - amazing that you're here showing up
156:48 - that's awesome dude nice
156:50 - yeah exactly yeah thank you guys um so
156:54 - yeah and we will be passing the data in
156:56 - the request body yep and so we have to
157:00 - just go ahead and save it into a
157:02 - variable right yep now let's actually go
157:05 - ahead and save our data into our
157:06 - database okay so what we will be doing
157:09 - is uh we will be using the model that we
157:14 - just created uh it's going to be a super
157:17 - easy way so let's actually type in in
157:20 - videos.
157:22 - create and we will just pass in as data
157:27 - our DB Videos right okay whoops uh
157:32 - we and we will have now this is the time
157:36 - when we will be handling any kind of
157:38 - Errors okay so if there is an error we
157:41 - will run uh a function and if not we
157:44 - would just want to see what kind of data
157:47 - that which is created right so that's
157:49 - let's go and type in uh data and here we
157:53 - go and we will be just using a simple if
157:57 - uh if gate and that would just do it for
157:59 - us so if uh I would and so if there is
158:05 - an error I want to set the response
158:08 - status to 500 right which is going to be
158:11 - uh internal server error and send back
158:15 - whatever error that we had right quiet
158:18 - so if there's an error change the stat
158:20 - to 500 Y and return an error object
158:24 - okay yeah and but if we don't don't uh
158:28 - catch any kind of Errors so else uh we
158:32 - want the response
158:35 - status uh set to
158:38 - 2011 and 2011 means created right so
158:43 - it's uh when you're posting and and it's
158:46 - succeed and it succeeded uh you want to
158:48 - see 2011 right right yeah and we're just
158:51 - going to send back uh the data that we
158:54 - just
158:55 - created and with that I think we have
159:01 - our
159:02 - uh our second end point Done Right
159:05 - awesome so if you can go ahead and yeah
159:08 - if you can go ahead and uh check it out
159:11 - okay in post that would be awesome nice
159:14 - just want to drop in Al kamish just
159:16 - dropped a juicy comment he says sunny I
159:18 - got placed because of your videos I will
159:20 - donate after my first payment love you
159:22 - paji that's insane dude like he he got
159:24 - another job from this just seeing like
159:26 - the people getting jobs from these this
159:28 - content is just like I I have to take a
159:31 - second and just pause because it's like
159:32 - it's always like just so like humbling
159:35 - when people drop that like it's such a
159:37 - lovely feeling and and it really does
159:39 - make all the difference guys so let's
159:41 - just like we'll keep it coming yeah it's
159:43 - so motivating yeah so David like we saw
159:46 - now this was the same um Endo but it's
159:49 - V2 because we're now we called it V2 to
159:52 - show that it's now not pulling locally
159:54 - but we're going to be posting to the
159:56 - mongod DB right so we're going to do
159:57 - post and we're going to change it to V2
160:00 - and what should I so it's you I I saw
160:03 - that you actually had a body right so it
160:05 - says the database videos we're passing
160:07 - as a request body so how can I go about
160:11 - actually passing this body I think we
160:13 - can click on body here so exactly then
160:16 - you will need to click raw because we
160:19 - are just going to be uh like hard
160:22 - pushing the data okay and that is where
160:25 - you want to copy one of the documents uh
160:29 - from yeah exactly and you you have to
160:31 - set the uh file type to uh Json right
160:35 - there because we we will be using Json
160:38 - and you just have to go back to data.js
160:41 - and copy one of the documents and paste
160:43 - it right in there right right so let's
160:45 - go ahead and grab this one for example
160:49 - exactly and it's going to error because
160:52 - Jason actually needs the uh double
160:54 - quotes around these uh keys right here
160:58 - so exactly you have to uh you have to
161:01 - take care of that yeah exactly and now
161:07 - if you hit sand it should be working and
161:09 - it should be posted into uh mongodb okay
161:13 - so we're going to hit send and then this
161:15 - should populate if it's all good and if
161:16 - it is all good yeah if it is good it
161:19 - should send back the the data rate that
161:22 - we actually posted so we should see this
161:24 - down here afterwards if it's all good
161:26 - right so let's go ahead and click Send
161:30 - sending request and it said could not
161:32 - send request view in console let's go
161:35 - ahead and see what uh are we actually
161:37 - are we actually running we're not
161:39 - running the server are we no we are we
161:40 - crashed okay uh yeah no um there was a
161:44 - bit of issue okay now it's running um I
161:47 - forgot to add the extension uh when I
161:49 - was importing the modal so you have to
161:51 - add the JS I think somebody actually
161:54 - pointed that out that's really awesome
161:55 - that somebody pointed that out earlier
161:57 - yeah I saw that so whoever pointed out
162:00 - what thank you I wasn't sure what they
162:01 - were talking about but now it makes
162:02 - sense so um yeah we click post now hey
162:06 - there we go we get this back oh
162:09 - something happened because uh we just
162:11 - got back these two
162:13 - uh
162:15 - Fields I think I think the reason why
162:18 - might
162:20 - because we not we don't have a
162:22 - middleware right now to to pass Jason
162:24 - right do we need the express. Jason
162:26 - middle yeah oh yeah yeah I forgot about
162:29 - it so this happens often times and you
162:31 - were just spending hours and hours
162:34 - trying to debug what is happening and
162:36 - the only thing that you
162:39 - forgot saying app use
162:43 - yeah H and the only thing you you forgot
162:46 - is Express is Json fun fun ality right
162:50 - yeah exactly that is all that we missed
162:52 - out exactly and guys what that's doing
162:55 - is it will basically pass the response
162:57 - as adjacent object and then it will
162:59 - it'll read it from you now we just got a
163:01 - $15 donation from uh codep suar says I
163:05 - develop mobile application using react
163:07 - native even though you guys develop
163:08 - clone using reactjs it makes it really
163:10 - easy for me to convert it into a mobile
163:12 - application that's insane dude and that
163:14 - just goes to show that a lot of people
163:16 - had asked previously about if react
163:18 - native can be used used if you know
163:20 - react yes the answer is yes and that is
163:23 - so awesome to see that dude anding
163:25 - answer yeah that just hit us to
163:27 - $87 in chat Revenue thank you so much
163:30 - guys who that's awesome that's crazy so
163:34 - let's go ahead and hit sa yeah yeah now
163:37 - now it should be able to understand Json
163:40 - and it should be able to uh pass
163:44 - in data right y yeah let's go s y there
163:49 - we go dude there we go we get back to
163:52 - Jason now nice yeah yeah yeah yeah
163:55 - awesome so that was that that one little
163:58 - line of code uh can cause so many errors
164:03 - right nice so with that said so we we
164:06 - just uh pushed some data into the DB and
164:09 - let's actually check that it actually
164:10 - got pushed in so let's go ahead and go
164:12 - to collections
164:13 - yeah right so
164:16 - collections yeah exactly and it does
164:18 - take a look bit longer to do it on
164:20 - mongod DB uh and you can see now uh
164:23 - here's strange let's go to Tik Tok
164:25 - videos so this is the one that we
164:26 - actually pushed to I'm not sure why that
164:27 - came up but you see this was the first
164:29 - one that we pushed by mistake um so
164:31 - ignore that one for now you can go ahead
164:33 - and uh and actually you can delete it
164:35 - it's uh it should be on the right side
164:37 - oh nice yeah let's just delete that one
164:38 - there's a little yeah exactly there we
164:42 - go there we go so should we go ahead and
164:44 - push the other one David as well yeah
164:46 - let's go let's go let's go ahead and
164:48 - push this object in as well so that way
164:51 - we should have some data inside of our
164:54 - inside of our DB so I'm going to go
164:56 - ahead and pop that in there and again we
164:58 - need to change this to the following so
165:00 - boom boom boom likes messages
165:05 - description description sh there we go
165:09 - and get rid of that little extra comment
165:11 - and just to double check so it said and
165:13 - nice David I like the two1 that you
165:15 - added as well that was a really nice
165:16 - little touch yeah so we hit send now
165:19 - it's like what what you always do with
165:21 - front end so on front end you have to
165:25 - worry about the nice little touches uh
165:27 - with like um with like shadows and stuff
165:31 - and this is this is the exact same nice
165:33 - little things uh with backand right
165:36 - exactly yeah we just hit refresh and now
165:39 - you can see hey we've got our data we
165:41 - got RAF Kazi Channel go and my channel
165:43 - nice awesome dude okay
165:47 - exactly okay now let's actually go back
165:50 - to our server.js file and add the
165:53 - ability to actually retrieve that data
165:57 - that we just added right okay so we will
165:59 - be we will need another endpoint uh
166:03 - which will be using a get uh method
166:06 - right because we are downloading data uh
166:09 - we will be using the exact same uh
166:12 - endpoint and yeah which is V2 and posts
166:17 - okay we will also have the usual um
166:22 - callback function okay request and
166:26 - response so let's see and now we don't
166:30 - have to save anything a get uh method um
166:34 - call will not have a body so that's uh
166:37 - that's going to throw un
166:40 - unknown but what we can do super simply
166:43 - is say videos. find and that will just
166:49 - retrieve uh the data from the database
166:53 - and we can add a filter Within These
166:56 - quigly Braes but you don't have to worry
166:58 - about it so you if you want to retrieve
167:01 - everything from the database you can
167:03 - just leave it completely empty yeah I
167:06 - think we can actually we can actually
167:07 - get rid of that if we don't need to pass
167:09 - options
167:10 - right I think so yeah yeah let's try it
167:13 - and if it doesn't work we can just head
167:16 - back um and this one will have another
167:20 - um callback function uh with an error
167:24 - handling and a response data right
167:28 - okay and we will just go ahead and copy
167:32 - the exact same uh if gate RI statement
167:36 - and just you can we can just pass it in
167:39 - there one thing we have to work uh take
167:41 - care of is the two1 status code okay we
167:44 - have to change it to 200 right okay
167:48 - because uh it's downloading data and
167:50 - error data there we go um I think it
167:54 - should be working now teral it's working
167:58 - key differences are the get and the post
168:00 - here so get obviously we've changed it
168:02 - so it's the same you see it's the same
168:03 - actual URL but it's just changing the
168:05 - type of uh request so if we go to get
168:09 - now and we can clear the body because we
168:11 - don't want to care about that if I click
168:12 - send you can see hey it just went ahead
168:15 - and fetched us two things we got the
168:16 - items here nice awesome dude there we go
168:19 - there we go say it's fetching from the
168:21 - DB yeah
168:23 - awesome exactly now before we uh deploy
168:28 - it to Heroku we have to add another uh
168:31 - kind of um middleware okay and this
168:35 - thing we we want this thing to be run uh
168:38 - before every um API core right okay um
168:44 - this is again uh huge disclaimer this is
168:47 - going to be security without ignore with
168:51 - with ignoring security right okay so
168:54 - this is a thing that you don't want to
168:56 - do uh when you're working for a
168:59 - client uh yeah so let's go and say app.
169:04 - use and for all the functions that means
169:08 - we will have a call back with a request
169:11 - and the response and then next I will
169:13 - explain that what what's that
169:15 - later uh and we will just uh setting a
169:19 - couple of headers and if you are asking
169:22 - uh in the comments if it's a course
169:24 - headers yes it is this is this is course
169:26 - headers okay um so we will just be
169:30 - adding a couple of
169:33 - headers um one of them is Access Control
169:39 - allow uh
169:42 - origin and we will add a star which
169:45 - means everybody so we will um it's it's
169:49 - the exact same thing that we did uh on
169:51 - mongodb when we allowed access from
169:54 - anywhere y uh and the other one is going
169:58 - to be actually I will just copy paste
170:01 - this line of
170:02 - code and we have to change the origin to
170:07 - headers and with that done we just have
170:10 - to go and hit next so what these line
170:14 - line of code
170:16 - do uh so whenever we receive a request
170:20 - we will be setting the headers to these
170:23 - which means we accept all the requests
170:26 - and then we pop through these functions
170:29 - that are in here right right so that
170:31 - that's pretty much all it does nothing
170:34 - else and with that done I think we are
170:38 - ready to deploy nice dude how's that
170:41 - sound awesome I think that's dope yeah
170:44 - that's dope I I wasn't expecting that
170:46 - okay so that's awesome guys so now we
170:49 - can actually push to the database we can
170:51 - pull from the database so I guess the
170:52 - next step like David said is to actually
170:54 - go ahead and deploy this thing into um
170:57 - we could I mean we could maybe do the
170:59 - front end connect it to our local and
171:01 - then deploy
171:03 - both uh yeah we could do that but then
171:05 - we will have to um change the connection
171:10 - right on the front end okay more
171:12 - headache so that's why I prefer to um
171:16 - just push deploy the backend yeah okay
171:19 - right so how do we do this so we do that
171:22 - by going to hu.com
171:24 - it's basically like virtual server
171:27 - that's the easiest way to put it and
171:29 - understand what it is so you can go to
171:31 - her.com
171:32 - and uh you can go ahead and register
171:36 - it's now it's again it's a great time uh
171:38 - to pause the video if you don't have an
171:40 - account or maybe do along it but sunny I
171:43 - don't know if you have an account uh I'm
171:46 - not sure I mean I have one for ages ago
171:48 - I think I haven't used herok in a while
171:49 - um let me go ahead and try and sign in
171:51 - guys one second yeah yeah yeah oh I do
171:54 - have an account I think yeah nice okay
171:56 - there we go yeah so you can go ahead uh
171:59 - if you don't have an account and just
172:00 - create one it's again it's free and you
172:04 - don't have to provide a credit card yep
172:06 - and then uh it's going to prompt you uh
172:09 - I think my video is frozen yeah there we
172:12 - go um you got 1 2 3 four okay uh so on
172:15 - the top right corner this is how how you
172:19 - how it will look like if you already
172:20 - have an account if you don't the upper
172:23 - uh part of the screen is going to be uh
172:26 - completely purple and under that there
172:28 - will be two buttons and you will want to
172:31 - hit the create new application right if
172:33 - you go ahead and uh hit new yeah create
172:36 - new app that's the uh that's the button
172:38 - that you want to hit okay yeah you can
172:41 - just um I don't know say m Tik Tok TI
172:44 - Tok back end or whatever do backend yeah
172:47 - and just uh go and create it okay create
172:49 - app nice and go create app and nice
172:54 - little donation thank you so much whoa
172:57 - thank you so much appreciate that dude
173:00 - yeah
173:01 - um yeah now there is actually two way to
173:05 - go about it if you have your code on
173:08 - GitHub you can just go and grab it from
173:10 - there but that's uh that's the boring
173:12 - way and backend guys do it with a CLI
173:16 - okay so there is a option to install
173:20 - Heroku CLI right okay can you see uh you
173:23 - can just yeah open up it in a new uh
173:26 - yeah and if you start uh scrolling down
173:30 - not not not that one uh you can go even
173:33 - even more down and there is an other uh
173:36 - installation method yeah that's the code
173:37 - that you want to grab it's uh for
173:40 - Windows it's for uh Mac it's for Linux
173:43 - it's for everyone uh and you can go with
173:45 - that and just paste it it will require
173:47 - your password to install the CLI okay
173:51 - and this will allow you to uh this will
173:56 - give you a super fensive way to deploy
173:58 - your app right nice so how it doing so
174:04 - this is just uh installing and nice nice
174:08 - there we go awesome there we go perfect
174:10 - so we can back
174:12 - to um yeah you can go ahead and close it
174:15 - up now let's go and
174:18 - you will have to log to your Heroku CLI
174:21 - it's going to be the exact same way that
174:23 - you do it with Firebase so it will pop
174:25 - up a browser uh page okay so
174:31 - C nice I like I like how they do that
174:33 - yeah so you do so get um Heroku login
174:37 - and let's go ah aead see say press any
174:39 - key to open up there we go yeah just uh
174:41 - hit hit any button yeah just go ahead
174:44 - and hit return nice okay and then we can
174:49 - go back and it
174:53 - LO awesome yep I think it's yeah it's
174:57 - breaking up a little bit there we go
175:00 - everything what was that okay sorry
175:03 - uh yeah so you can go back to your
175:06 - Heroku yep uh the other one yeah and you
175:09 - are already seated into your project but
175:12 - you have to initialize a git repository
175:14 - by hitting git in it okay so what it
175:17 - does is basically we will be
175:20 - initializing a g repository a Version
175:23 - Control and uh we will we will be
175:27 - pushing this code to heroku's uh G uh
175:31 - repository right let's go back and set
175:33 - the origin okay so this one here yeah
175:37 - that's the one yeah yeah and you can
175:39 - just go ahead and copy paste everything
175:41 - like it's it's super easy nice there we
175:44 - go we say it as the
175:47 - origin yeah yeah and you can just uh
175:49 - commit like saying get add dot then get
175:52 - commit D
175:54 - am we say get and this will actually go
175:57 - ahead and add it to our G so if you do
175:59 - get status now you can actually see
176:00 - everything goes green I mean it's
176:02 - committing the node modules do we want
176:03 - to do that
176:06 - or um we can go with the node modules uh
176:09 - if you don't want to uh you can go ahead
176:13 - and add a g ignore file yeah so easy way
176:16 - to do that guys is if you right click
176:19 - and uh I mean yeah I think we should add
176:21 - a get ignore I think yeah here let's do
176:25 - a so it's dogit ignore like this and
176:29 - then in here you can just do node
176:31 - modules just yeah node modules actually
176:35 - can you go and Google up something for
176:37 - me what's
176:39 - up uh just go go into your browser and
176:42 - uh uh and open up a new uh page so just
176:47 - we can like show people why it is
176:49 - important to create a do getting or
176:52 - file okay and if and you can if you
176:55 - could um like Google node J node modules
176:59 - uh node modules GitHub meme just
177:04 - this yeah show me can you show
177:08 - the and and the dog dog Cloud this one
177:13 - ah yeah yeah that's it yeah that's
177:17 - what's going to happen guys it's
177:18 - literally going to like just Cloud
177:20 - everything we don't want to do that yeah
177:23 - yeah so you can go
177:25 - ahead yeah exactly um nice so what we
177:29 - can do is actually I'll show you guys
177:31 - just a little trick as well so here if
177:33 - you go inside and you can see stage
177:36 - [Music]
177:39 - changes get ignore node modules yeah and
177:44 - inside of here if we do
177:46 - get um
177:48 - status uh so he's already added them to
177:51 - staging so I think actually at this
177:52 - point what I need to do is I can
177:53 - actually minus them
177:56 - all and you get status there we go and
177:59 - then you can see now it's just these
178:00 - files yeah so so now you get add all get
178:05 - status um and you only want to make sure
178:07 - that these files are green not all of
178:08 - them right so it's very very important
178:10 - to to do that so you want to make sure
178:12 - you're only committing these ones um uh
178:15 - and then what you want to do is you want
178:16 - to go back to those little commands and
178:18 - what we can do is we can just commit
178:20 - saying uh mean we don't have to use
178:22 - thematter that's that's perfect say tick
178:25 - talk server commit or something and then
178:29 - boom we committed it you want to go
178:31 - ahead and actually open up a new
178:34 - terminal before you do anything else
178:36 - okay uh because you want to see all the
178:40 - uh log so you can just type in Heroku
178:43 - logs DT right and that will just
178:47 - initialize all the log files or all all
178:50 - the logs of the deploy and this will
178:52 - allow you to easily see if there is an
178:55 - issue and if you go back to your other
178:57 - terminal oh nice okay uh yeah yeah yeah
179:02 - if you go back to your other terminal
179:03 - and type in get uh get push Heroku
179:07 - Master Okay so this Command right here
179:09 - guys get heru push master that is the
179:11 - last step to deploy our app and if
179:15 - everything goes
179:16 - well um
179:19 - we will be yeah and on the right side
179:22 - the build is going to be
179:24 - starting and we will be able to see the
179:26 - log of the build yeah this is awesome
179:30 - dude nice look at
179:32 - that
179:33 - yeah
179:35 - and there is an error so that that's why
179:39 - we need to see yeah it crashed for some
179:42 - reason um right so it said local package
179:45 - Json exists but node modules are missing
179:48 - missing did you mean to
179:52 - install um it should be
179:56 - installing oh
179:59 - it it got deleted for some
180:02 - reason let's go ahead and check out
180:05 - what's going on so we've got the package
180:06 - Jason here we've got the node modules
180:09 - over
180:10 - here um that's an error I've never seen
180:14 - no it's modules um and
180:19 - node
180:20 - modules um when pushing to Heroku let's
180:24 - go check this out
180:27 - yeah so deploy node Heroku apps so I
180:31 - mean I think it should by default
180:33 - actually go ahead and and push I mean um
180:36 - but I mean there may be something small
180:39 - here that we're
180:40 - missing
180:43 - um it says package.json unspecified
180:48 - okay so node
180:50 - modules package Jason remove the package
180:52 - lock file oh yeah oops there we go let's
180:55 - go ahead and do that uh and also I I
180:59 - think we need to actually go ahead I've
181:00 - already pushed it to the um the thing
181:03 - yeah you need to commit again and push
181:04 - it once again so
181:07 - get get a DOT yeah uh let say
181:13 - this let's just do have same commit
181:15 - let's just do a get push Roku
181:18 - there we go yeah so let's see what do we
181:23 - [Music]
181:25 - got well stuff like this happen yeah
181:28 - this is part of engineering exactly guys
181:32 - so you can see now we should see um it
181:35 - said build
181:36 - succeeded yeah it's starting
181:40 - okay crashed okay so it says mpm1 local
181:45 - package.json
181:46 - exists but modules are missing did you
181:49 - mean to install and there must there
181:50 - should be a little simple fix for this
181:53 - um I haven't worked much with Heroku
181:54 - before but I mean we can debug This
181:57 - Together guys so let's go ahead and
181:58 - check it out so local package Jason
182:01 - exists but MP okay so mpm stop uh let's
182:04 - just type in Heroku as well and if
182:05 - anyone does know the answer to this let
182:07 - us know in the comments below and we
182:09 - will go ahead and add that in so you
182:11 - need Prof file so let's go ahead and
182:13 - check it out
182:15 - [Music]
182:16 - so check out so you need to run mpm
182:20 - install before you can build the package
182:23 - I know that but why do we need to do
182:25 - that in how do we do that in proc file
182:28 - somebody said proc file so let's go
182:31 - ahead and check out what a proc file
182:34 - is the proc file in Heroku oh okay okay
182:37 - so proc file so we know that we need a
182:40 - proc file how do we add that in guys so
182:42 - let's go ahead and
182:46 - see add NPI
182:51 - script get
182:56 - add so in Heroku you can add a build
182:59 - step to mpm install Okay so let's go
183:01 - check that out
183:04 - so add a build step do you uh I haven't
183:08 - actually used Heroku much so let me let
183:11 - me check it let me check uh I'm going
183:15 - to check it out my her go on my
183:18 - end go for a dud this is an error I've
183:22 - never seen so so with the it's a it's a
183:26 - proc file without extension so run mpmi
183:29 - again this will save dependencies in
183:30 - your package Jason yeah so typically
183:33 - that's what we would do I know but as in
183:35 - in this case I don't think cuz we're not
183:37 - committing those things so he says in
183:39 - settings okay so let's check out in
183:41 - settings remove build packs certificates
183:45 - transfer
183:46 - mainship uh um uh do you have the nodejs
183:50 - build pack added nodejs so it's called
183:53 - No
183:54 - JS yeah it's got no GS build pack oh
183:57 - I've added duplicate now oops uh oh
184:00 - duplicate okay so yeah so push node
184:04 - modules along I mean we could push the
184:06 - node modules along just for the sake of
184:08 - the tutorial but I don't
184:11 - really yeah we could do that mean I mean
184:14 - okay I mean I don't really shouldn't
184:16 - really be doing that but terminal okay
184:19 - so run on Terminal Heroku run mpm
184:21 - install let's go give that a try Heroku
184:24 - run mpm
184:27 - install let's go ahead and see if that
184:29 - works okay so look running mpm install
184:31 - on Tik Tok man back end nice dude and
184:34 - there we go that was ready Dev so thank
184:37 - you so much dude that's awesome it goes
184:39 - up and complete up to complete let's go
184:42 - ahead get push Heroku let's go ahead and
184:44 - see oh right sorry oh no I did it right
184:47 - okay yeah
184:48 - it's done I think it's done dude that
184:50 - was insane that's what I love about this
184:52 - yeah don't push the no modules yeah do
184:54 - not do that you see even even we were on
184:57 - the edge because it it's like the demo
184:59 - gods are against us but um yeah that's
185:03 - awesome nice okay so now how do I get
185:05 - the um the URL so you have to so you
185:08 - have to go back to your Heroku and in
185:11 - this settings down there not not that
185:13 - one that's the get
185:14 - repo um yeah that's the link that you
185:17 - want to just go ahead and click and it
185:19 - should be saying hello world no it
185:22 - doesn't Okay so application error is
185:25 - what we get let's go ahead and check out
185:28 - the actual overview and resources maybe
185:30 - let's go ahead and see so it says this
185:32 - app is web mpm start on deployed today
185:36 - at
185:38 - 10:03 resources let's
185:46 - see and
185:49 - it's
185:51 - actually get push Heroku Master we've
185:54 - already done that okay so it crashed it
185:57 - crashed over here it says I think it
185:59 - said app crashed State changed from up
186:02 - to complete error app crash me get so
186:06 - crash when we tried to access something
186:08 - it says check your Heroku logs method
186:10 - get
186:12 - pass says
186:14 - 503 so which is strange
186:19 - let me check if we do this so let's go
186:22 - ahead and do let's go back
186:26 - to type in
186:28 - V1
186:31 - posts it's going to yeah it's 503 again
186:35 - even there okay yeah that that's why we
186:38 - have the I mean that was the half check
186:41 - API I mean I see a lot of people saying
186:43 - the environment variables guys oh the
186:45 - port oh yeah the port actually maybe so
186:50 - maybe the proc that shouldn't be an
186:52 - issue oh that that could be it because I
186:56 - mean like they might be setting a port
186:58 - number on their end which which we're
187:00 - not mapping to correctly so David I mean
187:03 - previously we usually do this right it's
187:05 - written like process environment port or
187:08 - 9,000 so in this case what we could do
187:10 - because it could be a local thing so
187:12 - let's carry on with that there and let's
187:14 - go ahead and and and add this one so so
187:16 - get add
187:18 - get
187:19 - status and then let's do get
187:22 - commit uh we don't want to commit the
187:24 - package lock right now just delete that
187:26 - for now um get status
187:30 - okay get add and let's just do get
187:33 - commit and let's just
187:36 - do just do fix bug or something and then
187:39 - let go get push her master there we
187:45 - go guys this is kind of cool because you
187:47 - guys can see um so Heroku doesn't let
187:49 - you assign ports beforehand okay so
187:53 - maybe that's why suceeded
187:55 - compressing yes it's compressing looking
187:57 - looking promissing now so it's starting
188:00 - build succeeded released version five um
188:03 - a damn it's a oh now we have now let's
188:07 - go and and install the the stuff yeah oh
188:11 - man there we
188:13 - go this is awesome though guys this is
188:15 - like debugging live with you guys which
188:17 - is kind of cool and I can see we still
188:19 - got half a thousand people watching so
188:21 - it is really cool to see that wa so it's
188:23 - up to
188:25 - complete and let's go and go back to the
188:29 - link that we just had the one that
188:32 - crashed uh in the browser and let's
188:34 - refresh application error okay so we got
188:39 - another one it say the code this time is
188:43 - h10 interesting oh it's 503 still
188:48 - okay I think what we'll do maybe wait
188:50 - create so somebody saying create de proc
188:53 - file web mpm start configure the mpm
188:55 - start script on package Json to start
188:57 - node server so let's go ahead and look
189:00 - at our package
189:01 - Json start nodejs server this one here
189:04 - is start nodejs
189:08 - server do not forget to install M config
189:13 - install M and require I mean I don't
189:15 - think we need m. config at this point it
189:17 - will install on herok if you specify no
189:19 - JS in package Jason like this yeah so
189:21 - maybe we need the engine specified
189:23 - because right now we haven't said the
189:26 - engine um so somebody actually dropped a
189:28 - really good comment there I'm just
189:29 - trying to grab it um before it goes so
189:32 - let's go ahead and let's let's use that
189:33 - let's go ahead and give that a try so
189:35 - thank you RAF so Rafel just said why
189:38 - don't you go ahead and try this so boom
189:41 - let's do that engines like this okay
189:44 - let's go ahead and give that a try mhm
189:47 - let's do get
189:50 - add and then let's go ahead and do boom
189:53 - boom boom get
189:56 - commit am let's just do book
190:00 - fix uh get push
190:03 - Roku master and then we're going to
190:06 - probably have to maybe I mean now I
190:08 - guess it should do so downloading and
190:10 - installing node bootstrapping mpm
190:13 - replacing something okay oh it's
190:16 - replacing that one oh I mean I guess
190:18 - like we could have maybe done a higher
190:20 - uh Higher One but it's okay
190:24 - so 503 unavailable server indicates the
190:28 - server is not ready to handle the
190:30 - request the server is either overloaded
190:32 - or okay so it might be actually the
190:34 - server down um wow that's
190:41 - strange yeah nice awesome so let's go
190:44 - ahead and do let's go ahead and check
190:46 - the logs and it's going down did you try
190:48 - and access it
190:50 - again
190:52 - um not yet uh I'll try
190:57 - to
191:00 - um just running and install again Ser is
191:04 - not down yeah so a lot of people are
191:05 - saying proc file on Route
191:10 - um yeah I mean if somebody can give aile
191:12 - and and a snippet of code maybe then
191:15 - yeah yeah
191:17 - go ahead proc
191:20 - file
191:22 - right so let's do this and let's go
191:25 - ahead and try boom so we're still
191:27 - getting the eror okay so I think at this
191:31 - point let's try and check it out
191:34 - so profile so somebody says paste that
191:37 - but uh they didn't actually give the
191:39 - code okay paste that PM PM run pm2 run
191:44 - server JS I mean use pm2 okay I mean
191:48 - let's try that let's give that a try so
191:50 - pm2 run Ser J and that's inside a Pro
191:53 - File they're saying so let's go ahead
191:55 - and give that a try pm2 run server JS
191:57 - and I just want to double check that
191:59 - guys pm2 run as in server JS obviously
192:02 - automatically restarts your application
192:03 - if it crashes digital ocean this is
192:06 - digital ocean guys I mean this is pm2 I
192:08 - don't know if this is going to work for
192:10 - what we're doing here I mean so a lot of
192:13 - yeah so some people saying don't use pm2
192:16 - like okay I don't really
192:17 - I mean this isn't really going to do
192:19 - much so let's go ahead and check what
192:21 - else is saying so create and then inside
192:23 - right
192:25 - web all right so somebody else gave a
192:27 - nice little suggestion he said create
192:29 - proc file text file then write web uh
192:32 - node
192:34 - server.js let's go ahead and give that
192:37 - inside it and a lot of people are saying
192:39 - that this is a bad choice and Heroku is
192:41 - a bad choice but guys honestly um like
192:44 - no it's not this is completely fine this
192:46 - is a case of like this happens this kind
192:48 - of stuff happens um let's go ahead and
192:51 - give this a try now yeah so this this
192:53 - happens and this is actually a good I
192:54 - actually glad because I think a lot of
192:56 - people do tend to think that there's no
192:57 - debugging and this is the reality of it
192:59 - so added proc
193:02 - file um oh oops I've added it in the
193:06 - wrong thing it should be inside of here
193:08 - there we go get add dog
193:11 - status and then we can see added Pro
193:15 - File and let's push that that guys to
193:18 - Heroku so say Heroku get push Heroku
193:21 - master and let's see how that goes
193:26 - guys yeah right so we're pushing it
193:32 - down no JS server is not running on
193:34 - Heroku I think that's what's happening
193:36 - guys you're right because if it's a 503
193:38 - it means the server is not ready which
193:39 - means it's probably not running so
193:41 - somebody is true like I think that
193:43 - that's a very good point
193:46 - [Music]
193:49 - right so
193:51 - says okay so it says starting process
193:53 - with mpm start hey oh no okay spoke too
193:56 - soon guys God damn it oh wait actually
193:58 - this is good this is good so it says
194:00 - module resolve esm resolve okay so now
194:03 - mod not found cannot find Express
194:05 - imported from App server it could it be
194:07 - that it's not ready for es6 because I
194:11 - just uh recreated the whole thing yeah
194:14 - uh and it's freaking out for me with the
194:17 - exact same stuff and it says uh the es
194:21 - module type is uh so so the es module is
194:25 - set to no so the es type is set to
194:29 - module and that just doesn't work out
194:32 - for it and it's crying about the import
194:35 - uh in and and not seeing uh
194:39 - require uh I'm just checking so it says
194:42 - cannot find Express imported from App
194:44 - server JS so let's check it out so
194:47 - Express okay so I mean maybe yeah maybe
194:49 - it could be a case of um I mean actually
194:52 - this is a good point we we specified in
194:54 - package Json uh an mpm and node module
194:58 - of six and I don't think it's supported
195:01 - in six in hero cool yeah yeah yeah so so
195:04 - like so let's do node import guys does
195:07 - anyone know what uh version nodes uh
195:11 - start supporting um import statements I
195:14 - think it's I was I think it's like 13 14
195:17 - so how can I use 14 so node 13 and above
195:21 - okay so node 13 and above so in this
195:23 - case let do 13 I don't know if they
195:25 - support 13 I'm going to push for it uh
195:27 - let's see yeah this is why that's that
195:30 - makes a lot of sense actually that makes
195:31 - a lot of sense uh get ad get
195:35 - status uh get commit
195:38 - am let's just say upgraded node yeah
195:44 - node upgraded and let's go and push
195:48 - um to
195:50 - Heroku yep and let's go and
195:56 - check and guys whoever is being negative
195:59 - in the chat you know I don't think like
196:01 - you guys have to be kind of realistic to
196:03 - what development is actually about so
196:06 - somebody somebody said unsubscribed I
196:07 - mean dude like that's cool you can do
196:09 - that that's
196:11 - cool like this is what actual this is
196:13 - what actual development looks like you
196:15 - know exactly and by you unsubscribing
196:18 - you will make our community healthier
196:20 - yeah so like this is this is what it's
196:22 - about this is a positive environment uh
196:25 - what we do we support each other so now
196:27 - what we're going to do is we are going
196:28 - to go ahead and do mpm in Heroku run mpm
196:32 - let's try and run mpm install again so
196:35 - her run mpm CU I think when we change
196:37 - the dependencies all the dependency tree
196:39 - might be messed up so an mpm
196:45 - install Okay so so it's up to complete
196:48 - nice and then let's go ahead and run mpm
196:52 - start
196:53 - MH and let's go ahead and check it out
196:56 - so mpm start and it's up local package
197:00 - Json exists but no modules um did you
197:03 - mean to install I mean I guess I just
197:05 - did install we can try
197:08 - again
197:11 - um hold
197:15 - Dam okay I mean I think what we might do
197:18 - in this case is actually just change it
197:19 - to the old style of importing without
197:21 - the es6 yeah that may be a good way to
197:24 - go just for this case but I mean like
197:26 - you know I it is really frustrating
197:28 - because like it would be cool to see how
197:30 - that works but you know what it's fine
197:32 - what we can do in this case is I think
197:33 - it's going to be an error on heroku's
197:35 - side look it is I think it is this um
197:38 - it's this support okay that's fine so
197:41 - what we can do guys I'm going to this is
197:42 - this is kind of cool like so we can
197:44 - actually show how to go ahead and get
197:45 - rid of this now so type let's go ahead
197:47 - and change this to so let's change this
197:49 - back to six let's get rid of that
197:51 - support there and what we're going to do
197:52 - now is actually go back into our code
197:55 - and I'm going to refactor it all to be
197:58 - the old style so what we'll need now is
198:01 - instead we will say con const Express uh
198:05 - equals
198:06 - require and I've got the Snippets uh
198:08 - here there we go okay you
198:11 - faster so we did the require so this is
198:14 - the sort of es6 syntax right so we can
198:16 - go ahead and drop that out and look
198:17 - loads of people find this cool this is
198:19 - this is awesome dude and there's over
198:21 - half a thousand people doing this with
198:22 - us so really really nice to see that uh
198:25 - and now what we're also going to do is
198:26 - we're going to change this so it's going
198:27 - to be const uh data equals going to be
198:31 - requir yeah
198:33 - require boom like this and then this one
198:37 - will be con
198:42 - require there we go nice uh so that's
198:45 - cool and then we also need to change our
198:47 - exports so like here I mean this one
198:50 - yeah we should really do this we should
198:52 - do like exports um exports how' you do
198:55 - it again is it exports. exports equals
199:00 - mongus model and then we go with Tik Tok
199:04 - videos wait wait wait we can't see what
199:07 - you're doing dude let's go over here so
199:08 - he sorry sorry sorry so uh so you're
199:11 - changing this one okay so module exports
199:13 - equals yeah yeah
199:17 - and then I just uh yeah so instead of
199:21 - yeah instead of export default I'm just
199:23 - going to say module. export and um Mong
199:27 - mango. model and everything is
199:29 - everything else is uh the same whoops
199:32 - and don't forget about the import up top
199:35 - which what about this one I think I
199:37 - think we this one we could do it like
199:38 - this right we could just do
199:40 - data uh what's up and and you see where
199:44 - I've got data uh data.js I think we can
199:47 - export like this oh yeah yeah yeah we
199:50 - just do a simple export like that and
199:52 - then db. model okay nice and then what
199:54 - we're going to do is just to test this
199:55 - out let's go ahead and
199:57 - do uh
199:59 - nodemon uh
200:01 - server.js app crash module not found and
200:04 - this is inside of server there so what
200:07 - is this freaking out now um cannot find
200:10 - module
200:13 - Express what the oh dude D oh my God I
200:18 - think I know why this didn't
200:21 - work whoa what's look in our package
200:23 - Jason we haven't got the dependency
200:28 - here what which means we never did mpmi
200:31 - Express oh my God okay let's let's try
200:34 - something now this is this is really oh
200:37 - somebody said that Bonito came said that
200:39 - oh my god look oh my God damn
200:43 - it okay I think yeah that was it so
200:45 - let's go ahead I'm going to try
200:46 - something cuz I'm I'm really sticking by
200:48 - my guns with this like what was it was
200:51 - it module I'm going to we're going to do
200:53 - this it was type module yeah let's go
200:56 - why not yeah let's do this cuz guys like
200:58 - we God damn it somebody said it somebody
201:01 - said it all right we we can do this we
201:04 - can do this guys let's go ahead and
201:05 - change this back to export default um
201:09 - but I mean like that's it like I think
201:11 - we all learn here like in a in a pretty
201:13 - crazy moment like you know like yeah
201:16 - let's go ahead and change this uh David
201:19 - I think this one should be import yep
201:21 - there we go and in server.js let's go
201:24 - back here and let's go ahead and get rid
201:25 - of this Pro File and ser DS there we go
201:29 - and uh I was actually going to just do
201:32 - okay we can do
201:36 - that on goose y there we
201:40 - go I'll just comment out everything else
201:44 - just to so it's there you know okay
201:49 - so I'm the kind of
201:52 - programmer there you go uh let's go
201:54 - ahead and and oh oops I'm running oh me
201:56 - oops I didn't mean that uh D nodon
202:00 - server.js so identify Express has
202:03 - already been identified let's just go
202:06 - ahead and drop this out here and then
202:08 - let's do it
202:11 - again why where is it got module is not
202:14 - defined in DB model DB model is okay yep
202:19 - yeah oh yeah there we go and it says
202:23 - address is already in use because I'm
202:25 - running it over here oops uh address is
202:28 - already in use am I running this app
202:30 - anywh else okay let's actually
202:32 - change I don't know error on change it
202:35 - to 8,000 yeah change it to 8,000
202:40 - okay oh I think I've got 8,000 actually
202:43 - in use do um esm module loader is EXP
202:46 - mental
202:47 - events okay just change it to
202:50 - 7,000 um I changed it to 880
202:54 - okay okay so so some reason it's it's
202:57 - like it's double starting it or
202:58 - something but
203:00 - um app and
203:03 - Port I mean I'm not running anything on
203:05 - aa oh process environment Port oops okay
203:08 - maybe that's
203:10 - why it shouldn't be shouldn't be it yeah
203:12 - let's do
203:14 - um let me just change it to some random
203:19 - a bad P oops you can't do that guys that
203:22 - that's a silly mistake he's like
203:26 - 81 right um that's that's weird that's
203:28 - strange I don't know why that's
203:29 - happening you have three terminals open
203:31 - I mean I don't yeah but guys I don't I'm
203:33 - not using that one I was using this one
203:35 - let's go ahead and cancel this that's my
203:38 - react app let's go ahead and try it now
203:41 - okay so I guess it was that oh strange
203:43 - the hell okay what the what the
203:47 - I mean this is all fun guys this is all
203:49 - fun we still have 560 people watching
203:51 - this is insane I'm glad you guys are
203:53 - enjoying this if you're enjoying this
203:55 - just drop a comment yeah exactly let us
203:58 - know get status and I think we should
204:01 - rename this video so building and uh
204:05 - debugging and fixing I know like it's
204:08 - it's cool though cuz this is a full
204:09 - stack build like is in what do so let's
204:10 - do let's go ahead and say fix uh let's
204:13 - just say fix Express dependency um sorry
204:15 - fix dependencies yeah fix dependencies
204:18 - uh and let's do get push to Heroku so
204:21 - get pushok
204:23 - master and this one and I'll just go
204:26 - ahead and open
204:28 - uh I'm going to go ahead and check the
204:30 - tail so
204:32 - something yeah yeah yeah okay build
204:36 - started there we go build starting a lot
204:39 - of people are enjoying this he goes
204:40 - Jason says big shout out to you both
204:43 - legit one everyday programmer goes to
204:44 - dude like now we're going through it
204:46 - together this is even when I'm building
204:48 - these clones like I run into a lot of
204:50 - debugging things it's just obviously
204:51 - when you do get stuck like it's a case
204:54 - of like it's kind of cool to be a to do
204:56 - this together so it says starting
204:58 - process yes dude starting to up that's
205:01 - what I'm talking about let's go guys let
205:05 - oh
205:07 - man somebody just donated as well deack
205:10 - Pandit pleas L your spirit guys that was
205:13 - insane thank you thank you let's go guys
205:18 - let's see in Chrome hey oh okay internal
205:22 - server error let's check why let's check
205:24 - why uh 500 so a 500 for the forward
205:28 - slash just check why I so we've got a
205:31 - get headers it not is not a function
205:35 - what do you mean wait where did you
205:37 - where are you getting that I can't see
205:40 - uh it's in the log it was in the
205:44 - log uh okay let's check
205:46 - so now let handle let's go ahead and
205:49 - check out so this is the thing we do V1
205:52 - D V1
205:56 - posts yeah internal and let's go ahead
205:59 - and check the actual um so 500 inant Ser
206:03 - eror Network so at least okay so we made
206:06 - we made progress CU it did definitely so
206:08 - it's pushing that now post gets 500 I
206:12 - mean it's not giving me
206:14 - much it's
206:17 - check if
206:18 - V okay that there there's something
206:21 - weird thing going on in the
206:25 - invitation okay
206:27 - so
206:29 - um no I I I I think I know what the
206:32 - issue is I think it's because I wrote it
206:36 - in
206:37 - plural resda uh let's see if if it pops
206:41 - up with my intellisense but yeah it's
206:45 - because it's plural okay it was one
206:47 - single letter so when you are uh
206:50 - defining your middle
206:51 - Wares uh you should see it set header in
206:56 - singular without the S at the end right
206:59 - oh do we have set
207:00 - headers yes oh okay okay yeah that was
207:05 - probably the reason oh here it is David
207:07 - yeah you're right look type error set
207:09 - headers is not a function okay nice yeah
207:12 - yeah dude that's cool man I mean like
207:14 - it's a it's a huge learning curve yeah
207:15 - that's nice nice exactly okay so let's
207:18 - go ahead and do uh get ad
207:22 - Doom uh whoa we just got another 5
207:25 - donation keep it up guys I love this
207:27 - guys this is insane this is like respark
207:29 - like a fire this is awesome thank you so
207:31 - much guys um I mean all these tutorials
207:35 - are like everything is working perfectly
207:38 - and there is no error but at the end of
207:40 - the day the the the real truth is that
207:44 - coding is 90% % writing the actual code
207:47 - and then the other 90% is debugging yeah
207:51 - it is definitely
207:53 - yeah like you you will run into these
207:56 - things a lot guys and it's it's an
207:58 - exactly and like we showed here like you
208:00 - it can be very easy even when it's an
208:01 - experience developer to start to lose
208:03 - heart um um but like and I see some
208:06 - people saying you should use like cause
208:07 - modules yeah we should but it for the
208:09 - sake of the tutorial we keeping it very
208:11 - very simple um nice though dude I mean
208:15 - like this is cool cuz even like I
208:16 - haven't used this in quite a while uh so
208:18 - Heroku is pretty cool to see this um
208:21 - guys we are at $96 in chat Revenue
208:23 - that's insane thank you so much yeah
208:26 - that is
208:27 - awesome uh okay so now it's starting mpm
208:31 - start again it started on Local Host
208:34 - 85 nice and let's go ahead and check it
208:37 - out let's go back to okay so it got V2
208:41 - post replied empty hello world came in
208:45 - whoa
208:47 - it's working let's go man let's go ahead
208:49 - but V1 post let's see V1 post okay so V1
208:53 - post gave it back that's awesome that is
208:55 - amazing right that's that is yes
209:00 - guys thank
209:02 - you that's what we need that
209:06 - little oh guys oh sorry so somebody
209:08 - actually gave a Super Chat he goes you
209:10 - miss you guys are rocking thank you so
209:11 - much dude whoa this is all coming in
209:14 - Jason Francis goes let's go
209:17 - just dropped another fire donation let's
209:19 - go guys this is insane holy crap the
209:22 - energy
209:24 - wow oh man thank you thank you oh man
209:28 - this is so jokes okay
209:32 - so all right so now this is the kind of
209:34 - community that you want to see
209:36 - right yeah I know right like this so V2
209:41 - so V2 is not working okay so that's
209:42 - that's interesting V2 is not in working
209:44 - so V2 is actually when we do a get post
209:48 - saying find okay so maybe actually David
209:51 - it it might be to do with the fact that
209:53 - we're not passing the yeah yeah but I
209:56 - mean what we could do what we could do
209:58 - to test this is we can actually run this
210:00 - on the local so we can say here let's go
210:02 - ahead and do nodon
210:04 - server.js like this and then what we can
210:07 - do is listenting on Local Host 9000 so
210:09 - let's go ahead and do Local
210:11 - Host
210:13 - 9,000 V2 poost and double check so this
210:16 - is emptying a this is a return of an
210:19 - empty so let's go ahead and check it on
210:21 - on here we see okay so I don't think at
210:24 - this point there's actually there might
210:25 - not be let's go ahead and double check
210:27 - the
210:28 - database so Tik
210:31 - Tok cuz that's super strange I
210:34 - think what's up that that's uh super
210:37 - strange that that's actually come up oh
210:40 - David look somebody's actually the
210:42 - database is gone so maybe
210:46 - H
210:49 - interesting guys I mean if somebody went
210:52 - if somebody went in and did that I mean
210:54 - like let you know give us a break come
210:56 - on I think I think I think somebody
211:00 - could have did
211:01 - that
211:03 - cuz I wasn't expecting that we'd be
211:05 - debugging so somebody could have just
211:06 - gone in and done that but I mean you
211:09 - know it's all good this look good let's
211:11 - go ahead and let's just post yeah
211:13 - actually let's go and post it yeah
211:15 - somebody's definitely gone ahead and
211:17 - done that I think cuz I was wondering
211:19 - that's what happens if you don't secure
211:21 - your end points yeah guys I mean that's
211:23 - it you just saw security it's it's funny
211:26 - somebody go oh man funny what did you do
211:30 - oops I have no idea there we go
211:32 - description she has this is a true
211:35 - programming like this is an experience
211:37 - today guys this is an experience uh
211:40 - let's try this one out
211:43 - here and then boom and then just
211:50 - quickly I mean like guys it's don't do
211:53 - anything to database cuz if you do like
211:55 - I mean I can just I can I can just block
211:58 - the IP addresses and it ruins everyone's
211:59 - fun you know like so let's go ahead and
212:02 - get this boom and now let's go ahead and
212:05 - make that request on
212:07 - our boom there we
212:11 - go Works uh whoa there we go just Bo
212:17 - everything and let's check the Heroku
212:19 - version there we go guys so our server
212:22 - is up and running guys I think that was
212:25 - pretty dope that's pretty dope you know
212:27 - that was pretty fun yeah yeah now that
212:30 - was such a huge
212:31 - run oh man I mean like I think I think
212:34 - everyone like we made it in the end we
212:36 - just hit 33,000 playbacks as well um and
212:40 - guys like if you if you thought that was
212:42 - if you thought that was insane and we
212:43 - made it in the end smash the thumbs up
212:44 - button that was a true live debugging
212:47 - experience you know like that was a
212:49 - really really good one okay so guys with
212:51 - that said now we have the backend up and
212:54 - running it's deployed and it's in Heroku
212:56 - right so it's literally sitting at this
212:57 - end point now so this one right here is
212:59 - sitting there so what we can do now is
213:01 - we can actually go ahead to our front
213:03 - end again so let's go ahead and close a
213:05 - bunch of stuff let's go back to our
213:07 - front
213:07 - end uh app.js let's go so here we had
213:11 - the video being pulled in right here
213:13 - right now uh um that was actually true
213:17 - you know somebody said
213:19 - um uh where is it first ever in my life
213:23 - I saw a live example of security yeah
213:25 - like that was that was an open case
213:27 - there where like if you if you leave it
213:28 - open yeah go there is a hacker Among
213:34 - Us oh who's the hacker yeah I love this
213:38 - guys and the view account's coming off
213:40 - this is insane yeah oh
213:43 - man right so now what we're going to do
213:45 - guys is we are going to make a use
213:47 - effect because a use effect is basically
213:49 - when we want the app to when the app
213:50 - initially loads what we want to do is
213:53 - actually create a like a fetch from the
213:56 - the database but before we do that what
213:58 - we're going to do is we're going to
213:59 - create an um we're going to use
214:00 - something called axios so a lot of you
214:01 - guys what axio is I'm going to go back
214:03 - over to my uh let's go back over to this
214:06 - terminal let's go ahead and go back into
214:09 - our Tik Tok build there we go so we're
214:11 - back inside our front end Tik Tok and
214:13 - I'm going to go ahead and do mpmi uh
214:15 - oops I can't you guys can't actually see
214:17 - whoa damn dude just got 10 P dollar
214:20 - donation thank you so much for your time
214:23 - I'm learning a ton from omed n dude
214:26 - thank you that's
214:28 - insane thank you dud so much yeah yeah
214:32 - that's amazing dude thank you so
214:34 - much um somebody said what is Sunny's
214:37 - personal channel name it's just Sunny
214:38 - sang on YouTube by the way so if you
214:40 - want to follow go ahead I just hit a th
214:42 - subscribers not bad so wow yeah I know
214:46 - right yeah thank you dude uh so let's go
214:49 - ahead and create an axios JS right so
214:51 - axios JS oops axos JS and here what
214:56 - we're going to do is underneath we're
214:57 - going to do mpmi and axos so in the
215:00 - bottom I'm going to make this a bit
215:01 - bigger for you guys to see mpmi axos at
215:05 - the bottom and this will actually go
215:07 - ahead and pull axios into the uh the
215:09 - project right axio is a good um Jason
215:13 - follow thank you so much
215:17 - um yeah so live debugging was I think
215:19 - that was actually really cool David I
215:21 - think like I actually learned a bit
215:23 - myself as well like that was pretty cool
215:25 - that was intense me too dude yeah that
215:27 - was intense dud we should have had some
215:28 - like music you know like yeah I mean I
215:32 - mean it's definitely a real world uh
215:35 - exam I mean it couldn't get any more
215:37 - real world yeah honestly exactly yeah
215:40 - yeah now we just added axos to the
215:43 - project so what we're going to do now is
215:44 - we're going to say import axio from
215:46 - axios and here what we're doing is we're
215:48 - saying we're creating an axios instance
215:51 - and we're exporting it so we can use it
215:53 - outside and then here the base URL so a
215:57 - lot of people would say you can use
215:58 - fetch I agree but there's a reason why I
216:00 - kind of want to show you this axio way
216:02 - because I do like the base URL stuff um
216:04 - so I just want to show you guys this and
216:06 - yes you can use Fetch and you can reduce
216:07 - the number of dependencies that's a good
216:09 - point by Jason Francis um so he just
216:12 - choed in here thank you um so what we're
216:14 - going to do now is we're going to change
216:15 - the base URL to actually be the base URL
216:18 - of this one so let's go ahead and grab
216:21 - our Heroku deployed base URL so this one
216:23 - here and guys like you can see that
216:25 - that's now going to be the base URL
216:27 - right so what it means is like when we
216:29 - use use effect is essentially a hook
216:32 - which is going to get fired off and what
216:33 - it allows us to do is it says when the
216:34 - app component loads um go ahead and run
216:38 - this code and we only want to run it
216:40 - once in this example right so we're
216:41 - going to leave the dependencies empty so
216:44 - when app component loads go ahead and do
216:46 - something and what we're going to do
216:47 - inside of here is we're going to say um
216:51 - let's go ahead and say uh a wait so so
216:54 - what we actually need to do is we need
216:55 - to do an asynchronous function inside of
216:57 - it so the way you do an async inside of
217:00 - a use effect is you say a sync function
217:05 - and then let's go ahead and say fetch
217:06 - post so this is going to make an API
217:08 - call to the back end and then here we
217:11 - say uh const request so let's just go
217:14 - ahead and say const request Quest or
217:16 - actually this would be the response
217:18 - really I guess the response yeah equals
217:21 - a weight and then we're going to say
217:23 - axos doget and then let's go ahead and
217:26 - pull from the V2 so not this one sorry
217:29 - V2 posts right remember V1 was our local
217:33 - V2 is our actual mongod DB with two post
217:36 - and then what actually I don't think you
217:38 - have imported xos by the way oh yeah I
217:41 - haven't no sorry yeah so don't do this
217:42 - guys this is a bad thing what you want
217:44 - to do is not this one this is pulling
217:46 - from the actual thing you want to go
217:47 - ahead and do it from our local axios
217:50 - because that one we the difference
217:51 - between the two is I think it's uh it's
217:53 - uh super important to understand so if
217:55 - you do not add the dot slash uh that
217:59 - means you are importing the actual
218:00 - dependency but this way you will be
218:03 - importing the instance that you just
218:06 - created right exactly exactly yep so
218:09 - very very important uh cuz otherwise you
218:12 - would be getting the um you wouldn't
218:14 - actually be doing the um you w using the
218:17 - base URL we just got
218:19 - another other stuff to debug yeah we got
218:22 - another five by Calvin caber he says
218:25 - first time watching just started
218:26 - learning how to code most of the
218:27 - terminology going over my head but I
218:29 - don't want to leave my seat keep it up
218:30 - guys honestly dude pattern recognition
218:33 - yeah thank you so much firstly and
218:34 - pattern recog even the fact you're
218:36 - watching this I'm telling you like it
218:38 - will slowly drip feed into you and
218:40 - you'll start to understand different
218:42 - you'll start to see patterns across
218:43 - different things like how a function is
218:45 - written and so forth just your You by
218:47 - you being here is the best thing that
218:49 - you could be doing for yourself so thank
218:50 - you so much for that donation we
218:52 - appreciate you here what we're going to
218:54 - do guys is when we get back the uh the
218:57 - response we're going to create a piece
218:58 - of state to actually go ahead and store
219:00 - the videos so we're going to say videos
219:02 - and then we're going to say set videos
219:05 - and here we're going to say use State
219:07 - and we're basically going to go ahead
219:08 - and initially just have an empty array
219:10 - okay empty array and here what we're
219:12 - going to say is set the videos to to be
219:16 - the response. data because remember the
219:19 - data comes back inside of that response
219:21 - so that that would be where all of those
219:23 - that list of items comes back as um so
219:27 - we're going to go ahead and do that uh
219:29 - and I'm going to just going to drop this
219:30 - down so you guys can see and then what
219:32 - we're going to do is we're going to say
219:34 - return request so just this return
219:36 - request will just stop the function from
219:38 - from firing so there we go we can just
219:40 - return the request end that's the
219:42 - cleanup process is is that correct uh I
219:45 - think so yeah so in this case we'll say
219:46 - fetch post to actually call the function
219:49 - so this is the async function and then
219:50 - we're just saying fetch the post right
219:53 - so that will work really nicely uh some
219:55 - people are saying why do you never use
219:56 - class-based components because the new
219:58 - way of writing components is uh
220:01 - functional and it's trust me it's so
220:03 - much better um yeah so so you want to be
220:06 - doing dropping the this word yeah that's
220:09 - and to it is a kind of a handy skill to
220:11 - be able to refactor class based to
220:13 - functional um but but definitely do
220:16 - functional if you're writing fresh
220:18 - components um okay so this means that
220:20 - now we should be getting the video so if
220:22 - I do console log and I do videos so now
220:25 - what we should see is when we run the
220:27 - app so let's go ahead and go to our
220:28 - Local Host
220:30 - 3000 where we're running the app so it
220:32 - says wre is not defined on 14 so Rec is
220:36 - not defined on 14 so this one here is
220:38 - response that's why oops my bad so now
220:41 - we can see we've got this so it's
220:44 - actually working see the array initially
220:45 - a zero and then we get an array of four
220:47 - so some people are pushing stuff into
220:50 - the the okay thank you guys we got a
220:54 - hacker Among
220:55 - Us what yeah somebody says fix the
220:58 - security flaw okay I mean like so that's
221:01 - cool and then we've got this and then
221:03 - what we're going to do is we're going to
221:04 - say rather than rendering out these
221:06 - videos like this let's go ahead and get
221:08 - rid of this we're going to go ahead and
221:10 - do the following guys we're going to say
221:12 - videos. map and we're going to say for
221:15 - every every single video return me a
221:18 - video object right with the following
221:21 - props and I've actually done saved us
221:23 - the hard work here and what we can do is
221:24 - we can destructure the video at this
221:26 - point so we actually break apart the
221:28 - video and we can actually get all of the
221:30 - different properties from the video so
221:32 - that the URL Channel description song
221:34 - likes messages and shares and what we
221:36 - can actually do is go ahead and pass
221:38 - those in as props here and to make
221:42 - things very clear what we can do is we
221:43 - can go ahead and delete the hardcoded
221:46 - stuff and now what we should see is this
221:48 - is all the information from the database
221:51 - right so let's go ahead and refresh and
221:54 - you can see this where it becomes full
221:56 - stack hey look at that
221:59 - hello oh so so this I mean somebody
222:01 - probably posted some like dummy data
222:03 - here but like something that doesn't
222:04 - work yeah somebody changed stuff is
222:07 - working yeah David is a champ hey
222:16 - nice so that's awesome guys this is
222:18 - actually fetching from mongodb right
222:20 - now yeah yeah somebody goes J JK don't
222:24 - fix your floors okay so I mean we are we
222:28 - are somebody is messing around with the
222:29 - database but I mean it's fine right now
222:31 - like as then this is going to be empty
222:32 - one but guys you can see right now that
222:34 - this is actually going ahead and
222:35 - fetching from the database right now
222:37 - which is awesome right so that's
222:40 - actually fetching from the database we
222:41 - have all of this work right now and guys
222:43 - what's amazing here is that like this is
222:45 - is actually working
222:46 - completely um by using an Heroku
222:50 - endpoint so this is actually a Heroku
222:51 - endpoint um that's actually live and
222:54 - we're pulling data from it and I guess
222:56 - David at that point what we need to do
222:58 - now is deploy this app exactly exactly
223:02 - yeah let's go yeah so let's do it dude
223:04 - now is yeah yeah now is the time to go
223:08 - with the Firebase right yep so Firebase
223:11 - guys if you're excited let me know just
223:13 - smash that thumbs up button I mean like
223:15 - can we get another 100 likes I don't
223:17 - know I mean you guys you know can we can
223:19 - we do that yeah it would be nice I mean
223:23 - let's just set up everything uh and just
223:26 - stop right before deploying let's do it
223:28 - so this case what we're going to do is
223:29 - we're going to say Firebase in it so
223:31 - firstly in order to get Firebase tools
223:33 - working I actually need to do it on this
223:35 - computer cuz it's a fresh computer so to
223:37 - install the CLI what you need to do is
223:39 - go to um Firebase let's go to Firebase
223:42 - I'll show you guys the step to do this
223:44 - so you want to go to to the console go
223:46 - to the project that we created earlier
223:48 - so in this case the Tik Tok clone and
223:50 - then what you want to do is go to this
223:52 - one here the web and you want to
223:53 - register your app so here I'm going to
223:55 - say Tik Tock clone also set up Firebase
223:58 - hosting yes and register the
224:01 - app and then what you want to do
224:05 - is you want to skip this one you don't
224:07 - care about that this one here mpm
224:09 - install Firebase tools now you're
224:11 - probably going to want to do Pudo before
224:12 - it because when you install anything
224:14 - globally you actually do usually need
224:16 - admin privileges so in this case you are
224:20 - going to go ahead and do that and we oh
224:23 - we did hit over $100 in chat Revenue by
224:25 - the way guys we hit
224:27 - $119 at the moment that's
224:29 - amazing and 34,000 playbacks oh damn
224:34 - dude jeez so that's so cool and we got
224:37 - 2200 uh likes yeah 2200 likes insane
224:41 - love that so now we added five
224:45 - actually sorry sorry to interrupt you uh
224:48 - there is a question from Muhammad uh so
224:52 - I don't think you can host your node
224:54 - server on Firebase but there is a thing
224:57 - called Firebase functions which is
225:00 - almost the same thing right so you can
225:02 - create
225:04 - um uh AP in points on Firebase yeah and
225:08 - I actually really recommend this guys
225:09 - and I will be doing a video on this
225:11 - because I'm a huge fan of Firebase Cloud
225:13 - functions for loads of internal tools me
225:15 - and kazy do it they're super secure
225:18 - there there's a lot of like they're also
225:19 - serverless they scale up and down so it
225:22 - follows a micro service architecture so
225:24 - extremely powerful extremely extremely
225:27 - powerful also because they're on Google
225:29 - servers you don't have to mess around
225:31 - with the security access which means
225:33 - because that function is going to be
225:35 - fired off in a safe environment so
225:37 - you're never going to get some
225:38 - entanglement so if you do interact with
225:39 - data you can do it in a safe way yeah I
225:42 - mean I if if something gets there then
225:46 - uh Google is in some real problem yeah
225:49 - exactly yeah like if yeah I mean we're
225:51 - all in problem if if Google's getting
225:53 - hacked so awesome so with that said now
225:57 - what we're going to do is we're going to
225:57 - say Firebase init and this will actually
226:00 - go ahead and we just got another $5
226:02 - donation thank you dude that was from
226:05 - Carl fertil he goes we guys are the best
226:09 - and I learned so much I appreciate that
226:11 - dude thank you so much for the $5
226:13 - donation 124 in chat Revenue awesome so
226:17 - look it says failed to authenticate so
226:18 - we need to do Firebase login go ahead
226:21 - and do that and it will go ahead and say
226:22 - pop up so we can just say yes and then
226:25 - let's go ahead and log to your account
226:27 - that you set up on make sure it's the
226:28 - correct account click allow and then
226:30 - just like Heroku it will log you in then
226:33 - you want to do Firebase
226:35 - inip and here what we're going to do is
226:37 - we're going to go down to hosting hit uh
226:39 - space
226:40 - bar and then we're going to S click on
226:42 - use an existing project and here I'm
226:44 - going to go down to the Tik Tok clone so
226:47 - the Tik Tok clone oh God damn it I've
226:49 - got loads of them
226:52 - oops which Tik Tok which Tik Tok is the
226:55 - question yeah let's go ahead and check
226:57 - where is the ID project settings this
226:59 - one is e65 29 so E6 529 e652 there one
227:05 - there we go now here guys is very
227:07 - important you want to do build right so
227:09 - build is what you want to have here so
227:11 - you want to type in build and then you
227:13 - want to redirect yes because every react
227:15 - app is a single page app and now what
227:17 - you want to do guys that set up Firebase
227:19 - right so now what you do is you do mpm
227:21 - run build and what this will do is it
227:23 - will create an an optimal build of
227:27 - Firebase right so no of of react Sor of
227:30 - the react build it will strip out all
227:31 - the developer tools like the hot
227:32 - reloading all of those things and then
227:35 - it will actually go ahead and it will
227:36 - make it super streamline so it's very
227:38 - fast and optimal because that's what you
227:39 - want to do when you're actually
227:41 - deploying something um you want to kind
227:43 - of strip it of all the things you don't
227:45 - need so that the app is just super fast
227:47 - right now after that what we're going to
227:49 - do is say Firebase deploy now I'm not
227:51 - going to hit enter yet let's get you
227:53 - guys pumped up yeah so I still see we
227:55 - have just under half a thousand people
227:57 - guys if you're excited for this and
227:58 - you've enjoyed this just let us know in
228:01 - the comments right now if you're ready
228:03 - to deploy this app and and then we can
228:05 - go ahead smash the enter button and also
228:07 - if you haven't already smash the thumbs
228:09 - up button for the channel um yeah
228:13 - exactly and guys if you haven't already
228:15 - and you're watching and you're still
228:16 - with us yeah if you're still with us and
228:18 - you survived that intense debugging
228:20 - session let's go ahead and shoot an
228:22 - Instagram story and let us know that
228:23 - you're still watching and tag me and
228:25 - David in um at the bottom and that would
228:27 - be awesome because like this this was an
228:29 - intense build this is an intense build
228:32 - nice so you can see a lot of people hey
228:33 - that's it let's go everyone's flying in
228:35 - we got ready Dev we have so many people
228:37 - and guys this is awesome because I saw
228:39 - so many of you guys in the beginning of
228:42 - this of this stream and I still see you
228:44 - guys are here so like amazing stuff like
228:46 - we got loads of people dropping comments
228:48 - let's go ahead and do it Firebase deploy
228:51 - and it will be live in five four four
228:57 - three two two
229:00 - one and we're live look at that dude
229:04 - nice I'm going to go ahead and drop this
229:07 - in the chat for you guys to go ahead and
229:09 - see boom and let me go actually and
229:11 - check it it actually works in the first
229:12 - place so let's go to the app Tik Tok web
229:15 - app and we should see hey it's loading
229:18 - nice dude I can't promise whatever's
229:20 - going to be up here is going to stay up
229:21 - here but thank
229:24 - you there's going to be new stuff added
229:26 - every time yeah this is awesome this is
229:29 - so cool guys so we just deployed an app
229:33 - using um Firebase hosting which has
229:36 - which communicates with a uh node.js
229:40 - Express back end which is connected to
229:42 - mongod DB and we're hosting that on Roku
229:45 - right so I mean David like that's pretty
229:47 - cool right like we just done a lot of
229:49 - stuff in one
229:50 - build yeah exactly and guys I think this
229:54 - is a first ever M uh build on this
229:57 - channel
229:58 - yeah and actually let us know in the
230:00 - comments if you if you liked it and if
230:03 - you enjoyed Arturo definitely liked it
230:05 - he just said Bravo €1 donation dude just
230:10 - took us 136 thank you so so much Arturo
230:14 - that is a huge donation massively
230:17 - massively appreciate that wow that's
230:19 - insane dude thank you so much yeah oh
230:22 - man damn it dude this is so cool like as
230:25 - in guys like if you found something if
230:27 - you if you thought this was really cool
230:29 - just like again if you haven't already
230:31 - all we ask is just hit that thumbs up
230:32 - button so this video can go out to more
230:33 - people we're just under 35,000 playbacks
230:36 - so this is amazing the support that
230:38 - we've had from you guys um yeah so today
230:41 - we pretty much just to reiterate we
230:43 - built the Tik Tok clone in react used
230:46 - material UI for the designs we have the
230:49 - entire app hosted on Firebase hosting
230:52 - and then we went ahead and built a
230:53 - completely separate backend uh which was
230:56 - completely hosted um on Heroku and that
231:00 - was making use of mongodb so we have an
231:03 - online database uh we went through a
231:05 - live intense debugging session with you
231:08 - guys uh so you guys got to experience
231:10 - what it was actually like being a
231:11 - developer jel brusa just said thanks sun
231:14 - and David that was a roller coaster that
231:16 - sure was a roller coaster dude and that
231:18 - was awesome uh yeah exactly and um this
231:23 - will be live on the channel um we will
231:26 - we can definitely post the code if
231:27 - anyone wants to on GitHub and guys while
231:30 - you're here like what I want to say is
231:32 - if you're if you're here and you're spin
231:33 - with us this whole time like I just want
231:36 - to shout out one thing and say guys if
231:38 - you find this call and you really do
231:39 - enjoy this kind of content then be sure
231:42 - to be at the uh um I'm just trying to
231:45 - find the link for it uh let me go ahead
231:48 - and check if I've got the challenge yeah
231:51 - yeah be sure to go ahead and join the
231:53 - the fight the coding challenge guys
231:55 - because honestly this is a free coding
231:57 - challenge starting Monday and guys it's
232:00 - just so much value to you guys in one
232:03 - week and it's free right it's completely
232:06 - free um thank you so much J he says I
232:09 - can't donate my country but these guys
232:10 - have all the love and support from these
232:11 - Beast thank you for free knowledge DAV
232:13 - and sunny welcome bro my friend thank
232:16 - you so much um yeah and David like what
232:19 - have you got to say about the the the
232:20 - JavaScript CH especially since that you
232:22 - came from a challenge yourself right
232:24 - exactly so literally you will have an uh
232:28 - an application that will actually
232:30 - attract attention so these kind of
232:34 - challenges this is free value and you
232:37 - will get to meet so many awesome people
232:39 - and you will have such an awesome uh
232:44 - thing on your portfolio like it it's
232:46 - going to be a perfectly well-designed uh
232:50 - application that you can already put on
232:52 - your portfolio alongside with these
232:54 - clones but this could be like the one
232:57 - that you uh post everywhere because this
232:59 - is going to have if I remember correctly
233:02 - it's going to have stripe integration
233:05 - yep it's going to have strip integration
233:07 - it's going to be huge build guys like I
233:09 - I'm going to really deck this one out so
233:11 - you I'm actually thinking of joining
233:13 - because why not yeah yeah dude like even
233:15 - the current students I'm telling them
233:16 - everyone get involved in this challenge
233:18 - also I just saw that rvon Duman just
233:20 - said I just signed up is that I think if
233:25 - you can just literally when you sign up
233:27 - go to slack and drop me a message and
233:28 - I'll jump on a call with you dude so let
233:30 - me know if you signed up um yeah that is
233:33 - awesome yeah guys actually let's meet
233:35 - there yeah exactly really yeah that's me
233:40 - that's like honestly just send a message
233:41 - on slack if you join um so a lot of
233:44 - people saying can you post the link here
233:46 - uh for the app or oh for the actual
233:48 - challenge yes that's a very good can you
233:51 - actually drop it in the comments so I'm
233:53 - just dropped it inside the comments
233:55 - right now guys go ahead and check the
233:57 - link right now um and make sure you go
234:00 - over to it right now guys let me know
234:01 - right now actually go ahead and go sign
234:03 - up to it right now we still have nearly
234:05 - half a thousand people watching I want
234:07 - every single one of you guys if you
234:09 - found value from this go over to that
234:10 - challenge right now and sign up to it
234:13 - because honestly completely free like as
234:15 - in we're not pushing a sales thing here
234:16 - like it's completely a free it's a free
234:19 - challenge and the reason why is because
234:21 - I'm really really am like passionately
234:23 - putting everything into this Challenge
234:25 - and you guys love the content we deliver
234:27 - on this YouTube channel uh you love the
234:29 - live streams so let's go guys that's
234:31 - what we're talking about we want to keep
234:32 - the energy High we want to get
234:34 - everything sort of Pumped up a lot of
234:35 - people asking where it is the link is in
234:37 - the description I just um also dropped
234:40 - it in the chat um the link for the app
234:43 - was actually somewhere a little bit
234:44 - further ahead but I can go ahead and
234:46 - drop that in the Des in the chat again
234:49 - so I just did that we've got Serge cosy
234:51 - we have P Jane we have um yug nice dude
234:57 - loads of people signed up we have mega
234:59 - alond nice guys I would look forward to
235:01 - seeing every single one of you guys in
235:04 - that challenge it's going to be awesome
235:06 - it's going to be homework every single
235:07 - day in that build it's going to be fun
235:09 - it's going to be a lot of fun um yeah
235:12 - David how do you feel about your first
235:14 - live
235:15 - session oh it was super intense it
235:19 - didn't go as planned but I think at the
235:22 - end of end of uh the whole session it it
235:25 - it went all fine dude I have to I have
235:28 - to disagree I think it went better than
235:29 - planned I think guys I think the whole
235:32 - watch that that is actually correct yeah
235:35 - yeah it was like it couldn't get any
235:38 - more real world and the the the big uh
235:42 - issues always occur
235:44 - when when you will be like oh it's
235:47 - almost done it's almost done that's when
235:49 - the second 90% kick in
235:52 - y exactly sing yeah exactly and being in
235:56 - part of a strong Community is going to
235:57 - make all the difference a Frey rman says
236:00 - we get to talk to you guys guys in
236:02 - profit with JavaScript you can talk to
236:03 - us as much as you want you can pretty
236:04 - much jump on a call with me if you want
236:06 - to like I jump on calls with students
236:08 - all the time um and even when debugging
236:11 - problems come up I just literally jump
236:13 - on a corn we just debug like so
236:14 - literally what you saw today that's
236:16 - that's actual coding guys that actually
236:18 - happens your guest just joined the
236:20 - challenge welcome guys welcome dude and
236:22 - I look forward to seeing you in the chat
236:24 - um challenge next week um this is
236:27 - awesome guys this is really really
236:28 - awesome uh we will push the code to
236:31 - GitHub and we will sort of add that to
236:33 - the description but otherwise I think on
236:36 - that note I think David I think is any
236:39 - final things to say otherwise I think we
236:40 - should wrap up with that said yeah yeah
236:43 - yeah yeah
236:45 - um I think yeah just guys just join the
236:49 - challenge yeah that's all I can add yeah
236:51 - and rvan says you guys have a slack
236:53 - Channel yes we do there is a there is a
236:55 - clever program slack Channel where
236:57 - everyone communicates I can actually go
236:58 - ahead and show you right now actually
237:00 - let me go ahead and show you guys the
237:01 - community inside a profit with
237:03 - JavaScript very quickly before we wrap
237:04 - up so this is actually the chat right
237:07 - now so if I go into the um let's go
237:11 - ahead and open up the C programmer
237:13 - challenge it's go ahead and do this
237:15 - profit JavaScript so you can guys can
237:16 - see here we've got nearly 1500 members
237:18 - inside of this community right now and
237:20 - guys it's booming like you guys can see
237:22 - look like uh even someone's actually
237:25 - went through David's session yesterday
237:26 - on a coaching call and they're actually
237:28 - helping each other out so like this is
237:29 - what I'm talking about this is the kind
237:30 - of community that you will be a part of
237:33 - if when if you join profit with
237:34 - JavaScript guys like it's just so
237:36 - positive so uplifting we have everyone
237:39 - who's like literally the new joiners
237:41 - pretty much go ahead and introduce
237:42 - themselves so you can see we have people
237:44 - joining from all over the world like for
237:47 - who have played like who have have been
237:49 - coding from young people who are very
237:51 - fresh in the in the journey and guys we
237:53 - teach you and and show you how to make
237:55 - money okay so it's really really going
237:57 - to be like insane uh getting you inside
237:59 - here and just remember like literally
238:01 - it's as simple as going to me on the
238:03 - sidebar and just actually just chatting
238:04 - with me and that's it right uh The Fez
238:07 - says thinking of signing up to do pwj do
238:10 - you guys really have the time to get on
238:12 - call with members dude if you join I
238:14 - will literally jump on a call with you
238:16 - all you have to do is message me tell me
238:18 - that you came from the live stream that
238:21 - will really help me out and then I will
238:23 - be able to literally uh jump on the call
238:24 - with you yeah and psycho says thanks
238:27 - I'll join slack right away if if anyone
238:29 - joined during this session um from the
238:31 - live stream please let me know it helps
238:33 - us out um yeah that be awesome actually
238:36 - go ahead and drop us a DM yeah so drop
238:39 - us a DM as soon as you like if you join
238:41 - from the live stream that would be
238:42 - awesome um and and a lot of people are
238:45 - asking how to join on slack you have to
238:47 - actually be a part of profit with
238:48 - JavaScript so the link is in the
238:50 - description and you can actually
238:52 - purchase the the course profit with
238:54 - JavaScript but the challenge is
238:55 - completely free okay so the challenge
238:57 - actually don't use the word purchase you
239:00 - can invest in yourself yeah exactly by
239:02 - joining y you can invest in yourself
239:05 - terminology yeah exactly no DAV is 100%
239:08 - right it's an investment in yourself and
239:09 - I mean like I lost track of the amount
239:11 - of people that made um made like an
239:14 - income from this stuff like when they
239:16 - when they when they thing yeah so pitch
239:19 - pitch pitch paty said just I have joined
239:21 - Sunny uh if you have I will see it on my
239:24 - phone in a second so um anyone who has
239:27 - joined like I said just DM me on on
239:29 - slack and just Dro me a message saying
239:31 - hey sunny I was from the live stream
239:33 - that's it right uh Daniel mama said I'm
239:36 - in Sunny uh yeah so guys I mean if you
239:39 - are in if you are in profit JavaScript
239:40 - just let us know and um we can talk
239:43 - right that's awesome I think with that
239:45 - said guys I love each and every single
239:48 - one of you I think this has been such a
239:49 - fun session David and guys tomorrow we
239:52 - have thanks for joining yeah exct see
239:56 - everybody tomorrow with the Tinder clone
239:59 - exactly exactly Tinder clone tomorrow
240:01 - and on Friday WhatsApp so it's going to
240:03 - be a lot of fun guys and that is going
240:06 - to be awesome so um yeah guys with that
240:09 - said uh we will see you in the next
240:12 - video I am that is David and we will see
240:17 - you guys in tomorrow's video peace yeah
240:20 - over and out bye bye

Cleaned transcript:

today we are super excited to bring you a pumpt enjoyable we we've been excited for this one for a while but I'm not alone today I am here with somebody new it's a new face to the channel so I am here with David how's it going guys um I'm actually a student in profit with JavaScript course and I have the honor to uh go live with sunny and show you the M Stack um Tik Tock clone so I'm super fun for today it's a where yeah nice yeah so we're super pumped for today guys we already have 200 people watching that's awesome we have loads of comments flying in and guys what I want to say is let's run through the app itself okay so let's run through the app itself and let's go ahead and check so David this is what we're building today right we've got the Tik Tok clone and what's different about this Tik Tok clone JS with Firebase so Firebase is actually a suite of tool that is like it it is kind of replacing serers side uh development and so you don't have to go around uh building the server side application uh and the back end but this time we are going to actually build the backand as oh David I don't know if they can I think they can't actually hear you at the moment David one second it's volume side I'm not available to justify right give me one second guys let's go ahead and see what's going on there so can't hear David let's go there we go just speak David for a second right I think I think we're good now all right sorry for that guys so we actually had a little bit of an issue David if you're in to chat and you guys just let us know in the comments if you can hear David that would be awesome so just to tell you guys what David was saying we went ahead and we built the Tik Tok Clon you guys saw this before and all the data was being pulled from Firebase before but David has worked with mongod DB quite a lot in his time and what he's essentially done is he transformed the app so we have a pumped and exciting build for you guys today we are going to be building this Tik Tok clone with react deploying it on Firebase but David where is the data actually coming from today so the data today is not going to come from Firebase we are actually going to be using mongod DB mongodb is a nosql database it's kind of like uh filebase like data structure wise but it's like super professional and lot of companies are using mongod DB and yeah so we are actually going to be building no JS apis as well and they are going to be pulling the data and throwing it to the front end exactly guys that's exactly what we're going to be doing let's run through a quick demo of the app so we have a working Tik Tok app and the nice thing is as you scroll guys you can see it actually snaps so we have this lovely snap functionality a lot of you guys liked this last time let us know if you're pumped for this by the way guys and let's go ahead and see so if I tap on the video you can see we get a live video and then if you scroll down and click the next one you can see I love this [Laughter] video and then if you got you guys are crushing routine yeah nice so they said David son is low but yeah guys I've just up dav's volume so if you guys want to go ahead and check that out then um go ahead and check it out but what we're going to do essentially now is actually go ahead and build this app so the main difference between this and the previous Tik Tok clone is that we are going to be powering everything with an Express JS uh back end so it's going to be it's going to be the data is going to be coming from mongod DB we're going to show you guys how to set up mongod DB we're also going to be showing you guys how you can combine Firebase as a front end sort of service and then also David are we going to deploy mongod DB in where are we going to deploy it to uh of course actually actually actually mongod DB is an online service but you definitely want to go ahead and deploy the API the OJs API and we are going to be using Heroku for that yeah nice dope it's going to be all live David Jonathan just said Sunny you need help with the dance just dude I mean my friend is a professional dancer so she you know like if if you're with a professional dancer of course you're going to look bad you know uh guys some things to point out so like let me go ahead and just get this again so like some things to point out we have material UI as well here we have material UI icons we have a lovely little animation over here we have this nice little ticker we call it like a react ticker here I'm going to show you guys how to build that and then we also have this lovely snap functionality that you guys saw earlier and also these videos are actually from Tik Tok so you can go ahead follow kazzy's Tik Tok over here and follow my Tik Tok or my girlfriend's Tik Tok over here and we appreciate that also guys if you're enjoying this content and you're excited make sure to go ahead and actually grab out your phones right now and snap the the snap today's session and tag myself here and David I've added his tag over on his side of the screen that's perfect yeah down there right and with that guys also before we get started I don't know how many of you guys are following me on Tik Tok on um on um and also somebody just said it's front end covered in the other video guys we're doing the entire build today so we're not we're not playing around we're doday we are going to be developing a full stack application front and back and covered full stack application guys so full front end functionality back end functionality we just hit over 750 people on this stream thank you so so much guys and all we ask is that you just smash the Thumbs Up Button if you're excited for this um also I was going to mention yes so guys if you haven't already seen we actually have a react challenge so get excited for this because this is huge guys we have a 5day react JavaScript challenge the link is in the description right now so all you need to do is go over and actually you know what I want everyone right now to go to that link in the description and sign up for this challenge do you know why because it's completely free guys it's completely free and I'm dropping these videos with David with kazy with everyone all we ask guys is you go and make the most of this challenge the challenge starts on September the 7th it starts in 5 days all you need to do is go into the uh go into the description open up the challenge and enter your first name and your email address and you'll get registered up for the challenge you'll get an email telling you when the challenge starts and all you guys have to do is go along with with us right so we're going to be building a souped up version of the Amazon clone with full ecommerce functionality everything that you guys love and asked for is going to be inside that build and you guys can get involved in that by just going to the link in the description hitting it and then signing up so let me know in the comments right now if you've signed up to this right let's get loads of people we can see we've got samat nepon just said I've already signed up awesome dude love to see that let's see who else we get on this right so we've actually got a huge huge amount of people and guys we have $6,000 in prizes right so $6,000 David that's pretty exciting right yes you're very quiet David at the moment you're you're super quiet at the moment David So to just speak a little closer to the mic okay so actually I highly recommend everybody going ahead and joining because uh back in March uh Nazi's first uh JavaScript challenge helped me uh Kickstart My development uh developing career and today I'm getting uh getting clients like almost every day nice yeah so David actually came from the uh the one of the first JavaScript challenges that we actually did U and I can see some people actually signing up that is awesome and guys like David was once a student who came from a challenge so like think about it this way if you want to get involved you want to be a part like of the Journey part of these live streams then there is nothing stopping you all you need to go ahead and do is First Link in the description make sure you go ahead and check that out rishav rishav sorry if I didn't pronounce what I said it's for beginners 100% if you've never coded before I want you guys to go into that right now and sign up right we also have a free live webinar training um which you guys can go ahead and check out that will be in the description at some point as well um but yeah so guys all I'm asking for is that you go ahead and smash the thumbs up button and sign up to that uh free uh react Challenge and you can win yourself uh a huge priz prize if you if you actually go ahead and get involved inside of that so make sure you get super pumped up for that we have loads of people signed up this is insane so we have Beast rwa Bobby Kumar Juran he says samat says encouraged everyone to enjoy it that's awesome Leroy says what is the challenge about we are teaching you how to do a full stack application we're going to be running through the Amazon clone and we're going to actually be having the entire app up and running built for you guys um and you guys are going to have homework each day of the challenge it's it's a very intensive challenge guys but you guys are going to learn a huge amount in those days and you have the chance of winning a $6,000 coding boot camp and if you're referred then that person wins too so we it's very very exciting stuff um I can see a lot of people saying the mic is low I hope it's it's okay now um but yeah guys and also today you don't need to know anything if you're complete beginner it's completely all it's all good right like David this video is for everyone right exactly exactly we are going to be explaining everything for everybody awesome love that wow we have a lot of people signed up this is insane right with that said guys we're just about to hit 800 likes before the videos even started just about 880 people get everyone that you know share this video out get as many people on this right now smash that Thumbs Up Button we're about to get started right now and let's just jump straight into it David what' you say yes let's go let's jump right into it let's do it dude so the first thing that we're going to do guys is we're actually going to go ahead and build the front end portion of the app right so um what we going to do here is we're actually going to pull up our terminal so command J is a nice little shortcut that you can use here and what we're going to say is LS just make sure we're in the right directory so this is the directory that we're in right now we're going to say MPX create react app and then you want to give it a name so in this case we're going to call it Tik Tok right now while that's happening guys what that's going to actually set up a starter template for us I also see a bunch of questions about react native that is coming guys so if you're excited about that smash that damn Thumbs Up Button this is insane David we're at 868 likes already oh man I mean this is yes exactly and if if you're if you haven't smashed that uh this is what your like button should see yeah exactly guys we just got a donation from suit and he says watching YouTube during working hours # zero regrets dude that's what I'm talking about that's the kind of energy we need on this channel thank you so much um so this video so some people asking if it's going to be recorded yep everything is recorded it's going to be up straight away afterwards so stay tuned for that guys 900 likes oh man we're about to hit 900 viewers as well so let's let's keep pushing that number up guys and you guys will see and guys we're not only here today we're here tomorrow and the day after doing man stack build so don't worry you we've got a lot of fun coming your way guys and we have a react challenge starting next Monday so we got a lot of stuff for you guys all right now um we have oh great time to be uh go for it what was that D I just said uh it's such a great time to be it's such a great time to be a programming student yeah really is honestly really really is nice so guys while this is getting set up right now what we're going to do is we're going to go ahead and go over to Firebase and we're going to set up our Firebase instance so with that said let's go over to the console and you want all you need here is a Gmail account to get started you can see we've got the other clones here but let's go ahead and click on ADD project and here I'm going to say Tik Tok clone right Tik Tok clone and all what you want to do is click on continue we're going to disable Google analytics cuz we're not too interested and this will actually go ahead and set up the um the project for you and now the reason why we're using Firebase is it's a suite of tools provided by Google but it's going to allow us to deploy the app in a extremely simple way we just got another donation from gamer 001 thank you so much dude I appreciate that W thank you so much insane so some people are saying you still need Firebase even with node and so uh the only reason we're using Firebase is to make the deployment of the front end Super S simple right so let's just let's go ahead and separate our concerns there the the background is going to be uh the back end sorry is going to be completely in node.js Express and using mongodb so yes it is a completely separate build so so right now we've set up our Firebase project which is all good now we can go ahead and close that that's awesome and let's go ahead and actually run our app so I'm going to stop the one that I have running locally right now and I'm going to go instead so now we should see the site can't be reached awesome let's go back here and you can see once you've actually set up create react app or create react app has finished its job then we basically want to go ahead and CD into that folder so CD into it uh and then you want to hit mpm start and that will spin up this template app right now David you've coded in react before right yes that's correct yeah and what's your experience of react so far do you enjoy it why do you like it what's what's what's good about it yeah so so react is uh I think it's it's super uh cool to Pro uh program in react I mean it's uh very uh very easy to code I think yep uh it's it's so much easier than actually typing up the HTML CSS and JavaScript because it's it's like in one file and then I can see everything and uh also it um by default it features the hot reloading which is very developer friendly and also with the uh component based stuff it's it's very very very nice way to program so yeah exactly awesome dude really enjoyed it nice so with that guys we just got another donation from abishek devans thank you so much dude we appreciate any donation you guys are sending in um so Madan this is a good question he says you're going to host the front end and back end separately yes and there's a really distinctive reason why I want to do that because because guys when you create a front end and a back end it's kind of confusing in the beginning it's like well I have a react app I have some nodejs app are they two separate things or they are going to be two completely separate um sort of entities we're going to have a react app on on the front end we're going to have a nodejs server on the back end we're going to separately deploy them so the front end app is going to go to Firebase and then we're going to have the back end app go ahead and live on Heroku and then we're going to show you how the communication still works everything will still work in its place right um so really really exciting stuff uh we are at 990 likes guys this is insane thank you so much wow this is insane right let's go ahead and carry on guys so this is what you're going to get when you actually set up your first react app and you do mpm start so if you get to this page that's very good let's go ahead and actually show you this on one screen so you guys can actually see this a little bit easier because right now it might be a bit confusing to see so there we go and just tell me guys if it gets too small I can make the font a little bit bigger so what we're going to do at this point is we are actually going to go ahead and open our Tik Tok folder open the source and we got we need to do a cleanup process so what we do in the cleanup process is we get rid of app. test.js we get rid of the logo. SVG and we get rid of the setup test.js right so we're going to go ahead and do that and we're going to do this not here to test exactly not today and you should get an error because we just deleted the logo file that was part of that spinning app right and we just hit 1K likes that is insane guys thank you so much we massively appreciate that we've just started this stream we have 930 people watching this is insane we love you guys and appreciate every single one of you that's insane dude uh so we need to delete much guys yeah honestly it's super cool delete the header over here and let's just take type in H1 and we're going to say let's build a full stack man Tick Tock clone that's exciting stuff dude and let's do that and we're also going to change this to a lowercase a because we are following something called the bem naming convention exactly yeah go to app.css and then you want to go ahead press contrl a command a and delete everything inside app. CSS The Next Step that we want to do is you see this little Gap up here right you get this like this bit of spacing at the top and you don't want that whenever you sort of open up a a fresh project damn we just got two donations back to back we've got uh kka I can't pronounce the last name I think it's Ash ashanta thank you so much dude yeah and we have niten as well got from nitt that's it dude thank you so much I appreciate that massively uh We've even got viewers in France hey love that what's up fian nice so um so somebody asked a quick question address this he goes what do I need for the challenge I'm an absolute beginner all you need to do for the react challenge guys is go ahead and sign up that's it link is in the description make sure you go ahead and sign up to that challenge I'll show you guys one more time this is the challenge I'm talking about it is a huge amount of value for you guys so the link is in the description we go live on Monday with this challenge it starts in 5 days if you aren't there you are missing out guys so go ahead and check this out and I'm pushing ping it hard because like I literally we have put our heart and soul into this challenge so if you guys enjoy the content if you enjoy everything then you will love this challenge so please please please it's it's a big deal and I really really feel like you guys are going to love this so we've gone out of our way to make this massive for you guys and yeah go ahead and benefit from that guys so we just got another donation David damn we got a donation from damn from lith y lith just he says waiting for reca oh react native builds nice react native yeah awesome on the way somebody said please another one hey nice damn that's awesome dude so Sean we got Shan mugam and we also got an from an nice he goes way to be a full stack developer that's insane yeah guys you're going to be full stack developers you can actually call yourself full stack developer after this video cuz he is a full stack build right um nice so let's go ahead and jump in so somebody said please increase the font size I will do that for you guys so inside of index.css that little Gap that we had at the top right here to get rid of that we're going to go ahead and do the following we're going to say margin of zero like so and what that will do is that will go ahead and remove it as such right so we won't have that issue that we have right there now I'm going to go ahead and start the other app on the side so I can show you guys when we're building certain things how it will look on the screen so that might help you guys visualize what we're building building as we build it um let me go ahead and pop that in there there we go nice so what we're going to do guys first thing is you see now we have a fresh build right we have a fresh fresh starting template this is insane um let's go ahead and check this out so test oh guys and actually you know what I will we'll just cover this right now because the tech that we're going to use today right this is a really important point because I feel like you guys are going to learn a huge amount today and it's going to be really valuable for you guys to actually see and understand the exact Tech that we're going to be doing so that you get the most value from today's session so what we're going to be doing guys is I'm going to quickly draft out so David what we what have we got in today's session we have react so we we have react that is a letter r from uh earn we also have nodejs that is yeah so let's separate let's separate this into two sections just have the front end front so for front end we are going to be using uh react and we will be hosting react on the Firebase right so for front end we are just uh going to be using these two technologies yep no no we still got more we got material UI for the designs we got material UI we have flexbox guys so we're going to be showing you how to use flexbox even a third party Library so we have a third party ticker library and the ticker that I'm referring to is this one over here so um oh God oops not that one y this lovely ticker over here I'm going to show you guys how to do that right so you're going to have all of that inside of this we're also going to be showing you guys how to actually go ahead and have this beautiful functionality where you can the scroll snap functionality whoa we just got loads of donations guys I'm going to be dropping those in a second guys right after we um right after we you know I have to I want let's let's quickly take a minute to appreciate that guys we have so many all right so let me go ahead and go through this so we've got manav Aurora says do I need JavaScript Advanced for web like promise closures no you don't need to be Advanced for this kind of stuff guys keep it simple don't over complicate it just follow the builds pattern recognition will teach you a lot of this stuff and you'll learn it as you need to learn it okay so don't worry about beinged little motivation uh I just started programming back in March exactly and here I am now exactly guys so you can be complete beginner and you will be able to build it by yourself in in half a year even less exactly David we just broke over a thousand viewers damn dude we just got 1,00 likes this is insane okay this is awesome another donation by Jason Francis he says good job guys any react native tutorials coming soon yes so we have three man builds we have today tomorrow and the next day uh and then we have the react Challenge and after that on the road map I have definitely got react native in my in my eyes so like so I'm going to be dropping some content for you guys for that if you interested in that if you are smash that thumbs up button and we'll be happy to deliver uh another donation from netra he says how can we enable terminal in our vs code using hyper right now so if you go ahead and press command J inside of your terminal um then you can actually so right now I've got it open if I press command J you can actually go ahead and pull up a terminal so it has a terminal built into vs code so that should help you out there uh let's go ahead and check we've got another one he goes I also want to become a full stack developer Danny Great Dane you are in the right place my friend make sure you are in that challenge next week and I promise you you will get a huge amount of value from that um so yeah you're in the right place well done for for watching this and being here let's go ahead and see that is awesome guys massively massively appreciate that so let's go ahead and jump and Carry On David So now we've got the so the tech we were talking about we've got the front end which is this portion right we've got all of this stuff now the back end David break it down for me what is on the back end so the back end we are going to be using something called nodejs uh nodejs is a backend uh framework for JavaScript and we are going to be running an expressjs server for that y um and we will be using mongodb as a database yep and we will be hosting this whole thing on Heroku right okay so hosting on Heroku right and also there was something you said about was it mongus yeah yes exactly yes uh so for uh to connect to mongodb there is a tool called mongus uh which will make the connection between the database and your application super simple awesome yeah yeah so this is uh there was mindblowing for me uh back in the day nice dude that is awesome I'm excited for this build so like this is awesome and guys this is a in case you're wondering this is a full stack build okay so everything else has actually been a full stack build we've just used um react Firebase to make it super simple so it doesn't actually feel that big but yep today you can be sure that this is a full stack build okay so with that said let's jump straight into we just got another donation dude we got another one over here hey check that out that's awesome dude nice we got another one oh my god um damn oh somebody says Hey Sunny I'm hearing your breathing sound louder can you hear yeah sorry about that guys I actually I have a bad habit of breathing into this mic and it's super it's just so delicate like I can hear it all the time so we've got another one from Pine thank you so much another one from tan Mishra thank you guys that that is really really nice yeah so thank you so much um okay so with that said let's go ahead and carry on so here let's close this up we don't need this so for the app so let's go ahead and I always like to start off these builds by starting off with sort of drafting out what we're going to be building right so in today's build what we're going to have is essentially a container so we're going to call this like an app container so we're going to have a container and this is basically going to hold all the videos right so here it's a very simple architecture in today we're going to have just this is going to be like a list of videos right so we're going to have all the videos inside of that app container and then what we want it to do is basically render out in such a way that it's essentially you'll have some kind of like video like this right and it will basically just be like this so so we would like pull something from the database and then we would actually have um several videos show up here but then they render out like so like this right let me actually remove that comment sorry guys I've got that on there still um so somebody said The more enthusiastic sun he becomes the more he breathes louder you know what guys it's probably true I don't know you know it's a small price to pay for the the the content you get so we got sa Chan thank you he says what about authentication method um so we're not going to be covering authentication in today's build we have plenty of Builds on that yeah we have plenty of Builds on that um and somebody says you don't use fir store why we actually have a video where we built the entire thing with fir store so go ahead and check that out if you're interested that is uh the Tik Tok build that we previously built has it from um from firestore So today we're focusing on a complete full stack build so get excited for that right let's go ahead and jump on so we're going to have it like this right so David I think what we should be doing right now is essentially maybe let's go ahead and create the video component yeah okay let's go so you want to go into your file type in video.js like so whoa we just got a big donation somebody said Super Chat I have completed the Google clone Instagram clone and YouTube clone thank you sunny and Kazi for that I'm super pumped for man development that is awesome dude that is awesome well done for completing all of those things um and guys I I'll say again and again like honestly if you just follow these tutorials you're going to get so much value from it so make sure you actually stick with this somebody just dropped another 2 pound he said man like Sunny top Che appreciate that dude uh and today it's not just me we got David in the house too so that's awesome exactly thank you so much dude um another donation a man like Sunny top tutor I couldn't agree more yeah thank you guys that is awesome um right so let's go ahead and jump on so now we're going to create a video component so I like to use something called Snippets so you can see here I'm using RFC as soon as I hit enter boom it pops out the entire code for me now how do we get that to work right so I'm going to go ahead and hide the mini map so we get a bit more room so in order to get those Snippets features go into the extensions type in es7 in the search bar and the top one that you see right here so es7 Redux react graph cure Snippets that is the one that you want to click on install for very very important stuff um so a lot of people are asking what's being covered in today's build that that wasn't covered in the last one guys if you have seen the last one today we are going to be including an entire back end so we're going to run through the front end get everything up and running and then we're going to show you how to do an entire back end to this build right so Express server we're going to have a database and then we're going to have everything running on the back end so really really powerful stuff we will be understanding what's going on in Firebase exactly eventually yeah yeah exactly so now let's go ahead and when we create a new file we need to do the following we need to create a video. CSS file so let's go ahead and do this so video. CSS as such and then we're going to create a class name for that as well and we're going to call this one video like that right now inside of video let's go ahead and do a few things so in here we're going to basically have the F we're going to have the video itself so this is going to be a video component like so and this can be uh let's just let's grab a source temporarily so let me go ahead and grab this one um there we go so this is a video Source right here and then we're going to have a so this is actually like a hard value I've got straight from Tik Tok at the moment so this is kaz's video and then we're actually going to have a video phoo and a video sidebar Right video sidebar David we got another donation Dam dude he says oh my god oh I can't actually see that one oh okay so it's actually on YouTube it actually looks a bit different so on YouTube it looks a bit like this it says Mahesh PO with a dancing chicken thank you so much dude appreciate that thumbs up chicken actually yeah doesn't always show properly and somebody you ask what does the man stand for David so why don't you go ahead and tell them what does M Stack actually stands for mongod DB expressjs reactjs and no JS so these are super hot topics uh in in today in in nowadays uh development world but we just got another donation hey and it's actually orange yeah so it's from anit agoal and he says sunny can we use other de databases like Cassandra later also would love to see Docker in the upcoming videos what's your thoughts on this it's my second donation in the video love you guys firstly massively appreciate that dude thank you so much for a second donation and also to answer your question so I like to keep it somewhat focused because we can very quickly go into all sorts of areas and we never really sort of specialize or get good in one so what I would say is focus your energy on your actual development and in this case what I would say is Firebase and M M Stack development focus on those two things and you will really sort of go far you want to get really really good at those things guys and then like then you can look into the other things in your own time as a hobby but I would say really harness on this and that's when you can actually start making money from it cuz you have to be really good at this stuff yeah once you get great in the fundamental fundamentals then you can just go ahead and learn whatever and super in in like no time yeah exactly once you get that build up that ability to learn and you you're going to go very far with that so uh awesome stuff now um I'm just trying to see if I can get the starts up okay so okay so I can't actually see anything there okay so let's carry on so we've got the video footer component and the video sidebar component when I talk about those guys we're actually going to go let me clear this off the screen for a sec so here you can see the video footer oops I've got it stuck on the video footer is referring to this right here so everything inside of this video footer is what I'm referring to as the footer element uh and then we also have the sidebar which is this element right so the sidebar is that element over there and these are the sort of markings of what we're doing there so it's always good to mark it out because it will help you sort of structure out your build and and sort of like if you ever get stuck or you kind of get into a bit of brain fog you know what you're going to be doing next and it does honestly guys I know it seems a bit pointless at times but it does actually make things a lot easier it really does it really does help especially for uh beginners yeah really really will help you out it will make you overall a a better developer guys if you're doing that so that's going to help you out a lot I'm just pulling up some stats as well nice so we've got the video um footer on the side so now what we're going to do is we're actually going to render this to see if it plays in the uh if if we can actually go ahead and see this so let's go ahead and do the following we're going say video and you can see it says Auto Import from video so we can actually do that little trick so we've imported the component that we just wrote over here and if we save this now and go to our Local Host it says cannot resolve video CSS that's because we created a CSS file uh we didn't create the CSS file sorry but we imported it so if we do that we should be able to see it now guys we can't actually see anything on our page the first thing I want to check is actually that this is a correct video so so that is a video that's working um wow an again he said had to say thanks again really appreciate that dude that's insane thank you so much man like really really love that and appreciate that um let me go ahead and activity stream okay nice so we are $25 in chat Revenue right now guys thank you so much that's insane God yep 1,266 likes as well so really really massively appreciate that nice so we can see that the video isn't actually showing on the output right so we oh no it is here yeah awesome so it is here yeah so that's we can see our video is here and it's working um so let's go ahead and actually take it a step further now so we have the video right here but we actually want this firstly we don't want want it to play autop playay so we're not going to add any kind of autoplay elements we are going to add a few attributes to this we're going to add one which says Loop so that way if you do choose to play the video then we want to be able to Loop through it we also want to have some kind of Click Handler but we will come to that in a sec um and we're also going to give this a class name so let's give this a class name so we can sty it later and we're going to say video player so that's going to be the video player now let's get that swiping functionality done first thing because that's the most crucial part about Tik Tok right so let's go ahead and drop two videos in like so and if we see this now we've got two videos right but we want it so that it actually snaps right so it's actually going to go ahead and snap when you are scrolling so David if we check this one out if I scroll like a little bit and I let go it actually snaps you see that so I'm scrolling and I let go and it snapped just like it has a very nice behavior to it right let me go ahead and get rid of this there we go sorry guys I just saw it says remove the donation I removed that so there we go if we can see it snaps very nicely right so we want to achieve that same functionality in here right now guys please don't um spam if you do spam I'm just simply going to block you like honestly like if you do that I'm going to block you so don't go ahead and spam um right so let's go ahead and the first thing in order to get that functionality what we're going to do is we're going to basically wrap this in a container right so we're going to say um app container so I'm going to say say div and I'm using emit here to get the shortcut I'm going to say app um I think it's app container what did I call it I call it app videos it makes sense just yeah videos oops read app videos there and what we're going to do is we're just simply going to Chuck this inside of here like that right now we are using prettier and prettier is a very nice uh uh formatting tool which is why I didn't have to actually fix all my indentation so if I save the file it fixes it to get this tool all you need to do is go into the extensions type in prettier like so and you'll see the top one you want to enable that it's got so many downloads so you know it's pretty legit um and then what you want to do is go into code insiders preferences settings and make sure you enable this format on Save uh tick that and you'll basically get the functionality that we get right now when we're coding right so let's go ahead and carry on so we've got this app vide so let's go ahead and style this right now so in order to get that snap functionality what we need to do now is we need to open up app. CSS on the side over here we're going to go ahead and pop this over like so and I'm going to make this a bit smaller because right now it's extremely difficult to see that so there we go and you can see app. CSS right so in firstly we're going to have to Target all we're going to have to Target all of the HTML so this is a trick that you have to do when you do this snapping functionality so we're going to add the following line and this will actually allow us to get that um that snapping functionality so you see here we're actually going to go ahead and say for all of the HTML go ahead and make a y snap mandatory right so that will actually start to give us that snapping functionality but here you see nothing's actually snapping at the moment right so it doesn't snap now um what we're going to do is next we're going to basically we have an app container surrounding everything so I'm going to go ahead and at this point remove where it says let's build a full stack man Tic Tac Tik Tok clone we just got a $5 Canadian donation from Ibrahim Ryan yeah thank you dude thank you so much that brought the chat Revenue up to $30 guys thank you so much amazing and we've got 1.3k likes that's what I'm talking about that is what I'm talking about guys and we're still at 900 viewers so this is insane um let's go ahead and check it out so we've got the app video so firstly what I'm going to do is we need to set some boundaries right so for the app itself I'm going to go here and I'm going to say inside of the for the app component I'm going to do a height of 100 view height so let's go ahead and first do that and the reason why we want to do that is because we want to snap according to that 100 view height of whatever device you're on and then I'm going to do a background color of black so just to emphasize if there's anything behind us we want it to be black so like you see like there now it's black right want to be a black background and then basically guys this is a very nice trick that I've learned yeah and basically the way what you're going to do is you basically going to go ahead and change the display to grid right change the display to grid and then what you going to do is you to click Place items Center and what this will do is you see it just perfectly centered and the beautiful thing about this guys is it will perfectly center right now and this is something which we'll fix afterwards you can see I've set it to 100 view height which means that this is actually only going to color in up to 100 view height of the original device height which is what we want at this point because I want trying to show you guys that we want to have that snap functionality perfect um but you can see now it's actually centered everything vertically and horizontally in the center so that's a really really cool trick with just two lines of code so make sure you guys use that trick quite a lot the next part we're going to do is for the app videos right so here we're going to go ahead and do app videos like so and here we're going to say position is relative like so and then we're going to say for the video container itself I want it to be 800 pixels I don't want it to be like a too too big right 800 pixels is good uh and then what we're going to say is a border radius uh let's give it a border radius of 20 pixels um but the overflow will be a scroll so overflow scroll like so and you can see now look at that guys so so you see before it was acting a weird right it was acting strange it was going off the screen but now we've actually contained it so we've said your maximum height is your your actual height is 800 pixels your border radius over here is 20 pixels and we want it to be scrollable okay so it's scrollable but it's not snapping yet then what we're going to say is I want to make the width 80% of the screen so let's go ahead and make it 80% of the screen like so and you can see like that right um and then we're going to say give it a Max width of 500 pixels so we're going to limit that growth right so we're going to limit the growth um and then we're going to go ahead and do scroll snap type so scroll snap type y mandatory now this is another step which is crucial so you see it's the same line of code that we did earlier you need to apply it to HTML and you need to apply it to The Container itself but that's done that's the second part right that's the second part um of getting this to work but you see it still doesn't snap so we almost there but we're not actually we've not got it down just yet another lovely donation from Joe Jamon thank you so much dude I appreciate that that brought us to $30 in chat Revenue thank you so much guys W thank you really really awesome and what we want to do is we want to hide these scroll bars right so to hide these scroll bars I'm going to copy a snippet that I've got online and actually I don't actually remember this snippet I always just Google it and then I always find this again but this is the snippet right here what you want to do is you want to Target the container so app videos and for Chrome Safari and Oprah you want to do this colon colon webkit scroll bar and then you want to do display none and for Internet Explorer Edge and Firefox you want to apply these rules now these rules cuz it is just targeting this you can put them inside of here but I like to keep it separate because I always know that this is the code that's just explicitly doing it for hiding the uh the the bars and you see when I do that now you've actually got this nice little viewfinder right you got like a nice little viewfinder but the video's too big and it's not snapping so let's go ahead and fix that so inside of our video component so this this actual video here we gave it a class name of video player so what we're going to do is we're going to open up video. CSS like so and we're going to go ahead and style that so inside of here what we're going to say is Target video make the position relative like so change the background color to white in case that it ever has any sort of space behind it or anything let's go ahead and make that white yeah so you can see it's very very subtle but there is a white background there uh and then we're going to change the this is the magic bit here so there's there's three lines of code that that are going to completely change the UI here we're going to change the width and the height to 100% that's the first part and if I save that it automatically should fit the container to the content so you see that now it's actually the the video is the correct height right so the video should be the correct height oh no not yet sorry not yet it's almost there it's almost there um so if I do this video yeah so then that we're going to do that and then we're going to say scroll snap align scroll snap align start and this is what will give us that snap functionality you see that now it snaps so if I scroll a little bit down it snaps because what we're doing is we're making the child snap to the start point of the child when we're scrolling so you see that as soon as I sort of scroll a little bit it kind of snaps and you see you get this very very nice sort of snapping functionality so if if you guys didn't know about that trick and you just found out now drop us a thumbs up and let us know in the comments I'd love to see who sees that and who doesn't see that right um a lot of people are saying give us the video URL guys like you can use any video right you can use the any video like please don't focus on the video URL focus on the actual learning behind it because it's not going to benefit you by knowing the exact video you I mean you can pause at this point and copy that but um yeah focus on the actual functionality take a lot of time actually I think it it even work for me with a simple YouTube video so yeah oh yeah so you could use a YouTube video even you could use any video just to see so juren Hector said first time seeing that snap function awesome dude really really glad sham says you are the best shoter Sunny thank you very much dude appreciate that uh it says which language are you using this is all in uh JavaScript right now and we're using the react library to get everything up and running right so with that said now the actual player itself so this video itself to make sure that that doesn't sort of look too big or look a bit strange we're going to go ahead and do video player and then we're going to say firstly we're going to say object fit fill because I want to just use up the cont contents as it needs to and then we're going to say a width and height of 100% so it's only going to use up 100% of its parent container so 100% oops that's 10% oops so you can see it does work if you say 100% now there we go you see that guys you get a lovely perfectly sized and just to prove if we made it 200% see it's stretched out right so it does it just shows you that it is doing something right we just got another donation by J jittin Saina awesome awesome oh thank you so much massive yeah this is this is awesome guys and just if you are new here so we still have 800 people watching guys if you are new here today just to run through you guys we are building the Tik Tok clone with a complete man architecture so it's going to have a react front end and then we're going to have all of the data coming from the back end which is going to be a node.js server and it's going to um be running on the express and then we're also going to be pulling from a mongod DB database and that's what David is going to be showing us so that is going to be some awesome fun stuff to go through guys yeah and we just got another donation from Stephen who is glad that we are not using Firebase well that's why we are here that's why we are going to be using nodejs Express and mongod DB yeah honestly and guys this this video is not to bash Firebase I love Firebase it's so powerful it it has a place and it really like if I had to choose between the two I would choose Firebase but I want to show you guys yeah and even for this build I would go with Firebase as well but just so that you get the most value out of this Channel and out of um watching these lives I think it's crucial to understand uh what is happening in the background using a backend uh service like Firebase right yeah exactly and in a job setting and in a professional environment you're going to be pretty much needing to know full stack development so there may be an Express server on the back end and things like that and you need to know about those two things and how just like in the beginning I remember I was kind of confused I was like hang on is is is my node.js server a separate app that I'm running cuz I was like shouldn't it all be one app right like and I was super conf and it took me ages to figure that out like so guys if anyone else has that same like pain or got confused let us know in the comments because I really kind of was like whoo whoa whoo I'm already doing mpm stuff so my app's already running why do I need another app running which is a node.js server so that kind of confused me when I was learning but we're going to clear all of that up for you today uh and somebody says do I need to learn node and express before learning mongod DB uh yeah I would say it's a prerequisite you would need to know node but guys don't even worry about learning all those things separately just follow us along and you guys will will be able to uh be able to see that right uh we just got another we got a PHP donation he says hey guys we are watching from the Philipp hey we have some team members from the Philippines that's awesome dude yeah nice oh guys thank you so much for these donations let's go ahead and jump back on so let's go ahead let me move this out the way thank you so much Stephen K for that donation as well right so we have the video player so now we've got the the UI sort of looking pretty good right so the eyes looking pretty decent uh so we're going to go ahead and carry on so for the video itself what we're going to now do is we are going to go ahead and go over to let's go ahead and let's actually add over some of the components let's add a video Foo and let's add a video sidebar and then we'll enhance this afterwards with what we're doing actually no before we do that let's actually sort out this functionality CU right now if I click this it doesn't play right if if I click this it doesn't actually play anything so what we need to do now guys is to be able to make this video actually play when we click it we're going to use something called a reference right so a reference in JavaScript is essentially just think of it as like a pointer right it's just like literally imagine your finger is a pointer you just point towards that video video sort of element and then every time you click it you're saying all right the thing you're pointing at play it and then if you click it again the thing you're pointing out pause it that's that's the the easiest way to kind of think of what a reference is right so let's go ahead and actually Implement that and it should make a bit more sense so we're going to be using the use ref hook because this is a functional component so we're going to say const um video reference so con video ref equals use ref and initially it will start off with a no right value so you see it says us ref is not defined so let's go ahead and import that from react you can do it two ways you can either go to the end of us ref and click type in control space bar and it will actually come up and say Auto Import from react or you can type it in it's whatever is your preference click save and then you should be able to see everything loaded okay so that's all good and then what we can do is we need to attach this we need to point towards the video so in order to attach it to the video we say reference equals that video reference and that's it that's pretty much at this point this reference now is like it's like a giant finger which is just pointing towards that video right so now we have a way of targeting that video if we want to play it if we want to pause it whatever we want to do right um also I love I love the fact that in our comment section people are actually answering other people's questions like it's really nice to see that so somebody say you don't need to connect you just create an API on a backend server and then use the API in your front end hope this helps yeah so that's exactly what we're doing today we're going to be building an API on the back end so we're going to have like a little backend server running and then we're going to actually be communicating it from our front end so this is amazing guys to see that you guys are helping each other out uh really really love and appreciate that and guys David what can they do if they're enjoying the content so far uh they can just go ahead and destroy that like button like literally this is what the like button should see like boom exactly guys you just want to completely smash that thumbs up button and yeah that's all we want guys this will help the video get out to as many people as possible we are actually over nearly over 14,000 playbacks already which is just mindblowing like it's insane we're just about to hit 1500 likes as well so really really amazing stuff guys let's carry on strong so now what we're going to do is when we click on that video we want to click trigger off a function right and that function is going to be like Play the video stop the video so what we're going to do is we're going to say onclick so on click and then we're going to have something like handle video press right so we're going to create a function called handle video press so let's go ahead and create that function we're going to say handle oops whoa handle video press oops and then that's going to take nothing as an argument uh so this is an arrow function in es6 that's how you write them and now guys we need to somehow say like if video is playing right so if the video is playing stop it I guess right um otherwise like like literally if the video is playing stop it otherwise if it's not playing yeah literally play it right and it seems silly right it seems like why would you need to write that out trust me guys when you're learning do that like it will save you time like do that and actually just write out because some people will kind of run away and think oh I'm too clever I don't need to comment things but like trust me it just makes it a lot easier guys like when you just do that right like um it does make it a lot easier so now the reason why this will make it easier is because now it will actually answer a question we need a piece of state or some kind of variable to keep track of if the video is playing right right now we don't have that we have no way of telling if the video is currently playing or not right so what we're going to do is we're going to introduce a piece of state and this one's going to be called const we're going to call it playing like is the video playing right and this is how you write a very inside of react so it's called H we use the use State hook and we're going to give it an initial value of FAL because the video won't be playing by default right now what we can do is we and you want to import that at the top now you what you want to do is uh so David Jonathan says are we ever going to try graph ql of course we are David of course we are we got we got react native coming up we will go ahead and do graph ql we'll try like some Apollo stuff even nextjs like if we get enough like hype on that we'll jump on that so yeah we'll be jumping on all of that and even typescript so I actually code in typescript quite a lot uh when I'm doing side projects so I happy to go through all of that yeah awesome um so now what we're going to do is we are going to say if playing so now we have something to check against if it's playing then what we do is we say video ref right which is the pointer that I spoke about earlier video and gats spe I will we can cover gatp as well so video ref dot current right so this means what is the current thing it's pointing at then we just say pause right so if it's playing then pause the video right else yeah oops God damn it else if it's not playing then what we're going to do is Target the video ref get the current thing that it's pointing at and play it right so that's pretty much what we said here in a nutshell so we have this but whenever we do that we have to update that little variable so that it's it keeps it keeps track of what's going on so if we pause the video we need to set playing to F right and if we play the video we need to set playing to true and that way that little variable that we're checking against knows if the video is playing or if we pause the video right so we're going to go ahead and save that um so James Gardner says do you guys look into microservices at all um very good question actually I we look at I try like to kind of focus on things like Firebase because it kind of like abstracts a lot of the complexities of like microservices out of the way but I think microservices are very important to know what they are and so I would recommend everyone researches what that is and also this is the good start to actually understanding those sort of principles because we are learning full stack development right now we're going to be doing a complete man stack build and how you choose to host these small Services which could be considered as small Services um will actually open up um the door to that that sort of domain so is heru is capable of handling microservices pretty well yeah as far as I know yeah exactly thov vinard says any update on the react course we have an amazing course guys called profit with JavaScript the link is in the description I coach on there every single Tuesday we have tons of good content in there including a bunch of react content and a few people even in today's session like David Jonathan are in those react coaching calls uh and David actually ran yesterday's one so amazing stuff and yeah and like guys like there is a lot of react content in there so so definitely yes we have it inside of the uh course at the moment okay so awesome stuff so now what we can do is we can actually go ahead and check if this works so let's go ahead and click refresh and if I click if I tap this now so I'm going to click hey and if I press it again look at that guys so it works so you can see I'm actually clicking it nice right and it does work awesome nice so that's a that's an awesome thing right now so do you make okay so nice now what we're going to do is that actually fixed the video playing functionality so a very simple level this app is pretty much working as we need it to at this point but we're going to go ahead and enhance the UI a little bit right we're going to go ahead and Implement these two components the video footer and the video sidebar right so let's go ahead and create both of those components so video foo.js and let's go ahead and do RFC boom we get that let's go ahead and do a class name so this is setup which we just should get very fast at doing and it makes our life a lot easier and we also need to go ahead and create the video photo. CSS file so video photo. CSS whoa we just got another donation thank you so much he goes my pathmaker S react God you missed one s dude damn it that's my fault for having too many s's in my name no appreciate that dude thank you so much uh D DM sing nice uh and we need to go ahead and create the corresponding video I just did it for you oh okay uh one sec video for CSS so David went ahead and created this one so let's go ahead and actually create a video sidebar as well so I'm going to create a video sidebar so video sidebar. JS and David you want to go ahead and create the CSS file while I set this up yep so nice so I'm going to create a class name and this one is going to be video sidebar like so and we're going to do import video sidebar. CSS nice awesome and David went ahead and created the video sidebar CSS file so that's why we don't have the issue popping up right so somebody said should Co PA programming yeah that's exctly this cool pairr we doing it with VSS code live share so really exciting stuff um somebody said should I also learn JavaScript dude if you're not learning JavaScript what are you doing make sure you go ahead and learn JavaScript there is so much money in this field right now I want to scream like if somebody says should I learn it like go ahead and learn it guys like the the the market is booming right now like and and especially with react that's the only thing you should be learning yeah like react like guys you can work from Bahamas Caribbean like anywhere you want in the world is if you know this skill like all you need is an internet con connection and I see so many people like oh do I need to know this like or like do I should I do this or I'm it's too difficult I'm too young I'm too old throw all the excuses Straight Out The Window Guys like you don't need to like over complicate this stuff if you are on the edge just start right just start just follow the live streams these are all free right now right and we so have a react challenge link is in the description if you haven't signed up yet and you're new watching right now please please please go ahead and sign up to that react challenge because it's completely free and it's going to give you guys so much value especially you guys who are new to programming so go ahead and sign up to that 6,000 worth uh $6,000 worth of prizes as well so really fun stuff there so now we've got the video sidebar open let's go ahead and actually work on these components David so let's firstly let's do the video foot yeah let's do the video fo video foot there there we go Auto Import nice and guys it's David's first video as well like we just hit 1.5k likes can we can we give David some love right now in the chat right now right guys cuz he is literally super super Brave to just jump onto these intense builds and like try and provide you guys as much value as you can like guys these are M Stack builds these are full builds right there a full full builds and like David has literally just jumped down and said like I'm ready for this like he said he just started coding um not long ago March March yeah yeah actually it was April exactly yeah yeah um for the challenge if you guys are on the fence the challenge is the best kickart like ever that you could think like I mean we there are these lives every single day it's cool and all but to actually get started you need a bigger project that looks awesome and that will just kick you kick you in the butt and you will just go ahead yeah it's exactly exactly guys like it will yeah it really will David you're getting so much love right now in the chat damn dude yeah that's insane thank you guys hey love that guys we love that positivity that is awesome guys let's go ahead and carry on so this so we got the video footer component so we're going to go ahead and jump into that and what we're going to do inside of here is we're going to have a few things in here so we are going to have a div which is going to in include all of the text so when I mean all of the text I'm just I'm talking about all of this stuff right here so all of this text right here in the bottom is going to be referred to as video foter text right so let's go ahead and do that now so here I'm going to say we're going to create a div and this one's going to be called video footer text like that and then in here we're going to have a H3 so the H3 is going to have a channel name so here let's just do uh Instagram handle for now and it's it's going to have a P tag and this is going to be some kind of description right so it's going to have some kind of description somewhere uh and then we're also going to have the ticker so the ticker will Implement afterwards um so somebody's what about making Tinder Tinder is tomorrow dude so we have yeah we have Tinder coming tomorrow so you guys wa for treat there yes so today we're gonna be bu we building the Tik Tok tomorrow is going to be Tinder and on Friday we're going to be building what'sapp yeah God Friday is a big boy build guys like you're ex yeah that's going to be huge so massive massive things coming so for the video fo. CSS now what we're going to do is we're going to style this a bit so we can actually see some of that text and in order to do that what we're going to do is I'm going to add the following to the video footer going to say video footer position relative the color should be white bottom should be 150 pixels uh away from it and right now obviously we can't see anything oh no there we can we can finally see it pop in so you can see it's relative uh it's got we've got a color white text the bottom is pushed up so if I went ahead and changed this to zero pixels you'll see that it actually kind of snaps way far down so we need to actually go ahead and give it a little bit less so you see like if I do 100 it comes up there so 150 up from the bottom left 40 pixels away from the left so that way that's why we've got this little Gap here and then we're also going to say display Flex because we're going to have some stuff inside of it for that text field I want it to grow as much as possible so I'm going to go ahead and add Flex one to that field and it will make sense as as to why we're going to do that in a sec but I'm going to go ahead and Target the P tag inside of the text field and say give it a padding bottom of uh of 20 pixels so that way whenever we've got some stuff underneath it um we can actually sort of have a little bit of a gap underneath so it shouldn't be too bunched up we're then going to Target the H3 so you can see the H3 sits on top where it says SSS s and then we're going to go ahead and give that some padding bottom so it separates a little bit so now you see where it says this is some description we actually have a bit more space in away from that right so that makes it a little bit more readable now what we're going to do is let's go ahead and actually add a few things in so the first thing we need is some icons right so we need some icons uh so we're going to need this music icon so let me go ahead and get rid of that we're going to need this music icon right here this one is called the music note icon for material UI and I'm going to show you guys what material you in a second and we need this ticker this ticker is a third party Library sort of that we're going to import that somebody else has created and we're going to go ahead and create that and then we're also going to pull this icon so let's start with the icons right so the icons and also I just want to address this question so Ahmed Ali says sunny how much difference is there between react and react native put it this way Amed if you can code and react and a job says to you hey I need you to code and react native you can do that and I'm living proof because my first job I'd never coded in in react n before um but I got the job for the for the react position and then before you know it I was coding react native so extremely similar extremely close builds uh we have a lot of people who are reposting stories and all sorts of stuff like that where they're actually building some react native apps which is awesome because we haven't even taught react native yet so if you know react you can code in react native put it that way um the Heidi B yeah so someone from the pwj uh Community reached out to me that he got a client and he wants me to help with react native and I was like well I never CAU it in react native but let's go ahead and try it and within like 15 or 20 minutes I had react native up running yeah so it's super easy to start with it yeah and I think the updates lately have made it even better so it's really awesome Heidi I think she's from um she actually joined not too long ago inside a Prof JavaScript she said great job loving the build today sunny and David thank you so much appreciate that yo thank you oh nice check this one out okay so we we actually have a really lovely comment here by Redan uh it hasn't popped up but let me go ahead and see if I can grab it in the cuz this is actually something quite cool so Redan says let me go ahead and pop it in here guys and we'll carry on with the build so Redan said I got a frontend job with only JavaScript it pays so well if you want a good job follow these videos it's super good I wish I had this back in the day dude I wish I had this back in the day when I was learning too like if if somebody could actually give practical knowledge but ran is living proof guys and um that's another person we should add to the the guys our goal is yeah our goal is literally to get 5,000 developers um on uh in this year with a developer job right yeah exactly and then next year 10,000 as far as I know EXA exactly that's it and we are going to hit that guys like so that is awesome uh another donation thank you so much he say can we make it load Rand vids every time when refreshed we will show you the full stack build first if we get time we can do that but um it's not a main priority for today I think the full stack element is more important for today um so let's carry on guys so to get those beautiful looking icons that you guys have at the bottom and those and those sort of things what we're going to do is we're going to go ahead and install something called material UI so it's a design Library by Google you want to go in and you want to do this line right here mpm install material UI core so we're going to go ahead I like like to just click on ADD so you don't actually close that previously running terminal so we're going to go ahead and do this so mpm install material UI core like so okay uh so we're going to do that and then what you want to do is you want to go on to so that will install and then that will give us all of the material UI components so they have a bunch of components like an avatar a few other things we might need um but you're actually going to need that in order to choose the icon so the next thing you want do is to the search by typing icons and then you want to do this mpm install material UI icons like so so you want to go ahead and drop that in like that and that will go ahead and pop in oh guys actually don't go ahead and do this make sure you're in the right directory so right now what I'm going to go ahead and do is I was in the wrong directory so I'm going to actually go ahead and delete that one so package lock delete make sure you don't do that mistake that will bite you back later on when it comes to deploying so make sure you're cded into the right directory uh and then let's do it so let's do that again so mpm install material UI core and then you want to do mpm install material UI icons um so somebody says bootstrap is not as good as material UI uh I I tend to I mean uh bootstrap is it's good for when you're learning it's good for like if you're doing a lot of freelance work material UI is just so clean it's honestly has such a clean looking fill to it it look it's very easy to implement and use it documentation is amazing and we use it in every re build and you guys can see the power of it because the apps look amazing right um and I end up fighting yeah I mean David I don't know about you but I find that I fight a lot with um with um material UI no sorry not Material I find I fight a lot with bootstrap with bootstrap I don't know um I I usually before these lives I was using always um bootstrap and I I I could get by pretty easily I mean uh for the for uh for beginners I would definitely recommend using bootstrap uh they actually give you like Snippets of code and you don't have to um import that much stuff and you don't have to like mpm install stuff you can just uh use the cian um but then when when you get Advanced I would definitely go with the material UI yeah exactly and I agree uh we have a good question which just relates to ahed says yo Papa react Sunny I'm feeling really bad about responsiveness and he basically says like after I do projects I suck at the responsive part of it my advice here is use something like material UI and read up on it and because it will help you get like the especially the grid functionality inside of it that will help a lot but I would say use something called storybook storybook will help you become a very good responsive uh coder so if you're interested go and learn story book I might drop a um a video on that actually I find I think it might help a lot of people Rin also said I joined pwp and the knowledge I gained massive knowledge within a short span of time plus views of my portfolio increased by 600% due to live projects by Sunny oh that's amazing dude wow that's amazing actually for responsiveness I have like a very beginner friendly and not too elegant way but it's a great way to start yeah so back in the day when I started coding I uh actually created three different CSS files and based on the width of the screen I imported uh the other one so I had one for uh optic for iPhones another one for iPads and another one for Macs you can go ahead it's not the most elegant but then you will have a a bit of understanding on what what's where right my my advice would be is because you want to stick to a convention that's recognized by as many people as possible so media queries would be my start if I if you're talking responsive design media qu will be a really good place to start and then flexbox guys learn Flex box and your responsive design will go through the roof and my best recommendation can be flexbox froggy so this website will change your life when it comes to responsive design so if you're interested in that go ahead and check that out but yeah honestly like it's it's all a case of just trying and playing around with it I think we should definitely jump back into the code so the next part guys is for the material icons you want to click on this link here so search the full list of these icons this is how we find the icons whenever we're coding so if I want to go ahead and type in something like dis or something you see like dis full pops up I think the one I was looking for is music note icon so music note icon so music note so this one is how you get like the music note icon and it'll give you the import code at the top and then you can just pull it into the app so if you see any import logic and things like that this is how we find the icon itself so let's go ahead and do this um somebody says which is best flexbox or css CSS is the language flexbox is part of CSS so just clear that up tool yeah y um um nice so you've also got CSS grid so Alex code says good day evening everyone that yeah that's nice thank you dude good day to you too yo how's it going nice uh awesome so let's go ahead and carry on guys so the music no icon we're going to import into our code so at the top boom we have it there save the file and then inside so underneath the the text over here we're going to create a div and this one's going to be called the video footer ticker because it's going to have the ticker inside of it as well as that music note icon so I'm going to go ahead and pop the icon in here and you can see that we're giving a class name or video footo icon so that way we can start it afterwards um so now what we're also going to do is so you see that ticker at the bottom guys so you see we've got the music note icon popped in but this beautiful ticker that kind of Scrolls across that right there is actually something which wasn't built by us it was built by somebody else so what we're going to be using is something called react ticker so we need to go ahead and import this so to do that we're going to say open this say mpm install react ticker and hit the ENT key and that will go ahead and install this package into our app and then what we need to do is import that into the project so let's go to the top go here and we're going to say import ticker from react ticker like so and then what we're going to do is to actually use the ticker I'm going to paste the snippet of code that we pretty much need to use and I'll explain what it does so we're going to put it inside of our container here so we're going to drop that down and this is the code right here so it takes a prop that they've actually implemented so this one right here and the mode is you see if I hover over it says smooth chain or a weight and smooth essentially means that like it will start showing the text again once it goes out of the screen right so that's what we're using smooth for and then what we're going to say is here the index we don't actually need this Index right here so this is called a higher order component so it's actually giving us a something called a render prop uh and then it's rendering out this jsx here but right now we don't have a song prop so instead I'm just going to say I am a song so I am a song like so save it and you can see look at that it says I am a song and it works right and if I get rid of the mode you can see you actually see like I am a song I am a song I am a song I am a song so like they built it in a way that if you say smooth it will only show once it goes past that point which is really nice yeah then what we're going to do is we're actually going to have an image tag underneath all of this so let's go ahead and drop this in over here so underneath everything outside those divs I'm going to add a video foter record and this huge record that spins so on the actual one you can see it spins and we're going to add that spinning animation but this is the actual record itself and and this is the URL for it it's just a PNG and the class name of video footer record okay um whoa dude I just saw ahed Ali say papa react by the way thanks to you I have sold the Amazon clone by eding eding it based on client needs fonts and logos $400 $400 oh my God that's insane guys that is insane like I love that and guys like you know a lot of people do say like like oh like the course is this much or this that like guys he just made it back from like literally one of the Clones which are completely free so like if you find that that's valuable then the course and things like that we take it a whole step further um so make sure if you're not already I'm going to repeat again be sure to join the 5day coding react challenge which goes live on Monday starting um and guys you're going to get huge value this is yeah you you will get that thing for free and you can sell it for $400 yeah exactly yeah so he got that he sold this he sold that app for $400 and this is actually the complete this is actually the like a more advanced version of the Amazon app with payment and things like that so we're going to be using stripe so it's insane oh I said you oops this is not you will be using stripe yeah stripe yeah using stripe let me move the uh we're actually blocking the uh footer somebody said so I'm going to make us a little bit smaller guys and pop us over to the side so that should be a bit easier uh and now if I go ahead and check there we go so now you guys should be able to see a little bit easier you can see that little spinning icon at the bottom there you go now whoa multilingual program has just said I just joined profit with JavaScript uh if that's Todd Brown then let me know in the comments below cuz that is amazing if you just joined thank you so much we actually get notified when people join so if you have joined I will definitely see it through my phone right now so let me know if that was you Todd Brown thank you that's awesome dude right so let's go ahead and check so now what we're going to do is we're going to save this and you see we've got all the list up it doesn't look like the final thing right um oh wow also Pap I have credit limits on card I won't use that $400 that's yours man we'll join pwj right right after limits lift up oh snap dude honestly like this is insane dude this is insane like dude like look you landed the client well done to you firstly like you you've crushed it and keep up that positivity that's the kind of stuff we want to see in this community that's insane we just hit4 in dollar and $40 in chat revenues thank you so much guys thank you right so now we have um where it says I am a song so now I'm basically going to go ahead and actually style this to make it look nicer because right now it doesn't look that good right so let's go to the video footer and what we're going to do is we are going to go ahead and firstly we're going to Target the ACT ual um video for a ticker right so let's go ahead and Target the ticker and basically they give you a so that that ticker itself actually has an internal class that they don't tell you about and it's called ticker so I inspected and I found out we're going to give it a height to fit the content margin left of 30 pixels and a width of 60 so if I save that it will change the look and feel of that a little bit um we're also going to go ahead and actually so you see right now it's actually flying not next to it right so it's kind of like underneath it we don't want that right so in order to fix that what we do is we say video foter icon which is what I gave the uh music note so that little floating music note I'm gave that and say position absolute save that and we should see now let's go ahead and we should see that it now Pops in next to it which is a lot cleaner right because it's absolutely positioned within its little container so that will make it a little bit cleaner then we're going to do is we're going to Target that H1 we're going to give it a um padding top of seven pixels so that's going to be the little H1 that we have where it says I am a song uh and then basically I'm going to add an animation so this animation I got from actually create react app so it's I'm going to call it spin the record and what it's going to do is it's going to go from a rotation of 0° to a rotation of 360° right now how do we actually apply this animation like cuz it sounds kind of cool right but I don't know how we actually apply that so in order to apply that what we do is we target the record and the record is over here so we go ahead and Target the record to the class name here we grab it and we pretty much do the following so we say go ahead and use the animation spin the record so this one make it an infinite Loop and basically go from 0° to 360 in 5 seconds in a linear speed right then it's going to say height of 50 pixels this filter you see this is a black image right here right so this was actually a black image over here so I'm going to go ahead and move that this one is a black image over here I'm actually going to go ahead and invert the color so this one when I save will go white and then we're going to say position absolute bottom zero right 20 so it should stick to the bottom right over here here as soon as I hit save boom there we go beautiful and this is all in relation to the container itself so if I go ahead and scroll up you see it's actually part of just that video container so very very very nice design right so that's clean that's very very nice and now what we're going to do is we are actually with that said and done we have finished the uh video footer so that's super clean David and I think we actually went at a very good speed there so we've got the video for done yeah uh so we're almost done with the is so we done the uh I just done the little round of applause nice yeah so so we actually need to now do yeah so we are almost actually done with the Clone the the front end portion of the Clone yeah and then we're basically going to go ahead so I'm going to go ahead and finish off the video foot video sidebar with yourself and then let's actually move over to the back end right and we'll show everything in that sense silicon TV says is reactjs and Django a backend as backend good combination yeah I mean I see a lot of people do it uh we're going to be using reactjs and nodejs as the back end because that's even better in my opinion because it's both JavaScript so it's easier to maintain easier to sort of work on um but uh yeah there's nothing wrong with using Jango as a backend and if you're good at Django if you're good at if you have python experience go for it yeah then go for it yeah yeah and thank you by the way silic TV you just pushed us over $40 in chat donations so amazing now we're going to say video sidebar let's go ahead and create this right now so video sidebar uh and then it's going to complain cuz there is no video sidebar I'm going to do video sidebar. JS oops did I create that oops oh yeah we did create that yeah you created yeah yeah yeah I forgot we actually prepared so in order to import it little trick control space bar Auto Import and it will pull in this right here hit save and there we go we have the sidebar so right now obviously the sidebar doesn't have anything so let's go ahead and add what we need inside the sidebar so over here now what we're going to do is we have we have a few different buttons right so over here we have like a like button you see it even has clickable functionality um and and let's go to this one cuz you can see it a bit clearer but you see we have like a a container here we have a container here and we have a container here right each one we're going to be we're going to call it so we're going to say Dev video sidebar uncore button so it's going to be like a button container and it's going to be repeated three times right so three times each one is going to have an IC icon and a number icon a number icon a number the first one the second uh no so the first one is actually going to have a favorite icon so we're going to go ahead and do this import the favorite icon and then what we're going to do is we're going to go ahead and add the following so we're going to say favorite icon and they actually take a prop called font size which will actually make it a little bit bigger so if I go ahead and add that in now and save the app and go back here we can't see anything but it is there right uh and I'll show you we'll style it so you guys will see it in just a second so we're going to add in this one we're going to add something called a message icon and in the last one we're going to add something called a share icon right so in this one we're going to add something called a share icon then we're going to go ahead and import these at the top of the page so let's go ahead and do this and then we have all of those inside now obviously it's not pulling the correct uh things right now so I'm going to go ahead open up the sidebar CSS and let go ahead and make this visible so for the parent container we're going to say video sidebar like so we're going to say position absolute right so position is absolute we're going to say the top you should be 50% from the top and we're going to say you should stick away from the right side of the screen by 10 pixels go ahead and save that and you can see now we actually have those beautiful little icons pop up oh nice so they pop up and because uh the parent is relative it's going to stick to you see it sticks to that video yeah yeah and then we say the color should be white so let's go ahead and do that and it actually turns to White and then for the the button itself what we're going to say is that container itself so that video sideb button container give it a padding of 20 and align the text centrally so when we have some text there it will send to that text so let's hop over back here and each one of these now will just simply have a number underneath it right so they're just going to be pretty much P tags underneath so this one would be something like P and it would say something like 100 this one would be something like this and it would say something like uh let's just say it was like 250 messages on it and this one would be the number of shares so let's just say 12 people shared it if we hit save you can see the numbers pop up nicely yeah now nice so very very clean right very very clean very very um slick implementation there so now what we're going to do is we have we want to pass this information in as a prop but I want this to be clickable as well so to make this clickable what we're going to do is we're going to introduce a piece of state and it's going to keep track of if you click like or not like so if you click like so we're actually going to get a variable called liked and it's going to initially start with a value of false now what we're going to say is if so this is jsx right here we're going to say if it's liked so if you have already liked it then you should render out the favorite icon because this one is actually the one that's populated um and it's sort of colored in right and then there's also an icon which is a heart but it's not colored in right so the one that we're going to use here is something called favorite border icon so if I go ahead and click save uh and I import this from Material UI so let's go ahead and import at the top now what you'll see is use State also needs to be imported so let's go ahead and click Auto Import do it and we just got another donation thank you so much he says no JS is worth to learn because of the Firebase so honestly guys node.js is whoa I got my friend in the chat as well this is dope so chery firstly um nodejs is worth to learn because of the fireus yes so today we're going to be showing you how to use nodejs in a M Stack build so it's going to pretty much be front end and back end front end is in react JavaScript and the back end is in nodejs which is server side JavaScript so essentially the same thing various minor differences but if you can C in JavaScript you can use them across now I just want to highlight this one this is one of my best friends um and I actually caught up with him today he goes I used to study with sunny and my God this guy is such a beast of cing oh that's that's awesome to see my friends watching this massively appreciate that Jay and yeah and he actually contacted me today about a coding interview was a python one and he Sunny my man such a you smash that like button you heard him guys we are just under David we're just under 20,000 playbacks already oh my God 20,000 yeah just under just under 1,700 likes guys if you're enjoying the content please just smash that Thumbs Up Button massively appreciate it'll send this video out to as many people as you possibly can uh I appreciate that bro uh nice that is awesome and also yeah to answer the other question uh if you do learn node.js on um on Firebase if you ever need to write a cloud function which is essentially something which lives in the in in the cloud and it can scale up scale down but it's it's pretty much just a piece of JavaScript code that you can call on when needed um you can write that in nodejs so that will help you out a lot um Ahmed Ali just said I earned my first $400 from you having a goal of earning my first 1K with react wish me I working hard day and night David what have you got to say to that who good luck dude and and let's go and keep crushing that's all I can say I mean yeah those 400 there we go more to come yeah exactly as a few people are excited for you David they said I'm waiting for David's part that must be fire too hell yeah dude that's exciting oh actually I know that guy he's one of my friends hey're going to college yeah yo Dani what's good that's awesome dude nice we got friends on this chat as well that is nice all right of course so oh I love this sunny you're so cool you're you're proof that you can be cool and a programmer I appreciate that dude David's cool too you know like there was a sick guy was I mean if if his backend works like as if if his nodejs stuff works then he's cool right so no no pressure David no pressure oh man so we're going to make it so that when we click on the notice how when we click on the uh so when it's like this if I added this on click here which say set like to true so if I click that you see it actually changed right if I do the same thing for when it's populated and we say onclick set like to false then what we have now is actually a really nice implementation where it will flick the liked variable between true and false based on which one is rendering and you can see now look at that we get this nice little thing right here right now that works really nicely but we also want that number to update so here what we could say is if liked then it's going to to be 100 else it'll be 101 right this is temporarily for now and obviously we will make this a bit oh sorry if it's like it should be 101 otherwise it should be 100 just for now we are going to make this properly implemented but you can see now it says 101 100 right so a very dummy level that works really nice um uh oh nice this guy arm dude you're crushing man he says by the way I'm turning 18 this year so same age as amanath one of our key students who I work with daily um and he's crushing it as well same age as you he says just hate universities if somebody would ask me who is my best teacher we point them to you lots of love appreciate that dude and just wanted to say this is living proof guys it doesn't matter what age you are just start right it doesn't matter I have one of my youngest students is 12 years old and he landed his own school yeah my youngest student did you just say 12 like one and two he's 12 years old and he and and he landed his school as his um as his uh is it his first client so they asked for a website and he was like oh I can code and they were like really and then like he was like yeah sure I I'll build this thing for you and then he literally built it within two days boom came back they actually paid him for it so 12 years old oh my goodness insane yeah really really insane really really lovely to see as well yeah nice so um let's go ahead and check it out so somebody says why don't they have a startup dude I have had a startup company before uh so it's a lot of work um yeah but yeah once you once you can code you can do whatever you want to do so really really nice all right so let's carry on guys so there we go it works really beautifully now what we want to do is somebody said you can use a hook and put the camera right there you can use a hook but we're going to pass in those things as a prop right so now what we want to do is for the video sidebar I'm going to show you guys props so obviously I don't want it to be 100 I don't want these to be set numbers I want to pass in a value and then render it based on the the value gets passed in so in this case this is where the props come in so Props are basically uh like properties for a component so in this case what we can do is we can actually go ahead and destructure this is es6 syntax and we can pass in something like likes shares and messages right and then here what I can say is the likes should be if it was 101 we could say this should be likes oops this is already in jsx we say likes plus one and here should just be the likes and we're going to replace everything so here the messages should be messages whatever prop we passed in and here the shares should interrupt you bro but we got Abdul who earned $800 uh in one month yes damn bro let's have a look so he says because of you guys I earned $800 in one month love you dude that's insane oh my God I love like that just like oh that makes you so happy dude damn and like guys if like Abdul for example like you landed a client who paid 800 in one month do you mind just dropping it in the comment section like where was your client from how did you find them cuz I see a few other people asking I think that would be really helpful to actually tell other people we have loads of videos where we actually share this out um and we actually sort of talk about this Rachel did an amazing one on freelancing with kazy which you guys should definitely check out that is a free video on the channel um make sure you go and check that out because that is that was awesome and actually helped a lot of people land clients so that's really good and it showed you how to sign up to upwork and the sort of a template you can use to get started with that that is really really goodly um so okay let's jump back just do it that's awesome dude no thank you for pointing that out that's really really that's good stuff like nice so you can see now the numbers have disappeared right so if we go inside of the video footer if we go down to our video components let's go down to video so now we actually need to pass it through so here if I said the likes were for example 111 the shares were for example 222 just to exaggerate this and the messages were for example 333 now if we save it that gets passed through as a prop and you can see now it comes through so obviously I passed it in in a weird way that's why it doesn't seem right but it is right so likes 111 messages 333 and the shares is 222 so you see it actually does pass through as a prop right which is awesome we want to do the same thing with the video footer U so let's go over to our video footer and we can see here we actually need to go ahead and pass in a few things so for the video photo this is where the props comes in so we're going to destructure it and we're going to say pass in a channel a description a description and a song like so right and instead of doing this we're going to say this one should be at the channel name so like so this one should be a description deson so like a description like this and the final one should be a song right like so so it should be song right and now you can see obviously it's not going to render anything because we have actually passed it something so we need to go back to video and we need to pass in the F so let's just say for example the channel is um let's go ahead and say ssss s and then the description is wow epic M Stack clone TI to Tik Tok alone yeah Tik Tok let's scream at this thing yeah yeah and then and then we'll say song is song is I don't know 99 problems but react a one there we go hey I I mean guys I think that was smooth yeah I I don't think that is the original title yeah I mean like I think that does have like if you found that good I think you smash that thumbs up button oh man oh it's JayZ right yeah that's JayZ oh I love this one by ler out such a class thank you so much for the kind words lay through off uh we will keep on bringing the content that is awesome thank you dude right yeah that's JayZ nice so JayZ feed sunny exactly yeah and so now what we're going to do is we've got everything sort of like passing through as a prop right now the video itself what we want to do is we kind of want to drill down and pass that as a prop so we actually want everything to come through as props here and then we kind of pass it through the video so so to to make sense of this what I'm going to say is essentially the the URL of the video should be a prop so this one here should actually be a prop so I'm going to go ahead and cut this and say that this should just be something like URL right because we want to make the video customizable so here I can just pass in url and then save it and then what we can do is we can go back to app.js and then here I could just say the URL should be for example that that that um URL here and then if we refresh it you see it works yeah but we also want to pass in all the properties at this point as well so uh we want to pass in like all of the other things like and then that way it's just essentially we're just rendering out the video with a bunch of props and then it kind of gets passed down right um this is a lovely comment as well from deanii AG while Sunny because of you I could complete a whole clone project which I couldn't when I was following regular videos you and your team is super fun and awesome we love that thank you so much and thank you for just watching these videos cuz honestly like the fact you guys watch this stuff and find it useful it changes everything and it makes this whole thing worth it so really appreciate that nice um so here we're going to pass in a few things so all of the props that we pretty much saw before whoa dude we just got a huge donation D wow Diego Serano just says working in a side project that's worth a few thousand us I'm applying all your tricks for react plain JavaScript CSS and material UI just sharing this minimum amount but worth too much to me all love for the knowledge you share that's insane dude that's amazing and that's another example yeah that's another example of someone else who has got a job or a client or a job like a gig from these videos guys so like oh that's that's just I love to see that and and thank you so much Diego like $20 is insane like thank you so much for that we really really do appreciate that and that actually brought the chat Revenue up to $63 guys so thank you so much whoa that is awesome nice yeah really really awesome now um let's go ahead and actually add the rest of the props in so we're going to add in all of those props that we pretty much passed before we're going to pass at this level and then we're going to basically filter them through so you see it says Channel description song Etc so here what we would say is the channel would be um the channel here the description would be the description because it's coming from the props now here the song would be the song like that and then for the video sidebar here it would be the likes so you see the likes the messages and the shares so we're basically passing it through now and even here we're passing it through and with that said now it shouldn't actually be uh okay so we're still passing but you see all of the details have gone right so all those details have actually gone so now we need to go to app.js and we need to go down here and we basically need to just pass in those props so you can see what we done here guys we actually done something called it's a like it's like a two level prop drilling situation so it's very light it's not very bad in doing it like that um but when you start going to levels where you're drilling down three four levels deep that's when you need to bring in something like Redux or the react context API but in this case it's perfectly fine to do that so let's go ahead and add in some of the props you can see the channel Pops in the description is going to be yo this works uh the what other ones was it the song is going to be song was 99 problem about react name one react one nice by JayZ featuring nice the likes are going to be 123 the messages not a prop yeah that's not not a state oh yeah no that works yeah that work messages are going to be 456 and the shares are going to be 789 so let's just go ahead with some generic numbers like that boom and you can see everything got passed down so that's awesome like everything gets passed down that looks really really clean and you can see how little addon works really nice and everything's spinning so this at this point we've got the build working so you see now the second one rendering is is blank because we don't actually have anything here so what I'm going to go ahead and do is paste that and you can see now that that comes in like so um and basically just to prove to you guys that this is two different components what I'm going to do is I'm going to get the video of me and my girlfriend here copy the video address change it here to this one and you should be able to see in our W now that if we go back here you see it renders that one right and you can change those props so this could be like just an example 999 likes in the second video so you see kazi's one has 1 two three and this one has 999 so everything works of course yeah oh yeah I I didn't no no furing shade you know um yeah so this is awesome guys and with this said right so previously with the last build what we did is at this point we pretty much migrated things over to Firebase and then we deployed right so we actually all of this data we kind of pulled it from Firebase right but today we're doing something different we're doing a full stack M build so if you haven't already smashed the like button smash that like button because we're going to try and drive that number up to 2,000 likes because this video is about to get really really interesting because David is about to drop some fire for you guys on how we can go ahead and pretty much build a back end which we haven't properly done on this channel yet so David without further Ado let's go ahead and shock these guys and let's go ahead do some go okay first let's go and stretch everybody because yeah yeah is nice just have a have a stand up have some water if you need to you know get get pumped up again cuz this is is where things pick up again and this is something which you guys haven't seen before so it's going to be really really awesome as Jay said smash that like button that's it guys goly yeah let's go so um Sonny do you mind creating another uh folder for the backand yes so is it actually a separate app so how how do we explain this so we could go with this project uh and we can um implement it inside in here or we can actually create a complete different workspace within we code yep and and go with that one let me go ahead and delete this node modules but that's the wrong node modules it should be this one yeah so guys at the top level we have Tik Tok which is our this is actually our react build right this is the react one with the source code inside of it and then what we're going to do is like David said we're going to actually create a folder and what should we call should we call this one Tik Tok back end or something yeah let's go with that yeah so Tik Tok back there we go so this is the front end Tik Tok this is the back end right so this is going to be where all the data comes from so uh yep done that I I think I I I think I need to refresh because I I don't need I don't see that folder yeah you're going to have to refresh that okay yeah it's right there okay nice um I'm going to take over a terminal and can you can you see it into that Tik Tok backend folder for me yep so let's go back back level so we're back at this level if I do LS you can see the two folders so I'm going to do CD Tik Tock backend so I'm going to go into the back end and then now we're inside the back end so it's empty so I'm going to clear the terminal and what we going to do now David so now we are going to uh Define uh all the uh details of our uh nodejs app and we can do that by simply uh typing in mpm in it uh uh it's only it's read only terminal uh you just need to click on the request and it should be able to to you be go so make the terminal read and write for everyone there we go so you need to type in mpm in it mpm in it uh that's going to start setting up our uh no JS package.json file and let a couple of questions yeah yeah so it's going to throw a couple of questions at us um first up we have to name uh our package it's by Def fold it's going to be the name of the F the containing folder I think Tik Tok backend is pretty descriptive so we can go with that um we will uh have the version and just to just to show them David you're just hitting enter right now right yeah exactly I'm just hitting return and doing nothing else okay um I'm going to give a quick description I think EP epic uh Tik Tock back end is is pretty good okay uh entry point uh we us usually use server.js so it's um because it's the server file dop yeah um test command I'm just going to ignore and hit return once again get repository no uh don't worry about that uh keywords again author I think um I will go with my name okay and yours hey love that JavaScript right there nice yeah yeah and we don't have to worry about license for now and it's going to prompt if we are satisfied with it but yes so I'm just going to hit return once again and that is pretty much uh it for sending up our uh package.json file nice yes so so that's actually going ahead and guys just to show you guys that's actually inside the backend photo right so David just went ahead and used mpm and nit to set up package Json and package Json has this basically this config inside of it right which which means and this this kind of allows us to then do things like mpm install to basically go ahead and use like modules inside of this foldo okay now we need to add actually a script like a trigger that we will be using when we are deploying our application to Heroku but this is the good time to actually add it because you will forget it it's just the best practice that I uh I learned over time yeah I can y oh I'm inan terminal yeah uh so yeah um let's go ahead and just type in start okay and H and actually add whoops I added too much spaces and actually type in node app.js and that will pretty much help Heroku start this uh server this this should be server.js right because we main is server oh yeah yeah yeah right so whatever you whatever you give the main over here guys make sure it's that one right so that exactly exactly exactly and now um can you open up a terminal for me uh acally closed that one so you might have to go ahead yeah so let's go ahead and do LS and you need to CD back into Tik Tok and let me make this read and right for you guys so this is going to be share terminal boom there we go oh okay I mean we're inside of this one again so uh let me go back and get rid of this one there we go boom you should have access okay yeah yeah yeah perfect so now I'm just going to install a couple of De dependencies it's going to be the exact same method that you guys did with material Ur for UI for example yeah uh so let's just go ahead and type in mpm install um and we are going to be using Express y yeah Express and mongus so Express is going to be our server uh framework and is a tool that we will be using to connect to our database right right so just to pause there one sec David so we've got two things that you guys are going to need to install one is Express and I saw somebody said the breathing was quite heavy so sorry about that I moved away from the mic I get carried in I forget about that so I'm going to go ahead and do so Express and mongus yeah so you want to go ahead and install these two things uh right here and the the way you do that is essentially what David's writing in here right here so perfect nice one David yeah so now with that done uh let's actually go ahead and set up our uh database okay so actually if you could uh share your screen and go to mongod db.com that would be very helpful okay so mongod db.com yes yeah and guys if you don't have a mongodb account uh now is a great time to pause this video go there register it's completely free you don't even need to provide your credit card like it's 100% free and yeah and and just uh resume the video once you're done awesome yeah so sign so let's go ahead and click sign in at the top and I think we can use our Google account yep we can use Google here I'm going to use my personal cuz we haven't actually set up on my I think we use the cover program so let's go ahead and do this one and can you share your screen by the way oh it says server oh uh I am sharing on the oh do you mean on Skype do you mean yeah yeah yeah yeah yeah okay do let me go ahead I should have done that actually in the beginning sorry David um good let me go ahead and share my I'll share my I'll share eam because then you can see everything that I'm sharing okay there we go nice oh awesome yeah yeah so now let's go ahead and do um I mean should I use let me go ahead and try something which you want to use let me do Sunny uh test oh okay it doesn't work okay so let me try and use this one again so let's go ahead you sang gmail.com doesn't work okay let me just go ahead and do this then and um let close this L into your let's click sign up oh man going do this I tell you what guys let's go ahead and log in with Google and let's go ahead and do I'm going to log into my one and what happens David when you log in initially it will just ask you a few question you will just see yeah yeah it's it's going to ask you a few questions uh and it's going to prompt you to create your first very first CL yeah let me let me get rid of this one so they can see this one yeah so actually you can oh yeah okay right so you guys will actually get to a point where this will be empty or it will ask you like what do you want to uh essentially create right what we're going to do is we're just going to click on create a new cluster yeah exactly so let's go ahead and do that um one second sorry I've got everything everywhere oops what the hell happened all right so let's go ahead and click create a new cluster okay and and let's one me through this y uh because you still have the other one running uh just go ahead and create a new um project a new project yeah yeah okay where do I do that uh oh I see okay yep so okay so nice so here yeah new project there we go project and everybody you can just name it whatever um like Tik Tok M okay Tik Tok M there we go Tik Tok m uh next and this is where you can add collab uh collabor collaborators but I don't think we need need any of them you can just go ahead and create project nice nice and this is what you guys will see when you uh sign up awesome so this is literally it yeah right go ahead and just to explain to them quickly David what is a cluster so cluster is basically a server which runs several uh databases right okay yeah so technically it's it's something called like a node right and which is funny because it's we're using node to run it but yeah it's like a server which is running the database perfect so let's go ahead and click on build a cluster build a cluster you can just go with the left one uh the free okay yeah and you don't have to worry about any of these uh setups you can just go ahead and uh hit bu cluster something interesting here guys is you can actually go ahead and use something like Google CL AO here as well but we're going to be using AWS and like we said just like in Firebase it asks which server but we don't really care about this at this point we don't even care about this stuff just go ahead and click create okay and the cluster name can be cluster zero that's fine yeah exactly yeah and you want to click on create cluster at the bottom nice yeah and it's going to take a couple of minutes don't worry if it it can even take up to 10 minutes doesn't matter okay um but yeah um while it's work working let's actually go back to our um server. js5 and start setting up our server right let's actually have something up and running okay let's do it dude so I'm just going to go ahead and create the server.js file okay and yeah it's all done and okay nice and for uh and you did some magic that made the whole thing uh es6 yes yep so I'll explain what that is so yeah so so essentially guys when you're using nodejs things like importing modules from other files you can't use that nice little import syntax you have to use like this old school sort of const and require syntax right so to get R to get around that what you need to is go to package Json um go here and basically go ahead and add this line of coding so you need to add in this right here where it says type module so this this right here is what you want to add where it says type module and this will give you es6 sort of syntax to your nodejs right so this is going to be uh this is really going to help you out when you're sort of setting up that that back endend so you actually have all that nice fancy um fancy syntax right so we're going to go ahead and it says oh oops overwrite this o let's go ahead and save that nice okay now so now uh go for yeah uh just like with react you have to actually import the core stuff so let's go ahead and import uh Express uh from Express and it's literally like like reading English it's it's super easy to understand what's going on right and the other thing that we just installed and we need uh is going to be mongus so let's import that as well okay so import mongus from mongus and there we go and now with that done we will actually go ahead and configure our application right yeah so let's actually create our instance which will be a const app and that is going to equal to express and that is basically creating uh simple uh instance of our application right nice okay uh we also need to define a port where our application is going to run okay um and that is going to be another variable so const Port equals and for development servers uh usually we use 9,000 or 8,000 I'm just going to go with 9,000 now okay um and let's actually create a health check API which is going to just return hello world it's a nice little thing to do uh I will explain it a bit later uh and it's going to be very useful when you are actually deploying your application y so that's actually good go ahead and say app.get and when we are calling with the get method so when we are calling our application with the get method on the root uh root directory um we will be having a callback function and that will have a request and a response in it okay and let's create a um an arrow function okay and set the response status to response status could code to 200 and let's send back hello world right okay oh we done some weird stuff oh yeah yeah send and hello world so what I what did I just do I just defined uh that if I'm uh if somebody's calling my uh application with a get method on the root folder um I will send the response status to 200 which means okay um and it will send back hello world right okay yeah let's make this though some reason the pr is not working let's just space this out a little bit all right yeah thanks yeah and I think we have too much of these brackets y okay nice yeah nice okay and to actually make that app listen for our requests we have to tell them that you should listen on whatever report we just uh configured right yeah so let's go ahead and type in app. listen okay and this is the port where we are when we want this to listen Okay and let's actually add the Callback function here as well okay which will just console log um listening on Local Host whatever Port right right so listening on whoops Local Host and I'm going to use something called uh string concatenation Y and I'm just going to pass in whatever value that I have right that worked with using back ticks right exactly yeah it worked using back Tex not single quote not double quote it's back Tex it's uh in the United States keyboard it's right left to the uh one number nice okay awesome okay so now now uh if if you could just go ahead and uh open up a terminal okay and and um you can just type in or or if you haven't already you can just uh install nodemon which is going to enable you to run uh your stuff in your development environment right okay and you can just go ahead and and uh type in uh npm install DG node modon so what does DG mean dasg literally means that it's going to install this dependency for your whole computer so you have to only run it once so if you have done that you don't have to worry about it and I believe you have it right yeah I mean we we could do it but I think at this point we do have nodon yeah yeah yeah yeah and with nodemon you can just uh trigger your server so I'm just going to type in noon server.js and it should be working and there we go uh it says listening on Local Host 9000 as we uh said it right nice so if Sunny if you could just go ahead and uh open up a postman that would actually let us show people that we have a live no. JS app yeah I just want to quickly run just run through a quick visual breakdown of what's Happening Here Right yeah so so I think cuz cuz one thing that gets confusing with front end and backend development is how it all kind of comes together together and this is an amazing example of what David just showed you guys so this is the code required to set up a server on the back end right so this is actually what you need to get everything up on the back end so what we need to do now is I'm just going to do a visual breakdown here I'm going to say like imagine we have the front end on the left and we have the back end on the right okay so we have the back end on the right now here is our front end right so this is like the Tik Tok clone that we just built right and then on the right side we have a back end right so the back end is like this little server and let's just make it look a bit like a server or something right so you got the back in which is like a server now whenever basically whenever we want to do for example David here has done app.get right now get you can send different types of requests to your backend server from your device so like imagine this is the Tik Tok clone right so we've got the Tik Tok clone working on the app so this is like the Tik to clone that you guys were seeing before what you can do is you can send different types of requests and this is called a API and the different types of requests you might see are like a get request is one you have something called a post request you have like a delete request you have update and so forth right so these are examples of what we like to call arrest API right and arrest API all it essentially means is communication between a front end and a back end in this case David created something called a get request and what that one is essentially saying is that if we go to the endpoint um local host 9,000 which is on our local machine 9,000 and then we say forward slash because that's that's the directory here then it would actually go ahead and should if we've done it right David it should give us a hello world right exactly okay so we're going to use a tool called uh Postman to actually test this right and guys yes there are more than get post delete those was just three examples um but usually you use get to sort of fetch information from your back end you use post toload yeah yeah use post to push information it's pretty descriptive so G is basically getting data from the server yeah so when you are like let's go with uh with an example that I uh I did yesterday so get is literally when you're going to Facebook and you're uh loading up the whole thing that's a couple of get requests right Y and when you are actually posting on Facebook it's the same thing uh you will be using a post um method and I think delete is pretty descriptive enough yeah so imagine like you had a Facebook Messenger app the get would be fetching the messages the post would be when you type in the message and you hit send that's going to post that message to the server and then the delete would be for example if an admin comes along and deletes something right so yeah exactly yeah so uh and and somebody did mention a good point rest API is used um between communicating between any two kind of applications not just front end and back end so in this case these are the two applications in question we've got a front end and we've got a back end and what it's not just one way to guys as well like if you make a request to get you the messages for example a get request the backend can actually go ahead and send back the messages for example so here you could actually send back the messages or in this case when we do a get request to for slash it sends back a message saying hello world right now something that's worth remembering is that David also said here result. status 200 right now 200 typically means for anyone who's new to web development is a 200 means basically it means okay okay right so it means everything was okay right a 404 you might have seen before a 404 means like page not found for example page not found and a 500 means like a server error I believe I always forget anyway exactly that that that is internet server so if you're getting uh a status code any kind of 200 uh codes that means we are fine we are on track if you're getting a status code with uh in the 400 area that means uh there is a client side error yeah um and if if it's a five 500 something that means the server needs to be uh made better Ser yeah exactly yeah and something worth mentioning is that we David mentioned here that there's a request and a oops a request and a server right the request is this one this Arrow right here response is the other one exactly so the response status the back end what he's doing is when it gets over there he's setting the status to 200 and then he's sending back hello world right so now instead of actually pointing from the front end what we can use is we can use a tool called Postman so Postman I'm going to open up something called Postman Postman is a very handy tool which I recommend everyone goes ahead and guess yeah exactly uh now is a great time again to uh pause this video and go ahead and download and install it uh it's a free testing Tool uh for backend developers and yeah uh and if you are even a front end developer and you are pulling some random data from I don't know let's say uh you building a weather application and you pull you're pulling data from the API it's a good way to know how the response is going to be built up right yeah exactly exactly yeah and I would really recommend so ready Dev say best explanation ever that's awesome David really nice yeah uh I think guys I give David some love because I think he's explaining this really really good and like even even today I haven't coded in this quite a lot and I think it's really really topnotch stuff that David ran through Jessica just dropped A50 Mexican dollar I think pesos uh donation thank you so much says super useful I didn't have a clue how to keep together a backend frontend application and honestly I I can really relate to that because I had the same problem as well when uh I was starting off um so really really massively appreciate that jica that's amazing yeah thank you yeah thanks a lot um so this is a really really good tool that I would recommend everyone goes ahead and grabs and basically you can mimic that back end so basically what you're doing here is you're pretending to be the front end with Postman right so the front end can either be the react app or we can pretend to be with the PO you can even at this point even use the browser so like if I was to literally go to local let's go to Local Host 9000 and let's just go to the yeah look hello world you see in the there we go so it actually says oh they can't actually see the uh the top of the there we go so it says Local Host 9,000 up here and hello world it's very very small for them so what we're going to do is let's actually show them in Postman so Postman is like the official way of of doing any sort of API testing I would say and what you want to do is click on the new tab so click on this new tab button here uh yeah yeah click on the new tab uh you can set the method but it's by default it's get you can just go ahead and type in Local Host oh my God HTTP I know HTTP for/ localhost uh 9,000 which is our 9,000 exactly and you can uh leave out the forward slash after uh yeah yeah so you can leave it out or because by default it goes to this but let's let's just put it there for now so they can really see and let's click on send and and look at that guys it says hello world so this is exactly what we were saying here it's it's pretty much acting as the front end so you see we pretty much sent a request so we sent a get request at this point so this get request was sent over and we pretty much got a response of 200 so you see this is the status it says 200 okay and it pretty much replied with a body of hello world so I think that's that's really really awesome way of showing them David I think that's that's that's really really nice so like with that I think I think at this point it will be a good point to show them how we can send kind said guys you have a working API with an endo yeah right exactly yeah you have your that's it you have your first yeah in like a couple of line of codes okay um I think we can just jump back and and and go ahead let's go for it dude so we have the server running now what is next yeah yeah uh just like you did I like to uh like sketch out how our application is going to look like so we will be so this is this is where uh I like to divide it uh this way so we will be having some app config stuff okay uh coming over here uh we will need some middle Wares uh which I will uh explain a bit later yep um we will also need DB config that goes here and this is where our API routes will go or and actually we can go we can say API end points yeah and we also have to have a listener section that's really clean dude I I really like how you laid that out nice yeah yeah it's super clean to and it's easy to understand and it organizes your code yeah yeah um okay so I think we should go and connect to our database now right yes so I think uh what we did where initially when we were working with this guys is we actually set some dummy data so right so before we fetch from mongod DB what we do is we start off by mimicking the data that we're going to send back right so what we could do here is we can create something called like data.js right and David what goes in here so here basically uh goes a simple um J on file and and actually there was a way that you exported it yeah so uh export default so we can say con data and we can just pass in an array of objects here and the array the array of objects here would pretty much just be those props that we showed you guys earlier so imagine we had this right here so let's go ahead and actually make this very visible for you guys so you can see here we have con data and it's just an array of objects and this is going to mimic like a like mimic back kind of the response that we're going to get right and then what we're going to do is to make sure that we can use it outside of the file we're going to say export default data right and this will actually go ahead and and Export this data and make it usable outside so David with that done how can I actually go ahead and pull from this from this data file so first we have to import uh this file just like we did uh before okay uh so let's actually import this file so Port uh data from who um we had a file I think yeah it it just uh said we we do have to say JS uh when we're doing um no y yeah that is correct and this is guys this is literally how our um DB is going to be built up uh it's super easy way to visualize the the uh no SQL database like this right y so let's actually um go ahead and create another endpoint okay and we will be uh saying at dog once again okay and we will have another endpoint uh I think we should we can just go and say version one yeah and like posts okay we will have an other uh what's that called call back function with request and response and let's create the uh Arrow function again and what we want to do now is literally go into the data file okay so the one we import grab whatever data we got yeah what we just imported exactly and just go ahead and send that uh data back right go ahead so we will be doing uh response status um my inter sense is not working yeah so response status uh and to 200 again because it's a good request and we will be sending back uh data right okay yeah and it should be working if you go ahead and test it out I just want to mention as well some people asking how we using how are we're using import instead of commonjs like the require uh somebody says you need Babel and I always forget how you pronounce it but guys like honestly at this point don't bother doing any of that stuff just go into your package Json and add this type module and that will give you those es6 Imports so it will be a very very handy thing so in case anyone joined afterwards that's how we're doing Import in rather than require right so you just add this it is an experimental feature at the moment but I mean is is essentially what we're what we're doing here um nice so David went ahead and added this uh endpoint which means that if we save this now what we should see David if we go to this endpoint so for/ V1 posts it's a get request so let's actually go ahead and set this up so it's say get request and then what we want to do is we're going to say make this a little bit bigger for everyone to see and what we say it was V1 and it was for/ posts right now if I click Send what should I see now like if let's go ahead and do it uh send you should be seeing the data. js5 and there we go nice dude awesome this is exactly the data that we just had so for small like super small projects uh this is a good way to kickart uh if you don't have access to a database at that moment um but yeah uh for bigger stuff then definitely you need to go ahead and set up a mongod DB so can we actually go back to our mongod DB yeah let's do it dude I just want to say as well guys we just broke over 262,000 playbacks and we are just under 2,000 likes so like this is huge guys and this is amazing we at $66 in chat Revenue massively massively appreciated if you guys are enjoying this let's push that like up to 2,000 today cuz that is amazing and David's dropping some serious knowledge here for you guys regarding the M Stack so I think he's doing an awesome job show him some love and David let's carry on strong yeah let's go uh um so let's go to mongod db.com uh let's actually set up our database right go ahead yeah so I see clusters here exactly and Below clusters there should be a a network access right y uh okay right awesome yeah so on the leftand side so over here guys it was actually kind of hard for me to find in the beginning so just over on this left side where it's under security you need to actually set up some security rules over here so what we need to do now is go to let's do database access first or network yeah let's go with database access where uh whichever you prefer okay nice okay let's go with database access So currently we are going to create a user a technical user to log uh to uh access our database right let's go ahead and uh click that button nice yeah uh and you can just type in whatever username you want to uh we will be using password uh so let's use admin as us only two thing that you yeah yeah the only two thing that you will need to worry about is those two text box nothing else right yeah okay so in this case we'll do admin as a user because it's kind of an easy one to remember and then we're going to say autogenerate a secure password and I'll show you guys cuz this is going to be we're going to take this down afterwards so you basically just want to copy this make make sure you copy this because David I I believe they can't actually see the password after right exactly so you create this user and I couldn't retrieve the password at any time uh I had to delete and create a new user yeah exactly if you know how to retrieve it with without creating a new user let me know yeah exactly nice I think you might be able to reset but I'm not sure you can do it but at this point that's the username and this is the password you want to make sure this is all good this just read and write and that's all good rightly add user yeah and you don't have to worry about anything else you can just go ahead and add the user that's correct so we're going to go down here and click on add user nice exactly uh with that done uh on the left hand side there is the network access button right so we're talking about this button here network access yeah exactly uh you can just go ahead and click it Y and now you can just add an IP address uh rule this literally uh will will restrict restrict any uh un unauthorized IP address to call our uh database right yeah but for today and it's for only educational purposes disclaimer do not do this in production environment we will be using allow access from anywhere yeah so it doesn't make exactly and this will set it to z00 Z uh but what David said is really important there guys so this is for like demo purposes it's completely fine if if you're doing a demo but when you do have production environments you tend to limit the IP addresses which actually can access your database right now um Firebase do this in a really clever way this yeah go for that working with a client just do not do it yeah yeah exactly yeah if you're working with a client don't do it yeah don't do a don't don't make it like super open to everyone make sure it's restricted if you are working for a client um oh amona is in the house nice dude he keep going guys on the verge to get 2K yes guys you heard let push them likes to 2,000 today and um uh yeah am 17year old student he's crushing it in pwj I work with him every day he is absolutely a boss of what he does and guys like just be surrounded by these good people and you will go far also sh this is a question for you David uh here David Shi says David I hope we will also use the best practices for error handling also uh I think it's not today uh we will be doing some error handling stuff it's our application will not like Crush if uh something error happens but uh we will not cancel out any um user stupidness right yeah to be fair I mean I think we are we are following best practices with what we're doing today we're going to check if there is an error and we change the response depending on if if there's an error so I think we will be doing that yeah to answer the question yeah I mean we we will be we will be canceling out any technical errors that could happen right yeah exactly yeah nice so with that said guys we are now going to click on confirm and that means we added this sort of a whitelisting rule now so the next step is to go over to clusters and what do we do David now we click on connect uh it's with in the cluster yeah that that's the button that you want to click and you will go with the middle option so connect with your application okay and you can just go ahead and copy that uh long um like text that is what we will be using to connect to our application now actually realize that there are two uh two like variables that you will need to pass in one of them is going to be the password exactly you will have to delete that uh and place your password in there that you just uh copied with the uh the DB user uh do you have that Sunny yeah so let's actually visually do this so let's go ahead and do let's say const and let's just say like um connection connection URL so let's just do connection URL equals and let's paste that so you see this is what we got from that thing and then right here where we've got the uh admin password I'm going to go ahead and paste the password that we had so whatever you set as your password go ahead and do that there and then David there's another important part this one right exactly that is going to be the name of the database that we will be creating so you can just type in whatever you want but if you just ignore that it will be create your database will be created with the name of DB name right with with the crocodile brackets exactly yeah yeah yeah so we're going to call it Tik Tok you can just Tik Tok y nice um and actually we will be now is the time that we will be using the uh so if you don't mind I will uh remove this line and move it down here to DB config nice okay and we will be using mongus for now okay and is it's going to be super easy to connect so let's go ahead and type in that connect okay and let's actually uh use the connection uh URL that we just created nice and we will need to add a couple of like options okay nice yeah so mango is actually under development and under constant upgra updating so we will be need to use something called the new URL parser so let's go and type in and it's going to uh pop up the new URL parser which will be true yep and we have two other stuff the one of them is use I think it's uh use create index and what something is where is happening use create index yeah there we go okay and the last one that we will be using today is use unified topology right okay so and these three uh things are are going to be needed so that it doesn't freak out in the uh terminal and it's running peacefully right okay and with that done we pretty much have connected to our database nice and if we go back to um mongod DB come and refresh a couple of times and like wait for two or three minutes it will show that we are connected right okay so at this point we could safely assume whoa Frank's in the house dude nice Frank just dropped $5 he says learning the mon stack is a great way to start a career in hot technology companies very valuable info sunny and David love that Frank Frank always comes in like swinging thank you so much dude and he just took us over $70 in chat Revenue so thankk you dude massively appreciate that also guys I want to mention just quickly I to take a little note here Frank was somebody who took the Spotify clone that we built um not long ago and actually showed that to um so the company called Sonos which is many of you may know they produce really high quality premium speakers and he landed a six figure contract guys and the Spotify clone helped him do that and that blew our minds when we heard that it is insane that he's doing that and and he actually worked with Frank quite closely now and he shows me the progress as it goes on and it's just amazing what he's doing really really awesome stuff Frank um and guys like it just goes to show you stick with these clones you will learn you will pick up a lot of stuff and it's no joke like six figures and and it's real stuff like uh Frank's always on the coaching call inside a profit with JavaScript every Tuesday as well links in the description make sure you go and check out if you're interested in learning more but let's Carry On David so yeah let's go so now we will be creating a a model which will be the data structure that is in the um that we will be using within our database so I will just create a new file and I will call that uh DB model. JS okay uh super descriptive super easy and we will be doing uh so we will be uh importing uh once again uh from of course okay I added a that um yeah there we go and now we will be creating a schema that it will be in our application right right so let's actually create a const and guys just to clear this up for you guys um so a schema is essentially something which is going to tell it's going to tell the database or like the collection that we're storing information in what kind of data structure to expect right so what kind of oh we just hit 2,000 likes dude hey Zaza says we just hit 2,000 likes my first time watching your guys streams J what's up dude you goes just hit 2K likes what it and let's touch 3K let's go dude um that's insane that's oh I love that dude amazing stuff well done David this is your first stream and it's it's hitting 2K likes that's awesome dude thank you yeah thanks a lot so I just dropped in a snippet of code and this is actually uh the definition of our schema right so I am creating a um variable called Tik toac schema which is a schema and I am just passing in all the names of the fields and I'm telling what kind of data that will be in right so everything is going to be string that's the easiest way to go okay and we will have a URL a Channel song likes messages description and shares all of these are going to be stored in mongodb right okay and we will have to export it uh and I think it it's uh exports. default right yeah um exactly export defa we will be we will be saying like Mong goose. model yep and this is a great uh now we have now you will have to pay attention what are you typing in because this is going to be the collection within your database right so we Define the database name uh inside uh of the huge link where we connected to our database and this is going to be the colle ction okay okay so it's the document collection and I will say um Tik Tok videos okay it's pretty descriptive and with a comma I will just add uh Tik Tock schema right so what you're essentially saying here is we've got a collection of Tik Tok videos which has this data structure exactly exactly yeah so we just created our data structure right nice okay yeah uh and I think uh we can go back uh to our server.js and we need to import this I think one thing worth mentioning is for anyone who's new to um actually uh sort of no SQL development whenever you have like so if you're wondering what a collection is for example like we keep saying collection uh in a nosql database so no SQL is what we're working with here and this mongod DB pretty much so no SQL is mongod DB and David just interrupt me at any time if what I'm saying is incorrect it follows um a structure as such it'll be a collection is essentially like an array of documents so think of it this way and then we have and then you have you can have another collection and then you can have another array of documents and so forth right it basically just takes this pattern yeah so collection if you're coming from SQL background collection is kind of like the table right yeah uh I I I understand it that way okay that's really good inside of collection you can have several documents and one document is essentially going to be a Json object and and that's pretty easy way to understand it if you can if you go back to our data.js file yeah um real quick uh that that's that's pretty easy way to show um yeah so here's like the collection yeah yeah the whole thing is a collection right okay and each one is collection and exactly exactly go ahead yeah yeah and I think it's a super easy way to understand databases yeah I think that awesome explanation I think that would help a lot of people also David I just want to stop uh for one second um because this is this is really really awesome like somebody said based on the Airbnb clone I created an application for a local company in my city and so sold it for $200 thanks so much and greetings from Poland that's awesome dude whoa that's insane right that's cool awesome yeah that's insane like yeah so that's amazing like just from the Airbnb clone like this person's probably restructured it for a client used it yeah awesome let's carry on awesome yeah yeah let's carry on so now we need to go back to our server that J file okay and we will have to uh import uh this model that we just created right okay so I will just go ahead and say import uh and I think I will name it videos okay and I and we will import it from uh DB model file yeah it's F I found it awesome so we pretty much have it and now it's going to be a super easy way uh to just go ahead and actually post data into our database and we don't have to worry about manually creating our database and collection and whatsoever because mongos will take care of it for us right okay y so let's actually create a post uh endpoint so app. post right and we will be using the version two SL poost uh end point okay which yeah and in the Callback function as usual we have a request and response uh variable oops sorry and let's actually uh let's actually create the arrow function and uh we will be passing in whatever data that we want to save into our database uh inside the request body uh and this is a this can be done with Postman pretty easily but first we have to yeah yeah we have to just go ahead and save it into a variable so we don't have to worry about it anymore so let's go ahead and c and the naming convention that I learned is uh DB Videos or okay it's like DB and whatever you want to save and it's going to be the requestbody right so David just to just to tell everyone like what are we trying what are we trying to achieve right now like what is this what is this post request doing what's the purpose of this for okay so the post requests per purpose is um literally adding data to our database it's like posting on Facebook when you are posting on Facebook you go ahead type in a string and then you hit the button that will send the request into Facebook server that will save your post into their database and then Rend it out right this is literally what we will be doing now right nice and and you you will pass in your stream what's up we just got another donation dude sorry sering Cen he watches these videos quite a lot uh and he just jumped in as well he goes thank you for doing a m project slightly different what I'm used to you guys are killing it dude I love the fact you show up every time keep doing that um and just like I'm glad you're just watching these videos every time like it's amazing that you're here showing up that's awesome dude nice yeah exactly yeah thank you guys um so yeah and we will be passing the data in the request body yep and so we have to just go ahead and save it into a variable right yep now let's actually go ahead and save our data into our database okay so what we will be doing is uh we will be using the model that we just created uh it's going to be a super easy way so let's actually type in in videos. create and we will just pass in as data our DB Videos right okay whoops uh we and we will have now this is the time when we will be handling any kind of Errors okay so if there is an error we will run uh a function and if not we would just want to see what kind of data that which is created right so that's let's go and type in uh data and here we go and we will be just using a simple if uh if gate and that would just do it for us so if uh I would and so if there is an error I want to set the response status to 500 right which is going to be uh internal server error and send back whatever error that we had right quiet so if there's an error change the stat to 500 Y and return an error object okay yeah and but if we don't don't uh catch any kind of Errors so else uh we want the response status uh set to 2011 and 2011 means created right so it's uh when you're posting and and it's succeed and it succeeded uh you want to see 2011 right right yeah and we're just going to send back uh the data that we just created and with that I think we have our uh our second end point Done Right awesome so if you can go ahead and yeah if you can go ahead and uh check it out okay in post that would be awesome nice just want to drop in Al kamish just dropped a juicy comment he says sunny I got placed because of your videos I will donate after my first payment love you paji that's insane dude like he he got another job from this just seeing like the people getting jobs from these this content is just like I I have to take a second and just pause because it's like it's always like just so like humbling when people drop that like it's such a lovely feeling and and it really does make all the difference guys so let's just like we'll keep it coming yeah it's so motivating yeah so David like we saw now this was the same um Endo but it's V2 because we're now we called it V2 to show that it's now not pulling locally but we're going to be posting to the mongod DB right so we're going to do post and we're going to change it to V2 and what should I so it's you I I saw that you actually had a body right so it says the database videos we're passing as a request body so how can I go about actually passing this body I think we can click on body here so exactly then you will need to click raw because we are just going to be uh like hard pushing the data okay and that is where you want to copy one of the documents uh from yeah exactly and you you have to set the uh file type to uh Json right there because we we will be using Json and you just have to go back to data.js and copy one of the documents and paste it right in there right right so let's go ahead and grab this one for example exactly and it's going to error because Jason actually needs the uh double quotes around these uh keys right here so exactly you have to uh you have to take care of that yeah exactly and now if you hit sand it should be working and it should be posted into uh mongodb okay so we're going to hit send and then this should populate if it's all good and if it is all good yeah if it is good it should send back the the data rate that we actually posted so we should see this down here afterwards if it's all good right so let's go ahead and click Send sending request and it said could not send request view in console let's go ahead and see what uh are we actually are we actually running we're not running the server are we no we are we crashed okay uh yeah no um there was a bit of issue okay now it's running um I forgot to add the extension uh when I was importing the modal so you have to add the JS I think somebody actually pointed that out that's really awesome that somebody pointed that out earlier yeah I saw that so whoever pointed out what thank you I wasn't sure what they were talking about but now it makes sense so um yeah we click post now hey there we go we get this back oh something happened because uh we just got back these two uh Fields I think I think the reason why might because we not we don't have a middleware right now to to pass Jason right do we need the express. Jason middle yeah oh yeah yeah I forgot about it so this happens often times and you were just spending hours and hours trying to debug what is happening and the only thing that you forgot saying app use yeah H and the only thing you you forgot is Express is Json fun fun ality right yeah exactly that is all that we missed out exactly and guys what that's doing is it will basically pass the response as adjacent object and then it will it'll read it from you now we just got a $15 donation from uh codep suar says I develop mobile application using react native even though you guys develop clone using reactjs it makes it really easy for me to convert it into a mobile application that's insane dude and that just goes to show that a lot of people had asked previously about if react native can be used used if you know react yes the answer is yes and that is so awesome to see that dude anding answer yeah that just hit us to $87 in chat Revenue thank you so much guys who that's awesome that's crazy so let's go ahead and hit sa yeah yeah now now it should be able to understand Json and it should be able to uh pass in data right y yeah let's go s y there we go dude there we go we get back to Jason now nice yeah yeah yeah yeah awesome so that was that that one little line of code uh can cause so many errors right nice so with that said so we we just uh pushed some data into the DB and let's actually check that it actually got pushed in so let's go ahead and go to collections yeah right so collections yeah exactly and it does take a look bit longer to do it on mongod DB uh and you can see now uh here's strange let's go to Tik Tok videos so this is the one that we actually pushed to I'm not sure why that came up but you see this was the first one that we pushed by mistake um so ignore that one for now you can go ahead and uh and actually you can delete it it's uh it should be on the right side oh nice yeah let's just delete that one there's a little yeah exactly there we go there we go so should we go ahead and push the other one David as well yeah let's go let's go let's go ahead and push this object in as well so that way we should have some data inside of our inside of our DB so I'm going to go ahead and pop that in there and again we need to change this to the following so boom boom boom likes messages description description sh there we go and get rid of that little extra comment and just to double check so it said and nice David I like the two1 that you added as well that was a really nice little touch yeah so we hit send now it's like what what you always do with front end so on front end you have to worry about the nice little touches uh with like um with like shadows and stuff and this is this is the exact same nice little things uh with backand right exactly yeah we just hit refresh and now you can see hey we've got our data we got RAF Kazi Channel go and my channel nice awesome dude okay exactly okay now let's actually go back to our server.js file and add the ability to actually retrieve that data that we just added right okay so we will be we will need another endpoint uh which will be using a get uh method right because we are downloading data uh we will be using the exact same uh endpoint and yeah which is V2 and posts okay we will also have the usual um callback function okay request and response so let's see and now we don't have to save anything a get uh method um call will not have a body so that's uh that's going to throw un unknown but what we can do super simply is say videos. find and that will just retrieve uh the data from the database and we can add a filter Within These quigly Braes but you don't have to worry about it so you if you want to retrieve everything from the database you can just leave it completely empty yeah I think we can actually we can actually get rid of that if we don't need to pass options right I think so yeah yeah let's try it and if it doesn't work we can just head back um and this one will have another um callback function uh with an error handling and a response data right okay and we will just go ahead and copy the exact same uh if gate RI statement and just you can we can just pass it in there one thing we have to work uh take care of is the two1 status code okay we have to change it to 200 right okay because uh it's downloading data and error data there we go um I think it should be working now teral it's working key differences are the get and the post here so get obviously we've changed it so it's the same you see it's the same actual URL but it's just changing the type of uh request so if we go to get now and we can clear the body because we don't want to care about that if I click send you can see hey it just went ahead and fetched us two things we got the items here nice awesome dude there we go there we go say it's fetching from the DB yeah awesome exactly now before we uh deploy it to Heroku we have to add another uh kind of um middleware okay and this thing we we want this thing to be run uh before every um API core right okay um this is again uh huge disclaimer this is going to be security without ignore with with ignoring security right okay so this is a thing that you don't want to do uh when you're working for a client uh yeah so let's go and say app. use and for all the functions that means we will have a call back with a request and the response and then next I will explain that what what's that later uh and we will just uh setting a couple of headers and if you are asking uh in the comments if it's a course headers yes it is this is this is course headers okay um so we will just be adding a couple of headers um one of them is Access Control allow uh origin and we will add a star which means everybody so we will um it's it's the exact same thing that we did uh on mongodb when we allowed access from anywhere y uh and the other one is going to be actually I will just copy paste this line of code and we have to change the origin to headers and with that done we just have to go and hit next so what these line line of code do uh so whenever we receive a request we will be setting the headers to these which means we accept all the requests and then we pop through these functions that are in here right right so that that's pretty much all it does nothing else and with that done I think we are ready to deploy nice dude how's that sound awesome I think that's dope yeah that's dope I I wasn't expecting that okay so that's awesome guys so now we can actually push to the database we can pull from the database so I guess the next step like David said is to actually go ahead and deploy this thing into um we could I mean we could maybe do the front end connect it to our local and then deploy both uh yeah we could do that but then we will have to um change the connection right on the front end okay more headache so that's why I prefer to um just push deploy the backend yeah okay right so how do we do this so we do that by going to hu.com it's basically like virtual server that's the easiest way to put it and understand what it is so you can go to her.com and uh you can go ahead and register it's now it's again it's a great time uh to pause the video if you don't have an account or maybe do along it but sunny I don't know if you have an account uh I'm not sure I mean I have one for ages ago I think I haven't used herok in a while um let me go ahead and try and sign in guys one second yeah yeah yeah oh I do have an account I think yeah nice okay there we go yeah so you can go ahead uh if you don't have an account and just create one it's again it's free and you don't have to provide a credit card yep and then uh it's going to prompt you uh I think my video is frozen yeah there we go um you got 1 2 3 four okay uh so on the top right corner this is how how you how it will look like if you already have an account if you don't the upper uh part of the screen is going to be uh completely purple and under that there will be two buttons and you will want to hit the create new application right if you go ahead and uh hit new yeah create new app that's the uh that's the button that you want to hit okay yeah you can just um I don't know say m Tik Tok TI Tok back end or whatever do backend yeah and just uh go and create it okay create app nice and go create app and nice little donation thank you so much whoa thank you so much appreciate that dude yeah um yeah now there is actually two way to go about it if you have your code on GitHub you can just go and grab it from there but that's uh that's the boring way and backend guys do it with a CLI okay so there is a option to install Heroku CLI right okay can you see uh you can just yeah open up it in a new uh yeah and if you start uh scrolling down not not not that one uh you can go even even more down and there is an other uh installation method yeah that's the code that you want to grab it's uh for Windows it's for uh Mac it's for Linux it's for everyone uh and you can go with that and just paste it it will require your password to install the CLI okay and this will allow you to uh this will give you a super fensive way to deploy your app right nice so how it doing so this is just uh installing and nice nice there we go awesome there we go perfect so we can back to um yeah you can go ahead and close it up now let's go and you will have to log to your Heroku CLI it's going to be the exact same way that you do it with Firebase so it will pop up a browser uh page okay so C nice I like I like how they do that yeah so you do so get um Heroku login and let's go ah aead see say press any key to open up there we go yeah just uh hit hit any button yeah just go ahead and hit return nice okay and then we can go back and it LO awesome yep I think it's yeah it's breaking up a little bit there we go everything what was that okay sorry uh yeah so you can go back to your Heroku yep uh the other one yeah and you are already seated into your project but you have to initialize a git repository by hitting git in it okay so what it does is basically we will be initializing a g repository a Version Control and uh we will we will be pushing this code to heroku's uh G uh repository right let's go back and set the origin okay so this one here yeah that's the one yeah yeah and you can just go ahead and copy paste everything like it's it's super easy nice there we go we say it as the origin yeah yeah and you can just uh commit like saying get add dot then get commit D am we say get and this will actually go ahead and add it to our G so if you do get status now you can actually see everything goes green I mean it's committing the node modules do we want to do that or um we can go with the node modules uh if you don't want to uh you can go ahead and add a g ignore file yeah so easy way to do that guys is if you right click and uh I mean yeah I think we should add a get ignore I think yeah here let's do a so it's dogit ignore like this and then in here you can just do node modules just yeah node modules actually can you go and Google up something for me what's up uh just go go into your browser and uh uh and open up a new uh page so just we can like show people why it is important to create a do getting or file okay and if and you can if you could um like Google node J node modules uh node modules GitHub meme just this yeah show me can you show the and and the dog dog Cloud this one ah yeah yeah that's it yeah that's what's going to happen guys it's literally going to like just Cloud everything we don't want to do that yeah yeah so you can go ahead yeah exactly um nice so what we can do is actually I'll show you guys just a little trick as well so here if you go inside and you can see stage changes get ignore node modules yeah and inside of here if we do get um status uh so he's already added them to staging so I think actually at this point what I need to do is I can actually minus them all and you get status there we go and then you can see now it's just these files yeah so so now you get add all get status um and you only want to make sure that these files are green not all of them right so it's very very important to to do that so you want to make sure you're only committing these ones um uh and then what you want to do is you want to go back to those little commands and what we can do is we can just commit saying uh mean we don't have to use thematter that's that's perfect say tick talk server commit or something and then boom we committed it you want to go ahead and actually open up a new terminal before you do anything else okay uh because you want to see all the uh log so you can just type in Heroku logs DT right and that will just initialize all the log files or all all the logs of the deploy and this will allow you to easily see if there is an issue and if you go back to your other terminal oh nice okay uh yeah yeah yeah if you go back to your other terminal and type in get uh get push Heroku Master Okay so this Command right here guys get heru push master that is the last step to deploy our app and if everything goes well um we will be yeah and on the right side the build is going to be starting and we will be able to see the log of the build yeah this is awesome dude nice look at that yeah and there is an error so that that's why we need to see yeah it crashed for some reason um right so it said local package Json exists but node modules are missing missing did you mean to install um it should be installing oh it it got deleted for some reason let's go ahead and check out what's going on so we've got the package Jason here we've got the node modules over here um that's an error I've never seen no it's modules um and node modules um when pushing to Heroku let's go check this out yeah so deploy node Heroku apps so I mean I think it should by default actually go ahead and and push I mean um but I mean there may be something small here that we're missing um it says package.json unspecified okay so node modules package Jason remove the package lock file oh yeah oops there we go let's go ahead and do that uh and also I I think we need to actually go ahead I've already pushed it to the um the thing yeah you need to commit again and push it once again so get get a DOT yeah uh let say this let's just do have same commit let's just do a get push Roku there we go yeah so let's see what do we got well stuff like this happen yeah this is part of engineering exactly guys so you can see now we should see um it said build succeeded yeah it's starting okay crashed okay so it says mpm1 local package.json exists but modules are missing did you mean to install and there must there should be a little simple fix for this um I haven't worked much with Heroku before but I mean we can debug This Together guys so let's go ahead and check it out so local package Jason exists but MP okay so mpm stop uh let's just type in Heroku as well and if anyone does know the answer to this let us know in the comments below and we will go ahead and add that in so you need Prof file so let's go ahead and check it out so check out so you need to run mpm install before you can build the package I know that but why do we need to do that in how do we do that in proc file somebody said proc file so let's go ahead and check out what a proc file is the proc file in Heroku oh okay okay so proc file so we know that we need a proc file how do we add that in guys so let's go ahead and see add NPI script get add so in Heroku you can add a build step to mpm install Okay so let's go check that out so add a build step do you uh I haven't actually used Heroku much so let me let me check it let me check uh I'm going to check it out my her go on my end go for a dud this is an error I've never seen so so with the it's a it's a proc file without extension so run mpmi again this will save dependencies in your package Jason yeah so typically that's what we would do I know but as in in this case I don't think cuz we're not committing those things so he says in settings okay so let's check out in settings remove build packs certificates transfer mainship uh um uh do you have the nodejs build pack added nodejs so it's called No JS yeah it's got no GS build pack oh I've added duplicate now oops uh oh duplicate okay so yeah so push node modules along I mean we could push the node modules along just for the sake of the tutorial but I don't really yeah we could do that mean I mean okay I mean I don't really shouldn't really be doing that but terminal okay so run on Terminal Heroku run mpm install let's go give that a try Heroku run mpm install let's go ahead and see if that works okay so look running mpm install on Tik Tok man back end nice dude and there we go that was ready Dev so thank you so much dude that's awesome it goes up and complete up to complete let's go ahead get push Heroku let's go ahead and see oh right sorry oh no I did it right okay yeah it's done I think it's done dude that was insane that's what I love about this yeah don't push the no modules yeah do not do that you see even even we were on the edge because it it's like the demo gods are against us but um yeah that's awesome nice okay so now how do I get the um the URL so you have to so you have to go back to your Heroku and in this settings down there not not that one that's the get repo um yeah that's the link that you want to just go ahead and click and it should be saying hello world no it doesn't Okay so application error is what we get let's go ahead and check out the actual overview and resources maybe let's go ahead and see so it says this app is web mpm start on deployed today at 1003 resources let's see and it's actually get push Heroku Master we've already done that okay so it crashed it crashed over here it says I think it said app crashed State changed from up to complete error app crash me get so crash when we tried to access something it says check your Heroku logs method get pass says 503 so which is strange let me check if we do this so let's go ahead and do let's go back to type in V1 posts it's going to yeah it's 503 again even there okay yeah that that's why we have the I mean that was the half check API I mean I see a lot of people saying the environment variables guys oh the port oh yeah the port actually maybe so maybe the proc that shouldn't be an issue oh that that could be it because I mean like they might be setting a port number on their end which which we're not mapping to correctly so David I mean previously we usually do this right it's written like process environment port or 9,000 so in this case what we could do because it could be a local thing so let's carry on with that there and let's go ahead and and and add this one so so get add get status and then let's do get commit uh we don't want to commit the package lock right now just delete that for now um get status okay get add and let's just do get commit and let's just do just do fix bug or something and then let go get push her master there we go guys this is kind of cool because you guys can see um so Heroku doesn't let you assign ports beforehand okay so maybe that's why suceeded compressing yes it's compressing looking looking promissing now so it's starting build succeeded released version five um a damn it's a oh now we have now let's go and and install the the stuff yeah oh man there we go this is awesome though guys this is like debugging live with you guys which is kind of cool and I can see we still got half a thousand people watching so it is really cool to see that wa so it's up to complete and let's go and go back to the link that we just had the one that crashed uh in the browser and let's refresh application error okay so we got another one it say the code this time is h10 interesting oh it's 503 still okay I think what we'll do maybe wait create so somebody saying create de proc file web mpm start configure the mpm start script on package Json to start node server so let's go ahead and look at our package Json start nodejs server this one here is start nodejs server do not forget to install M config install M and require I mean I don't think we need m. config at this point it will install on herok if you specify no JS in package Jason like this yeah so maybe we need the engine specified because right now we haven't said the engine um so somebody actually dropped a really good comment there I'm just trying to grab it um before it goes so let's go ahead and let's let's use that let's go ahead and give that a try so thank you RAF so Rafel just said why don't you go ahead and try this so boom let's do that engines like this okay let's go ahead and give that a try mhm let's do get add and then let's go ahead and do boom boom boom get commit am let's just do book fix uh get push Roku master and then we're going to probably have to maybe I mean now I guess it should do so downloading and installing node bootstrapping mpm replacing something okay oh it's replacing that one oh I mean I guess like we could have maybe done a higher uh Higher One but it's okay so 503 unavailable server indicates the server is not ready to handle the request the server is either overloaded or okay so it might be actually the server down um wow that's strange yeah nice awesome so let's go ahead and do let's go ahead and check the logs and it's going down did you try and access it again um not yet uh I'll try to um just running and install again Ser is not down yeah so a lot of people are saying proc file on Route um yeah I mean if somebody can give aile and and a snippet of code maybe then yeah yeah go ahead proc file right so let's do this and let's go ahead and try boom so we're still getting the eror okay so I think at this point let's try and check it out so profile so somebody says paste that but uh they didn't actually give the code okay paste that PM PM run pm2 run server JS I mean use pm2 okay I mean let's try that let's give that a try so pm2 run Ser J and that's inside a Pro File they're saying so let's go ahead and give that a try pm2 run server JS and I just want to double check that guys pm2 run as in server JS obviously automatically restarts your application if it crashes digital ocean this is digital ocean guys I mean this is pm2 I don't know if this is going to work for what we're doing here I mean so a lot of yeah so some people saying don't use pm2 like okay I don't really I mean this isn't really going to do much so let's go ahead and check what else is saying so create and then inside right web all right so somebody else gave a nice little suggestion he said create proc file text file then write web uh node server.js let's go ahead and give that inside it and a lot of people are saying that this is a bad choice and Heroku is a bad choice but guys honestly um like no it's not this is completely fine this is a case of like this happens this kind of stuff happens um let's go ahead and give this a try now yeah so this this happens and this is actually a good I actually glad because I think a lot of people do tend to think that there's no debugging and this is the reality of it so added proc file um oh oops I've added it in the wrong thing it should be inside of here there we go get add dog status and then we can see added Pro File and let's push that that guys to Heroku so say Heroku get push Heroku master and let's see how that goes guys yeah right so we're pushing it down no JS server is not running on Heroku I think that's what's happening guys you're right because if it's a 503 it means the server is not ready which means it's probably not running so somebody is true like I think that that's a very good point right so says okay so it says starting process with mpm start hey oh no okay spoke too soon guys God damn it oh wait actually this is good this is good so it says module resolve esm resolve okay so now mod not found cannot find Express imported from App server it could it be that it's not ready for es6 because I just uh recreated the whole thing yeah uh and it's freaking out for me with the exact same stuff and it says uh the es module type is uh so so the es module is set to no so the es type is set to module and that just doesn't work out for it and it's crying about the import uh in and and not seeing uh require uh I'm just checking so it says cannot find Express imported from App server JS so let's check it out so Express okay so I mean maybe yeah maybe it could be a case of um I mean actually this is a good point we we specified in package Json uh an mpm and node module of six and I don't think it's supported in six in hero cool yeah yeah yeah so so like so let's do node import guys does anyone know what uh version nodes uh start supporting um import statements I think it's I was I think it's like 13 14 so how can I use 14 so node 13 and above okay so node 13 and above so in this case let do 13 I don't know if they support 13 I'm going to push for it uh let's see yeah this is why that's that makes a lot of sense actually that makes a lot of sense uh get ad get status uh get commit am let's just say upgraded node yeah node upgraded and let's go and push um to Heroku yep and let's go and check and guys whoever is being negative in the chat you know I don't think like you guys have to be kind of realistic to what development is actually about so somebody somebody said unsubscribed I mean dude like that's cool you can do that that's cool like this is what actual this is what actual development looks like you know exactly and by you unsubscribing you will make our community healthier yeah so like this is this is what it's about this is a positive environment uh what we do we support each other so now what we're going to do is we are going to go ahead and do mpm in Heroku run mpm let's try and run mpm install again so her run mpm CU I think when we change the dependencies all the dependency tree might be messed up so an mpm install Okay so so it's up to complete nice and then let's go ahead and run mpm start MH and let's go ahead and check it out so mpm start and it's up local package Json exists but no modules um did you mean to install I mean I guess I just did install we can try again um hold Dam okay I mean I think what we might do in this case is actually just change it to the old style of importing without the es6 yeah that may be a good way to go just for this case but I mean like you know I it is really frustrating because like it would be cool to see how that works but you know what it's fine what we can do in this case is I think it's going to be an error on heroku's side look it is I think it is this um it's this support okay that's fine so what we can do guys I'm going to this is this is kind of cool like so we can actually show how to go ahead and get rid of this now so type let's go ahead and change this to so let's change this back to six let's get rid of that support there and what we're going to do now is actually go back into our code and I'm going to refactor it all to be the old style so what we'll need now is instead we will say con const Express uh equals require and I've got the Snippets uh here there we go okay you faster so we did the require so this is the sort of es6 syntax right so we can go ahead and drop that out and look loads of people find this cool this is this is awesome dude and there's over half a thousand people doing this with us so really really nice to see that uh and now what we're also going to do is we're going to change this so it's going to be const uh data equals going to be requir yeah require boom like this and then this one will be con require there we go nice uh so that's cool and then we also need to change our exports so like here I mean this one yeah we should really do this we should do like exports um exports how' you do it again is it exports. exports equals mongus model and then we go with Tik Tok videos wait wait wait we can't see what you're doing dude let's go over here so he sorry sorry sorry so uh so you're changing this one okay so module exports equals yeah yeah and then I just uh yeah so instead of yeah instead of export default I'm just going to say module. export and um Mong mango. model and everything is everything else is uh the same whoops and don't forget about the import up top which what about this one I think I think we this one we could do it like this right we could just do data uh what's up and and you see where I've got data uh data.js I think we can export like this oh yeah yeah yeah we just do a simple export like that and then db. model okay nice and then what we're going to do is just to test this out let's go ahead and do uh nodemon uh server.js app crash module not found and this is inside of server there so what is this freaking out now um cannot find module Express what the oh dude D oh my God I think I know why this didn't work whoa what's look in our package Jason we haven't got the dependency here what which means we never did mpmi Express oh my God okay let's let's try something now this is this is really oh somebody said that Bonito came said that oh my god look oh my God damn it okay I think yeah that was it so let's go ahead I'm going to try something cuz I'm I'm really sticking by my guns with this like what was it was it module I'm going to we're going to do this it was type module yeah let's go why not yeah let's do this cuz guys like we God damn it somebody said it somebody said it all right we we can do this we can do this guys let's go ahead and change this back to export default um but I mean like that's it like I think we all learn here like in a in a pretty crazy moment like you know like yeah let's go ahead and change this uh David I think this one should be import yep there we go and in server.js let's go back here and let's go ahead and get rid of this Pro File and ser DS there we go and uh I was actually going to just do okay we can do that on goose y there we go I'll just comment out everything else just to so it's there you know okay so I'm the kind of programmer there you go uh let's go ahead and and oh oops I'm running oh me oops I didn't mean that uh D nodon server.js so identify Express has already been identified let's just go ahead and drop this out here and then let's do it again why where is it got module is not defined in DB model DB model is okay yep yeah oh yeah there we go and it says address is already in use because I'm running it over here oops uh address is already in use am I running this app anywh else okay let's actually change I don't know error on change it to 8,000 yeah change it to 8,000 okay oh I think I've got 8,000 actually in use do um esm module loader is EXP mental events okay just change it to 7,000 um I changed it to 880 okay okay so so some reason it's it's like it's double starting it or something but um app and Port I mean I'm not running anything on aa oh process environment Port oops okay maybe that's why it shouldn't be shouldn't be it yeah let's do um let me just change it to some random a bad P oops you can't do that guys that that's a silly mistake he's like 81 right um that's that's weird that's strange I don't know why that's happening you have three terminals open I mean I don't yeah but guys I don't I'm not using that one I was using this one let's go ahead and cancel this that's my react app let's go ahead and try it now okay so I guess it was that oh strange the hell okay what the what the I mean this is all fun guys this is all fun we still have 560 people watching this is insane I'm glad you guys are enjoying this if you're enjoying this just drop a comment yeah exactly let us know get status and I think we should rename this video so building and uh debugging and fixing I know like it's it's cool though cuz this is a full stack build like is in what do so let's do let's go ahead and say fix uh let's just say fix Express dependency um sorry fix dependencies yeah fix dependencies uh and let's do get push to Heroku so get pushok master and this one and I'll just go ahead and open uh I'm going to go ahead and check the tail so something yeah yeah yeah okay build started there we go build starting a lot of people are enjoying this he goes Jason says big shout out to you both legit one everyday programmer goes to dude like now we're going through it together this is even when I'm building these clones like I run into a lot of debugging things it's just obviously when you do get stuck like it's a case of like it's kind of cool to be a to do this together so it says starting process yes dude starting to up that's what I'm talking about let's go guys let oh man somebody just donated as well deack Pandit pleas L your spirit guys that was insane thank you thank you let's go guys let's see in Chrome hey oh okay internal server error let's check why let's check why uh 500 so a 500 for the forward slash just check why I so we've got a get headers it not is not a function what do you mean wait where did you where are you getting that I can't see uh it's in the log it was in the log uh okay let's check so now let handle let's go ahead and check out so this is the thing we do V1 D V1 posts yeah internal and let's go ahead and check the actual um so 500 inant Ser eror Network so at least okay so we made we made progress CU it did definitely so it's pushing that now post gets 500 I mean it's not giving me much it's check if V okay that there there's something weird thing going on in the invitation okay so um no I I I I think I know what the issue is I think it's because I wrote it in plural resda uh let's see if if it pops up with my intellisense but yeah it's because it's plural okay it was one single letter so when you are uh defining your middle Wares uh you should see it set header in singular without the S at the end right oh do we have set headers yes oh okay okay yeah that was probably the reason oh here it is David yeah you're right look type error set headers is not a function okay nice yeah yeah dude that's cool man I mean like it's a it's a huge learning curve yeah that's nice nice exactly okay so let's go ahead and do uh get ad Doom uh whoa we just got another 5 donation keep it up guys I love this guys this is insane this is like respark like a fire this is awesome thank you so much guys um I mean all these tutorials are like everything is working perfectly and there is no error but at the end of the day the the the real truth is that coding is 90% % writing the actual code and then the other 90% is debugging yeah it is definitely yeah like you you will run into these things a lot guys and it's it's an exactly and like we showed here like you it can be very easy even when it's an experience developer to start to lose heart um um but like and I see some people saying you should use like cause modules yeah we should but it for the sake of the tutorial we keeping it very very simple um nice though dude I mean like this is cool cuz even like I haven't used this in quite a while uh so Heroku is pretty cool to see this um guys we are at $96 in chat Revenue that's insane thank you so much yeah that is awesome uh okay so now it's starting mpm start again it started on Local Host 85 nice and let's go ahead and check it out let's go back to okay so it got V2 post replied empty hello world came in whoa it's working let's go man let's go ahead but V1 post let's see V1 post okay so V1 post gave it back that's awesome that is amazing right that's that is yes guys thank you that's what we need that little oh guys oh sorry so somebody actually gave a Super Chat he goes you miss you guys are rocking thank you so much dude whoa this is all coming in Jason Francis goes let's go just dropped another fire donation let's go guys this is insane holy crap the energy wow oh man thank you thank you oh man this is so jokes okay so all right so now this is the kind of community that you want to see right yeah I know right like this so V2 so V2 is not working okay so that's that's interesting V2 is not in working so V2 is actually when we do a get post saying find okay so maybe actually David it it might be to do with the fact that we're not passing the yeah yeah but I mean what we could do what we could do to test this is we can actually run this on the local so we can say here let's go ahead and do nodon server.js like this and then what we can do is listenting on Local Host 9000 so let's go ahead and do Local Host 9,000 V2 poost and double check so this is emptying a this is a return of an empty so let's go ahead and check it on on here we see okay so I don't think at this point there's actually there might not be let's go ahead and double check the database so Tik Tok cuz that's super strange I think what's up that that's uh super strange that that's actually come up oh David look somebody's actually the database is gone so maybe H interesting guys I mean if somebody went if somebody went in and did that I mean like let you know give us a break come on I think I think I think somebody could have did that cuz I wasn't expecting that we'd be debugging so somebody could have just gone in and done that but I mean you know it's all good this look good let's go ahead and let's just post yeah actually let's go and post it yeah somebody's definitely gone ahead and done that I think cuz I was wondering that's what happens if you don't secure your end points yeah guys I mean that's it you just saw security it's it's funny somebody go oh man funny what did you do oops I have no idea there we go description she has this is a true programming like this is an experience today guys this is an experience uh let's try this one out here and then boom and then just quickly I mean like guys it's don't do anything to database cuz if you do like I mean I can just I can I can just block the IP addresses and it ruins everyone's fun you know like so let's go ahead and get this boom and now let's go ahead and make that request on our boom there we go Works uh whoa there we go just Bo everything and let's check the Heroku version there we go guys so our server is up and running guys I think that was pretty dope that's pretty dope you know that was pretty fun yeah yeah now that was such a huge run oh man I mean like I think I think everyone like we made it in the end we just hit 33,000 playbacks as well um and guys like if you if you thought that was if you thought that was insane and we made it in the end smash the thumbs up button that was a true live debugging experience you know like that was a really really good one okay so guys with that said now we have the backend up and running it's deployed and it's in Heroku right so it's literally sitting at this end point now so this one right here is sitting there so what we can do now is we can actually go ahead to our front end again so let's go ahead and close a bunch of stuff let's go back to our front end uh app.js let's go so here we had the video being pulled in right here right now uh um that was actually true you know somebody said um uh where is it first ever in my life I saw a live example of security yeah like that was that was an open case there where like if you if you leave it open yeah go there is a hacker Among Us oh who's the hacker yeah I love this guys and the view account's coming off this is insane yeah oh man right so now what we're going to do guys is we are going to make a use effect because a use effect is basically when we want the app to when the app initially loads what we want to do is actually create a like a fetch from the the database but before we do that what we're going to do is we're going to create an um we're going to use something called axios so a lot of you guys what axio is I'm going to go back over to my uh let's go back over to this terminal let's go ahead and go back into our Tik Tok build there we go so we're back inside our front end Tik Tok and I'm going to go ahead and do mpmi uh oops I can't you guys can't actually see whoa damn dude just got 10 P dollar donation thank you so much for your time I'm learning a ton from omed n dude thank you that's insane thank you dud so much yeah yeah that's amazing dude thank you so much um somebody said what is Sunny's personal channel name it's just Sunny sang on YouTube by the way so if you want to follow go ahead I just hit a th subscribers not bad so wow yeah I know right yeah thank you dude uh so let's go ahead and create an axios JS right so axios JS oops axos JS and here what we're going to do is underneath we're going to do mpmi and axos so in the bottom I'm going to make this a bit bigger for you guys to see mpmi axos at the bottom and this will actually go ahead and pull axios into the uh the project right axio is a good um Jason follow thank you so much um yeah so live debugging was I think that was actually really cool David I think like I actually learned a bit myself as well like that was pretty cool that was intense me too dude yeah that was intense dud we should have had some like music you know like yeah I mean I mean it's definitely a real world uh exam I mean it couldn't get any more real world yeah honestly exactly yeah yeah now we just added axos to the project so what we're going to do now is we're going to say import axio from axios and here what we're doing is we're saying we're creating an axios instance and we're exporting it so we can use it outside and then here the base URL so a lot of people would say you can use fetch I agree but there's a reason why I kind of want to show you this axio way because I do like the base URL stuff um so I just want to show you guys this and yes you can use Fetch and you can reduce the number of dependencies that's a good point by Jason Francis um so he just choed in here thank you um so what we're going to do now is we're going to change the base URL to actually be the base URL of this one so let's go ahead and grab our Heroku deployed base URL so this one here and guys like you can see that that's now going to be the base URL right so what it means is like when we use use effect is essentially a hook which is going to get fired off and what it allows us to do is it says when the app component loads um go ahead and run this code and we only want to run it once in this example right so we're going to leave the dependencies empty so when app component loads go ahead and do something and what we're going to do inside of here is we're going to say um let's go ahead and say uh a wait so so what we actually need to do is we need to do an asynchronous function inside of it so the way you do an async inside of a use effect is you say a sync function and then let's go ahead and say fetch post so this is going to make an API call to the back end and then here we say uh const request so let's just go ahead and say const request Quest or actually this would be the response really I guess the response yeah equals a weight and then we're going to say axos doget and then let's go ahead and pull from the V2 so not this one sorry V2 posts right remember V1 was our local V2 is our actual mongod DB with two post and then what actually I don't think you have imported xos by the way oh yeah I haven't no sorry yeah so don't do this guys this is a bad thing what you want to do is not this one this is pulling from the actual thing you want to go ahead and do it from our local axios because that one we the difference between the two is I think it's uh it's uh super important to understand so if you do not add the dot slash uh that means you are importing the actual dependency but this way you will be importing the instance that you just created right exactly exactly yep so very very important uh cuz otherwise you would be getting the um you wouldn't actually be doing the um you w using the base URL we just got another other stuff to debug yeah we got another five by Calvin caber he says first time watching just started learning how to code most of the terminology going over my head but I don't want to leave my seat keep it up guys honestly dude pattern recognition yeah thank you so much firstly and pattern recog even the fact you're watching this I'm telling you like it will slowly drip feed into you and you'll start to understand different you'll start to see patterns across different things like how a function is written and so forth just your You by you being here is the best thing that you could be doing for yourself so thank you so much for that donation we appreciate you here what we're going to do guys is when we get back the uh the response we're going to create a piece of state to actually go ahead and store the videos so we're going to say videos and then we're going to say set videos and here we're going to say use State and we're basically going to go ahead and initially just have an empty array okay empty array and here what we're going to say is set the videos to to be the response. data because remember the data comes back inside of that response so that that would be where all of those that list of items comes back as um so we're going to go ahead and do that uh and I'm going to just going to drop this down so you guys can see and then what we're going to do is we're going to say return request so just this return request will just stop the function from from firing so there we go we can just return the request end that's the cleanup process is is that correct uh I think so yeah so in this case we'll say fetch post to actually call the function so this is the async function and then we're just saying fetch the post right so that will work really nicely uh some people are saying why do you never use classbased components because the new way of writing components is uh functional and it's trust me it's so much better um yeah so so you want to be doing dropping the this word yeah that's and to it is a kind of a handy skill to be able to refactor class based to functional um but but definitely do functional if you're writing fresh components um okay so this means that now we should be getting the video so if I do console log and I do videos so now what we should see is when we run the app so let's go ahead and go to our Local Host 3000 where we're running the app so it says wre is not defined on 14 so Rec is not defined on 14 so this one here is response that's why oops my bad so now we can see we've got this so it's actually working see the array initially a zero and then we get an array of four so some people are pushing stuff into the the okay thank you guys we got a hacker Among Us what yeah somebody says fix the security flaw okay I mean like so that's cool and then we've got this and then what we're going to do is we're going to say rather than rendering out these videos like this let's go ahead and get rid of this we're going to go ahead and do the following guys we're going to say videos. map and we're going to say for every every single video return me a video object right with the following props and I've actually done saved us the hard work here and what we can do is we can destructure the video at this point so we actually break apart the video and we can actually get all of the different properties from the video so that the URL Channel description song likes messages and shares and what we can actually do is go ahead and pass those in as props here and to make things very clear what we can do is we can go ahead and delete the hardcoded stuff and now what we should see is this is all the information from the database right so let's go ahead and refresh and you can see this where it becomes full stack hey look at that hello oh so so this I mean somebody probably posted some like dummy data here but like something that doesn't work yeah somebody changed stuff is working yeah David is a champ hey nice so that's awesome guys this is actually fetching from mongodb right now yeah yeah somebody goes J JK don't fix your floors okay so I mean we are we are somebody is messing around with the database but I mean it's fine right now like as then this is going to be empty one but guys you can see right now that this is actually going ahead and fetching from the database right now which is awesome right so that's actually fetching from the database we have all of this work right now and guys what's amazing here is that like this is is actually working completely um by using an Heroku endpoint so this is actually a Heroku endpoint um that's actually live and we're pulling data from it and I guess David at that point what we need to do now is deploy this app exactly exactly yeah let's go yeah so let's do it dude now is yeah yeah now is the time to go with the Firebase right yep so Firebase guys if you're excited let me know just smash that thumbs up button I mean like can we get another 100 likes I don't know I mean you guys you know can we can we do that yeah it would be nice I mean let's just set up everything uh and just stop right before deploying let's do it so this case what we're going to do is we're going to say Firebase in it so firstly in order to get Firebase tools working I actually need to do it on this computer cuz it's a fresh computer so to install the CLI what you need to do is go to um Firebase let's go to Firebase I'll show you guys the step to do this so you want to go to to the console go to the project that we created earlier so in this case the Tik Tok clone and then what you want to do is go to this one here the web and you want to register your app so here I'm going to say Tik Tock clone also set up Firebase hosting yes and register the app and then what you want to do is you want to skip this one you don't care about that this one here mpm install Firebase tools now you're probably going to want to do Pudo before it because when you install anything globally you actually do usually need admin privileges so in this case you are going to go ahead and do that and we oh we did hit over $100 in chat Revenue by the way guys we hit $119 at the moment that's amazing and 34,000 playbacks oh damn dude jeez so that's so cool and we got 2200 uh likes yeah 2200 likes insane love that so now we added five actually sorry sorry to interrupt you uh there is a question from Muhammad uh so I don't think you can host your node server on Firebase but there is a thing called Firebase functions which is almost the same thing right so you can create um uh AP in points on Firebase yeah and I actually really recommend this guys and I will be doing a video on this because I'm a huge fan of Firebase Cloud functions for loads of internal tools me and kazy do it they're super secure there there's a lot of like they're also serverless they scale up and down so it follows a micro service architecture so extremely powerful extremely extremely powerful also because they're on Google servers you don't have to mess around with the security access which means because that function is going to be fired off in a safe environment so you're never going to get some entanglement so if you do interact with data you can do it in a safe way yeah I mean I if if something gets there then uh Google is in some real problem yeah exactly yeah like if yeah I mean we're all in problem if if Google's getting hacked so awesome so with that said now what we're going to do is we're going to say Firebase init and this will actually go ahead and we just got another $5 donation thank you dude that was from Carl fertil he goes we guys are the best and I learned so much I appreciate that dude thank you so much for the $5 donation 124 in chat Revenue awesome so look it says failed to authenticate so we need to do Firebase login go ahead and do that and it will go ahead and say pop up so we can just say yes and then let's go ahead and log to your account that you set up on make sure it's the correct account click allow and then just like Heroku it will log you in then you want to do Firebase inip and here what we're going to do is we're going to go down to hosting hit uh space bar and then we're going to S click on use an existing project and here I'm going to go down to the Tik Tok clone so the Tik Tok clone oh God damn it I've got loads of them oops which Tik Tok which Tik Tok is the question yeah let's go ahead and check where is the ID project settings this one is e65 29 so E6 529 e652 there one there we go now here guys is very important you want to do build right so build is what you want to have here so you want to type in build and then you want to redirect yes because every react app is a single page app and now what you want to do guys that set up Firebase right so now what you do is you do mpm run build and what this will do is it will create an an optimal build of Firebase right so no of of react Sor of the react build it will strip out all the developer tools like the hot reloading all of those things and then it will actually go ahead and it will make it super streamline so it's very fast and optimal because that's what you want to do when you're actually deploying something um you want to kind of strip it of all the things you don't need so that the app is just super fast right now after that what we're going to do is say Firebase deploy now I'm not going to hit enter yet let's get you guys pumped up yeah so I still see we have just under half a thousand people guys if you're excited for this and you've enjoyed this just let us know in the comments right now if you're ready to deploy this app and and then we can go ahead smash the enter button and also if you haven't already smash the thumbs up button for the channel um yeah exactly and guys if you haven't already and you're watching and you're still with us yeah if you're still with us and you survived that intense debugging session let's go ahead and shoot an Instagram story and let us know that you're still watching and tag me and David in um at the bottom and that would be awesome because like this this was an intense build this is an intense build nice so you can see a lot of people hey that's it let's go everyone's flying in we got ready Dev we have so many people and guys this is awesome because I saw so many of you guys in the beginning of this of this stream and I still see you guys are here so like amazing stuff like we got loads of people dropping comments let's go ahead and do it Firebase deploy and it will be live in five four four three two two one and we're live look at that dude nice I'm going to go ahead and drop this in the chat for you guys to go ahead and see boom and let me go actually and check it it actually works in the first place so let's go to the app Tik Tok web app and we should see hey it's loading nice dude I can't promise whatever's going to be up here is going to stay up here but thank you there's going to be new stuff added every time yeah this is awesome this is so cool guys so we just deployed an app using um Firebase hosting which has which communicates with a uh node.js Express back end which is connected to mongod DB and we're hosting that on Roku right so I mean David like that's pretty cool right like we just done a lot of stuff in one build yeah exactly and guys I think this is a first ever M uh build on this channel yeah and actually let us know in the comments if you if you liked it and if you enjoyed Arturo definitely liked it he just said Bravo €1 donation dude just took us 136 thank you so so much Arturo that is a huge donation massively massively appreciate that wow that's insane dude thank you so much yeah oh man damn it dude this is so cool like as in guys like if you found something if you if you thought this was really cool just like again if you haven't already all we ask is just hit that thumbs up button so this video can go out to more people we're just under 35,000 playbacks so this is amazing the support that we've had from you guys um yeah so today we pretty much just to reiterate we built the Tik Tok clone in react used material UI for the designs we have the entire app hosted on Firebase hosting and then we went ahead and built a completely separate backend uh which was completely hosted um on Heroku and that was making use of mongodb so we have an online database uh we went through a live intense debugging session with you guys uh so you guys got to experience what it was actually like being a developer jel brusa just said thanks sun and David that was a roller coaster that sure was a roller coaster dude and that was awesome uh yeah exactly and um this will be live on the channel um we will we can definitely post the code if anyone wants to on GitHub and guys while you're here like what I want to say is if you're if you're here and you're spin with us this whole time like I just want to shout out one thing and say guys if you find this call and you really do enjoy this kind of content then be sure to be at the uh um I'm just trying to find the link for it uh let me go ahead and check if I've got the challenge yeah yeah be sure to go ahead and join the the fight the coding challenge guys because honestly this is a free coding challenge starting Monday and guys it's just so much value to you guys in one week and it's free right it's completely free um thank you so much J he says I can't donate my country but these guys have all the love and support from these Beast thank you for free knowledge DAV and sunny welcome bro my friend thank you so much um yeah and David like what have you got to say about the the the JavaScript CH especially since that you came from a challenge yourself right exactly so literally you will have an uh an application that will actually attract attention so these kind of challenges this is free value and you will get to meet so many awesome people and you will have such an awesome uh thing on your portfolio like it it's going to be a perfectly welldesigned uh application that you can already put on your portfolio alongside with these clones but this could be like the one that you uh post everywhere because this is going to have if I remember correctly it's going to have stripe integration yep it's going to have strip integration it's going to be huge build guys like I I'm going to really deck this one out so you I'm actually thinking of joining because why not yeah yeah dude like even the current students I'm telling them everyone get involved in this challenge also I just saw that rvon Duman just said I just signed up is that I think if you can just literally when you sign up go to slack and drop me a message and I'll jump on a call with you dude so let me know if you signed up um yeah that is awesome yeah guys actually let's meet there yeah exactly really yeah that's me that's like honestly just send a message on slack if you join um so a lot of people saying can you post the link here uh for the app or oh for the actual challenge yes that's a very good can you actually drop it in the comments so I'm just dropped it inside the comments right now guys go ahead and check the link right now um and make sure you go over to it right now guys let me know right now actually go ahead and go sign up to it right now we still have nearly half a thousand people watching I want every single one of you guys if you found value from this go over to that challenge right now and sign up to it because honestly completely free like as in we're not pushing a sales thing here like it's completely a free it's a free challenge and the reason why is because I'm really really am like passionately putting everything into this Challenge and you guys love the content we deliver on this YouTube channel uh you love the live streams so let's go guys that's what we're talking about we want to keep the energy High we want to get everything sort of Pumped up a lot of people asking where it is the link is in the description I just um also dropped it in the chat um the link for the app was actually somewhere a little bit further ahead but I can go ahead and drop that in the Des in the chat again so I just did that we've got Serge cosy we have P Jane we have um yug nice dude loads of people signed up we have mega alond nice guys I would look forward to seeing every single one of you guys in that challenge it's going to be awesome it's going to be homework every single day in that build it's going to be fun it's going to be a lot of fun um yeah David how do you feel about your first live session oh it was super intense it didn't go as planned but I think at the end of end of uh the whole session it it it went all fine dude I have to I have to disagree I think it went better than planned I think guys I think the whole watch that that is actually correct yeah yeah it was like it couldn't get any more real world and the the the big uh issues always occur when when you will be like oh it's almost done it's almost done that's when the second 90% kick in y exactly sing yeah exactly and being in part of a strong Community is going to make all the difference a Frey rman says we get to talk to you guys guys in profit with JavaScript you can talk to us as much as you want you can pretty much jump on a call with me if you want to like I jump on calls with students all the time um and even when debugging problems come up I just literally jump on a corn we just debug like so literally what you saw today that's that's actual coding guys that actually happens your guest just joined the challenge welcome guys welcome dude and I look forward to seeing you in the chat um challenge next week um this is awesome guys this is really really awesome uh we will push the code to GitHub and we will sort of add that to the description but otherwise I think on that note I think David I think is any final things to say otherwise I think we should wrap up with that said yeah yeah yeah yeah um I think yeah just guys just join the challenge yeah that's all I can add yeah and rvan says you guys have a slack Channel yes we do there is a there is a clever program slack Channel where everyone communicates I can actually go ahead and show you right now actually let me go ahead and show you guys the community inside a profit with JavaScript very quickly before we wrap up so this is actually the chat right now so if I go into the um let's go ahead and open up the C programmer challenge it's go ahead and do this profit JavaScript so you can guys can see here we've got nearly 1500 members inside of this community right now and guys it's booming like you guys can see look like uh even someone's actually went through David's session yesterday on a coaching call and they're actually helping each other out so like this is what I'm talking about this is the kind of community that you will be a part of if when if you join profit with JavaScript guys like it's just so positive so uplifting we have everyone who's like literally the new joiners pretty much go ahead and introduce themselves so you can see we have people joining from all over the world like for who have played like who have have been coding from young people who are very fresh in the in the journey and guys we teach you and and show you how to make money okay so it's really really going to be like insane uh getting you inside here and just remember like literally it's as simple as going to me on the sidebar and just actually just chatting with me and that's it right uh The Fez says thinking of signing up to do pwj do you guys really have the time to get on call with members dude if you join I will literally jump on a call with you all you have to do is message me tell me that you came from the live stream that will really help me out and then I will be able to literally uh jump on the call with you yeah and psycho says thanks I'll join slack right away if if anyone joined during this session um from the live stream please let me know it helps us out um yeah that be awesome actually go ahead and drop us a DM yeah so drop us a DM as soon as you like if you join from the live stream that would be awesome um and and a lot of people are asking how to join on slack you have to actually be a part of profit with JavaScript so the link is in the description and you can actually purchase the the course profit with JavaScript but the challenge is completely free okay so the challenge actually don't use the word purchase you can invest in yourself yeah exactly by joining y you can invest in yourself terminology yeah exactly no DAV is 100% right it's an investment in yourself and I mean like I lost track of the amount of people that made um made like an income from this stuff like when they when they when they thing yeah so pitch pitch pitch paty said just I have joined Sunny uh if you have I will see it on my phone in a second so um anyone who has joined like I said just DM me on on slack and just Dro me a message saying hey sunny I was from the live stream that's it right uh Daniel mama said I'm in Sunny uh yeah so guys I mean if you are in if you are in profit JavaScript just let us know and um we can talk right that's awesome I think with that said guys I love each and every single one of you I think this has been such a fun session David and guys tomorrow we have thanks for joining yeah exct see everybody tomorrow with the Tinder clone exactly exactly Tinder clone tomorrow and on Friday WhatsApp so it's going to be a lot of fun guys and that is going to be awesome so um yeah guys with that said uh we will see you in the next video I am that is David and we will see you guys in tomorrow's video peace yeah over and out bye bye
