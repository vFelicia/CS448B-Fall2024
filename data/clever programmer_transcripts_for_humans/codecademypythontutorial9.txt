With timestamps:

00:00 - what's up fellas how's it going this is
00:02 - Kazi from clever programmer comm and
00:06 - this is code Academy part 9 isn't it
00:12 - awesome or like running out of fingers
00:14 - here to say the parts of code Academy
00:18 - that's awesome
00:20 - alright so another day another dollar
00:22 - I'm pretty excited to be here with you
00:24 - guys and we're gonna get going last time
00:27 - we left off at new entries so that's
00:30 - where we're gonna pick it up from ok
00:33 - just to get an overview of where that
00:39 - puts you
00:40 - we're gonna go to code Academy comm and
00:43 - we're at 37% okay so we're doing a great
00:48 - job let's keep it moving
00:50 - let's go to Python hit continue let's
00:58 - check our course overview or to say that
01:03 - course page right we're still in lists
01:08 - and dictionaries right we're still in
01:10 - lists and dictionaries we're almost done
01:11 - with it so let's keep going start next
01:14 - lesson ok
01:21 - any day now all right let me just
01:26 - manually select it changing your mind
01:31 - here we go because dictionaries are
01:33 - mutable they can be changed in many ways
01:35 - items can be removed from a dictionary
01:37 - with the del command del or delete short
01:42 - for delete well remove the key from the
01:45 - thing a new value can be associated with
01:48 - the key by assigning a value to the key
01:50 - like so I've already shown you guys a
01:52 - little bit of that right so let's go
01:55 - back to our thing let's say that we had
01:58 - Johnny and we don't like Johnny anymore
02:01 - right johnny is not our friend anymore
02:06 - we don't want him sorry Johnny
02:09 - so what we're going to do is we're going
02:11 - to said
02:12 - lead phonebook we're going to pass in
02:15 - the key Johnny and now if we do print
02:20 - phonebook you are going to see that
02:23 - Johnny does not exist right unable to
02:28 - reach server let's try it again um what
02:36 - is the problem here let's check it ok
02:42 - hold on maybe this paid has been here
02:45 - open for too long let's refresh it and
02:47 - come back to it and you can use this URL
02:54 - to get all of this information ok so
03:00 - we're going to delete from fallen book
03:03 - and we're going to delete Johnny passing
03:06 - in the key right to the dictionary and
03:08 - we're going to check that phonebook
03:11 - ok now let's run it and you see here we
03:16 - have Johnny we print out Johnny's number
03:19 - on line 18 on line 20 we delete him and
03:22 - then on line 22 we on line 22 we print
03:30 - the dictionary and we don't have Johnny
03:32 - anymore ok so delete just delete the
03:34 - item from the list
03:36 - delete the sloth and the Bengal tiger
03:38 - items from zoo animals using delete
03:40 - simple let's do it
03:43 - delete zoo animals sloth and I don't
03:48 - want to type all the way so I'm just
03:49 - going to copy paste it you guys should
03:51 - type because it's good practice so make
03:54 - sure you type everything even if it's
03:55 - repetitive and here I'm going to type in
03:59 - Bengal tiger oops
04:02 - Bengal tiger right this guy that you see
04:05 - here in line 4 ok just a recap of some
04:09 - term terminology this is a key this is a
04:13 - value this is a key this is a value so
04:17 - if you pass in a key unicorn you'll get
04:19 - back cotton candy house but if you
04:21 - delete the key unicorn then unicorn will
04:25 - get deleted
04:25 - with its value as well so cotton candy
04:28 - house will get deleted as well cool set
04:34 - the value associated the Rockhopper
04:35 - penguin to anything other than Arctic
04:38 - exhibit right so what does that mean
04:44 - all right set the value so we're on over
04:48 - to anything other than exhibit okay so
04:50 - here we have do we have that in the
04:53 - dictionary yeah we do rock out
04:56 - Rockhopper penguin right so now we're
04:59 - going to change its value so we can
05:01 - actually change values as well so we can
05:04 - just do it the same way
05:05 - nickname so the dictionary name pass in
05:09 - the key and then just set a new value
05:11 - simple as that okay so I'm going to do
05:14 - just that
05:15 - zoo animals is my dictionary I'm going
05:17 - to pass in the key called Rockhopper
05:19 - penguin and then I'm going to say equal
05:24 - to banana exhibit yeah all right and now
05:33 - if we print it out you see banana
05:37 - exhibit right here and also see the
05:40 - sloth and Bengal tiger are gone from our
05:43 - list beautiful next one backpack okay so
05:49 - here backpack beetles dot remove so
05:54 - there's a remove command when we're
05:57 - working with lists all right so if I go
06:01 - here and I want to remove something I
06:04 - can just say backpack right dot remove
06:09 - and we can remove the dagger from it now
06:12 - if you print backpack well guess what's
06:15 - not going to be in it
06:16 - surprise surprise dagger is not going to
06:20 - be inside of it right because we removed
06:22 - it and cool so you can see in this
06:27 - example beetles has all these guys you
06:29 - have Stewart here but once you remove
06:32 - Stewart you'll see that in the list you
06:35 - don't have Stewart there anymore right
06:36 - remove dagger from the list Oh
06:39 - cool so that example that we just did is
06:42 - actually we're supposed to do so I'm
06:44 - just going to copy and paste it simple
06:49 - okay now we have inventory and we have a
06:54 - key gold with a value 500 we have a key
06:57 - pouch with the value which is the list
07:00 - list containing three elements Flint
07:04 - twine and gemstone and all those are all
07:06 - strings then we have another key
07:09 - backpack all these keys are separated by
07:12 - commas okay all key value pairs are
07:16 - separated by commas
07:18 - you have another key backpack with a
07:20 - value of a list cool so now let's see
07:24 - what they want us to do we have done a
07:25 - little bit of this okay we did get ahead
07:28 - of ourselves earlier but it helps us
07:31 - because now when we come to this part we
07:33 - understand it better right
07:35 - oh the side effects of knowledge right
07:39 - the drawbacks of knowledge the drawbacks
07:43 - are only that you just understand more
07:45 - now right cool let's keep going add a
07:50 - key to inventory called pocket so we are
07:56 - going to type in inventory and we're
07:58 - going to add a key called pocket all
08:01 - right now we need to know what its value
08:03 - will be set the value I'm reading step
08:06 - to set the value of pocket to be a list
08:09 - consisting of the string seashell
08:11 - strange berry and lint alright so we're
08:17 - going to pass it the value of the key
08:20 - pocket is actually going to be a list
08:22 - and we're going to say C shell strange
08:26 - very and lint okay another way to maybe
08:33 - think about it is if you were creating a
08:35 - video game like Street Fighter and you
08:37 - want to have a character like Ken and
08:40 - you wanted to associate different move
08:43 - types with Ken or Ryu or Ryu however you
08:47 - say it with Ryu you know he'll do the
08:49 - Hadouken or the Cherie you can like what
08:51 - just a puncheon hadouken is where he
08:53 - goes like this so you can do something
08:56 - like you know the dictionaries call
08:58 - maybe Street Fighter right Street
09:00 - Fighter and you can have Ryu and you can
09:06 - pass in a list of things like you know
09:09 - Hadouken and sure you can I don't know
09:13 - how to spell right so and then in the
09:16 - dictionary when you type in Ryu you can
09:19 - see all of his moves okay so again their
09:22 - examples are weird they're really weird
09:25 - examples but if you try to relate it to
09:28 - something that makes more sense to you
09:30 - it's gonna be a lot more amazing right
09:33 - it's going to make a lot more sense
09:34 - these are weird examples okay so then we
09:39 - use sort to sort the items on the list
09:41 - stored under the backpack key okay so we
09:45 - have a backpack key here right but what
09:48 - we're going to do is we're gonna sort
09:50 - all the value so we're going to sort the
09:53 - value or the list of the key backpacks
09:58 - so how we're gonna do it is we're gonna
10:01 - sit inventory of backpack right that if
10:08 - I just wrote that right thou would just
10:11 - equal this list here okay so how do you
10:17 - sort a list you just write that listen
10:19 - you're right dot sort and it sorts that
10:20 - list so in our case we're just going to
10:24 - call that sword on inventory of backpack
10:28 - okay
10:29 - then remove dagger from the list of
10:31 - items stored into the backpack great so
10:33 - we're going to go like this we're going
10:36 - to go backpack again this will give you
10:40 - this list and to remove dagger from this
10:43 - list you just do not remove and you do
10:45 - dagger right so I'm just gonna say since
10:50 - inventory backpack is just another way
10:52 - of saying that list I can call dot
10:54 - remove on inventory of backpack not
10:59 - remove dagger
11:02 - add 50 to the number stored under the
11:04 - gold key so what we're going to do is
11:08 - we're going to say inventory of gold
11:11 - so basically we're adding gold how I'm
11:14 - almost thinking of it is that we're
11:16 - removing the dagger or selling it right
11:17 - in a lot of video games you'll sell the
11:19 - dagger and maybe you get back 50 more
11:21 - gold so we're going to increment our
11:23 - goals from 500 to 550 cool so we're
11:30 - going to say inventory of gold is
11:32 - inventory of gold plus 50
11:38 - this means that so inventory of gold
11:43 - will give me back 50 right this part
11:46 - this part will evaluate or this part
11:50 - will evaluate to 500 and they'll just be
11:52 - 500 plus 50 so how you should think
11:54 - about it is the new inventory gold
11:57 - should equal should be what inventory of
12:02 - gold was 500 plus 50 okay that's how you
12:08 - increment something if you said
12:10 - something like this what you're gonna
12:14 - what you're saying is 500 plus 50 this
12:20 - statement in and of itself does nothing
12:24 - the only way it does something is if you
12:27 - make inventory of gold now equal to 500
12:33 - plus 50 but 500 plus 50 means nothing in
12:37 - and of itself okay so when people are
12:40 - incrementing things they get really
12:42 - confused by that so just remember that
12:48 - this is how it's done
12:50 - okay invent your goals you can image of
12:52 - gold but it was plus 50 more cool I'm
12:55 - not going to waste any more of a time
12:57 - expounding on that save and submit n we
13:01 - have finished this course and we got
13:03 - achievement Python lists and
13:06 - dictionaries is dangerous to go alone
13:08 - take this so now we're on the last part
13:12 - of Python lists and diction
13:13 - let's keep going oh absolutely we
13:18 - completed it nice all right so let's go
13:25 - back to our course page start lesson
13:39 - let's go back to our course page and see
13:42 - where we're at now all right so we just
13:47 - completed Python lists and dictionaries
13:50 - that's amazing
13:53 - now we are at 38% and listen
13:57 - dictionaries are one of the very key
13:59 - concepts in Python so it's a good skill
14:03 - to actually have and to practice it and
14:05 - get better at it okay some people ask
14:08 - well when do you use a list versus a
14:10 - dictionary you already know and how I'm
14:14 - going to prove that you already know
14:15 - that is I'm going to ask you questions
14:17 - like almost interactive that you're
14:19 - going to answer in your head and through
14:21 - telekinesis I'm going to know what
14:22 - you're saying
14:24 - sorry I don't have the power of
14:25 - telekinesis but I do want you to still
14:28 - think about your answer okay so let's
14:30 - say okay listen verses dictionaries
14:32 - right if I gave you a lot of test scores
14:39 - and the student names were anonymous
14:43 - okay the students names we don't have
14:46 - the names on there but I just gave you a
14:47 - list of like I give you a bunch of
14:50 - scores and I told you to use a certain
14:53 - data type to store them would you use
14:56 - dictionary or lists okay think about it
15:02 - I'll give you three seconds and I'll
15:03 - answer this question three two one you
15:07 - would use lists because it's just a
15:11 - bucket of information which is not tied
15:14 - to one another you and you just need a
15:16 - place to collect it and store it okay
15:19 - that's where lists are very useful now
15:24 - let's say we have a hospital where
15:30 - children are being born and we need to
15:34 - associate the child's name to maybe
15:38 - their birth certificate their date of
15:41 - birth and you know whether they're male
15:46 - or female and you have hundreds of child
15:51 - so you need to store for each child
15:52 - their name and a bunch of other
15:56 - information for each child and you need
15:59 - to do this for hundreds or thousands or
16:00 - millions of children in this case would
16:04 - you use a list data type or would you
16:06 - use a dictionary data type give you
16:09 - three seconds three two one for this you
16:14 - would use a dictionary okay because the
16:18 - child write might be the child name
16:21 - might be the key and your value might be
16:25 - their date of birth their birth
16:27 - certificate and whatever else okay
16:30 - in reality the key would not be the
16:33 - child's name because when you try to
16:35 - look up let's say you were born and your
16:37 - name was John Smith or John Doe well if
16:42 - I had if I use the key to look up john
16:44 - doe's information I might get a thousand
16:47 - results because there might be a
16:49 - thousand babies named John Doe or
16:51 - thousand kids right so what would be
16:54 - better is probably some kind of serial
16:56 - code or whatever to use as a key that
16:58 - would each would be unique for each
17:01 - person that's why sometimes we have
17:02 - sources we have social security because
17:05 - that uniquely identifies us and
17:07 - everybody has one Social Security okay
17:10 - and same thing with a credit card so
17:13 - that's something for you to think about
17:14 - for a future but for now lists and
17:17 - dictionaries I think you know when we
17:19 - should use them cool a day at the
17:22 - supermarket I get it before we begin so
17:30 - now they're going to talk about four
17:31 - loops which I alluded to a little bit
17:34 - earlier a is equal to list of some sort
17:38 - for XNA do something for every okay so
17:40 - for item in print item so loops again
17:43 - are one of my favorite parts right I
17:46 - love loops so much because they're great
17:49 - they help you a lot and they automate
17:52 - things that would take humans thousands
17:55 - of years to do and mistakes so let's do
18:02 - it simple for name in names print name
18:07 - I'm going to start getting in the habit
18:09 - of putting parentheses after your print
18:11 - okay just start getting in the habit of
18:13 - that even though you are using Python
18:15 - two right now still start treating print
18:19 - like a function so then when you
18:21 - transition to Python 3 you're not like
18:24 - thrown back by it okay this advice was
18:29 - given to me by somebody who's much
18:32 - smarter than I am
18:33 - and she told me to start teaching you
18:35 - guys by putting parentheses
18:38 - after the print so you can start getting
18:41 - prepared for Python 3 okay for name and
18:47 - names print name again this could be V
18:49 - this could be it's just an arbitrary
18:51 - variable name right this could be blah
18:54 - blah blah blah blah and as long as
18:56 - you're consistent here now what happens
18:59 - is when the loop runs the first time the
19:02 - loop runs on this is the list names
19:06 - right so name becomes Adam and then it
19:10 - goes to line for loop is just something
19:12 - that runs over and over again till the
19:15 - given bucket or given thing X so in this
19:19 - case a given thing is a list then this
19:21 - list has 1 2 3 4 5 items so can you
19:25 - guess how many times this loop will run
19:28 - yes it will run 5 times okay so while
19:33 - that's happening this variable name is
19:36 - going to be the first element the first
19:38 - time then the second element in the
19:40 - third element and fourth element and
19:41 - fifth element so the first time is going
19:44 - to be Adam and line four is going to
19:46 - pretty much that print Adam and you can
19:48 - see Adam then name is going to be
19:51 - likes then is going to print Alex so on
19:53 - and so forth I think you already know
19:55 - this I will hit that button and here you
20:00 - see Adam Alex Maria Martine and Columbus
20:03 - great we have a dictionary Webster with
20:07 - the key aardvark which has a value a
20:10 - start of a popular children's cartoon
20:12 - show so this is you know giving you an
20:16 - example so here they have Webster which
20:18 - is kind of like um they're using it as a
20:22 - web smyrnaean Webster whatever
20:24 - dictionary but you could also you know
20:27 - have you could create a website where
20:31 - you have movies and trailers so for a
20:33 - movie you can have the movie name and
20:35 - for the trailer description as the value
20:38 - you could put description right so
20:40 - that's another way you could use a
20:41 - dictionary okay let's keep going so use
20:45 - a for-loop to go through the Webster
20:47 - dictionary at all definitions that is
20:49 - pretty simple loops work the same way
20:52 - for dictionaries kind of like the work
20:56 - for a list so just to give you an
20:58 - example here for item in Webster let's
21:05 - say print item right so this will
21:08 - actually print out the key names but if
21:10 - you want to print out their values again
21:12 - remember to get a value of a dictionary
21:15 - you have to give the name of the
21:16 - dictionary and then the key so if the
21:19 - item is giving you key then it's just as
21:22 - simple as putting in the dictionary name
21:27 - passing in the key and you get back the
21:31 - value right so let's see what they want
21:34 - us to do so they just want how to print
21:37 - all the definitions so we're going to do
21:39 - the same thing we're going to do this
21:41 - okay print put your code below okay and
21:48 - we've printed out all the definitions
21:50 - done control flow and looping okay now
21:55 - we're getting fancy we're using for
21:57 - loops and maybe freezing if-then
22:00 - statements in here as well so here
22:03 - what's happening
22:04 - let's take their code and let's read it
22:08 - reading is an important part of a
22:11 - developer's job so we have a list of
22:14 - numbers with four elements or four
22:17 - numbers in here one three four seven so
22:20 - we go through each number for number in
22:21 - numbers so again you should be thinking
22:24 - the first time the loop happens the
22:26 - number is 1 the second time the loop
22:27 - happens number is 3 third time the loop
22:31 - happens the number is 4 and then when
22:33 - the loop happens again the number is 7
22:35 - and then the for loop stops and we're
22:37 - out of the for loop ok everything that's
22:40 - indented below the for loop is part of
22:42 - the for loop
22:42 - so whenever the for loop is running
22:45 - every time the for loop runs this block
22:47 - of code is running as well
22:49 - okay well this block only runs if line
22:54 - four is true but just for simplicity
22:57 - sake we can say that these are the only
23:01 - things that are considered when the
23:04 - program is thinking about what parts of
23:06 - the code to run once all the elements
23:09 - and once a for loop is completed then we
23:11 - go to line seven which means that no
23:14 - matter what happens
23:16 - line seven runs because line seven is
23:19 - not dependent on any other line but
23:21 - that's the last line that we'll run in
23:23 - the thing so you can see it says we
23:26 - printed seven and obviously at the end
23:28 - we probably have printed seven okay so
23:32 - it'll go through for number and numbers
23:34 - if number is greater than six then print
23:36 - the number so when we keep going through
23:40 - the numbers if at any point we get a
23:42 - number from the list that's greater than
23:44 - six then we print it out so in this case
23:46 - you can understand that none of the
23:50 - numbers get printed except for seven
23:52 - because every other number is less than
23:54 - six we run it okay we're back online
23:58 - again so for some reason the internet
24:00 - pretty much died so here if I run this
24:03 - code you are going to see they want us
24:06 - to put parentheses after print because
24:08 - again this is Python three that I'm
24:10 - using in right rappelled it repl dot it
24:13 - and basically what I say happens right
24:17 - run through the loop numbers great and
24:18 - six we print it out and here we have we
24:21 - print seven and then the last line of
24:23 - code says we printed seven all right
24:26 - like step two above loop through each
24:28 - item in the list a like subject if the
24:30 - number is even printed out you can test
24:32 - if items is even by two equal equals
24:35 - zero so that means this okay so if you
24:41 - want to check a number is divisible by
24:42 - two
24:43 - that means that the number is even then
24:46 - we print it out so how do we check if a
24:48 - number is even okay let's take a number
24:49 - like 12 and if we say if you use modulus
24:53 - that gives us a remainder so let's try
24:55 - putting in five into this right and
24:59 - let's print it out and see what we get
25:02 - so we get back a 2 because 5 goes into 5
25:06 - 5 goes into 10 we get a remainder of 2
25:08 - right and if we do 12 modulo 6 we get a
25:12 - remainder of 0 because 6 goes into 6 and
25:14 - then 6 goes into 12 so 6 goes into 12
25:16 - perfectly therefore 12 is divisible by 6
25:20 - indeed how we check that if 12 is
25:23 - divisible by 6 is we say right because
25:28 - if 12 is divisible by 6 we should get
25:30 - back to 0 12 modulo 6 should give me a 0
25:33 - so here we're checking does this give me
25:35 - a 0 if it does give me a 0 then that
25:38 - means 12 is divisible by 6 so I should
25:41 - get back a true right likewise if I put
25:46 - a 5 in here I get a remainder of 2 this
25:50 - whole thing turns to a 2 2 does not
25:52 - equal 0 this should give me back a false
25:55 - same way you can check for divisibility
25:57 - by 2 by just replacing that by 2 they're
26:02 - cool so any number that we can put in we
26:06 - can find out if it's divisible by 2 or
26:08 - not which means if it's even or not so
26:11 - we're going to do that here for number
26:14 - in a if number is divisible by 2
26:19 - then print number is that what they want
26:23 - us to do print it out that's what they
26:26 - want us to do this is it two four six
26:29 - eight ten twelve
26:31 - isn't that cool okay let's move on lists
26:36 - plus functions so let's make this one
26:41 - the last one for this video and then
26:43 - we'll pick it up next time in tutorial
26:48 - ten all right so let's see what's going
26:51 - on here we have a function count small
26:55 - it takes in and input numbers so it
26:57 - takes in one variable we can call it V
26:59 - or we can be nice and call it numbers
27:01 - for n in numbers and I would say num in
27:05 - numbers or number in numbers but they're
27:08 - just being cool and putting N if the
27:11 - number is less than ten then we
27:13 - increment the variable total by one and
27:15 - we return total so effectively we are
27:19 - trying to count the small numbers so in
27:22 - here right for example if we ran this
27:25 - algorithm it would say that the total
27:29 - number of numbers that are less than ten
27:32 - is going to give us back what do you
27:33 - think is going to give us back did I
27:35 - give us a two right this should give us
27:39 - back a two because there are only two
27:41 - numbers that are less than ten
27:42 - everything else is greater than ten so
27:46 - that's what this number this loop does
27:48 - okay it defines total to be 0 and then
27:50 - increments total by 1 every time the
27:53 - number is less than 10 and then at the
27:55 - end it returns the total okay so here we
27:59 - are calling the function small count
28:01 - small on the list called lost so you can
28:06 - either put in the variable lost in there
28:08 - or directly put in this list but why put
28:11 - directly the list if we have used a
28:13 - variable to store it so we use the count
28:17 - small function pass in that list so what
28:19 - happens is that this list gets passed to
28:23 - this function this function replaces
28:28 - numbers with that list
28:29 - and everywhere there's numbers it
28:31 - changes it with that list name now this
28:34 - loop comes in and it says 4 4 see the
28:37 - first time the loop runs it goes to the
28:39 - first element in the list so it goes for
28:41 - 4 in this list if 4 is less than 10
28:47 - which it is it increments total by 1 so
28:50 - total becomes 1 then it goes for 8 in
28:55 - this if 8 is less than 10 total
29:00 - increments by 1 so total increments by 1
29:02 - we get 2 then next time it goes for 15
29:06 - in that list if 15 is less than 10
29:09 - increment total by 1 if is this
29:13 - statement true
29:14 - no this statement right here is false
29:16 - okay this evaluates to a false so this
29:19 - part of the code never runs so total
29:21 - stays at 2 then the loop goes and goes
29:23 - to 16 if 16 is less than 10 this
29:27 - evaluates to false therefore line 5
29:30 - never executes and hence total never
29:33 - increments again and you get the pattern
29:36 - 23 the same thing will happen and 42 the
29:39 - same thing will happen so let's put all
29:43 - of this back right so effectively at the
29:50 - end we'll get back to and line 10 we'll
29:54 - print that out so let's hit run and
29:57 - again this is Python 3 so I got to wrap
30:01 - that in parentheses and we get back to
30:03 - now we're going to write our own
30:05 - functions so write a function that
30:07 - counts how many times the string fizz
30:09 - appears in a list write a function
30:11 - called fizz count define that's how we
30:16 - write a function so every time we think
30:18 - a function we type in D EF which means
30:21 - define function name is count it takes
30:25 - in a list X so we should really call it
30:29 - list X or a list like this not list
30:32 - because list is a reserved word which is
30:34 - why turned blue
30:35 - but list underscore or list
30:39 - you know num list but here they want to
30:42 - be fancy and call it X just to confuse
30:45 - you guys so but we'll do that create a
30:48 - variable count to hold ongoing count so
30:52 - we initialize it to zero so then later
30:54 - we can keep incrementing count to keep
30:56 - track of everything that we've seen so
30:58 - far and then return count at the end su
31:00 - for item in X if X equal to the string
31:08 - fizz then increment count by one so we
31:13 - can use this fancy notation but don't do
31:16 - that for now just use this one so this
31:19 - means that new count is the old count
31:22 - plus one so now it changes the
31:24 - definition of this count to one okay and
31:28 - then at the end we return count okay so
31:34 - for example this count
31:44 - should return to so this is a pretty
31:46 - cool function now we're starting to
31:48 - actually do something with all of this
31:50 - oh did they want us to print it out no
31:54 - this said return it right so it should
31:56 - return so when you return stuff it
31:59 - doesn't actually get printed out so you
32:00 - have to wrap that in a print to print it
32:03 - out we get 0 that's weird that shouldn't
32:06 - happen Oh
32:09 - if item is fizz not X so we get 2 okay
32:14 - so let's go through this loop and how it
32:16 - works so we're calling our function fist
32:20 - count we're passing in the list right
32:23 - we're passing in this list fizz cat fizz
32:25 - so this X turns into fizz cat fizz we
32:30 - come to count we initialize it to 0 for
32:33 - item in X so X is this list item the
32:37 - first time is going to be fizz if fizz
32:41 - equal equal fizz which is obviously true
32:46 - then increment count by 1 so count is
32:49 - now 1 then it goes it's like an item in
32:53 - loop for cat in that if cat equal equal
32:58 - fizz increment count this part evaluates
33:01 - to false right and so line 7 never
33:04 - executes and therefore count doesn't not
33:07 - increment then we go to the loop last
33:10 - time because red the last element so
33:13 - again it's fizz here we got fizz is if
33:17 - fizz equal equal fizz well is fizz equal
33:20 - equal to fizz definitely this is true
33:23 - this part gets line 7 gets executed
33:25 - count gets incremented by 1 we see the
33:29 - loop has stopped so we continue to line
33:32 - 8 finally let's give a little gap to
33:34 - make it easier to read we go to line 8
33:37 - in line 9 line 9 returns the count which
33:40 - is 2 at this point so it returns 2 and
33:43 - we print out that so this whole thing
33:47 - effectively turns to a 2 and then we
33:49 - print out this 2 right there
33:52 - okay so hopefully you are seeing how
33:56 - this is working and I'm going to copy
34:00 - this and paste it here I'm going to
34:04 - comment out line ten because they just
34:06 - give an example and we don't actually
34:07 - have to write it and they said start
34:10 - next lesson great job everybody you have
34:13 - just made it through code Kadim e part 9
34:16 - please like the video and please
34:18 - subscribe we're very close to 100
34:20 - subscribers right we're at 97
34:23 - subscribers at this point please
34:25 - subscribe let's get to 100 subscribers
34:26 - and I will see you in the next video
34:30 - code Khadem e part 10 okay so get
34:34 - psyched I'll see you soon

Cleaned transcript:

what's up fellas how's it going this is Kazi from clever programmer comm and this is code Academy part 9 isn't it awesome or like running out of fingers here to say the parts of code Academy that's awesome alright so another day another dollar I'm pretty excited to be here with you guys and we're gonna get going last time we left off at new entries so that's where we're gonna pick it up from ok just to get an overview of where that puts you we're gonna go to code Academy comm and we're at 37% okay so we're doing a great job let's keep it moving let's go to Python hit continue let's check our course overview or to say that course page right we're still in lists and dictionaries right we're still in lists and dictionaries we're almost done with it so let's keep going start next lesson ok any day now all right let me just manually select it changing your mind here we go because dictionaries are mutable they can be changed in many ways items can be removed from a dictionary with the del command del or delete short for delete well remove the key from the thing a new value can be associated with the key by assigning a value to the key like so I've already shown you guys a little bit of that right so let's go back to our thing let's say that we had Johnny and we don't like Johnny anymore right johnny is not our friend anymore we don't want him sorry Johnny so what we're going to do is we're going to said lead phonebook we're going to pass in the key Johnny and now if we do print phonebook you are going to see that Johnny does not exist right unable to reach server let's try it again um what is the problem here let's check it ok hold on maybe this paid has been here open for too long let's refresh it and come back to it and you can use this URL to get all of this information ok so we're going to delete from fallen book and we're going to delete Johnny passing in the key right to the dictionary and we're going to check that phonebook ok now let's run it and you see here we have Johnny we print out Johnny's number on line 18 on line 20 we delete him and then on line 22 we on line 22 we print the dictionary and we don't have Johnny anymore ok so delete just delete the item from the list delete the sloth and the Bengal tiger items from zoo animals using delete simple let's do it delete zoo animals sloth and I don't want to type all the way so I'm just going to copy paste it you guys should type because it's good practice so make sure you type everything even if it's repetitive and here I'm going to type in Bengal tiger oops Bengal tiger right this guy that you see here in line 4 ok just a recap of some term terminology this is a key this is a value this is a key this is a value so if you pass in a key unicorn you'll get back cotton candy house but if you delete the key unicorn then unicorn will get deleted with its value as well so cotton candy house will get deleted as well cool set the value associated the Rockhopper penguin to anything other than Arctic exhibit right so what does that mean all right set the value so we're on over to anything other than exhibit okay so here we have do we have that in the dictionary yeah we do rock out Rockhopper penguin right so now we're going to change its value so we can actually change values as well so we can just do it the same way nickname so the dictionary name pass in the key and then just set a new value simple as that okay so I'm going to do just that zoo animals is my dictionary I'm going to pass in the key called Rockhopper penguin and then I'm going to say equal to banana exhibit yeah all right and now if we print it out you see banana exhibit right here and also see the sloth and Bengal tiger are gone from our list beautiful next one backpack okay so here backpack beetles dot remove so there's a remove command when we're working with lists all right so if I go here and I want to remove something I can just say backpack right dot remove and we can remove the dagger from it now if you print backpack well guess what's not going to be in it surprise surprise dagger is not going to be inside of it right because we removed it and cool so you can see in this example beetles has all these guys you have Stewart here but once you remove Stewart you'll see that in the list you don't have Stewart there anymore right remove dagger from the list Oh cool so that example that we just did is actually we're supposed to do so I'm just going to copy and paste it simple okay now we have inventory and we have a key gold with a value 500 we have a key pouch with the value which is the list list containing three elements Flint twine and gemstone and all those are all strings then we have another key backpack all these keys are separated by commas okay all key value pairs are separated by commas you have another key backpack with a value of a list cool so now let's see what they want us to do we have done a little bit of this okay we did get ahead of ourselves earlier but it helps us because now when we come to this part we understand it better right oh the side effects of knowledge right the drawbacks of knowledge the drawbacks are only that you just understand more now right cool let's keep going add a key to inventory called pocket so we are going to type in inventory and we're going to add a key called pocket all right now we need to know what its value will be set the value I'm reading step to set the value of pocket to be a list consisting of the string seashell strange berry and lint alright so we're going to pass it the value of the key pocket is actually going to be a list and we're going to say C shell strange very and lint okay another way to maybe think about it is if you were creating a video game like Street Fighter and you want to have a character like Ken and you wanted to associate different move types with Ken or Ryu or Ryu however you say it with Ryu you know he'll do the Hadouken or the Cherie you can like what just a puncheon hadouken is where he goes like this so you can do something like you know the dictionaries call maybe Street Fighter right Street Fighter and you can have Ryu and you can pass in a list of things like you know Hadouken and sure you can I don't know how to spell right so and then in the dictionary when you type in Ryu you can see all of his moves okay so again their examples are weird they're really weird examples but if you try to relate it to something that makes more sense to you it's gonna be a lot more amazing right it's going to make a lot more sense these are weird examples okay so then we use sort to sort the items on the list stored under the backpack key okay so we have a backpack key here right but what we're going to do is we're gonna sort all the value so we're going to sort the value or the list of the key backpacks so how we're gonna do it is we're gonna sit inventory of backpack right that if I just wrote that right thou would just equal this list here okay so how do you sort a list you just write that listen you're right dot sort and it sorts that list so in our case we're just going to call that sword on inventory of backpack okay then remove dagger from the list of items stored into the backpack great so we're going to go like this we're going to go backpack again this will give you this list and to remove dagger from this list you just do not remove and you do dagger right so I'm just gonna say since inventory backpack is just another way of saying that list I can call dot remove on inventory of backpack not remove dagger add 50 to the number stored under the gold key so what we're going to do is we're going to say inventory of gold so basically we're adding gold how I'm almost thinking of it is that we're removing the dagger or selling it right in a lot of video games you'll sell the dagger and maybe you get back 50 more gold so we're going to increment our goals from 500 to 550 cool so we're going to say inventory of gold is inventory of gold plus 50 this means that so inventory of gold will give me back 50 right this part this part will evaluate or this part will evaluate to 500 and they'll just be 500 plus 50 so how you should think about it is the new inventory gold should equal should be what inventory of gold was 500 plus 50 okay that's how you increment something if you said something like this what you're gonna what you're saying is 500 plus 50 this statement in and of itself does nothing the only way it does something is if you make inventory of gold now equal to 500 plus 50 but 500 plus 50 means nothing in and of itself okay so when people are incrementing things they get really confused by that so just remember that this is how it's done okay invent your goals you can image of gold but it was plus 50 more cool I'm not going to waste any more of a time expounding on that save and submit n we have finished this course and we got achievement Python lists and dictionaries is dangerous to go alone take this so now we're on the last part of Python lists and diction let's keep going oh absolutely we completed it nice all right so let's go back to our course page start lesson let's go back to our course page and see where we're at now all right so we just completed Python lists and dictionaries that's amazing now we are at 38% and listen dictionaries are one of the very key concepts in Python so it's a good skill to actually have and to practice it and get better at it okay some people ask well when do you use a list versus a dictionary you already know and how I'm going to prove that you already know that is I'm going to ask you questions like almost interactive that you're going to answer in your head and through telekinesis I'm going to know what you're saying sorry I don't have the power of telekinesis but I do want you to still think about your answer okay so let's say okay listen verses dictionaries right if I gave you a lot of test scores and the student names were anonymous okay the students names we don't have the names on there but I just gave you a list of like I give you a bunch of scores and I told you to use a certain data type to store them would you use dictionary or lists okay think about it I'll give you three seconds and I'll answer this question three two one you would use lists because it's just a bucket of information which is not tied to one another you and you just need a place to collect it and store it okay that's where lists are very useful now let's say we have a hospital where children are being born and we need to associate the child's name to maybe their birth certificate their date of birth and you know whether they're male or female and you have hundreds of child so you need to store for each child their name and a bunch of other information for each child and you need to do this for hundreds or thousands or millions of children in this case would you use a list data type or would you use a dictionary data type give you three seconds three two one for this you would use a dictionary okay because the child write might be the child name might be the key and your value might be their date of birth their birth certificate and whatever else okay in reality the key would not be the child's name because when you try to look up let's say you were born and your name was John Smith or John Doe well if I had if I use the key to look up john doe's information I might get a thousand results because there might be a thousand babies named John Doe or thousand kids right so what would be better is probably some kind of serial code or whatever to use as a key that would each would be unique for each person that's why sometimes we have sources we have social security because that uniquely identifies us and everybody has one Social Security okay and same thing with a credit card so that's something for you to think about for a future but for now lists and dictionaries I think you know when we should use them cool a day at the supermarket I get it before we begin so now they're going to talk about four loops which I alluded to a little bit earlier a is equal to list of some sort for XNA do something for every okay so for item in print item so loops again are one of my favorite parts right I love loops so much because they're great they help you a lot and they automate things that would take humans thousands of years to do and mistakes so let's do it simple for name in names print name I'm going to start getting in the habit of putting parentheses after your print okay just start getting in the habit of that even though you are using Python two right now still start treating print like a function so then when you transition to Python 3 you're not like thrown back by it okay this advice was given to me by somebody who's much smarter than I am and she told me to start teaching you guys by putting parentheses after the print so you can start getting prepared for Python 3 okay for name and names print name again this could be V this could be it's just an arbitrary variable name right this could be blah blah blah blah blah and as long as you're consistent here now what happens is when the loop runs the first time the loop runs on this is the list names right so name becomes Adam and then it goes to line for loop is just something that runs over and over again till the given bucket or given thing X so in this case a given thing is a list then this list has 1 2 3 4 5 items so can you guess how many times this loop will run yes it will run 5 times okay so while that's happening this variable name is going to be the first element the first time then the second element in the third element and fourth element and fifth element so the first time is going to be Adam and line four is going to pretty much that print Adam and you can see Adam then name is going to be likes then is going to print Alex so on and so forth I think you already know this I will hit that button and here you see Adam Alex Maria Martine and Columbus great we have a dictionary Webster with the key aardvark which has a value a start of a popular children's cartoon show so this is you know giving you an example so here they have Webster which is kind of like um they're using it as a web smyrnaean Webster whatever dictionary but you could also you know have you could create a website where you have movies and trailers so for a movie you can have the movie name and for the trailer description as the value you could put description right so that's another way you could use a dictionary okay let's keep going so use a forloop to go through the Webster dictionary at all definitions that is pretty simple loops work the same way for dictionaries kind of like the work for a list so just to give you an example here for item in Webster let's say print item right so this will actually print out the key names but if you want to print out their values again remember to get a value of a dictionary you have to give the name of the dictionary and then the key so if the item is giving you key then it's just as simple as putting in the dictionary name passing in the key and you get back the value right so let's see what they want us to do so they just want how to print all the definitions so we're going to do the same thing we're going to do this okay print put your code below okay and we've printed out all the definitions done control flow and looping okay now we're getting fancy we're using for loops and maybe freezing ifthen statements in here as well so here what's happening let's take their code and let's read it reading is an important part of a developer's job so we have a list of numbers with four elements or four numbers in here one three four seven so we go through each number for number in numbers so again you should be thinking the first time the loop happens the number is 1 the second time the loop happens number is 3 third time the loop happens the number is 4 and then when the loop happens again the number is 7 and then the for loop stops and we're out of the for loop ok everything that's indented below the for loop is part of the for loop so whenever the for loop is running every time the for loop runs this block of code is running as well okay well this block only runs if line four is true but just for simplicity sake we can say that these are the only things that are considered when the program is thinking about what parts of the code to run once all the elements and once a for loop is completed then we go to line seven which means that no matter what happens line seven runs because line seven is not dependent on any other line but that's the last line that we'll run in the thing so you can see it says we printed seven and obviously at the end we probably have printed seven okay so it'll go through for number and numbers if number is greater than six then print the number so when we keep going through the numbers if at any point we get a number from the list that's greater than six then we print it out so in this case you can understand that none of the numbers get printed except for seven because every other number is less than six we run it okay we're back online again so for some reason the internet pretty much died so here if I run this code you are going to see they want us to put parentheses after print because again this is Python three that I'm using in right rappelled it repl dot it and basically what I say happens right run through the loop numbers great and six we print it out and here we have we print seven and then the last line of code says we printed seven all right like step two above loop through each item in the list a like subject if the number is even printed out you can test if items is even by two equal equals zero so that means this okay so if you want to check a number is divisible by two that means that the number is even then we print it out so how do we check if a number is even okay let's take a number like 12 and if we say if you use modulus that gives us a remainder so let's try putting in five into this right and let's print it out and see what we get so we get back a 2 because 5 goes into 5 5 goes into 10 we get a remainder of 2 right and if we do 12 modulo 6 we get a remainder of 0 because 6 goes into 6 and then 6 goes into 12 so 6 goes into 12 perfectly therefore 12 is divisible by 6 indeed how we check that if 12 is divisible by 6 is we say right because if 12 is divisible by 6 we should get back to 0 12 modulo 6 should give me a 0 so here we're checking does this give me a 0 if it does give me a 0 then that means 12 is divisible by 6 so I should get back a true right likewise if I put a 5 in here I get a remainder of 2 this whole thing turns to a 2 2 does not equal 0 this should give me back a false same way you can check for divisibility by 2 by just replacing that by 2 they're cool so any number that we can put in we can find out if it's divisible by 2 or not which means if it's even or not so we're going to do that here for number in a if number is divisible by 2 then print number is that what they want us to do print it out that's what they want us to do this is it two four six eight ten twelve isn't that cool okay let's move on lists plus functions so let's make this one the last one for this video and then we'll pick it up next time in tutorial ten all right so let's see what's going on here we have a function count small it takes in and input numbers so it takes in one variable we can call it V or we can be nice and call it numbers for n in numbers and I would say num in numbers or number in numbers but they're just being cool and putting N if the number is less than ten then we increment the variable total by one and we return total so effectively we are trying to count the small numbers so in here right for example if we ran this algorithm it would say that the total number of numbers that are less than ten is going to give us back what do you think is going to give us back did I give us a two right this should give us back a two because there are only two numbers that are less than ten everything else is greater than ten so that's what this number this loop does okay it defines total to be 0 and then increments total by 1 every time the number is less than 10 and then at the end it returns the total okay so here we are calling the function small count small on the list called lost so you can either put in the variable lost in there or directly put in this list but why put directly the list if we have used a variable to store it so we use the count small function pass in that list so what happens is that this list gets passed to this function this function replaces numbers with that list and everywhere there's numbers it changes it with that list name now this loop comes in and it says 4 4 see the first time the loop runs it goes to the first element in the list so it goes for 4 in this list if 4 is less than 10 which it is it increments total by 1 so total becomes 1 then it goes for 8 in this if 8 is less than 10 total increments by 1 so total increments by 1 we get 2 then next time it goes for 15 in that list if 15 is less than 10 increment total by 1 if is this statement true no this statement right here is false okay this evaluates to a false so this part of the code never runs so total stays at 2 then the loop goes and goes to 16 if 16 is less than 10 this evaluates to false therefore line 5 never executes and hence total never increments again and you get the pattern 23 the same thing will happen and 42 the same thing will happen so let's put all of this back right so effectively at the end we'll get back to and line 10 we'll print that out so let's hit run and again this is Python 3 so I got to wrap that in parentheses and we get back to now we're going to write our own functions so write a function that counts how many times the string fizz appears in a list write a function called fizz count define that's how we write a function so every time we think a function we type in D EF which means define function name is count it takes in a list X so we should really call it list X or a list like this not list because list is a reserved word which is why turned blue but list underscore or list you know num list but here they want to be fancy and call it X just to confuse you guys so but we'll do that create a variable count to hold ongoing count so we initialize it to zero so then later we can keep incrementing count to keep track of everything that we've seen so far and then return count at the end su for item in X if X equal to the string fizz then increment count by one so we can use this fancy notation but don't do that for now just use this one so this means that new count is the old count plus one so now it changes the definition of this count to one okay and then at the end we return count okay so for example this count should return to so this is a pretty cool function now we're starting to actually do something with all of this oh did they want us to print it out no this said return it right so it should return so when you return stuff it doesn't actually get printed out so you have to wrap that in a print to print it out we get 0 that's weird that shouldn't happen Oh if item is fizz not X so we get 2 okay so let's go through this loop and how it works so we're calling our function fist count we're passing in the list right we're passing in this list fizz cat fizz so this X turns into fizz cat fizz we come to count we initialize it to 0 for item in X so X is this list item the first time is going to be fizz if fizz equal equal fizz which is obviously true then increment count by 1 so count is now 1 then it goes it's like an item in loop for cat in that if cat equal equal fizz increment count this part evaluates to false right and so line 7 never executes and therefore count doesn't not increment then we go to the loop last time because red the last element so again it's fizz here we got fizz is if fizz equal equal fizz well is fizz equal equal to fizz definitely this is true this part gets line 7 gets executed count gets incremented by 1 we see the loop has stopped so we continue to line 8 finally let's give a little gap to make it easier to read we go to line 8 in line 9 line 9 returns the count which is 2 at this point so it returns 2 and we print out that so this whole thing effectively turns to a 2 and then we print out this 2 right there okay so hopefully you are seeing how this is working and I'm going to copy this and paste it here I'm going to comment out line ten because they just give an example and we don't actually have to write it and they said start next lesson great job everybody you have just made it through code Kadim e part 9 please like the video and please subscribe we're very close to 100 subscribers right we're at 97 subscribers at this point please subscribe let's get to 100 subscribers and I will see you in the next video code Khadem e part 10 okay so get psyched I'll see you soon
