With timestamps:

00:00 - hey guys welcome back to the learn
00:02 - object-oriented programming in Python
00:05 - course whoo mouthful so in the last
00:09 - video we talked a little bit about how
00:12 - we had the student thing and then we
00:14 - were able to use the initialization
00:16 - method so we talked about kind of an it
00:18 - method of classes well let's go and talk
00:22 - about the difference between classes
00:25 - versus objects so it's the some of the
00:28 - terminology is important to wrap your
00:29 - mind around even if it's a repetition or
00:32 - even if you've seen it somewhere before
00:33 - it's good to practice and just hear
00:35 - about it again so you can differentiate
00:37 - when you're speaking when you're
00:39 - thinking and more importantly when
00:42 - you're researching online because if
00:44 - you're trying to create a game one of
00:45 - the most common things people will do is
00:48 - you'll go online go on stackoverflow.com
00:50 - or whatever and look something up and if
00:52 - your terminology is not correct you're
00:54 - not going to look it up correctly as
00:56 - well so even though it might be knowing
00:58 - right now focus on learning the
01:00 - terminology so when you see a class
01:02 - constantly in your head set class or
01:04 - tell your friend class or you know say
01:07 - it out loud and same thing with an
01:09 - object do the same thing when you
01:11 - identify it be like oh that's an object
01:13 - from a class so on and so forth now
01:15 - let's go ahead and break down the
01:18 - difference between classes and objects
01:20 - so let's say again we create a class
01:24 - called I don't know
01:27 - fighters okay and in this class we have
01:33 - let's let's do this okay let's let's
01:36 - create that init method that we had
01:38 - earlier and let's go down here and let's
01:43 - just put whatever we don't care for now
01:48 - we will just have a name okay and we
01:51 - will say solve that name is equal to
01:53 - name and we will delete the pass and
01:56 - just like that
01:58 - okay and now I'm going to say Kazi is
02:04 - equal to fighters dot or no let's pass
02:09 - them a name so we'll say Kazi here and
02:11 - i'm going to save it stop giving me that
02:15 - error about spell check now I'm going to
02:19 - run this code in a little bit salsa Kazi
02:21 - name and I'll say print around it and
02:24 - I'm going to run this piece of code so
02:27 - let's run it and you see that it says
02:31 - Causey right over there okay well what
02:34 - just happened so fighters is the class
02:37 - name this name here is an attribute and
02:42 - this initialization thing is a method
02:46 - Kazi is an object I know I said a lot of
02:51 - things it's okay if you don't completely
02:56 - get it
02:56 - object-oriented programming is one of
02:58 - those things that the more you do it the
03:00 - more sense it makes in the store that
03:02 - will kind of flip your brain a little
03:04 - bit but fighters
03:06 - I repeat fighters is the class and cause
03:10 - E is the object created from the class
03:14 - fighters all right another way of saying
03:17 - it is that we just instantiate it an
03:19 - object and that object happens to be
03:22 - Kazi okay and now whatever kind of
03:25 - things we want caused you to do we can
03:27 - do or we can create another object we
03:29 - can call Bob is equal to from the
03:30 - fighters class give them the name Bob or
03:33 - you can give them the name cat it
03:34 - doesn't really matter we can say print
03:36 - Bob's name and again you will see you
03:42 - know you see cat's name at the bottom
03:43 - there so might be a repetition of a
03:47 - little bit of what we did but I wanted
03:49 - to go a little bit more in depth and
03:50 - break this terminology apart and again
03:52 - the more classes you see the more
03:54 - methods you see me create and the more
03:56 - methods and classes you create you will
03:58 - get more comfortable with it therefore
04:00 - you will get a better under
04:01 - standing so I want you to pause this
04:03 - video or after you're done watching this
04:05 - video and before you move on to the next
04:07 - video create your own class kind at the
04:10 - top of your head create your own
04:12 - initialization method can create your
04:14 - own kind of objects and go from there
04:16 - and before I forget here's the code so
04:18 - go to Chrome or Safari whatever you use
04:21 - don't use Safari start using Chrome and
04:24 - go to that link up at the top I'll give
04:30 - you guys that link okay it's very simple
04:31 - github comm slash clever programmer
04:33 - slash clever programmer underscore stuff
04:35 - I'll leave that hopefully in the
04:36 - description below if I remember and I've
04:39 - pushed all of your code up here so
04:41 - whenever we put something just go right
04:43 - there so OOP really stands for
04:45 - object-oriented programming click that
04:48 - and here's where all of your code will
04:50 - be alright so do that and please please
04:55 - which just go and smash that start
04:57 - button okay right there just just smash
04:59 - it okay like that saw that now we're at
05:02 - three but I'm gonna on start it because
05:04 - it's cooler when you guys like it
05:06 - instead of me okay guys I'll see you in
05:09 - the next video

Cleaned transcript:

hey guys welcome back to the learn objectoriented programming in Python course whoo mouthful so in the last video we talked a little bit about how we had the student thing and then we were able to use the initialization method so we talked about kind of an it method of classes well let's go and talk about the difference between classes versus objects so it's the some of the terminology is important to wrap your mind around even if it's a repetition or even if you've seen it somewhere before it's good to practice and just hear about it again so you can differentiate when you're speaking when you're thinking and more importantly when you're researching online because if you're trying to create a game one of the most common things people will do is you'll go online go on stackoverflow.com or whatever and look something up and if your terminology is not correct you're not going to look it up correctly as well so even though it might be knowing right now focus on learning the terminology so when you see a class constantly in your head set class or tell your friend class or you know say it out loud and same thing with an object do the same thing when you identify it be like oh that's an object from a class so on and so forth now let's go ahead and break down the difference between classes and objects so let's say again we create a class called I don't know fighters okay and in this class we have let's let's do this okay let's let's create that init method that we had earlier and let's go down here and let's just put whatever we don't care for now we will just have a name okay and we will say solve that name is equal to name and we will delete the pass and just like that okay and now I'm going to say Kazi is equal to fighters dot or no let's pass them a name so we'll say Kazi here and i'm going to save it stop giving me that error about spell check now I'm going to run this code in a little bit salsa Kazi name and I'll say print around it and I'm going to run this piece of code so let's run it and you see that it says Causey right over there okay well what just happened so fighters is the class name this name here is an attribute and this initialization thing is a method Kazi is an object I know I said a lot of things it's okay if you don't completely get it objectoriented programming is one of those things that the more you do it the more sense it makes in the store that will kind of flip your brain a little bit but fighters I repeat fighters is the class and cause E is the object created from the class fighters all right another way of saying it is that we just instantiate it an object and that object happens to be Kazi okay and now whatever kind of things we want caused you to do we can do or we can create another object we can call Bob is equal to from the fighters class give them the name Bob or you can give them the name cat it doesn't really matter we can say print Bob's name and again you will see you know you see cat's name at the bottom there so might be a repetition of a little bit of what we did but I wanted to go a little bit more in depth and break this terminology apart and again the more classes you see the more methods you see me create and the more methods and classes you create you will get more comfortable with it therefore you will get a better under standing so I want you to pause this video or after you're done watching this video and before you move on to the next video create your own class kind at the top of your head create your own initialization method can create your own kind of objects and go from there and before I forget here's the code so go to Chrome or Safari whatever you use don't use Safari start using Chrome and go to that link up at the top I'll give you guys that link okay it's very simple github comm slash clever programmer slash clever programmer underscore stuff I'll leave that hopefully in the description below if I remember and I've pushed all of your code up here so whenever we put something just go right there so OOP really stands for objectoriented programming click that and here's where all of your code will be alright so do that and please please which just go and smash that start button okay right there just just smash it okay like that saw that now we're at three but I'm gonna on start it because it's cooler when you guys like it instead of me okay guys I'll see you in the next video
