With timestamps:

00:00 - pop that up so we'll we'll do that so
00:02 - now we're on
00:03 - firebase we're going to hit create
00:05 - database and here make sure you
00:06 - choose start in test mode hit done and
00:09 - then just
00:10 - choose done it doesn't matter what
00:11 - location it picks it's going to be a
00:13 - good location by default
00:16 - damn i see it's our stream is like
00:19 - starting to peak again and we're getting
00:20 - more viewers and thank you guys so much
00:22 - we are currently at 330 and we broke 16
00:26 - 000 views so thank you guys and if
00:28 - you're enjoying this so far
00:30 - make sure you hit the like button so it
00:32 - goes out to more people
00:34 - exactly guys we ask you smash that
00:37 - thumbs up
00:39 - nice so with that said now we're inside
00:42 - the database so the database follows a
00:43 - collection document collection document
00:46 - and
00:46 - repeating structure right a collection
00:48 - is simply a list
00:49 - it's like an array right so let's go
00:51 - ahead and
00:52 - start that um with that collection by
00:56 - going ahead and creating a collection of
00:58 - rules right so let's go ahead and say
00:59 - rules
01:01 - yep so this is going to be where the
01:02 - videos are so reels
01:04 - and we'll hit next auto id
01:08 - yeah so this is actually going to be the
01:10 - first rule so in order to
01:12 - understand what fields we need what
01:14 - we're going to do is we're actually
01:15 - going to
01:16 - yeah let's go to app.js
01:19 - let's go to apps and let's use the
01:20 - app.js props that we actually
01:23 - we just use video card props and i'm
01:25 - just gonna i'm
01:26 - i i will show that in just a second but
01:29 - the things that we're gonna be using
01:30 - here
01:31 - for the video um the fields
01:34 - what fields are we gonna need so i can
01:35 - visually show it here and then we can
01:37 - show it through props
01:38 - so i imagine go ahead okay so channel of
01:43 - so the channel that's right here yep
01:45 - that channel
01:46 - sanger got it what else and then we're
01:49 - gonna have the avatar
01:51 - source so the avatar image and that's
01:53 - the image yep
01:55 - yep we have the song that's playing okay
01:58 - so that's what
01:59 - brings the ticker yeah exactly and we
02:02 - have
02:03 - the url of the actual video itself okay
02:06 - otherwise the video would not be here at
02:08 - all
02:08 - yep got it and then we have the number
02:11 - of likes and the number of shares in the
02:13 - bottom right
02:14 - okay so those are all the things that
02:16 - we're going to need to feed our database
02:18 - when we create
02:19 - a dummy we're going to basically create
02:21 - this
02:22 - through the database got it and then
02:26 - props let's look at app.js quickly
02:29 - before we do that
02:30 - so okay yes there we go and you can see
02:32 - here guys we have the props right
02:34 - so here we're manually passing in those
02:37 - props we've got the channel so when you
02:38 - say
02:38 - okay i got it yeah i was just gonna say
02:40 - if you could just say what the props are
02:42 - but here the channel is a prop the
02:44 - avatar source is a prop
02:46 - and video card is the component yes
02:49 - exactly so rather than hard coding these
02:51 - values like we're doing here
02:53 - we want to be able to pull them from the
02:54 - database so let's go ahead and add a
02:56 - document which fits this structure
02:58 - so for the first field let's go ahead
03:00 - and do a field of channel
03:03 - got it okay so yeah so basically we're
03:04 - gonna go channel
03:06 - and boom and i will also post the same
03:08 - values
03:10 - avatar source and all of this is string
03:13 - because i actually see that he has a
03:14 - string data type there so i'm just gonna
03:15 - keep it as a string
03:17 - uh song this is also a
03:21 - string uh url
03:24 - is going to be actually let's go so this
03:26 - is going to be a url
03:28 - which is the video url right
03:31 - yep cool so i'm going to paste that here
03:34 - likes are going to be a number so i'm
03:37 - going to say
03:38 - likes we're going to make it a number
03:40 - we're going to give it just 950 likes
03:42 - and then shares is also going to be a
03:45 - number
03:46 - so i'm going to go ahead boom boom boom
03:48 - uh
03:49 - whoops and i'm going to just copy this
03:52 - and paste it
03:53 - awesome so that record is now made and i
03:56 - just want to show you guys when sunny
03:57 - was talking about how the structure is
04:00 - so here you got your you got your
04:03 - uh collections inside of the collections
04:06 - you have documents so for example
04:08 - hey basically in english i'm saying hey
04:10 - this this is where all my reels are
04:13 - this is a folder that has all my reels
04:15 - then when you go inside of that folder
04:17 - that literally has like all of your
04:19 - reels right
04:21 - and then it's like so in your actual
04:23 - local computer you would have a folder
04:25 - called photos
04:26 - and then inside of there you might have
04:27 - like all your photos so just like that
04:29 - we have all the reels here
04:31 - now once we go inside of a particular
04:35 - reel all the data associated with that
04:38 - is right over here so what does that
04:39 - data mean for example hey
04:42 - here's the url for that so i'm going to
04:44 - copy this url
04:45 - we're going to open a new tab press and
04:48 - type it in
04:49 - and then boom this is what actually
04:51 - comes up
04:52 - yeah yeah so this is
04:56 - you know the data that's part of it
04:59 - exactly so a really nice explanation
05:02 - there guys and like you can now see the
05:04 - exact way that we've
05:05 - mapped the uh sort of the props that we
05:08 - were previously passing as
05:09 - hard-coded values into the database so
05:12 - that we have the same structure
05:13 - right now with that said we now need to
05:17 - pull that information from the database
05:19 - so we're going to show you a really nice
05:21 - way of doing this
05:22 - and also the added bonus here is that
05:24 - you actually go ahead and get
05:26 - a real-time function you get real-time
05:28 - functionality here as well so
05:30 - the first step to this is we need a sort
05:32 - of variable to keep track of all of the
05:34 - real
05:35 - all of the rails right so let's go ahead
05:37 - and create one so remember in react
05:39 - to create a variable we use use state
05:42 - so we're gonna we're gonna go ahead and
05:44 - say const and we say rules
05:46 - and we're gonna say set rules right and
05:48 - then we say use
05:49 - state and then the initial value here is
05:52 - going to be an empty array because we're
05:53 - going to assume that we have
05:54 - zero rules by default when we begin this
05:56 - process
05:57 - yeah so we're going to do this and we
05:59 - need to import use state
06:01 - at the top okay so like this
06:04 - now what we're going to do is we are
06:07 - going to
06:08 - go ahead and actually add a use effect
06:11 - now i will explain what a use effect is
06:13 - and it's basically going to allow us to
06:14 - run a piece of code
06:16 - when the app component loads and we want
06:18 - to run this once
06:19 - because we just need to set up a
06:20 - listener to the database one time
06:22 - and we don't want it to keep firing off
06:24 - we just want it to happen once all right
06:26 - so we've gone ahead and imported it and
06:28 - in order to write a use effect we write
06:30 - it over here so we say
06:31 - use effect right and then what happens
06:34 - is it takes a function so it takes a
06:36 - function and then it takes a second
06:38 - argument which is the dependencies so
06:41 - by default by passing empty dependencies
06:43 - like this
06:44 - what this is saying is that the app
06:46 - component
06:48 - will run once when it loads
06:52 - and never again right so it won't run
06:55 - once when it loads and it won't run
06:56 - again
06:57 - but if i had like for example a con
07:00 - a variable inside of it like
07:03 - name or like age or something like that
07:06 - whenever these it will run once when
07:07 - they when it loads
07:08 - they'll also run when name and age
07:11 - change
07:12 - which is why it's known as a dependency
07:14 - okay
07:15 - so if we by default right now we just
07:18 - want to run once when it loads so we're
07:19 - going to basically go ahead and do this
07:21 - so what we now need to do is import that
07:24 - db from our local firebase file so here
07:26 - we do import db from our local firebase
07:29 - not the
07:30 - module firebase and then we're going to
07:32 - go ahead and do db
07:33 - dot collection because remember that
07:36 - collection that we created on firebase
07:38 - was reals okay so we actually had a
07:41 - collection called rules
07:43 - and then what we say is on snapshot so
07:46 - this is the magic right here so on
07:47 - snapshot is saying
07:49 - go ahead and give me like imagine you've
07:51 - got a camera and you pretty much take a
07:53 - picture
07:54 - of that rails collection so that that
07:56 - list of remember
07:57 - kazi said it was like a a folder right
07:59 - with all the rules inside of it so
08:00 - imagine we could take a picture of that
08:02 - folder at that exact point in time
08:04 - so that's the snapshot right
08:07 - that's the snapshot now the the
08:09 - beautiful thing here
08:11 - is that the snapshot whenever something
08:14 - is added
08:14 - whenever something is changed whenever
08:16 - something is removed
08:18 - the snapshot is refired off and we get a
08:21 - fresh snapshot
08:22 - right so we get a fresh snapshot and
08:25 - then that goes ahead and gives us
08:26 - the most up-to-date value of what the
08:29 - rules folder or collection looks like
08:31 - okay yep so with it and i just wanna and
08:34 - i'll keep visually adding
08:37 - like more technically what he's
08:39 - accessing
08:40 - so when he's saying hey give me the
08:42 - reels folder
08:44 - i mean that's how i think in english you
08:46 - know if you
08:47 - like give me the reels folder boom
08:49 - that's what's giving him
08:51 - and then on snapshot is just a fancy way
08:54 - of getting everything in real time yeah
08:57 - exactly exactly that guys it's fancy way
09:00 - of getting everything in row time
09:02 - so now what we're going to do is go
09:04 - ahead and actually um
09:08 - set the rules so we're going to set the
09:11 - rules
09:11 - to a value right and what value are we
09:13 - going to set the rows to i basically
09:14 - want to go through
09:15 - all of the rows inside the database so
09:17 - here set rows i'm going to go through
09:19 - all of them so i'm going to say
09:20 - snapshot.docs
09:22 - so that's going to go ahead and go
09:23 - through that list of rules right
09:25 - snapshot.docs and then i'm going to say
09:27 - map so it's
09:28 - right through every single one so
09:30 - snapshot.docs returns
09:32 - like this returns an array yep
09:35 - okay so this guys is basically
09:39 - everything inside of here exactly
09:44 - and then the dot map thing will allow
09:47 - you to actually like
09:48 - loop through one by one so like if this
09:51 - is the first item
09:52 - and this will be the second reel and the
09:54 - third reel and a fourth reel
09:56 - all that exactly that we want to
09:59 - basically map through them
10:00 - and basically return it in a structure
10:02 - that is good for us
10:04 - right so in this case what i'm going to
10:05 - say is map through every single document
10:08 - and basically go ahead and get the doc
10:10 - dot
10:11 - data right and the doctor data is all of
10:14 - the properties associated to that one
10:16 - document so the app
10:18 - was okay got it yeah couldn't see some
10:21 - of it so now we could see it
10:23 - yeah okay so basic go ahead go ahead
10:26 - finish your thing uh so all of these so
10:28 - if you have doctor data so the avatar
10:30 - source the channel like share song url
10:33 - anything associated with that document
10:35 - that we're mapping through or iterating
10:37 - through it
10:38 - uh we're gonna get that information back
10:40 - so i'm just gonna again
10:41 - visualize everything he's saying because
10:43 - this is where it gets really dense
10:46 - and i just want to empathize for
10:47 - everybody who's watching because
10:49 - it always would kill me when i would be
10:51 - going through this
10:52 - so reels gets you this all right
10:56 - then when we do snapshot.docs that gets
10:59 - us everything here
11:01 - yep then when we do dot map then each
11:05 - dock here
11:05 - allows us to loop through it okay
11:09 - and then when we do doc.data it gets you
11:13 - so when you're looping through it gets
11:14 - you this particular dock in the first
11:16 - loop
11:17 - and then all the data here and then this
11:19 - data here
11:21 - is actually uh at object
11:26 - yes it's just filled with key value
11:28 - pairs yeah
11:29 - exactly so you end up getting as it maps
11:31 - through everything you end up getting an
11:33 - array
11:34 - of objects and then that goes inside of
11:36 - our rails variable
11:38 - yep so the the final thing that you're
11:40 - going to get is an array
11:42 - of objects so for example here's your
11:45 - first
11:46 - reel and this is going to have
11:50 - does this this also has an id right uh
11:53 - no so we're just pulling the data not
11:55 - the ids yeah
11:56 - okay so we're not pulling okay cool so
11:59 - the first reel is essentially gonna have
12:01 - for example you know channel i'll just
12:04 - put channel for now as clever quasi
12:07 - okay yeah and then a bunch of other
12:09 - stuff
12:11 - um yeah and then the second one doesn't
12:13 - exist yet so this entire thing right now
12:16 - would look like this for you know again
12:18 - this is just an example but this is what
12:19 - it would look like
12:20 - an array with one item exactly and then
12:23 - as you add the second third document you
12:25 - would get an array with two items three
12:26 - items
12:27 - etc all right so nice
12:31 - awesome logan just dropped by he goes
12:33 - hey guys in office today just wanted to
12:35 - stop in and support you
12:36 - thank you so much and then he says the
12:38 - drawing is helpful hopefully this is
12:40 - helpful for you guys
12:42 - nice awesome um
12:46 - right so now what we're going to do is
12:50 - reels we'll now actually if we've done
12:52 - everything correctly we'll have all of
12:53 - the information that we want right
12:55 - so this is the moment of truth now so
12:58 - what we're going to do is we're going to
12:58 - go down here we're going to delete this
13:00 - line
13:01 - and what i'm going to do is rather than
13:02 - having this hard coded out like this
13:04 - right so rather than having all of this
13:06 - stuff
13:06 - hard-coded at the bottom so we have like
13:08 - all of these
13:10 - uh video cards so let's go ahead and
13:12 - remove these we have everyone
13:13 - this video called this video kind of
13:14 - when you get rid of that get rid of that
13:16 - instead of doing this what we have right
13:18 - now what i'm going to do
13:20 - is i'm going to say so i'm going to do
13:22 - some java jsx so i'm going to go ahead
13:24 - and do this i'm going to say
13:27 - reals.map right and for every single
13:31 - reel
13:32 - i want to return a video card right so i
13:35 - want to return a video card so i want to
13:36 - return
13:37 - a video card like this right but
13:41 - look what we do here that's different
13:42 - right so i don't want these values to be
13:43 - hard-coded
13:44 - i actually want to pull the values from
13:46 - it so here
13:48 - we can destructure the real so i can
13:50 - actually go ahead and pull the rail
13:52 - apart and say get
13:53 - me the channel the avatar the song the
13:56 - url the likes etc from that row so i can
13:58 - go ahead and do this
14:00 - i can actually pull it apart and i can
14:02 - do that
14:03 - all right now what i can say is
14:07 - rose dot map uh yep so i don't know why
14:10 - it's freaking out yep so rose i'm
14:11 - in the video card component like this
14:14 - now here i can actually go ahead and say
14:16 - this should be the channel that we're
14:17 - getting back from the db
14:19 - this should be the avatar source
14:24 - the avatar source this should be the
14:27 - song
14:29 - and these are mapping to the database
14:31 - this should be the url from the database
14:33 - so it should be the url this should be
14:35 - the likes
14:37 - and this should be the shares like that
14:39 - and what i can do now is i can get rid
14:41 - of our hard coded value
14:43 - so i can actually go ahead and highlight
14:44 - a hardcore value and delete
14:46 - a hard-coded one so at this point in
14:48 - time guys
14:49 - we have no hard-coded stuff here so you
14:51 - can actually see for yourself
14:53 - there is no hard-coded stuff saying that
14:56 - this me
14:57 - like this is the channel name of blah
14:58 - blah we're mapping it from the db
15:01 - okay and what we can actually do to
15:03 - prove this is we can go ahead and save
15:05 - and we can go back to our app and we can
15:08 - if everything was done correctly
15:10 - this should map to the database it
15:12 - should listen it should get all that
15:13 - information
15:14 - and it should render out the video card
15:16 - correctly on the screen
15:18 - and if it does i think we deserve a
15:19 - thumbs up so let's go back to localhost
15:23 - all right let's check it out and
15:26 - i'll find out if you're bullshitting us
15:28 - sonny i'll find out
15:31 - and hey wait here we go
15:34 - hold on hold on first we got to put it
15:36 - through the stress test
15:37 - guys could be bullshitting us so we got
15:39 - to find out
15:41 - let's see here okay
15:44 - [Music]
15:47 - so it says 950 here yeah yep
15:51 - now if it's true what you're saying if i
15:54 - change this it should change here in
15:56 - real time without me refreshing or doing
15:58 - anything right
16:00 - which is insane but let's try it
16:03 - yep okay so let's give it a try i'm
16:05 - going to change this to
16:08 - 154 and i'm going to hit update
16:11 - holy crap dude
16:18 - real time guys real real time okay let
16:21 - me try let me try
16:22 - this clever quasi to um
16:25 - pop up python bro
16:29 - wow this is real time i love this you
16:32 - know that
16:33 - it's always satisfying whenever i see
16:35 - that
16:36 - react like firebase connect with react
16:39 - and then work in real time it's just
16:41 - always like one of the best feelings
16:44 - yeah it's crazy and it's just insane
16:46 - like how little code
16:48 - it was to get that powerful
16:50 - functionality like there was no managing
16:52 - sockets there was no socket i o there
16:54 - was no headache or anything
16:55 - we just did a simple like three lines of
16:57 - code with the on snapshot
16:59 - and it just worked right everything
17:00 - worked and then it was paired
17:02 - beautifully with the react hooks
17:04 - everything worked really really nice
17:06 - that's amazing
17:08 - what we're going to do now is if you can
17:09 - see on the right we can't actually
17:11 - scroll
17:12 - right so let's go back to having that
17:13 - layout
17:15 - yeah i can't scroll i'm trying to scroll
17:17 - i can't yeah
17:18 - so now let's have firebase on the left
17:20 - and let's go ahead and add a
17:22 - another um document into firebase so i'm
17:25 - going to go ahead and i'm actually going
17:26 - to drop you some content
17:28 - so i'm going to go ahead and drop you an
17:31 - avatar source
17:34 - so i will drop it inside of where should
17:36 - i drop it i could drop it inside of
17:38 - app.js
17:40 - sure go for it yeah so i'll drop this
17:42 - one into app.json
17:44 - boom that's the source
17:47 - um and add it you want me to add this to
17:50 - the database
17:51 - yes yeah okay there's avatar source
17:56 - i wish it would just allow me to
17:57 - duplicate a record you know that'd be
17:59 - nice i know
18:00 - yeah so that's avatar source
18:05 - this is the handle so and the channel
18:08 - name is
18:08 - uh sanga right yep cool
18:12 - and then avatar uh
18:15 - okay url you gave me the video url right
18:19 - no that's actually the avatar a source i
18:21 - gave you
18:22 - the instagram long the first thing that
18:24 - you gave me was the avatar source
18:26 - yeah okay got it what else
18:30 - and then likes on like we just do likes
18:33 - at 9 50 or something
18:35 - uh-huh and then do shares around like 40
18:38 - or something
18:40 - okay i'm gonna do 47. and then
18:43 - a song let's do this this was the song
18:46 - that i used
18:47 - this one here i'm gonna use don't rush
18:50 - hey there it is oh nice you actually
18:54 - oh that's funny dude why why don't you
18:57 - ever put
18:57 - um apostrophes like do you don't like
19:00 - them or
19:00 - to piss you off or what
19:04 - for what bit like don't you never put a
19:07 - pasta i notice you don't put it in don't
19:08 - you don't put it in let's is it like a
19:10 - british thing or is it just like a you
19:11 - personal thing
19:13 - i don't know i mean i do it for the s's
19:16 - but for everything else i get lazy
19:17 - yeah okay okay i see i got it and then
19:20 - for the url
19:21 - we have this huge one so this so this is
19:23 - going to be a number right likes and
19:25 - shares are going to be a number so yeah
19:27 - let me actually fix those real quick all
19:29 - right go for it
19:30 - now what url this is the big one so this
19:33 - is
19:34 - the most important one all right got it
19:37 - now
19:38 - before you hit save before you hit save
19:40 - let's get that on the left hand side of
19:42 - the screen
19:44 - oh so they can see it in real time yeah
19:46 - yeah so we'll show them in real time
19:48 - without a refresh
19:50 - so imagine now somebody just shot a reel
19:52 - and then they posted it right
19:54 - as soon as we hit save notice how the
19:56 - right side of the screen is not it's not
19:58 - going to refresh
19:59 - okay so hold on hold on let me just
20:02 - refresh right now because everything was
20:03 - white and blown out
20:04 - so now i'm i'm trying to scroll and it's
20:08 - not scrolling
20:09 - okay so i don't know if you guys can
20:10 - hear my sound
20:13 - of me trying to scroll but it's not
20:14 - doing it but once i hit
20:17 - save right over here and then i scroll
20:20 - it should scroll right
20:22 - yes yeah okay let's give it a try let's
20:25 - put it through that stress test so i'm
20:27 - gonna hit save
20:29 - it added it i see it on the left hand
20:31 - side it added that
20:32 - boom sango oh
20:36 - crap bro that's nice all right
20:40 - let me actually play it now
20:43 - [Music]
20:47 - love that when it works like that it's
20:50 - so
20:50 - satisfying it's crazy dude it is so
20:53 - clean bro
20:54 - it is so clean nice
20:59 - wow okay love leah is just super
21:02 - satisfying to watch it
21:04 - work that is beautiful yeah yo barcelona
21:07 - versus baron is going on
21:09 - that is a big boy match um i'm always
21:12 - i'm always team baron i'm i'm bayern all
21:16 - the way
21:18 - germany for me you know uh it's a german
21:20 - german league
21:22 - but uh i know go ahead i'm on the other
21:24 - side i'm on the other side
21:26 - yeah yeah yeah all right
21:31 - okay nice so i think with that said we
21:34 - just finished up with the firebase
21:35 - hey bayern is beating barcelona five to
21:40 - two let's go
21:43 - [ __ ] yo i would watch that match look at
21:46 - that
21:48 - uh dude let's watch let's watch soccer
21:51 - on this tv after
21:54 - that is nice okay nice okay
21:58 - so with that said guys we just finished
22:00 - up on
22:01 - the firebase database stuff
22:05 - so everything everything is done with
22:08 - that now
22:09 - so with that said we actually are ready
22:11 - for the deployment
22:13 - oh wow deploy

Cleaned transcript:

pop that up so we'll we'll do that so now we're on firebase we're going to hit create database and here make sure you choose start in test mode hit done and then just choose done it doesn't matter what location it picks it's going to be a good location by default damn i see it's our stream is like starting to peak again and we're getting more viewers and thank you guys so much we are currently at 330 and we broke 16 000 views so thank you guys and if you're enjoying this so far make sure you hit the like button so it goes out to more people exactly guys we ask you smash that thumbs up nice so with that said now we're inside the database so the database follows a collection document collection document and repeating structure right a collection is simply a list it's like an array right so let's go ahead and start that um with that collection by going ahead and creating a collection of rules right so let's go ahead and say rules yep so this is going to be where the videos are so reels and we'll hit next auto id yeah so this is actually going to be the first rule so in order to understand what fields we need what we're going to do is we're actually going to yeah let's go to app.js let's go to apps and let's use the app.js props that we actually we just use video card props and i'm just gonna i'm i i will show that in just a second but the things that we're gonna be using here for the video um the fields what fields are we gonna need so i can visually show it here and then we can show it through props so i imagine go ahead okay so channel of so the channel that's right here yep that channel sanger got it what else and then we're gonna have the avatar source so the avatar image and that's the image yep yep we have the song that's playing okay so that's what brings the ticker yeah exactly and we have the url of the actual video itself okay otherwise the video would not be here at all yep got it and then we have the number of likes and the number of shares in the bottom right okay so those are all the things that we're going to need to feed our database when we create a dummy we're going to basically create this through the database got it and then props let's look at app.js quickly before we do that so okay yes there we go and you can see here guys we have the props right so here we're manually passing in those props we've got the channel so when you say okay i got it yeah i was just gonna say if you could just say what the props are but here the channel is a prop the avatar source is a prop and video card is the component yes exactly so rather than hard coding these values like we're doing here we want to be able to pull them from the database so let's go ahead and add a document which fits this structure so for the first field let's go ahead and do a field of channel got it okay so yeah so basically we're gonna go channel and boom and i will also post the same values avatar source and all of this is string because i actually see that he has a string data type there so i'm just gonna keep it as a string uh song this is also a string uh url is going to be actually let's go so this is going to be a url which is the video url right yep cool so i'm going to paste that here likes are going to be a number so i'm going to say likes we're going to make it a number we're going to give it just 950 likes and then shares is also going to be a number so i'm going to go ahead boom boom boom uh whoops and i'm going to just copy this and paste it awesome so that record is now made and i just want to show you guys when sunny was talking about how the structure is so here you got your you got your uh collections inside of the collections you have documents so for example hey basically in english i'm saying hey this this is where all my reels are this is a folder that has all my reels then when you go inside of that folder that literally has like all of your reels right and then it's like so in your actual local computer you would have a folder called photos and then inside of there you might have like all your photos so just like that we have all the reels here now once we go inside of a particular reel all the data associated with that is right over here so what does that data mean for example hey here's the url for that so i'm going to copy this url we're going to open a new tab press and type it in and then boom this is what actually comes up yeah yeah so this is you know the data that's part of it exactly so a really nice explanation there guys and like you can now see the exact way that we've mapped the uh sort of the props that we were previously passing as hardcoded values into the database so that we have the same structure right now with that said we now need to pull that information from the database so we're going to show you a really nice way of doing this and also the added bonus here is that you actually go ahead and get a realtime function you get realtime functionality here as well so the first step to this is we need a sort of variable to keep track of all of the real all of the rails right so let's go ahead and create one so remember in react to create a variable we use use state so we're gonna we're gonna go ahead and say const and we say rules and we're gonna say set rules right and then we say use state and then the initial value here is going to be an empty array because we're going to assume that we have zero rules by default when we begin this process yeah so we're going to do this and we need to import use state at the top okay so like this now what we're going to do is we are going to go ahead and actually add a use effect now i will explain what a use effect is and it's basically going to allow us to run a piece of code when the app component loads and we want to run this once because we just need to set up a listener to the database one time and we don't want it to keep firing off we just want it to happen once all right so we've gone ahead and imported it and in order to write a use effect we write it over here so we say use effect right and then what happens is it takes a function so it takes a function and then it takes a second argument which is the dependencies so by default by passing empty dependencies like this what this is saying is that the app component will run once when it loads and never again right so it won't run once when it loads and it won't run again but if i had like for example a con a variable inside of it like name or like age or something like that whenever these it will run once when they when it loads they'll also run when name and age change which is why it's known as a dependency okay so if we by default right now we just want to run once when it loads so we're going to basically go ahead and do this so what we now need to do is import that db from our local firebase file so here we do import db from our local firebase not the module firebase and then we're going to go ahead and do db dot collection because remember that collection that we created on firebase was reals okay so we actually had a collection called rules and then what we say is on snapshot so this is the magic right here so on snapshot is saying go ahead and give me like imagine you've got a camera and you pretty much take a picture of that rails collection so that that list of remember kazi said it was like a a folder right with all the rules inside of it so imagine we could take a picture of that folder at that exact point in time so that's the snapshot right that's the snapshot now the the beautiful thing here is that the snapshot whenever something is added whenever something is changed whenever something is removed the snapshot is refired off and we get a fresh snapshot right so we get a fresh snapshot and then that goes ahead and gives us the most uptodate value of what the rules folder or collection looks like okay yep so with it and i just wanna and i'll keep visually adding like more technically what he's accessing so when he's saying hey give me the reels folder i mean that's how i think in english you know if you like give me the reels folder boom that's what's giving him and then on snapshot is just a fancy way of getting everything in real time yeah exactly exactly that guys it's fancy way of getting everything in row time so now what we're going to do is go ahead and actually um set the rules so we're going to set the rules to a value right and what value are we going to set the rows to i basically want to go through all of the rows inside the database so here set rows i'm going to go through all of them so i'm going to say snapshot.docs so that's going to go ahead and go through that list of rules right snapshot.docs and then i'm going to say map so it's right through every single one so snapshot.docs returns like this returns an array yep okay so this guys is basically everything inside of here exactly and then the dot map thing will allow you to actually like loop through one by one so like if this is the first item and this will be the second reel and the third reel and a fourth reel all that exactly that we want to basically map through them and basically return it in a structure that is good for us right so in this case what i'm going to say is map through every single document and basically go ahead and get the doc dot data right and the doctor data is all of the properties associated to that one document so the app was okay got it yeah couldn't see some of it so now we could see it yeah okay so basic go ahead go ahead finish your thing uh so all of these so if you have doctor data so the avatar source the channel like share song url anything associated with that document that we're mapping through or iterating through it uh we're gonna get that information back so i'm just gonna again visualize everything he's saying because this is where it gets really dense and i just want to empathize for everybody who's watching because it always would kill me when i would be going through this so reels gets you this all right then when we do snapshot.docs that gets us everything here yep then when we do dot map then each dock here allows us to loop through it okay and then when we do doc.data it gets you so when you're looping through it gets you this particular dock in the first loop and then all the data here and then this data here is actually uh at object yes it's just filled with key value pairs yeah exactly so you end up getting as it maps through everything you end up getting an array of objects and then that goes inside of our rails variable yep so the the final thing that you're going to get is an array of objects so for example here's your first reel and this is going to have does this this also has an id right uh no so we're just pulling the data not the ids yeah okay so we're not pulling okay cool so the first reel is essentially gonna have for example you know channel i'll just put channel for now as clever quasi okay yeah and then a bunch of other stuff um yeah and then the second one doesn't exist yet so this entire thing right now would look like this for you know again this is just an example but this is what it would look like an array with one item exactly and then as you add the second third document you would get an array with two items three items etc all right so nice awesome logan just dropped by he goes hey guys in office today just wanted to stop in and support you thank you so much and then he says the drawing is helpful hopefully this is helpful for you guys nice awesome um right so now what we're going to do is reels we'll now actually if we've done everything correctly we'll have all of the information that we want right so this is the moment of truth now so what we're going to do is we're going to go down here we're going to delete this line and what i'm going to do is rather than having this hard coded out like this right so rather than having all of this stuff hardcoded at the bottom so we have like all of these uh video cards so let's go ahead and remove these we have everyone this video called this video kind of when you get rid of that get rid of that instead of doing this what we have right now what i'm going to do is i'm going to say so i'm going to do some java jsx so i'm going to go ahead and do this i'm going to say reals.map right and for every single reel i want to return a video card right so i want to return a video card so i want to return a video card like this right but look what we do here that's different right so i don't want these values to be hardcoded i actually want to pull the values from it so here we can destructure the real so i can actually go ahead and pull the rail apart and say get me the channel the avatar the song the url the likes etc from that row so i can go ahead and do this i can actually pull it apart and i can do that all right now what i can say is rose dot map uh yep so i don't know why it's freaking out yep so rose i'm in the video card component like this now here i can actually go ahead and say this should be the channel that we're getting back from the db this should be the avatar source the avatar source this should be the song and these are mapping to the database this should be the url from the database so it should be the url this should be the likes and this should be the shares like that and what i can do now is i can get rid of our hard coded value so i can actually go ahead and highlight a hardcore value and delete a hardcoded one so at this point in time guys we have no hardcoded stuff here so you can actually see for yourself there is no hardcoded stuff saying that this me like this is the channel name of blah blah we're mapping it from the db okay and what we can actually do to prove this is we can go ahead and save and we can go back to our app and we can if everything was done correctly this should map to the database it should listen it should get all that information and it should render out the video card correctly on the screen and if it does i think we deserve a thumbs up so let's go back to localhost all right let's check it out and i'll find out if you're bullshitting us sonny i'll find out and hey wait here we go hold on hold on first we got to put it through the stress test guys could be bullshitting us so we got to find out let's see here okay so it says 950 here yeah yep now if it's true what you're saying if i change this it should change here in real time without me refreshing or doing anything right which is insane but let's try it yep okay so let's give it a try i'm going to change this to 154 and i'm going to hit update holy crap dude real time guys real real time okay let me try let me try this clever quasi to um pop up python bro wow this is real time i love this you know that it's always satisfying whenever i see that react like firebase connect with react and then work in real time it's just always like one of the best feelings yeah it's crazy and it's just insane like how little code it was to get that powerful functionality like there was no managing sockets there was no socket i o there was no headache or anything we just did a simple like three lines of code with the on snapshot and it just worked right everything worked and then it was paired beautifully with the react hooks everything worked really really nice that's amazing what we're going to do now is if you can see on the right we can't actually scroll right so let's go back to having that layout yeah i can't scroll i'm trying to scroll i can't yeah so now let's have firebase on the left and let's go ahead and add a another um document into firebase so i'm going to go ahead and i'm actually going to drop you some content so i'm going to go ahead and drop you an avatar source so i will drop it inside of where should i drop it i could drop it inside of app.js sure go for it yeah so i'll drop this one into app.json boom that's the source um and add it you want me to add this to the database yes yeah okay there's avatar source i wish it would just allow me to duplicate a record you know that'd be nice i know yeah so that's avatar source this is the handle so and the channel name is uh sanga right yep cool and then avatar uh okay url you gave me the video url right no that's actually the avatar a source i gave you the instagram long the first thing that you gave me was the avatar source yeah okay got it what else and then likes on like we just do likes at 9 50 or something uhhuh and then do shares around like 40 or something okay i'm gonna do 47. and then a song let's do this this was the song that i used this one here i'm gonna use don't rush hey there it is oh nice you actually oh that's funny dude why why don't you ever put um apostrophes like do you don't like them or to piss you off or what for what bit like don't you never put a pasta i notice you don't put it in don't you don't put it in let's is it like a british thing or is it just like a you personal thing i don't know i mean i do it for the s's but for everything else i get lazy yeah okay okay i see i got it and then for the url we have this huge one so this so this is going to be a number right likes and shares are going to be a number so yeah let me actually fix those real quick all right go for it now what url this is the big one so this is the most important one all right got it now before you hit save before you hit save let's get that on the left hand side of the screen oh so they can see it in real time yeah yeah so we'll show them in real time without a refresh so imagine now somebody just shot a reel and then they posted it right as soon as we hit save notice how the right side of the screen is not it's not going to refresh okay so hold on hold on let me just refresh right now because everything was white and blown out so now i'm i'm trying to scroll and it's not scrolling okay so i don't know if you guys can hear my sound of me trying to scroll but it's not doing it but once i hit save right over here and then i scroll it should scroll right yes yeah okay let's give it a try let's put it through that stress test so i'm gonna hit save it added it i see it on the left hand side it added that boom sango oh crap bro that's nice all right let me actually play it now love that when it works like that it's so satisfying it's crazy dude it is so clean bro it is so clean nice wow okay love leah is just super satisfying to watch it work that is beautiful yeah yo barcelona versus baron is going on that is a big boy match um i'm always i'm always team baron i'm i'm bayern all the way germany for me you know uh it's a german german league but uh i know go ahead i'm on the other side i'm on the other side yeah yeah yeah all right okay nice so i think with that said we just finished up with the firebase hey bayern is beating barcelona five to two let's go [ __ ] yo i would watch that match look at that uh dude let's watch let's watch soccer on this tv after that is nice okay nice okay so with that said guys we just finished up on the firebase database stuff so everything everything is done with that now so with that said we actually are ready for the deployment oh wow deploy
