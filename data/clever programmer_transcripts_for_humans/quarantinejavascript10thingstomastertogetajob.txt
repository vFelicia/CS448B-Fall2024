With timestamps:

00:00 - going guys many of you guys know who i
00:01 - am as the react coding guy on youtube so
00:04 - let's go just jump in quasi awesome so
00:08 - guys today we're going to be talking
00:09 - about the
00:10 - top 10 skills
00:13 - that you guys are going to need to
00:14 - master to land a job as a javascript
00:17 - developer so if you are ready let's jump
00:21 - right into it boom so
00:24 - hopefully let's just get started guys um
00:28 - you guys saw a bunch of our tests before
00:30 - we go live you know we like to just make
00:32 - sure we're prepped up but guys let's
00:33 - just jump straight into the content
00:35 - so quarantine javascript if you guys
00:37 - master these 10 skills that we're going
00:39 - to show you today
00:41 - and truly master them this can
00:43 - practically guarantee that you actually
00:46 - get a job as a developer
00:47 - sonny what are your thoughts on this 100
00:51 - like the skills that we're going to go
00:52 - through today guys like if you guys
00:54 - master these skills right and you
00:56 - practice them and you put in the time
00:57 - and effort
00:58 - we can promise you that these skills are
01:00 - going to actually get you from becoming
01:02 - like you can be a beginner at this point
01:04 - but work your way through this list and
01:06 - you will guaranteed
01:07 - land a job as a javascript developer
01:09 - whether it be a freelance or a permanent
01:11 - position
01:11 - you can be sure that if you've got these
01:13 - skills on your list you're gonna land
01:14 - something
01:16 - beautiful awesome so guys that's what it
01:19 - is
01:20 - now we are really excited to share all
01:22 - of this with you guys
01:23 - if you guys can do us a favor right
01:25 - before we jump in
01:27 - is if you are pumped about this content
01:29 - please just go
01:30 - make sure to smash that like button
01:33 - and why is that important why is that
01:35 - helpful for us sonny
01:37 - what was that why is it helpful why is
01:38 - that helpful because guys like if you
01:41 - smash the like button then more people
01:43 - are going to see this video so if you're
01:44 - finding value from it then imagine how
01:46 - many other people can get value from it
01:48 - so smashing that like button is going to
01:49 - send
01:50 - the youtube algorithm some crazy fire
01:52 - and then it's gonna get this
01:54 - video out to more and more people so
01:56 - that more of you guys
01:57 - can love the stuff and we can actually
01:58 - start producing more of it because we
02:00 - know you guys love it
02:00 - that's it right we don't even want a
02:02 - dollar from you all we want is if you
02:04 - can just smash that button
02:05 - the beautiful thing yeah it just really
02:07 - helps us you know we spend hours and
02:08 - hours preparing this content
02:10 - and so we just want more and more
02:12 - developers to be able to get
02:13 - value out of it especially during a time
02:16 - like this the crazy time that we're
02:17 - going through right now
02:19 - guys with that said i mean i see a lot
02:20 - of you guys are pumped we got nas here
02:22 - aaron is here you know a bunch of people
02:24 - who are excited to be here
02:26 - and thank you guys we appreciate you but
02:28 - we're gonna just make sure we give you
02:29 - the most value for your time and we're
02:31 - gonna jump straight into the content so
02:33 - here are the top 10 skills and we're
02:35 - going to start to list some of them
02:36 - out so the skills
02:40 - javascript developers actually need to
02:42 - know
02:43 - today guys and this is not only relevant
02:46 - for 2019
02:47 - but this is also relevant for 2020 right
02:50 - sunny
02:51 - exactly this is fresh guys like this is
02:54 - what we're gonna run through right now
02:55 - is applicable today so today it takes
02:58 - effect yeah
03:00 - yep um awesome so give me one second
03:03 - over here
03:05 - yep
03:16 - so guys if you guys are excited drop
03:18 - some comments let us know if you guys
03:20 - are enjoying these live sessions
03:22 - um while we get prepped for today's live
03:25 - talk um
03:28 - awesome you guys so we just got a
03:31 - awesome setup frankie over here is
03:33 - hooking me up with the mouse which is
03:35 - really helpful
03:36 - because i just want to make sure you
03:37 - guys get the best experience
03:40 - so guys all of these skills we're going
03:42 - to be talking about in today's video
03:43 - okay we're going to talk about
03:44 - why react is so important for all of you
03:47 - guys to actually pick up
03:48 - we're going to talk about why you know
03:51 - node.js we're going to talk about git
03:53 - redux typescript aws or it's
03:57 - basically the thing that we like to use
04:00 - instead of that which is
04:01 - firebase rest apis and many many more
04:04 - things
04:04 - this is just to give you an overview of
04:06 - what we're going to be talking about and
04:07 - this is
04:08 - literally being pulled from job listing
04:10 - so this is currently what people are
04:12 - looking for
04:13 - exactly exactly so some of what are some
04:17 - of these things we're going to be
04:18 - talking about sunny
04:19 - yeah so let's run through a quick list
04:21 - guys so the number one thing
04:23 - if you guys have been watching these
04:24 - videos you know right now react is on
04:26 - fire guys so the number one skill that
04:28 - we're going to be talking about is why
04:30 - you should know react
04:31 - what are the benefits of it and why it's
04:33 - going to guarantee
04:34 - you landing some kind of job inside this
04:37 - space
04:37 - so react.js is number one on our list
04:39 - and we will be covering a bunch around
04:41 - that so if you're excited drop some fire
04:43 - for that
04:43 - number two yeah number two is redux guys
04:47 - so we've actually used
04:48 - the react context api in some of the
04:50 - builds i think we used it inside of the
04:52 - amazon build that's
04:54 - the one we used it for um so the react
04:56 - context api is very similar to redux
04:59 - guys but redux is pretty much what
05:00 - you're going to be using inside of a
05:02 - professional working environment and
05:04 - it's
05:04 - essentially a data layer for your react
05:06 - app so we're going to talk about
05:08 - why you need to know that and the sort
05:09 - of perks and benefits of that
05:11 - and number three kazi what we got there
05:14 - we're going to be talking about git
05:15 - you guys and git is version control it
05:18 - is so important the time machine for
05:20 - developers
05:20 - so we're going to be going a little bit
05:22 - deeper into git it's going to be
05:24 - really valuable also on the chat side
05:26 - guys the nightbot
05:27 - chat moderator that i got is a little
05:29 - bit aggressive so i apologize because
05:31 - some of you guys are just genuinely
05:32 - excited
05:34 - and it's going to give you warnings so
05:35 - please don't be turned off by that i
05:37 - appreciate you
05:38 - here i'm gonna like make it a little
05:39 - less sensitive in the future but
05:41 - git is extremely valuable skill as a
05:44 - developer i think if you're a developer
05:45 - you kind of have to know this there's
05:47 - like
05:47 - very few developers i know that have
05:49 - jobs that don't have the skill of git
05:52 - all right what else we got sunny so we
05:54 - have
05:55 - firebase so this is actually a personal
05:57 - favorite of mine
05:58 - so when karsi showed that graph earlier
06:00 - we had aws
06:01 - inside that list firebase is actually
06:03 - something which isn't really spoken
06:05 - about as much as it
06:06 - should be but guys don't be fooled
06:08 - firebase is something which is going to
06:10 - be on a fire soon enough and there's not
06:12 - enough
06:13 - quality tutorials out there right now so
06:15 - all of the tutorials that we show
06:17 - really do take advantage of them because
06:18 - i wish i wish i wish i wish
06:20 - that there was more of those available
06:22 - especially when i was learning firebase
06:23 - and kazi like you've used firebase what
06:25 - do you think about firebase firebase is
06:27 - absolutely ridiculous one of the most
06:29 - powerful things you guys like
06:31 - you know what uh if i can actually pull
06:33 - that up right over here
06:35 - and like open up some of this stuff like
06:37 - guys we built an amazon clone a few days
06:40 - ago and this is all
06:42 - you know a bunch of this is we're
06:43 - actually using firebase for this and
06:45 - even hosting this
06:46 - we're using firebase uh yeah and so
06:49 - for a lot of the things that we built
06:51 - over the last few weeks even like the
06:53 - messenger
06:54 - facebook messenger clone that we built
06:55 - for you guys that's also using
06:58 - this messenger clone over here is also
07:01 - using firebase you guys
07:03 - and so pretty much everything you can
07:06 - build
07:07 - you can do it with this and it's yeah
07:08 - we're gonna again we're gonna go deeper
07:10 - into that but this is just the kind of
07:11 - road map for you guys what we're gonna
07:13 - be talking about today
07:15 - the next one on the list is node.js guys
07:18 - so
07:19 - all of us have been like sort of
07:20 - practicing and messing around with react
07:22 - react is the front sort of uh front end
07:25 - so like sort of client-side javascript
07:27 - that we call it and now you've got like
07:29 - back end code right so previously like
07:31 - in other languages you you would have
07:33 - used like java python in the back end
07:35 - but right now what you can actually do
07:36 - is you can actually use javascript
07:38 - across your front end
07:39 - and your back end and what we call this
07:41 - sort of back inside of javascript is
07:43 - node.js
07:44 - so that's why you're going to need to
07:45 - know that and you can also see you must
07:47 - like many of you guys if you've heard of
07:48 - the man stack i see a lot of people
07:50 - going crazy about the mern stack right
07:52 - now
07:53 - you're going to need to know node.js if
07:54 - you're interested in learning that
07:57 - yes exactly and another thing guys
07:59 - something that we're doing interactively
08:00 - this time we've never done before
08:03 - if you guys actually want to follow us
08:06 - live uh we actually gave you guys
08:09 - access to um all of these slides
08:12 - so you guys can actually see what slides
08:14 - we're on right now
08:16 - and follow along if you want to do that
08:18 - or if you just maybe want access to all
08:20 - the materials and the resources so you
08:21 - can look at it later
08:23 - in the description below is the link to
08:25 - the live slides
08:26 - click that and it'll just open up you
08:28 - don't have to register you don't have to
08:29 - give us your email none of that just
08:31 - click it
08:32 - and all the slides will be available to
08:33 - you and you will be able to see sunny
08:35 - and i
08:35 - in real time talking about these slides
08:38 - and changing it so go ahead
08:39 - and um check the link in description to
08:43 - to to click that and follow along
08:46 - exactly and that these are all the
08:47 - slides that you guys are seeing on the
08:49 - screen and it will be in real time sort
08:50 - of updating as we go through it
08:52 - yep awesome so did we touch on command
08:55 - line sunny
08:57 - we didn't uh the command line is
08:58 - actually one of your favorite areas
09:00 - quasi
09:00 - oh man go ahead i love the command line
09:02 - command line guys i mean it's super
09:04 - super important for developers to learn
09:06 - like it'll speed up and juice up your
09:08 - workflow
09:09 - and i think it's important for all
09:11 - developers to know how this works so
09:13 - whether it's like
09:14 - you trying to deploy your app online
09:16 - through firebase or heroku
09:18 - you're going to need to know command
09:19 - line whether you want to use git
09:22 - version control github all of that
09:24 - you're going to need to learn the
09:24 - command line
09:25 - how your pathing works and all your
09:28 - files and folders and structure works
09:30 - uh no running and skipping around this
09:32 - you might try to kind of run around it
09:34 - with like
09:34 - using a gui or something but all of
09:36 - those are band-aids this is something
09:38 - you're going to have to learn
09:39 - exactly exactly it's definitely one of
09:41 - those skills it could be very scary in
09:43 - the beginning guys
09:44 - but uh it's worth learning cool
09:48 - so rest apis are going to be something
09:49 - important we're going to go deep into
09:50 - that in this video we're going to talk
09:52 - about flexbox and
09:53 - how flexbox kind of allows you to like
09:56 - if i can show you guys our netflix clone
09:59 - that we built over here you guys can see
10:01 - how we used flexbox
10:03 - to make all of this stuff beautiful
10:05 - right and
10:06 - you guys can even check out this app but
10:08 - this is
10:09 - basically how we use flexbox so flexbox
10:12 - is super important we're going to dive
10:13 - deep into that
10:14 - and then you know talk to us a little
10:16 - bit about this last one or
10:18 - the ninth one here sonny uh yeah so the
10:20 - ninth one is graphql so this is actually
10:23 - quite a hot
10:23 - um sort of a hot query language right
10:26 - now guys what this does is essentially
10:28 - it sits in front of your
10:29 - api so it actually goes alongside with
10:31 - that rest api's
10:32 - number seven point and basically what
10:34 - it's going to be doing is it's an open
10:35 - source data query language
10:37 - and it basically guys allows the front
10:40 - end so all of your phones the websites
10:42 - that you guys are coding
10:43 - it allows it to ask in a very simple and
10:46 - easy way
10:47 - for data from your back end so it gets
10:49 - rid of all the sort of complexity
10:51 - that we used to face as front-end
10:53 - developers um by introducing graphql in
10:56 - between the sort of
10:57 - front-end and back-end so we're going to
10:58 - go into that in a bit of depth and show
11:00 - you why
11:01 - a lot of companies are actually going
11:02 - crazy about graphql right now
11:04 - yeah it's absolutely insanity uh and
11:06 - then
11:07 - 10 ssr server side rendering so sunny
11:10 - speak to us
11:11 - on this a little bit as well as why you
11:13 - decided to put this
11:15 - in this list yeah so server side
11:18 - rendering is something that was
11:19 - relatively
11:20 - newly introduced to me about two three
11:22 - years ago and
11:23 - what it basically essentially allows you
11:25 - to do guys is when a web page loads
11:28 - typically we're used to it loading all
11:29 - on the client side right so as soon as
11:31 - you go on the web page it loads on the
11:32 - client side
11:33 - but without realizing a lot of websites
11:35 - are doing something called server-side
11:36 - rendering and what happens is
11:38 - all of the page is actually loaded on a
11:41 - server
11:41 - before it's sent to you so all of the
11:43 - heavy lifting is done on side
11:45 - on a server outside on for example a
11:47 - google server if you're using firebase
11:49 - or an amazon server if using aws and
11:52 - when it delivers it to you
11:53 - it's so much faster right yeah so
11:56 - especially when you're using something
11:57 - like react which is known as a single
11:59 - page app which is basically a little
12:00 - bundled app
12:02 - it basically all the hard work is done
12:04 - in on an offsite server
12:05 - and then once it gets delivered to you
12:07 - the speed the time to actually be able
12:09 - to
12:09 - interact with the web page is so so fast
12:13 - when you do server side rendering
12:14 - um but there is some things to consider
12:16 - here um but it's definitely something
12:18 - which is being used in a lot of jobs
12:20 - right now
12:21 - it's massive yeah yep now guys we're
12:23 - gonna go on to the first
12:25 - most important skill which is actually
12:27 - we think
12:28 - react so one of the most important
12:30 - skills to learn for javascript
12:32 - is react and kind of let's start talking
12:35 - about this so sunny why don't you start
12:37 - off with this
12:38 - yeah so for many of you guys who are new
12:40 - to react
12:41 - essentially we have three fundamentals
12:43 - in web development we have html
12:45 - css and javascript right once you know
12:47 - these three things
12:49 - you're going to run into situations
12:50 - where you pretty much are going to have
12:51 - to do the same things over and over
12:53 - again but the guys over at facebook
12:55 - thought let's do this smarter let's do
12:57 - this faster let's introduce a better way
13:00 - of doing this right so they built a
13:01 - library called
13:02 - react now react is massive is hugely
13:04 - popular
13:05 - it uses something called the virtual dom
13:08 - so many of us who have dived dove into
13:11 - web development before
13:13 - know about the dom right and the dom is
13:15 - basically where all of the elements on
13:17 - the web page live
13:18 - right react uses something called the
13:20 - virtual dom so it basically creates a
13:22 - clone
13:23 - of the the dom and it basically just
13:26 - this is the really clever part about
13:27 - react
13:28 - it just re-renders what needs to be
13:30 - re-rendered on the screen
13:32 - right so imagine you have a list and you
13:34 - add to that list
13:35 - it's only going to re-render because
13:37 - what it does it checks its virtual dom
13:39 - it checks what you've added to that to
13:41 - that list and then it does a little
13:43 - comparison and then it basically gets
13:45 - everything
13:46 - um rendered in a really clean and and
13:49 - easy way right
13:50 - yep so which is why like if i actually
13:53 - write a comment over here
13:54 - hey this is an awesome post or something
13:57 - like that right
13:58 - and i post it and i hit enter what
14:00 - happens is it doesn't refresh any other
14:02 - comments on this page
14:04 - it doesn't refresh any of the other
14:07 - posts i have made on instagram
14:09 - if i hit enter literally it only just
14:12 - refreshes
14:12 - that page also or that comment now
14:15 - another cool thing that happened is the
14:16 - page never refreshed
14:17 - so like i've never had this moment where
14:20 - like the whole page refreshes
14:21 - all real time so if i type in another
14:23 - comment and hit enter
14:25 - you can see yeah only that thing loads
14:27 - and then sends it and boom
14:29 - done nothing else changed this is why
14:32 - instagram is such a phenomenal user
14:33 - experience and why
14:34 - billions of people download and use
14:36 - instagram and use facebook
14:39 - because it's using it's just an amazing
14:41 - experience for the user it'd be really
14:43 - frustrating if on your phone every
14:44 - single time you commented or something
14:46 - things refreshed
14:47 - very awful experience react can actually
14:50 - help you with those types of things and
14:52 - um
14:53 - all of the apps that we're showing you
14:54 - guys we actually built them
14:56 - using react yep and just to point out if
15:00 - we go back to that netflix app so
15:01 - there's a really important thing inside
15:03 - of react guys and that's reusable
15:05 - components
15:06 - so what you can actually do in react is
15:08 - you can write one component
15:09 - and reuse it several times by passing in
15:12 - different
15:12 - properties and we call that props in
15:14 - react right yeah so in this case you've
15:16 - got like a carousel that causes sort of
15:18 - hovering over right
15:19 - each one of those things is actually
15:20 - just one piece of code we just reused
15:22 - that code several times and we passed in
15:24 - different properties
15:25 - yeah and then you get this really nice
15:27 - code base which is reusable it's easy to
15:29 - maintain
15:30 - and it's going to allow you to actually
15:32 - grow and scale at a much faster rate
15:35 - which is why a lot of companies use it a
15:37 - lot of companies use it and it's similar
15:39 - to kind of like the jinja templating
15:41 - engine in
15:42 - django and python and if you guys have
15:45 - experience with
15:46 - shopify you guys know that language
15:48 - called liquid right
15:50 - um do you know about liquid sunny yeah i
15:53 - think we actually use liquid inside of
15:55 - uh i've used it inside of shopify
15:57 - and uh where we host the course at the
15:58 - moment yeah and so like
16:00 - liquid has that like a little templating
16:02 - type of thing so when i'm using react it
16:04 - kind of reminds me of that where i'm
16:06 - building these components and i get to
16:08 - reuse like with that snippet of code
16:11 - that's how i like to kind of think about
16:12 - it
16:13 - yeah that's a nice way of playing it but
16:15 - it's much more powerful than that guys
16:16 - because
16:17 - because of the virtual dom concept if
16:20 - you have different components so for
16:21 - example
16:22 - let's say we have this component here
16:23 - right so what's cool about a react app
16:25 - is let's say
16:26 - the header loads and let's say this
16:29 - banner
16:30 - loads but let's say these haven't loaded
16:32 - yet because it has to pull all this data
16:34 - dynamically what's cool about a react
16:36 - app is
16:37 - the app will actually start running even
16:39 - without this stuff being loaded there
16:41 - it'll start running with all of this
16:42 - because this is a different component
16:44 - so it won't wait for it to run and then
16:46 - as you're scrolling down
16:48 - boom this is being loaded on the fly in
16:50 - real time
16:51 - which is why you get that slick fast
16:54 - experience
16:55 - exactly so it actually has something
16:57 - called lazy loading outs
16:58 - out of the box which is what cars you
17:00 - mentioned so it will only load the
17:01 - components it needs to load
17:03 - in a really really efficient way and
17:05 - there's many techniques in getting this
17:07 - working
17:07 - correctly um with a lot of the new sort
17:10 - of react stuff so functional components
17:12 - all of the sort of react hooks
17:13 - this becomes quite a simple thing to
17:15 - actually get working and up and running
17:18 - yep so that's and then you know here's
17:20 - an another example
17:21 - of how we use this so let's go over here
17:24 - if we can open this up
17:26 - so you guys can see this product is just
17:28 - a component
17:30 - and this product card right over here
17:32 - and we just kept reusing this component
17:35 - in
17:35 - all of these different things that we
17:36 - built for you guys in this amazon by the
17:38 - way it's the amazon clone this is not
17:40 - the actual amazon website guys so what
17:42 - we built in the tutorial a few days ago
17:45 - yeah awesome so this is the power of
17:49 - this virtual
17:50 - dom that comes with react react is also
17:53 - very seo friendly and reusable
17:55 - components as what sunny was really
17:56 - highlighting
17:59 - and then i'm sure the debugging and
18:01 - testing and
18:02 - data flow is easier i don't know if you
18:03 - want to speak more to these points i
18:05 - want to kind of like
18:06 - touch on a little on the cons right now
18:08 - yeah
18:09 - uh one thing to mention before we touch
18:11 - on the cons so it is a really really
18:13 - nice to debug guys so a lot of us who
18:15 - have done web development before
18:16 - do know about the sort of pain and the
18:18 - suffering that we have when you can't
18:20 - figure out a bug
18:21 - react has a number of tools so they have
18:23 - a react profiler they have a react
18:25 - debugger
18:26 - there's a bunch of things that you can
18:27 - actually use as chrome extensions and
18:29 - that's going to make life so much easier
18:30 - for you when you're actually
18:32 - debugging and checking things out so you
18:33 - can see cars is pulling out right now
18:35 - you have a profiler and you have a
18:36 - components tab inside of
18:38 - a chrome and what that's going to do is
18:40 - actually breaks down and shows you
18:42 - all of the different components and also
18:44 - it even shows you the state and the
18:46 - props
18:46 - of that component at that given time so
18:48 - it's a really really nice way how to
18:50 - like you can d
18:51 - uh yeah dive deeply into sort of the
18:54 - component tree and see what's actually
18:55 - going on with your app
18:57 - nice i love that amazing really really
19:00 - nice
19:02 - cool so yeah all right any any
19:05 - other points you want to touch on here
19:08 - yeah i think
19:09 - actually i i gotta admit this this is a
19:10 - really nice visual but guys don't be
19:12 - scared by where it says jsx as a barrier
19:14 - jsx is actually something which is i
19:16 - wouldn't actually consider it a con
19:18 - i'd say it's really a power up of actual
19:21 - normal web development because it's kind
19:22 - of
19:23 - it merges html and javascript together
19:26 - and it gives you this really nice
19:27 - functionality where you can actually
19:28 - have dynamic javascript
19:30 - running inside of your html so i
19:32 - wouldn't actually take it as a con
19:33 - i would actually look at that as
19:34 - something which is actually a benefit of
19:36 - using react
19:37 - yeah i would see it as a benefit too
19:38 - like yeah it's gonna maybe like in this
19:40 - first second you might be confused right
19:42 - you're like oh my god class i i'd have
19:44 - to say class name
19:46 - like you know there might be like one or
19:47 - two things that are different
19:49 - but once you pick it up you're like oh
19:51 - my god this is so nice to be able to
19:53 - write actual
19:54 - code uh kind of like how you know when
19:57 - when i'm doing django
19:58 - i like being able to actually write
20:00 - django code right inside of my
20:02 - app and then when i was just using html
20:04 - css i'm like why can't i do that
20:06 - so like that alone made me want to go
20:07 - back to starting using django
20:09 - but that's super nice being able to do
20:11 - that in one place
20:12 - yeah exactly let's touch base on
20:14 - percentage of users who actually love
20:16 - the framework and use it again so here
20:18 - are a bunch of different frameworks we
20:19 - have here sunny so like
20:21 - why are the react users they're like
20:24 - mostly coming back to use this versus
20:26 - you know
20:27 - say backbone or you know angular
20:30 - so the reason why um is because react
20:34 - is so react is different to a lot of
20:35 - these different um
20:37 - sort of frameworks you can call them
20:38 - because react's actually not a framework
20:40 - guys it's a library
20:41 - and that means it's very lightweight so
20:44 - the entry into actually using react
20:46 - is so easy guys it's really light to
20:48 - pick up on rep because you don't need to
20:49 - learn everything at once
20:51 - whereas if you look at something like
20:52 - angular you need it's a framework you
20:55 - have to do
20:56 - everything according to how angular is
20:58 - built
20:59 - right in order to get an angular angular
21:01 - app right up and running
21:02 - it's actually quite a sort of
21:03 - intimidating process especially if
21:05 - you're new to it
21:06 - but if you're in react what you can
21:08 - actually do is um
21:09 - we actually got some slides um that i
21:12 - post over on instagram where you can
21:13 - actually just shows you how simple it is
21:14 - to actually get a react
21:16 - up and running react up and running so
21:17 - if we go ahead and look
21:19 - at this guys this is how you would get a
21:21 - react app
21:22 - up and running you literally run one
21:24 - command so here you can see it says mpx
21:26 - create react app
21:27 - you literally see the internet and then
21:29 - you just do npm start
21:30 - and that's it guys your app's up and
21:32 - running and it sets everything up for
21:34 - you
21:34 - and then after that you just need to
21:36 - pick up and choose and and learn what
21:37 - you need to learn at that point
21:39 - so it's very very that sort of entry
21:41 - into react is so nice it's really nice
21:43 - to code
21:44 - in it's really fun to go in it's
21:45 - actually the funnest one and i've coded
21:46 - in a bunch of these guys and check out
21:48 - the companies that are actually using
21:50 - react guys so that's actually
21:51 - huge uh that's this is a nice slide so
21:54 - like
21:55 - why react because many companies use it
21:57 - right and the job opportunities and the
21:59 - payoffs of salaries are really high so
22:01 - uber airbnb udemy khan academy
22:04 - twitter facebook netflix instagram all
22:07 - of these are actually using it so i
22:09 - think that's another
22:10 - thing that tells i think if i don't know
22:12 - much about programming it's helpful for
22:14 - me to know what companies are using it
22:16 - and it gives me insight into what my
22:18 - jobs potentially could look like right
22:20 - like
22:20 - a front-end developer um that works at
22:24 - netflix is actually making three hundred
22:25 - and six thousand dollars a year i don't
22:27 - know if you knew that
22:28 - yeah that's insane i didn't actually
22:30 - know that yeah
22:31 - literally i i looked up their salary and
22:33 - uh
22:34 - average front-end developer in on
22:37 - netflix that's actually their
22:38 - yearly salary damn and i think it's
22:41 - netflix they actually have
22:42 - a lot of their work as remote right now
22:44 - a lot of these companies have a lot of
22:46 - remote developers
22:47 - with them so that's that's even more
22:49 - insane that they're getting paid that
22:50 - here's a good question somebody asked
22:52 - just a little bit ago like
22:54 - hey is this for i can't find it right
22:56 - now but
22:57 - they asked is this for beginners oh yeah
22:58 - there we go so it's react
23:00 - also something that beginners can use
23:03 - very good question guys and i actually
23:05 - have a slide for that so
23:06 - in order to get started with react all
23:08 - you need to know guys is a basic
23:10 - understanding of html css and javascript
23:14 - right so you just need a basic
23:15 - understanding of those three things so
23:16 - yes it is for beginners
23:18 - and the one thing i would say is don't
23:19 - be afraid of react guys honestly it's
23:21 - one of those things where
23:22 - i always hear a lot of people saying oh
23:23 - i think i need to learn know a bit more
23:25 - about web development before i dive in
23:27 - i would honestly say flip it on its head
23:29 - and just go for it give it a go if
23:30 - you've done a little bit of web
23:31 - development before honestly just go
23:33 - ahead and give it a go you just need a
23:34 - basic
23:34 - understanding of html css and javascript
23:37 - and the reason why we have
23:38 - javascript es6 here is because a lot of
23:41 - the new features in react which make it
23:43 - so fun to code in are written using es6
23:47 - es6 or features like arrow functions and
23:49 - stuff like that so
23:50 - uh the the bottom requirements are very
23:52 - simple installing node.js is literally
23:55 - clicking
23:55 - and click and play like it's very easy
23:57 - and you just need an internet connection
23:58 - that's it
23:59 - just start like honestly it's a beginner
24:01 - friendly thing you can go ahead and get
24:03 - started very easily
24:04 - that's right so just get started with
24:06 - that now let's move on to
24:08 - something so this i think i touch base
24:10 - on already i don't need to go too much
24:11 - into it but like here's tesla using
24:13 - react
24:14 - reddit and all these big companies so
24:16 - let's move forward now
24:18 - now i guess let's get into i think we
24:20 - kind of did a good job
24:22 - with how much we went into detail about
24:25 - react
24:25 - and why people should be using it i
24:28 - think let's
24:29 - now start diving into git and why people
24:32 - should be using
24:33 - git so let's go down here
24:37 - so sunny you want to talk about this
24:39 - yeah so we have three main things here
24:41 - guys and i've just broken it down
24:42 - for a beginner to understand very easily
24:44 - number one it's a time machine right and
24:47 - what i mean by that guys
24:48 - you push some code in there and then you
24:50 - have this sort of time machine of
24:52 - backups right so you
24:53 - if something goes wrong and let's say
24:55 - everything you you
24:56 - you can like you add features at this
24:58 - time like in this timeline you just add
25:00 - different features so
25:01 - let's say in the beginning cause he just
25:02 - built the login feature then he built
25:04 - the
25:05 - sort of um the post post feature
25:09 - but like what you would do is you would
25:11 - actually add in your features at
25:12 - different points and then what would
25:14 - happen
25:15 - is you would oh okay so imagine we had
25:18 - instagram right now
25:19 - right you would have a you would commit
25:22 - to so you would commit your different
25:24 - features to this timeline
25:26 - so for example we would have the ability
25:28 - to post on instagram we'd have the
25:30 - ability to comment on instagram and
25:31 - every time you push that code
25:33 - you basically create like a checkpoint
25:35 - right and if anything goes wrong guys
25:37 - you can actually go ahead and rewind to
25:40 - that checkpoint
25:41 - so this is really important because when
25:43 - you have a lot of money
25:45 - being put behind apps and you've got a
25:47 - lot of like customers
25:48 - that are using your apps you need very
25:51 - fast and robust ways of rolling back
25:53 - code
25:54 - um to make sure that if anything goes
25:55 - wrong you can put out that fire and
25:57 - rewind
25:58 - back in time so the first thing is it's
26:00 - a time machine uh the second thing is
26:02 - it's something called a code
26:03 - repo so a code repository and this
26:05 - basically just means it holds your code
26:07 - and it holds it and it gives you a bunch
26:09 - of features so it allows you to
26:11 - basically have things like
26:12 - branches it allows you to be able to
26:15 - work
26:16 - on the same code base no matter how many
26:19 - developers
26:20 - you have in a team right so that touches
26:23 - on the third point it's how a team of
26:24 - coders
26:25 - work together so amanov said a really
26:27 - nice thing you can say git is a doctor
26:29 - strange in the development world
26:30 - i like that nice um so guys yeah
26:34 - git is gonna be is what allows a team of
26:36 - coders to work together because imagine
26:39 - you had me and you had kazi working on a
26:41 - feature right two different features
26:43 - and let's say i went ahead and built the
26:46 - comments feature and qazi went ahead and
26:48 - built the
26:49 - posting a picture feature on instagram
26:51 - let's say
26:52 - our code clashes right let's say it
26:55 - clashes at some point
26:57 - git is again allows you to sort of
26:59 - resolve those clashes
27:01 - and move forward and then make another
27:03 - checkpoint right but without using git
27:05 - how do you do that
27:07 - you see how you have this sort of
27:08 - problem you can't do that oh that's a
27:10 - great
27:11 - another great thing right oh wow we got
27:13 - super chat thank you for that so me
27:14 - really really appreciate that um another
27:17 - great thing about
27:18 - react guys or sorry another great thing
27:21 - about git is
27:22 - what exactly to sunny's point what i
27:24 - will add on to that is if you're doing
27:25 - collaboration
27:26 - let's say sunny and i wanted to build
27:28 - two different features okay
27:30 - so sunny wanted to build the ability to
27:32 - comment
27:33 - and i wanted to build the ability to
27:34 - post so
27:36 - at the same time we can to be working on
27:40 - separate features sunny can actually be
27:41 - working on this comment feature
27:44 - and i can actually be working on the
27:46 - post feature qazi right here
27:49 - yeah right and then essentially what we
27:51 - could do is
27:52 - once our like he completes his comment
27:56 - functionality i complete my
27:57 - post functionality we could actually
28:00 - merge that into one place
28:02 - like to the master branch or whatever
28:04 - you want to call it
28:05 - and now we have both of those features
28:08 - in the main app
28:09 - the app that the public world and
28:11 - everybody's using
28:13 - exactly and guys notice how we would be
28:16 - working on separate features
28:17 - but we both would get access to the
28:19 - login features
28:20 - right so because we're essentially like
28:23 - carrying on from the same point in the
28:24 - timeline so
28:25 - we you it allows us to both work on
28:28 - features at the same time
28:29 - and then come back together and push the
28:31 - code forward so
28:32 - really really powerful thing which which
28:34 - every every single
28:36 - job that you enter will need you to know
28:39 - they will need you to know how to use
28:40 - get
28:41 - yeah very highly skill guys definitely
28:45 - all right let's move to the next one so
28:47 - let's talk a bit about
28:49 - redux now guys with redux you know
28:52 - uh it's this is a really important skill
28:54 - and in if you guys didn't go
28:56 - and build this clone that we built with
28:58 - amazon
28:59 - we're actually using redux here or a
29:02 - basically a
29:02 - form of redux we're using something
29:04 - called context api
29:06 - and what sunny said is like hey if you
29:08 - want to learn about redux
29:10 - that would be step one like use learn
29:12 - context apis but here's what it allows
29:14 - you to do right at the top right
29:16 - can you guys see where it says basket i
29:18 - mean it's probably it's a little bit
29:20 - hard for you guys to see so i'll move
29:21 - that
29:22 - here but like you guys can see where it
29:24 - says basket now if i go and click add to
29:26 - basket boom you can see
29:28 - in real time it just added that and i
29:30 - can hit this add to basket
29:32 - now i can actually go to the basket and
29:34 - you can see it's actually keeping track
29:36 - of the state
29:37 - currently both of these products are
29:38 - added in real time
29:40 - now if i remove them they get changed
29:43 - without the page being refreshed guys
29:45 - and look the subtotal changed as well
29:47 - now if i remove this
29:48 - boom everything changed dynamically
29:51 - no page was refreshed and it's
29:54 - all extremely fast so it's something
29:57 - that allows you to manage state
29:58 - state and for react developers and
30:00 - javascript developers and if you want to
30:02 - do anything with e-commerce
30:04 - this is an extremely important skill to
30:07 - learn and highly
30:08 - highly paid and so
30:11 - you know that's a little bit of
30:12 - demonstration of redux but sunny why
30:15 - don't you go ahead and like tell us
30:16 - about
30:17 - about it more yeah so that's a really
30:19 - good example of
30:20 - if you guys want to try that out we have
30:22 - a live stream which covers all of that
30:23 - so you can go and build that
30:24 - but redux essentially guys it just it
30:27 - sits alongside react right and it
30:28 - basically imagine you have a beautiful
30:30 - react app
30:31 - it's just like the data layer right
30:33 - that's how i like to always sort of
30:34 - break it down it's a data layer
30:36 - and that data layer allows you to do the
30:38 - things like we saw right it allows you
30:40 - to add
30:40 - like things like uh items to a basket it
30:43 - allows you to keep track of who's signed
30:45 - into your app
30:46 - it allows you to do a bunch of things
30:48 - like that right now
30:49 - the one thing that i really want to
30:52 - emphasize here
30:53 - is that redux or the react context api
30:56 - or whatever you decide to learn they
30:58 - follow the same pattern
31:00 - right they follow the same pattern and
31:01 - that is essentially what that what we
31:03 - have on the right here so we have this
31:05 - diagram which shows
31:06 - um so let's imagine the view that kazi
31:08 - showed you was that
31:10 - of the amazon clone that is the view so
31:12 - you see that on the bottom on the right
31:14 - we have the view
31:15 - right and then we basically have these
31:17 - three things we have actions reducers
31:19 - and stores right
31:20 - stores is just where the data sits
31:22 - actions is how we sort of
31:24 - um so let's say we click the add to
31:26 - basket uh
31:27 - add to basketball on the page okay so
31:29 - what is view so when you say view what
31:31 - is view
31:33 - so this right now this entire web page
31:35 - is the view let's imagine that this
31:36 - entire web page is the view right
31:38 - now when i uh cause he goes ahead and
31:40 - this is the this is
31:41 - when we say view guys like this is the
31:44 - side that the
31:45 - user gets to see this is the visual
31:47 - things that the user can click on your
31:48 - website and see you know
31:50 - but okay go ahead what's next yeah so
31:53 - that exactly so that's going to be the
31:55 - view and now when kazi goes ahead and
31:57 - clicks the add to basket
31:58 - he's going to actually when the minute
32:00 - he clicks that he's going to be
32:02 - pushing or dispatching an action right
32:05 - so imagine like he's got a gun
32:06 - and as soon as he presses that to basket
32:08 - he fires off an action right
32:10 - so it fires off an action and it
32:12 - dispatches an action right
32:13 - and that's the action right so the
32:16 - action here would be something like add
32:17 - to basket
32:18 - so let's actually write that down
32:20 - visually here so this will be the add
32:22 - to basket or add to cart action and this
32:26 - action will carry certain pieces of
32:27 - information so uh attached to it will be
32:30 - the
32:30 - title of the book so in this case it
32:32 - will be a title
32:34 - which will be the i'll just say tls
32:38 - which stands for
32:39 - the lean startup okay yeah and then it
32:42 - would have something like an id
32:44 - it would hide id
32:47 - and then it would have the price as well
32:49 - so the price in this case might be
32:51 - what 1196 right exactly
32:56 - cool yeah and uh keep going
33:00 - yeah so imagine guys you would fire off
33:02 - an action with like this information
33:04 - attached to it right
33:05 - so you would push that off and
33:08 - essentially
33:08 - what we need to do at that point is that
33:10 - something needs to to sort of
33:12 - listen to that action being fired off
33:14 - right so that's where we have
33:16 - reducers right so all a reducer is is it
33:19 - just listens
33:20 - it sits there and it just listens that's
33:22 - the simple way of putting it right so
33:24 - reducer just sit there and listen and
33:25 - basically
33:26 - the reducer if it picks up on that
33:28 - action so let's imagine we've coded up
33:30 - some um some logic that is basically
33:32 - going to go ahead and say if you get an
33:33 - ad to basket
33:35 - action thrown your way then what i want
33:37 - you to do is go ahead
33:39 - and push that item so all of those that
33:41 - tie tool the id the price
33:43 - push that inside of the store inside of
33:46 - your basket for example
33:48 - absolutely there's this like empty
33:50 - basket here and
33:52 - this dispatch once it pulls information
33:54 - like boom it'll send it to this
33:56 - empty basket and it'll store it in there
33:58 - exactly that's what the redu
34:00 - does exactly the reduce is like the
34:02 - middle man it just goes ahead grabs the
34:04 - action
34:05 - and then like sort of says okay this is
34:06 - what i need to do with it and then it
34:08 - puts it in the store in this in whatever
34:10 - way we decide
34:11 - to sort of code that up inside the
34:12 - reducer yeah
34:14 - and then what happens is guys and then
34:16 - it kind of sort of the sort of circle
34:18 - where it all
34:18 - sort of makes sense is if we go ahead
34:20 - and go back to the slides
34:22 - so you can see that was the sort of life
34:24 - cycle of action reducer
34:26 - store right but then you can see the
34:29 - store is what we connect to the view
34:31 - right so the store we connect to the
34:32 - view so that so what happens is then is
34:34 - that if we were then going ahead and
34:36 - changing or sort of adding uh something
34:39 - to the basket
34:40 - because it's attached to the view the
34:42 - view gets re-rendered
34:44 - in the special react way right
34:47 - so when i do add to basket few things
34:49 - happen it fires off an event
34:51 - right then the reducer is listening to
34:55 - it so then it actually puts that
34:57 - information in the basket
34:59 - yep and then because it's connected to
35:01 - the view
35:02 - uh then that's why live
35:05 - it actually shows up right there and the
35:08 - basket now says
35:09 - one or you know if i click it multiple
35:11 - times it says whatever it says
35:13 - there are three exactly
35:17 - awesome so guys that pattern
35:21 - essentially the one that we just ran
35:22 - through the what i like to do is i like
35:25 - to sort of show people
35:26 - that i i sort of send people to using
35:28 - the react context api first
35:30 - because it uses that same pattern but
35:32 - it's just very lightweight right it's
35:33 - very easy to actually get started with
35:35 - that
35:36 - and then once you know that pattern then
35:38 - it's very simple to go ahead and
35:42 - implement it with redux redux has a bit
35:44 - more sort of setup behind it but once
35:46 - you sort of get things going
35:47 - it's very nice and it's very it's going
35:49 - to be something which is
35:50 - massively valuable i can't explain to
35:52 - you how valuable redux is going to be
35:54 - for you guys
35:55 - yeah yeah so learn uh the steps
35:58 - that practical steps for you guys to
36:00 - actually learn this guys is
36:02 - learn react context api first and then
36:05 - all the concepts you pick up from there
36:07 - boom you can apply it and if i
36:09 - if we want to make it even more
36:10 - practical literally follow and build the
36:12 - amazon clone that we built on this
36:14 - channel clever programmer
36:15 - where sunny shows you how to build this
36:18 - and then you'll be good to go yeah
36:21 - exactly we just actually got a super
36:22 - donation oh hey
36:24 - oh another one yeah yeah by nissag
36:27 - gandhi wow i'm actually not seeing any
36:29 - new messages come in the last message i
36:31 - see
36:31 - is like i think git versus git lab
36:34 - versus github so i think i'm kind of
36:36 - behind on the i don't know why i don't
36:37 - see the new comments but yeah if you
36:38 - want to shout out the comments that'd be
36:40 - awesome yeah um so guys let's move on to
36:43 - the next thing which is like here are
36:45 - the biggest companies that are by the
36:46 - way thank you for the super donation
36:48 - really appreciate it
36:49 - here are the biggest companies that are
36:50 - using redux guys
36:52 - so um you know airbnb uses redux
36:57 - amazon uses redux netflix ebay spotify
37:01 - facebook twitter google uber so it kind
37:04 - of gives you an
37:04 - insight into why this technology is so
37:08 - uh important because if it wasn't these
37:10 - guys wouldn't be using it
37:12 - exactly and guys if these companies are
37:15 - using it then and like we said earlier
37:17 - netflix is paying up to 300k like 300
37:20 - 000
37:21 - on a salary guys so if netflix are
37:23 - paying that you can be guaranteed that
37:25 - all of these companies are pretty much
37:26 - paying
37:26 - massive salaries for that and also just
37:29 - to mention i've worked in a bunch of
37:30 - different companies and every single one
37:32 - i've worked in
37:33 - has used redux so just if you don't
37:36 - believe that guys take it from my
37:37 - take it from me that it's literally is
37:39 - something which you massively
37:41 - need um to know yeah yep
37:44 - so that's huge okay so
37:48 - somebody from our facebook said um great
37:51 - what is the difference between
37:52 - basic and pro and i i think what they're
37:55 - talking about
37:56 - actually is the course so let's see if i
38:00 - can actually pull that
38:01 - up uh over here so guys
38:04 - this is our course called profit with
38:07 - javascript and uh in this course we
38:10 - actually show you how to build
38:12 - all of these things and actually make an
38:14 - income with it but
38:15 - uh but the the main difference right now
38:19 - is that
38:19 - between pro and basic is that you'll
38:22 - save
38:23 - 300 that's the main difference as of now
38:26 - so if you got the yearly one you'll save
38:28 - more because it's annual with that said
38:30 - let's just jump straight back into the
38:32 - content because um we want to make sure
38:34 - we give you guys
38:35 - a lot of value nice let's carry on
38:39 - let's move forward
38:43 - yeah guys i love firebase and if you
38:45 - haven't seen
38:46 - a lot of the um sort of tutorials that
38:48 - we've gone through be sure to go check
38:50 - them out because we use firebase so much
38:52 - in those tutorials for pretty much
38:53 - everything we're using firebase all of
38:55 - these projects yeah
38:56 - the reason why they're all hosted guys
38:58 - is actually it's all on firebase
39:00 - so really really nice stuff like and
39:02 - guys so firebase is essentially for
39:04 - those of you guys don't know
39:05 - it is a suite of tools provided by
39:08 - google and it basically allows you
39:10 - that what they did is right they took
39:12 - all of the sort of traditional headaches
39:14 - and they sort of gave us a bunch of
39:16 - tools which solve a lot of issues for us
39:18 - so
39:19 - let's go through some of them so we have
39:20 - the real-time database
39:22 - right so we have the real-time database
39:24 - we have authentication
39:25 - yeah so imagine aws guys but it's very
39:29 - user-friendly aws so me and qazi have
39:31 - used aws
39:33 - kazi how what's the sort of entry level
39:35 - to aws
39:36 - uh you need to be like an i.t master to
39:39 - like
39:40 - just pass through basically like aws is
39:43 - is
39:43 - actually really difficult to pick up
39:46 - it's um
39:47 - you have to kind of go through a lot of
39:48 - hoops and so as a developer you really
39:50 - don't want to be learning
39:51 - uh so much about ip addresses and
39:55 - creating security groups and like is my
39:58 - server in
39:58 - oregon or ohio you just want to make
40:01 - your app
40:02 - and put it online and that's all you
40:04 - really care about right and give access
40:06 - to people
40:07 - firebase takes all of that out so
40:10 - firebase to me is just like
40:11 - the definition of ease and simplicity
40:15 - exactly exactly that and that's the
40:17 - perfect way to put it it's just ease and
40:19 - simplicity guys
40:20 - right so it's going to give us a
40:21 - database and not only just a normal
40:23 - database it's a real-time database
40:25 - so if you guys are wondering what the
40:26 - real time is standing for when we had
40:28 - like the five uh
40:29 - the sort of facebook messenger clone we
40:32 - didn't have to
40:33 - implement anything special to get that
40:36 - real-time functionality so the messages
40:37 - popping in as they came in
40:39 - it was out of the box and it's in it
40:41 - just works out of the box when you use
40:42 - firebase
40:43 - um you have authentication so
40:45 - authentication traditionally is actually
40:47 - quite a headache
40:48 - um it's quite a sort of a pain to sort
40:50 - of get authentication working so with
40:52 - firebase it's literally like two lines
40:54 - of code that you have to add and you
40:55 - already have like a login
40:57 - a sign up and they completely do
40:58 - everything for you even they even have
41:00 - validation
41:01 - and then you have all of these that's
41:02 - the crazy thing guys so i want to kind
41:04 - of emphasize that authentication is a
41:06 - nightmare whether you want to add
41:08 - uh email and password type of
41:10 - authentication
41:11 - and again when we say authentication
41:13 - it's like when you log into instagram
41:15 - that you need authentication to do that
41:16 - right every single
41:17 - website or app you use has
41:19 - authentication
41:21 - setting it up is so hard whether you
41:23 - want to use google authentication
41:25 - or you want to use facebook
41:26 - authentication with firebase it is
41:29 - so simple and yeah i think you showed us
41:31 - how to do that sunny and it was just a
41:32 - few lines of code and
41:34 - authentication is good to go exactly and
41:37 - that's something which we do build in
41:38 - the amazon clone so
41:40 - again really good app to go ahead this
41:41 - is a great question and i think this is
41:44 - the right time to answer it so
41:46 - push asks firebase versus node and
41:48 - actually the answer is guys if you use
41:50 - firebase you can replace node like you
41:52 - actually have no reason to most of the
41:54 - times even use node and it's just so
41:56 - much simpler suddenly you want to uh
41:58 - go on on that and and riff yeah so
42:02 - exactly that so you actually can
42:04 - actually
42:04 - sort of eradicate the need for a back
42:06 - end really if you
42:07 - i would actually say go as far as to
42:09 - using all those all of firebase's tools
42:12 - up until the point where you need only
42:14 - like you actually
42:15 - need some sort of specific back-end
42:18 - functionality that firebase doesn't
42:19 - offer
42:20 - then at that point and this is something
42:21 - that me and kazi have done before
42:23 - if you do need node.js what you can go
42:26 - ahead and do
42:27 - is use something called cloud functions
42:29 - so cloud functions it's actually not on
42:30 - this diagram
42:31 - but it's something that is included
42:33 - inside actually one of the
42:35 - one of the most important things yeah
42:37 - cloud yeah that's actually huge yeah so
42:39 - cloud functions um is something where
42:42 - basically imagine like it's so aws have
42:44 - a different version
42:45 - called lambdas and essentially what it
42:47 - is is
42:48 - is you basically it's just literally
42:50 - like imagine a javascript function guys
42:52 - yeah so a simple javascript function um
42:54 - but it's written in node.js
42:56 - so it does that's this is where node.js
42:57 - js comes into it and essentially you can
42:59 - just deploy that one function and it
43:01 - uses a serverless approach
43:02 - and it's able to scale up and um guys
43:05 - whether or not you've got one user or
43:07 - you've got a 500 million users
43:09 - it's going to it's going to scale like
43:11 - you have google servers
43:12 - that are going to scale for you it's
43:14 - going to handle that sort of scale so
43:16 - really important stuff there and i see a
43:17 - lot of people asking a firebase is
43:19 - costly or is firebase free to use
43:21 - it's nice honestly it's free yeah every
43:24 - single build that we've done
43:26 - is completely free so unless you need to
43:28 - do some
43:29 - like sort of additional stuff i think
43:30 - the cloud functions you have to attach a
43:32 - card
43:33 - but it doesn't charge you um so honestly
43:36 - guys it's completely something which
43:37 - is worth learning and yeah you can host
43:40 - everything for free
43:41 - gives you even gives you a really nice
43:42 - url for most of your apps so everything
43:44 - that we showed you guys
43:45 - gives you a good url for that um and
43:47 - it's definitely something worth picking
43:48 - up our netflix clone was called netflix
43:50 - clone
43:50 - something that web app our messenger
43:52 - clone was called messenger-clone.web app
43:54 - you know so it's like
43:56 - really really clean urls that you can
43:58 - not like
43:59 - sometimes when you host it with heroku
44:01 - it's like papa 367
44:03 - 29 daddy.com slash like exactly
44:07 - [Laughter]
44:13 - where are you taking me that's my
44:15 - question
44:18 - so yeah it's like server like the power
44:21 - of serverless
44:22 - guys is so sick and the fact that you
44:24 - could use it
44:25 - like i was doing serverless stuff with
44:26 - aws and it was a
44:28 - nightmare to set it up like how i have
44:31 - to like
44:32 - set up my own rest api endpoints and
44:34 - then i got gotta make sure it's in the
44:35 - right
44:36 - server and oh my goodness even when i
44:39 - was setting up my functions sunny
44:41 - i had to be careful like whether i put
44:43 - them in oregon or ohio i'm like why
44:46 - am i having to like put locations for my
44:50 - server like functions like what's next
44:52 - do i have to also like lease an
44:54 - apartment for my functions to live in
44:56 - and keep them there like what how far is
44:58 - this gonna go
44:59 - so with firebase you don't have to worry
45:02 - about any of that
45:03 - yeah you literally have one command line
45:05 - saying firebase deploy and that's it
45:08 - yeah it's that simple yeah somebody
45:11 - asked what's the
45:12 - if there's a paid option like what's the
45:14 - need for the paid option
45:15 - push did for paid option server less
45:19 - functions
45:19 - is one of the reasons why you might need
45:21 - paid uh even on that they're not going
45:23 - to really charge you until
45:25 - the scale is really high so i probably
45:28 - wouldn't worry about
45:29 - paid until you have like millions of
45:31 - visitors hitting your platform per month
45:33 - most of you that's never going to happen
45:35 - so i wouldn't worry about it until then
45:38 - yeah exactly and guys just to touch on
45:40 - this they have
45:41 - so many things which is worth checking
45:43 - out so like even they even have machine
45:44 - learning so i see loads of people asking
45:46 - about
45:47 - hey why don't you go ahead and build
45:48 - something with machine learning guys
45:50 - firebase offers that out of the box i
45:51 - was actually
45:52 - thinking sunny you and i do a tutorial
45:55 - where we do
45:56 - where we use google cloud vision uh
45:59 - google vision and we actually
46:00 - build a um using firebase and react like
46:04 - a
46:04 - uh like face detection app or a
46:08 - edge detection app together nice guys if
46:11 - you guys want to see that let us know in
46:13 - the comments but yeah i'm down for that
46:14 - that would be something which would be
46:16 - fun to build
46:16 - that's definitely go ahead that really
46:18 - excites me because i like front-end
46:20 - stuff but i
46:20 - really like stuff like that it's just
46:22 - it's mind-blowing yeah
46:24 - nice and i saw a lot of people actually
46:25 - love the the ai
46:27 - video that we we dropped recently so
46:29 - yeah let's go ahead and build that
46:30 - nice yeah um so hosting guys
46:34 - i think sunny touched on it already
46:35 - that's going to be there
46:37 - any other stuff you want to like touch
46:38 - on from here sunny
46:40 - yeah so like just a few things to just
46:42 - brief over if you are using so guys
46:44 - remember we spoke about react right
46:45 - react is really powerful not just for
46:47 - web apps but you can actually build apps
46:49 - in uh for ios and android using react
46:51 - native right
46:52 - now when you have react native something
46:55 - really
46:56 - really critical right you want to be
46:58 - able to test your apps in
46:59 - so many uh scenarios and so many
47:02 - different variations and this and that
47:04 - now they have something called test lab
47:06 - right test lab's amazing guys so imagine
47:08 - you build an app with react native
47:10 - you deploy it test lab then you
47:12 - basically just upload your app to test
47:14 - lab or i think you just deploy it or
47:16 - whatever you do but
47:16 - you upload it to test lab and then it
47:18 - actually runs it on physical devices so
47:21 - you'll run it on an iphone 11 iphone 10
47:23 - iphone 9 android um samsung galaxy
47:26 - all of the different variations and it
47:28 - will show you and you can actually put a
47:29 - little robotic script in it so it'll run
47:31 - through the app and test everything
47:32 - it'll give you screenshots of every
47:34 - single page every single um
47:36 - sort of uh like it'll give you
47:38 - screenshots of the app how it looks
47:40 - and that is the most powerful way that
47:42 - you can ever debug
47:43 - an app so honestly that's so so powerful
47:46 - and that's
47:47 - out of the box like i can't stress that
47:49 - enough that's something that they just
47:50 - give you out of the box
47:52 - and alongside crash reporting all this
47:54 - other stuff but
47:55 - i would definitely recommend if you guys
47:56 - are enjoying sort of the firebase stuff
47:58 - that we're covering here definitely go
48:00 - and check it out because they have
48:01 - an endless amount of tools and we've
48:03 - only just touched on
48:04 - some of them but you have notifications
48:06 - so many different
48:08 - things which really do allow you to
48:09 - supercharge your app
48:14 - yeah i think you're muted quasi
48:18 - talking for a while so um david jacobs
48:21 - just came in and he said hey just coming
48:23 - is it okay to make
48:24 - use of firebase and node.js for the same
48:26 - project my gut answer is
48:29 - absolutely it's totally okay but if you
48:32 - most of the times need to use node.js
48:34 - if you get creative you probably won't
48:35 - need to really use node.js you can use
48:38 - serverless
48:39 - cloud functions and do it but sunny uh
48:41 - what are your thoughts
48:43 - yeah so if you are going to go ahead and
48:44 - use cloud functions it will be in
48:46 - node.js anyway yeah so
48:48 - uh so that's sort of a sort of way to
48:50 - think about it if you are going to sort
48:51 - of need node.js then you would be using
48:53 - firebase cloud functions but like carzi
48:56 - said try and
48:57 - use all the tools that they give you
48:58 - before you actually reach that point
49:00 - because what would tend to happen is you
49:02 - might actually end up over engineering
49:03 - when they actually give you a tool which
49:05 - does it all for you in like three lines
49:06 - of code
49:07 - so i'd really make sure you you sort of
49:09 - play with their tools and like the
49:10 - real-time database and stuff before you
49:12 - go ahead and do any of that stuff
49:14 - okay awesome i mean one of the bills
49:17 - like the youtube thumbnail build sonny
49:19 - what we can do is like
49:20 - we can even do more like off like um
49:23 - like something we build live and maybe
49:25 - we might even fail during the live
49:27 - stream but it could be something fun to
49:28 - just build live with everybody
49:30 - you know that could be like a fun
49:32 - building that would be fun actually yeah
49:33 - so we're actually building this uh
49:35 - youtube thumbnail guys where we want to
49:36 - test what the thumbnails look like
49:38 - before we put it out on youtube yeah um
49:40 - so me and kazi came up with an idea to
49:42 - actually go ahead and build this but
49:43 - yeah like if you guys want to see us
49:44 - actually building it
49:46 - from the beginning so not pre-scripted
49:48 - and everything sort of like
49:49 - the actual things that we face then yeah
49:51 - let us know
49:52 - yep um should we learn dino now
49:55 - sunny just a real quick rapid fire
49:57 - answer
49:59 - dino guys is something which i can you
50:01 - guys can go ahead and look into
50:02 - it's very fresh okay so there's no
50:05 - guarantee that it's going to stick
50:06 - around
50:06 - it's a runtime environment for
50:08 - javascript but guys a whole different
50:10 - video i think we would put for that but
50:11 - go ahead and check it out it's something
50:13 - cool i'm looking into it right now
50:14 - um and i will let you know as we find
50:16 - out oh crap so we didn't actually
50:18 - go into this but uh if we just kept
50:20 - going with the firebase stuff guys like
50:23 - we mentioned the author um auth we
50:25 - mentioned the hosting
50:27 - here are the cloud functions cloud
50:29 - firestore real-time database this is
50:31 - one of the biggest benefits of firebase
50:34 - just the fact that you can have a
50:35 - real-time database with a two-way sync
50:36 - you cannot do that with
50:38 - aws guys i mean they might have the
50:41 - dynamodb which is i think aws has like
50:45 - real time thing i haven't really looked
50:47 - into it but
50:48 - i could not find any other real time and
50:50 - postgres
50:51 - and redshift is just like so slow in
50:53 - terms of
50:54 - being able to check things live in my
50:57 - opinion like
50:58 - firebases this just this functionality
51:00 - real-time database is
51:02 - alone amazing enough to use it and then
51:04 - yeah you get
51:05 - all this awesome stuff here anything you
51:07 - want to touch base on on this or should
51:09 - we move on
51:10 - um pretty much you've covered it mostly
51:13 - uh i would say the one thing that was
51:14 - worth mentioning on that one slide is
51:16 - you see where it says predictions guys
51:17 - so mostly whenever you collect a bunch
51:20 - of analytics it's quite a headache to
51:21 - actually figure out what it's going to
51:23 - do for your app right but they actually
51:24 - apply machine learning to the analytics
51:26 - that you collect
51:27 - and get tell you which users are good
51:30 - which users are
51:31 - like less involved they do a lot of that
51:33 - stuff for you
51:34 - so something worth noticing that that's
51:36 - awesome they even have a machine
51:37 - learning kit which is cool
51:39 - which is what i'm excited to use
51:42 - definitely
51:42 - yeah we'll go ahead and play with that
51:44 - awesome so guys let's jump into nodejs
51:47 - and see what's going
51:48 - on over here so sunny talk to us about
51:52 - node right so node.js guys is pretty
51:55 - much we all know javascript when we sort
51:57 - of hear javascript we think about front
51:58 - end we think about
52:00 - websites we think about sort of the sort
52:02 - of interactivity of a website right
52:04 - but we also use javascript on the server
52:06 - side so it's back-end javascript right
52:09 - now here we have a bunch of use cases
52:11 - that we could
52:12 - sort of talk about so we have data
52:14 - streaming so whenever you have sort of
52:16 - like a live stream right now that you
52:17 - guys are watching
52:18 - this probably could be running using
52:20 - node.js right now depending on how they
52:21 - built it
52:22 - right server-side proxying if you do if
52:24 - you're into that big data and analytics
52:26 - but one here that will be very
52:28 - interesting is the rest api so all the
52:29 - way on the right we can see something
52:31 - called rest
52:31 - api and we will be touching on rest api
52:34 - soon
52:34 - but just to let you go let you guys know
52:36 - roughly what a rest api is
52:38 - imagine we had like so for example when
52:40 - we built the netflix clone
52:41 - right we didn't hard code all of that
52:43 - information right we actually went ahead
52:45 - and pulled that
52:46 - from a service and that service was
52:49 - written in node.js
52:50 - right so that service that actually
52:52 - provided all of that stuff yeah we
52:53 - didn't we didn't want to sit there and
52:55 - like literally pull
52:56 - every single piece of information on the
52:57 - movie lucifer and dark desire and dark
52:59 - and all of that stuff
53:01 - it was yeah exactly we're using tmdb
53:04 - which is a service that has all this
53:06 - information and using their api we just
53:08 - pulled it into our app otherwise we'd
53:09 - have to spend like
53:10 - years building just the database of
53:12 - movies
53:14 - exactly exactly so the way to think
53:17 - about node.js
53:18 - because i remember when i was learning
53:19 - javascript i was super confused i was
53:21 - like am i coding in javascript right now
53:22 - or node.js
53:23 - and the truth is guys that now they've
53:25 - sort of progressed to the same level
53:26 - where
53:27 - it's literally like essentially whatever
53:29 - you can do on the front end
53:30 - picture it as you can now do on the back
53:32 - and that's why javascript is a language
53:34 - which everyone needs to learn because
53:36 - you actually before what would happen is
53:38 - you would have one language for the
53:39 - front end and you'd have a totally
53:40 - separate language for the back end
53:42 - but now with javascript you have that
53:43 - the same language consistent on your
53:45 - front end and back in which means that
53:47 - the better you get at javascript
53:48 - the better you become as a full stack
53:50 - developer which is really awesome
53:52 - genius way to put it i love that that's
53:55 - actually really really
53:56 - cool so no need for php i imagine
54:01 - yeah i coded in php guys and i will
54:03 - happily tell you that this replaces that
54:05 - everything it does this replaces it and
54:07 - all this other stuff you guys can
54:08 - actually do with node.js as well so
54:10 - whether it's big data analytics you want
54:12 - to do system monitoring
54:14 - dashboards wireless connectivity you
54:16 - want to build chat bots real-time data
54:18 - web scraping automation
54:19 - all of this stuff you guys are able to
54:21 - do it any other things we should touch
54:23 - on here sonny
54:24 - uh i think we covered a lot of it
54:26 - remember guys when we touched on
54:28 - firebase all of the cloud function stuff
54:30 - that we spoke about is going to be using
54:31 - node.js to add that into it yeah
54:34 - yep awesome so let's go ahead and now
54:37 - move to the next
54:39 - thing so what's going on here
54:42 - so this is actually good because we just
54:44 - literally brought up the cloud functions
54:45 - example so here guys imagine we had a a
54:49 - firebase cloud function
54:50 - right so imagine we sign in as a user
54:53 - right
54:54 - and the good thing with card functions
54:55 - is you can actually sort of imagine that
54:57 - middle cloud function guys
54:59 - is written in node.js right so that
55:01 - middle cloud function
55:02 - is written in node.js so we sign in as a
55:05 - user
55:06 - then we pass like the sort of the user's
55:08 - id their token
55:09 - and some data alongside it right now
55:12 - that cloud function is going to get
55:13 - triggered automatically
55:15 - just to make it like very real like so
55:18 - if i am on my phone right now
55:20 - and i log into like instagram
55:23 - app on my phone right yeah then
55:27 - i'm past the step one that i drew and
55:29 - now i'm like sending that information
55:31 - potentially over to a cloud function
55:33 - and it has my user id so if i'm like my
55:36 - user id is five four four three
55:38 - it's passing that five four four three
55:40 - over the cloud function
55:42 - exactly and let's imagine we had some
55:45 - special cloud function guys
55:47 - which checked for five four four three
55:49 - let's say like
55:50 - it checks it if you if you log in and
55:52 - you are raphaekazi
55:54 - yeah then it's gonna send you to the
55:56 - special raf akazi version of instagram
55:57 - right so let's just imagine we have this
55:59 - imaginary app right
56:00 - so it and it checks all of the users who
56:03 - log in
56:03 - if it's five four four three we're gonna
56:05 - i'm not gonna send you to normal
56:06 - instagram we're gonna send you to the
56:07 - kazegram
56:08 - right we're gonna send you to the kazi
56:09 - version of instagram right um
56:12 - then what you can do is you can
56:13 - basically do whatever you want
56:14 - afterwards but in this case
56:16 - it's saying write a document to the
56:17 - cloud firestore which is basically the
56:19 - real-time database
56:20 - but but just to show you guys it's super
56:23 - sort of versatile in what you can do
56:25 - here
56:25 - right so you can write a cloud function
56:27 - which would get triggered for
56:29 - any use case so we have cloud functions
56:32 - which run
56:32 - daily which do little jobs for us um we
56:35 - do
56:35 - things for example me and carson used to
56:37 - check on a bunch of different
56:38 - metrics every day so instead we built a
56:40 - card function to to actually do that for
56:42 - us
56:43 - here's here's one here's one example of
56:45 - one thing we do right so for example we
56:47 - take
56:48 - um revenue made yesterday
56:51 - okay yep um let me actually put it here
56:54 - revenue
56:55 - made yesterday then we use
56:58 - uh twilio api to send that
57:02 - as a text message to all of our phones
57:07 - now here what we're doing is we're using
57:10 - an api
57:12 - right to actually send the text message
57:16 - and then we're uh using this and now we
57:19 - want this to send a message to us at 5
57:21 - 00 am
57:21 - every single morning right so this
57:24 - actually sends
57:25 - at 5am every morning so you guys some of
57:28 - you might have heard of something like a
57:29 - cron job this is what we refer
57:31 - to as a cron job it's just something
57:32 - that's scheduled i don't know why that
57:34 - name is there but it's like a scheduled
57:36 - think of it like a scheduled function
57:39 - yeah and now that all of this
57:42 - is happening guys and this is actually
57:44 - happening because of
57:47 - cloud function exactly okay and we're
57:50 - literally using
57:51 - firebase and um we are able to this is
57:54 - essentially a cloud function okay
57:56 - and firebase allows us to host this
57:58 - cloud function run it as a cron job
58:00 - and every five a.m it like takes our
58:02 - revenue from yesterday and sends it to
58:04 - us as a text message
58:06 - yeah and that's just an example and guys
58:09 - that one simple fun
58:10 - like uh use case makes our life so much
58:13 - easier every day
58:14 - because it just automated the tasks that
58:15 - we would otherwise have to do and we can
58:16 - send that
58:17 - text message to the entire team yeah
58:19 - otherwise like what we had to do was we
58:21 - had we had a person who we had hired
58:24 - who would literally like look at four or
58:26 - five different sources where we had
58:28 - income coming from and then manually
58:29 - they would have to remember
58:30 - and then they would have to manually
58:32 - text everybody on the team
58:34 - they would make mistakes sometimes the
58:35 - numbers could be wrong um sometimes it
58:37 - wouldn't text everybody
58:39 - um and so this doesn't make any mistakes
58:42 - it's 100
58:42 - right and it just makes our lives easier
58:44 - by combining
58:46 - five different resources into one
58:49 - exactly exactly
58:52 - awesome so let's move on to the next
58:54 - thing right so now let's talk about
58:55 - command line why is the command line
58:58 - so important sunny yeah so just opening
59:01 - up the command line here guys
59:03 - so i always find that people see our
59:04 - command line that we use and they always
59:06 - ask like what are you using because our
59:08 - command line is different to the one
59:09 - that you're going to see
59:10 - so what i would recommend is everyone
59:12 - actually goes ahead and download
59:14 - something called oh my zsh
59:16 - and it's really really good because it
59:18 - just powers up your command line so
59:20 - imagine it just sort of adds like this
59:22 - very clean ui it gives you a bunch of
59:24 - sort of like power ups and plugins that
59:25 - you can mess around with
59:26 - but the point is guys why do we need to
59:28 - know the command line the command line
59:30 - is pretty much
59:31 - going to be it's going to allow you to
59:34 - do things manipulate things like git so
59:36 - it's going to allow you to push
59:37 - your code to git repos it's going to
59:40 - allow you to start your react app
59:42 - it's going to allow you to do the basic
59:44 - things like create
59:46 - create folders and things like that and
59:47 - guys remember like a lot of you guys
59:49 - might be thinking at this point yeah but
59:50 - i can just right click and i can open
59:52 - and i can click new folder right
59:54 - but how do you do that with npm start
59:56 - like you need the command line to be
59:58 - able to do that right
59:59 - if you want to push code to github yes
60:00 - you could do it in vs code now but
60:02 - before
60:03 - you couldn't do that before so you would
60:04 - actually need and i still use the
60:06 - command line
60:06 - when i push to github yeah um and cause
60:09 - you actually code quite
60:10 - used to code quite a lot with the
60:11 - command line right yeah yeah i mean i
60:14 - code pretty much most of my stuff with
60:16 - command line and there's like really
60:17 - like there's some really crazy stuff you
60:19 - can do with the command line that like
60:22 - you will have trouble doing with
60:25 - anything else like if i can almost like
60:27 - uh demo something let me actually grab
60:30 - i would like to grab some kind of react
60:32 - code or even like take something like
60:33 - this right
60:34 - let's say i copy this um i'm copying
60:36 - this link which you guys can't see
60:37 - this is this link right over here i'm
60:39 - copying it right now if i want to paste
60:42 - it
60:42 - you know normally what you have to do is
60:44 - you like gotta open some
60:46 - uh file you gotta like go inside of it
60:48 - and paste it
60:49 - from my command line i can actually do
60:51 - this and let me actually show you
60:52 - because
60:53 - let me see if i can move this here boom
60:56 - let's go right there
60:58 - and i'll show you something really like
61:00 - kind of fancy that i like to do this is
61:01 - just for demoing purposes
61:03 - but let's go ahead and let's just do
61:05 - i'll just do pb
61:06 - paste and uh here's the demo
61:09 - yt app right
61:13 - and now if i actually find this app that
61:15 - i cr folder that i created
61:18 - on my computer which i want to make sure
61:20 - that
61:23 - i don't share everything with you guys
61:35 - okay let's actually make it a javascript
61:38 - file
61:40 - right
61:44 - every every time you demo this stuff it
61:46 - fails but it's okay because i'm going to
61:48 - just keep going till it works
61:50 - that's it and guys when you're coding
61:52 - this is normal stuff you're going to run
61:54 - into this
61:54 - right so this is just one example of
61:57 - what i did like i
61:58 - copied some piece of thing right and i
62:01 - pasted it in here now
62:02 - this is just a url that i pasted through
62:04 - the command line
62:05 - but like if i have huge chunks of code
62:08 - it allows me to move so
62:09 - freaking fast and here's one thing i
62:11 - want to say about speed okay
62:13 - people often think that when it comes
62:15 - down to speed
62:16 - you either do something slow or you do
62:18 - something
62:19 - fast there are two things here's what i
62:22 - said that's completely wrong
62:24 - you either do things fast or you don't
62:26 - do them at
62:27 - all i'll give you an example imagine you
62:30 - had to edit a video
62:31 - and every single frame that you hit edit
62:34 - on
62:34 - if it took two hours for it to refresh
62:37 - imagine if you were building an
62:38 - app on your on your computer on your
62:41 - local host
62:42 - and let's say you made a change to it
62:44 - and you wanted to see your change
62:45 - imagine if it took one hour to see your
62:48 - change how does my navbar look
62:50 - how does my role that i created look
62:52 - instead of being able to give it to you
62:54 - instantly when you hit refresh
62:56 - that would have a major difference right
62:58 - to your
62:59 - building process and experience and as a
63:02 - matter of fact you would actually not
63:03 - build a lot of features because you
63:05 - can't test it and see it fast
63:06 - so command line what it allows you to do
63:09 - my favorite thing for it is it allows
63:11 - you to move at just a
63:12 - brutally insanely fast speed get
63:16 - freaking good at command line if you get
63:19 - fast at this you can bust out two apps
63:21 - while somebody else is building their
63:22 - first app and it takes them like three
63:24 - weeks
63:25 - so learn it it's gonna be highly highly
63:28 - paid but more importantly your
63:30 - process of development will just be so
63:32 - much more enjoyable so
63:34 - get past the fear of the dark screen and
63:37 - just
63:38 - fall in love with it yeah and it is
63:41 - daunting when you first start guys that
63:42 - we've all been there where we don't even
63:44 - know how to interact with the command
63:45 - line
63:46 - um and it can get very scary in the
63:48 - beginning but just to get just start
63:49 - moving towards it even if you fail
63:51 - what's the worst thing that's going to
63:52 - happen like
63:53 - you just carry on and you learn from
63:54 - that one thing to work with that's worth
63:57 - mentioning guys you're gonna need to
63:58 - know this because
64:00 - things like firebase like for example
64:01 - when you deploy your app to firebase
64:03 - you need to know how to do that with the
64:05 - command line right you need to be able
64:06 - to
64:07 - you need to be able to write firebase
64:08 - deploy inside of the command line in the
64:10 - correct folder to be able to deploy your
64:12 - app
64:13 - so you're going to need to be able to
64:14 - know that stuff even when you're using
64:15 - get it's something where you you just
64:17 - kind of have to learn this at some point
64:19 - yep yep beautiful so let's move on to
64:22 - rest api
64:23 - so rest apis why are what are these
64:26 - things
64:27 - why are they important guys like if i
64:28 - wanted to build a face detection right
64:31 - let me actually show you guys a few days
64:32 - ago we made a video
64:34 - aaron and i and it was on face detection
64:37 - so
64:38 - let me pull it up on my screen here and
64:40 - show it to you guys so boom
64:42 - here it is build a real time face
64:45 - detection
64:46 - this is like probably the best use case
64:48 - of why things like api
64:50 - matters and even though
64:53 - technically we're in this case but it's
64:56 - kind of like an api okay i just want to
64:57 - get the concept across
64:59 - so let's go here where he's demoing the
65:02 - app
65:03 - so check this out right so right now
65:06 - guys it's detecting his face
65:08 - doesn't matter where he's moving and
65:10 - what he's doing so you can see that now
65:12 - this if we had to write
65:13 - this code to make this work sonny how
65:15 - long would it take us to figure out
65:17 - how to do proper face detection all by
65:20 - ourselves
65:21 - write it and run code that does this how
65:23 - long would it take
65:24 - oh dude like you stressed me out just
65:26 - saying it
65:27 - i mean i don't know where we'd begin
65:29 - like this is why we need things like
65:31 - services that have figured out that
65:34 - it's pretty depressing but suddenly you
65:36 - and i in our entire lifetime would never
65:38 - be able to figure out how to do it
65:40 - yeah it would take forever dude it takes
65:42 - so long to figure that out copy pasting
65:44 - stuff or figuring it out or
65:46 - stealing somebody else's research you
65:47 - and i in our lifetime like there are
65:49 - very few people who could figure
65:51 - out this type of stuff and this spent
65:53 - their whole life dedicated to like
65:55 - how face detection works you don't want
65:57 - to like sit there and write this
65:58 - algorithm from scratch
66:00 - you use it so like api in this case we
66:03 - basically used an api to get access to
66:07 - all this code that allows us to do it so
66:09 - guys for us it actually took
66:10 - six lines of code to make this entire
66:12 - app work
66:14 - yeah that's insane that's insane
66:18 - i really want to do that i really want
66:19 - to give that a go in javascript which is
66:21 - why
66:21 - this is this is these are some of the
66:23 - reasons i really like python because
66:25 - like
66:25 - when you can do it in like six lines of
66:27 - code it is kind of nice and like take a
66:29 - look at this there's just one part where
66:30 - everybody started going crazy
66:32 - on the live stream and look aaron pulled
66:34 - up an image
66:35 - that i had sent to him from our live
66:37 - stream and it started detecting the
66:39 - faces on that image
66:41 - oh damn that's from the phone yeah
66:45 - that's clean yeah so this is why guys
66:48 - api is super important
66:50 - here's the ugly image of this these
66:52 - sunny i don't know why you put this
66:54 - image in these are the images that i saw
66:56 - that like made me never want to learn
66:57 - apis
66:58 - yeah do you know why it's because this i
67:00 - know they're they're ugly images but
67:02 - they're just they are like they really
67:03 - explain what an api as well
67:05 - no for somebody who doesn't know apis
67:07 - this is the
67:08 - i the only person i feel like this can
67:10 - help is somebody who knows apis
67:15 - but okay go ahead go ahead explain it
67:17 - explain it
67:18 - so guys all an api is essentially right
67:20 - you have the client so that the actual
67:22 - web page that you're on so that's the
67:23 - left thing that we see the client sends
67:25 - a request so like imagine you click or
67:27 - we went to the netflix page right um so
67:29 - the netflix app is loading on that left
67:31 - screen um
67:32 - and then what it does is it makes a
67:34 - request so in the netflix build we
67:36 - actually
67:37 - communicate it to a server and the
67:39 - server that we
67:40 - sort of reached out to was something
67:41 - called tmdb so it's like imdb
67:44 - it's like the sort of it's a it's a
67:45 - movie record database right
67:47 - yeah and what that ended up doing we
67:49 - sent a request
67:50 - so we sent a get request so it's that
67:53 - top one we actually went ahead and sent
67:54 - a get request and we sent that to their
67:56 - server
67:57 - um and we just basically asked and they
67:59 - basically if you read the documentation
68:01 - they tell you how you can send that
68:02 - request and so forth
68:03 - and basically they responded with some
68:05 - information
68:06 - in the form of json right so it's a json
68:09 - object and basically guys
68:11 - that's what we end up rendering on the
68:12 - screen so basically
68:14 - like like for example here right this
68:17 - was blank and it was like
68:18 - literally imagine this was empty and had
68:20 - no information okay
68:22 - as soon as this page loaded and then
68:24 - boom what it does is it takes this and
68:26 - fires off and goes hey dude i need this
68:29 - information right now because like
68:30 - literally i'm like displaying something
68:31 - that's empty i'm freaking out
68:33 - so it sends that over and then tmdb is
68:35 - like yo relax
68:36 - here's like the information and it goes
68:38 - yeah this movie here is called dark
68:40 - desire
68:41 - pop that in and then boom we're like all
68:43 - right let's pop it into our app
68:45 - i love our aggressive the api
68:50 - you're relaxed the api is just like
68:54 - straight up like gangster
68:58 - nice oh man we gotta have more gifs and
69:02 - uh memes in our next presentation sunny
69:04 - like all this stuff you should actually
69:06 - explain through gifts and memes
69:08 - yeah well yeah we should we should we'll
69:10 - get rid of this for the next one [ __ ]
69:12 - this image i
69:12 - never want to see this image again this
69:14 - image reminds me of like
69:16 - when like i used to see my brother's
69:18 - like college classes back in 2006 and he
69:20 - was learning
69:21 - i'm like oh i knew it was going to start
69:24 - a conversation
69:28 - with quality content guys i'd do that
69:29 - for you
69:32 - you just you just put it so like all the
69:34 - nerdy people on the stream like
69:36 - anybody who's like super nerdy they
69:37 - could just be satisfied and they can't
69:39 - like
69:39 - talk [ __ ] to us you know exactly i saw a
69:42 - few thumbs up when this screen came on
69:45 - oh yeah by the way guys smash that like
69:47 - button if you're enjoying this content
69:48 - so far
69:49 - it really really helps us okay so please
69:51 - please please do that
69:53 - definitely right should we move over to
69:56 - the next slide
69:57 - yes let's move over and like just so
69:59 - let's just a little quick thing before
70:01 - we completely change
70:02 - um just at a high level guys it's like
70:05 - there's a few different things
70:06 - so you know you want to be able to
70:08 - delete information or change information
70:10 - so
70:11 - anytime here's how i think of it anytime
70:13 - you want to get information just think
70:14 - get i need information get get
70:16 - get get get so it's like on instagram
70:18 - post if you want like
70:19 - when i go to instagram.com right here
70:23 - all my get requests in my mind this is a
70:24 - get request is getting the data getting
70:26 - the image showing the image so that's
70:28 - think get and like put it in your brain
70:31 - now when you go and you want to like
70:33 - post something that's going to be post
70:35 - so for example if i go back to instagram
70:37 - anything that requires any type of
70:39 - posting so when i'm posting a comment
70:40 - and i hit enter
70:41 - in my mind i chain that with post post
70:43 - post post post
70:44 - so then when i'm thinking i need to post
70:47 - that's going to be post
70:48 - if i want to go and like change this
70:50 - exact image that's right here
70:52 - that in my mind is just like update so
70:54 - that's put
70:56 - put is update i don't know why could
70:57 - they call it that but put
70:59 - really is like update so yeah
71:02 - boom delete is the most obvious one if i
71:04 - go and delete any of my comments any of
71:06 - my posts
71:07 - that's just gonna be delete so that's
71:09 - how i like to think about it
71:11 - really nice breakdown yeah nice thanks
71:14 - all right guys so let's jump into
71:15 - flexbox sunny take it over
71:18 - yeah so flexbox guys and the the reason
71:21 - why
71:21 - you would want to use flexbox is it
71:23 - allows you to essentially get a
71:25 - fully responsive web design right which
71:28 - means so like
71:29 - look at this illustration right here so
71:30 - you got a bunch of different devices
71:32 - right but imagine that's one website
71:34 - so obviously when you see a lot of
71:35 - websites when you go on your phone
71:37 - it looks slightly different when you go
71:39 - on your desktop right now back in the
71:41 - day this used to be a nightmare to do
71:43 - this like you had to use something like
71:44 - you had to use endless media queries and
71:46 - sort of all this headache to get that to
71:47 - do that
71:48 - or you would actually end up building
71:49 - two different apps so
71:51 - if you look at some really old apps they
71:53 - actually have two completely horrible
71:55 - looking like a horrible mobile app
71:57 - and a really nice desktop one if you for
71:58 - example check this
72:00 - visually like talk about also what
72:02 - you're saying so like
72:04 - yeah guys without flexbox right we won't
72:06 - be able to get this
72:07 - nice functionality here and how easy
72:10 - this was to set up like all these rows
72:12 - are actually built
72:13 - using flexbox uh at the top the nav bar
72:16 - that you guys see that looks really
72:17 - slick
72:18 - when i hover down that is using flexbox
72:21 - um
72:22 - as well but keep going sunny yeah
72:25 - exactly
72:25 - so uh even uh all of the builds that we
72:28 - actually did
72:28 - are actually responsive so if the
72:30 - screens get all responsive
72:32 - yeah if we take this because it's
72:35 - flexbox
72:36 - it's responsive so you guys see how the
72:37 - netflix one like turns into a nice like
72:40 - mobile version flexbox
72:43 - exactly and guys yeah so it's definitely
72:46 - going to be a skill and
72:47 - like the the need for it is very clear
72:49 - here right you if you want to support
72:51 - mobile devices tablets etc you need to
72:53 - know flexbox which is why
72:55 - most people use um or they require you
72:59 - to know about flexbox yep
73:00 - uh i love what this guy says he goes can
73:03 - you guys start teaching
73:04 - graphql instead of rest i have worked on
73:06 - it's really cool
73:07 - so one thing i want to actually say to
73:09 - that is um
73:11 - can we sunny i think we need to start
73:13 - doing live streams where we're doing
73:15 - live builds
73:16 - live builds that actually also live for
73:17 - us so like yeah
73:19 - one great use case for graphql honestly
73:23 - is i want to actually build
73:24 - uh like something with facebook ads you
73:26 - know yeah and you and i were talking
73:28 - about doing stuff with facebook ads so
73:29 - we can actually create a dummy test
73:31 - account for facebook ads
73:33 - just so the user token and stuff like
73:34 - that we can share it with everybody on
73:36 - the screen
73:37 - and we can actually use graphql there
73:40 - because facebook uses graphql
73:42 - and then we can actually run ads build
73:44 - ads and the videos would be really cool
73:45 - it'd be like hey how we built our own
73:47 - bot and like
73:49 - it's spent five thousand dollars this
73:50 - month you know and like
73:52 - oh that'll be fun yeah that'd be nice
73:55 - yeah and and yeah like guys
73:56 - it's really nice by the way when you
73:58 - guys drop those comments in because it
73:59 - lets
74:00 - us know what you guys are interested in
74:02 - learning or like what you guys want to
74:04 - do and then me and kazi can go ahead and
74:05 - like
74:06 - jump on a live stream and actually go
74:07 - and build it which is like like you said
74:09 - it's going to be fresh for us like
74:11 - i i've used graphql in the past but am i
74:13 - am i a professional
74:14 - am i a pro at it no like i'm pretty
74:16 - fairly new to it like
74:18 - in some sense so we can go ahead and do
74:20 - and learn that together
74:21 - and i think that'll be a really really
74:22 - useful for for everyone to
74:24 - to see yep awesome um
74:28 - yep so basically it's uh yeah i think um
74:32 - just one thing i i do want to mention
74:33 - okin lily um
74:35 - asks can you explain put versus patch so
74:38 - yeah i mean uh the basic
74:40 - basic version i can give you of put
74:42 - versus patch is just like
74:43 - put is for updating so if i want to
74:46 - update my caption if i want to update my
74:48 - youtube video that already exists i'm
74:50 - going to use
74:51 - put if i want to oh wait wait wait
74:53 - that's actually a good
74:54 - good good one so sunny actually can you
74:57 - explain the difference between put
74:58 - versus patch because i thought he was
74:59 - asking put versus
75:01 - um let's say delete or something like
75:03 - that so just give us a
75:04 - little put versus patch so as far as i'm
75:08 - aware
75:09 - so perk guys is what you're going to
75:10 - probably be using most of the time right
75:13 - so it's going to be like when you change
75:15 - like the um
75:16 - actual sort of you're going to be
75:18 - changing the actual sort of uh
75:20 - sort of document or whatever sort of
75:21 - like item that you're changing inside of
75:23 - your in your inside of your api rest api
75:26 - but patch
75:26 - is when you actually want to change uh
75:29 - make changes to the part of the resource
75:31 - at a given location right so what you're
75:33 - actually doing is you're making
75:34 - a change to the resource and you're
75:37 - changing its properties
75:38 - so there is a there's a slight
75:39 - difference there um to be honest with
75:41 - you i actually end up using
75:43 - most of the time i don't i haven't
75:45 - actually ran into personally i haven't
75:47 - run into
75:48 - a case where i've used patch much yeah i
75:51 - actually find in most tutorials they
75:52 - tell you
75:53 - um but if we have a little check here i
75:56 - can see
75:57 - unlike patch applies a partial update to
76:00 - the resource
76:01 - so it's going to apply a partial update
76:03 - as opposed to put which
76:04 - applies like an entire update to your
76:07 - resource
76:08 - yeah but um guys keep it simple just
76:10 - probably use
76:11 - put unless you're working with other
76:13 - developers on your team and they
76:14 - have specific reasons for where you use
76:17 - put or patch
76:18 - the most important thing is you guys
76:19 - stay consistent here with your team
76:22 - that's going to be the the really key
76:24 - difference here
76:25 - um awesome
76:28 - okay all right nice i saw some questions
76:31 - where we were talking about flexbox and
76:33 - some people are saying
76:34 - what about css grid yeah we should
76:36 - actually do something with grid too i
76:37 - think that would be great
76:39 - yeah awesome so this grid guide is
76:41 - really good for responsive design as
76:42 - well yeah
76:43 - yep so let's move forward with this guys
76:45 - so flexbox froggy is a great resource
76:48 - for you guys to go and use to learn
76:50 - flexbox
76:51 - it's a playful way to in an interactive
76:54 - way you'll pick up flexbox i think it's
76:56 - honestly the best way to do it
76:58 - yeah i learned music now yeah yeah
77:01 - that's how sunny learn
77:02 - and uh so yeah i would say use the one
77:05 - thing though is like don't just use this
77:06 - and then like
77:07 - don't also code ever uh use it and then
77:10 - kind of like try to build something
77:12 - using what you learned from here but
77:15 - this is a good action step for you guys
77:17 - to go and use it's a
77:18 - website called flexbox froggie and just
77:20 - by playing
77:22 - you will learn so much more than you
77:23 - will learn through like sometimes even
77:25 - tutorials
77:27 - exactly and guys i can't stress enough
77:29 - like how quickly i learned flexbox when
77:31 - i use this which is why
77:32 - we show everyone who is interested in
77:34 - flexbox flexbox foggy because it's
77:36 - really
77:37 - going to it's it's the first tutorial i
77:39 - can truly say
77:40 - i did it once and i just got it like i
77:43 - understood flexbox
77:44 - after that um so if even if you're like
77:46 - you think you're good at flexbox i'll go
77:48 - ahead and give this game a try and i'm
77:49 - sure it'll make you a bit better than
77:50 - you thought you were in the beginning
77:52 - before you gave it a try one thing that
77:55 - komal said which i think like we can we
77:57 - can um
77:58 - help fix a little bit he said put is
78:00 - adding a new movie all properties to
78:02 - that new card
78:03 - um patch updates properties in an
78:06 - existing card so
78:07 - how i would see it is like i would
78:09 - probably when i'm adding a new movie i
78:11 - would probably see it as
78:12 - a post i would do post if i'm adding a
78:15 - new movie so just be careful of this
78:17 - um a trap guys put probably use only for
78:21 - updating existing things
78:22 - and then use post for adding a new movie
78:26 - yeah but let's let's avoid that rabbit
78:29 - hole for now
78:29 - and let's jump straight into graph
78:33 - q l so sunny want to touch base on this
78:37 - yeah so this is a really nice diagram
78:39 - here which actually explains it quite
78:40 - well so we spoke a lot about like
78:42 - front-end back-end so when we talk about
78:44 - front-end we're talking about the client
78:45 - we're talking about back-end we're
78:46 - talking the server
78:47 - so the client is the top half of this
78:49 - diagram and the client is basically like
78:51 - the netflix clone or like the amazon
78:53 - clone like
78:54 - it's the front end it's what the user
78:56 - sees right so in this case we either
78:58 - have it
78:58 - we either have the web or like you could
79:00 - be from coming from an ios or android
79:02 - device
79:02 - so here you can see you have like a
79:04 - website or or an
79:06 - app so a website or an ios and android
79:08 - app right now
79:09 - what what what makes graphql so powerful
79:12 - is that basically you can have um let's
79:14 - say we have a graphql client so in this
79:17 - case
79:17 - you can see in the middle where it's
79:19 - using something called apollo here
79:21 - right so apollo is a very popular
79:23 - graphql client and what it basically
79:25 - does is
79:26 - you can basically plug so a bunch of
79:29 - different services
79:30 - into that graphql client right so
79:32 - imagine we had
79:33 - a bunch of different rest apis a bunch
79:35 - of different micro services a bunch of
79:37 - like and the database
79:38 - all go into that graphql api and then
79:41 - basically you code up
79:42 - that that graphql api in a certain way
79:45 - and it basically allows the front end so
79:47 - the web or those apps
79:49 - to ask for the data it needs in a really
79:52 - really simple way so kazi if we can go
79:55 - over to graphql the website
79:57 - they actually have some really nice
79:58 - visuals on there
80:00 - which explain this really nice and i
80:02 - think that will actually help a lot of
80:03 - people out
80:04 - so it's a query language for your api
80:07 - it's basically the really nice way to
80:08 - put this and if we scroll a little bit
80:09 - down
80:10 - here you can actually see it says ask
80:12 - for what you need
80:14 - get exactly that so you can see here
80:16 - guys you pretty much just pass in so
80:18 - let's say you need the uh the hero of
80:21 - from a
80:21 - film and you need their name and height
80:24 - right you pretty much just type that in
80:26 - so you see we need the hero we need the
80:27 - name and height
80:28 - and then it goes and scans your whole
80:31 - basically back-end so like your rest
80:32 - apis the databases microservices
80:34 - and it will go ahead and grab that for
80:36 - you whoa now obviously there's some
80:38 - setup to get this working
80:39 - but it's very powerful once you once you
80:41 - get this set up and working in the way
80:43 - that you need it
80:44 - and it means that you can also basically
80:46 - if we scroll a little bit down so this
80:47 - is another that is
80:48 - so clean how they visually show like how
80:51 - from the actual app or whatever you can
80:53 - just do that
80:54 - and then look how it gives you that data
80:55 - back that's such a nice visual
80:57 - really nice right like from many
80:59 - different services it can just like
81:00 - from one request pull in so much
81:03 - information
81:04 - um and also guys it's it's type friendly
81:07 - so if you've ever used something called
81:08 - typescript
81:09 - um or like if you're coming from a
81:11 - javascript graph apis are actually
81:14 - organized in terms of types fields and
81:16 - not end points
81:18 - what yeah insane that's insane so no
81:21 - so you're not basically doing the base
81:23 - url and all that crap here
81:25 - like how in apis you gotta use a base
81:28 - url and then you gotta use like
81:30 - slash you know hero like you know what i
81:32 - mean
81:34 - yeah so here you don't you pretty much
81:35 - just me you have this one beautiful
81:37 - request which is on the left
81:38 - you can see it's just saying hero and
81:40 - you all you do is
81:42 - specify the fields that you want so
81:44 - literally you say i want the name
81:46 - inside of the friends this is actually
81:48 - like way like i actually want to use
81:51 - graphql actually now way more than um
81:56 - yeah it's insane dude and now what you
81:57 - can actually do is i've seen people
81:59 - hook firebase's database up to graphql
82:03 - or i think they did it using they've
82:05 - done it in a very clever way but you
82:06 - basically get firebase with graphql
82:08 - which is insane
82:10 - um yeah so you can do that and also
82:11 - graphql gives you a very nice sort of um
82:14 - developer tool experience so here you
82:16 - can actually sort of you get this sort
82:17 - of uh
82:17 - playground sort of experience um once
82:20 - you've got it up and running and you can
82:21 - just test it by basically
82:23 - you can run like these queries against
82:24 - your own database and stuff like that
82:26 - and it and it goes ahead and pulls that
82:27 - information in for you so you can see if
82:29 - it's working
82:30 - see if anything's broken it's so
82:32 - powerful guys like is this is a real
82:34 - need for this and a lot of big companies
82:36 - are using it um
82:38 - and yeah it's really really something
82:40 - that you you
82:41 - recommend you do learn if you go down to
82:43 - the bottom cause it actually shows you
82:45 - who's using graphql right now evolve
82:48 - your api without
82:49 - versions dude what is this thing i want
82:52 - to use it
82:54 - yeah it's crazy right like you can
82:55 - actually evolve it and it won't damage
82:57 - the existing queries
82:59 - it just sort of upgrades them to sort of
83:02 - add the information and wait hold on
83:05 - so damn that is awesome
83:09 - wait it can create your api from just
83:11 - the code itself
83:12 - like if i just gave it code and it had
83:16 - functions and all that because it seems
83:17 - like i'm not even doing anything to to
83:19 - do that and it's creating the api or am
83:21 - i wrong on that
83:22 - um it depends so you're i think you
83:25 - basically provide something called a
83:27 - schema
83:28 - in graphql um where you basically map oh
83:31 - i think i'm not actually entirely sure
83:33 - it might have changed since the last
83:34 - time i used that
83:35 - but they all i know is that they have a
83:36 - very clever way of doing this so
83:38 - i think it'll be something really really
83:39 - good that we can go ahead and sort of
83:41 - play with uh
83:42 - soon okay but you can see here guys
83:44 - facebook
83:45 - github pinterest intuit coursera shopify
83:48 - all of them are using graphql and also
83:50 - every company i've worked in
83:52 - also has used graphql so it's something
83:53 - which is definitely
83:55 - um highly used and very powerful that's
83:57 - amazing
83:59 - i love this yeah yeah i'm glad we shared
84:01 - the website
84:03 - awesome yeah really really nice so learn
84:05 - learn that skill guys that's number nine
84:08 - okay learn this skill and then a number
84:10 - 10
84:11 - we have is server side
84:14 - rendering so why is this an important
84:17 - skill
84:18 - to learn sunny why server side rendering
84:22 - yeah so server side rendering is is a
84:24 - technique right it's a technique
84:26 - for rendering client-side apps right so
84:29 - so when we talk about whenever you hear
84:31 - server-side rendering
84:32 - it's a technique for rendering something
84:34 - called single-page apps
84:36 - so can you can you can can um so for me
84:39 - what helps for me is like
84:41 - are any of our apps that we have up
84:44 - right now
84:44 - using server side rendering or no no
84:48 - no no but if we we can demonstrate it
84:50 - with it so let's go ahead and go to this
84:52 - one right now so let's go to our netflix
84:54 - app
84:54 - and this will hit refresh yep
84:58 - yeah so let's do a refresh so you can
84:59 - see guys when it popped in you see
85:01 - everything sort of popped in and then
85:02 - there was loading and there was a bunch
85:04 - of stuff which happened right so let's
85:05 - do it again
85:07 - yeah yeah so kazi's got quite a fast
85:09 - internet connection over on his side
85:10 - right now
85:11 - so it's quite it's going to be quite
85:13 - hard to tell right yeah but
85:15 - what actually is happening right now is
85:17 - the website loads right
85:18 - and then it's going ahead and making all
85:20 - of these additional requests
85:22 - to go ahead and get information right
85:24 - it's going ahead and making an
85:25 - additional request
85:26 - to go and get like the the film that we
85:28 - see there cursed
85:30 - dark desire right here yeah star wars
85:32 - yeah
85:33 - it goes ahead and makes all those
85:34 - different quests right but what you can
85:36 - actually go ahead and do is use
85:37 - something like
85:38 - next js which is a server-side rendering
85:40 - um
85:41 - is one of the most popular tools that
85:43 - you use when you're server-side
85:44 - rendering
85:44 - and basically what it does is when you
85:47 - make the request to even
85:48 - go on to the netflix clone website it
85:52 - pings a server where next.js is running
85:54 - right it will ping a server when xjs is
85:56 - running
85:57 - and it basically will go ahead and do
85:59 - all of this rendering so all of the
86:01 - loading and stuff like that on that
86:02 - server
86:03 - which is going to be extremely fast
86:06 - right because that server is going to be
86:07 - like highly maintained in a very fast
86:09 - environment et cetera
86:10 - and then it will do everything and and
86:12 - you can even do things like caching it
86:13 - so
86:14 - imagine like it does the really
86:16 - expensive calculations once to load up a
86:18 - really heavy website
86:20 - and then it just basically every react
86:22 - app the way to think of it is
86:23 - what what you're seeing right here is
86:25 - just one bundle
86:27 - right the entire thing is called a
86:28 - single page app so even if you have
86:30 - different pages to a website it's just
86:32 - one bundle right
86:33 - but that bundle when you don't have
86:35 - server-side rendering takes a long time
86:37 - to load
86:38 - even though it looks pretty quick it
86:39 - does take a long time to load and
86:41 - what that affects is how quickly you can
86:43 - actually start using the web page so we
86:44 - call that time to interact
86:46 - yeah and when you're building production
86:49 - websites that time to interact is so
86:51 - important guys
86:52 - right so you want to get the time to
86:54 - interact down because imagine you're
86:56 - you've gone to amazon and for example it
86:59 - was just loading
87:00 - it was loading and you're sitting on
87:01 - amazon right yeah and like you you could
87:04 - literally lose customers at that point
87:05 - because they nobody likes to wait on a
87:07 - loading screen right
87:08 - but if you do server-side rendering all
87:10 - of the heavy lifting is done elsewhere
87:12 - and it will literally just like as soon
87:13 - as you hit amazon it will literally just
87:15 - ping you the amazon sort of bundle which
87:18 - they've already done on their site or
87:19 - they've already sort of loaded it up
87:21 - it will send it to you and it's super
87:23 - fast right
87:24 - so it's really really fast let me go
87:25 - ahead and see
87:27 - let's go ahead and show something called
87:28 - next js and let me see if their
87:30 - website's actually um
87:32 - quite handy so yeah if you go ahead and
87:34 - open up the next js website
87:36 - so nextgs is something which is really
87:37 - powerful i've used it um in a company
87:39 - called tesco which is like the walmart
87:41 - in america
87:42 - and they use it over there wow and the
87:44 - reason why
87:46 - yeah they use it then it's like you can
87:47 - see here guys it's the react framework
87:50 - so
87:50 - it's a react framework firstly so again
87:53 - we're touching base on react
87:55 - it's good for static websites it's good
87:57 - for seo
87:58 - so seo this is huge i completely messed
88:01 - it i missed this guys
88:02 - so when you have google web scrapers
88:04 - right google the way it sort of
88:06 - crawls the internet is that it basically
88:09 - goes ahead
88:10 - and it basically like with these web
88:12 - scrapers record it goes in and it clicks
88:14 - on links and it basically
88:15 - checks what the contents of that link is
88:18 - right
88:18 - now when you have a react page we see it
88:21 - load in front of us but when
88:22 - like a web scraper opens it and loads it
88:25 - it doesn't actually
88:26 - show everything right but if they if we
88:28 - do implement server side rendering
88:29 - when the web scraper opens it they get
88:31 - the entire bundle
88:33 - right so they get all of the text all of
88:35 - the images everything
88:37 - whereas if a web scraper goes on it and
88:40 - it's a client and it's not it doesn't
88:41 - use server-side rendering
88:42 - they don't get all the text straight
88:43 - away it has to load and basically that
88:46 - damages your search ranking in google
88:48 - which means that you don't come to the
88:50 - top of your google searches basically
88:51 - this will like
88:52 - boost up your seo by a lot if you're
88:55 - using something like next.js
88:57 - exactly exactly that's awesome yeah
89:00 - that's awesome it will really boost it
89:01 - they do things like uh so if you scroll
89:04 - a little bit down
89:05 - there's something called automatic code
89:07 - splitting which is huge
89:09 - so imagine so code splitting is
89:11 - essentially where
89:12 - you only are going to import um
89:15 - what you need so imagine we're on like
89:17 - the homepage right it's only going to
89:19 - show you
89:20 - it's only going to sort of like pull in
89:22 - the information which is on the home
89:23 - page
89:24 - so and it does this ingenious ways right
89:26 - it does it in really clever ways
89:27 - so imagine we've got a bunch of modules
89:29 - inside of an app so we have like 100
89:31 - modules
89:32 - if the home page only uses three of
89:34 - those modules
89:35 - then it's actually going to only load
89:37 - three modules oh
89:38 - wow that is changing that's crazy right
89:41 - that's really crazy
89:42 - and it splits out and i don't know how
89:44 - they do that like it's really genius how
89:46 - they they built that
89:47 - but um that's called code splitting and
89:50 - that's something which is really
89:51 - powerful and you can see here when cars
89:52 - you click more
89:53 - you've got all of that stuff which
89:54 - there's a bunch of other stuff
89:56 - um and they sas is included which is
89:58 - like this
89:59 - this sort of advanced css technique um
90:02 - dynamic routing so you can see there
90:04 - we've got roots supported so if you had
90:06 - forward slash blog forward slash
90:07 - like a random idea you could that's
90:09 - supported out of the box
90:11 - typescript is supported out of the box
90:12 - um so there's a lot of things which are
90:14 - used
90:15 - it has got a little bit of a learning
90:16 - curve when you when you start going into
90:18 - um
90:19 - server side development but scroll down
90:22 - qazi and this is where you see the
90:23 - demand for it
90:25 - look at that all of these websites are
90:28 - using server side rendering
90:29 - like these are huge websites guys like
90:31 - twitch docker hulu scale github netflix
90:35 - like or coinbase like there's a lot of
90:37 - cryptocurrencies i can see here like
90:39 - these losses i spend a lot of money on
90:41 - finance fame i use binance
90:44 - twitch damn i did not know twitch was
90:47 - using this
90:49 - wait really really yeah so starbucks
90:52 - uber
90:53 - yeah docker wow so this is yeah this is
90:56 - powerful so this is um
90:58 - i mean i even want to pick this up
91:00 - because i'm new to their whole
91:02 - react world but i want to pick up how to
91:04 - use next
91:05 - in our apps and just make them lightning
91:08 - fast
91:09 - yeah exactly wow oh nice they actually
91:12 - have a showcase at the bottom
91:14 - oh that's cool yeah oh
91:17 - take time but it's going yeah tick tock
91:19 - i saw that that's amazing right
91:21 - yeah wow but guys this is essentially
91:23 - going to allow you to have
91:24 - lightning fast websites um there are
91:27 - some things which need to be
91:29 - like considered when you're learning how
91:31 - to do server-side rendering
91:33 - but if you guys are interested in that
91:34 - then let us know and we can go ahead and
91:36 - like like as you said it will be
91:37 - interesting for us to both learn this a
91:39 - bit more and get
91:40 - more ingredients involved in this by the
91:42 - way guys but
91:43 - it was this is this exciting for you
91:45 - guys like is this actually valuable
91:48 - please let us know in the comments like
91:50 - where you guys mind at after finding out
91:52 - about all of this information like the
91:54 - top 10 things that we covered right
91:56 - we talked about server side rendering we
91:57 - talked about graphql we talked about
91:59 - flexbox
92:00 - we talked about rest apis why that's
92:02 - important talk about command line
92:04 - node.js why you guys need it we talked
92:06 - about firebase and how this is so
92:08 - valuable for your backend and hosting
92:10 - and all of that we talked about the
92:12 - redus technology
92:14 - we talked about git why you need to use
92:16 - it and of course we talked about react
92:18 - so was this valuable to you guys drop it
92:21 - in the comments below
92:22 - and just let us know that this gave you
92:24 - value or maybe what was your number one
92:26 - biggest
92:26 - insight so we want to hear from you do
92:28 - it now
92:30 - exactly and guys if you did find value
92:32 - in this remember like smash the thumbs
92:34 - up button because if you found value in
92:36 - it
92:36 - then it's going to help other people
92:38 - find the video and also see the value
92:40 - that you got from this video so
92:41 - definitely smash it if you if you
92:43 - enjoyed this and you found this was
92:44 - something new
92:45 - even if you learned something new guys
92:47 - smash the thumbs up button
92:48 - yeah do that uh ian asks can you use
92:52 - node.js for server side rendering what
92:54 - do we think
92:55 - sunny um yeah so i would say the way to
92:59 - think of this remember node.js is
93:01 - backend
93:02 - um so yes yeah yeah the answer to your
93:05 - question is yes
93:05 - right awesome yes because yeah it's
93:08 - empty yes
93:09 - awesome david jacobs i love that he says
93:11 - i've learned a lot from this today i
93:13 - learned more than i
93:14 - ever expected that is beautiful that is
93:17 - exactly the caliber
93:19 - that we're trying to go for guys and
93:20 - we're just gonna be keep this coming
93:23 - every day every day non-stop and we're
93:25 - gonna keep producing at this caliber for
93:27 - you guys
93:28 - but again your participation is what
93:30 - really engages us and gets us to want to
93:32 - do this
93:33 - every day so thanks for that and we're
93:35 - just going to keep rapid firing through
93:37 - this
93:37 - uh one of the facebook uh one of our
93:40 - people on facebook say yeah you need
93:42 - server-side rendering was new to me
93:44 - so so this was so valuable thank you
93:47 - amazing nice that is great um
93:51 - somebody asks what about the course do i
93:53 - learn it all there so sunny what would
93:55 - you say
93:57 - right so yeah guys a lot of the things
93:59 - we spoke about today
94:00 - we actually cover this so guys remember
94:02 - it there's the whole web development
94:05 - space is so dynamic right
94:07 - so we actually go ahead and cover this
94:08 - inside the course inside of the
94:10 - coaching course so the coaching course
94:12 - we have four weekly live coaching goals
94:15 - inside of the course
94:16 - and inside of this coaching course we
94:18 - pretty much cover what's trending
94:19 - what's new what's going on in in this
94:21 - web development world and we build that
94:23 - stuff
94:24 - in real time with you guys yep so i go
94:26 - through um i do that i hold a bunch and
94:28 - unlike
94:28 - unlike youtube you guys literally get to
94:31 - speak to sunny
94:32 - like you will actually get to talk to
94:34 - sunny live and ask
94:35 - these questions so right now even though
94:37 - it might feel like there's this like
94:39 - barrier between us like on the zoom
94:42 - calls you guys will be actually speaking
94:44 - with us
94:45 - as we help you every single week build
94:48 - these massive projects
94:50 - and then once you guys go ahead and
94:52 - build projects or you complete your
94:53 - homework
94:54 - you will get personalized video feedback
94:57 - from
94:57 - javascript success coaches myself and
94:59 - the rest of the team
95:00 - and we actually go in and give you some
95:02 - personal video feedback
95:04 - on on the breakdown of your code what
95:06 - went well what could be you can create
95:08 - all of the things like that yeah let's
95:09 - prove it to you guys right so this is
95:11 - where a lot of you guys submit projects
95:13 - to us so look at that we have tons of
95:14 - projects right and people are submitting
95:16 - us to all their projects like
95:18 - what they're building right so if i keep
95:19 - showing you guys these apps that
95:21 - students are building and sending it to
95:23 - us then you know whether somebody lafan
95:25 - just built a netflix clone following
95:27 - what we did
95:28 - uh z sean is building his portfolio and
95:31 - he's sharing it with us
95:32 - right so we have all these and then
95:34 - somebody built the covet tracker
95:35 - following like one of our apps
95:37 - and so here's one thing i want to show
95:39 - you guys so take a look at this pretty
95:40 - cool
95:41 - it's super fancy works fast now if we go
95:44 - over on the right hand side you guys
95:46 - look at this we're actually providing
95:47 - everybody with a personalized video
95:49 - feedback
95:50 - so here's tatiana providing one of the
95:52 - video feedbacks for one of the students
95:55 - and if i skim through this look she's
95:57 - going through
95:58 - she's talking about what she thinks
96:00 - about this project
96:01 - how this app can be improved um and then
96:05 - also giving him feedback on what he
96:07 - needs to do next to
96:08 - improve so guys let me ask you what
96:11 - would it do for you what would it mean
96:12 - for you if you were submitting your
96:14 - projects and you were getting
96:15 - personalized video feedbacks from us
96:17 - giving you
96:18 - insights on exactly where to improve
96:21 - i mean that alone can literally land you
96:24 - a job because you would improve
96:25 - so damn fast i mean where else sunny can
96:28 - people get
96:29 - video feedbacks on their code where else
96:32 - can that happen
96:33 - like i mean like guys the way i like to
96:35 - put this is basically how many of you
96:37 - guys have
96:38 - gone to like stack overflow and been
96:39 - just like shot yourself in the footwear
96:41 - you ask a question
96:42 - and the only thing we've all been there
96:44 - right we've all been there we go to
96:45 - stack overlook we ask a question
96:47 - and we just feel very stupid afterwards
96:49 - because like nobody helps us or that we
96:51 - don't get answered to that question
96:52 - but here guys you get personalized video
96:55 - feedback
96:56 - for every question for every assignment
96:58 - if you want to jump on a coaching call
97:00 - you have a
97:00 - zoom call where you can literally shout
97:02 - out as many questions as you want and we
97:04 - can go through it as a massive team we
97:06 - can go through and discuss your
97:07 - questions
97:08 - everything is heard and listened to and
97:10 - it's addressed one-to-one which is is
97:12 - something which you're just not going to
97:13 - get anywhere else
97:15 - no so this is why guys if you're serious
97:17 - about like
97:18 - you're having a career as a developer
97:21 - and the fact that like yes we give you
97:23 - the non-stop
97:24 - training and the hand-holding and the
97:25 - community yes we give you the
97:28 - training modules one of the most
97:30 - important things is we teach us
97:31 - actually how to make an income with this
97:33 - right guys so like for example
97:35 - let's just if i go to upwork right now
97:37 - and i go into jobs and we type in react
97:40 - js right something like this like you
97:42 - guys can see that
97:43 - jobs start to come up instantly looking
97:45 - for a react node developer one to three
97:48 - months and we're and they look look at
97:49 - this they're even like
97:51 - there's amazon right we actually show
97:53 - you how to build amazon
97:54 - look they're talking about redux here we
97:56 - teach you redux
97:58 - all of these things that we've actually
97:59 - shown you and today we even talked about
98:01 - aws rest
98:02 - serverless all of these things are
98:05 - actually their jobs people are
98:07 - looking and applying for these jobs and
98:10 - hiring people for all of this stuff
98:12 - right this second so our thing is we
98:15 - don't just want to teach you
98:16 - and give you knowledge that's useless i
98:18 - mean knowledge plus
98:20 - four dollars can almost get you a
98:21 - starbucks our main
98:23 - thing here is the fact that we take your
98:26 - coding skills and then show you
98:28 - literally how to get
98:29 - those jobs on upwork on freelancer.com
98:32 - or even how to get actual full-time jobs
98:37 - yeah exactly and guys just this isn't
98:39 - actually just something we say like
98:41 - i love every single time i get a message
98:44 - from one of our students
98:45 - where they land a client or they land a
98:47 - job and the amount i've gotten so like
98:49 - it's actually become like a normal thing
98:51 - now like the amount of times that we i
98:53 - have a student reach out saying
98:54 - hey i'm in the final round of an
98:56 - interview and then i'll send me a
98:56 - message saying hey i got the job or like
98:58 - hey i landed a client and the other day
99:00 - i had somebody in sri lanka
99:02 - who actually made an entire month's
99:05 - salary
99:06 - in one week's worth of work which was
99:08 - insane
99:09 - that really is
99:13 - if he made the entire month's salary in
99:16 - one week
99:17 - he's actually moving on the timeline of
99:20 - his entire lifespan
99:21 - he's moving 4x as fast so what that
99:24 - actually means guys is he and in four
99:27 - years
99:28 - from what he's learning from the course
99:30 - he's gonna achieve the same results that
99:31 - he would have achieved in 16 years
99:34 - right like that's how you should think
99:36 - about time in the long
99:38 - time span of things this is a power of
99:40 - like when you learn something or you
99:41 - have a mentor or whatever like
99:43 - on our live streams we even have steve
99:45 - uh or stephen
99:46 - he comes and he drops tons of value
99:49 - imagine if you're actually learning from
99:50 - him directly the people under steve's
99:52 - mentorship are moving
99:54 - at a timeline their timeline of learning
99:56 - is shrinking
99:57 - so what those people would have come to
99:59 - learn on their own in seven
100:01 - six years under steve to learn it in one
100:03 - year
100:04 - massive massive value right because look
100:08 - you can get your money back
100:10 - money is replenishable but time time is
100:12 - not replenishable
100:13 - time just goes away and then never uh
100:16 - comes back so
100:17 - if you guys are interested you got value
100:20 - out of this what i'd highly recommend
100:22 - is click the link in the description
100:24 - below
100:25 - and check out our course profit with
100:28 - javascript as a matter of fact you
100:29 - should just go and do that
100:30 - right now if you're on here and jump in
100:33 - the course we would love to see you
100:35 - inside and we'll
100:36 - provide you with just tons of value so
100:38 - at this point click that link and
100:39 - jump inside of the course yeah yeah
100:42 - right now guys
100:43 - and one thing i want to add to that
100:45 - right guys this is something i can't
100:47 - stress enough
100:48 - the the literally the point in my
100:50 - development career where
100:51 - i really noticed i excelled was when i
100:54 - had good mentors around me right
100:56 - now finding a good mentor is actually
100:59 - really quite a difficult thing
101:00 - especially when you're nuked to coding
101:01 - right
101:02 - but in profit javascript you don't just
101:04 - get one mentor
101:05 - you get me you get cars you get nars you
101:08 - get jacob you get the entire success
101:10 - coach team you get
101:11 - everyone inside of that inside of the
101:13 - course and they will
101:14 - everyone is your mentor at that point so
101:16 - like literally you can there is like
101:18 - there is a recipe for just
101:20 - nothing but success in the inside of the
101:22 - course like in terms of you can
101:23 - literally reach out
101:24 - and guys there's no like hierarchy here
101:27 - in terms of like if you need to message
101:29 - me and say hey sonny i need help on my
101:30 - assignment or hey son you need help with
101:32 - my homework
101:33 - just send me one message and we can jump
101:35 - on a call
101:37 - that's it we'll jump on and we'll
101:39 - actually help you
101:41 - sophie asks i want to know does age
101:43 - matter
101:44 - i'm 27 and looking for my first react
101:48 - job really good question
101:51 - do you know how young my first student
101:53 - was and they uh
101:54 - they were 12 years old right 12 years
101:57 - old a reaction 12.
101:59 - all right 12 years old landed his own
102:02 - school
102:02 - as his client so age does not matter
102:05 - there is no you can't be too young
102:07 - you can't be too old he made some good
102:10 - money from that job as well like guys
102:11 - market doesn't
102:13 - mark the market doesn't care about your
102:15 - age it doesn't care if you're 80 it
102:17 - doesn't care
102:18 - if you're 15 or 12 the market only cares
102:21 - that you can bring
102:22 - value to the world so eight your age
102:25 - nobody cares about they only want to
102:26 - hire on the skills and the value you can
102:28 - bring but keep going sonny
102:30 - no exactly exactly that yeah so honestly
102:33 - like age guys at this point
102:35 - does not matter and you really really
102:37 - don't have to
102:38 - um to freak out about the sort of age
102:41 - like if you
102:41 - if you have a sort of any doubts just
102:43 - think to yourself scrap it to the side
102:45 - and just start my main advice is
102:47 - whatever age just start you're never too
102:50 - old
102:50 - that's it never too old uh thank you
102:53 - guys for coming on somic says i just saw
102:55 - a video of your
102:56 - master class and he goes that was just
102:58 - great
102:59 - thank you guys for coming on we really
103:01 - appreciate your guys's energy
103:03 - participation
103:04 - questions um just the care that you guys
103:07 - bring
103:08 - we really really appreciate you guys
103:10 - thank you guys so much
103:12 - at this point if you're here and you're
103:13 - curious guys jump in the program profit
103:16 - with javascript we love your beautiful
103:18 - face
103:18 - sonny is there anything else you want to
103:20 - say no i can't stress it enough guys
103:23 - like we want to speak to you guys and we
103:24 - want to get in conversations with you
103:26 - guys which is why we love it when you
103:27 - guys tag us in your instagram stories
103:29 - um but like we said check out the link
103:31 - in the description
103:32 - go and check out prophet javascript
103:34 - worth mentioning guys
103:36 - like literally there is nothing to lose
103:38 - like you have a 30-day money-back
103:40 - guarantee
103:40 - so on the 29th day 59th minute if you
103:43 - still feel like
103:44 - oh this isn't really for me you can go
103:46 - ahead and just go ahead and get your
103:47 - money back like when when there's that
103:49 - guarantee behind it
103:50 - i just think you have 29 days of free
103:53 - training
103:54 - like literally 29 days of free training
103:56 - 29 days to make your mind up as to
103:59 - whether or not it's good enough
104:00 - but do not just miss out on it because
104:02 - i'm telling you this could be
104:03 - this is this is going to be the decision
104:06 - that changes your life
104:07 - yep and i love what james said he says
104:10 - the market does not care about your age
104:11 - he's just like what matters is he can
104:13 - bring value to the world
104:15 - wow exactly exactly reyes
104:18 - i think this is a great question he asks
104:20 - he says i would like to know
104:22 - if um i can learn react.js and i can get
104:25 - the job where i am living
104:27 - in houston yep so
104:30 - yeah honestly guys this is the beautiful
104:32 - thing about being a javascript developer
104:34 - and react in particular like
104:36 - you can work from anywhere guys and you
104:38 - can land clients anywhere
104:39 - so if you're based in asia if you're
104:41 - based in let's just say in like you
104:43 - could be based in india you could be
104:44 - based in like america
104:45 - you could be based in london you can get
104:48 - clients anywhere else in the world like
104:50 - you could land a uk
104:51 - client you could land a u.s client you
104:52 - can land jobs um with any of these guys
104:55 - and you could yes so to answer your
104:57 - question if you're based in houston
104:59 - then you can get any job in any part of
105:01 - the world and this is actually something
105:02 - which leads on to
105:03 - um something called a nomad lifestyle it
105:06 - actually opens the door for something
105:07 - which a lot of people do
105:08 - where they pretty much just travel
105:09 - around and i know a lot of friends who
105:10 - just lit they just travel around
105:12 - they live in thailand for a year and
105:14 - they pretty much just code right
105:16 - so if you know this skill you can pretty
105:18 - much do that as well so if you ever
105:19 - wanted to go traveling
105:20 - this is going to open that door for you
105:22 - and you can actually start traveling
105:23 - around and carry on coding and making an
105:25 - income
105:26 - that's right um guys thank you so much
105:29 - for being on here
105:30 - we appreciate you and love you so much
105:33 - as always this is qazi this is sunny
105:36 - guys
105:37 - and we will see you in the next in the
105:39 - next
105:40 - video peace right peace out guys

Cleaned transcript:

going guys many of you guys know who i am as the react coding guy on youtube so let's go just jump in quasi awesome so guys today we're going to be talking about the top 10 skills that you guys are going to need to master to land a job as a javascript developer so if you are ready let's jump right into it boom so hopefully let's just get started guys um you guys saw a bunch of our tests before we go live you know we like to just make sure we're prepped up but guys let's just jump straight into the content so quarantine javascript if you guys master these 10 skills that we're going to show you today and truly master them this can practically guarantee that you actually get a job as a developer sonny what are your thoughts on this 100 like the skills that we're going to go through today guys like if you guys master these skills right and you practice them and you put in the time and effort we can promise you that these skills are going to actually get you from becoming like you can be a beginner at this point but work your way through this list and you will guaranteed land a job as a javascript developer whether it be a freelance or a permanent position you can be sure that if you've got these skills on your list you're gonna land something beautiful awesome so guys that's what it is now we are really excited to share all of this with you guys if you guys can do us a favor right before we jump in is if you are pumped about this content please just go make sure to smash that like button and why is that important why is that helpful for us sonny what was that why is it helpful why is that helpful because guys like if you smash the like button then more people are going to see this video so if you're finding value from it then imagine how many other people can get value from it so smashing that like button is going to send the youtube algorithm some crazy fire and then it's gonna get this video out to more and more people so that more of you guys can love the stuff and we can actually start producing more of it because we know you guys love it that's it right we don't even want a dollar from you all we want is if you can just smash that button the beautiful thing yeah it just really helps us you know we spend hours and hours preparing this content and so we just want more and more developers to be able to get value out of it especially during a time like this the crazy time that we're going through right now guys with that said i mean i see a lot of you guys are pumped we got nas here aaron is here you know a bunch of people who are excited to be here and thank you guys we appreciate you but we're gonna just make sure we give you the most value for your time and we're gonna jump straight into the content so here are the top 10 skills and we're going to start to list some of them out so the skills javascript developers actually need to know today guys and this is not only relevant for 2019 but this is also relevant for 2020 right sunny exactly this is fresh guys like this is what we're gonna run through right now is applicable today so today it takes effect yeah yep um awesome so give me one second over here yep so guys if you guys are excited drop some comments let us know if you guys are enjoying these live sessions um while we get prepped for today's live talk um awesome you guys so we just got a awesome setup frankie over here is hooking me up with the mouse which is really helpful because i just want to make sure you guys get the best experience so guys all of these skills we're going to be talking about in today's video okay we're going to talk about why react is so important for all of you guys to actually pick up we're going to talk about why you know node.js we're going to talk about git redux typescript aws or it's basically the thing that we like to use instead of that which is firebase rest apis and many many more things this is just to give you an overview of what we're going to be talking about and this is literally being pulled from job listing so this is currently what people are looking for exactly exactly so some of what are some of these things we're going to be talking about sunny yeah so let's run through a quick list guys so the number one thing if you guys have been watching these videos you know right now react is on fire guys so the number one skill that we're going to be talking about is why you should know react what are the benefits of it and why it's going to guarantee you landing some kind of job inside this space so react.js is number one on our list and we will be covering a bunch around that so if you're excited drop some fire for that number two yeah number two is redux guys so we've actually used the react context api in some of the builds i think we used it inside of the amazon build that's the one we used it for um so the react context api is very similar to redux guys but redux is pretty much what you're going to be using inside of a professional working environment and it's essentially a data layer for your react app so we're going to talk about why you need to know that and the sort of perks and benefits of that and number three kazi what we got there we're going to be talking about git you guys and git is version control it is so important the time machine for developers so we're going to be going a little bit deeper into git it's going to be really valuable also on the chat side guys the nightbot chat moderator that i got is a little bit aggressive so i apologize because some of you guys are just genuinely excited and it's going to give you warnings so please don't be turned off by that i appreciate you here i'm gonna like make it a little less sensitive in the future but git is extremely valuable skill as a developer i think if you're a developer you kind of have to know this there's like very few developers i know that have jobs that don't have the skill of git all right what else we got sunny so we have firebase so this is actually a personal favorite of mine so when karsi showed that graph earlier we had aws inside that list firebase is actually something which isn't really spoken about as much as it should be but guys don't be fooled firebase is something which is going to be on a fire soon enough and there's not enough quality tutorials out there right now so all of the tutorials that we show really do take advantage of them because i wish i wish i wish i wish that there was more of those available especially when i was learning firebase and kazi like you've used firebase what do you think about firebase firebase is absolutely ridiculous one of the most powerful things you guys like you know what uh if i can actually pull that up right over here and like open up some of this stuff like guys we built an amazon clone a few days ago and this is all you know a bunch of this is we're actually using firebase for this and even hosting this we're using firebase uh yeah and so for a lot of the things that we built over the last few weeks even like the messenger facebook messenger clone that we built for you guys that's also using this messenger clone over here is also using firebase you guys and so pretty much everything you can build you can do it with this and it's yeah we're gonna again we're gonna go deeper into that but this is just the kind of road map for you guys what we're gonna be talking about today the next one on the list is node.js guys so all of us have been like sort of practicing and messing around with react react is the front sort of uh front end so like sort of clientside javascript that we call it and now you've got like back end code right so previously like in other languages you you would have used like java python in the back end but right now what you can actually do is you can actually use javascript across your front end and your back end and what we call this sort of back inside of javascript is node.js so that's why you're going to need to know that and you can also see you must like many of you guys if you've heard of the man stack i see a lot of people going crazy about the mern stack right now you're going to need to know node.js if you're interested in learning that yes exactly and another thing guys something that we're doing interactively this time we've never done before if you guys actually want to follow us live uh we actually gave you guys access to um all of these slides so you guys can actually see what slides we're on right now and follow along if you want to do that or if you just maybe want access to all the materials and the resources so you can look at it later in the description below is the link to the live slides click that and it'll just open up you don't have to register you don't have to give us your email none of that just click it and all the slides will be available to you and you will be able to see sunny and i in real time talking about these slides and changing it so go ahead and um check the link in description to to to click that and follow along exactly and that these are all the slides that you guys are seeing on the screen and it will be in real time sort of updating as we go through it yep awesome so did we touch on command line sunny we didn't uh the command line is actually one of your favorite areas quasi oh man go ahead i love the command line command line guys i mean it's super super important for developers to learn like it'll speed up and juice up your workflow and i think it's important for all developers to know how this works so whether it's like you trying to deploy your app online through firebase or heroku you're going to need to know command line whether you want to use git version control github all of that you're going to need to learn the command line how your pathing works and all your files and folders and structure works uh no running and skipping around this you might try to kind of run around it with like using a gui or something but all of those are bandaids this is something you're going to have to learn exactly exactly it's definitely one of those skills it could be very scary in the beginning guys but uh it's worth learning cool so rest apis are going to be something important we're going to go deep into that in this video we're going to talk about flexbox and how flexbox kind of allows you to like if i can show you guys our netflix clone that we built over here you guys can see how we used flexbox to make all of this stuff beautiful right and you guys can even check out this app but this is basically how we use flexbox so flexbox is super important we're going to dive deep into that and then you know talk to us a little bit about this last one or the ninth one here sonny uh yeah so the ninth one is graphql so this is actually quite a hot um sort of a hot query language right now guys what this does is essentially it sits in front of your api so it actually goes alongside with that rest api's number seven point and basically what it's going to be doing is it's an open source data query language and it basically guys allows the front end so all of your phones the websites that you guys are coding it allows it to ask in a very simple and easy way for data from your back end so it gets rid of all the sort of complexity that we used to face as frontend developers um by introducing graphql in between the sort of frontend and backend so we're going to go into that in a bit of depth and show you why a lot of companies are actually going crazy about graphql right now yeah it's absolutely insanity uh and then 10 ssr server side rendering so sunny speak to us on this a little bit as well as why you decided to put this in this list yeah so server side rendering is something that was relatively newly introduced to me about two three years ago and what it basically essentially allows you to do guys is when a web page loads typically we're used to it loading all on the client side right so as soon as you go on the web page it loads on the client side but without realizing a lot of websites are doing something called serverside rendering and what happens is all of the page is actually loaded on a server before it's sent to you so all of the heavy lifting is done on side on a server outside on for example a google server if you're using firebase or an amazon server if using aws and when it delivers it to you it's so much faster right yeah so especially when you're using something like react which is known as a single page app which is basically a little bundled app it basically all the hard work is done in on an offsite server and then once it gets delivered to you the speed the time to actually be able to interact with the web page is so so fast when you do server side rendering um but there is some things to consider here um but it's definitely something which is being used in a lot of jobs right now it's massive yeah yep now guys we're gonna go on to the first most important skill which is actually we think react so one of the most important skills to learn for javascript is react and kind of let's start talking about this so sunny why don't you start off with this yeah so for many of you guys who are new to react essentially we have three fundamentals in web development we have html css and javascript right once you know these three things you're going to run into situations where you pretty much are going to have to do the same things over and over again but the guys over at facebook thought let's do this smarter let's do this faster let's introduce a better way of doing this right so they built a library called react now react is massive is hugely popular it uses something called the virtual dom so many of us who have dived dove into web development before know about the dom right and the dom is basically where all of the elements on the web page live right react uses something called the virtual dom so it basically creates a clone of the the dom and it basically just this is the really clever part about react it just rerenders what needs to be rerendered on the screen right so imagine you have a list and you add to that list it's only going to rerender because what it does it checks its virtual dom it checks what you've added to that to that list and then it does a little comparison and then it basically gets everything um rendered in a really clean and and easy way right yep so which is why like if i actually write a comment over here hey this is an awesome post or something like that right and i post it and i hit enter what happens is it doesn't refresh any other comments on this page it doesn't refresh any of the other posts i have made on instagram if i hit enter literally it only just refreshes that page also or that comment now another cool thing that happened is the page never refreshed so like i've never had this moment where like the whole page refreshes all real time so if i type in another comment and hit enter you can see yeah only that thing loads and then sends it and boom done nothing else changed this is why instagram is such a phenomenal user experience and why billions of people download and use instagram and use facebook because it's using it's just an amazing experience for the user it'd be really frustrating if on your phone every single time you commented or something things refreshed very awful experience react can actually help you with those types of things and um all of the apps that we're showing you guys we actually built them using react yep and just to point out if we go back to that netflix app so there's a really important thing inside of react guys and that's reusable components so what you can actually do in react is you can write one component and reuse it several times by passing in different properties and we call that props in react right yeah so in this case you've got like a carousel that causes sort of hovering over right each one of those things is actually just one piece of code we just reused that code several times and we passed in different properties yeah and then you get this really nice code base which is reusable it's easy to maintain and it's going to allow you to actually grow and scale at a much faster rate which is why a lot of companies use it a lot of companies use it and it's similar to kind of like the jinja templating engine in django and python and if you guys have experience with shopify you guys know that language called liquid right um do you know about liquid sunny yeah i think we actually use liquid inside of uh i've used it inside of shopify and uh where we host the course at the moment yeah and so like liquid has that like a little templating type of thing so when i'm using react it kind of reminds me of that where i'm building these components and i get to reuse like with that snippet of code that's how i like to kind of think about it yeah that's a nice way of playing it but it's much more powerful than that guys because because of the virtual dom concept if you have different components so for example let's say we have this component here right so what's cool about a react app is let's say the header loads and let's say this banner loads but let's say these haven't loaded yet because it has to pull all this data dynamically what's cool about a react app is the app will actually start running even without this stuff being loaded there it'll start running with all of this because this is a different component so it won't wait for it to run and then as you're scrolling down boom this is being loaded on the fly in real time which is why you get that slick fast experience exactly so it actually has something called lazy loading outs out of the box which is what cars you mentioned so it will only load the components it needs to load in a really really efficient way and there's many techniques in getting this working correctly um with a lot of the new sort of react stuff so functional components all of the sort of react hooks this becomes quite a simple thing to actually get working and up and running yep so that's and then you know here's an another example of how we use this so let's go over here if we can open this up so you guys can see this product is just a component and this product card right over here and we just kept reusing this component in all of these different things that we built for you guys in this amazon by the way it's the amazon clone this is not the actual amazon website guys so what we built in the tutorial a few days ago yeah awesome so this is the power of this virtual dom that comes with react react is also very seo friendly and reusable components as what sunny was really highlighting and then i'm sure the debugging and testing and data flow is easier i don't know if you want to speak more to these points i want to kind of like touch on a little on the cons right now yeah uh one thing to mention before we touch on the cons so it is a really really nice to debug guys so a lot of us who have done web development before do know about the sort of pain and the suffering that we have when you can't figure out a bug react has a number of tools so they have a react profiler they have a react debugger there's a bunch of things that you can actually use as chrome extensions and that's going to make life so much easier for you when you're actually debugging and checking things out so you can see cars is pulling out right now you have a profiler and you have a components tab inside of a chrome and what that's going to do is actually breaks down and shows you all of the different components and also it even shows you the state and the props of that component at that given time so it's a really really nice way how to like you can d uh yeah dive deeply into sort of the component tree and see what's actually going on with your app nice i love that amazing really really nice cool so yeah all right any any other points you want to touch on here yeah i think actually i i gotta admit this this is a really nice visual but guys don't be scared by where it says jsx as a barrier jsx is actually something which is i wouldn't actually consider it a con i'd say it's really a power up of actual normal web development because it's kind of it merges html and javascript together and it gives you this really nice functionality where you can actually have dynamic javascript running inside of your html so i wouldn't actually take it as a con i would actually look at that as something which is actually a benefit of using react yeah i would see it as a benefit too like yeah it's gonna maybe like in this first second you might be confused right you're like oh my god class i i'd have to say class name like you know there might be like one or two things that are different but once you pick it up you're like oh my god this is so nice to be able to write actual code uh kind of like how you know when when i'm doing django i like being able to actually write django code right inside of my app and then when i was just using html css i'm like why can't i do that so like that alone made me want to go back to starting using django but that's super nice being able to do that in one place yeah exactly let's touch base on percentage of users who actually love the framework and use it again so here are a bunch of different frameworks we have here sunny so like why are the react users they're like mostly coming back to use this versus you know say backbone or you know angular so the reason why um is because react is so react is different to a lot of these different um sort of frameworks you can call them because react's actually not a framework guys it's a library and that means it's very lightweight so the entry into actually using react is so easy guys it's really light to pick up on rep because you don't need to learn everything at once whereas if you look at something like angular you need it's a framework you have to do everything according to how angular is built right in order to get an angular angular app right up and running it's actually quite a sort of intimidating process especially if you're new to it but if you're in react what you can actually do is um we actually got some slides um that i post over on instagram where you can actually just shows you how simple it is to actually get a react up and running react up and running so if we go ahead and look at this guys this is how you would get a react app up and running you literally run one command so here you can see it says mpx create react app you literally see the internet and then you just do npm start and that's it guys your app's up and running and it sets everything up for you and then after that you just need to pick up and choose and and learn what you need to learn at that point so it's very very that sort of entry into react is so nice it's really nice to code in it's really fun to go in it's actually the funnest one and i've coded in a bunch of these guys and check out the companies that are actually using react guys so that's actually huge uh that's this is a nice slide so like why react because many companies use it right and the job opportunities and the payoffs of salaries are really high so uber airbnb udemy khan academy twitter facebook netflix instagram all of these are actually using it so i think that's another thing that tells i think if i don't know much about programming it's helpful for me to know what companies are using it and it gives me insight into what my jobs potentially could look like right like a frontend developer um that works at netflix is actually making three hundred and six thousand dollars a year i don't know if you knew that yeah that's insane i didn't actually know that yeah literally i i looked up their salary and uh average frontend developer in on netflix that's actually their yearly salary damn and i think it's netflix they actually have a lot of their work as remote right now a lot of these companies have a lot of remote developers with them so that's that's even more insane that they're getting paid that here's a good question somebody asked just a little bit ago like hey is this for i can't find it right now but they asked is this for beginners oh yeah there we go so it's react also something that beginners can use very good question guys and i actually have a slide for that so in order to get started with react all you need to know guys is a basic understanding of html css and javascript right so you just need a basic understanding of those three things so yes it is for beginners and the one thing i would say is don't be afraid of react guys honestly it's one of those things where i always hear a lot of people saying oh i think i need to learn know a bit more about web development before i dive in i would honestly say flip it on its head and just go for it give it a go if you've done a little bit of web development before honestly just go ahead and give it a go you just need a basic understanding of html css and javascript and the reason why we have javascript es6 here is because a lot of the new features in react which make it so fun to code in are written using es6 es6 or features like arrow functions and stuff like that so uh the the bottom requirements are very simple installing node.js is literally clicking and click and play like it's very easy and you just need an internet connection that's it just start like honestly it's a beginner friendly thing you can go ahead and get started very easily that's right so just get started with that now let's move on to something so this i think i touch base on already i don't need to go too much into it but like here's tesla using react reddit and all these big companies so let's move forward now now i guess let's get into i think we kind of did a good job with how much we went into detail about react and why people should be using it i think let's now start diving into git and why people should be using git so let's go down here so sunny you want to talk about this yeah so we have three main things here guys and i've just broken it down for a beginner to understand very easily number one it's a time machine right and what i mean by that guys you push some code in there and then you have this sort of time machine of backups right so you if something goes wrong and let's say everything you you you can like you add features at this time like in this timeline you just add different features so let's say in the beginning cause he just built the login feature then he built the sort of um the post post feature but like what you would do is you would actually add in your features at different points and then what would happen is you would oh okay so imagine we had instagram right now right you would have a you would commit to so you would commit your different features to this timeline so for example we would have the ability to post on instagram we'd have the ability to comment on instagram and every time you push that code you basically create like a checkpoint right and if anything goes wrong guys you can actually go ahead and rewind to that checkpoint so this is really important because when you have a lot of money being put behind apps and you've got a lot of like customers that are using your apps you need very fast and robust ways of rolling back code um to make sure that if anything goes wrong you can put out that fire and rewind back in time so the first thing is it's a time machine uh the second thing is it's something called a code repo so a code repository and this basically just means it holds your code and it holds it and it gives you a bunch of features so it allows you to basically have things like branches it allows you to be able to work on the same code base no matter how many developers you have in a team right so that touches on the third point it's how a team of coders work together so amanov said a really nice thing you can say git is a doctor strange in the development world i like that nice um so guys yeah git is gonna be is what allows a team of coders to work together because imagine you had me and you had kazi working on a feature right two different features and let's say i went ahead and built the comments feature and qazi went ahead and built the posting a picture feature on instagram let's say our code clashes right let's say it clashes at some point git is again allows you to sort of resolve those clashes and move forward and then make another checkpoint right but without using git how do you do that you see how you have this sort of problem you can't do that oh that's a great another great thing right oh wow we got super chat thank you for that so me really really appreciate that um another great thing about react guys or sorry another great thing about git is what exactly to sunny's point what i will add on to that is if you're doing collaboration let's say sunny and i wanted to build two different features okay so sunny wanted to build the ability to comment and i wanted to build the ability to post so at the same time we can to be working on separate features sunny can actually be working on this comment feature and i can actually be working on the post feature qazi right here yeah right and then essentially what we could do is once our like he completes his comment functionality i complete my post functionality we could actually merge that into one place like to the master branch or whatever you want to call it and now we have both of those features in the main app the app that the public world and everybody's using exactly and guys notice how we would be working on separate features but we both would get access to the login features right so because we're essentially like carrying on from the same point in the timeline so we you it allows us to both work on features at the same time and then come back together and push the code forward so really really powerful thing which which every every single job that you enter will need you to know they will need you to know how to use get yeah very highly skill guys definitely all right let's move to the next one so let's talk a bit about redux now guys with redux you know uh it's this is a really important skill and in if you guys didn't go and build this clone that we built with amazon we're actually using redux here or a basically a form of redux we're using something called context api and what sunny said is like hey if you want to learn about redux that would be step one like use learn context apis but here's what it allows you to do right at the top right can you guys see where it says basket i mean it's probably it's a little bit hard for you guys to see so i'll move that here but like you guys can see where it says basket now if i go and click add to basket boom you can see in real time it just added that and i can hit this add to basket now i can actually go to the basket and you can see it's actually keeping track of the state currently both of these products are added in real time now if i remove them they get changed without the page being refreshed guys and look the subtotal changed as well now if i remove this boom everything changed dynamically no page was refreshed and it's all extremely fast so it's something that allows you to manage state state and for react developers and javascript developers and if you want to do anything with ecommerce this is an extremely important skill to learn and highly highly paid and so you know that's a little bit of demonstration of redux but sunny why don't you go ahead and like tell us about about it more yeah so that's a really good example of if you guys want to try that out we have a live stream which covers all of that so you can go and build that but redux essentially guys it just it sits alongside react right and it basically imagine you have a beautiful react app it's just like the data layer right that's how i like to always sort of break it down it's a data layer and that data layer allows you to do the things like we saw right it allows you to add like things like uh items to a basket it allows you to keep track of who's signed into your app it allows you to do a bunch of things like that right now the one thing that i really want to emphasize here is that redux or the react context api or whatever you decide to learn they follow the same pattern right they follow the same pattern and that is essentially what that what we have on the right here so we have this diagram which shows um so let's imagine the view that kazi showed you was that of the amazon clone that is the view so you see that on the bottom on the right we have the view right and then we basically have these three things we have actions reducers and stores right stores is just where the data sits actions is how we sort of um so let's say we click the add to basket uh add to basketball on the page okay so what is view so when you say view what is view so this right now this entire web page is the view let's imagine that this entire web page is the view right now when i uh cause he goes ahead and this is the this is when we say view guys like this is the side that the user gets to see this is the visual things that the user can click on your website and see you know but okay go ahead what's next yeah so that exactly so that's going to be the view and now when kazi goes ahead and clicks the add to basket he's going to actually when the minute he clicks that he's going to be pushing or dispatching an action right so imagine like he's got a gun and as soon as he presses that to basket he fires off an action right so it fires off an action and it dispatches an action right and that's the action right so the action here would be something like add to basket so let's actually write that down visually here so this will be the add to basket or add to cart action and this action will carry certain pieces of information so uh attached to it will be the title of the book so in this case it will be a title which will be the i'll just say tls which stands for the lean startup okay yeah and then it would have something like an id it would hide id and then it would have the price as well so the price in this case might be what 1196 right exactly cool yeah and uh keep going yeah so imagine guys you would fire off an action with like this information attached to it right so you would push that off and essentially what we need to do at that point is that something needs to to sort of listen to that action being fired off right so that's where we have reducers right so all a reducer is is it just listens it sits there and it just listens that's the simple way of putting it right so reducer just sit there and listen and basically the reducer if it picks up on that action so let's imagine we've coded up some um some logic that is basically going to go ahead and say if you get an ad to basket action thrown your way then what i want you to do is go ahead and push that item so all of those that tie tool the id the price push that inside of the store inside of your basket for example absolutely there's this like empty basket here and this dispatch once it pulls information like boom it'll send it to this empty basket and it'll store it in there exactly that's what the redu does exactly the reduce is like the middle man it just goes ahead grabs the action and then like sort of says okay this is what i need to do with it and then it puts it in the store in this in whatever way we decide to sort of code that up inside the reducer yeah and then what happens is guys and then it kind of sort of the sort of circle where it all sort of makes sense is if we go ahead and go back to the slides so you can see that was the sort of life cycle of action reducer store right but then you can see the store is what we connect to the view right so the store we connect to the view so that so what happens is then is that if we were then going ahead and changing or sort of adding uh something to the basket because it's attached to the view the view gets rerendered in the special react way right so when i do add to basket few things happen it fires off an event right then the reducer is listening to it so then it actually puts that information in the basket yep and then because it's connected to the view uh then that's why live it actually shows up right there and the basket now says one or you know if i click it multiple times it says whatever it says there are three exactly awesome so guys that pattern essentially the one that we just ran through the what i like to do is i like to sort of show people that i i sort of send people to using the react context api first because it uses that same pattern but it's just very lightweight right it's very easy to actually get started with that and then once you know that pattern then it's very simple to go ahead and implement it with redux redux has a bit more sort of setup behind it but once you sort of get things going it's very nice and it's very it's going to be something which is massively valuable i can't explain to you how valuable redux is going to be for you guys yeah yeah so learn uh the steps that practical steps for you guys to actually learn this guys is learn react context api first and then all the concepts you pick up from there boom you can apply it and if i if we want to make it even more practical literally follow and build the amazon clone that we built on this channel clever programmer where sunny shows you how to build this and then you'll be good to go yeah exactly we just actually got a super donation oh hey oh another one yeah yeah by nissag gandhi wow i'm actually not seeing any new messages come in the last message i see is like i think git versus git lab versus github so i think i'm kind of behind on the i don't know why i don't see the new comments but yeah if you want to shout out the comments that'd be awesome yeah um so guys let's move on to the next thing which is like here are the biggest companies that are by the way thank you for the super donation really appreciate it here are the biggest companies that are using redux guys so um you know airbnb uses redux amazon uses redux netflix ebay spotify facebook twitter google uber so it kind of gives you an insight into why this technology is so uh important because if it wasn't these guys wouldn't be using it exactly and guys if these companies are using it then and like we said earlier netflix is paying up to 300k like 300 000 on a salary guys so if netflix are paying that you can be guaranteed that all of these companies are pretty much paying massive salaries for that and also just to mention i've worked in a bunch of different companies and every single one i've worked in has used redux so just if you don't believe that guys take it from my take it from me that it's literally is something which you massively need um to know yeah yep so that's huge okay so somebody from our facebook said um great what is the difference between basic and pro and i i think what they're talking about actually is the course so let's see if i can actually pull that up uh over here so guys this is our course called profit with javascript and uh in this course we actually show you how to build all of these things and actually make an income with it but uh but the the main difference right now is that between pro and basic is that you'll save 300 that's the main difference as of now so if you got the yearly one you'll save more because it's annual with that said let's just jump straight back into the content because um we want to make sure we give you guys a lot of value nice let's carry on let's move forward yeah guys i love firebase and if you haven't seen a lot of the um sort of tutorials that we've gone through be sure to go check them out because we use firebase so much in those tutorials for pretty much everything we're using firebase all of these projects yeah the reason why they're all hosted guys is actually it's all on firebase so really really nice stuff like and guys so firebase is essentially for those of you guys don't know it is a suite of tools provided by google and it basically allows you that what they did is right they took all of the sort of traditional headaches and they sort of gave us a bunch of tools which solve a lot of issues for us so let's go through some of them so we have the realtime database right so we have the realtime database we have authentication yeah so imagine aws guys but it's very userfriendly aws so me and qazi have used aws kazi how what's the sort of entry level to aws uh you need to be like an i.t master to like just pass through basically like aws is is actually really difficult to pick up it's um you have to kind of go through a lot of hoops and so as a developer you really don't want to be learning uh so much about ip addresses and creating security groups and like is my server in oregon or ohio you just want to make your app and put it online and that's all you really care about right and give access to people firebase takes all of that out so firebase to me is just like the definition of ease and simplicity exactly exactly that and that's the perfect way to put it it's just ease and simplicity guys right so it's going to give us a database and not only just a normal database it's a realtime database so if you guys are wondering what the real time is standing for when we had like the five uh the sort of facebook messenger clone we didn't have to implement anything special to get that realtime functionality so the messages popping in as they came in it was out of the box and it's in it just works out of the box when you use firebase um you have authentication so authentication traditionally is actually quite a headache um it's quite a sort of a pain to sort of get authentication working so with firebase it's literally like two lines of code that you have to add and you already have like a login a sign up and they completely do everything for you even they even have validation and then you have all of these that's the crazy thing guys so i want to kind of emphasize that authentication is a nightmare whether you want to add uh email and password type of authentication and again when we say authentication it's like when you log into instagram that you need authentication to do that right every single website or app you use has authentication setting it up is so hard whether you want to use google authentication or you want to use facebook authentication with firebase it is so simple and yeah i think you showed us how to do that sunny and it was just a few lines of code and authentication is good to go exactly and that's something which we do build in the amazon clone so again really good app to go ahead this is a great question and i think this is the right time to answer it so push asks firebase versus node and actually the answer is guys if you use firebase you can replace node like you actually have no reason to most of the times even use node and it's just so much simpler suddenly you want to uh go on on that and and riff yeah so exactly that so you actually can actually sort of eradicate the need for a back end really if you i would actually say go as far as to using all those all of firebase's tools up until the point where you need only like you actually need some sort of specific backend functionality that firebase doesn't offer then at that point and this is something that me and kazi have done before if you do need node.js what you can go ahead and do is use something called cloud functions so cloud functions it's actually not on this diagram but it's something that is included inside actually one of the one of the most important things yeah cloud yeah that's actually huge yeah so cloud functions um is something where basically imagine like it's so aws have a different version called lambdas and essentially what it is is is you basically it's just literally like imagine a javascript function guys yeah so a simple javascript function um but it's written in node.js so it does that's this is where node.js js comes into it and essentially you can just deploy that one function and it uses a serverless approach and it's able to scale up and um guys whether or not you've got one user or you've got a 500 million users it's going to it's going to scale like you have google servers that are going to scale for you it's going to handle that sort of scale so really important stuff there and i see a lot of people asking a firebase is costly or is firebase free to use it's nice honestly it's free yeah every single build that we've done is completely free so unless you need to do some like sort of additional stuff i think the cloud functions you have to attach a card but it doesn't charge you um so honestly guys it's completely something which is worth learning and yeah you can host everything for free gives you even gives you a really nice url for most of your apps so everything that we showed you guys gives you a good url for that um and it's definitely something worth picking up our netflix clone was called netflix clone something that web app our messenger clone was called messengerclone.web app you know so it's like really really clean urls that you can not like sometimes when you host it with heroku it's like papa 367 29 daddy.com slash like exactly [Laughter] where are you taking me that's my question so yeah it's like server like the power of serverless guys is so sick and the fact that you could use it like i was doing serverless stuff with aws and it was a nightmare to set it up like how i have to like set up my own rest api endpoints and then i got gotta make sure it's in the right server and oh my goodness even when i was setting up my functions sunny i had to be careful like whether i put them in oregon or ohio i'm like why am i having to like put locations for my server like functions like what's next do i have to also like lease an apartment for my functions to live in and keep them there like what how far is this gonna go so with firebase you don't have to worry about any of that yeah you literally have one command line saying firebase deploy and that's it yeah it's that simple yeah somebody asked what's the if there's a paid option like what's the need for the paid option push did for paid option server less functions is one of the reasons why you might need paid uh even on that they're not going to really charge you until the scale is really high so i probably wouldn't worry about paid until you have like millions of visitors hitting your platform per month most of you that's never going to happen so i wouldn't worry about it until then yeah exactly and guys just to touch on this they have so many things which is worth checking out so like even they even have machine learning so i see loads of people asking about hey why don't you go ahead and build something with machine learning guys firebase offers that out of the box i was actually thinking sunny you and i do a tutorial where we do where we use google cloud vision uh google vision and we actually build a um using firebase and react like a uh like face detection app or a edge detection app together nice guys if you guys want to see that let us know in the comments but yeah i'm down for that that would be something which would be fun to build that's definitely go ahead that really excites me because i like frontend stuff but i really like stuff like that it's just it's mindblowing yeah nice and i saw a lot of people actually love the the ai video that we we dropped recently so yeah let's go ahead and build that nice yeah um so hosting guys i think sunny touched on it already that's going to be there any other stuff you want to like touch on from here sunny yeah so like just a few things to just brief over if you are using so guys remember we spoke about react right react is really powerful not just for web apps but you can actually build apps in uh for ios and android using react native right now when you have react native something really really critical right you want to be able to test your apps in so many uh scenarios and so many different variations and this and that now they have something called test lab right test lab's amazing guys so imagine you build an app with react native you deploy it test lab then you basically just upload your app to test lab or i think you just deploy it or whatever you do but you upload it to test lab and then it actually runs it on physical devices so you'll run it on an iphone 11 iphone 10 iphone 9 android um samsung galaxy all of the different variations and it will show you and you can actually put a little robotic script in it so it'll run through the app and test everything it'll give you screenshots of every single page every single um sort of uh like it'll give you screenshots of the app how it looks and that is the most powerful way that you can ever debug an app so honestly that's so so powerful and that's out of the box like i can't stress that enough that's something that they just give you out of the box and alongside crash reporting all this other stuff but i would definitely recommend if you guys are enjoying sort of the firebase stuff that we're covering here definitely go and check it out because they have an endless amount of tools and we've only just touched on some of them but you have notifications so many different things which really do allow you to supercharge your app yeah i think you're muted quasi talking for a while so um david jacobs just came in and he said hey just coming is it okay to make use of firebase and node.js for the same project my gut answer is absolutely it's totally okay but if you most of the times need to use node.js if you get creative you probably won't need to really use node.js you can use serverless cloud functions and do it but sunny uh what are your thoughts yeah so if you are going to go ahead and use cloud functions it will be in node.js anyway yeah so uh so that's sort of a sort of way to think about it if you are going to sort of need node.js then you would be using firebase cloud functions but like carzi said try and use all the tools that they give you before you actually reach that point because what would tend to happen is you might actually end up over engineering when they actually give you a tool which does it all for you in like three lines of code so i'd really make sure you you sort of play with their tools and like the realtime database and stuff before you go ahead and do any of that stuff okay awesome i mean one of the bills like the youtube thumbnail build sonny what we can do is like we can even do more like off like um like something we build live and maybe we might even fail during the live stream but it could be something fun to just build live with everybody you know that could be like a fun building that would be fun actually yeah so we're actually building this uh youtube thumbnail guys where we want to test what the thumbnails look like before we put it out on youtube yeah um so me and kazi came up with an idea to actually go ahead and build this but yeah like if you guys want to see us actually building it from the beginning so not prescripted and everything sort of like the actual things that we face then yeah let us know yep um should we learn dino now sunny just a real quick rapid fire answer dino guys is something which i can you guys can go ahead and look into it's very fresh okay so there's no guarantee that it's going to stick around it's a runtime environment for javascript but guys a whole different video i think we would put for that but go ahead and check it out it's something cool i'm looking into it right now um and i will let you know as we find out oh crap so we didn't actually go into this but uh if we just kept going with the firebase stuff guys like we mentioned the author um auth we mentioned the hosting here are the cloud functions cloud firestore realtime database this is one of the biggest benefits of firebase just the fact that you can have a realtime database with a twoway sync you cannot do that with aws guys i mean they might have the dynamodb which is i think aws has like real time thing i haven't really looked into it but i could not find any other real time and postgres and redshift is just like so slow in terms of being able to check things live in my opinion like firebases this just this functionality realtime database is alone amazing enough to use it and then yeah you get all this awesome stuff here anything you want to touch base on on this or should we move on um pretty much you've covered it mostly uh i would say the one thing that was worth mentioning on that one slide is you see where it says predictions guys so mostly whenever you collect a bunch of analytics it's quite a headache to actually figure out what it's going to do for your app right but they actually apply machine learning to the analytics that you collect and get tell you which users are good which users are like less involved they do a lot of that stuff for you so something worth noticing that that's awesome they even have a machine learning kit which is cool which is what i'm excited to use definitely yeah we'll go ahead and play with that awesome so guys let's jump into nodejs and see what's going on over here so sunny talk to us about node right so node.js guys is pretty much we all know javascript when we sort of hear javascript we think about front end we think about websites we think about sort of the sort of interactivity of a website right but we also use javascript on the server side so it's backend javascript right now here we have a bunch of use cases that we could sort of talk about so we have data streaming so whenever you have sort of like a live stream right now that you guys are watching this probably could be running using node.js right now depending on how they built it right serverside proxying if you do if you're into that big data and analytics but one here that will be very interesting is the rest api so all the way on the right we can see something called rest api and we will be touching on rest api soon but just to let you go let you guys know roughly what a rest api is imagine we had like so for example when we built the netflix clone right we didn't hard code all of that information right we actually went ahead and pulled that from a service and that service was written in node.js right so that service that actually provided all of that stuff yeah we didn't we didn't want to sit there and like literally pull every single piece of information on the movie lucifer and dark desire and dark and all of that stuff it was yeah exactly we're using tmdb which is a service that has all this information and using their api we just pulled it into our app otherwise we'd have to spend like years building just the database of movies exactly exactly so the way to think about node.js because i remember when i was learning javascript i was super confused i was like am i coding in javascript right now or node.js and the truth is guys that now they've sort of progressed to the same level where it's literally like essentially whatever you can do on the front end picture it as you can now do on the back and that's why javascript is a language which everyone needs to learn because you actually before what would happen is you would have one language for the front end and you'd have a totally separate language for the back end but now with javascript you have that the same language consistent on your front end and back in which means that the better you get at javascript the better you become as a full stack developer which is really awesome genius way to put it i love that that's actually really really cool so no need for php i imagine yeah i coded in php guys and i will happily tell you that this replaces that everything it does this replaces it and all this other stuff you guys can actually do with node.js as well so whether it's big data analytics you want to do system monitoring dashboards wireless connectivity you want to build chat bots realtime data web scraping automation all of this stuff you guys are able to do it any other things we should touch on here sonny uh i think we covered a lot of it remember guys when we touched on firebase all of the cloud function stuff that we spoke about is going to be using node.js to add that into it yeah yep awesome so let's go ahead and now move to the next thing so what's going on here so this is actually good because we just literally brought up the cloud functions example so here guys imagine we had a a firebase cloud function right so imagine we sign in as a user right and the good thing with card functions is you can actually sort of imagine that middle cloud function guys is written in node.js right so that middle cloud function is written in node.js so we sign in as a user then we pass like the sort of the user's id their token and some data alongside it right now that cloud function is going to get triggered automatically just to make it like very real like so if i am on my phone right now and i log into like instagram app on my phone right yeah then i'm past the step one that i drew and now i'm like sending that information potentially over to a cloud function and it has my user id so if i'm like my user id is five four four three it's passing that five four four three over the cloud function exactly and let's imagine we had some special cloud function guys which checked for five four four three let's say like it checks it if you if you log in and you are raphaekazi yeah then it's gonna send you to the special raf akazi version of instagram right so let's just imagine we have this imaginary app right so it and it checks all of the users who log in if it's five four four three we're gonna i'm not gonna send you to normal instagram we're gonna send you to the kazegram right we're gonna send you to the kazi version of instagram right um then what you can do is you can basically do whatever you want afterwards but in this case it's saying write a document to the cloud firestore which is basically the realtime database but but just to show you guys it's super sort of versatile in what you can do here right so you can write a cloud function which would get triggered for any use case so we have cloud functions which run daily which do little jobs for us um we do things for example me and carson used to check on a bunch of different metrics every day so instead we built a card function to to actually do that for us here's here's one here's one example of one thing we do right so for example we take um revenue made yesterday okay yep um let me actually put it here revenue made yesterday then we use uh twilio api to send that as a text message to all of our phones now here what we're doing is we're using an api right to actually send the text message and then we're uh using this and now we want this to send a message to us at 5 00 am every single morning right so this actually sends at 5am every morning so you guys some of you might have heard of something like a cron job this is what we refer to as a cron job it's just something that's scheduled i don't know why that name is there but it's like a scheduled think of it like a scheduled function yeah and now that all of this is happening guys and this is actually happening because of cloud function exactly okay and we're literally using firebase and um we are able to this is essentially a cloud function okay and firebase allows us to host this cloud function run it as a cron job and every five a.m it like takes our revenue from yesterday and sends it to us as a text message yeah and that's just an example and guys that one simple fun like uh use case makes our life so much easier every day because it just automated the tasks that we would otherwise have to do and we can send that text message to the entire team yeah otherwise like what we had to do was we had we had a person who we had hired who would literally like look at four or five different sources where we had income coming from and then manually they would have to remember and then they would have to manually text everybody on the team they would make mistakes sometimes the numbers could be wrong um sometimes it wouldn't text everybody um and so this doesn't make any mistakes it's 100 right and it just makes our lives easier by combining five different resources into one exactly exactly awesome so let's move on to the next thing right so now let's talk about command line why is the command line so important sunny yeah so just opening up the command line here guys so i always find that people see our command line that we use and they always ask like what are you using because our command line is different to the one that you're going to see so what i would recommend is everyone actually goes ahead and download something called oh my zsh and it's really really good because it just powers up your command line so imagine it just sort of adds like this very clean ui it gives you a bunch of sort of like power ups and plugins that you can mess around with but the point is guys why do we need to know the command line the command line is pretty much going to be it's going to allow you to do things manipulate things like git so it's going to allow you to push your code to git repos it's going to allow you to start your react app it's going to allow you to do the basic things like create create folders and things like that and guys remember like a lot of you guys might be thinking at this point yeah but i can just right click and i can open and i can click new folder right but how do you do that with npm start like you need the command line to be able to do that right if you want to push code to github yes you could do it in vs code now but before you couldn't do that before so you would actually need and i still use the command line when i push to github yeah um and cause you actually code quite used to code quite a lot with the command line right yeah yeah i mean i code pretty much most of my stuff with command line and there's like really like there's some really crazy stuff you can do with the command line that like you will have trouble doing with anything else like if i can almost like uh demo something let me actually grab i would like to grab some kind of react code or even like take something like this right let's say i copy this um i'm copying this link which you guys can't see this is this link right over here i'm copying it right now if i want to paste it you know normally what you have to do is you like gotta open some uh file you gotta like go inside of it and paste it from my command line i can actually do this and let me actually show you because let me see if i can move this here boom let's go right there and i'll show you something really like kind of fancy that i like to do this is just for demoing purposes but let's go ahead and let's just do i'll just do pb paste and uh here's the demo yt app right and now if i actually find this app that i cr folder that i created on my computer which i want to make sure that i don't share everything with you guys okay let's actually make it a javascript file right every every time you demo this stuff it fails but it's okay because i'm going to just keep going till it works that's it and guys when you're coding this is normal stuff you're going to run into this right so this is just one example of what i did like i copied some piece of thing right and i pasted it in here now this is just a url that i pasted through the command line but like if i have huge chunks of code it allows me to move so freaking fast and here's one thing i want to say about speed okay people often think that when it comes down to speed you either do something slow or you do something fast there are two things here's what i said that's completely wrong you either do things fast or you don't do them at all i'll give you an example imagine you had to edit a video and every single frame that you hit edit on if it took two hours for it to refresh imagine if you were building an app on your on your computer on your local host and let's say you made a change to it and you wanted to see your change imagine if it took one hour to see your change how does my navbar look how does my role that i created look instead of being able to give it to you instantly when you hit refresh that would have a major difference right to your building process and experience and as a matter of fact you would actually not build a lot of features because you can't test it and see it fast so command line what it allows you to do my favorite thing for it is it allows you to move at just a brutally insanely fast speed get freaking good at command line if you get fast at this you can bust out two apps while somebody else is building their first app and it takes them like three weeks so learn it it's gonna be highly highly paid but more importantly your process of development will just be so much more enjoyable so get past the fear of the dark screen and just fall in love with it yeah and it is daunting when you first start guys that we've all been there where we don't even know how to interact with the command line um and it can get very scary in the beginning but just to get just start moving towards it even if you fail what's the worst thing that's going to happen like you just carry on and you learn from that one thing to work with that's worth mentioning guys you're gonna need to know this because things like firebase like for example when you deploy your app to firebase you need to know how to do that with the command line right you need to be able to you need to be able to write firebase deploy inside of the command line in the correct folder to be able to deploy your app so you're going to need to be able to know that stuff even when you're using get it's something where you you just kind of have to learn this at some point yep yep beautiful so let's move on to rest api so rest apis why are what are these things why are they important guys like if i wanted to build a face detection right let me actually show you guys a few days ago we made a video aaron and i and it was on face detection so let me pull it up on my screen here and show it to you guys so boom here it is build a real time face detection this is like probably the best use case of why things like api matters and even though technically we're in this case but it's kind of like an api okay i just want to get the concept across so let's go here where he's demoing the app so check this out right so right now guys it's detecting his face doesn't matter where he's moving and what he's doing so you can see that now this if we had to write this code to make this work sonny how long would it take us to figure out how to do proper face detection all by ourselves write it and run code that does this how long would it take oh dude like you stressed me out just saying it i mean i don't know where we'd begin like this is why we need things like services that have figured out that it's pretty depressing but suddenly you and i in our entire lifetime would never be able to figure out how to do it yeah it would take forever dude it takes so long to figure that out copy pasting stuff or figuring it out or stealing somebody else's research you and i in our lifetime like there are very few people who could figure out this type of stuff and this spent their whole life dedicated to like how face detection works you don't want to like sit there and write this algorithm from scratch you use it so like api in this case we basically used an api to get access to all this code that allows us to do it so guys for us it actually took six lines of code to make this entire app work yeah that's insane that's insane i really want to do that i really want to give that a go in javascript which is why this is this is these are some of the reasons i really like python because like when you can do it in like six lines of code it is kind of nice and like take a look at this there's just one part where everybody started going crazy on the live stream and look aaron pulled up an image that i had sent to him from our live stream and it started detecting the faces on that image oh damn that's from the phone yeah that's clean yeah so this is why guys api is super important here's the ugly image of this these sunny i don't know why you put this image in these are the images that i saw that like made me never want to learn apis yeah do you know why it's because this i know they're they're ugly images but they're just they are like they really explain what an api as well no for somebody who doesn't know apis this is the i the only person i feel like this can help is somebody who knows apis but okay go ahead go ahead explain it explain it so guys all an api is essentially right you have the client so that the actual web page that you're on so that's the left thing that we see the client sends a request so like imagine you click or we went to the netflix page right um so the netflix app is loading on that left screen um and then what it does is it makes a request so in the netflix build we actually communicate it to a server and the server that we sort of reached out to was something called tmdb so it's like imdb it's like the sort of it's a it's a movie record database right yeah and what that ended up doing we sent a request so we sent a get request so it's that top one we actually went ahead and sent a get request and we sent that to their server um and we just basically asked and they basically if you read the documentation they tell you how you can send that request and so forth and basically they responded with some information in the form of json right so it's a json object and basically guys that's what we end up rendering on the screen so basically like like for example here right this was blank and it was like literally imagine this was empty and had no information okay as soon as this page loaded and then boom what it does is it takes this and fires off and goes hey dude i need this information right now because like literally i'm like displaying something that's empty i'm freaking out so it sends that over and then tmdb is like yo relax here's like the information and it goes yeah this movie here is called dark desire pop that in and then boom we're like all right let's pop it into our app i love our aggressive the api you're relaxed the api is just like straight up like gangster nice oh man we gotta have more gifs and uh memes in our next presentation sunny like all this stuff you should actually explain through gifts and memes yeah well yeah we should we should we'll get rid of this for the next one [ __ ] this image i never want to see this image again this image reminds me of like when like i used to see my brother's like college classes back in 2006 and he was learning i'm like oh i knew it was going to start a conversation with quality content guys i'd do that for you you just you just put it so like all the nerdy people on the stream like anybody who's like super nerdy they could just be satisfied and they can't like talk [ __ ] to us you know exactly i saw a few thumbs up when this screen came on oh yeah by the way guys smash that like button if you're enjoying this content so far it really really helps us okay so please please please do that definitely right should we move over to the next slide yes let's move over and like just so let's just a little quick thing before we completely change um just at a high level guys it's like there's a few different things so you know you want to be able to delete information or change information so anytime here's how i think of it anytime you want to get information just think get i need information get get get get get so it's like on instagram post if you want like when i go to instagram.com right here all my get requests in my mind this is a get request is getting the data getting the image showing the image so that's think get and like put it in your brain now when you go and you want to like post something that's going to be post so for example if i go back to instagram anything that requires any type of posting so when i'm posting a comment and i hit enter in my mind i chain that with post post post post post so then when i'm thinking i need to post that's going to be post if i want to go and like change this exact image that's right here that in my mind is just like update so that's put put is update i don't know why could they call it that but put really is like update so yeah boom delete is the most obvious one if i go and delete any of my comments any of my posts that's just gonna be delete so that's how i like to think about it really nice breakdown yeah nice thanks all right guys so let's jump into flexbox sunny take it over yeah so flexbox guys and the the reason why you would want to use flexbox is it allows you to essentially get a fully responsive web design right which means so like look at this illustration right here so you got a bunch of different devices right but imagine that's one website so obviously when you see a lot of websites when you go on your phone it looks slightly different when you go on your desktop right now back in the day this used to be a nightmare to do this like you had to use something like you had to use endless media queries and sort of all this headache to get that to do that or you would actually end up building two different apps so if you look at some really old apps they actually have two completely horrible looking like a horrible mobile app and a really nice desktop one if you for example check this visually like talk about also what you're saying so like yeah guys without flexbox right we won't be able to get this nice functionality here and how easy this was to set up like all these rows are actually built using flexbox uh at the top the nav bar that you guys see that looks really slick when i hover down that is using flexbox um as well but keep going sunny yeah exactly so uh even uh all of the builds that we actually did are actually responsive so if the screens get all responsive yeah if we take this because it's flexbox it's responsive so you guys see how the netflix one like turns into a nice like mobile version flexbox exactly and guys yeah so it's definitely going to be a skill and like the the need for it is very clear here right you if you want to support mobile devices tablets etc you need to know flexbox which is why most people use um or they require you to know about flexbox yep uh i love what this guy says he goes can you guys start teaching graphql instead of rest i have worked on it's really cool so one thing i want to actually say to that is um can we sunny i think we need to start doing live streams where we're doing live builds live builds that actually also live for us so like yeah one great use case for graphql honestly is i want to actually build uh like something with facebook ads you know yeah and you and i were talking about doing stuff with facebook ads so we can actually create a dummy test account for facebook ads just so the user token and stuff like that we can share it with everybody on the screen and we can actually use graphql there because facebook uses graphql and then we can actually run ads build ads and the videos would be really cool it'd be like hey how we built our own bot and like it's spent five thousand dollars this month you know and like oh that'll be fun yeah that'd be nice yeah and and yeah like guys it's really nice by the way when you guys drop those comments in because it lets us know what you guys are interested in learning or like what you guys want to do and then me and kazi can go ahead and like jump on a live stream and actually go and build it which is like like you said it's going to be fresh for us like i i've used graphql in the past but am i am i a professional am i a pro at it no like i'm pretty fairly new to it like in some sense so we can go ahead and do and learn that together and i think that'll be a really really useful for for everyone to to see yep awesome um yep so basically it's uh yeah i think um just one thing i i do want to mention okin lily um asks can you explain put versus patch so yeah i mean uh the basic basic version i can give you of put versus patch is just like put is for updating so if i want to update my caption if i want to update my youtube video that already exists i'm going to use put if i want to oh wait wait wait that's actually a good good good one so sunny actually can you explain the difference between put versus patch because i thought he was asking put versus um let's say delete or something like that so just give us a little put versus patch so as far as i'm aware so perk guys is what you're going to probably be using most of the time right so it's going to be like when you change like the um actual sort of you're going to be changing the actual sort of uh sort of document or whatever sort of like item that you're changing inside of your in your inside of your api rest api but patch is when you actually want to change uh make changes to the part of the resource at a given location right so what you're actually doing is you're making a change to the resource and you're changing its properties so there is a there's a slight difference there um to be honest with you i actually end up using most of the time i don't i haven't actually ran into personally i haven't run into a case where i've used patch much yeah i actually find in most tutorials they tell you um but if we have a little check here i can see unlike patch applies a partial update to the resource so it's going to apply a partial update as opposed to put which applies like an entire update to your resource yeah but um guys keep it simple just probably use put unless you're working with other developers on your team and they have specific reasons for where you use put or patch the most important thing is you guys stay consistent here with your team that's going to be the the really key difference here um awesome okay all right nice i saw some questions where we were talking about flexbox and some people are saying what about css grid yeah we should actually do something with grid too i think that would be great yeah awesome so this grid guide is really good for responsive design as well yeah yep so let's move forward with this guys so flexbox froggy is a great resource for you guys to go and use to learn flexbox it's a playful way to in an interactive way you'll pick up flexbox i think it's honestly the best way to do it yeah i learned music now yeah yeah that's how sunny learn and uh so yeah i would say use the one thing though is like don't just use this and then like don't also code ever uh use it and then kind of like try to build something using what you learned from here but this is a good action step for you guys to go and use it's a website called flexbox froggie and just by playing you will learn so much more than you will learn through like sometimes even tutorials exactly and guys i can't stress enough like how quickly i learned flexbox when i use this which is why we show everyone who is interested in flexbox flexbox foggy because it's really going to it's it's the first tutorial i can truly say i did it once and i just got it like i understood flexbox after that um so if even if you're like you think you're good at flexbox i'll go ahead and give this game a try and i'm sure it'll make you a bit better than you thought you were in the beginning before you gave it a try one thing that komal said which i think like we can we can um help fix a little bit he said put is adding a new movie all properties to that new card um patch updates properties in an existing card so how i would see it is like i would probably when i'm adding a new movie i would probably see it as a post i would do post if i'm adding a new movie so just be careful of this um a trap guys put probably use only for updating existing things and then use post for adding a new movie yeah but let's let's avoid that rabbit hole for now and let's jump straight into graph q l so sunny want to touch base on this yeah so this is a really nice diagram here which actually explains it quite well so we spoke a lot about like frontend backend so when we talk about frontend we're talking about the client we're talking about backend we're talking the server so the client is the top half of this diagram and the client is basically like the netflix clone or like the amazon clone like it's the front end it's what the user sees right so in this case we either have it we either have the web or like you could be from coming from an ios or android device so here you can see you have like a website or or an app so a website or an ios and android app right now what what what makes graphql so powerful is that basically you can have um let's say we have a graphql client so in this case you can see in the middle where it's using something called apollo here right so apollo is a very popular graphql client and what it basically does is you can basically plug so a bunch of different services into that graphql client right so imagine we had a bunch of different rest apis a bunch of different micro services a bunch of like and the database all go into that graphql api and then basically you code up that that graphql api in a certain way and it basically allows the front end so the web or those apps to ask for the data it needs in a really really simple way so kazi if we can go over to graphql the website they actually have some really nice visuals on there which explain this really nice and i think that will actually help a lot of people out so it's a query language for your api it's basically the really nice way to put this and if we scroll a little bit down here you can actually see it says ask for what you need get exactly that so you can see here guys you pretty much just pass in so let's say you need the uh the hero of from a film and you need their name and height right you pretty much just type that in so you see we need the hero we need the name and height and then it goes and scans your whole basically backend so like your rest apis the databases microservices and it will go ahead and grab that for you whoa now obviously there's some setup to get this working but it's very powerful once you once you get this set up and working in the way that you need it and it means that you can also basically if we scroll a little bit down so this is another that is so clean how they visually show like how from the actual app or whatever you can just do that and then look how it gives you that data back that's such a nice visual really nice right like from many different services it can just like from one request pull in so much information um and also guys it's it's type friendly so if you've ever used something called typescript um or like if you're coming from a javascript graph apis are actually organized in terms of types fields and not end points what yeah insane that's insane so no so you're not basically doing the base url and all that crap here like how in apis you gotta use a base url and then you gotta use like slash you know hero like you know what i mean yeah so here you don't you pretty much just me you have this one beautiful request which is on the left you can see it's just saying hero and you all you do is specify the fields that you want so literally you say i want the name inside of the friends this is actually like way like i actually want to use graphql actually now way more than um yeah it's insane dude and now what you can actually do is i've seen people hook firebase's database up to graphql or i think they did it using they've done it in a very clever way but you basically get firebase with graphql which is insane um yeah so you can do that and also graphql gives you a very nice sort of um developer tool experience so here you can actually sort of you get this sort of uh playground sort of experience um once you've got it up and running and you can just test it by basically you can run like these queries against your own database and stuff like that and it and it goes ahead and pulls that information in for you so you can see if it's working see if anything's broken it's so powerful guys like is this is a real need for this and a lot of big companies are using it um and yeah it's really really something that you you recommend you do learn if you go down to the bottom cause it actually shows you who's using graphql right now evolve your api without versions dude what is this thing i want to use it yeah it's crazy right like you can actually evolve it and it won't damage the existing queries it just sort of upgrades them to sort of add the information and wait hold on so damn that is awesome wait it can create your api from just the code itself like if i just gave it code and it had functions and all that because it seems like i'm not even doing anything to to do that and it's creating the api or am i wrong on that um it depends so you're i think you basically provide something called a schema in graphql um where you basically map oh i think i'm not actually entirely sure it might have changed since the last time i used that but they all i know is that they have a very clever way of doing this so i think it'll be something really really good that we can go ahead and sort of play with uh soon okay but you can see here guys facebook github pinterest intuit coursera shopify all of them are using graphql and also every company i've worked in also has used graphql so it's something which is definitely um highly used and very powerful that's amazing i love this yeah yeah i'm glad we shared the website awesome yeah really really nice so learn learn that skill guys that's number nine okay learn this skill and then a number 10 we have is server side rendering so why is this an important skill to learn sunny why server side rendering yeah so server side rendering is is a technique right it's a technique for rendering clientside apps right so so when we talk about whenever you hear serverside rendering it's a technique for rendering something called singlepage apps so can you can you can can um so for me what helps for me is like are any of our apps that we have up right now using server side rendering or no no no no but if we we can demonstrate it with it so let's go ahead and go to this one right now so let's go to our netflix app and this will hit refresh yep yeah so let's do a refresh so you can see guys when it popped in you see everything sort of popped in and then there was loading and there was a bunch of stuff which happened right so let's do it again yeah yeah so kazi's got quite a fast internet connection over on his side right now so it's quite it's going to be quite hard to tell right yeah but what actually is happening right now is the website loads right and then it's going ahead and making all of these additional requests to go ahead and get information right it's going ahead and making an additional request to go and get like the the film that we see there cursed dark desire right here yeah star wars yeah it goes ahead and makes all those different quests right but what you can actually go ahead and do is use something like next js which is a serverside rendering um is one of the most popular tools that you use when you're serverside rendering and basically what it does is when you make the request to even go on to the netflix clone website it pings a server where next.js is running right it will ping a server when xjs is running and it basically will go ahead and do all of this rendering so all of the loading and stuff like that on that server which is going to be extremely fast right because that server is going to be like highly maintained in a very fast environment et cetera and then it will do everything and and you can even do things like caching it so imagine like it does the really expensive calculations once to load up a really heavy website and then it just basically every react app the way to think of it is what what you're seeing right here is just one bundle right the entire thing is called a single page app so even if you have different pages to a website it's just one bundle right but that bundle when you don't have serverside rendering takes a long time to load even though it looks pretty quick it does take a long time to load and what that affects is how quickly you can actually start using the web page so we call that time to interact yeah and when you're building production websites that time to interact is so important guys right so you want to get the time to interact down because imagine you're you've gone to amazon and for example it was just loading it was loading and you're sitting on amazon right yeah and like you you could literally lose customers at that point because they nobody likes to wait on a loading screen right but if you do serverside rendering all of the heavy lifting is done elsewhere and it will literally just like as soon as you hit amazon it will literally just ping you the amazon sort of bundle which they've already done on their site or they've already sort of loaded it up it will send it to you and it's super fast right so it's really really fast let me go ahead and see let's go ahead and show something called next js and let me see if their website's actually um quite handy so yeah if you go ahead and open up the next js website so nextgs is something which is really powerful i've used it um in a company called tesco which is like the walmart in america and they use it over there wow and the reason why yeah they use it then it's like you can see here guys it's the react framework so it's a react framework firstly so again we're touching base on react it's good for static websites it's good for seo so seo this is huge i completely messed it i missed this guys so when you have google web scrapers right google the way it sort of crawls the internet is that it basically goes ahead and it basically like with these web scrapers record it goes in and it clicks on links and it basically checks what the contents of that link is right now when you have a react page we see it load in front of us but when like a web scraper opens it and loads it it doesn't actually show everything right but if they if we do implement server side rendering when the web scraper opens it they get the entire bundle right so they get all of the text all of the images everything whereas if a web scraper goes on it and it's a client and it's not it doesn't use serverside rendering they don't get all the text straight away it has to load and basically that damages your search ranking in google which means that you don't come to the top of your google searches basically this will like boost up your seo by a lot if you're using something like next.js exactly exactly that's awesome yeah that's awesome it will really boost it they do things like uh so if you scroll a little bit down there's something called automatic code splitting which is huge so imagine so code splitting is essentially where you only are going to import um what you need so imagine we're on like the homepage right it's only going to show you it's only going to sort of like pull in the information which is on the home page so and it does this ingenious ways right it does it in really clever ways so imagine we've got a bunch of modules inside of an app so we have like 100 modules if the home page only uses three of those modules then it's actually going to only load three modules oh wow that is changing that's crazy right that's really crazy and it splits out and i don't know how they do that like it's really genius how they they built that but um that's called code splitting and that's something which is really powerful and you can see here when cars you click more you've got all of that stuff which there's a bunch of other stuff um and they sas is included which is like this this sort of advanced css technique um dynamic routing so you can see there we've got roots supported so if you had forward slash blog forward slash like a random idea you could that's supported out of the box typescript is supported out of the box um so there's a lot of things which are used it has got a little bit of a learning curve when you when you start going into um server side development but scroll down qazi and this is where you see the demand for it look at that all of these websites are using server side rendering like these are huge websites guys like twitch docker hulu scale github netflix like or coinbase like there's a lot of cryptocurrencies i can see here like these losses i spend a lot of money on finance fame i use binance twitch damn i did not know twitch was using this wait really really yeah so starbucks uber yeah docker wow so this is yeah this is powerful so this is um i mean i even want to pick this up because i'm new to their whole react world but i want to pick up how to use next in our apps and just make them lightning fast yeah exactly wow oh nice they actually have a showcase at the bottom oh that's cool yeah oh take time but it's going yeah tick tock i saw that that's amazing right yeah wow but guys this is essentially going to allow you to have lightning fast websites um there are some things which need to be like considered when you're learning how to do serverside rendering but if you guys are interested in that then let us know and we can go ahead and like like as you said it will be interesting for us to both learn this a bit more and get more ingredients involved in this by the way guys but it was this is this exciting for you guys like is this actually valuable please let us know in the comments like where you guys mind at after finding out about all of this information like the top 10 things that we covered right we talked about server side rendering we talked about graphql we talked about flexbox we talked about rest apis why that's important talk about command line node.js why you guys need it we talked about firebase and how this is so valuable for your backend and hosting and all of that we talked about the redus technology we talked about git why you need to use it and of course we talked about react so was this valuable to you guys drop it in the comments below and just let us know that this gave you value or maybe what was your number one biggest insight so we want to hear from you do it now exactly and guys if you did find value in this remember like smash the thumbs up button because if you found value in it then it's going to help other people find the video and also see the value that you got from this video so definitely smash it if you if you enjoyed this and you found this was something new even if you learned something new guys smash the thumbs up button yeah do that uh ian asks can you use node.js for server side rendering what do we think sunny um yeah so i would say the way to think of this remember node.js is backend um so yes yeah yeah the answer to your question is yes right awesome yes because yeah it's empty yes awesome david jacobs i love that he says i've learned a lot from this today i learned more than i ever expected that is beautiful that is exactly the caliber that we're trying to go for guys and we're just gonna be keep this coming every day every day nonstop and we're gonna keep producing at this caliber for you guys but again your participation is what really engages us and gets us to want to do this every day so thanks for that and we're just going to keep rapid firing through this uh one of the facebook uh one of our people on facebook say yeah you need serverside rendering was new to me so so this was so valuable thank you amazing nice that is great um somebody asks what about the course do i learn it all there so sunny what would you say right so yeah guys a lot of the things we spoke about today we actually cover this so guys remember it there's the whole web development space is so dynamic right so we actually go ahead and cover this inside the course inside of the coaching course so the coaching course we have four weekly live coaching goals inside of the course and inside of this coaching course we pretty much cover what's trending what's new what's going on in in this web development world and we build that stuff in real time with you guys yep so i go through um i do that i hold a bunch and unlike unlike youtube you guys literally get to speak to sunny like you will actually get to talk to sunny live and ask these questions so right now even though it might feel like there's this like barrier between us like on the zoom calls you guys will be actually speaking with us as we help you every single week build these massive projects and then once you guys go ahead and build projects or you complete your homework you will get personalized video feedback from javascript success coaches myself and the rest of the team and we actually go in and give you some personal video feedback on on the breakdown of your code what went well what could be you can create all of the things like that yeah let's prove it to you guys right so this is where a lot of you guys submit projects to us so look at that we have tons of projects right and people are submitting us to all their projects like what they're building right so if i keep showing you guys these apps that students are building and sending it to us then you know whether somebody lafan just built a netflix clone following what we did uh z sean is building his portfolio and he's sharing it with us right so we have all these and then somebody built the covet tracker following like one of our apps and so here's one thing i want to show you guys so take a look at this pretty cool it's super fancy works fast now if we go over on the right hand side you guys look at this we're actually providing everybody with a personalized video feedback so here's tatiana providing one of the video feedbacks for one of the students and if i skim through this look she's going through she's talking about what she thinks about this project how this app can be improved um and then also giving him feedback on what he needs to do next to improve so guys let me ask you what would it do for you what would it mean for you if you were submitting your projects and you were getting personalized video feedbacks from us giving you insights on exactly where to improve i mean that alone can literally land you a job because you would improve so damn fast i mean where else sunny can people get video feedbacks on their code where else can that happen like i mean like guys the way i like to put this is basically how many of you guys have gone to like stack overflow and been just like shot yourself in the footwear you ask a question and the only thing we've all been there right we've all been there we go to stack overlook we ask a question and we just feel very stupid afterwards because like nobody helps us or that we don't get answered to that question but here guys you get personalized video feedback for every question for every assignment if you want to jump on a coaching call you have a zoom call where you can literally shout out as many questions as you want and we can go through it as a massive team we can go through and discuss your questions everything is heard and listened to and it's addressed onetoone which is is something which you're just not going to get anywhere else no so this is why guys if you're serious about like you're having a career as a developer and the fact that like yes we give you the nonstop training and the handholding and the community yes we give you the training modules one of the most important things is we teach us actually how to make an income with this right guys so like for example let's just if i go to upwork right now and i go into jobs and we type in react js right something like this like you guys can see that jobs start to come up instantly looking for a react node developer one to three months and we're and they look look at this they're even like there's amazon right we actually show you how to build amazon look they're talking about redux here we teach you redux all of these things that we've actually shown you and today we even talked about aws rest serverless all of these things are actually their jobs people are looking and applying for these jobs and hiring people for all of this stuff right this second so our thing is we don't just want to teach you and give you knowledge that's useless i mean knowledge plus four dollars can almost get you a starbucks our main thing here is the fact that we take your coding skills and then show you literally how to get those jobs on upwork on freelancer.com or even how to get actual fulltime jobs yeah exactly and guys just this isn't actually just something we say like i love every single time i get a message from one of our students where they land a client or they land a job and the amount i've gotten so like it's actually become like a normal thing now like the amount of times that we i have a student reach out saying hey i'm in the final round of an interview and then i'll send me a message saying hey i got the job or like hey i landed a client and the other day i had somebody in sri lanka who actually made an entire month's salary in one week's worth of work which was insane that really is if he made the entire month's salary in one week he's actually moving on the timeline of his entire lifespan he's moving 4x as fast so what that actually means guys is he and in four years from what he's learning from the course he's gonna achieve the same results that he would have achieved in 16 years right like that's how you should think about time in the long time span of things this is a power of like when you learn something or you have a mentor or whatever like on our live streams we even have steve uh or stephen he comes and he drops tons of value imagine if you're actually learning from him directly the people under steve's mentorship are moving at a timeline their timeline of learning is shrinking so what those people would have come to learn on their own in seven six years under steve to learn it in one year massive massive value right because look you can get your money back money is replenishable but time time is not replenishable time just goes away and then never uh comes back so if you guys are interested you got value out of this what i'd highly recommend is click the link in the description below and check out our course profit with javascript as a matter of fact you should just go and do that right now if you're on here and jump in the course we would love to see you inside and we'll provide you with just tons of value so at this point click that link and jump inside of the course yeah yeah right now guys and one thing i want to add to that right guys this is something i can't stress enough the the literally the point in my development career where i really noticed i excelled was when i had good mentors around me right now finding a good mentor is actually really quite a difficult thing especially when you're nuked to coding right but in profit javascript you don't just get one mentor you get me you get cars you get nars you get jacob you get the entire success coach team you get everyone inside of that inside of the course and they will everyone is your mentor at that point so like literally you can there is like there is a recipe for just nothing but success in the inside of the course like in terms of you can literally reach out and guys there's no like hierarchy here in terms of like if you need to message me and say hey sonny i need help on my assignment or hey son you need help with my homework just send me one message and we can jump on a call that's it we'll jump on and we'll actually help you sophie asks i want to know does age matter i'm 27 and looking for my first react job really good question do you know how young my first student was and they uh they were 12 years old right 12 years old a reaction 12. all right 12 years old landed his own school as his client so age does not matter there is no you can't be too young you can't be too old he made some good money from that job as well like guys market doesn't mark the market doesn't care about your age it doesn't care if you're 80 it doesn't care if you're 15 or 12 the market only cares that you can bring value to the world so eight your age nobody cares about they only want to hire on the skills and the value you can bring but keep going sonny no exactly exactly that yeah so honestly like age guys at this point does not matter and you really really don't have to um to freak out about the sort of age like if you if you have a sort of any doubts just think to yourself scrap it to the side and just start my main advice is whatever age just start you're never too old that's it never too old uh thank you guys for coming on somic says i just saw a video of your master class and he goes that was just great thank you guys for coming on we really appreciate your guys's energy participation questions um just the care that you guys bring we really really appreciate you guys thank you guys so much at this point if you're here and you're curious guys jump in the program profit with javascript we love your beautiful face sonny is there anything else you want to say no i can't stress it enough guys like we want to speak to you guys and we want to get in conversations with you guys which is why we love it when you guys tag us in your instagram stories um but like we said check out the link in the description go and check out prophet javascript worth mentioning guys like literally there is nothing to lose like you have a 30day moneyback guarantee so on the 29th day 59th minute if you still feel like oh this isn't really for me you can go ahead and just go ahead and get your money back like when when there's that guarantee behind it i just think you have 29 days of free training like literally 29 days of free training 29 days to make your mind up as to whether or not it's good enough but do not just miss out on it because i'm telling you this could be this is this is going to be the decision that changes your life yep and i love what james said he says the market does not care about your age he's just like what matters is he can bring value to the world wow exactly exactly reyes i think this is a great question he asks he says i would like to know if um i can learn react.js and i can get the job where i am living in houston yep so yeah honestly guys this is the beautiful thing about being a javascript developer and react in particular like you can work from anywhere guys and you can land clients anywhere so if you're based in asia if you're based in let's just say in like you could be based in india you could be based in like america you could be based in london you can get clients anywhere else in the world like you could land a uk client you could land a u.s client you can land jobs um with any of these guys and you could yes so to answer your question if you're based in houston then you can get any job in any part of the world and this is actually something which leads on to um something called a nomad lifestyle it actually opens the door for something which a lot of people do where they pretty much just travel around and i know a lot of friends who just lit they just travel around they live in thailand for a year and they pretty much just code right so if you know this skill you can pretty much do that as well so if you ever wanted to go traveling this is going to open that door for you and you can actually start traveling around and carry on coding and making an income that's right um guys thank you so much for being on here we appreciate you and love you so much as always this is qazi this is sunny guys and we will see you in the next in the next video peace right peace out guys
