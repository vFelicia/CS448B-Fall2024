With timestamps:

00:00 - welcome to another bill
00:03 - i am so pumped to be back guys
00:06 - it's been a while it's been a while but
00:09 - we are going
00:10 - back and we are bringing some serious
00:13 - bangers and today we are starting
00:16 - with a bang and we're going to be
00:18 - building the
00:20 - redux redux we haven't done redux before
00:24 - we're going to be building the redux
00:26 - clone of
00:28 - discord so i know loads of you guys were
00:30 - one it
00:31 - uh actually wanted this to happen for a
00:33 - long time so
00:35 - we listened and we're gonna bring the
00:36 - fire today and we are building
00:39 - the discord clone in uh with redux so
00:42 - that'll be
00:42 - dope let's see where everybody is at hey
00:45 - my girlfriend's in the house
00:47 - what's up let's go ahead and see we got
00:50 - yeah papa reacts back guys hey
00:54 - let's go ahead and let me go ahead and
00:55 - demo the app while we get some comments
00:57 - coming in right
00:58 - and also get invite your friends smash
01:00 - the thumbs up button if you're excited
01:02 - and uh it's gonna be it's gonna be a big
01:04 - video i can see a flood of people coming
01:06 - in right now that is
01:07 - dope let's go ahead and show you guys
01:09 - what we got to look forward to today
01:13 - so we have the discord clone
01:16 - so here you can pretty much go ahead and
01:17 - see so if i go ahead and log in
01:19 - uh let's go ahead and go back so we have
01:21 - discord right here
01:22 - and this builds jacked guys like i'm not
01:25 - joking this
01:26 - build this build is going to be pretty
01:27 - pretty big okay so we're going to have a
01:30 - few things
01:30 - happening with this we're going to have
01:31 - the login so i've built it out with
01:35 - we have full google authentication so
01:38 - let's go ahead and let me go ahead and
01:39 - make the stream a little bit
01:41 - better for you guys to go ahead and see
01:43 - so i'll pause mine
01:45 - and there we go so you can go ahead and
01:47 - click on
01:48 - an email account so let's go ahead and
01:50 - log in and you should be able to see
01:52 - now we're inside right and then if you
01:54 - go ahead and click on the channel
01:56 - what it does is it pulls all your
01:57 - information so you guys can go ahead and
01:59 - zoom in there you go
02:01 - pulls all your information from your
02:02 - google account down to the bottom
02:04 - and then you can go ahead and see even
02:05 - gets you a unique user id
02:07 - but here you can see it's all real time
02:09 - guys so we've got chat rooms on the left
02:10 - so wow it works
02:12 - let's go ahead and make a new chat room
02:13 - let's call this one youtube
02:15 - boom and i'm going to go ahead and click
02:17 - that and i'm going to say
02:19 - this works and enter there we go
02:23 - nice and then we go ahead and say are
02:26 - you guys ready
02:30 - are you guys ready to build
02:33 - a discord clone because i know loads of
02:35 - you guys have been wanting this
02:38 - if you are smash the thumbs up button
02:40 - and invite all your friends because this
02:42 - is going to be
02:43 - a big big build okay now i know some of
02:45 - the streams lagging but
02:47 - it will be clearing up soon guys so just
02:49 - just be patient and everything will be
02:51 - will be good okay um hey let's go
02:54 - through the chat let's go ahead and see
02:56 - who's in the house
02:57 - so we have what's up we've got
03:00 - let's go ahead and look yes yes yes some
03:03 - buffering guys
03:04 - i know um hey this guy this show just
03:07 - says i just thought about building a
03:09 - discord clone
03:10 - what the hell well we listened dude we
03:12 - listened sakshi shah says
03:14 - just did the amazon clone and loved it
03:16 - awesome stuff dude and
03:18 - a lot of people inside the course so
03:20 - inside of pwj
03:21 - i actually went ahead and told them to
03:23 - go ahead and do the amazon challenge
03:25 - again
03:26 - but with redux and today i'm going to be
03:27 - teaching you guys redux
03:29 - so redux is one of the most wanted
03:32 - most popular things that you could
03:33 - pretty much learn when you're learning
03:34 - react so it's the most valuable thing in
03:35 - terms of
03:36 - what a job essentially wants so today's
03:39 - going to be a big build for you guys
03:40 - okay
03:41 - um redux is pretty much in previous
03:44 - builds i've done everything with the
03:45 - react context api
03:47 - and in this build i'm going to be doing
03:48 - it with redux so redux is a lot more
03:51 - valuable in terms of professional
03:52 - environments so you guys are going to
03:54 - see how to go ahead and do that
03:55 - um and loads of people i can see hey
03:57 - papa react is back
03:59 - i'm back dude uh also guys we're gonna
04:01 - be dropping some react native stuff
04:03 - happening soon so
04:04 - if you're excited for that smash the
04:06 - thumbs up button i'm only gonna do it
04:08 - if that number goes up if that thumbs up
04:10 - goes down uh it goes up sorry because
04:12 - you know we need to know that it's
04:14 - wanted
04:15 - by you guys okay so let us know if you
04:17 - guys want to do that
04:18 - uh again let's go ahead and show you
04:20 - guys the build so this is what we're
04:21 - going to be building today the discord
04:22 - clone so we have loads of channels here
04:24 - and you can go ahead and see and you can
04:27 - actually i will show you guys is also
04:29 - how to deploy this so
04:30 - oh check this out deepak
04:33 - gupta says hey sunny i got a six figure
04:37 - job just by building your coven 19 clone
04:39 - and by joining my joining date on june
04:41 - 2021 really thank you so much buddy
04:43 - let's go keep on learning that's
04:45 - dope dude everyone give a thumbs up for
04:48 - him
04:48 - let's go ahead and that's the kind of
04:50 - energy we want and
04:51 - we just hit over 430 concurrent viewers
04:54 - so across facebook and youtube
04:56 - that's what i'm talking about guys and
04:58 - we're going to be bringing the heat on
04:59 - these videos we also just dropped a
05:02 - huge video a 12 hour react
05:05 - channel ismail alma says man give me a
05:08 - shout out
05:08 - there you go hey calvin kobanda is in
05:10 - the house what's up dude
05:12 - good to see you again nice stuff and
05:16 - uh let's go ahead and see also somebody
05:18 - says what about the voice channel so
05:20 - i mean if you guys enjoy this build we
05:21 - can pretty much always go ahead and
05:23 - extend it in another
05:24 - build i can go ahead and add the voice
05:25 - channels that'd be fun hey david
05:27 - jonathan's back we've got that we got
05:29 - now we got the regulars in the house
05:31 - what's up guys uh somebody said can we
05:33 - make a snapchat from react yes we can
05:36 - tie dinner says you're the best thank
05:37 - you very much dude appreciate the love
05:39 - we got south africa in the house what's
05:41 - up edward nice
05:43 - suraj thank you appreciate the love dude
05:46 - um
05:47 - also we're gonna be we're slowly
05:48 - upgrading the the setup so you know
05:50 - it's gonna be pretty fun we've got
05:51 - jamaica in the house as well nice
05:53 - awesome stuff dude also guys i'm going
05:55 - to be jumping through um
05:57 - we're actually going to be doing it with
05:59 - uh firebase as well so
06:00 - let me go ahead and move this comment
06:02 - out of the way so yeah we'll pretty much
06:03 - build this out with firebase you can see
06:05 - we're using cloud firestore
06:06 - we use google authentication and in this
06:09 - build we actually go ahead and use a
06:11 - persistent
06:12 - so i remember some of you guys are like
06:14 - hey something we're using google
06:15 - authentication but it keeps logging me
06:16 - out so i went ahead and fixed that for
06:18 - you guys so
06:18 - we don't have we don't have that issue
06:20 - anymore so if i go ahead and refresh
06:22 - it will log me back in there we go oh
06:24 - let me show my screen
06:25 - if we go ahead and refresh and we go
06:27 - back there you go it logs me back in
06:29 - and everything comes up now this is real
06:31 - time so it's going to be awesome
06:33 - and it's going to be pretty pretty nice
06:35 - sanjay says
06:36 - hey sunny nice to see you in the live
06:38 - stream again uh big hugs from uzbekistan
06:40 - thank you so much dude i am back
06:42 - in the house um so this is going to be
06:44 - fun guys
06:45 - you guys do very good comedy keep it up
06:48 - yeah guys let us know did you guys like
06:50 - the vlogs that we were dropping
06:52 - because uh those people like where's
06:53 - sunny i'm based in london i did try and
06:55 - fly out and
06:56 - it's pretty hard you know so it's pretty
06:58 - hard in covid loch now to go ahead and
07:00 - go to london but
07:01 - with that said let's go ahead and start
07:04 - this build
07:05 - if you guys are pumped up let me know in
07:07 - the comments because i want to get the
07:08 - energy
07:09 - flying today for the first video back
07:11 - and tomorrow
07:12 - also get your calendars ready tomorrow
07:14 - i'm dropping an imessage build
07:16 - so that's going to be insane oh my gosh
07:19 - you guys love to see your kickboxing
07:21 - hey priyanka patel nice dude thank you
07:24 - so much for the donation
07:25 - he goes thank you for global persistence
07:27 - uh yeah so we have global persistence
07:29 - today so that's going to be something
07:30 - cool
07:31 - hey we've got the donations coming in
07:33 - we've got um
07:35 - uh anka kadam says i just completed the
07:38 - instagram clone last night turned it
07:39 - turned and damn it turned out clean
07:41 - thanks to you and kazzy mate lots of
07:42 - respect to you both appreciate you dude
07:44 - thank you thank you so much uh we have
07:47 - looney phil
07:47 - amazing clone series and heads off for
07:49 - the 12 hour course thank you so much the
07:51 - 12 hour course is
07:53 - available now so you can pretty much go
07:54 - ahead and watch that and we do a huge
07:56 - run-through of everything so
07:58 - if you're looking for someone to start
07:59 - the 12-hour course is going to be a
08:01 - great place to for you to go ahead and
08:03 - you know get started with that so yeah
08:05 - tomorrow tomorrow we are doing the
08:06 - imessage clone now before we get started
08:08 - guys
08:09 - i want all of you guys to get the most
08:10 - value out of what we offer
08:12 - on this channel so in the description we
08:15 - pretty much have a
08:16 - free training okay so this is a free
08:18 - training you guys can go ahead and go to
08:20 - it right now
08:21 - the link's in the description and what i
08:22 - want you guys to go ahead and do is
08:24 - literally go and sign up for it right
08:26 - now
08:26 - okay so go down it's free it's three
08:29 - hours we teach you how to do the netflix
08:31 - clone and we pretty much go ahead whoa
08:32 - we just got a huge donation i'm gonna
08:34 - shout out in one sec
08:36 - um yeah let's go ahead and go
08:39 - everyone go to that description right
08:40 - now sign up to that training because i
08:42 - want you guys to get the most value
08:44 - from what we offer on the channel so go
08:46 - ahead and do that and that'll be dope
08:48 - let's go ahead and see that beautiful
08:50 - donation enter tech
08:51 - incorporated just sent a 20 canadian
08:54 - donation thank you so much dude
08:56 - uh that massively appreciated that i
08:58 - didn't even write anything
08:59 - humble as hell did um somebody said hey
09:03 - victor this is what i'm talking about
09:06 - guys victor just dropped another one he
09:07 - goes i made
09:08 - seven clones and today i joined oh we
09:11 - joined pwj today let's
09:13 - go dude welcome to the family that is so
09:16 - awesome dude
09:17 - and uh yeah i'll see you in the coaching
09:19 - course on tuesday
09:20 - that'll be fun dude tomb tomb says yo
09:23 - good content shout out to students of
09:24 - that atm i'm not sure what that 18 is
09:26 - but thank you so much for the donation
09:28 - um hey paparik hope you're good my
09:30 - favorite programmer
09:31 - hey let's go guys i can see so roger
09:34 - says i didn't take a course
09:36 - about redux can i join this tutorial
09:38 - guys this tutorial is
09:40 - it's beginner friendly okay it's
09:42 - beginner friendly so make sure you guys
09:44 - if you've never coded react before go
09:46 - ahead and follow it okay it's gonna
09:47 - might be intense it might be something
09:49 - like that but if you go ahead and get a
09:50 - bit stuck
09:50 - don't worry it's recorded you guys can
09:52 - go ahead and get started with it so
09:54 - with that said let's go ahead and get
09:57 - started
09:57 - with the build i'm excited let's go
10:02 - so first thing you want to go ahead and
10:05 - do
10:05 - and i love the energy guys everyone's
10:08 - like papa react is back
10:10 - let's go rishi's sick says i said
10:12 - atlanta get gig well done dude send us
10:14 - proof
10:15 - um on instagram and also if you guys
10:17 - aren't following me go ahead and
10:19 - uh go ahead and follow on instagram it's
10:21 - so difficult i always change this thing
10:23 - but go ahead and follow instagram and we
10:24 - can very much have a chat so
10:26 - go ahead and check out so today
10:29 - oh dude this guy just said he made
10:33 - three
10:33 - thousand dollars it's not coming up but
10:35 - he made three thousand dollars
10:36 - from the cover 19 tracker damn nice dude
10:40 - okay with that said oh man these
10:43 - comments
10:44 - these comments are great guys massively
10:46 - appreciate you we just hit over 500
10:48 - viewers right now
10:50 - 500 views let go ahead and literally
10:52 - let's get a number up guys
10:54 - go ahead and tell everyone that we're
10:55 - back on the channel we're back live
10:57 - today and tomorrow and we're going to be
10:59 - dropping so much content for you guys so
11:02 - really really good stuff okay really
11:05 - really good stuff okay with that said
11:06 - let's not waste any more time let's go
11:08 - ahead and jump back in so again
11:09 - before we get started go ahead and sign
11:11 - up to the training in the description
11:13 - three hour
11:14 - training go it's pretty much it's
11:15 - completely free so
11:17 - go ahead and do it like it's gonna help
11:18 - you guys out on your coding journey
11:20 - but with that said guys quick demo of
11:23 - the app one more time for anyone who
11:24 - joined in new
11:25 - this is the discord clone we can pretty
11:27 - much go ahead and log out
11:28 - log in with full google functionality so
11:31 - google login
11:32 - and boom somebody goes sunny just saw
11:35 - your rubik's cube story
11:37 - back in the days man back in the day um
11:39 - and yeah and
11:40 - pretty much when we type in here so we
11:41 - can go yo
11:43 - and you see we can pretty much it comes
11:45 - up and
11:47 - let me go ahead and see if i get my
11:49 - annotation there we go and you can see
11:51 - it pops up here so keep an eye over here
11:53 - and if i go ahead and say
11:54 - who's ready to start so who
11:57 - is ready to start the build
12:01 - go ahead and let me know guys if you're
12:03 - ready to go ahead and get started with
12:05 - this
12:05 - uh and also loads of comments from is
12:07 - this for beginners 100
12:09 - this is all for beginners okay um so
12:12 - yeah so rishab says isn't the netflix
12:14 - one going to clash with this live
12:16 - uh just go ahead and register dude and
12:18 - we run that training quite a lot
12:20 - so pretty much register and then we'll
12:22 - ping you uh
12:23 - a link and you'll be able to watch it
12:25 - after the build okay
12:27 - and i'll be able to help you out with
12:29 - that said guys let's get started
12:31 - okay so first thing you want to go ahead
12:33 - and do is
12:35 - open up visual studio code so let me go
12:37 - ahead and pull up a new one
12:39 - um actually i'm going to show you guys a
12:40 - little trick so today we're using redux
12:43 - okay so we're using redux today so with
12:46 - the redox in mind
12:47 - if you did you go on google and type in
12:48 - redux i'll show you hey we just got
12:51 - another supernova
12:52 - superchat donation thank you so much
12:54 - ayush gupta
12:55 - oh yeah nice to see you again hey sunny
12:57 - when will you be dropping react native
12:58 - soon soon okay um
13:01 - and also i see yeah so if you get if you
13:03 - spam guys we do block so please don't
13:06 - spam
13:06 - okay so now what we're going to do is
13:08 - click on getting started and i'll keep
13:10 - it
13:10 - nice and sweet and short for you guys so
13:13 - redux toolkit so you could do it this
13:14 - way
13:15 - but there's a very easy way to now to
13:16 - get started with a react app
13:18 - um no wait oh man i have to check this
13:21 - out
13:22 - serene cowden is back he goes great to
13:24 - see you back to
13:25 - sean hey so funny man
13:29 - uh jason was actually one of one of my
13:31 - favorite singers so
13:33 - good stuff all right let's go ahead and
13:34 - jump in back um
13:37 - oh man this is insane like i love
13:39 - seeing this stuff like the actual effect
13:41 - that we have so i made 500
13:42 - in a week just with the netflix phone i
13:44 - just configured a little bit to use an
13:45 - anime api instead you guys are
13:47 - overpowered keep up the good work
13:48 - hey thank you dude appreciate you um
13:52 - let's go ahead and get started then so
13:54 - here is the command that we're going to
13:55 - do
13:56 - so it's pretty much very very similar to
13:58 - what we normally do okay so mpx create
13:59 - react app
14:00 - with the name of the app but here now we
14:03 - do dash dash template redux
14:05 - okay so don't freak out if you've never
14:06 - used redux before don't freak out it's
14:08 - going to be okay
14:09 - okay i know it can get pretty scary but
14:11 - you know it's going to be okay
14:13 - thank you so much today t dane blake so
14:16 - 199 super dollar
14:17 - super chat sorry thank you so much dude
14:19 - appreciate that
14:20 - um awesome so let's go ahead and get
14:23 - started
14:24 - um with the terminal go ahead go into
14:28 - the directory that you want
14:29 - so i'm going to go into this and i'm
14:31 - going to go ahead and say
14:33 - i've actually already run this command
14:34 - so it's mpx create react app and then
14:37 - redux so i've got it over here and i'm
14:40 - going to call it
14:41 - disk or clone youtube because i've
14:43 - already got another one called discord
14:44 - clown
14:45 - hit enter and that will go ahead let me
14:47 - make that a bit bigger
14:48 - and that will go ahead and spin up
14:50 - everything that we need
14:51 - so while that gets started guys i would
14:54 - recommend that you go over to firebase
14:56 - because firebase is pretty much how
14:57 - we're going to power the back end of
14:58 - this build
14:59 - so firebase.google.com and then over
15:02 - here you want to go to your console
15:05 - and you want to click on add project
15:07 - okay now here you can just go ahead and
15:09 - do discord
15:10 - clone i'm going to do disk click on
15:12 - youtube and keep it consistent because
15:15 - you know how we did and we're going to
15:16 - go back and go here and you don't need
15:19 - to enable google analytics i'm going to
15:20 - enable it for now because
15:21 - you know when we deploy this thing i
15:23 - like to see you guys looking create
15:24 - project and
15:26 - there we go okay so this thing goes
15:28 - ahead and gets created
15:30 - and let's go ahead and see so somebody
15:33 - says while we wait
15:34 - garvett says hey sonny my father is a
15:36 - bit conscious of spending a thousand
15:37 - dollars in the pwg what should i do
15:39 - should i show them all the videos about
15:40 - pwg
15:40 - honestly dude just literally go ahead
15:42 - and use the free videos okay
15:44 - go go ahead and use the free videos on
15:46 - youtube in the meantime
15:48 - and pretty much go ahead and build a
15:49 - bunch of stuff and show you that and say
15:51 - like hey like this is what i've done and
15:52 - i want to take it a step further
15:54 - i think that will be enough dude um and
15:56 - and all the best with that
15:57 - okay so with that said
16:03 - in class course somebody says would you
16:04 - do an in class course well after kovitz
16:07 - out we're actually going to do in-person
16:08 - events so
16:09 - stay tuned for that okay now you want to
16:12 - click and h
16:13 - click continue now that will load up and
16:15 - then what you want to do is hit this
16:17 - little or you can hit this web icon over
16:19 - here
16:19 - click that go here and i'm going to say
16:21 - discord
16:22 - clone youtube boom and
16:26 - then we're going to go ahead and
16:29 - do how to get rid of frustration when
16:31 - you keep for failing and code about
16:32 - feature in app based
16:33 - okay thank you so much gaming map gaming
16:37 - mat says
16:37 - love your builds uh two little two pound
16:40 - donation hey
16:41 - london huh london house love your bills
16:43 - and videos man keep it up
16:44 - appreciate you dude appreciate that um
16:46 - and make sure you go ahead and follow
16:48 - my instagram it's down here
16:51 - and you can pretty much keep in touch
16:53 - and and and let me know what you built
16:55 - because i'd love to see you guys
16:56 - interacting and going ahead and building
16:58 - out the stuff so
17:00 - um does anyone reckon there is still
17:02 - money to made in mobile development 100
17:05 - dude 100 richard says our live calls
17:07 - recorded in pwj yes
17:08 - everything that we do in pwj is recorded
17:11 - so it's completely there so we're going
17:13 - to click on continue oh wait a minute
17:14 - why are we on crashlytics
17:16 - let's go to this little cog icon go
17:18 - project settings
17:19 - and we're going to scroll down and you
17:21 - see this right here guys config
17:23 - this is what we're interested in okay so
17:25 - you want to go ahead and copy
17:27 - this you just want to copy this and then
17:30 - oh nice dude that's a donation
17:33 - appreciate you guys
17:34 - holy crap so super champ says hey sonny
17:38 - what projects do you recommend for
17:39 - putting up on your portfolios for a
17:40 - front end developer also
17:41 - is it necessary to jump in the back end
17:43 - if you actually want to create a fully
17:44 - functional web app
17:45 - so very good question and to answer that
17:47 - question quickly before we get started
17:50 - uh as for what you want to put on your
17:52 - portfolio i would say go ahead and
17:53 - literally do all the clones
17:55 - all the clones are going to be like it's
17:56 - going to be huge for you guys um
17:58 - and that will make you have a very
18:00 - attractive portfolio now
18:02 - something i would recommend is that
18:04 - people have have
18:06 - had a lot of success of things like the
18:07 - netflix clown the spotify clone
18:09 - and frank grandma's actually got a six
18:11 - figure contract so
18:14 - that's good money right there okay so
18:15 - you guys can go ahead and get started
18:16 - with that and that will be really really
18:18 - good and
18:18 - you guys will be able to build out a
18:21 - portfolio but
18:22 - in the meantime literally just go ahead
18:24 - and do what you find fun so honestly
18:26 - anything there anywhere anything where
18:27 - you can provide a bit of value
18:29 - uh that's going to be the best place to
18:31 - start uh okay so with that said
18:33 - i'm gonna copy this and then you see we
18:36 - go back to our terminal everything is
18:37 - good so we're gonna go cd
18:39 - discord okay so now we're inside
18:44 - also i'm using all my zsh for this guys
18:46 - so if you haven't used that out
18:48 - uh go ahead and check that out it's a
18:49 - really handy terminal thing that you can
18:51 - do
18:52 - with all my um with it makes your
18:53 - terminal a lot easier
18:55 - now what we're going to do is i'm going
18:57 - to go ahead and open up
18:58 - a vs code inside
19:02 - open up vs code with our stuff inside
19:05 - okay so with that said
19:08 - let me quickly damn it i messed up all
19:11 - my windows
19:13 - okay with that said now somebody said
19:16 - why using firebase
19:17 - dude just watch and wait and see wait
19:20 - and see
19:20 - it's all i'm gonna say to you um let's
19:23 - go ahead and what is this oh we've got
19:25 - my coders playlist
19:26 - boom okay
19:30 - boom boom also if you guys don't listen
19:33 - to that i would check that out it's
19:34 - called lo-fi
19:35 - uh coders on spotify really really good
19:37 - playlist um
19:39 - so and also somebody says when will this
19:40 - end uh everything we do on the channel
19:43 - is always up on the channel afterwards
19:44 - okay so pretty much you guys can watch
19:46 - this at your own time afterwards as well
19:48 - and if you're excited guys please smash
19:49 - the thumbs up button because we've
19:50 - almost hit 500 likes which is dope
19:53 - okay now let's go ahead and
19:56 - move my screen a bit up there we go so
19:59 - here guys we're going to go into source
20:00 - and the first thing we're going to do is
20:01 - hit command j
20:03 - and you're going to see your terminal
20:04 - pop up now here what i'm going to do is
20:06 - i'm going to go ahead and say npm
20:07 - start to spin up the app now i think i
20:10 - have another app running so i'm going to
20:11 - go ahead and do y
20:13 - and that should go ahead and start up on
20:15 - a localhost so
20:18 - boom boom boom one second
20:22 - now oh nice gaming map says hey i listen
20:25 - to that
20:26 - it's good right lo-fi coders on spotify
20:28 - it's nice dude
20:29 - um and now the app is up and running so
20:31 - let's go back to
20:32 - our stuff go here and let's go to our
20:35 - localhost 3002
20:36 - for me for you guys it'll be 3000 if
20:38 - you're not running anything
20:39 - and here we go so this is like a little
20:41 - bit different from the correct react app
20:43 - that we're used to right
20:44 - and you can see that this is actually
20:45 - using redux to power the state
20:47 - management here so everything that we
20:48 - pretty much have inside of here
20:50 - hey what's up keenan good to see you
20:52 - again dude
20:53 - um yeah nice to see nice to see some
20:55 - locals in the house
20:56 - nice um okay so also please stop smiling
21:00 - in the chat guys
21:01 - okay so you can see pretty much here i
21:03 - if i add stuff and remove it it's pretty
21:05 - much getting updated
21:06 - but not by the typical state it's
21:08 - actually being managed by
21:10 - redux so redux is essentially like a
21:11 - data layer around the app but it's like
21:13 - the production level data layer okay so
21:15 - it's the thing which is gonna
21:17 - it's used in a lot of professional
21:18 - environments and we're gonna show you
21:19 - guys how to do all of that today
21:22 - uh and you can also add different
21:23 - amounts let's go ahead and say if we add
21:24 - in 20 so you can add amount
21:26 - at asynchronous so you see there's a
21:28 - little delay before it gets added which
21:30 - is kind of cool we just hit over 500
21:32 - people as well watching so
21:33 - what's up guys uh if you guys just
21:36 - joined in we're going to be building the
21:37 - discord clone so
21:38 - get excited for that it's real time
21:40 - everything is supported it supports
21:42 - google authentication we're going to be
21:44 - doing all of that in today's build so
21:46 - and we're building redux so awesome
21:48 - stuff so all you need to do was get that
21:50 - up and running um somebody said so why
21:54 - are you using redux because redux if
21:55 - you're learning
21:56 - react then i would say you need redux
22:00 - okay
22:00 - like redux is going to be one of those
22:01 - skills where you pretty much go ahead
22:04 - and and
22:04 - take yourself from becoming a like
22:06 - someone who might get the job to
22:08 - to pretty much you you need redux to get
22:10 - those you know to get those good paying
22:12 - jobs okay
22:13 - okay so now what we're going to do is
22:16 - we're going to go ahead and clean this
22:19 - up a bit so we're going to go ahead
22:20 - remove app.test.js logo
22:22 - and set up test.js so i'm going to go
22:24 - ahead and get rid of those boom
22:26 - they're gone and then we go to features
22:30 - and i'm going to keep some of this stuff
22:31 - i'm going to rename this to
22:33 - counter dot css and this these are just
22:36 - dummy files okay
22:37 - so these are dummy files we can go into
22:40 - counter.js
22:41 - change this so it reports from
22:42 - counter.css now
22:45 - the only reason you need to do this guys
22:46 - is so that you don't get those errors
22:48 - but
22:49 - we're going to come back to this for
22:50 - like for like help
22:52 - in a bit so let's go over here and let's
22:55 - delete everything inside of app.js
22:58 - so everything inside is the header tags
22:59 - and then we're going to say h2
23:01 - let's just say h1 let's make this thing
23:04 - big say h1
23:05 - and then here we're going to say let's
23:07 - build oops let's build
23:09 - a discord clone
23:13 - boom i'll make that a little bit bigger
23:15 - for you guys there we go
23:16 - let's build a discord clone also if you
23:19 - guys can see that let me know okay
23:22 - so i'm going to save that and you can
23:23 - see it's still freaking out
23:25 - because there's logo up here so we're
23:27 - going to get rid of that now also just
23:29 - before
23:30 - you pretty much go ahead and
23:36 - okay so this actually i want to quickly
23:38 - address this question right so somebody
23:39 - says sanga i'm passing for a depression
23:41 - where i try to work hard in coding but
23:42 - every time i try to write my own app i
23:44 - get so frustrated that i leave it and
23:45 - complete it how do i get rid of it
23:47 - i just like dude debugging it coding is
23:50 - never a straight line okay it's never a
23:52 - straight line you're always going to
23:52 - become into
23:53 - places or like situations where you get
23:56 - stuck and i mean like not stuck for like
23:58 - five minutes or ten minutes
23:59 - you get stuck for hours sometimes i've
24:00 - been stuck for a week before working on
24:02 - projects
24:03 - right on like one feature inside of an
24:05 - app so
24:06 - it is a normal thing and in those
24:09 - experiences
24:09 - is where you will learn now if you guys
24:12 - agree with me let us know you let me
24:13 - know your stories in the comments right
24:15 - now so if you've had a debugging
24:16 - nightmare or experience
24:18 - go ahead and check that out okay um
24:21 - anka thank you so much for the donation
24:22 - he says um so is it necessary to jump
24:24 - into back in sunny
24:25 - it's not necessary but i i mean depends
24:28 - what you want to go into but in this
24:29 - case firebase is going to handle our
24:30 - back end for us so with that said let's
24:32 - go back
24:33 - to our code so here now what we're going
24:36 - to do is get rid of counter
24:38 - and then if we go back to our app it
24:40 - says let's build a discord clone okay
24:43 - so what i'm going to do is i know you
24:45 - guys actually like it when i do it like
24:47 - this boom boom
24:50 - there we go and you guys can see both at
24:53 - the same time so
24:54 - let's build a discord clone then what
24:56 - we're going to do is we're going to go
24:56 - ahead and change this to a lowercase a
24:58 - because this is actually the bem naming
25:01 - convention
25:04 - yep so bem naming convention so it's the
25:06 - way we name classes to be
25:07 - scalable maintainable quite easy to
25:10 - understand
25:11 - um okay and oh priyanchu what's up
25:15 - dude nice he is a 13 year old badass
25:19 - inside of our course uh make sure you
25:21 - make sure you guys go ahead and follow
25:22 - him so
25:23 - then we're gonna go to app.css and
25:26 - delete everything inside of app.css
25:28 - so we're going to go ahead and get rid
25:30 - of that let me make this a bit smaller
25:31 - for you guys
25:32 - and then let's go ahead and
25:35 - oh i love this comment thank you dude
25:37 - you're my inspiration to become a web
25:38 - developer
25:39 - thank you so much dude really really
25:41 - really appreciate that
25:43 - um right so let's go ahead and go back
25:45 - into index.css
25:46 - and then here guys you see this little
25:48 - annoying bit of space over here
25:50 - um so this space over here right so you
25:53 - see that little top gap it's got like a
25:55 - imaginary
25:57 - sort of like margin that's being added
25:58 - there right to get rid of that
26:00 - we're going to go ahead and say my um
26:03 - all
26:03 - so asterix and we're going to say margin
26:06 - zero
26:07 - save it and the kill says damn the
26:10 - badass is here
26:11 - what's up um then let's go ahead and
26:14 - now you can see it this is where we want
26:16 - to start from okay
26:18 - and um
26:22 - yes graph icon uh you guys can go ahead
26:25 - and read this comment yourself but it
26:26 - pretty much is saying like if i don't if
26:27 - i copy some snippets
26:28 - is it okay yes it's okay trust me like
26:30 - keep doing it just keep working hard you
26:32 - get pattern recognition you'll get sort
26:34 - of up to date with things and
26:36 - just just don't quit dude just keep on
26:37 - going keep the energy high
26:39 - and and and things are going to be
26:41 - really tricky amberly so kazi's
26:43 - girlfriend she dropped a really really
26:44 - good point today on her on her instagram
26:46 - and her youtube actually she's got
26:48 - really awesome youtube make sure you go
26:49 - check it out it's sugar shaw
26:51 - and what she said is um discipline
26:55 - is actually what pushes you past the
26:57 - point where your body doesn't want to do
26:58 - any
26:58 - do that thing anymore motivation is kind
27:01 - of high for everyone in the beginning
27:02 - right we're all it finds it very easy
27:04 - to jump into coding but your discipline
27:07 - is what's going to be the thing that
27:08 - counts and when you get into those
27:09 - debugging situations where things get
27:10 - really really
27:11 - like hard and and get tiring and sort of
27:14 - like you're sitting there for the hours
27:16 - and the sort of like pain to quit comes
27:18 - in
27:19 - that's where you you have to have some
27:20 - discipline and that's what's going to
27:21 - get you to build awesome apps like today
27:24 - and let's jump back in so with that said
27:27 - we're going to go ahead and now we have
27:29 - our starting point okay
27:30 - so with that done we don't actually need
27:33 - to do anything more at this point
27:35 - what i'm gonna do now is inside of
27:38 - app.js
27:39 - we're gonna build two portions of the
27:41 - app first okay so let's go back to our
27:44 - final build over here and now you can
27:46 - see in this build
27:47 - right we have two main sections okay we
27:50 - have
27:50 - the i'm going to go ahead and move my
27:52 - drawing tools um
27:55 - oh this is a good point actually
27:57 - jennifer says i'm in a code camp and
27:59 - everyone was super impressed by twitter
28:01 - knowing i did from your quick
28:02 - look oh god twitter clone video
28:05 - okay uh and that's what i hear all the
28:07 - time like
28:08 - people spend thousands on coding
28:10 - bootcamps okay and
28:11 - it's crazy because like i mean like uh i
28:14 - don't know man
28:15 - like i like we you can do this stuff and
28:17 - we pretty much that's why that's why i
28:19 - build these clones you guys can go ahead
28:20 - and get the value for free
28:22 - and if you want to go ahead and take you
28:23 - to our next level and learn how to make
28:25 - a serious
28:26 - like income with this that's where we
28:27 - offer our course profit with javascript
28:29 - so
28:30 - all that stuff all that good stuff is in
28:32 - the description okay so make sure also
28:34 - make sure before we get started go ahead
28:36 - and sign up to our free training so
28:38 - completely free okay what are you doing
28:40 - sign up to that
28:42 - let's go back okay so here the first
28:45 - thing we have
28:46 - is i'm going to go ahead and freeze the
28:48 - app okay
28:49 - and graph icon
28:53 - it is okay to listen to music dude i
28:54 - listen to music when i code but
28:56 - anything without lyrics so you see we
28:58 - have two sections over here okay
29:00 - we have one section over here and we
29:01 - have one section over here
29:04 - okay that's a bit better so we have the
29:06 - first section so i'm gonna go ahead and
29:08 - just draw on this
29:09 - so this first section we're going to
29:11 - call it the sidebar component okay oops
29:13 - let me make this a bit smaller
29:14 - this section is going to be called the
29:16 - sidebar component
29:18 - and this section is going to be called
29:20 - the chat component right so we have two
29:22 - components here
29:23 - and then we're going to break everything
29:24 - down into smaller sub components so
29:26 - obviously you've got things like the
29:29 - oops
29:30 - you've got things like the the uh
29:33 - channel component we're gonna have the
29:35 - chat component
29:36 - uh we're gonna have the input component
29:38 - things like that right
29:40 - all of this is going to be separate
29:41 - components because in react we like to
29:43 - use components everything is component
29:45 - based
29:45 - okay so with that said we have the
29:48 - sidebar and the
29:49 - chat okay so what i like to do as if you
29:52 - haven't seen my builds before
29:53 - is i like to use comments to sort of
29:55 - mask it out okay so the first thing i'm
29:57 - going to do is say
29:57 - sidebar here and the second one i'm
30:00 - going to go ahead and say chat
30:01 - and this is just comments so this is
30:03 - non-functional code but it's pretty much
30:05 - where i want the component to be
30:07 - so the first thing we're going to do is
30:08 - build out this sidebar so here i'm going
30:10 - to go ahead and say sidebar
30:11 - and of course my code is going to freak
30:13 - out because there is no sidebar at the
30:14 - moment that's defined okay
30:16 - so it's helping us out here by telling
30:18 - us this so what we're going to do
30:20 - is go ahead and do command b to open up
30:22 - our side and then here
30:24 - i actually want you guys to do another
30:25 - clean up step okay so you see right now
30:27 - it says features
30:28 - counter because in the demo app what
30:30 - they did is they actually went ahead and
30:33 - and put everything into our into a
30:34 - folder called features but what i want
30:36 - you to do is actually go ahead
30:38 - and move this outside okay so move this
30:41 - outside
30:42 - go ahead and delete the counter folder
30:45 - and then i want you to grab the counter
30:47 - to the counter slice and pretty much put
30:49 - that into the features folder so
30:51 - i just want one folder called features
30:54 - with those three things inside of it
30:56 - and we'll come back to that afterwards
30:57 - but that will make life a lot easier
30:59 - okay
31:00 - um so yeah i love react but i don't like
31:03 - css or designing part what should i do
31:05 - maybe consider a back-end development if
31:07 - you don't like the styling i used to
31:08 - hate css dude
31:09 - and it was only until i did things like
31:11 - flexbox froggy and i just gave it a
31:13 - little bit of effort and you know some
31:15 - more
31:16 - drive behind it that i actually start to
31:17 - get good at and when you get good at it
31:19 - things actually start to
31:20 - look really nice and it becomes fun so
31:23 - don't quit dude that's my advice
31:25 - um okay so
31:28 - now what we're going to do is we're
31:30 - going to go in so here and i'm going to
31:32 - create a sidebar
31:33 - dot js component okay now i'm going to
31:36 - be using snippets here so if you haven't
31:38 - got the snippets i'm going to use
31:40 - go to the extensions in vs code and go
31:42 - ahead and type in es7
31:44 - and it will be the first one so this one
31:46 - right here so this is es7 react redux
31:49 - all those things snippets and this
31:51 - allows you to write code
31:52 - really fast by using shortcuts so now
31:54 - i'm going to say rfce
31:56 - boom and we've created a functional
31:58 - component okay
32:00 - now here i'm going to go ahead and say
32:01 - import import
32:04 - [Music]
32:06 - sidebar sidebar.css like this
32:09 - okay and then i'm going to go to the div
32:11 - i'm going to say class name equals
32:13 - sidebar like this and then this i'm
32:15 - going to do h2 saying i
32:17 - am the sidebar okay now obviously we
32:20 - need to create the css file so i'm going
32:21 - to go ahead and
32:22 - create that right now so i'm going to go
32:24 - ahead and say sidebar
32:25 - dot css just like that we have our css
32:28 - file
32:29 - go back here and we can pretty much go
32:31 - ahead and go back to our app now
32:33 - and import it so here a little trick for
32:35 - you guys
32:36 - you can go ahead and um i see loads of
32:40 - people actually saying um
32:42 - i got a job thanks to you guys if you
32:45 - can show me proof of that dude
32:47 - i would really appreciate it because
32:48 - we're on a mission to get
32:50 - 5 000 developers jobs by the end of the
32:54 - year so
32:55 - yeah it's big and we're getting there
32:57 - we're getting there loads of people have
32:58 - got jobs and i'm starting to get used to
33:00 - hearing about people getting jobs from
33:01 - our tutorials so
33:02 - that's dope and i love that but we're
33:04 - gonna go back now and yeah if you could
33:06 - just send me on my instagram that would
33:07 - be awesome and i can add you to the
33:09 - counter that we have running
33:10 - okay now to a little shortcut for you
33:13 - guys if you go to the end of the
33:15 - component and hit control spacebar
33:17 - it says auto import and boom it imports
33:19 - it at the top otherwise you just have to
33:21 - write that out by yourself
33:23 - and then yeah now it says there is no
33:25 - such file such as
33:27 - counter slice okay now this is because
33:30 - we we changed the photo directory so you
33:32 - see these things right here so what we
33:34 - need to do is go into the app folder go
33:35 - into store
33:36 - and here we got rid of the counter right
33:39 - so we need to just go ahead and get rid
33:40 - of that
33:41 - and that's it and then it'll work
33:44 - because we just got the photo directory
33:46 - messed up okay
33:47 - also thank you so much for the kind um
33:50 - kind words
33:50 - uh rohan gupta so if you if anyone has
33:54 - signed up to training
33:55 - go ahead and uh you can pretty much sign
33:58 - up as many times as you want afterwards
34:00 - even
34:00 - so you can go ahead and i'll say watch
34:02 - this live first maybe
34:03 - and then go ahead and watch that one so
34:05 - that would be really really handy for
34:07 - you guys and it's completely free link
34:08 - is in the description
34:09 - check it out okay um also
34:12 - guys i like to code with a bit of music
34:14 - i don't know about you guys so let me
34:15 - know if this is distracting for you okay
34:18 - and if you haven't already smash the
34:19 - thumbs up button because
34:21 - you know we're gonna hit a thousand
34:22 - likes today i know it i feel it
34:24 - the energy is good so let me know if
34:26 - this is distracting for you guys
34:28 - if it is i'll turn it off but i kind of
34:30 - like it okay
34:32 - um okay so let's go ahead and
34:35 - do this so let's build a discord clone
34:38 - on the sidebar so now you can see it
34:39 - comes through
34:40 - okay so at the top uh i'm gonna go here
34:43 - and i'm gonna get rid of this
34:45 - so now we just have the sidebar in okay
34:50 - so this is where we always get this sort
34:52 - of mixed opinions on the music in the
34:55 - background
34:58 - okay bonjour tech what's up dude uh yes
35:01 - this will be available later thank you
35:03 - marin
35:04 - um for asking uh can i dm on twitter i'm
35:06 - not on twitter at the moment actually
35:07 - i'm not active on twitter anyway
35:09 - so go ahead and check it out on uh go
35:12 - ahead and message me on
35:13 - instagram so my instagram is down here
35:16 - gonna go check out and follow me
35:18 - uh yeah if it's too distracting i'll
35:20 - tell you but
35:21 - yeah let's go ahead and get started so
35:23 - i'm the sidebar okay the next one i'm
35:25 - gonna do
35:26 - is the chat okay but for now what we can
35:28 - do is we can actually go ahead
35:30 - and just build out the sidebar first
35:32 - okay
35:33 - so here we go to sidebar dot js
35:37 - what i'm gonna do is
35:39 - [Music]
35:41 - i'm gonna go here and i'm gonna first
35:45 - build out the top section okay
35:48 - so all i'm gonna do is actually gonna
35:50 - put this
35:52 - over here right so there we go
35:56 - so what i'm gonna do now is i'm going to
35:57 - build out this top section so let me go
35:58 - ahead and remove all that stuff
36:00 - boom ismail says play some six nine i
36:04 - think that will be distracting dude
36:06 - yeah um so there we go we've got this
36:09 - over here right on a beautiful
36:12 - girlfriend she goes it's not distracting
36:13 - it's nice
36:14 - i really like it see you guys be like my
36:16 - girlfriend
36:17 - there you go all right so we got uh
36:19 - we've got the sidebar here and then at
36:21 - the top
36:22 - what i'm going to do is i'm going to
36:23 - create a div so i'm going to say div and
36:25 - there's actually a trick i'll show you
36:26 - in a sec for emma okay
36:28 - oh i love this comment faisal says sonny
36:30 - you're helping thousands of learners i
36:32 - appreciate that dude
36:33 - i really really really like that uh
36:35 - hearing stuff like that so thank you so
36:37 - much dude
36:38 - um so now what we're going to do is i'm
36:39 - going to say div dot sidebar
36:42 - underscore underscore top and i'm going
36:44 - to hit enter and then you can see it
36:45 - creates a div
36:46 - now we can also do the same thing by
36:48 - without actually writing
36:49 - divs you can say sidebar on this one's
36:52 - called top and then boom it creates a
36:53 - div
36:54 - so that's a nice little trick if you
36:56 - don't actually know that trick so
36:58 - yeah check that one out but here we're
37:00 - gonna have a h3 and we're just gonna say
37:01 - the
37:02 - the discord room is clever programmer
37:04 - because that's a nice room to have
37:06 - and then here what i'm going to do is
37:08 - i'm going to actually need that little
37:10 - icon so
37:11 - i need this icon right here okay now if
37:13 - you haven't already used
37:15 - ataba yes dude he said
37:19 - sunny the first blog is published nice
37:22 - um okay
37:26 - so also let's go ahead
37:29 - and one second guys
37:35 - okay so now what we're going to do is
37:38 - we're going to go ahead and install
37:39 - material ui because we have a bunch of
37:41 - icons throughout the app
37:42 - so we have icons here we have icons here
37:46 - here we have loads of different icons
37:48 - around the application
37:50 - and what we can do is go ahead and
37:52 - install material to get started with
37:54 - that so i'm going to say material ui.com
37:58 - and then
38:03 - calvin commander says music is okay i
38:05 - got into an argument with my girlfriend
38:06 - because she wanted me to stop playing
38:07 - music but i didn't want to
38:09 - oh man you cracked me up dude nice so
38:11 - here what you want to do is do npm
38:13 - install material ui core so let's just
38:15 - go ahead and grab it
38:16 - and i'm going to do command j and what i
38:18 - like to do is actually open up a second
38:19 - terminal
38:20 - so i'm going to click plus and then here
38:22 - we can go ahead and just paste it so npm
38:24 - install material ui core
38:26 - and make sure you're in the right folder
38:27 - okay so right now we are so let's go
38:29 - ahead and do
38:30 - that and that will install the core now
38:33 - the core
38:34 - is good but you need the core and the
38:35 - icons because we want to have the icons
38:37 - like i said
38:38 - right but you need the court in order to
38:40 - have the icons i hope that made sense
38:42 - um but yeah you're going to go to the
38:43 - search bar type in icons
38:46 - click this and then you want to go down
38:48 - and here it says npm install material ui
38:51 - icons
38:52 - so now what you want to do down here is
38:54 - go ahead
38:55 - paste like that and then install the
38:57 - icons as well
38:58 - that will make it a lot more um
39:02 - that will actually go ahead and install
39:04 - all of the icon set into
39:05 - our app so then what you want to do is
39:07 - go here to this lovely bit where it says
39:09 - you can search the full list of these
39:10 - icons
39:11 - click that wait you can't we can't see
39:14 - your screen
39:16 - you can see my screen right guys go
39:19 - ahead
39:20 - and let me know if you can see my screen
39:22 - i'm sure you can see my screen right now
39:24 - um okay but what you want to do now
39:28 - is you want to go down here and
39:31 - i was doing it in the terminal down here
39:33 - guys by the way if you didn't see that
39:35 - so that's why i copied out the terminal
39:36 - commands yeah
39:38 - so here now inside of here so let's say
39:40 - we want it a plus icon okay
39:42 - let's type in plus and you can see i get
39:44 - like an ad right
39:45 - and then you see it actually gives me
39:47 - the import code for that
39:49 - so that's going to be really really
39:50 - handy because then you can go ahead and
39:52 - just use it inside of your app
39:54 - okay so if you're wondering how i found
39:57 - all the icons that's how i find them
39:59 - okay so uh the greatest ever hey
40:02 - what's up dude good to see you here man
40:07 - i love you i love your instagram account
40:09 - it's always like
40:10 - full of positivity dude i like that
40:12 - right
40:13 - so the first thing we're going to do is
40:14 - now we're going to jump back in so let's
40:16 - go to our code i need this little carrot
40:18 - icon and the carrot icon is called
40:22 - the expand more icon okay so i'm going
40:24 - to go ahead and import that
40:26 - so here i'm going to go ahead and say
40:28 - import expand more icon
40:30 - go down here and do this like so
40:33 - and then now we should see that little
40:35 - icon pop in so you know you see now i
40:37 - get
40:38 - here okay now what you can see is
40:41 - um uh also dix or
40:44 - dix ruby um ac
40:47 - says emmet is is available only in html
40:50 - files
40:51 - so you do need to actually run an
40:52 - additional setting uh what i can do is i
40:54 - can show you that right now okay
40:56 - um oh nice dude i just read the greatest
41:00 - difference come on
41:01 - so you're gonna press command and comma
41:04 - no oh oh come on comma here's commander
41:06 - commands you only click on vs code do
41:07 - command comma
41:08 - and it'll bring up your settings okay
41:10 - then what you want to do is you want to
41:11 - type in emmet
41:13 - and then you want to click on include
41:15 - languages
41:16 - okay and what i do is i go ahead and add
41:19 - this one
41:20 - so you see you either an item called
41:21 - javascript and the value is javascript
41:24 - react
41:24 - that's how you get emit on this okay
41:28 - so do that going back to the code
41:31 - let's go ahead and check this out so
41:32 - sidebar now we've got the expand more
41:34 - icon okay dope
41:35 - next thing we're going to do is the uh
41:37 - we're going to style this in a second
41:39 - but the next one i'm going to do is
41:40 - actually add the channels
41:42 - okay so the channels is going to be
41:45 - actually just style this one as we do it
41:47 - so let's go ahead and do sidebar.css
41:50 - so down here what i'm going to now have
41:53 - so for the sidebar i'm going to say
41:54 - sidebar
41:56 - and then this i'm going to have to do
41:57 - display flex
41:59 - it's going to be display flex it's going
42:01 - to have a flex direction of column
42:03 - because everything's going to be stacked
42:04 - upon each other
42:05 - and then the entire sort of sidebar
42:07 - should take up 25
42:09 - so the next thing i'll explain this
42:11 - after but you see how this one takes up
42:13 - pretty much
42:14 - 25 so this takes up
42:18 - 25 this right here
42:21 - and this takes up 75 okay
42:24 - so in order to do that we set the app to
42:27 - display flex
42:28 - and then we say that this is 0.25
42:31 - uh oh god damn it no 0.25
42:35 - and this is flex of 0.75 that's how you
42:38 - get that kind of nice spacing the
42:41 - responsive spacing between the two okay
42:43 - so we're gonna just get rid of that and
42:46 - then let's go here we're gonna say flex
42:47 - 0.25
42:48 - and you need to actually go ahead and do
42:50 - display flex on
42:51 - the app.js but we'll do that in a sec
42:53 - okay we're going to go ahead type in
42:55 - height
42:56 - of 100 view height and i'm going to say
42:57 - the background color and i found a very
42:59 - nice gray which is the discord gray
43:01 - so i'm going to say background color is
43:03 - this little hex
43:04 - right so you guys can copy that hex if
43:06 - you want it now if we go back to our
43:08 - redux app you can see the whole
43:09 - background color change because right
43:10 - now that's the only component
43:12 - and it's taking up 100 view height okay
43:15 - so with that done hey
43:18 - sunny watching sonny from florida nice
43:20 - dude you built community developers
43:22 - around the world
43:22 - i appreciate that and love the
43:24 - positivity dude um
43:26 - nice and glad to see you okay so now
43:28 - what we're going to do is go to sidebar
43:30 - top
43:31 - so i'm going to go ahead and say sidebar
43:33 - underscore let's go top
43:34 - bam in for the win
43:37 - then we're going to go ahead and say
43:38 - display flex i'm going to copy a snippet
43:40 - here and explain it so i'm going to say
43:42 - display flex
43:42 - justify content space between align
43:45 - items and you see what happened is i'm
43:47 - zoomed in right now there we go if i
43:48 - zoom out
43:49 - um space between so if i get rid of that
43:51 - it's next to it you see the carrot is
43:53 - next to
43:54 - it and if i do that it spaces out and
43:56 - i'm going to say align the item
43:57 - centrally so if i get rid of that
43:59 - everything's kind of uncentered it's a
44:01 - very subtle change but you won't see it
44:02 - but it does make a difference
44:04 - and then you want to do padding of 20
44:06 - pixels if i get rid of that you see it
44:07 - adds a nice bit of padding
44:09 - background color again we're changing
44:11 - that now but
44:12 - i like to have it just on top but you
44:14 - don't actually need to have it there
44:15 - color white so obviously the color of
44:17 - the text is white
44:18 - and then the border bottom to add that
44:21 - nice little border right
44:22 - now of course we don't need the h1 which
44:24 - saying i am as a i am a sidebar because
44:26 - we already know it's a sidebar so
44:28 - we can go ahead and get rid of that and
44:29 - then you go let me get this so it's
44:31 - starting to look a little bit nicer than
44:32 - where it was
44:33 - so let's go back to sidebar here and now
44:36 - what we're going to do is command j to
44:37 - hide the terminal
44:38 - we're going to go ahead and say div
44:40 - sidebar underscore underscore
44:42 - channels so this is where all the
44:45 - channels are going to be okay so we're
44:46 - going to have the next section now that
44:47 - we're working on
44:48 - so here what i'm going to do is i'm
44:50 - going to say div
44:51 - and i'm going to say sidebar channels
44:55 - header okay and inside the header i'm
44:57 - going to have a div which is the sidebar
45:00 - header so i'm going to say
45:01 - sidebar header
45:04 - and this one is going to be the bit here
45:07 - so we've got text channels and a little
45:09 - plus icon
45:10 - okay so first thing is we have a little
45:13 - carrot icon so
45:14 - save that with the carrot and then what
45:16 - we're going to do is we're going to
45:17 - create a h4
45:18 - i'm going to say text channels like this
45:21 - okay
45:21 - now you can see it pops in here so you
45:24 - see it popped in there
45:26 - and then what we're going to oh god why
45:27 - is that so and that's not far out
45:29 - okay then what we're going to do is
45:31 - we're going to go and head and add
45:33 - an ad icon all right so it's called an
45:35 - ad
45:36 - i'm going to get rid of the on click we
45:38 - don't need that yeah
45:39 - so you can see it's a class name sidebar
45:42 - add channel right reason why it's adjust
45:44 - because this button is going to actually
45:46 - allow us to add channels so
45:47 - if we go back into our app you can
45:49 - actually go ahead and see we can
45:50 - actually add channels in this app i
45:51 - forgot to show you so if we click this
45:53 - it says enter a new channel name so i'll
45:54 - say yo as you know go ahead and say
45:57 - react devs make it a little bit more
46:00 - less dj boom react devs
46:03 - look at that guys let me say who's
46:06 - popped
46:08 - who's pumped boom you can see it works
46:10 - okay
46:11 - so everything works on that and it's
46:12 - really really clean okay
46:14 - so um yum now what's up good to see you
46:17 - in here
46:18 - um she goes i really love this live
46:20 - stream glad glad you like it
46:22 - okay so now what we're gonna do is we're
46:24 - gonna go ahead and style
46:26 - this text channels because right now it
46:28 - looks ugly
46:29 - okay add icon i'm going to go ahead and
46:32 - import this
46:33 - so the add icon let's go ahead and first
46:36 - import that in
46:37 - so add icon boom we got the ad icon in
46:41 - let's go ahead and start this up so
46:43 - sidebar.css
46:45 - and the first thing i'm going to do is
46:47 - go ahead and say
46:49 - dot sidebar underscore underscore
46:51 - channels
46:53 - and then i'm going to say flex1 because
46:55 - i want the middle bit to take up the
46:56 - most room okay so
46:58 - that'll make sense afterwards as to what
46:59 - we're doing there but
47:01 - i want the actual channel sections i
47:03 - want this to take up the most room okay
47:05 - and that that's why these get pushed to
47:07 - the bottom in the end result
47:09 - so after we do that what i'm going to
47:11 - say is firstly i want to do
47:14 - sidebar add channel i want to make it a
47:16 - cursor point us that way when i hover
47:17 - over this it becomes a little finger
47:19 - icon you see that so it becomes a little
47:20 - finger icon
47:22 - um that's always nice to have and then
47:24 - we're gonna say
47:25 - when i hover over it i want it to become
47:27 - white as well
47:29 - so this gives it an element of uh so you
47:31 - see that now we get that nice little
47:32 - hover over
47:33 - white effect okay um oh
47:36 -  we've got sami hey he actually
47:39 - landed a six-figure job in
47:41 - new york but he goes hi sunny my new job
47:44 - is going well
47:45 - i just came here to say thank you as i
47:47 - received my first paycheck that's
47:48 - sick dude that is awesome i've been in
47:51 - constant contact with amanat as we share
47:53 - knowledge but amanda is
47:54 - insane dude i work with amnap every day
47:56 - he goes thanks and let's go
47:58 - dude that is awesome man that is so so
48:01 - cool and i think that's an awesome
48:02 - message for
48:03 - everyone here as well because it just
48:05 - goes to show that it's possible
48:07 - and it it's not it's not fake you know
48:10 - like so that's dope dude and
48:12 - everyone go ahead and smash thumbs up
48:13 - button and drop some love
48:15 - for some meat okay that's dope dude
48:19 - that is that is awesome to hear that
48:21 - okay
48:22 - now we're almost we're at 600 likes
48:24 - right now i think we can get to a
48:26 - thousand today guys
48:27 - let's go ahead and push this video out
48:28 - to as many people as we can
48:30 - the next thing we're going to do is
48:32 - style the header section so channels
48:34 - header
48:35 - so i'm going to go ahead and add this
48:36 - snippet and so we say sidebar channels
48:37 - header
48:38 - display flex justify content space
48:41 - between
48:41 - okay justify align item center
48:44 - padding 10 pixels background color black
48:47 - and then we've got the color gray
48:48 - okay that makes it pretty nice then what
48:52 - i'm going to do
48:53 - is um
48:57 - somebody said redux as it's using no no
49:00 - redux is just like
49:02 - the professional version of react
49:04 - context hey but just think of it that
49:05 - way for now
49:06 - okay but then what we're going to do is
49:07 - we're going to go to the sidebar header
49:09 - section that's why these two aren't
49:10 - inline because they're in a div
49:11 - and we're going to go ahead and say
49:13 - display flex and the line item center
49:15 - and you can see now we can see some
49:17 - similarities okay
49:19 - so obviously this is just because it's
49:20 - only using this much but you can see if
49:22 - we had it at that same size
49:24 - it's starting to look similar okay and
49:27 - remember we try and build our absolutely
49:29 - responsive you see that so it's quite a
49:31 - responsive design
49:33 - now with that said what we're going to
49:35 - do next is we're going to go actually go
49:37 - back to sidebar.js
49:39 - so over here and then we are going to go
49:42 - ahead and check
49:43 - out
49:46 - we're gonna go ahead and actually add in
49:49 - the channels list
49:50 - okay so channels list being all of this
49:52 - stuff here right
49:54 - so the channels list i'm gonna go ahead
49:56 - and create div so underneath the current
49:58 - div
50:00 - and i'm going to say sidebar underscore
50:03 - channels
50:03 - list okay now inside the channels list
50:07 - i'm going to create
50:08 - a component called sidebar channel okay
50:10 - so i want you want each of these to be a
50:12 - component
50:12 - itself and this one i'm going to say so
50:15 - i'm going to create a component called
50:16 - sidebar
50:17 - channel sidebar channel like this
50:21 - okay and also one day dude if we do in
50:24 - person events i would love to see you
50:25 - there to me
50:26 - that'd be dope man it'd be lovely to
50:27 - meet like everyone on the
50:29 - uh who's actually gone ahead and landed
50:31 - jobs from this stuff
50:32 - that would be awesome okay so here let's
50:35 - go ahead and do cyber challenge it's
50:37 - gonna freak out because we haven't got
50:38 - that component so let's go ahead and
50:39 - create it
50:40 - so here we say sidebar channel
50:43 - dot js boom and then we're gonna say
50:46 - rfce
50:48 - there we go and then i'm gonna say
50:50 - import
50:52 - sidebar channel.css this is the setup
50:56 - that we do every time
50:57 - i'm going to say class name of sidebar
50:58 - channel
51:00 - because this is just a bem naming
51:01 - convention we always want to be
51:02 - consistent
51:03 - now the sidebar channel is going to take
51:05 - three things okay eventually it'll take
51:07 - like an id
51:07 - as well but in the beginning right now
51:10 - it's going to go ahead and take
51:11 - um so right now we're just going to put
51:13 - this in right now so we're going to say
51:14 - id
51:15 - it's going to take a channel
51:18 - uh id in the channel okay but for now
51:21 - i'm just going to go ahead and make it
51:22 - very simple okay so i'm just going to
51:24 - say h3
51:26 - and um let me go into the sidebar
51:29 - and have a look so we've got there we're
51:30 - going to have a div and we're going to
51:32 - have a h4
51:34 - and the inside of this h4 i'm going to
51:35 - span a hashtag in so i'm going to say
51:37 - spam a hashtag
51:39 - and this is going to have a class name
51:40 - of sidebar channel hash
51:44 - so we can style that layer and then
51:46 - after that i'm going to say
51:47 - whatever the channel name is so in this
51:48 - case let's just call it youtube
51:50 - by default so it's going to be stuck on
51:52 - youtube okay
51:55 - and then let's go ahead and import this
51:56 - i'm going to click on sidebar channel do
51:58 - control spacebar
51:59 - boom auto import nice little trick now
52:02 - it says cannot resolve the sidebar css
52:05 - so if we go back um
52:09 - uh then we go back and we say sidebar
52:13 - channel dot css and then you see it gets
52:16 - rid of the error okay
52:17 - so works and then what we're going to do
52:21 - is we're going to just test this out now
52:23 - so let's go back to
52:25 - um our div and then let's just say
52:27 - imagine we just done this right like
52:29 - four times
52:30 - and you see it's actually at the bottom
52:33 - right now but now this is happening
52:35 - because we're making this use up as much
52:37 - possible space as it can
52:39 - now i'm gonna go back to sidebar and
52:43 - right now sidebar channels
52:47 - oh oops okay so make sure when you add
52:50 - this in
52:50 - you add it inside the sidebar channels
52:53 - div okay so you want it inside of the
52:54 - sidebar channels div
52:56 - otherwise you're going to get pushed to
52:58 - the bottom but you guys can see what
52:59 - flex one did in a column view okay so it
53:01 - pushed everything down to the bottom
53:03 - and that made it very very clean okay
53:08 - so oh this is pretty good question
53:10 - actually
53:12 - let's go ahead and check this one out so
53:13 - it says uh
53:15 - free code camp developer says sonny
53:17 - what's your take on redux i've read two
53:19 - books on it and used it in several
53:20 - projects but i really don't like it do
53:21 - you like it or think it's overly
53:23 - complicated
53:24 - i think it's heavy so i think it's quite
53:26 - a heavy
53:27 - uh state management tool but the new
53:29 - version of redux so that with hooks and
53:31 - everything like what we're going to use
53:32 - today is actually so damn clean so
53:36 - to answer this question in a nutshell go
53:37 - ahead and watch today's video see how we
53:39 - build everything with the new kind of
53:42 - modern redux
53:43 - and and you can go ahead and see but i
53:45 - think it would be uh
53:47 - i i understand the sort of heaviness of
53:49 - it but in the production environment
53:50 - it's going to be super handy and
53:51 - powerful so
53:52 - i wouldn't rule it out so sidebar
53:54 - channels list okay
53:56 - so then what we're gonna do is we're
53:58 - gonna go ahead and style the sidebar
54:00 - channel so
54:01 - inside of sidebar channel oops
54:04 - sidebar.css so i'm gonna go to sidebar
54:07 - channel
54:08 - and i'm going to go to sidebar
54:10 - channel.css
54:12 - i'm just going to pop this underneath so
54:14 - now we've got the sidebar channel css
54:16 - underneath
54:16 - and the code at the top that's a nice
54:18 - way of doing it sometimes guys
54:20 - um it'll make your code a lot easier to
54:21 - read sometimes okay
54:23 - so the first thing i want to do is i
54:24 - want to make it so when i hover over the
54:26 - text
54:28 - it changes color so i'm going to go
54:29 - ahead and do sidebar when i hover over
54:31 - the sidebar channel
54:32 - div so this one it's going to target the
54:35 - h4 element inside so the text
54:37 - and change the color to white and the
54:39 - background color should become light hey
54:40 - look at that
54:41 - this lovely kind of hovering
54:43 - functionality okay
54:45 - and then i'm going to go down and then
54:47 - i'm going to target the h4 so i'm going
54:48 - to say inside the sidebar channel
54:51 - the h4 element which is the text i'm
54:53 - going to say display flex
54:55 - because we've got a hashtag in there and
54:57 - i'm going to say padding left of 15
54:59 - pixels align the item centrally
55:01 - background color
55:02 - make the text gray so you see that we
55:04 - get a nice little gray and the cursor
55:06 - should be a pointer so we get that
55:07 - little finger
55:08 - when we hover over it because it's
55:09 - always nice to get that okay
55:11 - um so melissa says i fill you with redux
55:14 - you follow the same path so yes
55:16 - that's exactly why i go ahead and teach
55:18 - you guys
55:19 - react context api first because it's the
55:22 - same pattern
55:23 - okay um what is awesome about these
55:26 - tutorials is that sunny
55:28 - uh always leaves some part of the
55:29 - projects you can make on your own i
55:31 - add extra functionality 100 and i really
55:34 - really think you should do that you
55:35 - should add
55:36 - extra functionality on top of it that
55:38 - will help you out and it will just make
55:39 - you different from everyone else okay
55:41 - um oh nice he's from watching it
55:44 - from birmingham nice dude based in
55:45 - london is awesome
55:47 - awesome okay um then what we're gonna do
55:51 - is we're gonna go down and i'm gonna
55:53 - style that little hashtag so
55:56 - boom and then i'm gonna say
56:00 - uh font size so i want the hashtag to be
56:02 - a little bit bigger so i'm going to say
56:03 - 30 pixels
56:04 - and i want to have some padding of 8
56:06 - pixels here so
56:07 - as soon as we do that look at that
56:09 - immediate change
56:11 - let's immediately get a nicer user
56:13 - experience
56:14 - and now you can see it's looking a lot
56:15 - more like our
56:17 - actual app okay so this is very very
56:20 - clean we're actually moving very quick
56:21 - right now so this is good stuff
56:23 - the next thing we're going to do is i'm
56:26 - going to make it so that
56:27 - obviously in react you can have props
56:30 - okay so
56:31 - what we're going to do is we're actually
56:32 - going to pass in the goal here would be
56:34 - to pass in something but for now we're
56:35 - going to keep it as fixed channels
56:37 - and then we're going to when we build
56:38 - out the back end we're going to go ahead
56:39 - and change that up so
56:41 - this will be like the finished product
56:42 - where we can add our channels in here
56:45 - and i can basically say like a channel
56:46 - called abc and you can see like it will
56:48 - actually populate offer firebase i'm
56:50 - into our project
56:51 - okay um hey thank you so much brian
56:55 - he says something you're a legend can't
56:56 - believe that you are human making all
56:57 - these clowns super fast
56:59 - my brain can't take so many clones i'll
57:01 - keep on going mr robot hey
57:02 - i love that show thank you dude
57:04 - appreciate that
57:06 - all right so um and also guys if you're
57:08 - enjoying the build so far please
57:09 - smash the thumbs up button helps this
57:11 - video reach a lot more people
57:14 - and it helps you know bring more value
57:15 - to everyone in the world
57:17 - so that's good stuff now let's carry on
57:19 - guys we've got the
57:21 - sidebar channel going strong so we can
57:23 - now move
57:24 - back to the sidebar and carry on so the
57:27 - next part guys is the bottom part so
57:30 - down here you see where we have the
57:31 - voice connected and we have the actual
57:34 - user right here okay now i didn't
57:37 - actually realize it's stacked up like
57:38 - that that's pretty dope
57:39 - so now you see it kind of like it's very
57:42 - responsive
57:43 - but you see at the bottom we've got that
57:45 - nice little
57:46 - sort of user profile section and we've
57:48 - got the voice connected
57:50 - obviously this is not actually connected
57:52 - to anything but
57:53 - it's a ui okay um
57:57 - also daniel cartier said don't worry if
57:59 - if people
58:00 - like league stuff but the main thing is
58:02 - is that you don't get the community
58:03 - aspect that you would get in
58:05 - in proper javascript so you have to join
58:07 - the course to get the networking
58:09 - opportunity
58:10 - okay so now what we're going to do is
58:13 - we're going to go ahead and we're going
58:15 - to move outside of this div
58:17 - so outside of this sidebar channels div
58:20 - and we're going to go ahead and create
58:21 - the
58:22 - sidebar voice which is going to be
58:24 - responsible for this part
58:26 - so i'm going to go ahead and say div
58:27 - with a sidebar i'm just going to score
58:29 - voice
58:31 - right now inside of here what i want to
58:33 - do is i'm going to
58:34 - actually import a uh this
58:37 - icon right here so this this icon right
58:40 - here is actually called a signal
58:42 - cellular alt icon okay and it has a
58:45 - class name and we're going to give it a
58:46 - class in the sidebar underscore
58:48 - underscore voice icon and i'm going to
58:50 - give
58:50 - a font size of large yeah
58:54 - um thank you so much dude as well uh for
58:57 - the donation
58:58 - awesome okay now what i'm gonna do is
59:01 - um also guys uh i'm actually gonna go
59:05 - ahead and
59:07 - don't go ahead and spam guys with with
59:09 - some bad stuff because
59:11 - yeah um so we actually want to go ahead
59:13 - and import that icon
59:15 - so what i'm gonna do is pull that in
59:17 - from the top
59:19 - so there we go signal cellular oh icon
59:23 - and then what we're going to do is
59:30 - then what we're going to do is we're
59:31 - going to go ahead and
59:33 - go down here and create
59:37 - um where is it where are we going
59:40 - yeah i'm going to create a div sorry so
59:42 - i'm going to say dev dot
59:44 - um voice info voice info
59:48 - there we go oh sorry it should be
59:49 - sidebar i'll just go underscore voice
59:52 - info
59:53 - and then what we're gonna do is hey
59:54 - jacob says this is freaking sick
59:56 - nice dude um we're gonna go ahead and do
59:59 - a h3
60:00 - so the h3 inside is going to say voice
60:02 - connected so voice
60:04 - connected and then i'm going to go here
60:07 - and i'm going to say p
60:08 - i'm just going to stream oops my emmit
60:11 - didn't kick in in time
60:12 - so what happens when you code too fast
60:14 - guys god dammit okay
60:16 - then we're gonna go ahead and do that so
60:18 - now if we look at our app we should see
60:20 - it looks it's pretty ugly down here but
60:22 - you know we get there
60:24 - so i'm gonna go ahead and scroll the
60:25 - screen up a tiny bit there we go
60:27 - so you can see it says voice connected
60:30 - and
60:30 - stream at the bottom of the page now
60:32 - we're going to get that up to the top
60:34 - and i'll show you guys how we're going
60:35 - to do that so
60:39 - let me go ahead and center it there we
60:40 - go so now what we're going to do
60:43 - is we're going to go ahead and say
60:47 - create another div chord sidebar
60:51 - sidebar underscore underscore voice
60:53 - icons like this okay
60:55 - and then here i'm going to have two
60:56 - icons one called info outlined icon and
60:58 - one called call icon
61:00 - these are going to resemble these two
61:01 - right here so these two icons right here
61:04 - so i'm going to go ahead and pop them in
61:05 - and i need to do the appropriate import
61:07 - for it so
61:09 - it's the core icon and info outlined so
61:12 - these two up here so these two
61:16 - okay then
61:20 - what we're gonna do is we're gonna go
61:22 - ahead and go down here
61:25 - to uh
61:28 - we're actually gonna start this right
61:29 - now because it looks crap
61:31 - right now okay so it doesn't look nice
61:33 - right now so i'm gonna go here and again
61:35 - what i like to do is drop the sidebar
61:37 - css underneath
61:38 - because that way you can see both pieces
61:40 - of code okay and then we're going to go
61:42 - here
61:43 - and i'm going to carry on styling it so
61:44 - cyborg.css
61:46 - uh what i'm going to do is i'm going to
61:47 - say dot side so sidebar
61:50 - voice i'm gonna say display flex
61:54 - position relative actually we don't need
61:56 - that yeah we say bottom no we don't need
61:58 - that either
61:59 - say justify content space between
62:04 - yep and then we're going to go ahead and
62:08 - say an iron item center
62:11 - and then we're going to go ahead and say
62:12 - color gray
62:14 - and i'm also going to give a background
62:15 - color padding and a border top
62:18 - so boom add that in and you can see
62:22 - it's all getting added at the bottom
62:23 - right so it's all down here right now
62:25 - um we will fix that though we will get
62:28 - that looking pretty clean
62:30 - so the next thing i'm going to do is
62:31 - target the voice info so
62:33 - this one right here okay then we're
62:36 - gonna go ahead and say
62:38 - boom voice info like so
62:42 - save it and you can see now it pulls
62:44 - everything to the left
62:45 - because it's saying voice info flex 1
62:47 - which means that what it's actually
62:48 - doing guys it's actually saying that
62:50 - this should take up the majority of the
62:51 - space
62:52 - which is why it's positioned itself like
62:55 - that because flex 1 is saying like you
62:56 - know
62:57 - use as much space as you possibly can
63:00 - right
63:01 - okay and then we're going to say is the
63:03 - voice icon
63:04 - should be green because that's why it
63:06 - will look much cleaner that way
63:08 - so that looks a lot better doing it like
63:10 - that um
63:11 - and then we're going to go ahead and say
63:14 - voice info
63:15 - and target the h3 icon inside
63:18 - uh and i'm gonna make that green as well
63:20 - so you can see the little things
63:22 - the little things right uh priyanka says
63:24 - by the way those lights are killing me
63:26 - i know look they actually guys they
63:28 - respond when i talk like
63:30 - hey that's that's pretty cool yeah my
63:33 - girlfriend got him
63:34 - uh she's awesome so let's go ahead and
63:36 - carry on so i'm gonna target the p
63:38 - tag next i'm gonna make the p tag
63:39 - smaller so i'm gonna go ahead and say
63:41 - voice info
63:43 - target the p tag inside and say font
63:44 - size smaller so now we can actually go
63:46 - ahead and see
63:47 - down here um
63:51 - i'm going to say voice stream you see
63:52 - now that we just target the p tag so
63:54 - it's very small very neat
63:56 - okay and then we've got those two icons
63:58 - on the right yeah so we've got the two
63:59 - icons on the right
64:01 - so what i'm going to do now is material
64:02 - ui actually adds the class itself so now
64:05 - if i go ahead and say target the voice
64:06 - icons div
64:08 - so you can see at the top the voice
64:09 - icons this one voice icons
64:12 - and then i'm going to say material ui
64:14 - svg dash root
64:15 - that's basically the class that material
64:17 - ui gives us we're going to basically
64:18 - give that a padding of 10 pixels
64:20 - now i want you guys to pay attention to
64:21 - the bottom bit over here because that's
64:23 - where the magic is going to happen so
64:25 - you guys might be able to see this might
64:26 - not be able to but let me go ahead and
64:28 - pop it there
64:29 - as soon as i hit save boom
64:32 - just made it a little bit nicer okay and
64:35 - with that done
64:36 - we actually have the bottom bit done
64:38 - right so that bottom bits done very
64:40 - nicely
64:40 - now what we can do is we can go back to
64:44 - the um and guys if you're enjoying this
64:48 - and you haven't already go ahead and hit
64:50 - the thumbs up button
64:51 - because this speed right now is awesome
64:54 - and the energy today is is insane
64:57 - um uh
65:00 - oh sake i'm sorry dude
65:03 - uh because that link was of an offer let
65:05 - a screenshot no on insta so i shared you
65:07 - oh so sorry dude i thought that was uh
65:10 - because whenever people share g like
65:11 - google drive links uh
65:13 - we have a bot that sort of swipes it off
65:15 - so it's probably the bot that's taking
65:17 - it off but um
65:18 - yeah damn it dude sorry about that um
65:21 - just go ahead and drop a link
65:22 - again then people can see it um yeah
65:25 - now what we can go ahead and do
65:29 - is actually continue building out the
65:32 - final bit
65:34 - um which is at the bottom so we've got
65:37 - the
65:38 - sidebar profile right so the profile
65:41 - right now is the final piece here so
65:42 - this is where we have like sunny sangha
65:45 - and then we have like all your stuff
65:46 - being pulled through so let's go back
65:47 - down here let's go ahead and go out of
65:49 - this
65:50 - div and i'm going to go out of this div
65:55 - here this one let me go ahead and double
65:57 - check
65:58 - let's go ahead and close the css file
66:00 - and i like to click on this
66:02 - and it should show me that that's the
66:05 - div for sidebar voice so it's out of
66:06 - that div
66:07 - there we go we're gonna say div and then
66:09 - we can say sidebar
66:10 - underscore underscore profile boom
66:14 - and then uh yeah sorry about that second
66:16 - but um
66:17 - yeah just go ahead and share it again
66:19 - and that'll be awesome uh so then what
66:21 - we're gonna do
66:21 - is we're gonna go ahead and actually
66:24 - pull in uh
66:25 - a avatar component okay avatar
66:30 - and avatar component so i actually
66:33 - imported that at the top here
66:35 - and that's actually a course that's not
66:37 - an icon you can actually pass that thing
66:38 - like pictures and things like that okay
66:40 - so the avatar should pop in so you see
66:43 - at the bottom we have a little avatar
66:45 - that's there so we have the little
66:47 - avatar popping up
66:48 - right then what we're going to do is i'm
66:50 - going to go ahead and say
66:52 - there's going to have a div inside of it
66:53 - and this is going to have a sidebar
66:56 - profile info and inside that info we're
67:00 - gonna have a h3 tag which has a
67:02 - the user's name so in this case let's
67:04 - just do sunny sanger
67:06 - let's just do my instagram handle so
67:08 - sssango if you're not following me what
67:09 - are you doing
67:10 - go ahead and follow my instagram thank
67:12 - you nice
67:14 - you gotta plug yourself you know um and
67:16 - then we're gonna go ahead and do a p
67:18 - tag and this will be like the id okay so
67:20 - for now i'm gonna say
67:21 - um uh this is
67:24 - my id okay and then you can go ahead and
67:28 - see
67:28 - at the bottom and it's getting cut off a
67:30 - tiny bit right now but you see this is
67:31 - my id
67:32 - at the bottom over there okay and then
67:34 - what we're going to do
67:36 - is we're going to go ahead and after
67:39 - that we're going to have a div
67:40 - so it's a sidebar underscore just called
67:42 - profile icons
67:45 - profile icons boom and then we're going
67:47 - to go ahead and add three icons right
67:49 - now so these are the icons that you guys
67:50 - are noticing
67:51 - over here so these three icons
67:57 - all right so these three sorry it's
67:58 - frozen so these three
68:00 - over here that's what we're gonna add
68:02 - over there um
68:04 - jacob says you guys i got so cool i'll
68:05 - pay you if i had money don't worry dude
68:07 - just all we ask is just smash the thumbs
68:09 - up button that's it get this video out
68:10 - to as many people
68:12 - as we can okay and and that will be
68:15 - that's all i can ask for okay
68:17 - also yeah guys we hit 800 000
68:20 - subscribers
68:21 - it's just insane nice insane
68:24 - right so next we're gonna go ahead and
68:27 - import the three icons
68:28 - so let's go ahead and pop them in here
68:30 - mic icon head to icon settings icon
68:33 - uh so i'm gonna go up to the top and
68:35 - pull them in so my icon headset and
68:37 - sayings
68:39 - boom then um
68:44 - then what we're going to go ahead and do
68:47 - is we should see them
68:48 - so react readers now we've got the three
68:50 - things over here okay so we've got this
68:52 - and we're just going to start it now
68:53 - okay um
68:56 - i always find it funny when people say
68:57 - the lights are disturbing you guys if
68:59 - that's disturbing you
69:00 - like improve your focus come on man
69:03 - shouldn't be looking down here you
69:04 - should be looking over there over there
69:06 - you know it's hard to figure out which
69:08 - way yeah
69:10 - um let's go ahead and
69:13 - uh we're going to style it now okay so
69:16 - sidebar
69:17 - i'm going to pull up the sidebar css i'm
69:20 - going to drag it down here so we split
69:21 - the screen in half and off
69:23 - and then i'm going to go ahead and
69:24 - target a few things now so
69:27 - let's go ahead and do profile info
69:32 - so what i'm actually going to do is i
69:33 - want to reuse the styles that i did for
69:35 - the
69:35 - voice right so you see the voice stuff
69:37 - over here so let's go ahead and bring it
69:39 - back
69:40 - um somebody says funny story when i'm
69:44 - doing programs in react while i'm
69:45 - speaking to myself i speak in a british
69:47 - accent that's
69:49 - so jokes um i know right the greatest
69:53 - is people just look at the weirdest
69:54 - things to critique i know dude
69:56 - honestly focus on the screen
69:59 - all right so now what we're going to do
70:00 - is uh where we had the
70:03 - voice the voice div
70:06 - over here what i can do is i just can
70:08 - just write comma and i can target the
70:10 - sidebar profile as well
70:12 - because i just want to reuse those
70:13 - styles right so sidebar as soon as i do
70:15 - that
70:16 - you'll see look at that it reuses it for
70:18 - that so so that's actually really handy
70:20 - it's a very nice way of doing it right
70:23 - and then
70:25 - then what we're going to go ahead and do
70:26 - is go down here
70:29 - and i'm going to go ahead and say
70:31 - sidebar
70:32 - underscore unscore profile info profile
70:35 - info
70:37 - and then i'm going to go ahead and say
70:38 - flex 1
70:40 - padding of 10 pixels and then you can
70:44 - see it pops it to the side again
70:46 - right i mean you could do the same thing
70:47 - that we did before with that
70:49 - and i'm going to pop in this snippet
70:50 - here so these are two more selectors
70:52 - that we're going to add in so cyber
70:53 - profile
70:54 - target the h3 make it white that made
70:57 - the name tag white
70:58 - and then they
71:02 - i love this comment i got to shout out
71:04 - david jonathan goes huh that's true they
71:05 - don't want to pick a fight with marvin
71:06 - over the lights it's great
71:08 - honestly guys you want to pick a fight
71:10 - with her go for it
71:12 - i'd rather not today this is this is
71:15 - already enough
71:16 - all right then we're gonna go ahead and
71:19 - um yeah that's actually that's actually
71:21 - that done
71:23 - so that's pretty pretty sick guys so
71:26 - let's go ahead and we haven't had this
71:27 - in a while
71:34 - yeah i don't know i'm not a fan of the
71:35 - the the blowhorn anymore
71:38 - you know i like the music instead um
71:41 - so what we're going to do now is
71:44 - do all right then we're going to do nice
71:47 - we actually have this pretty much done
71:48 - so look at that
71:49 - it's looking pretty good and what we can
71:51 - do is i can actually go ahead and load
71:54 - it up with an image so
71:55 - let's go ahead and i'm going to quickly
71:57 - find an image um there's nothing wrong
71:59 - with being alone by the way so i see
72:01 - people saying
72:02 - priyanka why are you saying are you
72:03 - going to be alone it's fine to be alone
72:06 - because he's having a good time he's on
72:07 - vacation right now it's time to i'm on
72:09 - vacation you know
72:10 - sorry it's so good so avatar here we're
72:13 - going to say
72:14 - source i'm going to basically pop in an
72:16 - image of
72:17 - me so this is on google images and then
72:20 - boom
72:21 - see my my image just popped in down here
72:25 - the smart developer right and then what
72:28 - we're going to do
72:29 - is we're going to go ahead and
72:32 - build out the chat part now okay so
72:34 - we're done with the sidebar for now
72:36 - we'll come back to this in a bit let's
72:38 - go ahead and create the chat component
72:40 - so let's go into app.js
72:42 - and you see here we've got we can get
72:44 - rid of that comment and now we're going
72:45 - to build out the chat
72:46 - okay so here i'm going to say chat like
72:49 - this and first thing we're going to do
72:50 - is actually
72:51 - apply some stars to app.js okay so i'm
72:53 - going to go into app.css
72:56 - and in here what i'm going to do is i'm
72:58 - actually just what i need to do is say
73:00 - app display flex and this is because
73:05 - remember i applied that earlier rule
73:07 - where i said 0.25
73:09 - right 0.25 is where uh it's
73:13 - taking up 25 on the screen and we want
73:15 - the chat to take up so now look at that
73:17 - ooh
73:17 - we're getting there okay we're getting
73:19 - there okay
73:21 - so the next one
73:25 - uh oh thank you dude saket says really
73:27 - want to talk asia about the job i'll let
73:29 - him know dude honestly he knows about
73:30 - all these jobs as well which is awesome
73:32 - i don't know thank you both literally
73:34 - smash thumbs up that's it
73:36 - that's all we ask dude and get this
73:38 - video out to more people so we can help
73:39 - more people get those jobs
73:41 - um so save it go back i'm going to
73:43 - create a chat.js so chat.js
73:46 - boom and i'm gonna say rfce and then we
73:49 - get the chat icon then here i'm gonna
73:50 - say
73:51 - chat component sorry class name equals
73:54 - i'll say chat and also guys if you're
73:57 - enjoying this right now
73:58 - shoot an instagram story tag me in it
74:01 - down here
74:02 - and go ahead and post it on instagram
74:03 - because i'd love to see you guys love to
74:05 - see who's watching
74:06 - and it's always nice to go ahead and
74:07 - engage with you a lot so yeah
74:09 - let's go back and i'm going to go ahead
74:11 - and say import
74:14 - import um
74:17 - thank you so much dude for a donation he
74:19 - goes i was working in deloitte and i got
74:21 - laid off i don't react but not getting
74:22 - confidence to give an interview
74:24 - self-confidence is negative help me with
74:26 - advice dude
74:27 - continue building the clones it will
74:29 - build your confidence
74:31 - up join a community like profit with
74:32 - javascript so we have a link in the
74:34 - description or it's a
74:36 - cleverprogrammer.com.pwj
74:38 - if you want to check it out and we
74:40 - pretty much help you
74:41 - we hold your hand the entire way uh but
74:43 - there's a free training in the
74:44 - description as well so the clones
74:45 - free training in your description make
74:47 - sure you join all of that and that will
74:48 - help bring up your confidence
74:50 - um yeah uh so let's go ahead and
74:54 - somebody said maybe watch your first
74:55 - video on youtube yeah go ahead and
74:57 - subscribe to my youtube channel say
74:58 - sango
74:59 - um so now what i'm gonna do is i'm gonna
75:02 - go ahead and finish off the import so
75:03 - here i'm gonna say
75:04 - got four slash chat dot css go ahead and
75:07 - create a chat
75:08 - css so chat dot css go back
75:11 - and then here now
75:15 - what we want to do is here i'm just
75:18 - going to say
75:18 - h2 saying i am the chat screen
75:22 - okay let's go ahead and do that and then
75:23 - we're going to app.js
75:25 - go back here we need to import so i'm
75:27 - going to do control spacebar
75:28 - auto import and it pops in up here and
75:31 - we have it so it says i am the chat
75:32 - screen now okay
75:34 - so moving at a good speed guys uh let me
75:36 - know if you're enjoying this
75:37 - in the comments right now um i'm gonna
75:39 - have a quick war break if you guys need
75:41 - to right now have a quick water break
75:43 - um just stand up you know stretch out
75:45 - okay you know like
75:46 - it always kind of helps to have maybe a
75:48 - coffee or something so like you just
75:50 - kind of like stand up stretch out if you
75:51 - need to
75:57 - make sure you have water everyone always
75:59 - says to drink so much water like
76:01 - dude i couldn't live without water so i
76:02 - mean so many people like they don't
76:04 - drink enough water
76:06 - okay now let's get rid of our comment
76:10 - so we have these two components okay um
76:12 - pre-entry we actually set up the
76:14 - template in redux
76:15 - so yes we will be building our redux in
76:16 - a sec so now what we're gonna do is go
76:19 - to
76:19 - chat.js and we're going to go ahead and
76:22 - build out some stuff here
76:23 - so the first thing i want to do is build
76:25 - up the chat header so the chat header is
76:27 - this part right here
76:28 - so this section over here
76:31 - so you'll notice once i'm inside of a
76:33 - channel
76:34 - for example here you see this like this
76:37 - kind of header
76:38 - is what we want to build right now and
76:41 - then
76:43 - oh i love this dude you will be just
76:45 - like me just carry on working dude
76:47 - and do not quit and anything's possible
76:50 - right so um
76:53 - [Music]
76:54 - then what we're gonna do is where it
76:56 - says i'm on the chat screen so now
76:59 - here i'm gonna go ahead and create a
77:00 - chat header component so let's go inside
77:02 - our chat
77:03 - and then in here i'm going to say chat
77:07 - header right so let's go ahead and
77:09 - create a chat header component so
77:10 - chat header.js boom and then here i'm
77:14 - going to say rfce
77:15 - like so come down here to div say class
77:18 - name equals
77:19 - chat header and then over here i'm going
77:22 - to say import
77:25 - chat header.css
77:28 - boom and then i'm going to create that
77:29 - file oops not like that let's say
77:31 - go ahead and do chat header
77:35 - dot css and then we have that up and
77:37 - running
77:38 - so that works and then here you can
77:39 - actually just go ahead and do yourself a
77:41 - sanity check say history i
77:42 - am the header go back to our chat
77:45 - dot js component and then here control
77:48 - spacebar auto import
77:50 - save and it's there i'm the header
77:53 - okay this is vs code
77:56 - anyone wondering so we can get rid of
77:58 - this one and we can say i'm the header
77:59 - so we know that's there now right so
78:02 - what we can do now
78:03 - is we can click into our chat header
78:06 - component
78:07 - and then here let's go ahead and build
78:08 - this out a little bit so we have two
78:10 - sections we have the chat header left
78:12 - and we have the chat header right so
78:13 - chat header left is this bit
78:14 - and the chat header right is all of this
78:16 - stuff okay
78:18 - so i'm gonna go ahead and uh create that
78:21 - now so i'm gonna say div
78:22 - uh chat header underscore left
78:26 - and i'm going to do another one so i'm
78:27 - going to say div uh chat
78:29 - header on the screen scroll right like
78:32 - so
78:32 - the chat header left is going to consist
78:34 - of a few things it's going to have h3
78:36 - the h3 inside of it will be where we
78:38 - have the chat name
78:39 - so all of this stuff this is the h3 that
78:41 - we're talking about
78:42 - and here i'm going again what we did
78:44 - before i'm going to span i'm going to
78:46 - span with a class name
78:47 - of chat header hash
78:51 - so i can style it afterwards so what
78:53 - that did to make this very clear for you
78:55 - guys
78:56 - is you can see it like it spanned that
78:58 - okay so now we've got a hashtag
79:00 - and i can target this hashtag right
79:03 - now for the channel name so here
79:08 - again i'm going to do a test channel
79:09 - name so test channel name
79:11 - but what we'll do is we'll be using prop
79:13 - soon and that will actually go ahead and
79:15 - help you out
79:16 - um so let's go ahead and do that so you
79:18 - can see it says test
79:19 - channel name we'll start that in just a
79:21 - sec and then the right side
79:23 - what we're gonna have is firstly we're
79:25 - gonna have three icons so i'm gonna have
79:27 - pop them in here so i'm gonna have three
79:28 - icons notification icon
79:30 - the edit icon and so forth and i'm gonna
79:32 - go ahead and pop those
79:34 - in right now
79:38 - save and you should be able to see those
79:40 - three pop in okay
79:41 - so oops
79:44 - and then so then you can see these are
79:46 - the three icons here so we're gonna
79:48 - start that in a sec
79:50 - and then what i'm going to have is i'm
79:51 - going to have the search field so here
79:53 - i'm going to create a div for this i'm
79:55 - going to say chat header
79:57 - under squander source search like this
79:59 - and then here i'm going to have an input
80:01 - and this input it's all by the photo is
80:03 - type text so i'm going to say
80:04 - placeholder
80:06 - should just say search okay uh
80:10 - tommy gian yes this is good actually
80:12 - have you ever tried using dotmodule.css
80:15 - yes that's actually very good so that's
80:18 - a really good comment
80:19 - the only reason i didn't do it today is
80:20 - because people are used to using
80:22 - just the typical bam but that's really
80:24 - good dude
80:25 - um and i will be starting to use that i
80:27 - just didn't want to kind of overload
80:29 - everyone with redux
80:30 - and that because if you notice when you
80:31 - sort this up uh
80:33 - it actually by default does dot module
80:35 - so uh really good really good point
80:38 - okay now um we're gonna go ahead and do
80:42 - uh placeholder oops this is not right
80:44 - please hold a search like this
80:46 - and then we're going to go ahead and do
80:47 - a search rounded icon so i'm going to go
80:49 - ahead and pop that in here
80:51 - and obviously when we use that we're
80:53 - going to need to import it
80:55 - so search rounded icon just go ahead and
80:58 - import at the top
80:59 - save and you'll see there and then
81:01 - outside this div
81:03 - i'm going to go ahead and add two more
81:04 - icons so
81:06 - like such so these are going to be these
81:07 - two so now we have to import those as
81:10 - well
81:10 - oops so i'm going to go ahead and import
81:12 - those at the top
81:14 - over here like that and then we can see
81:18 - now we have everything we need now so
81:19 - i'm going to make
81:20 - this i'm going to make this sorry all of
81:23 - this nastiness
81:24 - look like this right so this is where
81:25 - the magic happens this is where all the
81:28 - sort of like it comes together it looks
81:29 - really really clean
81:30 - so what we're going to do first
81:33 - is i'm going to go ahead and do this
81:35 - because i think this helps you out a lot
81:37 - when i pop this underneath like this
81:40 - also we're nearly at 800 likes guys so
81:42 - come on let's keep pushing that number
81:44 - up if you're enjoying this and you
81:46 - haven't already smash the thumbs up
81:48 - button
81:48 - and it will help this video get out to
81:50 - as many people as it possibly can
81:53 - and that will help a lot more people get
81:54 - value from this video okay
81:56 - um so we're going to go here we're going
81:59 - to say chat
82:00 - header and i'm going to actually pop
82:02 - this up i love having this on the screen
82:04 - so i'm going to go ahead and delete the
82:05 - ima header you don't need to say that
82:07 - um so here i'm going to say chat header
82:09 - and then here i'm going to say display
82:11 - flex
82:12 - display flex and then i'm going to say
82:13 - justify content space between
82:16 - all right then i'm going to say align
82:18 - item center
82:20 - i'm going to say color is gray
82:23 - and i'm going to say padding of 10
82:24 - pixels right so we can do that
82:27 - boom see it already starts to look a bit
82:29 - different then i'm going to target that
82:30 - hash
82:31 - remember so the hash that we talked
82:32 - about before um i'm going to go ahead
82:35 - and pop this in there so this is the
82:37 - hash
82:38 - uh this one over here so now the hashtag
82:40 - is a bit bigger
82:41 - now you can see that it changed it a bit
82:42 - so i need to target the h3 and i need to
82:44 - make it like fall into line with this
82:48 - so what i'm going to do is i'm going to
82:49 - go here and say chat header left so the
82:52 - left section which was this bit
82:54 - when i say display flex align the item
82:55 - centrally so the span tag as well
82:57 - save it and boom so the color is white
83:01 - but that's fine for now because i'm
83:03 - going to go ahead and make the
83:04 - background color of that
83:06 - actually changed to um something else so
83:10 - in a second
83:11 - i mean for now what i'll do is i'll
83:12 - comment this out so you can still see it
83:14 - okay but that will be why afterwards
83:17 - because
83:18 - here we want it to be white um
83:21 - and then in the chat header right so
83:23 - let's go ahead and target this we're
83:24 - going to say chat header right
83:26 - and then here i'm going to say display
83:27 - flex alignment center flex 0.5 justify
83:30 - content space between
83:32 - so this will actually go ahead and make
83:34 - it so that this
83:36 - takes up uh the rest of the remainder of
83:40 - the screen there okay
83:42 - so what i need to do now
83:45 - is actually go down to target the icons
83:47 - themselves
83:48 - so i'm going to go ahead and say chat
83:50 - header right target the material ui
83:51 - icons
83:52 - give them a padding of 5 pixels and make
83:54 - them a cursor pointer so you see when i
83:55 - hover over it now it's a pointer
83:57 - that's always nice as a user experience
84:00 - okay
84:01 - and then we're gonna go back and then
84:04 - we're gonna go ahead and make it so that
84:05 - when we hover over it
84:07 - it changes it to white okay so you'll
84:09 - give it a nice user experience right now
84:10 - you obviously you can't see it but if i
84:12 - was to make this red
84:13 - you guys can clearly see a visual
84:15 - indicator as to like when i do that
84:16 - okay so i'm going to make it white and
84:18 - then i'm going to change the background
84:19 - color after
84:20 - now for the search field to get it
84:22 - looking the way we need to
84:24 - first thing i'm going to do is go ahead
84:25 - and target the div i'm going to say
84:27 - display flex align the item centrally
84:29 - the color should be gray of the text
84:31 - background color should be a darker gray
84:33 - border radius three pixels so that way
84:34 - it's not like a set horrible border
84:36 - and then a padding of three pixels so do
84:38 - that and you see it becomes like this
84:40 - and then we're going to target the
84:41 - actual inner input right so we're going
84:43 - to go ahead and actually target the
84:44 - inner input
84:45 - background should be transparent the
84:47 - outline width should be zero
84:49 - uh outline which means that when i sort
84:51 - of you don't get that blue outline but
84:53 - if i get rid of this line
84:55 - and i go here get this horrible blue
84:57 - outline so that's what we don't want
84:58 - that's what that line of code does color
85:00 - white so the text is white
85:02 - border none so that way it just becomes
85:04 - this nice one big border okay
85:07 - then what we're going to do is we're
85:08 - going to go back to chat dot
85:10 - css and in here i'm going to go ahead
85:13 - and say
85:14 - chat display
85:18 - flex flex direction column
85:23 - and then i'm going to go ahead and say
85:25 - flex 0.75
85:27 - because i want this to take up the
85:28 - remainder of the space and then i'm
85:30 - going to say background color should be
85:32 - of
85:32 - a darker gray so this is actually in
85:34 - chat.css if you guys are confused
85:36 - and then you can see it changes it to
85:38 - that so then i can go back to my chat
85:39 - header
85:40 - i can go to the left section uncomment
85:42 - out the white again so now you can see
85:44 - all the highlighting works as we wanted
85:46 - it to okay
85:48 - and then we go back to this chat dot css
85:51 - and then the final thing i'm going to do
85:53 - is make this actually
85:54 - a hundred view height so
85:57 - there we go that would be handy for
86:00 - later i'll explain
86:01 - where that comes into play in a bit um
86:03 - okay so dope
86:04 - we have the um thank you so much flick
86:07 - shot because
86:08 - uh it's 3am he'll be working this hot
86:10 - piece tomorrow morning you're like an
86:11 - angle in this
86:11 - angel in disguise thank uh for the
86:13 - beginner react developers appreciate
86:15 - that dude
86:16 - and as if anyone else is interested in
86:18 - watching afterwards remember it's going
86:19 - to be recorded
86:20 - okay see han says i don't know redux
86:22 - should i continue watching hell
86:24 - yes continue watching and
86:27 - it will make sense so don't worry um
86:29 - this is completely beginner friendly if
86:31 - you haven't used reacts before
86:32 - it's fine don't worry pattern
86:34 - recognition okay um somebody says why
86:36 - are you not using bootstrap trust me
86:38 - when you get into professional
86:39 - um environments bootstrap is not the way
86:42 - that you always want to go
86:43 - so learn how to do it and um yeah that
86:46 - will help you out
86:47 - uh goodnight apprenticeship um okay so
86:49 - now what we're gonna do
86:50 - is we're gonna go to the next section
86:53 - which is so it's actually starting to
86:54 - look very similar now okay
86:57 - we're gonna go ahead and create the chat
86:59 - so let's go into inside of our chat.js
87:01 - and we're gonna actually go ahead and
87:02 - first now right now we're going to go
87:04 - ahead
87:05 - here and we're going to say so we have
87:08 - the chat header done
87:09 - the next bit is we're going to have chat
87:10 - messages we're not going to build this
87:11 - out just yet we're going to build that
87:12 - after
87:13 - so chat messages and then we're going to
87:15 - go ahead and say chat
87:16 - input now the input is of course
87:20 - the bottom part so this input down here
87:23 - let's go ahead and build the input first
87:25 - and then we can go ahead and build the
87:27 - chat messages afterwards
87:29 - so for the input we're going to have the
87:30 - add circle icon we're gonna say it's a
87:32 - large size so i'm gonna go ahead and do
87:34 - that
87:35 - um oh awesome dude thank you so much for
87:38 - that donation
87:39 - uh can we have a medium clone of course
87:41 - we can have a medium clone okay
87:43 - um thank you so much to greg stevenson
87:45 - he still surprised me with how good he
87:46 - is
87:47 - explaining this stuff even to complete
87:48 - newbies appreciate that dude
87:50 - appreciate that a lot um okay no we're
87:53 - doing the back end as well so it's going
87:55 - to be all powered up
87:56 - um we're using firebase to do everything
87:58 - so
87:59 - and i'm using vs code kevin patel all
88:02 - right so now
88:03 - we're going to go ahead and inside of
88:06 - chat input i'm going to go add circle
88:07 - icon i'm going to remove this you guys
88:09 - can see it
88:10 - need to import add circle icon so let's
88:12 - go ahead and do that
88:16 - there we go and then down here
88:19 - i'm going to go ahead and say i'm going
88:22 - to create a form because i want to have
88:23 - it so i can submit the form
88:25 - get rid of the action because we don't
88:27 - want that and then in here i'm going to
88:28 - have an input field
88:30 - and this is going to be the one which
88:31 - says message youtube so
88:33 - here i'm just going to say placeholder
88:36 - as for now we're going to give it uh
88:38 - something basic and we're going to say
88:40 - message hashtag
88:44 - test channel
88:48 - ccr1 is over here message test channel
88:50 - okay
88:51 - and then we're going to go ahead and do
88:53 - button
88:54 - and the button type is submit so that
88:56 - way when we hit the enter key on the
88:58 - input field
88:59 - it will submit the button and here i'm
89:01 - actually going to say send message
89:03 - but we don't want to show this button so
89:04 - this button isn't actually visible so
89:06 - you see here we don't actually see the
89:07 - send message button
89:08 - but the functionality works when i hit
89:10 - enter
89:11 - right so there's a little trick we're
89:13 - going to do for that and i'll show you
89:14 - how to do that
89:16 - okay and then what we're going to do
89:19 - is we're going to go ahead and say set a
89:22 - class name for this we're gonna go ahead
89:24 - and give this a class name so i'm gonna
89:25 - say um
89:28 - class name chat input button okay and
89:31 - then i'm gonna go
89:32 - and give
89:37 - underneath this form i'm going to go
89:39 - ahead and say
89:40 - uh chat underscore underscore input
89:42 - icons
89:43 - okay uh i love this one dexcode says hey
89:47 - papa react here saving live since
89:49 - appreciate that dude
89:50 - and any man any positive impact that's
89:54 - what that's what we're aiming for
89:55 - um so we're gonna have three icons here
89:57 - right these three icons are gonna be
89:59 - these three icons that you see in the
90:00 - bottom right um
90:03 - so let's go ahead and drop those in save
90:05 - it i need to import those because it's
90:06 - screaming at me right now
90:08 - let's go ahead and pop those in
90:11 - boom uh for getting one which is emoji
90:16 - this one save it
90:20 - and there you go so now obviously this
90:22 - doesn't look very nice
90:23 - i'm going to make this look like the
90:24 - finished product so let's
90:26 - open up our chat.css and let's drop it
90:29 - underneath like we like to do that
90:31 - and then what i'm going to do is we're
90:34 - going to target chat input so
90:36 - go here and then chat input has quite a
90:38 - few changes that we need to make so
90:40 - let's say chat underscore underscore
90:42 - input
90:43 - um like this input
90:47 - go down here and then what i'm going to
90:49 - say is i'm going to say color is light
90:50 - gray
90:51 - okay so the color is light gray display
90:54 - flex
90:56 - boom and everything goes into that then
90:58 - save align item center
91:00 - everything pulls into the center justify
91:02 - content space between
91:04 - and then you see everything should push
91:05 - apart and then we say padding of 15
91:07 - pixels
91:08 - padding of 15 pixels hey check this out
91:11 - dude
91:12 - just got a nice donation from divash
91:14 - kumar thank you so much
91:16 - he says um
91:20 - lots and lots of cheers for the running
91:22 - project and thanks for making people
91:23 - grow their confidence on their learning
91:25 - appreciate that dude waiting for some
91:26 - challenging illustration sonny hey
91:31 - i will give you a quick illustration
91:33 - once we uh get to the
91:34 - trickier part okay but thank you so much
91:38 - for that donation awesome
91:40 - so with that done chat input is then
91:42 - panning 15 pixels now i'm going to go
91:44 - ahead and do border radius margin border
91:46 - top and a background color so i'm going
91:47 - to paste a snippet here
91:49 - boom save it and you see we get a nice
91:52 - little outline
91:53 - now i'm going to target the form so i'm
91:55 - going to go inside the
91:57 - form inside the input like so give it
91:59 - padding 15 pixels make the background
92:01 - transparent of the form
92:03 - uh border none outline width remember
92:05 - that little trick color white font size
92:06 - lodge
92:07 - save that you can see it starts to look
92:09 - a bit nicer
92:10 - we're not done just yet though we have
92:12 - to make the chat input form
92:14 - flex 1 so it takes up the majority of
92:16 - that container space
92:17 - if i do that you see it does this okay
92:20 - now
92:21 - the input we also want to make width 100
92:25 - so we're gonna make it take up as much
92:26 - room as it can
92:27 - okay uh actually in this case
92:31 - let's not do that just yet uh for the
92:33 - send message
92:34 - so the actual input button i'm gonna do
92:37 - display none so we don't see the button
92:39 - because we don't want that button right
92:41 - here i'm going to say width
92:42 - let's just give it 100 pixels let's see
92:44 - if that works again yeah there we go
92:46 - width of 100 pixels and that works a
92:48 - little bit cleaner okay
92:49 - now um
92:54 - all right now what we're going to do is
92:56 - we're going to go to
92:58 - chat input form um
93:02 - we're going to go to flex 1 input icons
93:04 - material usi so now what i'm going to do
93:06 - is actually going to style the icons
93:07 - inside on the right
93:08 - give them a little bit more padding so
93:10 - let's go ahead and do that chat and chat
93:12 - input icons
93:13 - target the ones that you get given and
93:14 - then save it
93:16 - um i appreciate that
93:20 - does i know it's always something
93:21 - explained so elegant and easily
93:23 - appreciate that dude uh so now you can
93:25 - see look at that
93:26 - we've got a very nice comparison right
93:29 - so this is actually looking very nice
93:32 - right now
93:32 - okay um so this is very close to what we
93:35 - want
93:36 - now what we're going to do is i want the
93:38 - middle bit so the messages to take up
93:40 - the remainder of the space so
93:41 - whenever we have like a flex design so
93:43 - especially a column design
93:45 - what we actually have without realizing
93:47 - is
93:48 - so flex column so this is the top
93:49 - element this is the bottom element so
93:52 - right now we have two elements
93:53 - in this one so right now we have two but
93:56 - what i'm going to do is i'm going to add
93:57 - the third element
93:58 - the chat dot messages and i'm going to
94:00 - say this should have flex 1
94:02 - and now what this does flex one is
94:04 - basically going to say all right you
94:05 - should take up as much room as you can
94:08 - right so this container should take up
94:09 - as much room and it pushes the thing at
94:11 - the top to the top pushes this one to
94:12 - the bottom
94:13 - and that's why we get this nice sort of
94:15 - ui so what i'm going to do now
94:17 - is where we have the chat messages
94:21 - if i simply go here and i say chat
94:23 - messages flex 1
94:25 - we get that desired output outcome so we
94:27 - can say flex
94:29 - 1 and boom see that it went ahead and
94:33 - did that so literally i put back my
94:34 - drawing and it literally just did the
94:35 - exact same thing
94:36 - that's why we get that so now anything
94:38 - we put in this space right here
94:40 - is going to be the messages that come
94:41 - through okay
94:43 - and that's going to be pretty pretty
94:45 - awesome okay
94:47 - uh i definitely agree with ceon he says
94:49 - i think coding is kind of an art well
94:51 - done
94:51 - i definitely think it's kind of an art
94:52 - like as soon as especially when you get
94:54 - like a flow state
94:55 - and um uh nice because you made my
94:59 - friends jealous when i made
95:00 - whatsapp man cone today waiting for the
95:02 - man stack yeah
95:03 - so shout out david david drop the man
95:06 - stack
95:06 - okay now what we're gonna do
95:09 - we're gonna go ahead and build some of
95:11 - the messages
95:13 - okay so let's go ahead and check out
95:14 - chat.js
95:16 - chat.js and we're going to go inside of
95:21 - here all right so now inside of the
95:23 - messages div
95:25 - here we're going to have a message um
95:28 - we're gonna have a message component and
95:30 - we're gonna have it several times based
95:31 - on like if there's 10 messages 15
95:33 - messages or something like that okay
95:35 - um somebody says imagine life before
95:36 - flexbox
95:39 - damn i don't even know what anyone i
95:41 - remember i remember what life was like
95:42 - before flexbox it was a headache man
95:44 - you had to do all sorts of breakpoint
95:46 - rubbish um i still use breakpoints
95:48 - they're good
95:48 - but you know i don't use them as much um
95:52 - now here i'm gonna say the message is
95:53 - gonna take three things it's gonna take
95:55 - a time stamp a message
95:56 - and a user but for now we're just going
95:57 - to make it a simple message
95:59 - so it says message is not defined so
96:01 - let's go ahead and do message.js so
96:03 - message.js
96:05 - boom rfce save it
96:08 - and then here i'm gonna say class name
96:10 - equals message
96:13 - equals message and then i'm gonna do
96:16 - import
96:19 - message dot css save it go ahead create
96:22 - that
96:22 - message dot css go back get rid of that
96:27 - and then here what we're going to say is
96:28 - very simply so inside a message
96:30 - we have a few things right we have an
96:32 - avatar
96:35 - an avatar and i actually imported that
96:38 - from material ui
96:39 - and that's going to have some kind of
96:41 - source and then we're going to have the
96:42 - message info so this will be like the
96:44 - the username the the message the
96:46 - timestamp and all that sort of stuff
96:48 - so the stuff that you see over here
96:50 - right so over here we have the message
96:52 - info so we're going to say message
96:54 - underscore and score info all right oops
96:58 - info and then here i'm going to say
97:02 - h4 entitled up and then it's going to
97:04 - say
97:05 - um this one's going to be
97:09 - let's just say like my username says
97:11 - this is anger if you're not following me
97:13 - again go follow me
97:15 - um and then we're going to span a
97:17 - timestamp in here so i'm going to give
97:18 - this a class name of
97:20 - message timestamp
97:24 - and then here i'm going to go ahead and
97:26 - say this is a timestamp
97:28 - and we'll replace that with the actual
97:30 - timestamp in a bit and over here i'm
97:32 - going to say a p tag which is the actual
97:33 - message
97:34 - this is a message okay
97:37 - uh also awesome stuff man calvin
97:39 - commander thank you so much for the five
97:42 - canadian dollar donation all i gotta say
97:44 - is god bless you guys for this value
97:46 - also is there a way to make these clones
97:47 - mobile
97:48 - responsive because i like to use them
97:49 - with friends yeah so
97:51 - uh we try and build it with a goodbye
97:54 - firstly thank you so much i'll keep that
97:55 - up on the screen for a little sec
97:56 - uh thank you so much dude uh and also
97:59 - yes so we try and make it as
98:00 - much as responsive as possible from the
98:02 - like the perspective of how
98:04 - long the builds last and how like you
98:06 - know how much we can fit in
98:08 - inside of a live stream but we can
98:10 - definitely focus more sessions on
98:12 - pure sort of responsive design i'm
98:14 - definitely down for that
98:15 - but again we have react native stuff
98:17 - coming we have readouts coming we're
98:18 - just
98:19 - you know we're trying to get out as much
98:20 - as we possibly can
98:22 - um but i appreciate that kevin always
98:25 - good to see you
98:26 - and um okay so let's go back and
98:30 - um let's go to
98:33 - our message let's see how it looks so
98:35 - let's go back to
98:36 - our chat.js go ahead and do our little
98:39 - control spacebar trick auto import
98:42 - save it and then you can see this is the
98:43 - message so if i go ahead and
98:45 - let's do three messages down here we
98:47 - want this to look like this
98:49 - okay so now what i'm going to do is i'm
98:52 - going to go inside my message
98:53 - inside message.css pull this down
98:56 - underneath
98:58 - pull this down underneath then i'm going
98:59 - to go into mymessage.css
99:02 - and i'm going to say dot message
99:05 - and the first thing we'll do is display
99:06 - flex uh align item center
99:10 - boom and we should see that then we're
99:12 - going to say padding at 20 pixels
99:13 - because we don't want it that close to
99:14 - the end
99:16 - and i'm going to say color is white
99:19 - okay color of white and then we're going
99:21 - to say the message
99:24 - info should have a margin left
99:27 - of 20 pixels okay and you see it spaces
99:31 - away a little bit
99:32 - and then we're going to say message
99:34 - timestamp
99:36 - and this one is going to be color gray
99:38 - oops
99:40 - let me go ahead and say color gray
99:44 - and i'm going to say margin left of 20
99:46 - pixels
99:48 - okay save it and then we're going to say
99:50 - font size
99:51 - of extra small so this one should be
99:53 - like an extra so right now the time
99:54 - stamp shouldn't be the same size
99:56 - just looks a bit strange it should be a
99:57 - bit smaller so i'm going to go back here
99:59 - and i'm going to say
100:00 - font size font
100:04 - size of 20
100:08 - uh extra small sorry extra small so
100:10 - these are the predefined sort of browser
100:12 - ones
100:12 - there we go okay so that looks pretty
100:14 - good right now um what i'm going to do
100:16 - is i'm actually going to get a picture
100:19 - uh but you know you know for now we'll
100:21 - use this one
100:22 - and we'll sort of plug in our values
100:24 - afterwards so at this point this is kind
100:26 - of cool
100:26 - right we have things working pretty nice
100:31 - but we can do better all right firstly
100:33 - we're 850 likes
100:35 - smash that thumbs up button if you're
100:36 - still watching and you haven't already
100:38 - uh and yeah we're gonna we're gonna hit
100:40 - a thousand likes today guys just go
100:42 - ahead and keep pushing it to
100:43 - bring up the energy for the future
100:45 - builds um
100:47 - but with that said what we're gonna do
100:49 - now is go ahead
100:51 - and um i think at this point we can
100:55 - actually go ahead and maybe start
100:56 - introducing some firebase stuff so
100:59 - uh let's do that actually it'll be fun
101:01 - so what we're gonna do now
101:02 - is go over to our
101:06 - firebase then we're going to go to cloud
101:08 - firestore
101:10 - okay um hey i love this sanja
101:13 - because it's already 1 21 am here but
101:15 - i'm awake because you're super tutorial
101:17 - sunny
101:17 - and an extra next tour please do an
101:19 - admin panel
101:20 - yeah we'll work on the admin panel soon
101:22 - i will come home soon so cloud firestore
101:24 - you want to click create database and
101:26 - then we're going to say start in test
101:27 - mode click next
101:28 - any location is fine click enable you
101:31 - need to do this to get everything up and
101:33 - running okay
101:34 - um okay so
101:36 - [Music]
101:37 - uh almost at 900 likes guys almost at
101:41 - 900 likes
101:42 - appreciate each and every one of you
101:43 - watching we still have 300 people
101:45 - watching across facebook and youtube
101:47 - so that is insane thank you guys um and
101:50 - i'm sure we're gonna get that momentum
101:52 - back
101:52 - up and flying again um
101:56 - okay so there you go we have that up and
101:59 - running
102:00 - then we're gonna go into authentication
102:02 - and we're gonna go sign in method
102:03 - and here i'm gonna enable google sign in
102:06 - okay so you need to do this
102:07 - uh here i'm just gonna enable an email
102:09 - click save and you need to do this for
102:12 - the logging in
102:12 - step okay um somebody says love your
102:15 - programming what would love you
102:16 - to have you as a programming mentor i do
102:18 - do mentoring uh
102:20 - drop me a message on my instagram and
102:22 - i'll be happy to have a chat
102:24 - um so okay so
102:29 - um somebody says it's a good question
102:32 - actually he says someone says after 30
102:33 - days it comes to
102:34 - cloud firestore database will be
102:35 - expiring soon to fix that problem go
102:38 - into your cloud firestore go to rules
102:41 - and then go here and then basically get
102:43 - rid of this line
102:45 - all right get rid of this and just do a
102:47 - semicolon allow read and write
102:48 - publish it and that's it you'll never
102:50 - get that annoying message again
102:52 - okay that'll save you a bit of headache
102:55 - okay
102:56 - so with that said now let's go back to
102:59 - our code
103:00 - and oh yeah so what we wanted to do
103:02 - actually
103:03 - is go to this little cog right remember
103:06 - we saved the config earlier but we're
103:07 - going to grab this config again
103:12 - we're gonna grab that config and then
103:13 - we're gonna go back to our code i'm
103:15 - gonna do command b
103:17 - and then we're gonna basically create a
103:18 - file called firebase.js
103:21 - and i'm gonna paste it inside of there
103:24 - okay
103:25 - so now we have this the next thing i
103:27 - want you guys to do is pull up a
103:29 - terminal say mpmi
103:30 - firebase we need to install the firebase
103:33 - dependencies so that we can go ahead and
103:34 - do everything inside of
103:36 - that we need to do with firebase the
103:38 - next step
103:40 - is we go to the top of the file and we
103:41 - say import
103:43 - firebase from firebase
103:47 - because it will be installed right and
103:49 - then what we're going to do
103:50 - is we're going to go ahead and say uh
103:53 - const get a firebase app and initialize
103:55 - the app with the firebase config
103:57 - so this one right here that's the first
103:59 - thing that'll basically like set the app
104:00 - up and connect everything that we need
104:02 - the next bit we're going to go ahead and
104:03 - grab the database so we're going to make
104:05 - say go ahead and grab firestore
104:07 - and store it in this variable and then
104:10 - we're going to do the same for
104:11 - authentication
104:13 - and then the final thing this is where
104:14 - we have the special googie login
104:16 - functionality
104:17 - is we say const provider equals new
104:20 - firebase.auth.google auth provider
104:22 - okay so that's going to be very
104:24 - important for the next bit and then
104:25 - we're going to go ahead and export
104:28 - the authentication and provider as
104:30 - explicit imports
104:32 - okay and then we're gonna export a
104:33 - default export which is the database
104:35 - because we use the db more than we use
104:37 - these two so i'd like to make that the
104:39 - default and if you don't know the
104:40 - difference between explicit and uh
104:42 - implicit then
104:43 - i recommend go ahead and check it out
104:45 - but at this point it's not that
104:47 - important
104:51 - okay so with that said
104:54 - almost 900 likes crazy stuff okay so
104:57 - with that said we're gonna go ahead
104:59 - and um we're going to create
105:02 - a let's create the login maybe okay so
105:06 - right now we have this
105:07 - right here right but i want to have some
105:08 - login functionality and then i actually
105:10 - want to set up redux
105:11 - and get redux up and running so right
105:13 - now it created
105:15 - a some it created redux for us like the
105:17 - sort of back end of redux okay
105:20 - now today i'm going to be showing you
105:22 - how to use redux from the tutorial
105:25 - um you can actually add other so nagesh
105:28 - says can we add in other
105:30 - authentications like facebook or
105:31 - anything else yes there's facebook
105:32 - github
105:33 - loads of different uh ones that you can
105:35 - add so if you go to authentication you
105:37 - can see on the sign in method
105:38 - all of these ones you can go ahead and
105:39 - add they just have different
105:40 - implementations
105:42 - um but we're gonna use google today um
105:44 - so here now
105:46 - what i'm going to say is i'm going to
105:47 - rename this to become
105:50 - this one i'm going to say rename it to
105:51 - the user reducer because
105:53 - we're going to basically have one area
105:56 - of our data layer which is permanently
105:58 - for only the user stuff so we need to go
106:00 - to our counter slice
106:01 - rename this file to be user slice and
106:04 - i'll explain all this in a sec
106:06 - user slice and then what we're going to
106:08 - do is we're going to click update
106:09 - imports
106:10 - i'm going to click no so i'm going to
106:11 - show you guys where we actually need to
106:13 - update it
106:15 - but then what i'm going to do is i'm
106:16 - going to go ahead and change everything
106:18 - in here that says counter
106:20 - to user so it's user slice now
106:24 - so it's going to say const user slice
106:26 - equals create slice and we're going to
106:27 - the name user
106:28 - here we're going to have initial state
106:29 - of user this is going to be no
106:32 - and again this is the stuff where you
106:33 - can pretty much just go ahead and copy
106:34 - along and
106:35 - uh pattern recognition in this case i'll
106:37 - explain a bit of what redux is doing but
106:40 - you don't actually need to know
106:41 - fully as at this point as to where we
106:43 - just need to know how to use it okay
106:44 - so i'm going to go ahead and get rid of
106:45 - these i'm going to say create a function
106:48 - called set user
106:49 - for when we actually log in well let's
106:51 - just call it login
106:52 - let's call it login and then i'm going
106:55 - to say this will take a state and an
106:57 - action
106:58 - right and then we're going to create
106:59 - another one which is going to be called
107:01 - logout and then this will go ahead take
107:04 - the state as an argument
107:06 - and then it will when we log out we
107:08 - basically just want to go ahead and
107:09 - and set the user to know again okay
107:13 - um whereas when we log in
107:16 - we're going to get rid of this stuff
107:17 - when we log in what we will do is we'll
107:19 - set the user
107:20 - to whatever the action was plus
107:24 - let me go ahead and double check we're
107:25 - gonna say whatever the action.payload
107:27 - was
107:28 - whatever the payload was we're gonna
107:30 - wherever we pass through as an action
107:32 - uh this will make sense in a bit guys
107:34 - and we're gonna we don't need these
107:35 - three
107:37 - we're gonna go ahead and say log out log
107:39 - in sorry
107:40 - log out so we're gonna export these as
107:43 - actions so that way we can use it
107:44 - throughout the app
107:45 - now we don't need this stuff we can go
107:46 - ahead and delete that and then we don't
107:48 - need the comment here
107:50 - but a selector is basically how we can
107:52 - go ahead and grab this information
107:54 - once it's done okay so we can go ahead
107:57 - and do this
107:58 - so a slice is a store no so the store is
108:00 - like a so i'll show you in a sec i'll do
108:01 - a little drawing
108:02 - but over here we're going to say select
108:04 - user state.user.user
108:07 - because it's the user slice and it's the
108:09 - user piece of state okay
108:11 - and use that okay so we're going to do a
108:13 - quick drawing for you guys
108:14 - to visualize this okay so we have an app
108:17 - all right
108:18 - we have an app so freeze whiteboard okay
108:22 - so we have our application so let's just
108:24 - go ahead and say
108:26 - um discord clone
108:29 - all right so we have this app and
108:31 - discord
108:32 - clone right now when you have an app you
108:35 - have a few components inside of your app
108:37 - right so you have like your app.js at
108:39 - the top
108:40 - um so this one will be like app.js
108:43 - and then you have a few apps underneath
108:45 - things underneath you have like the chat
108:47 - right so you have the the chat dot js so
108:50 - i'm just gonna say chat
108:52 - you have like the header component
108:54 - underneath oops
108:55 - you have the header component right
108:59 - and then you basically have this tree
109:01 - that starts to grow
109:02 - right so you have this and this goes to
109:05 - this and then like for example the chat
109:07 - has like a message component
109:10 - and so forth okay now
109:14 - what we can do is so you have this kind
109:16 - of tree and then the header would also
109:17 - have its own components so like
109:19 - it's just gonna say dot dot dot so this
109:21 - would be like another component okay
109:23 - um now the point is is that say for
109:25 - example we had a login component
109:27 - okay so let's say we have a login
109:28 - component over here
109:31 - right and app.js connects to our login
109:33 - component now
109:34 - imagine we had a user here right so
109:36 - imagine we had a piece of state where
109:38 - the user is here
109:39 - and we set the user over here so imagine
109:41 - when i log in
109:42 - you basically go ahead and get the
109:43 - user's information now if i want to get
109:46 - the user like if i need the user when i
109:49 - whenever i do a message down here
109:51 - then what i need to then do is basically
109:53 - pass the user over here
109:55 - and then i need to pass it to chat
109:56 - component as a prop and i need to pass
109:59 - it down to message as a prop and it kind
110:01 - of gets really messy what if i need it
110:02 - down here as well
110:03 - i need to basically go ahead and pass it
110:06 - to the header and then pass it to this
110:08 - component
110:08 - and now already it's getting messy right
110:10 - we don't want this this is a headache
110:12 - right so what we do instead is we kind
110:15 - of say forget all this stuff
110:17 - and what we do is we introduce something
110:18 - like a data layer so imagine like an
110:20 - onion
110:21 - right it's like imagine like it's like
110:22 - an onion and this is what we call
110:24 - like our data layer right so i like to
110:26 - refer to it as a data layer or in this
110:28 - case it's going to be redux
110:30 - okay now the data layer in this case it
110:32 - has multiple slices inside of it
110:34 - so just like an onion but you have
110:36 - different slices in your engine
110:37 - so we're going to have something like
110:39 - called the user right so the user
110:41 - slice and this will have all the
110:42 - information about a user
110:44 - and then we're also going to have
110:45 - something like the
110:48 - uh the app slice this will have
110:49 - information which is
110:51 - like generic information about the app
110:53 - so which channel are you in so we could
110:54 - call it channel
110:55 - slice but in this case i'm just going to
110:57 - say app slice right now the benefit here
111:00 - is when we get the user at the login
111:03 - what we can do is
111:04 - we can actually just go ahead and push
111:05 - it into this data layer
111:07 - so in this case i would push it into the
111:09 - user slice
111:10 - right so let's go ahead and just move it
111:12 - over here so imagine i had the user
111:13 - slice
111:14 - because remember just like an onion has
111:16 - different layers we have the app layer
111:18 - the user layer so in this case we have
111:19 - the app the user slice so i push the
111:21 - user into the user slice
111:23 - and then wherever i need it i can go
111:25 - ahead and just pull it out
111:26 - because this the layer is surrounding
111:28 - the entire app so
111:30 - here i can actually just go ahead and
111:31 - get the user from the slice that we
111:33 - pushed into so we can push in at this
111:34 - point
111:35 - grab it at this point if i need it over
111:37 - here i can do the same thing i can just
111:38 - pull it from the daily
111:40 - so if i need the user at this point and
111:42 - you see it doesn't matter
111:44 - where we pull it from but i can go ahead
111:46 - and use it
111:47 - so this is going to be really really
111:49 - high i'm just checking the comments
111:51 - so um
111:54 - nice this week i've already took leave
111:56 - for three days from office just to learn
111:58 - react yes from sunny damn dude thank you
112:00 - so much
112:01 - uh that's awesome to hear that um
112:04 - i love this stuff okay yeah so this is
112:07 - essentially redux in a nutshell okay so
112:09 - we have like different layers of the
112:11 - onions so like
112:11 - and the reason for this is because you
112:13 - don't want all of your data in one place
112:14 - right we want to have sort of
112:16 - a place where it's all the generic
112:17 - information a place where it's the
112:18 - user's information only
112:20 - and it makes the app easier to maintain
112:22 - so with that said
112:23 - we're basically going ahead and create
112:25 - the user size first so the name of the
112:27 - slice is user and so forth so we go back
112:29 - to our store.js
112:31 - and here this is where we configure the
112:33 - store so the store is essentially this
112:35 - layer
112:36 - so essentially this onion pill thing
112:38 - right and this consists of like the user
112:40 - slice
112:41 - but we're also going to create an app
112:42 - slice so i'm going to create that right
112:44 - now and the reducer
112:45 - is just something which listens to
112:47 - action so an action is what we do here
112:49 - so imagine when we log in
112:50 - we push the user and then at this point
112:53 - through a login action
112:55 - and then if we log out we can push the
112:56 - user in as a logo action so it basically
112:58 - is the user state
113:00 - and then everything listening re-renders
113:02 - based on if it's listening or not
113:04 - so what i'm going to do now is i'm going
113:06 - to go ahead and i can
113:07 - delete these two delete the counter and
113:09 - count this slice and we're going to go
113:10 - ahead and create app
113:12 - slice.js and then what i'm going to do
113:14 - is i'm going to copy everything from
113:16 - user slice
113:17 - i'm going to rename everything to
113:21 - app and we're just going to go through
113:22 - and make a few changes so app slice
113:24 - create slides the name of the slice
113:26 - is called app here we're going to
113:27 - basically we don't need this
113:29 - this is just going to be uh blank for
113:31 - now but we could we're going to have two
113:33 - pieces of information here we're going
113:34 - to have
113:35 - the channel id so this will be the id
113:37 - that you of the channel that you're in
113:39 - so in the beginning it starts off as no
113:40 - and we're also going to have the channel
113:42 - name
113:42 - and in the beginning that's no right now
113:45 - in here we're going to have something
113:47 - called set
113:48 - channel id um and then this will
113:51 - actually go ahead and set
113:52 - off some information we're gonna we
113:53 - don't need this one
113:55 - and this one will say set channel id
113:58 - oops
113:59 - set channel id
114:03 - and then here where we have select
114:06 - app it's not gonna be this it's going to
114:08 - be select i'm going to have two i'm
114:09 - going to have select channel id and
114:11 - select channel name
114:12 - because we have two selectors here to go
114:14 - ahead and get us the channel id and the
114:15 - channel names you see
114:16 - it goes inside that global onion layer
114:19 - and it goes inside the app layer of it
114:21 - so the store the state and it goes into
114:23 - the app layer and goes and gets the
114:24 - channel id
114:25 - goes into the app layer and gets the
114:27 - channel name and then we're exporting it
114:29 - so we save that
114:30 - go into store.js and then we go ahead
114:32 - and import it
114:34 - like so we basically go ahead and
114:37 - we just go ahead and change this the app
114:39 - slice
114:40 - there we go and it's literally that easy
114:42 - to connect it right now you see
114:44 - the app isn't freaking out everything's
114:46 - good now if i go ahead and inspect it
114:47 - so if you go ahead and grab the redux
114:50 - dev tools
114:51 - you can actually go ahead and check the
114:53 - state so let's go into the state now you
114:54 - can see look the user states set up
114:56 - so inside the user slice remember like i
114:58 - said we have these two
115:00 - app slice and user slice so we have the
115:02 - app slice
115:03 - and the user slice the app size has the
115:04 - channel id channel name
115:06 - the user size has the user right um so
115:09 - this is going to be really really handy
115:11 - um to go ahead and do it and this will
115:13 - actually handle the sort of persistence
115:15 - all that stuff and it'll do everything
115:16 - for us
115:20 - so with that said now what we're gonna
115:22 - do
115:23 - is we're gonna have it so that um
115:27 - so we now have our store essentially set
115:29 - up okay but what i need to do now is
115:31 - create a login
115:32 - okay so a login so what i want to do is
115:35 - i actually need to pull the user
115:37 - at this point so just like we said here
115:39 - i'm going to pull it in
115:40 - at app.js so i'm going to basically go
115:42 - ahead and say
115:43 - give me the user
115:46 - at this point okay so give me the user
115:48 - now how do we do that we go into app.js
115:51 - and we basically go ahead and we do the
115:54 - following we say
115:57 - const user equals use
116:00 - selector so this is a special hook and
116:03 - we can import that from react redux
116:05 - and then basically what we do is we go
116:07 - ahead and remember in the
116:08 - uh user slice we created the select user
116:11 - hook
116:12 - a select user sorry uh selector it's
116:14 - called and this basically goes into
116:16 - that piece of state and goes ahead and
116:17 - grabs it okay so we basically go ahead
116:20 - and we can go ahead and say import
116:22 - the select user selector from sorry
116:26 - features
116:30 - use a slice like that okay and then what
116:33 - we do is we just pop it in here
116:35 - so we pop it in there and that will
116:36 - actually give us the user believe it or
116:38 - not
116:38 - okay so and then what we're gonna say is
116:41 - if there's a user now
116:42 - okay so if there is a user
116:46 - so for example if you're logged in then
116:49 - only then
116:50 - do we render the actual app so we need
116:52 - to
116:53 - if we do this it freaks out right
116:56 - actually because it says
116:57 - passing elements must be in a uh wrapped
117:00 - in an enclosing tag so in order to get
117:01 - around that what you can do is you can
117:03 - go ahead and do a fragment
117:05 - or a div whatever you want to do but
117:07 - this will go ahead and do that
117:09 - and then we have a ternary here so we
117:11 - can go ahead or test returnery operator
117:14 - [Music]
117:16 - so the redux what would be the
117:18 - difference from the context
117:19 - uh so the slices is one thing also the
117:21 - dev tools is much more maintainable
117:23 - plus you can have things like uh mid
117:26 - middleware and things like that so it's
117:28 - a lot more production
117:30 - you can add a lot more to redux it's
117:32 - been around for a long time it's the
117:33 - reason why it's not around for a lot
117:34 - longer
117:35 - and if we don't have it you're gonna say
117:36 - you need to log in right you need to log
117:39 - in
117:39 - and save so
117:43 - see right now we don't have a user so we
117:44 - need to log in okay so right now if we
117:46 - check the
117:48 - state so let's go to our redux
117:51 - and then we go to our state and user is
117:54 - no so that's why it's rendering
117:56 - you need to log in okay i understand it
117:58 - could be difficult in the beginning but
118:00 - don't worry
118:01 - i remember when i first saw redux i was
118:03 - like but it makes sense
118:05 - trust me just keep practicing it like
118:07 - anything you get used to this stuff and
118:09 - it makes a lot of sense
118:10 - now what i'm going to do is i'm going to
118:12 - create a login component now so i'm
118:14 - going to go here
118:15 - i'm going to create a new component so
118:18 - tomorrow's build uh we
118:20 - we might use redox yeah let's let's go
118:21 - ahead and do redux in tomorrow as well
118:22 - as well i mean redux
118:24 - in tomorrow's video may not be as
118:25 - necessary but i think we'll do that yeah
118:28 - so login.js
118:31 - all right rfce
118:35 - import
118:38 - login dot css boom go here
118:42 - class name equals login go down here h2
118:45 - i
118:46 - am the login page
118:51 - save it let's go back to our app
118:54 - and rather than rendering this i'm going
118:56 - to render the login page
118:59 - i'm going to go ahead and do control log
119:00 - login boom
119:02 - um somebody says melissa says just keep
119:04 - following the pattern with redux yes
119:06 - exactly so i would recommend you learn
119:08 - the react context api
119:10 - the pattern you then pick up on the sort
119:12 - of reducers and what the heck is a
119:13 - reducer in action and all that sort of
119:15 - stuff um
119:17 - but to give you a quick breakdown again
119:19 - um remember we have the apps and they
119:21 - follow
119:21 - sort of like a trees-like structure okay
119:24 - now this prevents a problem called prop
119:26 - drilling when we introduce something
119:27 - like a data layer
119:28 - or like redux you don't want to have
119:30 - prop drilling okay that's where you
119:31 - basically pass your props from one
119:33 - component to another
119:34 - you don't want this okay so you don't
119:36 - want that
119:38 - so what we can do then is we introduce
119:40 - something like redux and then you have
119:42 - different slices inside so you have the
119:43 - app size the user slice
119:45 - this will contain generic information
119:46 - about the app the user will slice will
119:49 - only contain information by the user if
119:50 - you had like a
119:50 - e-commerce app you would basically have
119:52 - stuff like the basket slice and things
119:55 - like that you know
119:56 - and what you can do is that any
119:57 - component you can push in via an action
120:00 - into that slice right and then in any
120:03 - component you can use a selector
120:04 - to go ahead and grab information from
120:06 - the slice
120:07 - right so that's what we're doing so here
120:10 - now inside logging.js it says cannot
120:11 - resolve login css so i'm going to go
120:13 - ahead and create login.css
120:15 - boom save it and here we go it says i'm
120:18 - logging page so good
120:20 - everything's good at that point so i'm
120:21 - going to go ahead and remove the comment
120:22 - for now
120:23 - and then what we want to do inside of
120:26 - our login component
120:27 - what i'm going to do it's going to be
120:28 - very simple logan come on
120:31 - we're going to have a div which says
120:32 - login logo
120:35 - and this div is basically just going to
120:37 - have an image tag
120:39 - inside of it right now i have the
120:41 - discord logo
120:42 - image here so i'm just going to go ahead
120:45 - and paste that in
120:46 - it's just a simple one i got from google
120:48 - and then i have a button
120:49 - right and the button is simple it's just
120:52 - going to be a
120:52 - button it's going to be a material ui
120:54 - button
120:56 - so that's why we use capital b and then
120:58 - it's going to have an on click
121:00 - oops and it's going to say sign in sorry
121:03 - and then here it's going to have an on
121:05 - click which is called
121:07 - sign in right so we need to create that
121:09 - function
121:11 - and then um we're gonna go ahead and say
121:15 - const sign in
121:18 - and this takes an event um but i mean at
121:22 - this point we don't really care about
121:23 - the event because it's just one button
121:24 - click
121:25 - so we don't even need that and then here
121:27 - we can actually go ahead and do the sort
121:29 - of do
121:30 - clever log google login
121:33 - cheers right this is where all the magic
121:35 - sort of happens okay
121:37 - uh oops i didn't get rid of that comment
121:38 - okay uh thank you so much ritik saying
121:41 - uh love you bro bro appreciate that dude
121:43 - um so now
121:44 - what we're gonna do is we go ahead and
121:46 - import the button so material ui
121:48 - just like that and put the button then
121:50 - we have the button here okay so i'm
121:52 - going to go ahead and style this to make
121:53 - this look a bit better before we go
121:54 - ahead any further so
121:56 - let's go ahead and go to our login.css
121:59 - right so login.css and then here what
122:01 - i'm going to do
122:02 - is go to login.css and
122:06 - i'm going to drop this underneath like
122:07 - we do before because it's always easier
122:09 - for you guys to see this
122:11 - and here i'm going to say login okay now
122:13 - for the login i'm going to say display
122:14 - grid
122:15 - um sorry not display yeah it's display
122:17 - grid it's a very neat trick by the way
122:19 - say place items center it's a very very
122:23 - nice trick
122:24 - save it and there you go okay then i'm
122:27 - going to say height
122:28 - of 100 view height and width of 100
122:36 - 100 and this will actually go ahead and
122:38 - center everything in the middle of the
122:39 - page
122:40 - so it does a neat little trick okay um
122:43 - and then what we're going to do is we're
122:44 - going to target the button
122:46 - and i'm going to say targeting the
122:48 - button say width of 300 pixels the
122:50 - background color is discord color
122:52 - the color is white the font weight is
122:53 - 80. but you see when i hover over it
122:56 - comes to default white which we don't
122:57 - really want that okay
122:58 - it's going to be super confusing i'm
122:59 - just gonna make myself smaller for you
123:01 - guys to see that a bit easier
123:03 - because i think i'm getting in the way
123:05 - there we go
123:06 - and then what i'm gonna do is i'm gonna
123:07 - make sure when we hover over it inverts
123:09 - in some way
123:10 - so i'm gonna say when we hover over the
123:12 - button change the background color to
123:14 - back and then the button to that text
123:16 - you see and then it goes like this which
123:17 - is a bit more of a nicer user experience
123:19 - you change that to whatever color you
123:20 - want really to be honest
123:23 - okay then what i'm going to say is
123:26 - i'm going to go ahead and target the
123:28 - inner div which is the login logo
123:30 - display flex flex direction column and
123:32 - then i'm going to target the inner dev
123:34 - image uh we don't actually need that
123:37 - line
123:38 - yeah image i'm going to say object fit
123:40 - contain
123:41 - which basically keeps the aspect ratio
123:43 - right
123:44 - and then we're going to go ahead and say
123:45 - height of 150 pixels so now we get this
123:47 - beautiful design okay
123:49 - now that's the styling bit done okay so
123:52 - smash the thumbs up button
123:53 - if you're enjoying this because we're
123:54 - about to i'm about to teach you guys
123:57 - how we introduce google login okay
124:03 - oh man you get
124:06 - yeah well thirsty when you're talking at
124:09 - that speed
124:10 - right now what we're gonna do
124:13 - is we're gonna go ahead and
124:17 - do the following so
124:21 - yeah now what we're going to say
124:24 - is i need to import auth so let's go
124:27 - back
124:28 - yeah i'm going to import auth but i'm
124:31 - not going to import it like this
124:32 - i'm going to import for my local
124:34 - firebase right
124:36 - so i'm gonna go here and i'm gonna go
124:40 - ahead and say
124:40 - import auth from local firebase and then
124:43 - because we already set everything up for
124:45 - that
124:45 - okay and then we're gonna go ahead and
124:48 - say
124:49 - uh aus dot
124:52 - sign in with pop-up sign in with pop-up
124:56 - and here we need to import the provider
124:59 - as well so i
125:00 - export that earlier so i'm going to say
125:02 - export import provider
125:04 - sign in with the provider okay and then
125:07 - all i need to do here
125:08 - is just say catch right i don't care
125:10 - about when it succeeds and i'll show you
125:12 - why
125:12 - yeah i'm gonna say and catch the error
125:14 - if there is an error and
125:17 - do an alert and i'm gonna say show me
125:18 - the error message if there is an error
125:20 - message
125:21 - right now that might seem like
125:25 - whoa whoa whoa like something can't be
125:28 - that easy man
125:29 - like it just can't be that easy if i
125:31 - click sign in
125:33 - whoa check this out
125:37 - everything loads dude so you need to
125:39 - make sure that you actually went ahead
125:41 - and
125:41 - enabled it in here otherwise it would
125:44 - freak out at this point
125:45 - but for example i'm going to show you
125:46 - guys an error so if i click another sign
125:48 - in
125:48 - box or if i close it early you see it
125:51 - says the operation has been cancelled
125:53 - due to another conflicting open window
125:55 - and it pop-up has been closed by the
125:56 - user before finalizing the operation so
125:58 - you see
125:58 - it caught the error and it just showed
126:00 - the alert right which is what i wanted
126:02 - but if i go ahead and sign in
126:06 - say if i sign in it will redirect back
126:09 - to my app
126:10 - and you see nothing happened right but
126:13 - i'm going to show you guys a little
126:14 - trick
126:15 - now okay so this is where the sort of
126:17 - really nice kind of listening
126:18 - persistence and all that stuff comes in
126:20 - so if we go back to app.js
126:23 - okay so let's go back to app.js and
126:25 - let's go here
126:26 - and now what i'm going to do is inside
126:29 - of app.js i'm going to use a use effect
126:30 - hook
126:32 - so use a fact hook is a piece of code
126:33 - that runs once when the component
126:35 - loads if you do this otherwise it will
126:37 - run
126:38 - with any sort of dependency here so if i
126:40 - put user in here every time the user
126:42 - change it would change it would fire
126:43 - this code off again
126:44 - but if i don't add anything here it just
126:46 - runs once you need to have this here
126:48 - though
126:48 - otherwise it kind of goes in the
126:50 - infinite loop okay then what we're going
126:52 - to say is again i'm going to import aus
126:56 - so import from my local
126:59 - firebase i'm going to say or on auth
127:02 - state changed so this is like a listener
127:05 - right
127:05 - so what this does is it says every time
127:08 - the user logs in
127:09 - it will basically go ahead and get the
127:12 - the the user so anytime the
127:13 - authentication state changes
127:15 - we just want to listen to them we say if
127:16 - there's an author can if there's a user
127:20 - oops if there's a user then what we say
127:23 - is
127:24 - we want to log the user in right so then
127:26 - we'll say
127:27 - the user is logged in right
127:30 - else uh
127:34 - the user is logged o
127:37 - right now previously what we did inside
127:39 - of our redux source if we got to the app
127:41 - slice
127:42 - we sorry the user slice we created a
127:45 - login and a logout action
127:47 - right the first one went ahead and set
127:48 - the user to whatever the oops
127:50 - set the user to whatever the user
127:52 - payload was and the second one just
127:54 - resets the user to no so that way
127:55 - it resembles the user's not logged in
127:58 - but what we can do now
127:59 - is we can actually go back to our app.js
128:02 - we can pull in those values okay
128:04 - so what we need is first we need a
128:05 - dispatch so dispatch allows us to do the
128:07 - following allows us to shoot things into
128:09 - the data layer
128:10 - right so we need to get the dispatch and
128:12 - what we say is const dispatch equals use
128:14 - dispatch we use a special hook called
128:16 - use dispatch
128:17 - we need to import this from
128:20 - here from react redux okay so that gives
128:23 - us the dispatch of the sort of gun
128:24 - to shoot into the data and then what
128:27 - we're going to say
128:29 - is what if there's an authentication
128:31 - user so i'm just going to prove to you
128:32 - guys i'm not lying
128:34 - right so i'm going to say user is and
128:36 - i'm going to say auth
128:37 - user and if i go ahead and inspect
128:40 - right let's go to our console make this
128:43 - a bit bigger because i can't see
128:44 - anything
128:44 - so you see it says the user is right and
128:47 - it actually has all my details it says
128:48 - user is sunny sanger
128:50 - and things like that so everything comes
128:52 - up okay
128:53 - now if i was to log out for example or
128:56 - things like that i'll show you guys how
128:57 - we do that
128:58 - but now you see it's persisting so even
129:00 - if i refresh
129:01 - as soon as i come back the user's logged
129:03 - in right so the user's still there
129:06 - all right so how do we push this into
129:07 - our redux store
129:09 - so that way we can use it and determine
129:11 - like what to render on the screen
129:12 - so here what i say is i say dispatch and
129:15 - then what i need to do is i say dispatch
129:17 - login action and the payload for the
129:20 - login action
129:21 - all i'm going to do here is i'm just
129:22 - going to set some of the user details so
129:24 - i'm going to set
129:25 - a user id and this is going to be the
129:27 - auth user
129:29 - dot and then you can see here we've
129:31 - actually got all the stuff here so the
129:32 - uid
129:34 - is this one here so i'm going to say
129:35 - auto user.uid i'm going to get the photo
129:39 - so auth user dot photo
129:42 - url and then i'm also going to get the
129:46 - email
129:47 - which is auth user dot email
129:51 - so as you can see this here and then
129:53 - this is another good reason about
129:54 - console logging things out okay
129:56 - uh hey my girlfriend's back in the chat
129:59 - there she is go ahead and follow her
130:01 - guys um
130:03 - and then what we're going to do is we
130:05 - have the display name
130:06 - right so display name is oops display
130:09 - name is the auth user dot display name
130:13 - okay save it and now what's going to
130:16 - happen
130:16 - is where is it freaking out 9 20. log in
130:19 - yes so my action
130:20 - we didn't actually import any actions
130:22 - okay so i need to go ahead and go here
130:24 - and i just say import
130:27 - login action and the set user action
130:30 - uh sorry no no no i mean the login
130:32 - action um
130:35 - and the logout action from
130:39 - features forward slash user slice
130:42 - okay and you can see now it stops
130:44 - freaking out hey look at that
130:47 - so as soon as i log in what it does is
130:48 - it checks if i'm logged in
130:50 - and then they dispatch the login so to
130:52 - check that this actually worked
130:54 - oops i've got that stuck on the screen
130:56 - uh
130:57 - um hey she's mama react now
131:01 - that's that dude um so what i'm going to
131:04 - do now is i'm going to inspect right
131:05 - and like those i'm going to go to the
131:07 - dev tools so redox and then
131:09 - you guys can see look the user slice
131:12 - login action was fired
131:13 - and you can see the difference was is
131:15 - that it changed the user
131:16 - right so if we go to our state we go
131:19 - inside the user
131:20 - now i can see that we've got this
131:22 - information about the user
131:24 - right so again i'm in the way so i'm
131:26 - going to go ahead and just move myself
131:28 - over here so you can see now i've got
131:30 - the user id the photo the email and the
131:32 - display name
131:32 - so what we can do is we can pull this in
131:34 - any other component and use it as we
131:36 - need to okay
131:37 - which makes it super super useful in the
131:39 - in in what we need to do
131:41 - so what we do now is
131:44 - we can and then why why actually things
131:45 - really cool is you can check the action
131:47 - payload to see what was fired off
131:49 - right so in case something's not working
131:51 - it's actually a really really powerful
131:52 - debugging tool
131:54 - okay so um
131:58 - you can also rewind your app guys so
132:00 - this is insane
132:01 - so like say if i go back here and i
132:04 - click on
132:07 - skip see that so now if i skip that
132:09 - action
132:10 - and the user wasn't logged in if i
132:12 - basically this is what happened when the
132:13 - user wasn't logged in
132:15 - and if i don't skip it the user's logged
132:16 - in so it shows you like things like to
132:18 - that level which is really good right
132:20 - um then what we're going to do is
132:25 - we're going to go ahead and say if the
132:26 - user wasn't there right so if we
132:28 - basically like
132:30 - if if for any reason they logged out i'm
132:32 - going to say dispatch a logout action
132:34 - right and that's pretty much what we
132:36 - need to do literally that
132:37 - right and then inside of the app slice
132:40 - uh again
132:40 - user slice you can see the logout
132:43 - basically just sets the user to know
132:44 - okay but how do we log out right you're
132:47 - probably thinking it's going to be crazy
132:48 - um so nagesh says the poor has been set
132:50 - to 3002 i had two other pro
132:52 - programs running that's why uh otherwise
132:54 - for you guys it'll be 3000 so
132:56 - don't worry uh going back to this what
132:59 - we're going to do is we're going to go
133:00 - back to our app because this is
133:02 - actually this one here yeah and then
133:05 - what i'm going to say is
133:06 - um we do actually need to
133:10 - introduce so inside of our app.js
133:14 - right if i go ahead and check our
133:15 - terminal
133:17 - this one it says you're forgotten the
133:20 - dispatch dependency okay
133:22 - so here i need to include the dispatch
133:24 - because dispatch is a dependency here
133:25 - and there we go everything's green so
133:27 - don't ignore those messages guys they
133:28 - actually are there for a reason
133:30 - um what i need to now do is
133:33 - basically go ahead and i'm gonna have it
133:36 - so when i click this picture over here
133:38 - it should log me out all right so let's
133:40 - go ahead and let's go to sidebar
133:42 - i'm to go to the avatar so avatar is
133:44 - down here
133:45 - and firstly guys i want to use my actual
133:47 - avatar information so i'm going to go to
133:49 - sidebar
133:50 - i'm going to go ahead and use a selector
133:51 - to pull the information from the data
133:53 - layer so just like this
133:54 - we're going to go ahead we pushed in at
133:56 - this point when we logged in and then
133:58 - so we pushed in at this point oops when
134:00 - we logged in
134:01 - and i'm going to go ahead and pull in at
134:03 - the sidebar so wherever the sidebar is
134:06 - okay so here i'm going to go ahead and
134:08 - say
134:09 - const use select oops use selector
134:13 - uh import from react redux like this i'm
134:15 - going to import select user as well
134:18 - from the features user size save it go
134:21 - back
134:22 - and then what i'm going to do is i'm
134:23 - also going to get the um no i'm good
134:26 - we're good so now what i'm going to do
134:28 - is go back to our avatar
134:30 - and i'm going to say the source is the
134:32 - user.photo
134:34 - okay so here we should see so that this
134:36 - is the one i set manually
134:38 - and my google picture should come up now
134:39 - so if i go here and i say user.photo
134:43 - and we save it boom
134:46 - it went ahead and grabbed my my actual
134:49 - uh google picture
134:50 - okay so that's pretty sick everything
134:53 - works as we expected
134:54 - it too now i also want to have you my
134:55 - display name come up so right now we've
134:57 - got the manual instagram tag over here
134:59 - and we've got my id
135:00 - so instead of this i'm going to go ahead
135:01 - and use my actual user id
135:04 - so i'm going to go ahead and say
135:07 - user dot display name
135:11 - user dot display name save it
135:15 - and we should see sunny sanger comes up
135:17 - now okay and also for the id what i'm
135:19 - going to do is i'm going to say user.uid
135:21 - so that's the user id and then i only
135:23 - want the first i'm going to make a
135:24 - substring of it so if i
135:25 - use the full user id it's kind of long
135:28 - right you get this huge one so i'm just
135:29 - going to say
135:30 - substring because i saw like in discord
135:33 - you get like
135:34 - once say grab the zero to the fifth
135:36 - element
135:38 - and then boom we get that and if i go
135:39 - ahead and add a hashtag in front of it
135:42 - now it's looking bit discordy right so
135:44 - that's gonna be unique for you
135:47 - and it's gonna work okay so we're gonna
135:49 - substring it to five characters
135:50 - and now for the on click so for the
135:52 - avatar this is how simple it is guys
135:55 - to go ahead and log out right so i'm
135:57 - gonna go ahead and do it anonymous
135:58 - function and i'm gonna say auth
136:00 - and then remember we need to import the
136:01 - auth so i'm gonna auto import it from my
136:03 - local firebase
136:05 - and i'm going to go back down here and
136:06 - i'm going to say when i do it i'm going
136:08 - to
136:08 - say auth dot sign out
136:11 - right and that's it and now what this
136:13 - will do is
136:14 - this will sign you out on google side
136:17 - right
136:18 - and then it will trigger off the
136:20 - listener that we have listening over
136:21 - here
136:22 - so i don't need the console log and then
136:23 - if there isn't so there wouldn't be a
136:26 - a user anymore so it will dispatch the
136:28 - logout which means that redux
136:30 - will go ahead and basically cancel out
136:32 - the user inside of our user slice
136:34 - right so let's go ahead and save it
136:36 - refresh and if i click this
136:39 - boom logged out and it actually logged
136:42 - me out
136:43 - right so if i go ahead and check my
136:45 - redux dev tools
136:46 - go down here now you can see look i
136:48 - logged in and logged out
136:50 - set the user back to no okay so let's go
136:53 - back and
136:54 - click sign in and i want you guys to pay
136:56 - close attention
136:57 - to this part over here okay so over
137:00 - over here sorry so as soon as i click
137:02 - sunny watch how it dispatches the log in
137:04 - action
137:06 - hey and then it basically then the front
137:08 - end reacted because of it
137:10 - so that's dope okay that works really
137:12 - nice
137:13 - and everything's good okay the next
137:15 - thing i'm going to do is actually add
137:16 - the channel functionality
137:18 - so now we have all this working so i'm
137:19 - going to add the channel functionality
137:21 - so i'm going to go to sidebar.js
137:25 - and here what i'm going to do now is go
137:26 - to cybor.js
137:29 - and what i'm going to do is right now
137:33 - i'm going to create a piece of state
137:35 - right
137:36 - and we're going to have we're going to
137:37 - assume that we have oh
137:39 - guys we're at 933 likes let's make it a
137:42 - thousand likes
137:43 - that'll be a banger start to these
137:46 - videos again
137:47 - so i'm going to create a piece of state
137:48 - called channels and this is going to be
137:50 - set
137:50 - channels and i'm going to say use state
137:52 - so we're using the ustay hook
137:55 - auto import from react and this is going
137:56 - to be an array by default it's going to
137:58 - start with an empty array
138:00 - i'm going to have a use effect which
138:01 - fires off when the component loads okay
138:04 - and this will fire off once and the main
138:05 - purpose of this use effect
138:08 - make sure you import the use effect as
138:09 - well so this runs once
138:11 - hence the nc empty dependencies okay um
138:15 - i'm going to basically go into my db so
138:16 - i need to go ahead and import my db
138:18 - so remember this is the default export
138:21 - and then i'm going to go ahead and say
138:22 - db.collection
138:24 - i'm going to go to the channels
138:25 - collection inside my database so right
138:27 - now inside my database
138:28 - i have nothing but i'm going to
138:30 - eventually have this
138:32 - so this is my finished product which i
138:33 - had before so we have the channels
138:35 - collection
138:36 - all the different channels so in this
138:37 - case we have five channels so which is
138:39 - why you could see it before
138:40 - five channels and then inside of each
138:42 - channel i have a message collection
138:44 - with all the messages and if i click
138:46 - that you have the message
138:47 - are you guys ready to be a discord clone
138:50 - see you guys ready to go disco clone
138:52 - with the user's information over here
138:54 - right so we're going to go ahead and
138:56 - build that right now
138:57 - um and exactly yeah don't rush guys
138:59 - honestly so i really like this comment
139:01 - don't rush you're going to be a dope
139:02 - developer yes you guys are going to be
139:04 - amazing developers
139:05 - this is all recorded so you can pretty
139:07 - much go at your own pace slow it down
139:09 - pause you know like you can do all of
139:10 - that stuff at your own pace do not freak
139:12 - out if it's going fast okay
139:14 - don't freak out that's why it's recorded
139:16 - so you guys can pretty much play at your
139:17 - own pace
139:18 - so let's go back and check it out so
139:21 - go back to our database which is empty
139:23 - but i'm going to go ahead and say that
139:24 - there was a channels
139:26 - collection then on snapshot means that
139:28 - if anything ever changes so if we ever
139:31 - added a channel in or something like
139:32 - that in real time
139:34 - right so real time like no joke real
139:37 - time it's gonna pretty much go ahead and
139:38 - update it right so this is actually
139:40 - like crazy stuff which happens when this
139:42 - hap when it does this
139:44 - so i'm gonna go ahead and do set
139:46 - channels
139:47 - now this is a bit of a mouthful this
139:49 - piece right so we're going to update the
139:50 - state
139:51 - whenever the the database channels
139:55 - changes so if we add a channel
139:56 - any point it goes ahead and updates all
139:58 - of this stuff so to do that we say
140:00 - snapshot.docs and i would recommend you
140:02 - watch
140:03 - some of the other builds if you don't
140:04 - understand this bit of code
140:06 - and we also have a youtube video which
140:08 - explains the snapshot functionality so
140:10 - go ahead and check that out um but here
140:12 - i'm going to basically go ahead and say
140:13 - for each
140:14 - doc i'm going to go ahead and return an
140:16 - object
140:17 - right so i'm going to go ahead and
140:18 - return the object now this object is
140:20 - going to have an id which is going to be
140:21 - the document
140:22 - id so the document id is this id
140:26 - over here so this one over here so you
140:29 - see these document
140:29 - ids right and then what i'm going to do
140:33 - is i'm going to say the channel is going
140:36 - to come back and it's going to be the
140:37 - document data
140:39 - and the document data for the channel
140:41 - would be the channel name
140:42 - okay so this is the data this is the
140:44 - document id
140:45 - right so we're basically just getting it
140:47 - back and this means
140:49 - that if we add stuff inside it will
140:51 - basically go ahead and pull it as
140:53 - appropriate
140:53 - right so with that said what we can do
140:56 - now
140:57 - is we can go back to our code
141:01 - and we can pretty much render right now
141:04 - we're rendering
141:08 - um right now we're rendering the sidebar
141:10 - channels we're rendering four over here
141:12 - by default okay
141:13 - i want to have it so that we say
141:14 - channels.map map through every single
141:16 - channel
141:17 - and return the sidebar channel
141:21 - over here right so if we have none it
141:24 - will show none okay
141:26 - awesome that's good all right so now it
141:29 - should only show things which are in the
141:30 - db so right now there should be none
141:32 - but we're going to add something right
141:34 - so i'm going to have it so that whenever
141:36 - i click this button
141:38 - this plus button so when i click the on
141:40 - click
141:41 - on the plus button i want to basically
141:43 - do handle
141:45 - add channel i'm going to fire off a
141:48 - function called handle add channel so
141:49 - i'm going to go down here and say const
141:51 - handle add channel it's going to be a
141:55 - arrow function here we're going to say
141:57 - const channel name so i'm going to get
141:59 - the channel name
142:00 - by prompting the user right so i'm going
142:02 - to say enter
142:04 - a new channel name save it
142:09 - and then if i click this now oh enter a
142:11 - new channel name
142:12 - nice okay and then i'm going to say if
142:15 - the user didn't or
142:16 - enter a channel name because we want to
142:17 - protect against undefined error
142:20 - then i'm going to say go inside the db
142:22 - go inside the
142:23 - channels collection right
142:26 - and just add the channel right so add
142:30 - an object where the channel name
142:34 - is the channel name that we passed in
142:37 - here
142:38 - and there's also an esx shorthand for
142:40 - this you could do that but
142:41 - i'm not gonna do that today because it
142:42 - might confuse some people okay
142:44 - um also we're at 950 likes let's go guys
142:48 - push it to a thousand come on and um
142:52 - handle add channel right so with that
142:55 - said now
142:56 - we've we've hooked everything up so what
142:58 - we should be doing is when i click that
143:00 - button
143:00 - after i enter some stuff in here i'm
143:03 - gonna click cancel for now but if i
143:04 - click okay
143:05 - it should push into the channels db
143:07 - collection that means that it will fire
143:09 - off the use effect listener over here
143:11 - right so this should
143:12 - this is set up to listen so that
143:13 - whenever the channels
143:15 - changes it will fire off a snapshot and
143:17 - it updates the channels
143:19 - right so that means that the channel
143:20 - should come up here straight away
143:21 - afterwards
143:22 - so if i go ahead and do youtube
143:25 - i think if this works you should smash
143:29 - the thumbs up button
143:30 - okay so 10 so i'm going to go ahead
143:33 - and click on youtube
143:34 - and it should pop up here okay
143:38 - hey look at that everything worked as
143:42 - you expected it too
143:43 - so that's pretty sick that's pretty sick
143:45 - all right so everything worked really
143:46 - nice
143:47 - let's go ahead and do another one let's
143:49 - go ahead and say
143:50 - uh discord let's just say cp discord
143:55 - boom oh okay but do you see
143:58 - so it added it but remember that it's
144:00 - not being passed through with the
144:02 - correct
144:03 - name right so youtube is like a
144:05 - hard-coded name
144:06 - now that makes sense because we didn't
144:08 - actually change that down here
144:10 - okay so if we go down here to where we
144:13 - actually render it out
144:15 - sidebar channel here we need to actually
144:17 - pass it down
144:18 - right so here what i'm going to do is
144:20 - the channel
144:21 - breaks down i'm going to destructure and
144:23 - say get the id in the channel
144:25 - at this point okay in the id and channel
144:28 - at this point
144:29 - and then yes i can see the numbers
144:31 - getting nearer to a thousand let's go
144:33 - guys
144:34 - and then i'm going to say make the key
144:36 - for this the id
144:38 - also pass the id as a prop and also pass
144:41 - the channel
144:42 - as a prop uh i'm actually gonna actually
144:44 - know i'm not gonna pass it
144:45 - entirely i'm gonna pass the channel name
144:47 - as a prop i'm gonna say the channel
144:51 - dot channel name because remember inside
144:53 - of our db
144:54 - is channel dot channel name
144:57 - save it and now what i can do is inside
145:00 - the sidebar channel
145:02 - we get the channel name and the id right
145:05 - the key is for rendering performance
145:07 - and then what i can do here is i can say
145:08 - instead of rendering youtube every time
145:10 - render the channel name uh click it
145:14 - and boom cp discord
145:17 - that's though right thank you so much
145:20 - for the kind words eli you came along
145:22 - because you guys are really trying thank
145:23 - you for all the pre
145:25 - and we appreciate all your effort
145:26 - amazing stuff dude and thank you for the
145:28 - greatest ever so
145:30 - amazing stuff right um
145:33 - uh and what we're gonna do now
145:36 - is we're going to go ahead and
145:40 - do okay so
145:44 - now we're going to go ahead and make it
145:45 - so that when i click this right
145:48 - i want to update the redux store
145:52 - to the inside the app size i want to
145:53 - basically keep track of which one we're
145:54 - in so that way
145:55 - so if i click this you see it changes
145:57 - which which room i'm in
145:59 - and then this triggers off like the
146:00 - correct loading for everything right
146:03 - um awesome man thank you so much calvin
146:06 - again
146:06 - dude he goes coming in hot with the 5
146:09 - donation he says yay by the way do you
146:11 - how do i get the sound effects that you
146:12 - guys use they're cool
146:14 - so i actually use something called a
146:15 - rode caster pro
146:17 - it's like this big device i'll take a
146:19 - picture on my uh on my snapchat but
146:21 - i've got all these hot keys on there so
146:23 - i can pretty much go ahead and like if
146:24 - you want to get real tense
146:25 - i could be like oh
146:29 - you know like it can get really tense
146:32 - right
146:33 - like really quick and then if you want
146:36 - to get like really sentimental
146:38 - you can go ahead and do that or if you
146:41 - want to get hyped up
146:42 - you can go ahead and do that right like
146:44 - you do loads of stuff with this thing
146:45 - and i've got like the the volume levels
146:47 - and stuff here
146:48 - um so that's actually how i do that um
146:51 - it's through a road caster pro
146:53 - um but yeah you can learn you can do it
146:56 - different ways but right now i
146:58 - pretty much have this queued up when
146:59 - we're listening to music but yeah that's
147:01 - how i do that
147:02 - um oh we're almost at a thousand likes
147:05 - let's go guys um so now we pretty much
147:09 - get this bit
147:09 - up and running right so we want it so
147:11 - when i click this it changes the store
147:13 - right so what i'm gonna do now is inside
147:15 - of sidebar channel
147:17 - i'm going to go ahead and pull in my
147:19 - dispatch because i need to update redux
147:22 - so i'm going to go ahead and say const
147:23 - dispatch equals use dispatch
147:26 - go ahead and pull that in from redux
147:27 - react redux there we go
147:29 - and then what i'm going to say is on
147:32 - click
147:33 - of the div so here on click
147:37 - i'm going to go ahead and save
147:40 - set channel id so i'm going to import
147:43 - that
147:44 - action from app slice um because
147:46 - remember in app slice what i did is i
147:48 - had a
147:48 - an action over here and we're going to
147:51 - update what this actually does in a sec
147:53 - i actually would do it now so here i'm
147:55 - not going to have this but instead i'm
147:56 - going to have
147:58 - [Music]
147:59 - i'm going to have the following
148:03 - so i'm actually going to pass in two
148:04 - things i'm going to change it's not
148:05 - actually set channel idea set channel
148:07 - info
148:08 - and i'm going to say state.channel id
148:11 - equals action.payload.channel id
148:13 - state.channel name because
148:15 - action.payload.channel name okay
148:17 - and the way that we do that is we go
148:19 - back to our
148:20 - the thing that i was in so where was i
148:23 - i was inside of this sidebar
148:27 - starting to go crazy all right let's
148:29 - hide the sidebar no
148:30 - i'm inside the sidebar channel here we
148:32 - go and then what i'm going to do is it's
148:34 - not set beside my channel i set side by
148:35 - info now
148:38 - all right so there's this one
148:42 - and then i'm gonna save it and now it
148:45 - says it's not exported from the app
148:46 - slice so let's go back into app slice
148:48 - oh yeah we need to change this to set
148:50 - channel info
148:51 - and we'll go back to start by channel
148:54 - here we go
148:55 - and on click it's going to fire off an
148:57 - arrow function
148:59 - and this one is going to go ahead and
149:00 - say um
149:02 - it's going to dispatch
149:06 - dispatch set channel info and as the
149:09 - payload
149:11 - i'm gonna pass in the channel id
149:14 - right with the key id uh with that key
149:17 - channel id sorry the value id
149:19 - and then i'm gonna go ahead and say
149:22 - um channel name
149:26 - is the channel name that we passed in as
149:28 - a prop
149:29 - so if we go ahead and do that now
149:32 - if i go ahead and check my redux
149:33 - inspector go over here go to redux
149:37 - and now we should see if i click this
149:38 - set channel info you see that it set the
149:40 - info to the
149:41 - that channel id and cp discord if i
149:43 - click this one
149:45 - i set it to youtube and it changed the
149:46 - channel id to that one
149:48 - now these channel ids line up to the
149:49 - ones that are in the db so it knows
149:51 - which messages to then pull
149:53 - and we can also use the these values in
149:55 - rendering the correct things okay
149:57 - so that's dope so now what i can do is
150:00 - go into app slice
150:02 - and i've got the selectors appropriate
150:04 - so i need i can use those
150:05 - for example here so let's go into the
150:08 - header
150:08 - component and rather than chest test
150:11 - channel
150:12 - name um thank you so much nicholas on
150:15 - facebook he says this is awesome sunny
150:17 - appreciate that dude nagesh goes only 16
150:19 - left for
150:20 - um the 1k whereas it deserves one i
150:23 - think it's one million or one trillion
150:24 - likes
150:25 - uh thank you so much dude i want me okay
150:27 - nice um
150:29 - uh my motivation as an idea of going
150:31 - back to my old work
150:32 - i i think that's a good thing let's
150:35 - carry on guys so
150:37 - right now rather than the test channel
150:38 - name what i'm going to go ahead and do
150:40 - is pull up my chat header over here and
150:42 - i'm going to basically go ahead and
150:45 - uh why do we render chat header it's
150:46 - inside of the
150:49 - chat.js right so inside of chat.js what
150:54 - i'm going to do
150:55 - is i'm going to pull the channel id
151:00 - the user and the uh channel name
151:04 - right so i'm going to do it in order so
151:05 - it's most confusing so here
151:07 - and what i'm going to do is i'm going to
151:08 - import the use selector from react redux
151:10 - i'm going to import the selectors so
151:12 - select channel id
151:15 - import this one and then i'm going to go
151:18 - ahead and say select user i'm going to
151:20 - import that as well
151:22 - there we go and now i have the this
151:25 - information inside of here
151:26 - inside of chat header i'm going to pass
151:28 - the channel name
151:30 - as a prop so channel
151:33 - name as a prop and inside of chat header
151:36 - what i can do now
151:37 - is i can accept that as a prop so i can
151:39 - say get the channel name
151:41 - uh destructure it and then here i can
151:44 - say
151:48 - render the channel name and now if we go
151:50 - ahead and click cp discord youtube damn
151:53 - it works huh awesome stuff
151:56 - all right um hey bow down to you papa
152:01 - papariat thank you dude um and then
152:03 - jesus said i love you for your job
152:05 - appreciate you guys thank you so much
152:06 - seven likes away from a thousand likes
152:09 - damn guys appreciate you guys so much
152:12 - um okay so next now what we're gonna go
152:15 - ahead and do
152:17 - is you see like that works now okay we
152:19 - can add the channels we can sort of
152:20 - change the room now what i want to do is
152:22 - i want to make this a bit more smart
152:24 - so the next thing that we need to do is
152:26 - go into our chat.js
152:29 - and this is where i need to basically go
152:30 - ahead and
152:32 - um make it so firstly we need to collect
152:36 - the input
152:36 - so i need to be able to collect this
152:37 - stuff so in order to do that let's go
152:39 - into chat.js
152:41 - oh god when we're printing it's going to
152:44 - chat.js
152:45 - and um i'm going to create a piece of
152:49 - state
152:49 - called input right so it's going to be
152:52 - called input
152:52 - and i'm going to say set input use
152:56 - state and by default this is going to be
152:58 - blank string
152:59 - okay now to hook this up to the input
153:01 - field down below
153:03 - i'm going to go ahead and say value
153:05 - equals
153:06 - um oh guys
153:10 - we just hit a thousand likes let's go
153:13 - guys that is
153:14 - dope thank you so much guys for watching
153:18 - this
153:18 - we're not finished yet we're not
153:19 - finished yet but thank you so much for a
153:21 - thousand likes on this video
153:23 - the energy has been insane from you guys
153:26 - today
153:26 - um let's keep going strong let's keep
153:29 - going strong that is that's awesome guys
153:31 - a thousand likes that's what i'm talking
153:34 - about
153:35 - okay so uh and we have a compile error
153:39 - so you know you win and you lose but
153:41 - let's go ahead and carry on so at this
153:43 - point
153:44 - we're gonna go ahead and import use date
153:49 - uh let's jump back in
153:53 - so i'm gonna import use date and
153:57 - um so here i'm gonna
154:00 - map it to the input and i'm going to say
154:02 - on change every time i type in
154:04 - go ahead and capture so it fires off an
154:06 - event and set the input
154:08 - to e.target the value which basically
154:10 - goes ahead and gets the value that
154:11 - you're typing in
154:12 - so that means now we have this oh god
154:14 - not that one value
154:16 - sure there you go and then as i type in
154:19 - now
154:20 - boom it's stored in state as well okay
154:22 - so the goal here
154:23 - is that when i type in right and we also
154:26 - want to disable this
154:27 - if there is no messages i want to say
154:30 - disabled
154:31 - if you haven't selected a room so i
154:33 - don't want you to be able to enter in
154:34 - things if you haven't selected a room so
154:36 - disabled if you have
154:41 - let's go ahead and say disabled
154:44 - if there is no channel id there we go
154:48 - that should fix it and also do after the
154:49 - button just in case
154:51 - right so that means if you haven't
154:53 - selected something you see that i can't
154:54 - actually type anything in but as soon as
154:56 - i select the channel i can type
154:57 - something in dope
154:58 - and also for the input field the message
155:00 - here i can actually now go ahead and use
155:02 - the actual channel name so i can say
155:03 - channel
155:04 - name and then you see where it says test
155:06 - channel
155:07 - now it says no but if i click something
155:09 - cp discord there we go
155:11 - okay now for the messages we render out
155:13 - three dead messages here we don't want
155:15 - that
155:15 - right we want to have some messages so
155:17 - i'm going to say const messages
155:19 - set messages equals
155:24 - use state i'm gonna make it an array
155:27 - okay and then what i'm gonna do is here
155:31 - i'm gonna go ahead and say messages dot
155:33 - map
155:34 - so for every single message i wanna
155:37 - render out a message
155:39 - component right so now we should see no
155:42 - messages
155:43 - which is actually correct right but i
155:45 - want to populate this stuff so i want to
155:46 - say
155:48 - use effect and the use effect gets fired
155:52 - off
155:53 - it gets fired off once because we're
155:54 - going to have a listener and then we're
155:55 - going to say db
155:56 - auto import from our local firebase i
155:59 - say db.collection
156:01 - and what i want to do is go into the
156:03 - channels
156:04 - right but this is where we've got to be
156:07 - particular right so i want to go into
156:08 - the document
156:10 - which is this channel id because
156:12 - remember we have the channel id stored
156:13 - in redux
156:14 - i'm going to go into the collection of
156:15 - messages inside of that room
156:17 - inside of that channel right and then
156:20 - i'm going to go ahead and say dot and
156:21 - i'm going to say
156:22 - order by because we're going to add a
156:24 - timestamp
156:27 - order by timestamp and then we're going
156:29 - to say descending
156:30 - because i want the most recent things to
156:32 - come to the top i'm going to say get a
156:34 - snapshot so again real time
156:36 - i'm gonna say when we get that snapshot
156:38 - go ahead
156:39 - and do the following we'll say set
156:41 - messages
156:42 - to snapshot dot docs dot map
156:46 - for every single doc inside i just want
156:49 - the doc data i don't really care about
156:51 - anything else so i'm going to say doc
156:52 - data right so then we get this nice
156:53 - little kind of thing but you see it
156:55 - freaks out so we need to get say if
156:57 - there's a channel id then we do this
156:59 - otherwise protect
157:00 - right so we're kind of protecting
157:01 - against ourselves here
157:04 - monsters that's it boom works
157:07 - right so at this point everything's
157:09 - pretty good we pretty much have
157:10 - everything
157:12 - uh working um
157:15 - well kinda like we basically have this
157:18 - pulling in the messages
157:19 - but we can't see that it's actually
157:21 - doing anything right so i want to go
157:22 - ahead and say constant messages consent
157:24 - message equals e um
157:28 - we want to do an e dot prevent default
157:30 - because when we submit that form we
157:32 - don't want it to refresh the page
157:34 - and basically i need to connect this to
157:35 - that button so when we send the message
157:37 - remember like i said it's inside a form
157:39 - so when i hit enter on this field
157:42 - see right now it refreshes we don't want
157:43 - that so i'm going to say on click
157:47 - and i'm going to say send message
157:50 - but now we do e dot prevent default so
157:52 - if i do it now
157:55 - type in enter see it doesn't actually
157:57 - refresh which is good
157:59 - and then here what i'm going to say is
158:00 - db.collection message
158:03 - channels and then we go in again inside
158:06 - the room so we say channel id
158:07 - and then we say again go into the
158:09 - collection of messages
158:10 - and all we do here guys is we just add
158:14 - so we add an object inside and then here
158:17 - we say
158:18 - add a timestamp so first it will add the
158:19 - timestamp after but we say the message
158:22 - is the input right so it's the input of
158:24 - what you added i hate when it
158:26 - overlays it there we go message is the
158:27 - input and we can say user
158:29 - is our user that we pull in from our
158:31 - store okay the one that we logged in
158:33 - with
158:33 - and then i need a timestamp as well so i
158:35 - know when the user entered
158:36 - now for the timestamp what we do is we
158:39 - import firebase from the actual firebase
158:45 - oops from the local we say from firebase
158:47 - the one that's on the npm module
158:49 - and we do that and then what we do is we
158:52 - go down here we say
158:54 - timestamp oops
158:57 - times them and this one is firebase
158:59 - start firestore
159:01 - and then we say dot filled value dot
159:05 - server times server timestamp because we
159:07 - want to use a servers timestamp because
159:09 - that's going to be the same
159:10 - regardless if i'm in london if i'm in
159:12 - america or if i'm in anywhere else right
159:14 - it doesn't matter
159:16 - right so that will go ahead and do that
159:19 - now with that said we need to actually
159:22 - uh add a dependency here
159:24 - for this use effect the channel id is
159:26 - the dependency here
159:27 - because we use it here so we need to add
159:29 - that in that's very important don't
159:30 - forget that
159:32 - and then also here for the
159:36 - um we need to set the input to blank
159:40 - after you submit
159:41 - so you don't want to have this some text
159:43 - here okay so with that said if i go into
159:45 - cp discord and i say
159:47 - yo what's up guys
159:51 - enter you see i added the message but
159:54 - again
159:55 - right so now it's actually there but now
159:57 - our message needs to actually
159:58 - take in the correct props when we render
160:00 - it out so
160:02 - what we can do at this point is we can
160:03 - actually pass in the message stuff that
160:05 - we need
160:06 - so we're going to pass in three props
160:08 - and they're going to be as follows
160:10 - message timestamp message message and
160:13 - the message user
160:14 - and this is based on the values we put
160:16 - in here okay
160:17 - so we jump into our message we receive
160:19 - the props here so we can destructure
160:21 - them
160:21 - and we can get the timestamp
160:25 - the user and the message
160:28 - save it and now if we go into our
160:29 - message right
160:31 - now what we can do is the avatar source
160:33 - can be
160:34 - the the user
160:38 - dot photo right so this would be the
160:41 - user's photo from that value so if i go
160:43 - into cv
160:44 - discord now it's got my correct picture
160:46 - it's not my one it's the one that we
160:47 - actually sent the message with
160:48 - so if no matter what i'm logged in as it
160:50 - will be i will be showing that one
160:52 - now the here should be the user dot
160:54 - display name
160:57 - and then here this is a timestamp so
161:00 - this is where the interesting bit comes
161:01 - in
161:02 - so this one's a bit more tricky right
161:03 - we're going to say new
161:05 - date od and we're going to say timestamp
161:10 - dot and we say timezone could be there
161:13 - might not be there
161:14 - to date and then we say
161:18 - to i uh utc string
161:24 - all right so this will basically go
161:25 - ahead and pass the
161:27 - the weird timestamp we get back into the
161:29 - correct one so we go to cp discord
161:31 - and it says this is a message but the
161:33 - time stamps correct the name is correct
161:34 - but the message
161:36 - is the final part here i just say
161:37 - message
161:39 - and now cp discord
161:43 - boom and if i go ahead and say boom this
161:46 - just works
161:47 - look at that guys real time
161:51 - yeah and if i say wow this is
161:54 - dough so
161:58 - that's pretty cool right uh that works
162:00 - really really nice
162:01 - and i'm gonna deploy this in a second
162:03 - even if we're going to this channel and
162:04 - say
162:05 - the youtube channel
162:09 - oh works uh is this
162:22 - i'm gonna let you guys respond to that
162:26 - let me see all right but i think that's
162:28 - pretty dope
162:29 - all right so with that said i think
162:31 - that's the majority of the app done
162:32 - right so most of the apps down so we can
162:34 - pretty much log in so i'm going to
162:35 - actually go ahead and log into a
162:36 - separate account
162:37 - so i've got a different account here so
162:39 - i'm going to log into i've got karzi's
162:41 - account here so i'm just going to log in
162:43 - under his account and now i should say
162:46 - i've logged in there's graphic cards
162:47 - there we go and i can say yo sonny
162:51 - so i'm gonna pretend that was someone
162:53 - else now so you can see yourself
162:55 - and say what's up guys what's up guys
162:58 - there we go see that works in a
163:00 - different account as well it pauses
163:01 - information and say
163:02 - this is insane it's all real time guys
163:05 - like if i refresh it's going to persist
163:07 - it logs me back in go back to cp discord
163:09 - boom
163:10 - logs in all right so i'm going to go
163:11 - back to sunny
163:14 - and i think with that said what we're
163:15 - going to do now is to deploy right
163:18 - go ahead and deploy um so
163:21 - now what we're going to do is we have
163:24 - everything up and running this is insane
163:26 - i mean i think this is pretty cool i
163:27 - think this is pretty pretty cool stuff
163:30 - um so now what we're going to do is i'm
163:32 - going to go ahead and deploy so
163:34 - i'm going to first make sure i'm logged
163:36 - into the correct firebase so
163:38 - let me go ahead and just uh change your
163:41 - screen for a second because i think i'm
163:42 - in a work one so if i was logged out
163:46 - and yeah that wasn't one so i'm going to
163:49 - go into my terminal
163:51 - so let's go back into my tamil and first
163:53 - i'm going to do firebase
163:54 - login and i made this on my personal
163:58 - one so if i go ahead and just say i'll
164:00 - just find
164:01 - and it's going to log me so i'm going to
164:03 - continue i don't know on this account
164:06 - on this account allow
164:10 - there we go and he logged me in so
164:13 - firebase login is the first command you
164:14 - want to do then you want to do firebase
164:16 - init okay uh so right now we're
164:19 - deploying guys so it's gonna be awesome
164:21 - so then i'm gonna go ahead and go down
164:23 - to hosting
164:24 - hit enter i hit the space bar hit enter
164:27 - key
164:28 - okay so i'm gonna make this a bit bigger
164:30 - for you guys so you guys can see that
164:33 - and then here it says use an existing
164:34 - project so i have tons of projects
164:37 - let's go ahead and find the one discord
164:38 - clone youtube all right
164:41 - enter and then this bit is very
164:43 - important okay
164:44 - so uh so billboard bargo says shouldn't
164:46 - the newest text be at the bottom
164:47 - yeah you can do that and you can make it
164:49 - or scroll to the bottom if you want i
164:50 - didn't do that i just done it for
164:51 - simplicity
164:52 - it will come to the top um but here is
164:54 - very important to write build
164:56 - okay you have to write build guys don't
164:59 - right anything else has to be built and
165:02 - then what you want to do is enter
165:03 - and then here you want to do yes because
165:06 - every single react app is a single page
165:08 - app
165:08 - that's dope and then we're going to do
165:10 - is npm run build
165:12 - and what this will do is it will build
165:14 - the entire app
165:15 - into a build folder up here all right so
165:18 - remember we set the the
165:20 - deployment folder to build okay and it
165:23 - will actually go ahead and build
165:25 - everything into that folder so right now
165:26 - it strips out all the sort of heavy
165:28 - craps all the heavy sort of stuff that
165:29 - we don't need
165:31 - and it will actually go ahead and put
165:32 - into a very optimized production build
165:34 - so this is the one okay
165:38 - um and then what we're gonna do
165:42 - is bear with me while it creates the
165:44 - optimized
165:45 - production build and there you go so it
165:47 - built everything out so now we can check
165:48 - inside the build folder we got all this
165:50 - jogging right so you don't want to touch
165:51 - anything inside the build folder
165:53 - they basically made it into a very fast
165:55 - production ready
165:57 - i guess itself okay then what we're
165:59 - gonna do is we're gonna say firebase
166:00 - deploy and that's it i'm gonna hit this
166:03 - button
166:03 - and we're gonna we're about to deploy
166:05 - guys and i want you guys to all log on
166:07 - to this once i deploy it and check it
166:09 - out
166:09 - right now who's ready who is
166:12 - ready to deploy this app guys let me
166:15 - know in the comments right now
166:16 - because we're going to end this with a
166:17 - bang and i'm going to go ahead and share
166:20 - the link for you guys and i want
166:21 - everyone to come in
166:22 - clutch and literally just just go ahead
166:24 - and have a chat keep it clean
166:26 - but have a chat inside inside the
166:27 - discord clone to see
166:29 - that i'm not lying when i when i built
166:30 - this right so let me know in the
166:32 - comments right now if you're ready for
166:33 - this
166:34 - and i will hit the deploy button as soon
166:36 - as we get enough heat right now okay
166:39 - so let's go ahead and see how many
166:40 - people drop a comment on this we already
166:42 - passed a thousand likes we have
166:44 - 220 people still watching so that's
166:45 - insane let's go ahead and do this so
166:48 - david mason says you are awesome thank
166:49 - you so much dude
166:50 - um and with that said i'm going to give
166:53 - it one more second
166:58 - hey there it goes that's it
167:01 - so here we go this goes christopher
167:03 - siddharth says let's see it deploying
167:04 - the gestures
167:05 - yeah hey hi dude uh everyone's saying
167:07 - let's go drop it let's go
167:09 - all right let's do it dude let's go all
167:12 - right so i'm going to hit
167:12 - deploy so hitting deploy
167:17 - now and deploying hosting bikini deploy
167:21 - found the items in the build
167:23 - this is good this is good this is good
167:25 - and
167:28 - hey there we go there's the build
167:31 - right there so i'm gonna go ahead copy
167:34 - this
167:35 - and drop this in the chat there you go
167:41 - and let's go ahead and open it out
167:44 - i'm gonna open it up here and do this
167:48 - and now you guys should be able to see
167:49 - it
167:51 - go ahead and check it out
167:55 - go ahead and do something login
168:02 - check it out hey we got people here
168:04 - already nice
168:08 - yo what's up guys
168:10 - [Music]
168:14 - david mason's here dope
168:18 - oh we actually have a bug all right so
168:21 - i'm going to show you guys how to fix
168:22 - this right now
168:23 - okay so i'm going to show you how to fix
168:24 - this right now and then we'll redeploy
168:27 - so check this out right so it's actually
168:29 - a good debugging issue okay
168:30 - so you see we haven't got overscroll
168:32 - right now okay so what i'm going to do
168:34 - is i'm going to go to chat
168:35 - and then over here well i'll show you
168:37 - how to very quickly fix this
168:39 - so as the messages come in we can fix
168:41 - this so inside of
168:43 - chat messages over here so i'm going to
168:44 - open up chat.css
168:46 - boom go down here and this is pretty
168:49 - cool as we're coding over there it comes
168:50 - down
168:51 - and i'm going to go into chat.css and
168:53 - you guys will see how fast it is to do
168:55 - this stuff
168:56 - right so inside the chat messages i'm
168:58 - going to go overflow scroll
169:01 - and then i'm going to add this in so i'm
169:03 - going to add this webkit scroll bar in
169:05 - so over here boom and i'm going to go
169:08 - ahead and say this
169:11 - so these two lines here hide the scroll
169:12 - bar but they implement the scroll
169:14 - functionality now i'm going to go ahead
169:15 - and do npm run build
169:18 - and i'm going to chain the firebase
169:20 - deploy command
169:23 - and boom just like that i'm literally
169:25 - pushing
169:26 - and i'm pushing a bug fix
169:30 - so once this bug fix goes ahead and gets
169:32 - deployed you guys are going to see it so
169:34 - michael pluto
169:34 - literally is going to fix that issue so
169:37 - it just created the build
169:39 - and then we're going to go ahead and do
169:40 - it again so now it's deploying again
169:42 - so let's go ahead and see out um
169:46 - omkar says don't you pee my girlfriend
169:48 - agrees honestly i don't know man like i
169:50 - can hold it together but look at that we
169:51 - have this issue but if i refresh now it
169:54 - shouldn't be cached hopefully so let's
169:55 - go ahead and see
169:56 - let's go ahead and do this hey look at
169:58 - that fixed it
170:00 - nice that's how you do it guys that's
170:03 - how you fix a bug
170:04 - live so go ahead and refresh and you'll
170:06 - see it the bug is fixed
170:09 - look at that that was pretty cool i
170:11 - think i think that deserves to hit the
170:12 - smack that smashed that thumbs up but i
170:14 - think that's pretty cool
170:15 - just debugged it that quick and we
170:16 - deployed it so that shows you just how
170:19 - fast it is to go ahead and deploy
170:21 - okay so that's pretty sick um
170:24 - with that said i thought that you know
170:27 - it's coming to an end when we dropped
170:28 - that
170:29 - um but you guys can pretty much see that
170:31 - we have like look we have some new chat
170:32 - channels being opened up here it's
170:34 - pretty dope
170:36 - all right so nicholas hell thank you so
170:39 - much
170:39 - this guy sonny is awesome learn so much
170:41 - we should try this react.js come on
170:42 - later
170:43 - definitely go check it out dude and uh
170:45 - yeah
170:47 - we've got loads of things coming in so
170:48 - we've got legend papa react subscribe to
170:50 - cleverprogrammer
170:51 - hey love this good your superhuman
170:55 - hats off papa react fix the bug yeah oh
170:57 - yeah dude
170:59 - subscribe for us bet chats the best chat
171:01 - ever
171:02 - sunny knows pedro what's up dude man it
171:04 - works okay this is insane
171:06 - awesome sunny fans nice all right
171:09 - so with that said guys
171:15 - with that said guys i hope you enjoyed
171:18 - the build
171:19 - we had redux we had
171:23 - everything inside this build we had the
171:25 - discord clone we had redux
171:27 - we had uh selectors we ran through the
171:30 - entire build process like that we
171:32 - showed you pretty much the entire redux
171:34 - flow how different slices like the app
171:36 - size the user slicer built
171:38 - we had all of that stuff inside today's
171:40 - build we had
171:42 - man crazy stuff or somebody says okay
171:44 - there's still a bug i mean i think it's
171:45 - also on the the sidebar but you know you
171:47 - guys saw it you know i had to go ahead
171:49 - and fix that
171:50 - um hey my girlfriend's coming in love
171:52 - you too
171:53 - um but yeah guys that was an awesome fun
171:56 - build
171:57 - hope you guys found value in that we
171:58 - pretty much showed a responsive design
172:00 - we showed how you can pretty much go
172:01 - ahead and clone
172:02 - um thank you so much guys for sticking
172:05 - around we still have
172:06 - literally 230 people sticking around so
172:08 - this is awesome we hit over a thousand
172:10 - likes
172:10 - already in today's build and as always
172:13 - guys your energy is insane
172:15 - i'm glad to be back and we can pretty
172:18 - much go ahead and i want all of you guys
172:20 - to go ahead and let you go ahead and
172:22 - build this
172:22 - i know which bug you're talking about
172:24 - guys you're talking about the sidebar
172:25 - you literally do the same thing you do
172:26 - overflow scroll
172:27 - and then you do that little trick that i
172:28 - showed you to go ahead and fix it but
172:30 - with that said
172:32 - tomorrow we drop an imessage clone so
172:36 - we don't stop here we've got an imessage
172:37 - clone happening tomorrow
172:39 - so literally the stuff that happens on
172:40 - your phone is going to be happening on
172:42 - the browser tomorrow
172:43 - i'm going to build that for you guys
172:44 - tomorrow um with that said make sure
172:47 - you go to the link in the description
172:49 - sign up to the free
172:50 - training do not miss that guys because
172:52 - it's completely free
172:53 - so i don't know why you'd want to miss
172:55 - it but this is the free training that
172:57 - you can get access to
172:59 - uh me and classy pretty much go ahead
173:00 - and show you guys how to build the next
173:02 - fix clone and use everything
173:04 - behind that build so um yeah josh shah
173:07 - says what's that shiny thing behind you
173:09 - these are the lights that my girlfriend
173:11 - bought me so they're
173:13 - pretty cool lights dude they're called
173:14 - nano leaf and
173:16 - they react to my voice so as soon as i
173:18 - talk it pretty much comes up so
173:21 - thank you so much guys and it's papa
173:24 - react aka
173:25 - sunny signing off make sure if you don't
173:27 - already follow me on instagram
173:29 - so go ahead follow me shoot a story if
173:31 - you're watching this live and i'd love
173:32 - to have a chat
173:33 - with that said it's your boy i'll see
173:35 - you tomorrow peace guys
173:37 - bye

Cleaned transcript:

welcome to another bill i am so pumped to be back guys it's been a while it's been a while but we are going back and we are bringing some serious bangers and today we are starting with a bang and we're going to be building the redux redux we haven't done redux before we're going to be building the redux clone of discord so i know loads of you guys were one it uh actually wanted this to happen for a long time so we listened and we're gonna bring the fire today and we are building the discord clone in uh with redux so that'll be dope let's see where everybody is at hey my girlfriend's in the house what's up let's go ahead and see we got yeah papa reacts back guys hey let's go ahead and let me go ahead and demo the app while we get some comments coming in right and also get invite your friends smash the thumbs up button if you're excited and uh it's gonna be it's gonna be a big video i can see a flood of people coming in right now that is dope let's go ahead and show you guys what we got to look forward to today so we have the discord clone so here you can pretty much go ahead and see so if i go ahead and log in uh let's go ahead and go back so we have discord right here and this builds jacked guys like i'm not joking this build this build is going to be pretty pretty big okay so we're going to have a few things happening with this we're going to have the login so i've built it out with we have full google authentication so let's go ahead and let me go ahead and make the stream a little bit better for you guys to go ahead and see so i'll pause mine and there we go so you can go ahead and click on an email account so let's go ahead and log in and you should be able to see now we're inside right and then if you go ahead and click on the channel what it does is it pulls all your information so you guys can go ahead and zoom in there you go pulls all your information from your google account down to the bottom and then you can go ahead and see even gets you a unique user id but here you can see it's all real time guys so we've got chat rooms on the left so wow it works let's go ahead and make a new chat room let's call this one youtube boom and i'm going to go ahead and click that and i'm going to say this works and enter there we go nice and then we go ahead and say are you guys ready are you guys ready to build a discord clone because i know loads of you guys have been wanting this if you are smash the thumbs up button and invite all your friends because this is going to be a big big build okay now i know some of the streams lagging but it will be clearing up soon guys so just just be patient and everything will be will be good okay um hey let's go through the chat let's go ahead and see who's in the house so we have what's up we've got let's go ahead and look yes yes yes some buffering guys i know um hey this guy this show just says i just thought about building a discord clone what the hell well we listened dude we listened sakshi shah says just did the amazon clone and loved it awesome stuff dude and a lot of people inside the course so inside of pwj i actually went ahead and told them to go ahead and do the amazon challenge again but with redux and today i'm going to be teaching you guys redux so redux is one of the most wanted most popular things that you could pretty much learn when you're learning react so it's the most valuable thing in terms of what a job essentially wants so today's going to be a big build for you guys okay um redux is pretty much in previous builds i've done everything with the react context api and in this build i'm going to be doing it with redux so redux is a lot more valuable in terms of professional environments so you guys are going to see how to go ahead and do that um and loads of people i can see hey papa react is back i'm back dude uh also guys we're gonna be dropping some react native stuff happening soon so if you're excited for that smash the thumbs up button i'm only gonna do it if that number goes up if that thumbs up goes down uh it goes up sorry because you know we need to know that it's wanted by you guys okay so let us know if you guys want to do that uh again let's go ahead and show you guys the build so this is what we're going to be building today the discord clone so we have loads of channels here and you can go ahead and see and you can actually i will show you guys is also how to deploy this so oh check this out deepak gupta says hey sunny i got a six figure job just by building your coven 19 clone and by joining my joining date on june 2021 really thank you so much buddy let's go keep on learning that's dope dude everyone give a thumbs up for him let's go ahead and that's the kind of energy we want and we just hit over 430 concurrent viewers so across facebook and youtube that's what i'm talking about guys and we're going to be bringing the heat on these videos we also just dropped a huge video a 12 hour react channel ismail alma says man give me a shout out there you go hey calvin kobanda is in the house what's up dude good to see you again nice stuff and uh let's go ahead and see also somebody says what about the voice channel so i mean if you guys enjoy this build we can pretty much always go ahead and extend it in another build i can go ahead and add the voice channels that'd be fun hey david jonathan's back we've got that we got now we got the regulars in the house what's up guys uh somebody said can we make a snapchat from react yes we can tie dinner says you're the best thank you very much dude appreciate the love we got south africa in the house what's up edward nice suraj thank you appreciate the love dude um also we're gonna be we're slowly upgrading the the setup so you know it's gonna be pretty fun we've got jamaica in the house as well nice awesome stuff dude also guys i'm going to be jumping through um we're actually going to be doing it with uh firebase as well so let me go ahead and move this comment out of the way so yeah we'll pretty much build this out with firebase you can see we're using cloud firestore we use google authentication and in this build we actually go ahead and use a persistent so i remember some of you guys are like hey something we're using google authentication but it keeps logging me out so i went ahead and fixed that for you guys so we don't have we don't have that issue anymore so if i go ahead and refresh it will log me back in there we go oh let me show my screen if we go ahead and refresh and we go back there you go it logs me back in and everything comes up now this is real time so it's going to be awesome and it's going to be pretty pretty nice sanjay says hey sunny nice to see you in the live stream again uh big hugs from uzbekistan thank you so much dude i am back in the house um so this is going to be fun guys you guys do very good comedy keep it up yeah guys let us know did you guys like the vlogs that we were dropping because uh those people like where's sunny i'm based in london i did try and fly out and it's pretty hard you know so it's pretty hard in covid loch now to go ahead and go to london but with that said let's go ahead and start this build if you guys are pumped up let me know in the comments because i want to get the energy flying today for the first video back and tomorrow also get your calendars ready tomorrow i'm dropping an imessage build so that's going to be insane oh my gosh you guys love to see your kickboxing hey priyanka patel nice dude thank you so much for the donation he goes thank you for global persistence uh yeah so we have global persistence today so that's going to be something cool hey we've got the donations coming in we've got um uh anka kadam says i just completed the instagram clone last night turned it turned and damn it turned out clean thanks to you and kazzy mate lots of respect to you both appreciate you dude thank you thank you so much uh we have looney phil amazing clone series and heads off for the 12 hour course thank you so much the 12 hour course is available now so you can pretty much go ahead and watch that and we do a huge runthrough of everything so if you're looking for someone to start the 12hour course is going to be a great place to for you to go ahead and you know get started with that so yeah tomorrow tomorrow we are doing the imessage clone now before we get started guys i want all of you guys to get the most value out of what we offer on this channel so in the description we pretty much have a free training okay so this is a free training you guys can go ahead and go to it right now the link's in the description and what i want you guys to go ahead and do is literally go and sign up for it right now okay so go down it's free it's three hours we teach you how to do the netflix clone and we pretty much go ahead whoa we just got a huge donation i'm gonna shout out in one sec um yeah let's go ahead and go everyone go to that description right now sign up to that training because i want you guys to get the most value from what we offer on the channel so go ahead and do that and that'll be dope let's go ahead and see that beautiful donation enter tech incorporated just sent a 20 canadian donation thank you so much dude uh that massively appreciated that i didn't even write anything humble as hell did um somebody said hey victor this is what i'm talking about guys victor just dropped another one he goes i made seven clones and today i joined oh we joined pwj today let's go dude welcome to the family that is so awesome dude and uh yeah i'll see you in the coaching course on tuesday that'll be fun dude tomb tomb says yo good content shout out to students of that atm i'm not sure what that 18 is but thank you so much for the donation um hey paparik hope you're good my favorite programmer hey let's go guys i can see so roger says i didn't take a course about redux can i join this tutorial guys this tutorial is it's beginner friendly okay it's beginner friendly so make sure you guys if you've never coded react before go ahead and follow it okay it's gonna might be intense it might be something like that but if you go ahead and get a bit stuck don't worry it's recorded you guys can go ahead and get started with it so with that said let's go ahead and get started with the build i'm excited let's go so first thing you want to go ahead and do and i love the energy guys everyone's like papa react is back let's go rishi's sick says i said atlanta get gig well done dude send us proof um on instagram and also if you guys aren't following me go ahead and uh go ahead and follow on instagram it's so difficult i always change this thing but go ahead and follow instagram and we can very much have a chat so go ahead and check out so today oh dude this guy just said he made three thousand dollars it's not coming up but he made three thousand dollars from the cover 19 tracker damn nice dude okay with that said oh man these comments these comments are great guys massively appreciate you we just hit over 500 viewers right now 500 views let go ahead and literally let's get a number up guys go ahead and tell everyone that we're back on the channel we're back live today and tomorrow and we're going to be dropping so much content for you guys so really really good stuff okay really really good stuff okay with that said let's not waste any more time let's go ahead and jump back in so again before we get started go ahead and sign up to the training in the description three hour training go it's pretty much it's completely free so go ahead and do it like it's gonna help you guys out on your coding journey but with that said guys quick demo of the app one more time for anyone who joined in new this is the discord clone we can pretty much go ahead and log out log in with full google functionality so google login and boom somebody goes sunny just saw your rubik's cube story back in the days man back in the day um and yeah and pretty much when we type in here so we can go yo and you see we can pretty much it comes up and let me go ahead and see if i get my annotation there we go and you can see it pops up here so keep an eye over here and if i go ahead and say who's ready to start so who is ready to start the build go ahead and let me know guys if you're ready to go ahead and get started with this uh and also loads of comments from is this for beginners 100 this is all for beginners okay um so yeah so rishab says isn't the netflix one going to clash with this live uh just go ahead and register dude and we run that training quite a lot so pretty much register and then we'll ping you uh a link and you'll be able to watch it after the build okay and i'll be able to help you out with that said guys let's get started okay so first thing you want to go ahead and do is open up visual studio code so let me go ahead and pull up a new one um actually i'm going to show you guys a little trick so today we're using redux okay so we're using redux today so with the redox in mind if you did you go on google and type in redux i'll show you hey we just got another supernova superchat donation thank you so much ayush gupta oh yeah nice to see you again hey sunny when will you be dropping react native soon soon okay um and also i see yeah so if you get if you spam guys we do block so please don't spam okay so now what we're going to do is click on getting started and i'll keep it nice and sweet and short for you guys so redux toolkit so you could do it this way but there's a very easy way to now to get started with a react app um no wait oh man i have to check this out serene cowden is back he goes great to see you back to sean hey so funny man uh jason was actually one of one of my favorite singers so good stuff all right let's go ahead and jump in back um oh man this is insane like i love seeing this stuff like the actual effect that we have so i made 500 in a week just with the netflix phone i just configured a little bit to use an anime api instead you guys are overpowered keep up the good work hey thank you dude appreciate you um let's go ahead and get started then so here is the command that we're going to do so it's pretty much very very similar to what we normally do okay so mpx create react app with the name of the app but here now we do dash dash template redux okay so don't freak out if you've never used redux before don't freak out it's going to be okay okay i know it can get pretty scary but you know it's going to be okay thank you so much today t dane blake so 199 super dollar super chat sorry thank you so much dude appreciate that um awesome so let's go ahead and get started um with the terminal go ahead go into the directory that you want so i'm going to go into this and i'm going to go ahead and say i've actually already run this command so it's mpx create react app and then redux so i've got it over here and i'm going to call it disk or clone youtube because i've already got another one called discord clown hit enter and that will go ahead let me make that a bit bigger and that will go ahead and spin up everything that we need so while that gets started guys i would recommend that you go over to firebase because firebase is pretty much how we're going to power the back end of this build so firebase.google.com and then over here you want to go to your console and you want to click on add project okay now here you can just go ahead and do discord clone i'm going to do disk click on youtube and keep it consistent because you know how we did and we're going to go back and go here and you don't need to enable google analytics i'm going to enable it for now because you know when we deploy this thing i like to see you guys looking create project and there we go okay so this thing goes ahead and gets created and let's go ahead and see so somebody says while we wait garvett says hey sonny my father is a bit conscious of spending a thousand dollars in the pwg what should i do should i show them all the videos about pwg honestly dude just literally go ahead and use the free videos okay go go ahead and use the free videos on youtube in the meantime and pretty much go ahead and build a bunch of stuff and show you that and say like hey like this is what i've done and i want to take it a step further i think that will be enough dude um and and all the best with that okay so with that said in class course somebody says would you do an in class course well after kovitz out we're actually going to do inperson events so stay tuned for that okay now you want to click and h click continue now that will load up and then what you want to do is hit this little or you can hit this web icon over here click that go here and i'm going to say discord clone youtube boom and then we're going to go ahead and do how to get rid of frustration when you keep for failing and code about feature in app based okay thank you so much gaming map gaming mat says love your builds uh two little two pound donation hey london huh london house love your bills and videos man keep it up appreciate you dude appreciate that um and make sure you go ahead and follow my instagram it's down here and you can pretty much keep in touch and and and let me know what you built because i'd love to see you guys interacting and going ahead and building out the stuff so um does anyone reckon there is still money to made in mobile development 100 dude 100 richard says our live calls recorded in pwj yes everything that we do in pwj is recorded so it's completely there so we're going to click on continue oh wait a minute why are we on crashlytics let's go to this little cog icon go project settings and we're going to scroll down and you see this right here guys config this is what we're interested in okay so you want to go ahead and copy this you just want to copy this and then oh nice dude that's a donation appreciate you guys holy crap so super champ says hey sonny what projects do you recommend for putting up on your portfolios for a front end developer also is it necessary to jump in the back end if you actually want to create a fully functional web app so very good question and to answer that question quickly before we get started uh as for what you want to put on your portfolio i would say go ahead and literally do all the clones all the clones are going to be like it's going to be huge for you guys um and that will make you have a very attractive portfolio now something i would recommend is that people have have had a lot of success of things like the netflix clown the spotify clone and frank grandma's actually got a six figure contract so that's good money right there okay so you guys can go ahead and get started with that and that will be really really good and you guys will be able to build out a portfolio but in the meantime literally just go ahead and do what you find fun so honestly anything there anywhere anything where you can provide a bit of value uh that's going to be the best place to start uh okay so with that said i'm gonna copy this and then you see we go back to our terminal everything is good so we're gonna go cd discord okay so now we're inside also i'm using all my zsh for this guys so if you haven't used that out uh go ahead and check that out it's a really handy terminal thing that you can do with all my um with it makes your terminal a lot easier now what we're going to do is i'm going to go ahead and open up a vs code inside open up vs code with our stuff inside okay so with that said let me quickly damn it i messed up all my windows okay with that said now somebody said why using firebase dude just watch and wait and see wait and see it's all i'm gonna say to you um let's go ahead and what is this oh we've got my coders playlist boom okay boom boom also if you guys don't listen to that i would check that out it's called lofi uh coders on spotify really really good playlist um so and also somebody says when will this end uh everything we do on the channel is always up on the channel afterwards okay so pretty much you guys can watch this at your own time afterwards as well and if you're excited guys please smash the thumbs up button because we've almost hit 500 likes which is dope okay now let's go ahead and move my screen a bit up there we go so here guys we're going to go into source and the first thing we're going to do is hit command j and you're going to see your terminal pop up now here what i'm going to do is i'm going to go ahead and say npm start to spin up the app now i think i have another app running so i'm going to go ahead and do y and that should go ahead and start up on a localhost so boom boom boom one second now oh nice gaming map says hey i listen to that it's good right lofi coders on spotify it's nice dude um and now the app is up and running so let's go back to our stuff go here and let's go to our localhost 3002 for me for you guys it'll be 3000 if you're not running anything and here we go so this is like a little bit different from the correct react app that we're used to right and you can see that this is actually using redux to power the state management here so everything that we pretty much have inside of here hey what's up keenan good to see you again dude um yeah nice to see nice to see some locals in the house nice um okay so also please stop smiling in the chat guys okay so you can see pretty much here i if i add stuff and remove it it's pretty much getting updated but not by the typical state it's actually being managed by redux so redux is essentially like a data layer around the app but it's like the production level data layer okay so it's the thing which is gonna it's used in a lot of professional environments and we're gonna show you guys how to do all of that today uh and you can also add different amounts let's go ahead and say if we add in 20 so you can add amount at asynchronous so you see there's a little delay before it gets added which is kind of cool we just hit over 500 people as well watching so what's up guys uh if you guys just joined in we're going to be building the discord clone so get excited for that it's real time everything is supported it supports google authentication we're going to be doing all of that in today's build so and we're building redux so awesome stuff so all you need to do was get that up and running um somebody said so why are you using redux because redux if you're learning react then i would say you need redux okay like redux is going to be one of those skills where you pretty much go ahead and and take yourself from becoming a like someone who might get the job to to pretty much you you need redux to get those you know to get those good paying jobs okay okay so now what we're going to do is we're going to go ahead and clean this up a bit so we're going to go ahead remove app.test.js logo and set up test.js so i'm going to go ahead and get rid of those boom they're gone and then we go to features and i'm going to keep some of this stuff i'm going to rename this to counter dot css and this these are just dummy files okay so these are dummy files we can go into counter.js change this so it reports from counter.css now the only reason you need to do this guys is so that you don't get those errors but we're going to come back to this for like for like help in a bit so let's go over here and let's delete everything inside of app.js so everything inside is the header tags and then we're going to say h2 let's just say h1 let's make this thing big say h1 and then here we're going to say let's build oops let's build a discord clone boom i'll make that a little bit bigger for you guys there we go let's build a discord clone also if you guys can see that let me know okay so i'm going to save that and you can see it's still freaking out because there's logo up here so we're going to get rid of that now also just before you pretty much go ahead and okay so this actually i want to quickly address this question right so somebody says sanga i'm passing for a depression where i try to work hard in coding but every time i try to write my own app i get so frustrated that i leave it and complete it how do i get rid of it i just like dude debugging it coding is never a straight line okay it's never a straight line you're always going to become into places or like situations where you get stuck and i mean like not stuck for like five minutes or ten minutes you get stuck for hours sometimes i've been stuck for a week before working on projects right on like one feature inside of an app so it is a normal thing and in those experiences is where you will learn now if you guys agree with me let us know you let me know your stories in the comments right now so if you've had a debugging nightmare or experience go ahead and check that out okay um anka thank you so much for the donation he says um so is it necessary to jump into back in sunny it's not necessary but i i mean depends what you want to go into but in this case firebase is going to handle our back end for us so with that said let's go back to our code so here now what we're going to do is get rid of counter and then if we go back to our app it says let's build a discord clone okay so what i'm going to do is i know you guys actually like it when i do it like this boom boom there we go and you guys can see both at the same time so let's build a discord clone then what we're going to do is we're going to go ahead and change this to a lowercase a because this is actually the bem naming convention yep so bem naming convention so it's the way we name classes to be scalable maintainable quite easy to understand um okay and oh priyanchu what's up dude nice he is a 13 year old badass inside of our course uh make sure you make sure you guys go ahead and follow him so then we're gonna go to app.css and delete everything inside of app.css so we're going to go ahead and get rid of that let me make this a bit smaller for you guys and then let's go ahead and oh i love this comment thank you dude you're my inspiration to become a web developer thank you so much dude really really really appreciate that um right so let's go ahead and go back into index.css and then here guys you see this little annoying bit of space over here um so this space over here right so you see that little top gap it's got like a imaginary sort of like margin that's being added there right to get rid of that we're going to go ahead and say my um all so asterix and we're going to say margin zero save it and the kill says damn the badass is here what's up um then let's go ahead and now you can see it this is where we want to start from okay and um yes graph icon uh you guys can go ahead and read this comment yourself but it pretty much is saying like if i don't if i copy some snippets is it okay yes it's okay trust me like keep doing it just keep working hard you get pattern recognition you'll get sort of up to date with things and just just don't quit dude just keep on going keep the energy high and and and things are going to be really tricky amberly so kazi's girlfriend she dropped a really really good point today on her on her instagram and her youtube actually she's got really awesome youtube make sure you go check it out it's sugar shaw and what she said is um discipline is actually what pushes you past the point where your body doesn't want to do any do that thing anymore motivation is kind of high for everyone in the beginning right we're all it finds it very easy to jump into coding but your discipline is what's going to be the thing that counts and when you get into those debugging situations where things get really really like hard and and get tiring and sort of like you're sitting there for the hours and the sort of like pain to quit comes in that's where you you have to have some discipline and that's what's going to get you to build awesome apps like today and let's jump back in so with that said we're going to go ahead and now we have our starting point okay so with that done we don't actually need to do anything more at this point what i'm gonna do now is inside of app.js we're gonna build two portions of the app first okay so let's go back to our final build over here and now you can see in this build right we have two main sections okay we have the i'm going to go ahead and move my drawing tools um oh this is a good point actually jennifer says i'm in a code camp and everyone was super impressed by twitter knowing i did from your quick look oh god twitter clone video okay uh and that's what i hear all the time like people spend thousands on coding bootcamps okay and it's crazy because like i mean like uh i don't know man like i like we you can do this stuff and we pretty much that's why that's why i build these clones you guys can go ahead and get the value for free and if you want to go ahead and take you to our next level and learn how to make a serious like income with this that's where we offer our course profit with javascript so all that stuff all that good stuff is in the description okay so make sure also make sure before we get started go ahead and sign up to our free training so completely free okay what are you doing sign up to that let's go back okay so here the first thing we have is i'm going to go ahead and freeze the app okay and graph icon it is okay to listen to music dude i listen to music when i code but anything without lyrics so you see we have two sections over here okay we have one section over here and we have one section over here okay that's a bit better so we have the first section so i'm gonna go ahead and just draw on this so this first section we're going to call it the sidebar component okay oops let me make this a bit smaller this section is going to be called the sidebar component and this section is going to be called the chat component right so we have two components here and then we're going to break everything down into smaller sub components so obviously you've got things like the oops you've got things like the the uh channel component we're gonna have the chat component uh we're gonna have the input component things like that right all of this is going to be separate components because in react we like to use components everything is component based okay so with that said we have the sidebar and the chat okay so what i like to do as if you haven't seen my builds before is i like to use comments to sort of mask it out okay so the first thing i'm going to do is say sidebar here and the second one i'm going to go ahead and say chat and this is just comments so this is nonfunctional code but it's pretty much where i want the component to be so the first thing we're going to do is build out this sidebar so here i'm going to go ahead and say sidebar and of course my code is going to freak out because there is no sidebar at the moment that's defined okay so it's helping us out here by telling us this so what we're going to do is go ahead and do command b to open up our side and then here i actually want you guys to do another clean up step okay so you see right now it says features counter because in the demo app what they did is they actually went ahead and and put everything into our into a folder called features but what i want you to do is actually go ahead and move this outside okay so move this outside go ahead and delete the counter folder and then i want you to grab the counter to the counter slice and pretty much put that into the features folder so i just want one folder called features with those three things inside of it and we'll come back to that afterwards but that will make life a lot easier okay um so yeah i love react but i don't like css or designing part what should i do maybe consider a backend development if you don't like the styling i used to hate css dude and it was only until i did things like flexbox froggy and i just gave it a little bit of effort and you know some more drive behind it that i actually start to get good at and when you get good at it things actually start to look really nice and it becomes fun so don't quit dude that's my advice um okay so now what we're going to do is we're going to go in so here and i'm going to create a sidebar dot js component okay now i'm going to be using snippets here so if you haven't got the snippets i'm going to use go to the extensions in vs code and go ahead and type in es7 and it will be the first one so this one right here so this is es7 react redux all those things snippets and this allows you to write code really fast by using shortcuts so now i'm going to say rfce boom and we've created a functional component okay now here i'm going to go ahead and say import import sidebar sidebar.css like this okay and then i'm going to go to the div i'm going to say class name equals sidebar like this and then this i'm going to do h2 saying i am the sidebar okay now obviously we need to create the css file so i'm going to go ahead and create that right now so i'm going to go ahead and say sidebar dot css just like that we have our css file go back here and we can pretty much go ahead and go back to our app now and import it so here a little trick for you guys you can go ahead and um i see loads of people actually saying um i got a job thanks to you guys if you can show me proof of that dude i would really appreciate it because we're on a mission to get 5 000 developers jobs by the end of the year so yeah it's big and we're getting there we're getting there loads of people have got jobs and i'm starting to get used to hearing about people getting jobs from our tutorials so that's dope and i love that but we're gonna go back now and yeah if you could just send me on my instagram that would be awesome and i can add you to the counter that we have running okay now to a little shortcut for you guys if you go to the end of the component and hit control spacebar it says auto import and boom it imports it at the top otherwise you just have to write that out by yourself and then yeah now it says there is no such file such as counter slice okay now this is because we we changed the photo directory so you see these things right here so what we need to do is go into the app folder go into store and here we got rid of the counter right so we need to just go ahead and get rid of that and that's it and then it'll work because we just got the photo directory messed up okay also thank you so much for the kind um kind words uh rohan gupta so if you if anyone has signed up to training go ahead and uh you can pretty much sign up as many times as you want afterwards even so you can go ahead and i'll say watch this live first maybe and then go ahead and watch that one so that would be really really handy for you guys and it's completely free link is in the description check it out okay um also guys i like to code with a bit of music i don't know about you guys so let me know if this is distracting for you okay and if you haven't already smash the thumbs up button because you know we're gonna hit a thousand likes today i know it i feel it the energy is good so let me know if this is distracting for you guys if it is i'll turn it off but i kind of like it okay um okay so let's go ahead and do this so let's build a discord clone on the sidebar so now you can see it comes through okay so at the top uh i'm gonna go here and i'm gonna get rid of this so now we just have the sidebar in okay so this is where we always get this sort of mixed opinions on the music in the background okay bonjour tech what's up dude uh yes this will be available later thank you marin um for asking uh can i dm on twitter i'm not on twitter at the moment actually i'm not active on twitter anyway so go ahead and check it out on uh go ahead and message me on instagram so my instagram is down here gonna go check out and follow me uh yeah if it's too distracting i'll tell you but yeah let's go ahead and get started so i'm the sidebar okay the next one i'm gonna do is the chat okay but for now what we can do is we can actually go ahead and just build out the sidebar first okay so here we go to sidebar dot js what i'm gonna do is i'm gonna go here and i'm gonna first build out the top section okay so all i'm gonna do is actually gonna put this over here right so there we go so what i'm gonna do now is i'm going to build out this top section so let me go ahead and remove all that stuff boom ismail says play some six nine i think that will be distracting dude yeah um so there we go we've got this over here right on a beautiful girlfriend she goes it's not distracting it's nice i really like it see you guys be like my girlfriend there you go all right so we got uh we've got the sidebar here and then at the top what i'm going to do is i'm going to create a div so i'm going to say div and there's actually a trick i'll show you in a sec for emma okay oh i love this comment faisal says sonny you're helping thousands of learners i appreciate that dude i really really really like that uh hearing stuff like that so thank you so much dude um so now what we're going to do is i'm going to say div dot sidebar underscore underscore top and i'm going to hit enter and then you can see it creates a div now we can also do the same thing by without actually writing divs you can say sidebar on this one's called top and then boom it creates a div so that's a nice little trick if you don't actually know that trick so yeah check that one out but here we're gonna have a h3 and we're just gonna say the the discord room is clever programmer because that's a nice room to have and then here what i'm going to do is i'm going to actually need that little icon so i need this icon right here okay now if you haven't already used ataba yes dude he said sunny the first blog is published nice um okay so also let's go ahead and one second guys okay so now what we're going to do is we're going to go ahead and install material ui because we have a bunch of icons throughout the app so we have icons here we have icons here here we have loads of different icons around the application and what we can do is go ahead and install material to get started with that so i'm going to say material ui.com and then calvin commander says music is okay i got into an argument with my girlfriend because she wanted me to stop playing music but i didn't want to oh man you cracked me up dude nice so here what you want to do is do npm install material ui core so let's just go ahead and grab it and i'm going to do command j and what i like to do is actually open up a second terminal so i'm going to click plus and then here we can go ahead and just paste it so npm install material ui core and make sure you're in the right folder okay so right now we are so let's go ahead and do that and that will install the core now the core is good but you need the core and the icons because we want to have the icons like i said right but you need the court in order to have the icons i hope that made sense um but yeah you're going to go to the search bar type in icons click this and then you want to go down and here it says npm install material ui icons so now what you want to do down here is go ahead paste like that and then install the icons as well that will make it a lot more um that will actually go ahead and install all of the icon set into our app so then what you want to do is go here to this lovely bit where it says you can search the full list of these icons click that wait you can't we can't see your screen you can see my screen right guys go ahead and let me know if you can see my screen i'm sure you can see my screen right now um okay but what you want to do now is you want to go down here and i was doing it in the terminal down here guys by the way if you didn't see that so that's why i copied out the terminal commands yeah so here now inside of here so let's say we want it a plus icon okay let's type in plus and you can see i get like an ad right and then you see it actually gives me the import code for that so that's going to be really really handy because then you can go ahead and just use it inside of your app okay so if you're wondering how i found all the icons that's how i find them okay so uh the greatest ever hey what's up dude good to see you here man i love you i love your instagram account it's always like full of positivity dude i like that right so the first thing we're going to do is now we're going to jump back in so let's go to our code i need this little carrot icon and the carrot icon is called the expand more icon okay so i'm going to go ahead and import that so here i'm going to go ahead and say import expand more icon go down here and do this like so and then now we should see that little icon pop in so you know you see now i get here okay now what you can see is um uh also dix or dix ruby um ac says emmet is is available only in html files so you do need to actually run an additional setting uh what i can do is i can show you that right now okay um oh nice dude i just read the greatest difference come on so you're gonna press command and comma no oh oh come on comma here's commander commands you only click on vs code do command comma and it'll bring up your settings okay then what you want to do is you want to type in emmet and then you want to click on include languages okay and what i do is i go ahead and add this one so you see you either an item called javascript and the value is javascript react that's how you get emit on this okay so do that going back to the code let's go ahead and check this out so sidebar now we've got the expand more icon okay dope next thing we're going to do is the uh we're going to style this in a second but the next one i'm going to do is actually add the channels okay so the channels is going to be actually just style this one as we do it so let's go ahead and do sidebar.css so down here what i'm going to now have so for the sidebar i'm going to say sidebar and then this i'm going to have to do display flex it's going to be display flex it's going to have a flex direction of column because everything's going to be stacked upon each other and then the entire sort of sidebar should take up 25 so the next thing i'll explain this after but you see how this one takes up pretty much 25 so this takes up 25 this right here and this takes up 75 okay so in order to do that we set the app to display flex and then we say that this is 0.25 uh oh god damn it no 0.25 and this is flex of 0.75 that's how you get that kind of nice spacing the responsive spacing between the two okay so we're gonna just get rid of that and then let's go here we're gonna say flex 0.25 and you need to actually go ahead and do display flex on the app.js but we'll do that in a sec okay we're going to go ahead type in height of 100 view height and i'm going to say the background color and i found a very nice gray which is the discord gray so i'm going to say background color is this little hex right so you guys can copy that hex if you want it now if we go back to our redux app you can see the whole background color change because right now that's the only component and it's taking up 100 view height okay so with that done hey sunny watching sonny from florida nice dude you built community developers around the world i appreciate that and love the positivity dude um nice and glad to see you okay so now what we're going to do is go to sidebar top so i'm going to go ahead and say sidebar underscore let's go top bam in for the win then we're going to go ahead and say display flex i'm going to copy a snippet here and explain it so i'm going to say display flex justify content space between align items and you see what happened is i'm zoomed in right now there we go if i zoom out um space between so if i get rid of that it's next to it you see the carrot is next to it and if i do that it spaces out and i'm going to say align the item centrally so if i get rid of that everything's kind of uncentered it's a very subtle change but you won't see it but it does make a difference and then you want to do padding of 20 pixels if i get rid of that you see it adds a nice bit of padding background color again we're changing that now but i like to have it just on top but you don't actually need to have it there color white so obviously the color of the text is white and then the border bottom to add that nice little border right now of course we don't need the h1 which saying i am as a i am a sidebar because we already know it's a sidebar so we can go ahead and get rid of that and then you go let me get this so it's starting to look a little bit nicer than where it was so let's go back to sidebar here and now what we're going to do is command j to hide the terminal we're going to go ahead and say div sidebar underscore underscore channels so this is where all the channels are going to be okay so we're going to have the next section now that we're working on so here what i'm going to do is i'm going to say div and i'm going to say sidebar channels header okay and inside the header i'm going to have a div which is the sidebar header so i'm going to say sidebar header and this one is going to be the bit here so we've got text channels and a little plus icon okay so first thing is we have a little carrot icon so save that with the carrot and then what we're going to do is we're going to create a h4 i'm going to say text channels like this okay now you can see it pops in here so you see it popped in there and then what we're going to oh god why is that so and that's not far out okay then what we're going to do is we're going to go and head and add an ad icon all right so it's called an ad i'm going to get rid of the on click we don't need that yeah so you can see it's a class name sidebar add channel right reason why it's adjust because this button is going to actually allow us to add channels so if we go back into our app you can actually go ahead and see we can actually add channels in this app i forgot to show you so if we click this it says enter a new channel name so i'll say yo as you know go ahead and say react devs make it a little bit more less dj boom react devs look at that guys let me say who's popped who's pumped boom you can see it works okay so everything works on that and it's really really clean okay so um yum now what's up good to see you in here um she goes i really love this live stream glad glad you like it okay so now what we're gonna do is we're gonna go ahead and style this text channels because right now it looks ugly okay add icon i'm going to go ahead and import this so the add icon let's go ahead and first import that in so add icon boom we got the ad icon in let's go ahead and start this up so sidebar.css and the first thing i'm going to do is go ahead and say dot sidebar underscore underscore channels and then i'm going to say flex1 because i want the middle bit to take up the most room okay so that'll make sense afterwards as to what we're doing there but i want the actual channel sections i want this to take up the most room okay and that that's why these get pushed to the bottom in the end result so after we do that what i'm going to say is firstly i want to do sidebar add channel i want to make it a cursor point us that way when i hover over this it becomes a little finger icon you see that so it becomes a little finger icon um that's always nice to have and then we're gonna say when i hover over it i want it to become white as well so this gives it an element of uh so you see that now we get that nice little hover over white effect okay um oh we've got sami hey he actually landed a sixfigure job in new york but he goes hi sunny my new job is going well i just came here to say thank you as i received my first paycheck that's sick dude that is awesome i've been in constant contact with amanat as we share knowledge but amanda is insane dude i work with amnap every day he goes thanks and let's go dude that is awesome man that is so so cool and i think that's an awesome message for everyone here as well because it just goes to show that it's possible and it it's not it's not fake you know like so that's dope dude and everyone go ahead and smash thumbs up button and drop some love for some meat okay that's dope dude that is that is awesome to hear that okay now we're almost we're at 600 likes right now i think we can get to a thousand today guys let's go ahead and push this video out to as many people as we can the next thing we're going to do is style the header section so channels header so i'm going to go ahead and add this snippet and so we say sidebar channels header display flex justify content space between okay justify align item center padding 10 pixels background color black and then we've got the color gray okay that makes it pretty nice then what i'm going to do is um somebody said redux as it's using no no redux is just like the professional version of react context hey but just think of it that way for now okay but then what we're going to do is we're going to go to the sidebar header section that's why these two aren't inline because they're in a div and we're going to go ahead and say display flex and the line item center and you can see now we can see some similarities okay so obviously this is just because it's only using this much but you can see if we had it at that same size it's starting to look similar okay and remember we try and build our absolutely responsive you see that so it's quite a responsive design now with that said what we're going to do next is we're going to go actually go back to sidebar.js so over here and then we are going to go ahead and check out we're gonna go ahead and actually add in the channels list okay so channels list being all of this stuff here right so the channels list i'm gonna go ahead and create div so underneath the current div and i'm going to say sidebar underscore channels list okay now inside the channels list i'm going to create a component called sidebar channel okay so i want you want each of these to be a component itself and this one i'm going to say so i'm going to create a component called sidebar channel sidebar channel like this okay and also one day dude if we do in person events i would love to see you there to me that'd be dope man it'd be lovely to meet like everyone on the uh who's actually gone ahead and landed jobs from this stuff that would be awesome okay so here let's go ahead and do cyber challenge it's gonna freak out because we haven't got that component so let's go ahead and create it so here we say sidebar channel dot js boom and then we're gonna say rfce there we go and then i'm gonna say import sidebar channel.css this is the setup that we do every time i'm going to say class name of sidebar channel because this is just a bem naming convention we always want to be consistent now the sidebar channel is going to take three things okay eventually it'll take like an id as well but in the beginning right now it's going to go ahead and take um so right now we're just going to put this in right now so we're going to say id it's going to take a channel uh id in the channel okay but for now i'm just going to go ahead and make it very simple okay so i'm just going to say h3 and um let me go into the sidebar and have a look so we've got there we're going to have a div and we're going to have a h4 and the inside of this h4 i'm going to span a hashtag in so i'm going to say spam a hashtag and this is going to have a class name of sidebar channel hash so we can style that layer and then after that i'm going to say whatever the channel name is so in this case let's just call it youtube by default so it's going to be stuck on youtube okay and then let's go ahead and import this i'm going to click on sidebar channel do control spacebar boom auto import nice little trick now it says cannot resolve the sidebar css so if we go back um uh then we go back and we say sidebar channel dot css and then you see it gets rid of the error okay so works and then what we're going to do is we're going to just test this out now so let's go back to um our div and then let's just say imagine we just done this right like four times and you see it's actually at the bottom right now but now this is happening because we're making this use up as much possible space as it can now i'm gonna go back to sidebar and right now sidebar channels oh oops okay so make sure when you add this in you add it inside the sidebar channels div okay so you want it inside of the sidebar channels div otherwise you're going to get pushed to the bottom but you guys can see what flex one did in a column view okay so it pushed everything down to the bottom and that made it very very clean okay so oh this is pretty good question actually let's go ahead and check this one out so it says uh free code camp developer says sonny what's your take on redux i've read two books on it and used it in several projects but i really don't like it do you like it or think it's overly complicated i think it's heavy so i think it's quite a heavy uh state management tool but the new version of redux so that with hooks and everything like what we're going to use today is actually so damn clean so to answer this question in a nutshell go ahead and watch today's video see how we build everything with the new kind of modern redux and and you can go ahead and see but i think it would be uh i i understand the sort of heaviness of it but in the production environment it's going to be super handy and powerful so i wouldn't rule it out so sidebar channels list okay so then what we're gonna do is we're gonna go ahead and style the sidebar channel so inside of sidebar channel oops sidebar.css so i'm gonna go to sidebar channel and i'm going to go to sidebar channel.css i'm just going to pop this underneath so now we've got the sidebar channel css underneath and the code at the top that's a nice way of doing it sometimes guys um it'll make your code a lot easier to read sometimes okay so the first thing i want to do is i want to make it so when i hover over the text it changes color so i'm going to go ahead and do sidebar when i hover over the sidebar channel div so this one it's going to target the h4 element inside so the text and change the color to white and the background color should become light hey look at that this lovely kind of hovering functionality okay and then i'm going to go down and then i'm going to target the h4 so i'm going to say inside the sidebar channel the h4 element which is the text i'm going to say display flex because we've got a hashtag in there and i'm going to say padding left of 15 pixels align the item centrally background color make the text gray so you see that we get a nice little gray and the cursor should be a pointer so we get that little finger when we hover over it because it's always nice to get that okay um so melissa says i fill you with redux you follow the same path so yes that's exactly why i go ahead and teach you guys react context api first because it's the same pattern okay um what is awesome about these tutorials is that sunny uh always leaves some part of the projects you can make on your own i add extra functionality 100 and i really really think you should do that you should add extra functionality on top of it that will help you out and it will just make you different from everyone else okay um oh nice he's from watching it from birmingham nice dude based in london is awesome awesome okay um then what we're gonna do is we're gonna go down and i'm gonna style that little hashtag so boom and then i'm gonna say uh font size so i want the hashtag to be a little bit bigger so i'm going to say 30 pixels and i want to have some padding of 8 pixels here so as soon as we do that look at that immediate change let's immediately get a nicer user experience and now you can see it's looking a lot more like our actual app okay so this is very very clean we're actually moving very quick right now so this is good stuff the next thing we're going to do is i'm going to make it so that obviously in react you can have props okay so what we're going to do is we're actually going to pass in the goal here would be to pass in something but for now we're going to keep it as fixed channels and then we're going to when we build out the back end we're going to go ahead and change that up so this will be like the finished product where we can add our channels in here and i can basically say like a channel called abc and you can see like it will actually populate offer firebase i'm into our project okay um hey thank you so much brian he says something you're a legend can't believe that you are human making all these clowns super fast my brain can't take so many clones i'll keep on going mr robot hey i love that show thank you dude appreciate that all right so um and also guys if you're enjoying the build so far please smash the thumbs up button helps this video reach a lot more people and it helps you know bring more value to everyone in the world so that's good stuff now let's carry on guys we've got the sidebar channel going strong so we can now move back to the sidebar and carry on so the next part guys is the bottom part so down here you see where we have the voice connected and we have the actual user right here okay now i didn't actually realize it's stacked up like that that's pretty dope so now you see it kind of like it's very responsive but you see at the bottom we've got that nice little sort of user profile section and we've got the voice connected obviously this is not actually connected to anything but it's a ui okay um also daniel cartier said don't worry if if people like league stuff but the main thing is is that you don't get the community aspect that you would get in in proper javascript so you have to join the course to get the networking opportunity okay so now what we're going to do is we're going to go ahead and we're going to move outside of this div so outside of this sidebar channels div and we're going to go ahead and create the sidebar voice which is going to be responsible for this part so i'm going to go ahead and say div with a sidebar i'm just going to score voice right now inside of here what i want to do is i'm going to actually import a uh this icon right here so this this icon right here is actually called a signal cellular alt icon okay and it has a class name and we're going to give it a class in the sidebar underscore underscore voice icon and i'm going to give a font size of large yeah um thank you so much dude as well uh for the donation awesome okay now what i'm gonna do is um also guys uh i'm actually gonna go ahead and don't go ahead and spam guys with with some bad stuff because yeah um so we actually want to go ahead and import that icon so what i'm gonna do is pull that in from the top so there we go signal cellular oh icon and then what we're going to do is then what we're going to do is we're going to go ahead and go down here and create um where is it where are we going yeah i'm going to create a div sorry so i'm going to say dev dot um voice info voice info there we go oh sorry it should be sidebar i'll just go underscore voice info and then what we're gonna do is hey jacob says this is freaking sick nice dude um we're gonna go ahead and do a h3 so the h3 inside is going to say voice connected so voice connected and then i'm going to go here and i'm going to say p i'm just going to stream oops my emmit didn't kick in in time so what happens when you code too fast guys god dammit okay then we're gonna go ahead and do that so now if we look at our app we should see it looks it's pretty ugly down here but you know we get there so i'm gonna go ahead and scroll the screen up a tiny bit there we go so you can see it says voice connected and stream at the bottom of the page now we're going to get that up to the top and i'll show you guys how we're going to do that so let me go ahead and center it there we go so now what we're going to do is we're going to go ahead and say create another div chord sidebar sidebar underscore underscore voice icons like this okay and then here i'm going to have two icons one called info outlined icon and one called call icon these are going to resemble these two right here so these two icons right here so i'm going to go ahead and pop them in and i need to do the appropriate import for it so it's the core icon and info outlined so these two up here so these two okay then what we're gonna do is we're gonna go ahead and go down here to uh we're actually gonna start this right now because it looks crap right now okay so it doesn't look nice right now so i'm gonna go here and again what i like to do is drop the sidebar css underneath because that way you can see both pieces of code okay and then we're going to go here and i'm going to carry on styling it so cyborg.css uh what i'm going to do is i'm going to say dot side so sidebar voice i'm gonna say display flex position relative actually we don't need that yeah we say bottom no we don't need that either say justify content space between yep and then we're going to go ahead and say an iron item center and then we're going to go ahead and say color gray and i'm also going to give a background color padding and a border top so boom add that in and you can see it's all getting added at the bottom right so it's all down here right now um we will fix that though we will get that looking pretty clean so the next thing i'm going to do is target the voice info so this one right here okay then we're gonna go ahead and say boom voice info like so save it and you can see now it pulls everything to the left because it's saying voice info flex 1 which means that what it's actually doing guys it's actually saying that this should take up the majority of the space which is why it's positioned itself like that because flex 1 is saying like you know use as much space as you possibly can right okay and then we're going to say is the voice icon should be green because that's why it will look much cleaner that way so that looks a lot better doing it like that um and then we're going to go ahead and say voice info and target the h3 icon inside uh and i'm gonna make that green as well so you can see the little things the little things right uh priyanka says by the way those lights are killing me i know look they actually guys they respond when i talk like hey that's that's pretty cool yeah my girlfriend got him uh she's awesome so let's go ahead and carry on so i'm gonna target the p tag next i'm gonna make the p tag smaller so i'm gonna go ahead and say voice info target the p tag inside and say font size smaller so now we can actually go ahead and see down here um i'm going to say voice stream you see now that we just target the p tag so it's very small very neat okay and then we've got those two icons on the right yeah so we've got the two icons on the right so what i'm going to do now is material ui actually adds the class itself so now if i go ahead and say target the voice icons div so you can see at the top the voice icons this one voice icons and then i'm going to say material ui svg dash root that's basically the class that material ui gives us we're going to basically give that a padding of 10 pixels now i want you guys to pay attention to the bottom bit over here because that's where the magic is going to happen so you guys might be able to see this might not be able to but let me go ahead and pop it there as soon as i hit save boom just made it a little bit nicer okay and with that done we actually have the bottom bit done right so that bottom bits done very nicely now what we can do is we can go back to the um and guys if you're enjoying this and you haven't already go ahead and hit the thumbs up button because this speed right now is awesome and the energy today is is insane um uh oh sake i'm sorry dude uh because that link was of an offer let a screenshot no on insta so i shared you oh so sorry dude i thought that was uh because whenever people share g like google drive links uh we have a bot that sort of swipes it off so it's probably the bot that's taking it off but um yeah damn it dude sorry about that um just go ahead and drop a link again then people can see it um yeah now what we can go ahead and do is actually continue building out the final bit um which is at the bottom so we've got the sidebar profile right so the profile right now is the final piece here so this is where we have like sunny sangha and then we have like all your stuff being pulled through so let's go back down here let's go ahead and go out of this div and i'm going to go out of this div here this one let me go ahead and double check let's go ahead and close the css file and i like to click on this and it should show me that that's the div for sidebar voice so it's out of that div there we go we're gonna say div and then we can say sidebar underscore underscore profile boom and then uh yeah sorry about that second but um yeah just go ahead and share it again and that'll be awesome uh so then what we're gonna do is we're gonna go ahead and actually pull in uh a avatar component okay avatar and avatar component so i actually imported that at the top here and that's actually a course that's not an icon you can actually pass that thing like pictures and things like that okay so the avatar should pop in so you see at the bottom we have a little avatar that's there so we have the little avatar popping up right then what we're going to do is i'm going to go ahead and say there's going to have a div inside of it and this is going to have a sidebar profile info and inside that info we're gonna have a h3 tag which has a the user's name so in this case let's just do sunny sanger let's just do my instagram handle so sssango if you're not following me what are you doing go ahead and follow my instagram thank you nice you gotta plug yourself you know um and then we're gonna go ahead and do a p tag and this will be like the id okay so for now i'm gonna say um uh this is my id okay and then you can go ahead and see at the bottom and it's getting cut off a tiny bit right now but you see this is my id at the bottom over there okay and then what we're going to do is we're going to go ahead and after that we're going to have a div so it's a sidebar underscore just called profile icons profile icons boom and then we're going to go ahead and add three icons right now so these are the icons that you guys are noticing over here so these three icons all right so these three sorry it's frozen so these three over here that's what we're gonna add over there um jacob says you guys i got so cool i'll pay you if i had money don't worry dude just all we ask is just smash the thumbs up button that's it get this video out to as many people as we can okay and and that will be that's all i can ask for okay also yeah guys we hit 800 000 subscribers it's just insane nice insane right so next we're gonna go ahead and import the three icons so let's go ahead and pop them in here mic icon head to icon settings icon uh so i'm gonna go up to the top and pull them in so my icon headset and sayings boom then um then what we're going to go ahead and do is we should see them so react readers now we've got the three things over here okay so we've got this and we're just going to start it now okay um i always find it funny when people say the lights are disturbing you guys if that's disturbing you like improve your focus come on man shouldn't be looking down here you should be looking over there over there you know it's hard to figure out which way yeah um let's go ahead and uh we're going to style it now okay so sidebar i'm going to pull up the sidebar css i'm going to drag it down here so we split the screen in half and off and then i'm going to go ahead and target a few things now so let's go ahead and do profile info so what i'm actually going to do is i want to reuse the styles that i did for the voice right so you see the voice stuff over here so let's go ahead and bring it back um somebody says funny story when i'm doing programs in react while i'm speaking to myself i speak in a british accent that's so jokes um i know right the greatest is people just look at the weirdest things to critique i know dude honestly focus on the screen all right so now what we're going to do is uh where we had the voice the voice div over here what i can do is i just can just write comma and i can target the sidebar profile as well because i just want to reuse those styles right so sidebar as soon as i do that you'll see look at that it reuses it for that so so that's actually really handy it's a very nice way of doing it right and then then what we're going to go ahead and do is go down here and i'm going to go ahead and say sidebar underscore unscore profile info profile info and then i'm going to go ahead and say flex 1 padding of 10 pixels and then you can see it pops it to the side again right i mean you could do the same thing that we did before with that and i'm going to pop in this snippet here so these are two more selectors that we're going to add in so cyber profile target the h3 make it white that made the name tag white and then they i love this comment i got to shout out david jonathan goes huh that's true they don't want to pick a fight with marvin over the lights it's great honestly guys you want to pick a fight with her go for it i'd rather not today this is this is already enough all right then we're gonna go ahead and um yeah that's actually that's actually that done so that's pretty pretty sick guys so let's go ahead and we haven't had this in a while yeah i don't know i'm not a fan of the the the blowhorn anymore you know i like the music instead um so what we're going to do now is do all right then we're going to do nice we actually have this pretty much done so look at that it's looking pretty good and what we can do is i can actually go ahead and load it up with an image so let's go ahead and i'm going to quickly find an image um there's nothing wrong with being alone by the way so i see people saying priyanka why are you saying are you going to be alone it's fine to be alone because he's having a good time he's on vacation right now it's time to i'm on vacation you know sorry it's so good so avatar here we're going to say source i'm going to basically pop in an image of me so this is on google images and then boom see my my image just popped in down here the smart developer right and then what we're going to do is we're going to go ahead and build out the chat part now okay so we're done with the sidebar for now we'll come back to this in a bit let's go ahead and create the chat component so let's go into app.js and you see here we've got we can get rid of that comment and now we're going to build out the chat okay so here i'm going to say chat like this and first thing we're going to do is actually apply some stars to app.js okay so i'm going to go into app.css and in here what i'm going to do is i'm actually just what i need to do is say app display flex and this is because remember i applied that earlier rule where i said 0.25 right 0.25 is where uh it's taking up 25 on the screen and we want the chat to take up so now look at that ooh we're getting there okay we're getting there okay so the next one uh oh thank you dude saket says really want to talk asia about the job i'll let him know dude honestly he knows about all these jobs as well which is awesome i don't know thank you both literally smash thumbs up that's it that's all we ask dude and get this video out to more people so we can help more people get those jobs um so save it go back i'm going to create a chat.js so chat.js boom and i'm gonna say rfce and then we get the chat icon then here i'm gonna say chat component sorry class name equals i'll say chat and also guys if you're enjoying this right now shoot an instagram story tag me in it down here and go ahead and post it on instagram because i'd love to see you guys love to see who's watching and it's always nice to go ahead and engage with you a lot so yeah let's go back and i'm going to go ahead and say import import um thank you so much dude for a donation he goes i was working in deloitte and i got laid off i don't react but not getting confidence to give an interview selfconfidence is negative help me with advice dude continue building the clones it will build your confidence up join a community like profit with javascript so we have a link in the description or it's a cleverprogrammer.com.pwj if you want to check it out and we pretty much help you we hold your hand the entire way uh but there's a free training in the description as well so the clones free training in your description make sure you join all of that and that will help bring up your confidence um yeah uh so let's go ahead and somebody said maybe watch your first video on youtube yeah go ahead and subscribe to my youtube channel say sango um so now what i'm gonna do is i'm gonna go ahead and finish off the import so here i'm gonna say got four slash chat dot css go ahead and create a chat css so chat dot css go back and then here now what we want to do is here i'm just going to say h2 saying i am the chat screen okay let's go ahead and do that and then we're going to app.js go back here we need to import so i'm going to do control spacebar auto import and it pops in up here and we have it so it says i am the chat screen now okay so moving at a good speed guys uh let me know if you're enjoying this in the comments right now um i'm gonna have a quick war break if you guys need to right now have a quick water break um just stand up you know stretch out okay you know like it always kind of helps to have maybe a coffee or something so like you just kind of like stand up stretch out if you need to make sure you have water everyone always says to drink so much water like dude i couldn't live without water so i mean so many people like they don't drink enough water okay now let's get rid of our comment so we have these two components okay um preentry we actually set up the template in redux so yes we will be building our redux in a sec so now what we're gonna do is go to chat.js and we're going to go ahead and build out some stuff here so the first thing i want to do is build up the chat header so the chat header is this part right here so this section over here so you'll notice once i'm inside of a channel for example here you see this like this kind of header is what we want to build right now and then oh i love this dude you will be just like me just carry on working dude and do not quit and anything's possible right so um then what we're gonna do is where it says i'm on the chat screen so now here i'm gonna go ahead and create a chat header component so let's go inside our chat and then in here i'm going to say chat header right so let's go ahead and create a chat header component so chat header.js boom and then here i'm going to say rfce like so come down here to div say class name equals chat header and then over here i'm going to say import chat header.css boom and then i'm going to create that file oops not like that let's say go ahead and do chat header dot css and then we have that up and running so that works and then here you can actually just go ahead and do yourself a sanity check say history i am the header go back to our chat dot js component and then here control spacebar auto import save and it's there i'm the header okay this is vs code anyone wondering so we can get rid of this one and we can say i'm the header so we know that's there now right so what we can do now is we can click into our chat header component and then here let's go ahead and build this out a little bit so we have two sections we have the chat header left and we have the chat header right so chat header left is this bit and the chat header right is all of this stuff okay so i'm gonna go ahead and uh create that now so i'm gonna say div uh chat header underscore left and i'm going to do another one so i'm going to say div uh chat header on the screen scroll right like so the chat header left is going to consist of a few things it's going to have h3 the h3 inside of it will be where we have the chat name so all of this stuff this is the h3 that we're talking about and here i'm going again what we did before i'm going to span i'm going to span with a class name of chat header hash so i can style it afterwards so what that did to make this very clear for you guys is you can see it like it spanned that okay so now we've got a hashtag and i can target this hashtag right now for the channel name so here again i'm going to do a test channel name so test channel name but what we'll do is we'll be using prop soon and that will actually go ahead and help you out um so let's go ahead and do that so you can see it says test channel name we'll start that in just a sec and then the right side what we're gonna have is firstly we're gonna have three icons so i'm gonna have pop them in here so i'm gonna have three icons notification icon the edit icon and so forth and i'm gonna go ahead and pop those in right now save and you should be able to see those three pop in okay so oops and then so then you can see these are the three icons here so we're gonna start that in a sec and then what i'm going to have is i'm going to have the search field so here i'm going to create a div for this i'm going to say chat header under squander source search like this and then here i'm going to have an input and this input it's all by the photo is type text so i'm going to say placeholder should just say search okay uh tommy gian yes this is good actually have you ever tried using dotmodule.css yes that's actually very good so that's a really good comment the only reason i didn't do it today is because people are used to using just the typical bam but that's really good dude um and i will be starting to use that i just didn't want to kind of overload everyone with redux and that because if you notice when you sort this up uh it actually by default does dot module so uh really good really good point okay now um we're gonna go ahead and do uh placeholder oops this is not right please hold a search like this and then we're going to go ahead and do a search rounded icon so i'm going to go ahead and pop that in here and obviously when we use that we're going to need to import it so search rounded icon just go ahead and import at the top save and you'll see there and then outside this div i'm going to go ahead and add two more icons so like such so these are going to be these two so now we have to import those as well oops so i'm going to go ahead and import those at the top over here like that and then we can see now we have everything we need now so i'm going to make this i'm going to make this sorry all of this nastiness look like this right so this is where the magic happens this is where all the sort of like it comes together it looks really really clean so what we're going to do first is i'm going to go ahead and do this because i think this helps you out a lot when i pop this underneath like this also we're nearly at 800 likes guys so come on let's keep pushing that number up if you're enjoying this and you haven't already smash the thumbs up button and it will help this video get out to as many people as it possibly can and that will help a lot more people get value from this video okay um so we're going to go here we're going to say chat header and i'm going to actually pop this up i love having this on the screen so i'm going to go ahead and delete the ima header you don't need to say that um so here i'm going to say chat header and then here i'm going to say display flex display flex and then i'm going to say justify content space between all right then i'm going to say align item center i'm going to say color is gray and i'm going to say padding of 10 pixels right so we can do that boom see it already starts to look a bit different then i'm going to target that hash remember so the hash that we talked about before um i'm going to go ahead and pop this in there so this is the hash uh this one over here so now the hashtag is a bit bigger now you can see that it changed it a bit so i need to target the h3 and i need to make it like fall into line with this so what i'm going to do is i'm going to go here and say chat header left so the left section which was this bit when i say display flex align the item centrally so the span tag as well save it and boom so the color is white but that's fine for now because i'm going to go ahead and make the background color of that actually changed to um something else so in a second i mean for now what i'll do is i'll comment this out so you can still see it okay but that will be why afterwards because here we want it to be white um and then in the chat header right so let's go ahead and target this we're going to say chat header right and then here i'm going to say display flex alignment center flex 0.5 justify content space between so this will actually go ahead and make it so that this takes up uh the rest of the remainder of the screen there okay so what i need to do now is actually go down to target the icons themselves so i'm going to go ahead and say chat header right target the material ui icons give them a padding of 5 pixels and make them a cursor pointer so you see when i hover over it now it's a pointer that's always nice as a user experience okay and then we're gonna go back and then we're gonna go ahead and make it so that when we hover over it it changes it to white okay so you'll give it a nice user experience right now you obviously you can't see it but if i was to make this red you guys can clearly see a visual indicator as to like when i do that okay so i'm going to make it white and then i'm going to change the background color after now for the search field to get it looking the way we need to first thing i'm going to do is go ahead and target the div i'm going to say display flex align the item centrally the color should be gray of the text background color should be a darker gray border radius three pixels so that way it's not like a set horrible border and then a padding of three pixels so do that and you see it becomes like this and then we're going to target the actual inner input right so we're going to go ahead and actually target the inner input background should be transparent the outline width should be zero uh outline which means that when i sort of you don't get that blue outline but if i get rid of this line and i go here get this horrible blue outline so that's what we don't want that's what that line of code does color white so the text is white border none so that way it just becomes this nice one big border okay then what we're going to do is we're going to go back to chat dot css and in here i'm going to go ahead and say chat display flex flex direction column and then i'm going to go ahead and say flex 0.75 because i want this to take up the remainder of the space and then i'm going to say background color should be of a darker gray so this is actually in chat.css if you guys are confused and then you can see it changes it to that so then i can go back to my chat header i can go to the left section uncomment out the white again so now you can see all the highlighting works as we wanted it to okay and then we go back to this chat dot css and then the final thing i'm going to do is make this actually a hundred view height so there we go that would be handy for later i'll explain where that comes into play in a bit um okay so dope we have the um thank you so much flick shot because uh it's 3am he'll be working this hot piece tomorrow morning you're like an angle in this angel in disguise thank uh for the beginner react developers appreciate that dude and as if anyone else is interested in watching afterwards remember it's going to be recorded okay see han says i don't know redux should i continue watching hell yes continue watching and it will make sense so don't worry um this is completely beginner friendly if you haven't used reacts before it's fine don't worry pattern recognition okay um somebody says why are you not using bootstrap trust me when you get into professional um environments bootstrap is not the way that you always want to go so learn how to do it and um yeah that will help you out uh goodnight apprenticeship um okay so now what we're gonna do is we're gonna go to the next section which is so it's actually starting to look very similar now okay we're gonna go ahead and create the chat so let's go into inside of our chat.js and we're gonna actually go ahead and first now right now we're going to go ahead here and we're going to say so we have the chat header done the next bit is we're going to have chat messages we're not going to build this out just yet we're going to build that after so chat messages and then we're going to go ahead and say chat input now the input is of course the bottom part so this input down here let's go ahead and build the input first and then we can go ahead and build the chat messages afterwards so for the input we're going to have the add circle icon we're gonna say it's a large size so i'm gonna go ahead and do that um oh awesome dude thank you so much for that donation uh can we have a medium clone of course we can have a medium clone okay um thank you so much to greg stevenson he still surprised me with how good he is explaining this stuff even to complete newbies appreciate that dude appreciate that a lot um okay no we're doing the back end as well so it's going to be all powered up um we're using firebase to do everything so and i'm using vs code kevin patel all right so now we're going to go ahead and inside of chat input i'm going to go add circle icon i'm going to remove this you guys can see it need to import add circle icon so let's go ahead and do that there we go and then down here i'm going to go ahead and say i'm going to create a form because i want to have it so i can submit the form get rid of the action because we don't want that and then in here i'm going to have an input field and this is going to be the one which says message youtube so here i'm just going to say placeholder as for now we're going to give it uh something basic and we're going to say message hashtag test channel ccr1 is over here message test channel okay and then we're going to go ahead and do button and the button type is submit so that way when we hit the enter key on the input field it will submit the button and here i'm actually going to say send message but we don't want to show this button so this button isn't actually visible so you see here we don't actually see the send message button but the functionality works when i hit enter right so there's a little trick we're going to do for that and i'll show you how to do that okay and then what we're going to do is we're going to go ahead and say set a class name for this we're gonna go ahead and give this a class name so i'm gonna say um class name chat input button okay and then i'm gonna go and give underneath this form i'm going to go ahead and say uh chat underscore underscore input icons okay uh i love this one dexcode says hey papa react here saving live since appreciate that dude and any man any positive impact that's what that's what we're aiming for um so we're gonna have three icons here right these three icons are gonna be these three icons that you see in the bottom right um so let's go ahead and drop those in save it i need to import those because it's screaming at me right now let's go ahead and pop those in boom uh for getting one which is emoji this one save it and there you go so now obviously this doesn't look very nice i'm going to make this look like the finished product so let's open up our chat.css and let's drop it underneath like we like to do that and then what i'm going to do is we're going to target chat input so go here and then chat input has quite a few changes that we need to make so let's say chat underscore underscore input um like this input go down here and then what i'm going to say is i'm going to say color is light gray okay so the color is light gray display flex boom and everything goes into that then save align item center everything pulls into the center justify content space between and then you see everything should push apart and then we say padding of 15 pixels padding of 15 pixels hey check this out dude just got a nice donation from divash kumar thank you so much he says um lots and lots of cheers for the running project and thanks for making people grow their confidence on their learning appreciate that dude waiting for some challenging illustration sonny hey i will give you a quick illustration once we uh get to the trickier part okay but thank you so much for that donation awesome so with that done chat input is then panning 15 pixels now i'm going to go ahead and do border radius margin border top and a background color so i'm going to paste a snippet here boom save it and you see we get a nice little outline now i'm going to target the form so i'm going to go inside the form inside the input like so give it padding 15 pixels make the background transparent of the form uh border none outline width remember that little trick color white font size lodge save that you can see it starts to look a bit nicer we're not done just yet though we have to make the chat input form flex 1 so it takes up the majority of that container space if i do that you see it does this okay now the input we also want to make width 100 so we're gonna make it take up as much room as it can okay uh actually in this case let's not do that just yet uh for the send message so the actual input button i'm gonna do display none so we don't see the button because we don't want that button right here i'm going to say width let's just give it 100 pixels let's see if that works again yeah there we go width of 100 pixels and that works a little bit cleaner okay now um all right now what we're going to do is we're going to go to chat input form um we're going to go to flex 1 input icons material usi so now what i'm going to do is actually going to style the icons inside on the right give them a little bit more padding so let's go ahead and do that chat and chat input icons target the ones that you get given and then save it um i appreciate that does i know it's always something explained so elegant and easily appreciate that dude uh so now you can see look at that we've got a very nice comparison right so this is actually looking very nice right now okay um so this is very close to what we want now what we're going to do is i want the middle bit so the messages to take up the remainder of the space so whenever we have like a flex design so especially a column design what we actually have without realizing is so flex column so this is the top element this is the bottom element so right now we have two elements in this one so right now we have two but what i'm going to do is i'm going to add the third element the chat dot messages and i'm going to say this should have flex 1 and now what this does flex one is basically going to say all right you should take up as much room as you can right so this container should take up as much room and it pushes the thing at the top to the top pushes this one to the bottom and that's why we get this nice sort of ui so what i'm going to do now is where we have the chat messages if i simply go here and i say chat messages flex 1 we get that desired output outcome so we can say flex 1 and boom see that it went ahead and did that so literally i put back my drawing and it literally just did the exact same thing that's why we get that so now anything we put in this space right here is going to be the messages that come through okay and that's going to be pretty pretty awesome okay uh i definitely agree with ceon he says i think coding is kind of an art well done i definitely think it's kind of an art like as soon as especially when you get like a flow state and um uh nice because you made my friends jealous when i made whatsapp man cone today waiting for the man stack yeah so shout out david david drop the man stack okay now what we're gonna do we're gonna go ahead and build some of the messages okay so let's go ahead and check out chat.js chat.js and we're going to go inside of here all right so now inside of the messages div here we're going to have a message um we're gonna have a message component and we're gonna have it several times based on like if there's 10 messages 15 messages or something like that okay um somebody says imagine life before flexbox damn i don't even know what anyone i remember i remember what life was like before flexbox it was a headache man you had to do all sorts of breakpoint rubbish um i still use breakpoints they're good but you know i don't use them as much um now here i'm gonna say the message is gonna take three things it's gonna take a time stamp a message and a user but for now we're just going to make it a simple message so it says message is not defined so let's go ahead and do message.js so message.js boom rfce save it and then here i'm gonna say class name equals message equals message and then i'm gonna do import message dot css save it go ahead create that message dot css go back get rid of that and then here what we're going to say is very simply so inside a message we have a few things right we have an avatar an avatar and i actually imported that from material ui and that's going to have some kind of source and then we're going to have the message info so this will be like the the username the the message the timestamp and all that sort of stuff so the stuff that you see over here right so over here we have the message info so we're going to say message underscore and score info all right oops info and then here i'm going to say h4 entitled up and then it's going to say um this one's going to be let's just say like my username says this is anger if you're not following me again go follow me um and then we're going to span a timestamp in here so i'm going to give this a class name of message timestamp and then here i'm going to go ahead and say this is a timestamp and we'll replace that with the actual timestamp in a bit and over here i'm going to say a p tag which is the actual message this is a message okay uh also awesome stuff man calvin commander thank you so much for the five canadian dollar donation all i gotta say is god bless you guys for this value also is there a way to make these clones mobile responsive because i like to use them with friends yeah so uh we try and build it with a goodbye firstly thank you so much i'll keep that up on the screen for a little sec uh thank you so much dude uh and also yes so we try and make it as much as responsive as possible from the like the perspective of how long the builds last and how like you know how much we can fit in inside of a live stream but we can definitely focus more sessions on pure sort of responsive design i'm definitely down for that but again we have react native stuff coming we have readouts coming we're just you know we're trying to get out as much as we possibly can um but i appreciate that kevin always good to see you and um okay so let's go back and um let's go to our message let's see how it looks so let's go back to our chat.js go ahead and do our little control spacebar trick auto import save it and then you can see this is the message so if i go ahead and let's do three messages down here we want this to look like this okay so now what i'm going to do is i'm going to go inside my message inside message.css pull this down underneath pull this down underneath then i'm going to go into mymessage.css and i'm going to say dot message and the first thing we'll do is display flex uh align item center boom and we should see that then we're going to say padding at 20 pixels because we don't want it that close to the end and i'm going to say color is white okay color of white and then we're going to say the message info should have a margin left of 20 pixels okay and you see it spaces away a little bit and then we're going to say message timestamp and this one is going to be color gray oops let me go ahead and say color gray and i'm going to say margin left of 20 pixels okay save it and then we're going to say font size of extra small so this one should be like an extra so right now the time stamp shouldn't be the same size just looks a bit strange it should be a bit smaller so i'm going to go back here and i'm going to say font size font size of 20 uh extra small sorry extra small so these are the predefined sort of browser ones there we go okay so that looks pretty good right now um what i'm going to do is i'm actually going to get a picture uh but you know you know for now we'll use this one and we'll sort of plug in our values afterwards so at this point this is kind of cool right we have things working pretty nice but we can do better all right firstly we're 850 likes smash that thumbs up button if you're still watching and you haven't already uh and yeah we're gonna we're gonna hit a thousand likes today guys just go ahead and keep pushing it to bring up the energy for the future builds um but with that said what we're gonna do now is go ahead and um i think at this point we can actually go ahead and maybe start introducing some firebase stuff so uh let's do that actually it'll be fun so what we're gonna do now is go over to our firebase then we're going to go to cloud firestore okay um hey i love this sanja because it's already 1 21 am here but i'm awake because you're super tutorial sunny and an extra next tour please do an admin panel yeah we'll work on the admin panel soon i will come home soon so cloud firestore you want to click create database and then we're going to say start in test mode click next any location is fine click enable you need to do this to get everything up and running okay um okay so uh almost at 900 likes guys almost at 900 likes appreciate each and every one of you watching we still have 300 people watching across facebook and youtube so that is insane thank you guys um and i'm sure we're gonna get that momentum back up and flying again um okay so there you go we have that up and running then we're gonna go into authentication and we're gonna go sign in method and here i'm gonna enable google sign in okay so you need to do this uh here i'm just gonna enable an email click save and you need to do this for the logging in step okay um somebody says love your programming what would love you to have you as a programming mentor i do do mentoring uh drop me a message on my instagram and i'll be happy to have a chat um so okay so um somebody says it's a good question actually he says someone says after 30 days it comes to cloud firestore database will be expiring soon to fix that problem go into your cloud firestore go to rules and then go here and then basically get rid of this line all right get rid of this and just do a semicolon allow read and write publish it and that's it you'll never get that annoying message again okay that'll save you a bit of headache okay so with that said now let's go back to our code and oh yeah so what we wanted to do actually is go to this little cog right remember we saved the config earlier but we're going to grab this config again we're gonna grab that config and then we're gonna go back to our code i'm gonna do command b and then we're gonna basically create a file called firebase.js and i'm gonna paste it inside of there okay so now we have this the next thing i want you guys to do is pull up a terminal say mpmi firebase we need to install the firebase dependencies so that we can go ahead and do everything inside of that we need to do with firebase the next step is we go to the top of the file and we say import firebase from firebase because it will be installed right and then what we're going to do is we're going to go ahead and say uh const get a firebase app and initialize the app with the firebase config so this one right here that's the first thing that'll basically like set the app up and connect everything that we need the next bit we're going to go ahead and grab the database so we're going to make say go ahead and grab firestore and store it in this variable and then we're going to do the same for authentication and then the final thing this is where we have the special googie login functionality is we say const provider equals new firebase.auth.google auth provider okay so that's going to be very important for the next bit and then we're going to go ahead and export the authentication and provider as explicit imports okay and then we're gonna export a default export which is the database because we use the db more than we use these two so i'd like to make that the default and if you don't know the difference between explicit and uh implicit then i recommend go ahead and check it out but at this point it's not that important okay so with that said almost 900 likes crazy stuff okay so with that said we're gonna go ahead and um we're going to create a let's create the login maybe okay so right now we have this right here right but i want to have some login functionality and then i actually want to set up redux and get redux up and running so right now it created a some it created redux for us like the sort of back end of redux okay now today i'm going to be showing you how to use redux from the tutorial um you can actually add other so nagesh says can we add in other authentications like facebook or anything else yes there's facebook github loads of different uh ones that you can add so if you go to authentication you can see on the sign in method all of these ones you can go ahead and add they just have different implementations um but we're gonna use google today um so here now what i'm going to say is i'm going to rename this to become this one i'm going to say rename it to the user reducer because we're going to basically have one area of our data layer which is permanently for only the user stuff so we need to go to our counter slice rename this file to be user slice and i'll explain all this in a sec user slice and then what we're going to do is we're going to click update imports i'm going to click no so i'm going to show you guys where we actually need to update it but then what i'm going to do is i'm going to go ahead and change everything in here that says counter to user so it's user slice now so it's going to say const user slice equals create slice and we're going to the name user here we're going to have initial state of user this is going to be no and again this is the stuff where you can pretty much just go ahead and copy along and uh pattern recognition in this case i'll explain a bit of what redux is doing but you don't actually need to know fully as at this point as to where we just need to know how to use it okay so i'm going to go ahead and get rid of these i'm going to say create a function called set user for when we actually log in well let's just call it login let's call it login and then i'm going to say this will take a state and an action right and then we're going to create another one which is going to be called logout and then this will go ahead take the state as an argument and then it will when we log out we basically just want to go ahead and and set the user to know again okay um whereas when we log in we're going to get rid of this stuff when we log in what we will do is we'll set the user to whatever the action was plus let me go ahead and double check we're gonna say whatever the action.payload was whatever the payload was we're gonna wherever we pass through as an action uh this will make sense in a bit guys and we're gonna we don't need these three we're gonna go ahead and say log out log in sorry log out so we're gonna export these as actions so that way we can use it throughout the app now we don't need this stuff we can go ahead and delete that and then we don't need the comment here but a selector is basically how we can go ahead and grab this information once it's done okay so we can go ahead and do this so a slice is a store no so the store is like a so i'll show you in a sec i'll do a little drawing but over here we're going to say select user state.user.user because it's the user slice and it's the user piece of state okay and use that okay so we're going to do a quick drawing for you guys to visualize this okay so we have an app all right we have an app so freeze whiteboard okay so we have our application so let's just go ahead and say um discord clone all right so we have this app and discord clone right now when you have an app you have a few components inside of your app right so you have like your app.js at the top um so this one will be like app.js and then you have a few apps underneath things underneath you have like the chat right so you have the the chat dot js so i'm just gonna say chat you have like the header component underneath oops you have the header component right and then you basically have this tree that starts to grow right so you have this and this goes to this and then like for example the chat has like a message component and so forth okay now what we can do is so you have this kind of tree and then the header would also have its own components so like it's just gonna say dot dot dot so this would be like another component okay um now the point is is that say for example we had a login component okay so let's say we have a login component over here right and app.js connects to our login component now imagine we had a user here right so imagine we had a piece of state where the user is here and we set the user over here so imagine when i log in you basically go ahead and get the user's information now if i want to get the user like if i need the user when i whenever i do a message down here then what i need to then do is basically pass the user over here and then i need to pass it to chat component as a prop and i need to pass it down to message as a prop and it kind of gets really messy what if i need it down here as well i need to basically go ahead and pass it to the header and then pass it to this component and now already it's getting messy right we don't want this this is a headache right so what we do instead is we kind of say forget all this stuff and what we do is we introduce something like a data layer so imagine like an onion right it's like imagine like it's like an onion and this is what we call like our data layer right so i like to refer to it as a data layer or in this case it's going to be redux okay now the data layer in this case it has multiple slices inside of it so just like an onion but you have different slices in your engine so we're going to have something like called the user right so the user slice and this will have all the information about a user and then we're also going to have something like the uh the app slice this will have information which is like generic information about the app so which channel are you in so we could call it channel slice but in this case i'm just going to say app slice right now the benefit here is when we get the user at the login what we can do is we can actually just go ahead and push it into this data layer so in this case i would push it into the user slice right so let's go ahead and just move it over here so imagine i had the user slice because remember just like an onion has different layers we have the app layer the user layer so in this case we have the app the user slice so i push the user into the user slice and then wherever i need it i can go ahead and just pull it out because this the layer is surrounding the entire app so here i can actually just go ahead and get the user from the slice that we pushed into so we can push in at this point grab it at this point if i need it over here i can do the same thing i can just pull it from the daily so if i need the user at this point and you see it doesn't matter where we pull it from but i can go ahead and use it so this is going to be really really high i'm just checking the comments so um nice this week i've already took leave for three days from office just to learn react yes from sunny damn dude thank you so much uh that's awesome to hear that um i love this stuff okay yeah so this is essentially redux in a nutshell okay so we have like different layers of the onions so like and the reason for this is because you don't want all of your data in one place right we want to have sort of a place where it's all the generic information a place where it's the user's information only and it makes the app easier to maintain so with that said we're basically going ahead and create the user size first so the name of the slice is user and so forth so we go back to our store.js and here this is where we configure the store so the store is essentially this layer so essentially this onion pill thing right and this consists of like the user slice but we're also going to create an app slice so i'm going to create that right now and the reducer is just something which listens to action so an action is what we do here so imagine when we log in we push the user and then at this point through a login action and then if we log out we can push the user in as a logo action so it basically is the user state and then everything listening rerenders based on if it's listening or not so what i'm going to do now is i'm going to go ahead and i can delete these two delete the counter and count this slice and we're going to go ahead and create app slice.js and then what i'm going to do is i'm going to copy everything from user slice i'm going to rename everything to app and we're just going to go through and make a few changes so app slice create slides the name of the slice is called app here we're going to basically we don't need this this is just going to be uh blank for now but we could we're going to have two pieces of information here we're going to have the channel id so this will be the id that you of the channel that you're in so in the beginning it starts off as no and we're also going to have the channel name and in the beginning that's no right now in here we're going to have something called set channel id um and then this will actually go ahead and set off some information we're gonna we don't need this one and this one will say set channel id oops set channel id and then here where we have select app it's not gonna be this it's going to be select i'm going to have two i'm going to have select channel id and select channel name because we have two selectors here to go ahead and get us the channel id and the channel names you see it goes inside that global onion layer and it goes inside the app layer of it so the store the state and it goes into the app layer and goes and gets the channel id goes into the app layer and gets the channel name and then we're exporting it so we save that go into store.js and then we go ahead and import it like so we basically go ahead and we just go ahead and change this the app slice there we go and it's literally that easy to connect it right now you see the app isn't freaking out everything's good now if i go ahead and inspect it so if you go ahead and grab the redux dev tools you can actually go ahead and check the state so let's go into the state now you can see look the user states set up so inside the user slice remember like i said we have these two app slice and user slice so we have the app slice and the user slice the app size has the channel id channel name the user size has the user right um so this is going to be really really handy um to go ahead and do it and this will actually handle the sort of persistence all that stuff and it'll do everything for us so with that said now what we're gonna do is we're gonna have it so that um so we now have our store essentially set up okay but what i need to do now is create a login okay so a login so what i want to do is i actually need to pull the user at this point so just like we said here i'm going to pull it in at app.js so i'm going to basically go ahead and say give me the user at this point okay so give me the user now how do we do that we go into app.js and we basically go ahead and we do the following we say const user equals use selector so this is a special hook and we can import that from react redux and then basically what we do is we go ahead and remember in the uh user slice we created the select user hook a select user sorry uh selector it's called and this basically goes into that piece of state and goes ahead and grabs it okay so we basically go ahead and we can go ahead and say import the select user selector from sorry features use a slice like that okay and then what we do is we just pop it in here so we pop it in there and that will actually give us the user believe it or not okay so and then what we're gonna say is if there's a user now okay so if there is a user so for example if you're logged in then only then do we render the actual app so we need to if we do this it freaks out right actually because it says passing elements must be in a uh wrapped in an enclosing tag so in order to get around that what you can do is you can go ahead and do a fragment or a div whatever you want to do but this will go ahead and do that and then we have a ternary here so we can go ahead or test returnery operator so the redux what would be the difference from the context uh so the slices is one thing also the dev tools is much more maintainable plus you can have things like uh mid middleware and things like that so it's a lot more production you can add a lot more to redux it's been around for a long time it's the reason why it's not around for a lot longer and if we don't have it you're gonna say you need to log in right you need to log in and save so see right now we don't have a user so we need to log in okay so right now if we check the state so let's go to our redux and then we go to our state and user is no so that's why it's rendering you need to log in okay i understand it could be difficult in the beginning but don't worry i remember when i first saw redux i was like but it makes sense trust me just keep practicing it like anything you get used to this stuff and it makes a lot of sense now what i'm going to do is i'm going to create a login component now so i'm going to go here i'm going to create a new component so tomorrow's build uh we we might use redox yeah let's let's go ahead and do redux in tomorrow as well as well i mean redux in tomorrow's video may not be as necessary but i think we'll do that yeah so login.js all right rfce import login dot css boom go here class name equals login go down here h2 i am the login page save it let's go back to our app and rather than rendering this i'm going to render the login page i'm going to go ahead and do control log login boom um somebody says melissa says just keep following the pattern with redux yes exactly so i would recommend you learn the react context api the pattern you then pick up on the sort of reducers and what the heck is a reducer in action and all that sort of stuff um but to give you a quick breakdown again um remember we have the apps and they follow sort of like a treeslike structure okay now this prevents a problem called prop drilling when we introduce something like a data layer or like redux you don't want to have prop drilling okay that's where you basically pass your props from one component to another you don't want this okay so you don't want that so what we can do then is we introduce something like redux and then you have different slices inside so you have the app size the user slice this will contain generic information about the app the user will slice will only contain information by the user if you had like a ecommerce app you would basically have stuff like the basket slice and things like that you know and what you can do is that any component you can push in via an action into that slice right and then in any component you can use a selector to go ahead and grab information from the slice right so that's what we're doing so here now inside logging.js it says cannot resolve login css so i'm going to go ahead and create login.css boom save it and here we go it says i'm logging page so good everything's good at that point so i'm going to go ahead and remove the comment for now and then what we want to do inside of our login component what i'm going to do it's going to be very simple logan come on we're going to have a div which says login logo and this div is basically just going to have an image tag inside of it right now i have the discord logo image here so i'm just going to go ahead and paste that in it's just a simple one i got from google and then i have a button right and the button is simple it's just going to be a button it's going to be a material ui button so that's why we use capital b and then it's going to have an on click oops and it's going to say sign in sorry and then here it's going to have an on click which is called sign in right so we need to create that function and then um we're gonna go ahead and say const sign in and this takes an event um but i mean at this point we don't really care about the event because it's just one button click so we don't even need that and then here we can actually go ahead and do the sort of do clever log google login cheers right this is where all the magic sort of happens okay uh oops i didn't get rid of that comment okay uh thank you so much ritik saying uh love you bro bro appreciate that dude um so now what we're gonna do is we go ahead and import the button so material ui just like that and put the button then we have the button here okay so i'm going to go ahead and style this to make this look a bit better before we go ahead any further so let's go ahead and go to our login.css right so login.css and then here what i'm going to do is go to login.css and i'm going to drop this underneath like we do before because it's always easier for you guys to see this and here i'm going to say login okay now for the login i'm going to say display grid um sorry not display yeah it's display grid it's a very neat trick by the way say place items center it's a very very nice trick save it and there you go okay then i'm going to say height of 100 view height and width of 100 100 and this will actually go ahead and center everything in the middle of the page so it does a neat little trick okay um and then what we're going to do is we're going to target the button and i'm going to say targeting the button say width of 300 pixels the background color is discord color the color is white the font weight is 80. but you see when i hover over it comes to default white which we don't really want that okay it's going to be super confusing i'm just gonna make myself smaller for you guys to see that a bit easier because i think i'm getting in the way there we go and then what i'm gonna do is i'm gonna make sure when we hover over it inverts in some way so i'm gonna say when we hover over the button change the background color to back and then the button to that text you see and then it goes like this which is a bit more of a nicer user experience you change that to whatever color you want really to be honest okay then what i'm going to say is i'm going to go ahead and target the inner div which is the login logo display flex flex direction column and then i'm going to target the inner dev image uh we don't actually need that line yeah image i'm going to say object fit contain which basically keeps the aspect ratio right and then we're going to go ahead and say height of 150 pixels so now we get this beautiful design okay now that's the styling bit done okay so smash the thumbs up button if you're enjoying this because we're about to i'm about to teach you guys how we introduce google login okay oh man you get yeah well thirsty when you're talking at that speed right now what we're gonna do is we're gonna go ahead and do the following so yeah now what we're going to say is i need to import auth so let's go back yeah i'm going to import auth but i'm not going to import it like this i'm going to import for my local firebase right so i'm gonna go here and i'm gonna go ahead and say import auth from local firebase and then because we already set everything up for that okay and then we're gonna go ahead and say uh aus dot sign in with popup sign in with popup and here we need to import the provider as well so i export that earlier so i'm going to say export import provider sign in with the provider okay and then all i need to do here is just say catch right i don't care about when it succeeds and i'll show you why yeah i'm gonna say and catch the error if there is an error and do an alert and i'm gonna say show me the error message if there is an error message right now that might seem like whoa whoa whoa like something can't be that easy man like it just can't be that easy if i click sign in whoa check this out everything loads dude so you need to make sure that you actually went ahead and enabled it in here otherwise it would freak out at this point but for example i'm going to show you guys an error so if i click another sign in box or if i close it early you see it says the operation has been cancelled due to another conflicting open window and it popup has been closed by the user before finalizing the operation so you see it caught the error and it just showed the alert right which is what i wanted but if i go ahead and sign in say if i sign in it will redirect back to my app and you see nothing happened right but i'm going to show you guys a little trick now okay so this is where the sort of really nice kind of listening persistence and all that stuff comes in so if we go back to app.js okay so let's go back to app.js and let's go here and now what i'm going to do is inside of app.js i'm going to use a use effect hook so use a fact hook is a piece of code that runs once when the component loads if you do this otherwise it will run with any sort of dependency here so if i put user in here every time the user change it would change it would fire this code off again but if i don't add anything here it just runs once you need to have this here though otherwise it kind of goes in the infinite loop okay then what we're going to say is again i'm going to import aus so import from my local firebase i'm going to say or on auth state changed so this is like a listener right so what this does is it says every time the user logs in it will basically go ahead and get the the the user so anytime the authentication state changes we just want to listen to them we say if there's an author can if there's a user oops if there's a user then what we say is we want to log the user in right so then we'll say the user is logged in right else uh the user is logged o right now previously what we did inside of our redux source if we got to the app slice we sorry the user slice we created a login and a logout action right the first one went ahead and set the user to whatever the oops set the user to whatever the user payload was and the second one just resets the user to no so that way it resembles the user's not logged in but what we can do now is we can actually go back to our app.js we can pull in those values okay so what we need is first we need a dispatch so dispatch allows us to do the following allows us to shoot things into the data layer right so we need to get the dispatch and what we say is const dispatch equals use dispatch we use a special hook called use dispatch we need to import this from here from react redux okay so that gives us the dispatch of the sort of gun to shoot into the data and then what we're going to say is what if there's an authentication user so i'm just going to prove to you guys i'm not lying right so i'm going to say user is and i'm going to say auth user and if i go ahead and inspect right let's go to our console make this a bit bigger because i can't see anything so you see it says the user is right and it actually has all my details it says user is sunny sanger and things like that so everything comes up okay now if i was to log out for example or things like that i'll show you guys how we do that but now you see it's persisting so even if i refresh as soon as i come back the user's logged in right so the user's still there all right so how do we push this into our redux store so that way we can use it and determine like what to render on the screen so here what i say is i say dispatch and then what i need to do is i say dispatch login action and the payload for the login action all i'm going to do here is i'm just going to set some of the user details so i'm going to set a user id and this is going to be the auth user dot and then you can see here we've actually got all the stuff here so the uid is this one here so i'm going to say auto user.uid i'm going to get the photo so auth user dot photo url and then i'm also going to get the email which is auth user dot email so as you can see this here and then this is another good reason about console logging things out okay uh hey my girlfriend's back in the chat there she is go ahead and follow her guys um and then what we're going to do is we have the display name right so display name is oops display name is the auth user dot display name okay save it and now what's going to happen is where is it freaking out 9 20. log in yes so my action we didn't actually import any actions okay so i need to go ahead and go here and i just say import login action and the set user action uh sorry no no no i mean the login action um and the logout action from features forward slash user slice okay and you can see now it stops freaking out hey look at that so as soon as i log in what it does is it checks if i'm logged in and then they dispatch the login so to check that this actually worked oops i've got that stuck on the screen uh um hey she's mama react now that's that dude um so what i'm going to do now is i'm going to inspect right and like those i'm going to go to the dev tools so redox and then you guys can see look the user slice login action was fired and you can see the difference was is that it changed the user right so if we go to our state we go inside the user now i can see that we've got this information about the user right so again i'm in the way so i'm going to go ahead and just move myself over here so you can see now i've got the user id the photo the email and the display name so what we can do is we can pull this in any other component and use it as we need to okay which makes it super super useful in the in in what we need to do so what we do now is we can and then why why actually things really cool is you can check the action payload to see what was fired off right so in case something's not working it's actually a really really powerful debugging tool okay so um you can also rewind your app guys so this is insane so like say if i go back here and i click on skip see that so now if i skip that action and the user wasn't logged in if i basically this is what happened when the user wasn't logged in and if i don't skip it the user's logged in so it shows you like things like to that level which is really good right um then what we're going to do is we're going to go ahead and say if the user wasn't there right so if we basically like if if for any reason they logged out i'm going to say dispatch a logout action right and that's pretty much what we need to do literally that right and then inside of the app slice uh again user slice you can see the logout basically just sets the user to know okay but how do we log out right you're probably thinking it's going to be crazy um so nagesh says the poor has been set to 3002 i had two other pro programs running that's why uh otherwise for you guys it'll be 3000 so don't worry uh going back to this what we're going to do is we're going to go back to our app because this is actually this one here yeah and then what i'm going to say is um we do actually need to introduce so inside of our app.js right if i go ahead and check our terminal this one it says you're forgotten the dispatch dependency okay so here i need to include the dispatch because dispatch is a dependency here and there we go everything's green so don't ignore those messages guys they actually are there for a reason um what i need to now do is basically go ahead and i'm gonna have it so when i click this picture over here it should log me out all right so let's go ahead and let's go to sidebar i'm to go to the avatar so avatar is down here and firstly guys i want to use my actual avatar information so i'm going to go to sidebar i'm going to go ahead and use a selector to pull the information from the data layer so just like this we're going to go ahead we pushed in at this point when we logged in and then so we pushed in at this point oops when we logged in and i'm going to go ahead and pull in at the sidebar so wherever the sidebar is okay so here i'm going to go ahead and say const use select oops use selector uh import from react redux like this i'm going to import select user as well from the features user size save it go back and then what i'm going to do is i'm also going to get the um no i'm good we're good so now what i'm going to do is go back to our avatar and i'm going to say the source is the user.photo okay so here we should see so that this is the one i set manually and my google picture should come up now so if i go here and i say user.photo and we save it boom it went ahead and grabbed my my actual uh google picture okay so that's pretty sick everything works as we expected it too now i also want to have you my display name come up so right now we've got the manual instagram tag over here and we've got my id so instead of this i'm going to go ahead and use my actual user id so i'm going to go ahead and say user dot display name user dot display name save it and we should see sunny sanger comes up now okay and also for the id what i'm going to do is i'm going to say user.uid so that's the user id and then i only want the first i'm going to make a substring of it so if i use the full user id it's kind of long right you get this huge one so i'm just going to say substring because i saw like in discord you get like once say grab the zero to the fifth element and then boom we get that and if i go ahead and add a hashtag in front of it now it's looking bit discordy right so that's gonna be unique for you and it's gonna work okay so we're gonna substring it to five characters and now for the on click so for the avatar this is how simple it is guys to go ahead and log out right so i'm gonna go ahead and do it anonymous function and i'm gonna say auth and then remember we need to import the auth so i'm gonna auto import it from my local firebase and i'm going to go back down here and i'm going to say when i do it i'm going to say auth dot sign out right and that's it and now what this will do is this will sign you out on google side right and then it will trigger off the listener that we have listening over here so i don't need the console log and then if there isn't so there wouldn't be a a user anymore so it will dispatch the logout which means that redux will go ahead and basically cancel out the user inside of our user slice right so let's go ahead and save it refresh and if i click this boom logged out and it actually logged me out right so if i go ahead and check my redux dev tools go down here now you can see look i logged in and logged out set the user back to no okay so let's go back and click sign in and i want you guys to pay close attention to this part over here okay so over over here sorry so as soon as i click sunny watch how it dispatches the log in action hey and then it basically then the front end reacted because of it so that's dope okay that works really nice and everything's good okay the next thing i'm going to do is actually add the channel functionality so now we have all this working so i'm going to add the channel functionality so i'm going to go to sidebar.js and here what i'm going to do now is go to cybor.js and what i'm going to do is right now i'm going to create a piece of state right and we're going to have we're going to assume that we have oh guys we're at 933 likes let's make it a thousand likes that'll be a banger start to these videos again so i'm going to create a piece of state called channels and this is going to be set channels and i'm going to say use state so we're using the ustay hook auto import from react and this is going to be an array by default it's going to start with an empty array i'm going to have a use effect which fires off when the component loads okay and this will fire off once and the main purpose of this use effect make sure you import the use effect as well so this runs once hence the nc empty dependencies okay um i'm going to basically go into my db so i need to go ahead and import my db so remember this is the default export and then i'm going to go ahead and say db.collection i'm going to go to the channels collection inside my database so right now inside my database i have nothing but i'm going to eventually have this so this is my finished product which i had before so we have the channels collection all the different channels so in this case we have five channels so which is why you could see it before five channels and then inside of each channel i have a message collection with all the messages and if i click that you have the message are you guys ready to be a discord clone see you guys ready to go disco clone with the user's information over here right so we're going to go ahead and build that right now um and exactly yeah don't rush guys honestly so i really like this comment don't rush you're going to be a dope developer yes you guys are going to be amazing developers this is all recorded so you can pretty much go at your own pace slow it down pause you know like you can do all of that stuff at your own pace do not freak out if it's going fast okay don't freak out that's why it's recorded so you guys can pretty much play at your own pace so let's go back and check it out so go back to our database which is empty but i'm going to go ahead and say that there was a channels collection then on snapshot means that if anything ever changes so if we ever added a channel in or something like that in real time right so real time like no joke real time it's gonna pretty much go ahead and update it right so this is actually like crazy stuff which happens when this hap when it does this so i'm gonna go ahead and do set channels now this is a bit of a mouthful this piece right so we're going to update the state whenever the the database channels changes so if we add a channel any point it goes ahead and updates all of this stuff so to do that we say snapshot.docs and i would recommend you watch some of the other builds if you don't understand this bit of code and we also have a youtube video which explains the snapshot functionality so go ahead and check that out um but here i'm going to basically go ahead and say for each doc i'm going to go ahead and return an object right so i'm going to go ahead and return the object now this object is going to have an id which is going to be the document id so the document id is this id over here so this one over here so you see these document ids right and then what i'm going to do is i'm going to say the channel is going to come back and it's going to be the document data and the document data for the channel would be the channel name okay so this is the data this is the document id right so we're basically just getting it back and this means that if we add stuff inside it will basically go ahead and pull it as appropriate right so with that said what we can do now is we can go back to our code and we can pretty much render right now we're rendering um right now we're rendering the sidebar channels we're rendering four over here by default okay i want to have it so that we say channels.map map through every single channel and return the sidebar channel over here right so if we have none it will show none okay awesome that's good all right so now it should only show things which are in the db so right now there should be none but we're going to add something right so i'm going to have it so that whenever i click this button this plus button so when i click the on click on the plus button i want to basically do handle add channel i'm going to fire off a function called handle add channel so i'm going to go down here and say const handle add channel it's going to be a arrow function here we're going to say const channel name so i'm going to get the channel name by prompting the user right so i'm going to say enter a new channel name save it and then if i click this now oh enter a new channel name nice okay and then i'm going to say if the user didn't or enter a channel name because we want to protect against undefined error then i'm going to say go inside the db go inside the channels collection right and just add the channel right so add an object where the channel name is the channel name that we passed in here and there's also an esx shorthand for this you could do that but i'm not gonna do that today because it might confuse some people okay um also we're at 950 likes let's go guys push it to a thousand come on and um handle add channel right so with that said now we've we've hooked everything up so what we should be doing is when i click that button after i enter some stuff in here i'm gonna click cancel for now but if i click okay it should push into the channels db collection that means that it will fire off the use effect listener over here right so this should this is set up to listen so that whenever the channels changes it will fire off a snapshot and it updates the channels right so that means that the channel should come up here straight away afterwards so if i go ahead and do youtube i think if this works you should smash the thumbs up button okay so 10 so i'm going to go ahead and click on youtube and it should pop up here okay hey look at that everything worked as you expected it too so that's pretty sick that's pretty sick all right so everything worked really nice let's go ahead and do another one let's go ahead and say uh discord let's just say cp discord boom oh okay but do you see so it added it but remember that it's not being passed through with the correct name right so youtube is like a hardcoded name now that makes sense because we didn't actually change that down here okay so if we go down here to where we actually render it out sidebar channel here we need to actually pass it down right so here what i'm going to do is the channel breaks down i'm going to destructure and say get the id in the channel at this point okay in the id and channel at this point and then yes i can see the numbers getting nearer to a thousand let's go guys and then i'm going to say make the key for this the id also pass the id as a prop and also pass the channel as a prop uh i'm actually gonna actually know i'm not gonna pass it entirely i'm gonna pass the channel name as a prop i'm gonna say the channel dot channel name because remember inside of our db is channel dot channel name save it and now what i can do is inside the sidebar channel we get the channel name and the id right the key is for rendering performance and then what i can do here is i can say instead of rendering youtube every time render the channel name uh click it and boom cp discord that's though right thank you so much for the kind words eli you came along because you guys are really trying thank you for all the pre and we appreciate all your effort amazing stuff dude and thank you for the greatest ever so amazing stuff right um uh and what we're gonna do now is we're going to go ahead and do okay so now we're going to go ahead and make it so that when i click this right i want to update the redux store to the inside the app size i want to basically keep track of which one we're in so that way so if i click this you see it changes which which room i'm in and then this triggers off like the correct loading for everything right um awesome man thank you so much calvin again dude he goes coming in hot with the 5 donation he says yay by the way do you how do i get the sound effects that you guys use they're cool so i actually use something called a rode caster pro it's like this big device i'll take a picture on my uh on my snapchat but i've got all these hot keys on there so i can pretty much go ahead and like if you want to get real tense i could be like oh you know like it can get really tense right like really quick and then if you want to get like really sentimental you can go ahead and do that or if you want to get hyped up you can go ahead and do that right like you do loads of stuff with this thing and i've got like the the volume levels and stuff here um so that's actually how i do that um it's through a road caster pro um but yeah you can learn you can do it different ways but right now i pretty much have this queued up when we're listening to music but yeah that's how i do that um oh we're almost at a thousand likes let's go guys um so now we pretty much get this bit up and running right so we want it so when i click this it changes the store right so what i'm gonna do now is inside of sidebar channel i'm going to go ahead and pull in my dispatch because i need to update redux so i'm going to go ahead and say const dispatch equals use dispatch go ahead and pull that in from redux react redux there we go and then what i'm going to say is on click of the div so here on click i'm going to go ahead and save set channel id so i'm going to import that action from app slice um because remember in app slice what i did is i had a an action over here and we're going to update what this actually does in a sec i actually would do it now so here i'm not going to have this but instead i'm going to have i'm going to have the following so i'm actually going to pass in two things i'm going to change it's not actually set channel idea set channel info and i'm going to say state.channel id equals action.payload.channel id state.channel name because action.payload.channel name okay and the way that we do that is we go back to our the thing that i was in so where was i i was inside of this sidebar starting to go crazy all right let's hide the sidebar no i'm inside the sidebar channel here we go and then what i'm going to do is it's not set beside my channel i set side by info now all right so there's this one and then i'm gonna save it and now it says it's not exported from the app slice so let's go back into app slice oh yeah we need to change this to set channel info and we'll go back to start by channel here we go and on click it's going to fire off an arrow function and this one is going to go ahead and say um it's going to dispatch dispatch set channel info and as the payload i'm gonna pass in the channel id right with the key id uh with that key channel id sorry the value id and then i'm gonna go ahead and say um channel name is the channel name that we passed in as a prop so if we go ahead and do that now if i go ahead and check my redux inspector go over here go to redux and now we should see if i click this set channel info you see that it set the info to the that channel id and cp discord if i click this one i set it to youtube and it changed the channel id to that one now these channel ids line up to the ones that are in the db so it knows which messages to then pull and we can also use the these values in rendering the correct things okay so that's dope so now what i can do is go into app slice and i've got the selectors appropriate so i need i can use those for example here so let's go into the header component and rather than chest test channel name um thank you so much nicholas on facebook he says this is awesome sunny appreciate that dude nagesh goes only 16 left for um the 1k whereas it deserves one i think it's one million or one trillion likes uh thank you so much dude i want me okay nice um uh my motivation as an idea of going back to my old work i i think that's a good thing let's carry on guys so right now rather than the test channel name what i'm going to go ahead and do is pull up my chat header over here and i'm going to basically go ahead and uh why do we render chat header it's inside of the chat.js right so inside of chat.js what i'm going to do is i'm going to pull the channel id the user and the uh channel name right so i'm going to do it in order so it's most confusing so here and what i'm going to do is i'm going to import the use selector from react redux i'm going to import the selectors so select channel id import this one and then i'm going to go ahead and say select user i'm going to import that as well there we go and now i have the this information inside of here inside of chat header i'm going to pass the channel name as a prop so channel name as a prop and inside of chat header what i can do now is i can accept that as a prop so i can say get the channel name uh destructure it and then here i can say render the channel name and now if we go ahead and click cp discord youtube damn it works huh awesome stuff all right um hey bow down to you papa papariat thank you dude um and then jesus said i love you for your job appreciate you guys thank you so much seven likes away from a thousand likes damn guys appreciate you guys so much um okay so next now what we're gonna go ahead and do is you see like that works now okay we can add the channels we can sort of change the room now what i want to do is i want to make this a bit more smart so the next thing that we need to do is go into our chat.js and this is where i need to basically go ahead and um make it so firstly we need to collect the input so i need to be able to collect this stuff so in order to do that let's go into chat.js oh god when we're printing it's going to chat.js and um i'm going to create a piece of state called input right so it's going to be called input and i'm going to say set input use state and by default this is going to be blank string okay now to hook this up to the input field down below i'm going to go ahead and say value equals um oh guys we just hit a thousand likes let's go guys that is dope thank you so much guys for watching this we're not finished yet we're not finished yet but thank you so much for a thousand likes on this video the energy has been insane from you guys today um let's keep going strong let's keep going strong that is that's awesome guys a thousand likes that's what i'm talking about okay so uh and we have a compile error so you know you win and you lose but let's go ahead and carry on so at this point we're gonna go ahead and import use date uh let's jump back in so i'm gonna import use date and um so here i'm gonna map it to the input and i'm going to say on change every time i type in go ahead and capture so it fires off an event and set the input to e.target the value which basically goes ahead and gets the value that you're typing in so that means now we have this oh god not that one value sure there you go and then as i type in now boom it's stored in state as well okay so the goal here is that when i type in right and we also want to disable this if there is no messages i want to say disabled if you haven't selected a room so i don't want you to be able to enter in things if you haven't selected a room so disabled if you have let's go ahead and say disabled if there is no channel id there we go that should fix it and also do after the button just in case right so that means if you haven't selected something you see that i can't actually type anything in but as soon as i select the channel i can type something in dope and also for the input field the message here i can actually now go ahead and use the actual channel name so i can say channel name and then you see where it says test channel now it says no but if i click something cp discord there we go okay now for the messages we render out three dead messages here we don't want that right we want to have some messages so i'm going to say const messages set messages equals use state i'm gonna make it an array okay and then what i'm gonna do is here i'm gonna go ahead and say messages dot map so for every single message i wanna render out a message component right so now we should see no messages which is actually correct right but i want to populate this stuff so i want to say use effect and the use effect gets fired off it gets fired off once because we're going to have a listener and then we're going to say db auto import from our local firebase i say db.collection and what i want to do is go into the channels right but this is where we've got to be particular right so i want to go into the document which is this channel id because remember we have the channel id stored in redux i'm going to go into the collection of messages inside of that room inside of that channel right and then i'm going to go ahead and say dot and i'm going to say order by because we're going to add a timestamp order by timestamp and then we're going to say descending because i want the most recent things to come to the top i'm going to say get a snapshot so again real time i'm gonna say when we get that snapshot go ahead and do the following we'll say set messages to snapshot dot docs dot map for every single doc inside i just want the doc data i don't really care about anything else so i'm going to say doc data right so then we get this nice little kind of thing but you see it freaks out so we need to get say if there's a channel id then we do this otherwise protect right so we're kind of protecting against ourselves here monsters that's it boom works right so at this point everything's pretty good we pretty much have everything uh working um well kinda like we basically have this pulling in the messages but we can't see that it's actually doing anything right so i want to go ahead and say constant messages consent message equals e um we want to do an e dot prevent default because when we submit that form we don't want it to refresh the page and basically i need to connect this to that button so when we send the message remember like i said it's inside a form so when i hit enter on this field see right now it refreshes we don't want that so i'm going to say on click and i'm going to say send message but now we do e dot prevent default so if i do it now type in enter see it doesn't actually refresh which is good and then here what i'm going to say is db.collection message channels and then we go in again inside the room so we say channel id and then we say again go into the collection of messages and all we do here guys is we just add so we add an object inside and then here we say add a timestamp so first it will add the timestamp after but we say the message is the input right so it's the input of what you added i hate when it overlays it there we go message is the input and we can say user is our user that we pull in from our store okay the one that we logged in with and then i need a timestamp as well so i know when the user entered now for the timestamp what we do is we import firebase from the actual firebase oops from the local we say from firebase the one that's on the npm module and we do that and then what we do is we go down here we say timestamp oops times them and this one is firebase start firestore and then we say dot filled value dot server times server timestamp because we want to use a servers timestamp because that's going to be the same regardless if i'm in london if i'm in america or if i'm in anywhere else right it doesn't matter right so that will go ahead and do that now with that said we need to actually uh add a dependency here for this use effect the channel id is the dependency here because we use it here so we need to add that in that's very important don't forget that and then also here for the um we need to set the input to blank after you submit so you don't want to have this some text here okay so with that said if i go into cp discord and i say yo what's up guys enter you see i added the message but again right so now it's actually there but now our message needs to actually take in the correct props when we render it out so what we can do at this point is we can actually pass in the message stuff that we need so we're going to pass in three props and they're going to be as follows message timestamp message message and the message user and this is based on the values we put in here okay so we jump into our message we receive the props here so we can destructure them and we can get the timestamp the user and the message save it and now if we go into our message right now what we can do is the avatar source can be the the user dot photo right so this would be the user's photo from that value so if i go into cv discord now it's got my correct picture it's not my one it's the one that we actually sent the message with so if no matter what i'm logged in as it will be i will be showing that one now the here should be the user dot display name and then here this is a timestamp so this is where the interesting bit comes in so this one's a bit more tricky right we're going to say new date od and we're going to say timestamp dot and we say timezone could be there might not be there to date and then we say to i uh utc string all right so this will basically go ahead and pass the the weird timestamp we get back into the correct one so we go to cp discord and it says this is a message but the time stamps correct the name is correct but the message is the final part here i just say message and now cp discord boom and if i go ahead and say boom this just works look at that guys real time yeah and if i say wow this is dough so that's pretty cool right uh that works really really nice and i'm gonna deploy this in a second even if we're going to this channel and say the youtube channel oh works uh is this i'm gonna let you guys respond to that let me see all right but i think that's pretty dope all right so with that said i think that's the majority of the app done right so most of the apps down so we can pretty much log in so i'm going to actually go ahead and log into a separate account so i've got a different account here so i'm going to log into i've got karzi's account here so i'm just going to log in under his account and now i should say i've logged in there's graphic cards there we go and i can say yo sonny so i'm gonna pretend that was someone else now so you can see yourself and say what's up guys what's up guys there we go see that works in a different account as well it pauses information and say this is insane it's all real time guys like if i refresh it's going to persist it logs me back in go back to cp discord boom logs in all right so i'm going to go back to sunny and i think with that said what we're going to do now is to deploy right go ahead and deploy um so now what we're going to do is we have everything up and running this is insane i mean i think this is pretty cool i think this is pretty pretty cool stuff um so now what we're going to do is i'm going to go ahead and deploy so i'm going to first make sure i'm logged into the correct firebase so let me go ahead and just uh change your screen for a second because i think i'm in a work one so if i was logged out and yeah that wasn't one so i'm going to go into my terminal so let's go back into my tamil and first i'm going to do firebase login and i made this on my personal one so if i go ahead and just say i'll just find and it's going to log me so i'm going to continue i don't know on this account on this account allow there we go and he logged me in so firebase login is the first command you want to do then you want to do firebase init okay uh so right now we're deploying guys so it's gonna be awesome so then i'm gonna go ahead and go down to hosting hit enter i hit the space bar hit enter key okay so i'm gonna make this a bit bigger for you guys so you guys can see that and then here it says use an existing project so i have tons of projects let's go ahead and find the one discord clone youtube all right enter and then this bit is very important okay so uh so billboard bargo says shouldn't the newest text be at the bottom yeah you can do that and you can make it or scroll to the bottom if you want i didn't do that i just done it for simplicity it will come to the top um but here is very important to write build okay you have to write build guys don't right anything else has to be built and then what you want to do is enter and then here you want to do yes because every single react app is a single page app that's dope and then we're going to do is npm run build and what this will do is it will build the entire app into a build folder up here all right so remember we set the the deployment folder to build okay and it will actually go ahead and build everything into that folder so right now it strips out all the sort of heavy craps all the heavy sort of stuff that we don't need and it will actually go ahead and put into a very optimized production build so this is the one okay um and then what we're gonna do is bear with me while it creates the optimized production build and there you go so it built everything out so now we can check inside the build folder we got all this jogging right so you don't want to touch anything inside the build folder they basically made it into a very fast production ready i guess itself okay then what we're gonna do is we're gonna say firebase deploy and that's it i'm gonna hit this button and we're gonna we're about to deploy guys and i want you guys to all log on to this once i deploy it and check it out right now who's ready who is ready to deploy this app guys let me know in the comments right now because we're going to end this with a bang and i'm going to go ahead and share the link for you guys and i want everyone to come in clutch and literally just just go ahead and have a chat keep it clean but have a chat inside inside the discord clone to see that i'm not lying when i when i built this right so let me know in the comments right now if you're ready for this and i will hit the deploy button as soon as we get enough heat right now okay so let's go ahead and see how many people drop a comment on this we already passed a thousand likes we have 220 people still watching so that's insane let's go ahead and do this so david mason says you are awesome thank you so much dude um and with that said i'm going to give it one more second hey there it goes that's it so here we go this goes christopher siddharth says let's see it deploying the gestures yeah hey hi dude uh everyone's saying let's go drop it let's go all right let's do it dude let's go all right so i'm going to hit deploy so hitting deploy now and deploying hosting bikini deploy found the items in the build this is good this is good this is good and hey there we go there's the build right there so i'm gonna go ahead copy this and drop this in the chat there you go and let's go ahead and open it out i'm gonna open it up here and do this and now you guys should be able to see it go ahead and check it out go ahead and do something login check it out hey we got people here already nice yo what's up guys david mason's here dope oh we actually have a bug all right so i'm going to show you guys how to fix this right now okay so i'm going to show you how to fix this right now and then we'll redeploy so check this out right so it's actually a good debugging issue okay so you see we haven't got overscroll right now okay so what i'm going to do is i'm going to go to chat and then over here well i'll show you how to very quickly fix this so as the messages come in we can fix this so inside of chat messages over here so i'm going to open up chat.css boom go down here and this is pretty cool as we're coding over there it comes down and i'm going to go into chat.css and you guys will see how fast it is to do this stuff right so inside the chat messages i'm going to go overflow scroll and then i'm going to add this in so i'm going to add this webkit scroll bar in so over here boom and i'm going to go ahead and say this so these two lines here hide the scroll bar but they implement the scroll functionality now i'm going to go ahead and do npm run build and i'm going to chain the firebase deploy command and boom just like that i'm literally pushing and i'm pushing a bug fix so once this bug fix goes ahead and gets deployed you guys are going to see it so michael pluto literally is going to fix that issue so it just created the build and then we're going to go ahead and do it again so now it's deploying again so let's go ahead and see out um omkar says don't you pee my girlfriend agrees honestly i don't know man like i can hold it together but look at that we have this issue but if i refresh now it shouldn't be cached hopefully so let's go ahead and see let's go ahead and do this hey look at that fixed it nice that's how you do it guys that's how you fix a bug live so go ahead and refresh and you'll see it the bug is fixed look at that that was pretty cool i think i think that deserves to hit the smack that smashed that thumbs up but i think that's pretty cool just debugged it that quick and we deployed it so that shows you just how fast it is to go ahead and deploy okay so that's pretty sick um with that said i thought that you know it's coming to an end when we dropped that um but you guys can pretty much see that we have like look we have some new chat channels being opened up here it's pretty dope all right so nicholas hell thank you so much this guy sonny is awesome learn so much we should try this react.js come on later definitely go check it out dude and uh yeah we've got loads of things coming in so we've got legend papa react subscribe to cleverprogrammer hey love this good your superhuman hats off papa react fix the bug yeah oh yeah dude subscribe for us bet chats the best chat ever sunny knows pedro what's up dude man it works okay this is insane awesome sunny fans nice all right so with that said guys with that said guys i hope you enjoyed the build we had redux we had everything inside this build we had the discord clone we had redux we had uh selectors we ran through the entire build process like that we showed you pretty much the entire redux flow how different slices like the app size the user slicer built we had all of that stuff inside today's build we had man crazy stuff or somebody says okay there's still a bug i mean i think it's also on the the sidebar but you know you guys saw it you know i had to go ahead and fix that um hey my girlfriend's coming in love you too um but yeah guys that was an awesome fun build hope you guys found value in that we pretty much showed a responsive design we showed how you can pretty much go ahead and clone um thank you so much guys for sticking around we still have literally 230 people sticking around so this is awesome we hit over a thousand likes already in today's build and as always guys your energy is insane i'm glad to be back and we can pretty much go ahead and i want all of you guys to go ahead and let you go ahead and build this i know which bug you're talking about guys you're talking about the sidebar you literally do the same thing you do overflow scroll and then you do that little trick that i showed you to go ahead and fix it but with that said tomorrow we drop an imessage clone so we don't stop here we've got an imessage clone happening tomorrow so literally the stuff that happens on your phone is going to be happening on the browser tomorrow i'm going to build that for you guys tomorrow um with that said make sure you go to the link in the description sign up to the free training do not miss that guys because it's completely free so i don't know why you'd want to miss it but this is the free training that you can get access to uh me and classy pretty much go ahead and show you guys how to build the next fix clone and use everything behind that build so um yeah josh shah says what's that shiny thing behind you these are the lights that my girlfriend bought me so they're pretty cool lights dude they're called nano leaf and they react to my voice so as soon as i talk it pretty much comes up so thank you so much guys and it's papa react aka sunny signing off make sure if you don't already follow me on instagram so go ahead follow me shoot a story if you're watching this live and i'd love to have a chat with that said it's your boy i'll see you tomorrow peace guys bye
