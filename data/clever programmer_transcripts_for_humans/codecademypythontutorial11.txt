With timestamps:

00:00 - hey guys what is up this is kazy from
00:03 - clever program.com and you're watching
00:06 - code academy
00:10 - part
00:12 - 11 okay so without any further Ado let's
00:16 - get
00:18 - started also see what I did
00:21 - there I was referencing 11 from the
00:26 - movie or the show stranger things that
00:28 - sucks if you don't if you didn't get it
00:30 - because I was wondering about how I'm
00:33 - going to solve this problem of counting
00:35 - past more than 10 fingers and that was a
00:38 - solution that came to my head I thought
00:40 - it was pretty witty if you liked it
00:42 - comment on
00:44 - it all right a day at the supermarket
00:47 - we're at 84% so let's keep going
00:50 - okay stocking out now you need to
00:53 - compute Bill function to take the stock
00:56 - inventory and something okay not going
00:59 - to read that too much read reading make
01:00 - the bill function changes to your
01:02 - compute function Bill hold on actually
01:04 - let's read
01:05 - it function to take the stock SL
01:08 - inventory of a particular item into
01:10 - account when Computing the cost
01:13 - ultimately If an item isn't in stock
01:15 - then it shouldn't be included in the
01:16 - total you can't buy or sell what you
01:18 - don't have totally makes
01:23 - sense make the following changes to your
01:26 - compute Bill function let's do that
01:29 - while you Loop through each item of food
01:32 - only add the price of the item to Total
01:34 - if the item stock count is greater than
01:37 - zero so I'm going to say for item in
01:40 - food and I'm going to say if uh let's
01:44 - create a variable here called
01:48 - price or sorry
01:51 - um we don't have to actually create a
01:54 - variable we can just say if
01:57 - stock of that item
02:00 - is greater than zero then this part
02:03 - happens so I hit tab to indent that you
02:06 - can also just do this simply backspace
02:09 - all the way up to the colon hit enter
02:11 - and it will do that for you don't forget
02:12 - your
02:13 - colons after every for Loop definition
02:16 - and if statement you have a colon all
02:19 - right because that's kind of like
02:22 - defines the things that you're indenting
02:23 - under that and that becomes a block of
02:26 - that code right so if this function you
02:28 - don't indent anything underneath it now
02:30 - it's not um the total is actually not
02:33 - part of the def it's actually going to
02:35 - give you an error in this case so you
02:37 - want to make sure that it's indented so
02:39 - you're saying these pieces of code they
02:42 - go together there's it's a block of code
02:45 - okay so if the item stock uh is greater
02:49 - than zero that's the only time we
02:52 - actually increment the cost of total by
02:56 - the prices the price of the item that
03:00 - totally makes
03:02 - sense because you can't sell well you
03:04 - don't have
03:06 - so right it would not make sense if we
03:09 - went to Apple which had a stock of zero
03:13 - but you went up and looked up the prices
03:15 - and incremented the prices of total by
03:18 - two right that would not make much sense
03:21 - so that's why you want to have this
03:23 - check
03:25 - here and that way if you get apple right
03:29 - you get
03:30 - um apple right here this part evaluates
03:35 - to
03:36 - zerbo and that therefore this part right
03:40 - here does not turn into apple and
03:43 - evaluate to prices of Apple which is
03:47 - two um and you get back two and then
03:50 - this turns into two right so that checks
03:53 - that if statement that we wrote that uh
03:56 - creates a check that stops that from
03:58 - happening if the item is in stock and
04:01 - after you add the price to the total
04:03 - subtract one from the item stock count
04:05 - now think about
04:07 - it if we're trying to compute the bill
04:10 - and our customer or let's say that uh
04:13 - you own a restaurant right and I come to
04:15 - your restaurant and your a restaurant
04:17 - has tremendously extravagant foods such
04:21 - as a banana apple orange and
04:24 - pear so let's say you sell me one of
04:27 - those things so you Go sir for your
04:31 - entree we have two bananas and for your
04:34 - appetizer whatever or your um dessert we
04:38 - have two oranges well after you compute
04:41 - the cost of the
04:43 - bill you wouldn't still have six bananas
04:46 - left you would now have four bananas
04:48 - left and you wouldn't have 32 oranges
04:51 - left you gave me two oranges so now you
04:53 - have 32 minus 2 so you have 30 oranges
04:56 - left so you have to take that into
04:58 - account so so in this case on line 22
05:01 - when we increment the price we should
05:03 - also what's the opposite of increment
05:06 - decrement we should decrement the stock
05:10 - so we should decrement the quantity of
05:14 - that food in our stock dictionary does
05:17 - that make
05:19 - sense okay if it doesn't we work we
05:22 - we'll do it right now so what we're
05:24 - going to do is I'm going to
05:27 - say um
05:32 - that items value right what what are we
05:36 - decrementing we're decrementing the
05:38 - value of those items right so if we have
05:41 - banana we're going to decrement its
05:43 - value well to change the value we need
05:45 - to access it using the dictionaries key
05:49 - so here I'm going to use the dictionary
05:50 - stock and then I'm going to use the key
05:54 - item to access this six and I'm going to
05:58 - say Min - equal 1 which is the same as
06:03 - saying is equal to stock of item minus
06:09 - one got it and let's just go through an
06:12 - example CU examples are awesome and
06:15 - something that professors
06:20 - and uh professors and teachers of such
06:23 - courses love not to give they're like
06:26 - theoretically understand all of this in
06:28 - your head but it's not as easy to
06:31 - understand it all in your head and I bet
06:32 - you that they didn't either they had
06:34 - trouble with it but for some reason they
06:36 - take pride in the theor the theoretic of
06:41 - all of this right the conceptualization
06:43 - of all of this so we should stay away
06:45 - from that work on tangible examples so
06:48 - you can get this okay so let me give you
06:51 - a basic tangible example here let's take
06:54 - that shopping list the same list right
06:56 - but I'm going to actually take that
06:58 - exact list so it's easy for you to to
06:59 - see what's going on I'm going to pretend
07:01 - like I'm calling the compute Bill
07:04 - function here I'm going to pass in that
07:07 - particular dictionary or I'm sorry the
07:10 - list banana orange Apple so let's go
07:13 - here that list is going to get passed to
07:15 - food now we come to
07:18 - total and what's going to happen is for
07:21 - item in food well food is just that list
07:24 - that we passed in and for item it's
07:27 - going to be banana the first time it's
07:29 - going to say if the stock of the banana
07:33 - right this is going to be replaced by
07:34 - banana this part is going to evaluate to
07:38 - what what is this part going to evaluate
07:39 - to it's really good to run through your
07:42 - code tangibly with actual examples so
07:45 - you can follow and see how the algorithm
07:47 - is actually working stock of
07:49 - banana is going to give you the value
07:52 - six right so dictionary stock key banana
07:55 - this is going to give you six is 6
07:57 - greater than zero yes it is
07:59 - this part goes boom it evaluates to true
08:02 - we get to line 22
08:06 - now our total is incremented by the
08:09 - price of that item so this turns into
08:12 - banana because remember We're looping
08:15 - through and item was banana so
08:17 - everywhere we see item it's now Banana
08:20 - right now on line
08:22 - 22 prices of banana evaluates to what
08:27 - four right if we look in our PR PR
08:29 - dictionary now total is incremented by
08:31 - four total is at
08:34 - four um stock of banana is decremented
08:37 - by one so what that effectively means is
08:41 - now in our stock we have 6 - 1 which is
08:45 - five five bananas left okay then the
08:48 - loop happens again this time it's
08:51 - orange right this time it's orange and
08:54 - it goes hey if stock of the item is
08:57 - greater than zero so our item is orange
09:02 - and stock of orange is
09:05 - actually 32 this statement is 32 is
09:09 - greater than zero this is true so what
09:13 - happens here this is incremented by the
09:16 - price of the item right so what's the
09:20 - price of an orange this part gets
09:24 - evaluated to the price of the orange
09:26 - which is 1.5 so now we have 5 .5 up here
09:31 - and this part also gets Orange right
09:34 - here this part is evaluated
09:38 - to um stock of orange again 32 32
09:44 - minus um one so stock of items value
09:49 - should now be set to 31 so it goes all
09:51 - the way up to stocks and set this to
09:55 - 31 and uh it goes on one one more time
09:59 - but as you can see I'm not going to go
10:01 - through the code of what happens but you
10:03 - can effectively see that once it gets to
10:07 - Apple it realizes that the
10:10 - stock of that item which is Apple is
10:16 - zero this part gets evaluated to 0 is
10:21 - greater than zero this turns into false
10:24 - well I actually did end up going through
10:25 - the code and the lines 22 and 20 3 do
10:29 - not execute because if condition is
10:33 - false and ultimately also the for Loop
10:36 - goes back it goes back to the for Loop
10:38 - it realizes that was the last one so the
10:40 - for Loop ends it comes to the last line
10:43 - return total which in our case is 5.5
10:47 - that's the answer we should get
10:49 - now we have ran through it in our head
10:52 - which is what we should always do but
10:55 - now what we're going to do is run
10:57 - through it in our
11:00 - reel.it and we're going to print out
11:03 - what it
11:06 - does oh I didn't Define what stocks and
11:09 - prices this so it's going to go crazy
11:11 - it's going to be like what are you
11:12 - talking about I have no idea you're a
11:16 - crazy person get away from
11:20 - me okay you saw we got 5.5 right that's
11:23 - what I had written down so yeah run
11:26 - through the algorithms in your head
11:27 - first and then once your head is
11:29 - exploding and you're like oh my muscles
11:30 - are being flexed of my brain that means
11:33 - that you're learning that means that
11:34 - you're actually improving that's the
11:36 - only time you're improving a lot of the
11:38 - times in conceptual things like
11:39 - programming when your brain muscles are
11:41 - stretching and they're kind of hurting
11:43 - and they you know it's almost like
11:44 - they're growing you're growing new
11:47 - muscles so that's it for stalking
11:52 - out hold on stock doesn't look quite
11:54 - right make
11:55 - sure the um call Bill make sure to not
12:01 - call compute Bill since it changes oh
12:03 - okay so I'm calling the function here
12:06 - and I should not be calling it
12:10 - okay so we are done a man we got some
12:14 - kind of achievement but I skipped it so
12:16 - hooray we got some achievement and if
12:17 - you're watching the video maybe you can
12:19 - pause it at that exact frame and see
12:21 - what the achievement was and let me know
12:22 - in the comments I have no idea what it
12:25 - was and I'm sad that I missed
12:27 - it
12:29 - okay we're almost done with the day at
12:31 - the supermarket let's check it out save
12:34 - and
12:35 - submit congratulations we have finished
12:38 - that course a day at the supermarket we
12:42 - have earned a new badge let's go back to
12:46 - the course
12:50 - page we're done with 42% of it that's
12:54 - really good news as you can see Rock
12:56 - papers and scissors and this this is
12:59 - really funny
13:00 - because somebody in the comments right
13:04 - fail
13:05 - bug um he's our very loyal fan fail buug
13:09 - asked what project I should work on and
13:12 - just instinctively with what we' have
13:14 - done I told him right at the top of my
13:17 - head work on rock paper scissors and
13:20 - that tells you how good of a teacher I
13:21 - am because that's exactly what they're
13:23 - asking you right Rock papers and
13:25 - scissors I don't like to brag but hey
13:27 - I'm gonna take credit
13:29 - when it's due so even you know these
13:33 - people with millions of users and all
13:36 - these professional curriculum developers
13:38 - even them they're like yep rock paper
13:41 - scissors is the next step so sure if you
13:44 - want to pay go ahead and click upgrade
13:46 - now and try it but what I would
13:48 - recommend honestly is you can start
13:51 - working on it in reel.it which is a
13:54 - really simple way to do it or you can
13:56 - download some kind of python installer
13:58 - which which I'll cover in videos once
14:00 - code academy series is
14:03 - over so you can do it right there and
14:06 - then you can paste it in the comments
14:08 - and I'll help you out if you get
14:10 - stuck okay so next part is a pretty big
14:14 - part where student becomes a teacher I'm
14:17 - going to keep that as its own separate
14:19 - video probably which is why you can see
14:21 - that unit 6 is an entity in itself this
14:26 - is going to be amazing part because you
14:29 - get to learn how classes work this is
14:32 - the part where things you can do some
14:34 - really powerful stuff I mean already
14:36 - with what you know you can do pretty
14:38 - much anything you can do a lot of
14:40 - powerful things already but after this
14:43 - section you learn even more powerful
14:45 - things okay this section will teach you
14:48 - I mean after this you can even make uh
14:50 - start
14:51 - making uh you know I'm not saying you
14:53 - can make the best graphics in the world
14:56 - that's a skill in its own but the logic
14:59 - behind games like Street Fighter and
15:01 - fighting games so you can use text based
15:03 - fighting for now um and you can create
15:06 - games where when somebody attacks other
15:08 - guy their health gets depleted or you
15:10 - can loot items and then it increments
15:13 - your level of gold in your inventory and
15:15 - you can buy things and when you buy
15:17 - things it decrements the amount of gold
15:19 - that you're currently carrying so there
15:21 - are a lot of things that you can start
15:23 - to do um even in um up up until what you
15:27 - did so far and especially when we get to
15:29 - unit 6 that's it for now a lot of
15:31 - talking from me I'm sorry about
15:34 - that um please subscribe to the channel
15:38 - it really helps out again we have broken
15:41 - past 100 subscribers which is great but
15:44 - our goal is to keep going up so we can
15:46 - help more people out in the community
15:48 - who are looking for programming help and
15:51 - generally just something fun that's not
15:53 - boring that you know you dread when you
15:56 - watch those programming videos so trying
15:58 - to spread the word like the video if you
16:01 - liked it if you need any help please
16:03 - comment below and I or somebody else who
16:06 - is really nice will help you out and
16:08 - thank you for watching I'll see you in
16:11 - code academy part 12 okay take care

Cleaned transcript:

hey guys what is up this is kazy from clever program.com and you're watching code academy part 11 okay so without any further Ado let's get started also see what I did there I was referencing 11 from the movie or the show stranger things that sucks if you don't if you didn't get it because I was wondering about how I'm going to solve this problem of counting past more than 10 fingers and that was a solution that came to my head I thought it was pretty witty if you liked it comment on it all right a day at the supermarket we're at 84% so let's keep going okay stocking out now you need to compute Bill function to take the stock inventory and something okay not going to read that too much read reading make the bill function changes to your compute function Bill hold on actually let's read it function to take the stock SL inventory of a particular item into account when Computing the cost ultimately If an item isn't in stock then it shouldn't be included in the total you can't buy or sell what you don't have totally makes sense make the following changes to your compute Bill function let's do that while you Loop through each item of food only add the price of the item to Total if the item stock count is greater than zero so I'm going to say for item in food and I'm going to say if uh let's create a variable here called price or sorry um we don't have to actually create a variable we can just say if stock of that item is greater than zero then this part happens so I hit tab to indent that you can also just do this simply backspace all the way up to the colon hit enter and it will do that for you don't forget your colons after every for Loop definition and if statement you have a colon all right because that's kind of like defines the things that you're indenting under that and that becomes a block of that code right so if this function you don't indent anything underneath it now it's not um the total is actually not part of the def it's actually going to give you an error in this case so you want to make sure that it's indented so you're saying these pieces of code they go together there's it's a block of code okay so if the item stock uh is greater than zero that's the only time we actually increment the cost of total by the prices the price of the item that totally makes sense because you can't sell well you don't have so right it would not make sense if we went to Apple which had a stock of zero but you went up and looked up the prices and incremented the prices of total by two right that would not make much sense so that's why you want to have this check here and that way if you get apple right you get um apple right here this part evaluates to zerbo and that therefore this part right here does not turn into apple and evaluate to prices of Apple which is two um and you get back two and then this turns into two right so that checks that if statement that we wrote that uh creates a check that stops that from happening if the item is in stock and after you add the price to the total subtract one from the item stock count now think about it if we're trying to compute the bill and our customer or let's say that uh you own a restaurant right and I come to your restaurant and your a restaurant has tremendously extravagant foods such as a banana apple orange and pear so let's say you sell me one of those things so you Go sir for your entree we have two bananas and for your appetizer whatever or your um dessert we have two oranges well after you compute the cost of the bill you wouldn't still have six bananas left you would now have four bananas left and you wouldn't have 32 oranges left you gave me two oranges so now you have 32 minus 2 so you have 30 oranges left so you have to take that into account so so in this case on line 22 when we increment the price we should also what's the opposite of increment decrement we should decrement the stock so we should decrement the quantity of that food in our stock dictionary does that make sense okay if it doesn't we work we we'll do it right now so what we're going to do is I'm going to say um that items value right what what are we decrementing we're decrementing the value of those items right so if we have banana we're going to decrement its value well to change the value we need to access it using the dictionaries key so here I'm going to use the dictionary stock and then I'm going to use the key item to access this six and I'm going to say Min equal 1 which is the same as saying is equal to stock of item minus one got it and let's just go through an example CU examples are awesome and something that professors and uh professors and teachers of such courses love not to give they're like theoretically understand all of this in your head but it's not as easy to understand it all in your head and I bet you that they didn't either they had trouble with it but for some reason they take pride in the theor the theoretic of all of this right the conceptualization of all of this so we should stay away from that work on tangible examples so you can get this okay so let me give you a basic tangible example here let's take that shopping list the same list right but I'm going to actually take that exact list so it's easy for you to to see what's going on I'm going to pretend like I'm calling the compute Bill function here I'm going to pass in that particular dictionary or I'm sorry the list banana orange Apple so let's go here that list is going to get passed to food now we come to total and what's going to happen is for item in food well food is just that list that we passed in and for item it's going to be banana the first time it's going to say if the stock of the banana right this is going to be replaced by banana this part is going to evaluate to what what is this part going to evaluate to it's really good to run through your code tangibly with actual examples so you can follow and see how the algorithm is actually working stock of banana is going to give you the value six right so dictionary stock key banana this is going to give you six is 6 greater than zero yes it is this part goes boom it evaluates to true we get to line 22 now our total is incremented by the price of that item so this turns into banana because remember We're looping through and item was banana so everywhere we see item it's now Banana right now on line 22 prices of banana evaluates to what four right if we look in our PR PR dictionary now total is incremented by four total is at four um stock of banana is decremented by one so what that effectively means is now in our stock we have 6 1 which is five five bananas left okay then the loop happens again this time it's orange right this time it's orange and it goes hey if stock of the item is greater than zero so our item is orange and stock of orange is actually 32 this statement is 32 is greater than zero this is true so what happens here this is incremented by the price of the item right so what's the price of an orange this part gets evaluated to the price of the orange which is 1.5 so now we have 5 .5 up here and this part also gets Orange right here this part is evaluated to um stock of orange again 32 32 minus um one so stock of items value should now be set to 31 so it goes all the way up to stocks and set this to 31 and uh it goes on one one more time but as you can see I'm not going to go through the code of what happens but you can effectively see that once it gets to Apple it realizes that the stock of that item which is Apple is zero this part gets evaluated to 0 is greater than zero this turns into false well I actually did end up going through the code and the lines 22 and 20 3 do not execute because if condition is false and ultimately also the for Loop goes back it goes back to the for Loop it realizes that was the last one so the for Loop ends it comes to the last line return total which in our case is 5.5 that's the answer we should get now we have ran through it in our head which is what we should always do but now what we're going to do is run through it in our reel.it and we're going to print out what it does oh I didn't Define what stocks and prices this so it's going to go crazy it's going to be like what are you talking about I have no idea you're a crazy person get away from me okay you saw we got 5.5 right that's what I had written down so yeah run through the algorithms in your head first and then once your head is exploding and you're like oh my muscles are being flexed of my brain that means that you're learning that means that you're actually improving that's the only time you're improving a lot of the times in conceptual things like programming when your brain muscles are stretching and they're kind of hurting and they you know it's almost like they're growing you're growing new muscles so that's it for stalking out hold on stock doesn't look quite right make sure the um call Bill make sure to not call compute Bill since it changes oh okay so I'm calling the function here and I should not be calling it okay so we are done a man we got some kind of achievement but I skipped it so hooray we got some achievement and if you're watching the video maybe you can pause it at that exact frame and see what the achievement was and let me know in the comments I have no idea what it was and I'm sad that I missed it okay we're almost done with the day at the supermarket let's check it out save and submit congratulations we have finished that course a day at the supermarket we have earned a new badge let's go back to the course page we're done with 42% of it that's really good news as you can see Rock papers and scissors and this this is really funny because somebody in the comments right fail bug um he's our very loyal fan fail buug asked what project I should work on and just instinctively with what we' have done I told him right at the top of my head work on rock paper scissors and that tells you how good of a teacher I am because that's exactly what they're asking you right Rock papers and scissors I don't like to brag but hey I'm gonna take credit when it's due so even you know these people with millions of users and all these professional curriculum developers even them they're like yep rock paper scissors is the next step so sure if you want to pay go ahead and click upgrade now and try it but what I would recommend honestly is you can start working on it in reel.it which is a really simple way to do it or you can download some kind of python installer which which I'll cover in videos once code academy series is over so you can do it right there and then you can paste it in the comments and I'll help you out if you get stuck okay so next part is a pretty big part where student becomes a teacher I'm going to keep that as its own separate video probably which is why you can see that unit 6 is an entity in itself this is going to be amazing part because you get to learn how classes work this is the part where things you can do some really powerful stuff I mean already with what you know you can do pretty much anything you can do a lot of powerful things already but after this section you learn even more powerful things okay this section will teach you I mean after this you can even make uh start making uh you know I'm not saying you can make the best graphics in the world that's a skill in its own but the logic behind games like Street Fighter and fighting games so you can use text based fighting for now um and you can create games where when somebody attacks other guy their health gets depleted or you can loot items and then it increments your level of gold in your inventory and you can buy things and when you buy things it decrements the amount of gold that you're currently carrying so there are a lot of things that you can start to do um even in um up up until what you did so far and especially when we get to unit 6 that's it for now a lot of talking from me I'm sorry about that um please subscribe to the channel it really helps out again we have broken past 100 subscribers which is great but our goal is to keep going up so we can help more people out in the community who are looking for programming help and generally just something fun that's not boring that you know you dread when you watch those programming videos so trying to spread the word like the video if you liked it if you need any help please comment below and I or somebody else who is really nice will help you out and thank you for watching I'll see you in code academy part 12 okay take care
