With timestamps:

00:00 - hey guys what is up this is Kazi from
00:03 - clever programmer calm and you're
00:05 - watching code Khadem e part 12 okay so
00:10 - let's get started and pick back up from
00:14 - student becomes teacher
00:16 - this is where object-oriented
00:19 - programming is gonna come into play okay
00:21 - if you ever heard that phrase
00:23 - object-oriented programming or OOP Oh P
00:26 - this is kind of where it comes from so
00:28 - let's see how these guys go about it
00:31 - welcome to this challenge course until
00:34 - now we've been leading you by the hand
00:36 - and working on some short and relatively
00:38 - easy projects I do agree with that that
00:41 - they do hold you by the hand a lot this
00:44 - is a challenge so be ready we have faith
00:48 - in you ready we're going to switch it up
00:51 - a bit and allow you to be the teacher of
00:52 - your own class make a gradebook for all
00:55 - your students the example above is just
00:58 - to remind you how to create a dictionary
00:59 - and then to access to items stored by
01:01 - the cat key so again you guys are Pro ID
01:05 - pros at this now because of how much
01:07 - practice we've done
01:09 - create a variable animal sounds store a
01:12 - dictionary even in the dictionary we
01:15 - have
01:16 - what is this called it's called a
01:20 - key and what is this whole thing called
01:23 - it's called a value and then the
01:26 - datatype here is a list with multiple
01:29 - elements inside of it meow and purr so
01:32 - if I access the cat key from animal
01:37 - sounds I'll get back the value meow and
01:39 - purr and then this comma separates the
01:42 - next key value pair and then that comma
01:45 - separates the next key value pair and
01:47 - it's legal also to have a trailing comma
01:50 - just like they have it right here
01:52 - create three dictionaries Lloyd
01:57 - Alice and Tyler okay these are all
02:01 - dictionaries so if a dictionary that's
02:04 - how you create a dictionary this is not
02:07 - set
02:08 - give each dictionary the keys name
02:11 - homework quizzes and tests
02:23 - okay so we are gonna have a key name
02:28 - with
02:30 - name Lloyd then we're gonna have a key
02:35 - homework with
02:38 - an
02:40 - empty that that right there
02:45 - okay and we're gonna separate it out
02:47 - nicely so it's easier to read
02:50 - quizzes
02:52 - we're gonna have an empty list just like
02:54 - the set and for a test we are also going
02:58 - to have an empty list
03:00 - so
03:02 - we I'm just gonna copy and paste this
03:06 - delete that and just change the names
03:10 - here so I don't have to do all of the
03:13 - work again
03:16 - Tyler here we go change the name this is
03:20 - Alice go here change that Alice this is
03:25 - Tyler and I've changed that with Tyler
03:28 - that's done I
03:30 - have the name and other keys should be
03:34 - an empty list the name key does not have
03:36 - the name Lloyd okay so it should
03:39 - actually be capital L I miss that my
03:42 - fault
03:43 - Alice and Tyler
03:47 - okay that part is done now fill out your
03:52 - Lloyd dictionary with the appropriate
03:53 - scores save some time with filled out
03:55 - the rest for you so here you can see for
03:59 - Alice we have the name Alice for
04:00 - homework we have two scores one hundred
04:03 - ninety two ninety eight 100 maybe this
04:06 - means that there were four homework
04:07 - assignments four quizzes that means
04:10 - there were probably three quizzes
04:11 - assignments where she got the score of
04:13 - 82 83 and 91 and for tasks probably two
04:17 - tasks where she got closer and and then
04:20 - well above an eight she got a 97 we're
04:23 - assuming it's of course based on 60d and
04:27 - 90 is an a
04:30 - so they want us to fill in that
04:32 - information I'm going to copy and paste
04:35 - it so I
04:36 - save some time I don't want have to type
04:39 - it out it says make sure to include the
04:41 - decimal point so your grades are stored
04:44 - as floats so what they're basically
04:46 - saying is that don't do this but do this
04:51 - okay what's the difference what's the
04:54 - difference between 88 or
04:57 - rather do I show you in okay let me show
05:02 - you really quickly in Python 2 what the
05:04 - difference is so if I open up a terminal
05:07 - here on my computer
05:09 - I'll show you guys maybe in some other
05:11 - video how you can use terminals but this
05:13 - is a Python 2 environment that I have
05:15 - opened up here now I'll show you the
05:18 - difference between maybe 88 and
05:21 - 8.0 or 80 8.0 and 88 so let's do 88 and
05:29 - this should not be
05:31 - divided by this should not be divisible
05:34 - by 3 but you see you get a 29 but not if
05:36 - I called it 88 point 0 I get the Cremora
05:41 - correct answer which is twenty nine
05:43 - point three three three so floating
05:46 - number tells it when you're dividing
05:48 - like hey I want
05:50 - it to be shown in the decimal place I
05:54 - like basically I don't want just integer
05:56 - division okay so in Python 2 that is
06:00 - important so that is one point why
06:03 - they're using floating numbers and
06:05 - they're saying this will be important
06:06 - later
06:08 - put it together now let's put the three
06:11 - dictionaries in a list together so we
06:14 - got three dictionaries and they want us
06:16 - to put like lloyd one dictionary and
06:19 - alice and the other dictionary and Tyler
06:22 - or
06:23 - Tyler also so they want us to put all
06:26 - three dictionaries in a list and call
06:28 - this list students okay so that's cool
06:33 - now Lloyd Alice and Tyler actually
06:35 - something a lot more complex and very
06:38 - simple things that you're used to doing
06:40 - up until now right so let's go and
06:42 - practice with them and play around
06:45 - so I can say print Lloyd if I printed
06:51 - Lloyd it or I'm sorry I should say print
06:54 - students of zero so the first element of
06:58 - students is gonna give me Lloyd which is
07:01 - actually a dictionary of the homework
07:04 - tasks quizzes and name and to access
07:07 - those things I can simply since this
07:10 - whole part right this whole part is
07:13 - basically this dictionary right here
07:18 - right it's just that dictionary how
07:20 - would I access homework from that
07:22 - dictionary I would just index it and say
07:25 - homework right pass in that key and if I
07:28 - did that I would get back that homework
07:31 - right there so let's go back so since
07:34 - that this whole part of Alice is that
07:36 - dictionary I can effectively just index
07:38 - it right over here and I can say
07:40 - homework and this will give me the
07:43 - homework scores let's say I wanted this
07:45 - Homer score of the
07:47 - third homework right I would put a two
07:51 - here because we start from zero zero one
07:54 - two two is the third element
07:58 - so I will go like this and I get back 75
08:01 - so if you look into
08:04 - load which is student of zero and if you
08:07 - go all up to Lloyd line one and you look
08:10 - at homework and you look at the third
08:13 - element you indeed get a 75 so this
08:16 - whole part the values to 75 it prints it
08:18 - out to the screen and
08:20 - nice okay
08:23 - let's go back
08:25 - so
08:27 - we have done that where they told us to
08:29 - create a list
08:32 - all right for each student in your
08:36 - students list print out the students
08:38 - data as follows okay so this is gonna be
08:40 - pretty cool we're gonna be using some
08:42 - loops and doing some really cool things
08:44 - so let's get to it okay
08:46 - how will we print out these things I
08:49 - would say for
08:51 - student in students write
08:56 - print well all these dictionaries notice
09:00 - have the same keys
09:04 - right
09:06 - so the first time we were looping
09:08 - through this list students again this
09:10 - variable is arbitrary I can call it
09:12 - whatever but I'm calling it students
09:13 - because each item in this list
09:15 - represents a student so it makes most
09:17 - sense to call a student and it's a
09:19 - Python convention and you're sealed is
09:21 - you'll see this very commonly it'll be
09:23 - like for singular in plural so for
09:27 - student in students for orange in
09:30 - oranges for
09:32 - you get the point
09:34 - okay so here what we're gonna do is
09:39 - we're gonna set for student and students
09:42 - print
09:43 - students because that's the or I'm sorry
09:46 - print
09:48 - that's
09:50 - dude and and we'll pass in the key right
09:56 - because student really is a dictionary
09:59 - so this Lloyd here is actually a
10:02 - dictionary so I'm basically doing
10:05 - dictionary and then key right that was
10:09 - our
10:10 - dictionary and then key and that will
10:14 - give our value
10:15 - so I'm doing that's two Princeton's name
10:20 - now I can do print students homework
10:25 - because that's the order to want it in I
10:27 - will set print student
10:32 - quizzes
10:35 - to put a parenthesis here I'm getting
10:39 - you guys used to using print as a
10:42 - function right so when you switch to
10:45 - Python 3
10:46 - you will be used to it and I say when
10:50 - because I know once you get a job as a
10:52 - Python developer and in your future
10:55 - career if your company is using Python 3
10:58 - we'll be good to know Python 3 right and
11:00 - eventually all companies and everybody
11:03 - will switch to Python 3 ok
11:08 - let's go right here and paste it and
11:11 - let's run this loop you can see that
11:14 - it's printing out that students
11:18 - what is that premiere yeah students name
11:22 - then it prints out that students
11:24 - homework and quizzes then tests so here
11:27 - Lloyd you can see his homework you can
11:30 - see his quizzes you can see his tests
11:32 - then the loop switches to Alice right
11:37 - which is a dictionary and then this part
11:40 - switches to Alice it looks up Alice name
11:43 - this part gets evaluated to Alice but as
11:48 - a string Alice right because this value
11:50 - here is the string and then it shows
11:53 - Alice right there and same thing happens
11:56 - with the homework and I think you get
11:58 - the idea
11:59 - but I'm not gonna go through the entire
12:01 - thing
12:05 - okay so let's get out of that
12:12 - cool
12:15 - hopefully this video wouldn't stop
12:17 - because my
12:19 - hard drive is getting full almost
12:24 - it's okay to be average they say is it
12:28 - really I thought it's not okay to be
12:30 - average
12:33 - alright so when teaching a class it's
12:36 - important to take the students averages
12:37 - in order so again they're now talking
12:39 - about this right five divided by two
12:41 - gives you two 5.0 divided by two gives
12:43 - you 2.5 float of 5 divided by 2 also
12:46 - gives you a 2.5 5.0 is a float and
12:50 - calling float on 5 also gives you a
12:52 - float basically turns that 5 into a 5.0
12:55 - so this float effectively turned float
12:59 - using the float function on 5
13:01 - effectively turns that into this line
13:03 - right there and then you get 5.0 divided
13:06 - by 2 and you get to 0.5 so it's
13:10 - important to remember that in Python 2
13:12 - especially that when you do division it
13:15 - by default does integer division which
13:17 - means that 5 divided by 2 will give you
13:19 - 2 instead of 2.5
13:22 - okay so write a function define a called
13:27 - average that has one argument numbers
13:30 - usually whenever I think plural in
13:31 - Python I'm thinking okay it's gonna be a
13:33 - list or a dictionary or a set or
13:36 - something with multiple things of values
13:38 - in it and not just one integer
13:40 - okay we define a function called average
13:43 - as one argument numbers inside the
13:45 - function call the built in sum function
13:47 - with the numbers list as a parameter
13:48 - store the result in a variable total so
13:51 - we'll create a variable called total and
13:53 - what we'll do is we'll call some on
13:56 - numbers what that means is
14:00 - if I had a list called numbers with
14:05 - numbers 1 2 3 4 and 5 I can call the
14:11 - function sum on my numbers I'm gonna
14:15 - have to do print so it can print it out
14:16 - and
14:18 - once I run this piece of code you can
14:21 - see that it sums it up 1 plus 2 of 1
14:25 - plus 2 plus 3 plus four plus five is
14:28 - indeed 15 and therefore you get 15 so
14:31 - some function just sums all of the
14:34 - numbers in a given list
14:37 - okay store the result in a variable
14:39 - called total like the example of juice
14:42 - float to convert total and store the
14:46 - result in total so what I can do is I
14:49 - can call float right here but that will
14:52 - probably confuse you guys a little bit
14:54 - so I'm gonna make it simpler I'm gonna
14:56 - say new total is just equal to float of
15:00 - total all that does is really like put a
15:02 - decimal place in front of total so it
15:05 - says Python make sure that this is saved
15:08 - as a float number because I also want
15:11 - when I do some division with it I also
15:13 - want to keep the decimal values it's
15:15 - important for me and so we say that's
15:19 - okay divide the total by the length of
15:21 - the numbers list use the built in length
15:24 - function so how do I get an average of
15:27 - anything well you just add those things
15:30 - up and you divide by how many there are
15:32 - so to get an average of one plus two
15:35 - plus three plus four plus five I would
15:37 - say one plus two plus three plus four
15:39 - plus five
15:40 - fifteen right and then I'll divide it by
15:43 - how many things there are so if I count
15:45 - I have one two three four five elements
15:49 - in this list I'll say five so 15 divided
15:53 - by 5 that gives me back three so the
15:56 - average of numbers
15:58 - does effectively give me back three and
16:02 - you can also visually look at it three
16:04 - lines right in the middle so you can
16:06 - know that this has an average of three
16:09 - but if it was a little bit more
16:11 - complicated or for some different number
16:13 - now three would not be the average but
16:15 - if you did the math how I told you to do
16:17 - it it would work so
16:19 - don't be lazy if averages aren't so
16:22 - natural to go ahead and actually compute
16:25 - the average of this add all of the five
16:27 - numbers and then divide by five
16:29 - so that's what they want you to do okay
16:33 - one quick way to do it is well
16:37 - how can you write a certain thing that
16:40 - always knows
16:42 - how many numbers to divide by right so
16:46 - if I wanna do average of
16:50 - let's say numbers how would I do that
16:55 - hmm well I will use one function to help
17:00 - me which will sum up the number so now I
17:02 - know already this is 15 but how do I get
17:05 - where does 15 divided by 5 I know I can
17:08 - hard code it okay but what if there was
17:12 - only one number in the list now you
17:15 - would have 1 divided by 5 which gives
17:17 - you a nonsensical answer
17:20 - because that would not be the average of
17:22 - that so how can we get the number of the
17:27 - items in the list and divide by that
17:30 - even if the list is dynamic or it keeps
17:33 - changing
17:33 - well that is why the Len function was
17:37 - built that tells you how many items
17:40 - there are so we take the sum of all the
17:43 - numbers and we divide by the length of
17:46 - the items in the list so how many items
17:48 - are in this case this part turns out to
17:51 - be 15 this part turns out to be 5 nice
17:53 - and easy we get the average of let's
17:57 - call it of numbers is 3
18:00 - so let's see what they want us to do
18:02 - divide total by the length of the
18:04 - numbers list use the built-in Len
18:06 - function to calculate that so
18:10 - I'm going to say that
18:15 - um
18:16 - I'm gonna say return
18:19 - total
18:21 - by the length to buy total by D so in
18:26 - this case they just want us to divide
18:28 - total by the length of the numbers list
18:30 - because we've already summed it
18:33 - right so I'm gonna say total divided by
18:36 - the length of
18:39 - that list that we passed this function
18:42 - so again this is a function that's
18:44 - taking in a parameter make sure you
18:45 - understand what that is the parameter
18:48 - here is numbers
18:50 - okay not that means that when we call
18:53 - this function we have to give it one
18:55 - argument one thing in the parentheses
18:57 - and then it goes through and does
18:59 - something with it a challenge I give you
19:01 - is
19:02 - write a function that takes in that sums
19:07 - up two numbers okay it takes in as input
19:10 - two numbers and returns their sum so I
19:13 - challenge you to write that and
19:15 - I'm gonna quickly show you the answer so
19:18 - positive videos if you want to try it
19:21 - but here would be the answer to that
19:24 - define I'll call that function sum a be
19:28 - return a plus B
19:30 - that's it okay but this which this is my
19:34 - way of checking if you know what you're
19:37 - doing this is a good way to check your
19:40 - knowledge about functions okay so I
19:44 - think that should be good start next
19:46 - lesson
19:48 - just wait and see so I assume this has
19:51 - to do something waits there nice little
19:55 - lame jokes sneaking in now we need to
19:57 - compute a student's average using
19:59 - weighted averages
20:01 - so students weighted averages right what
20:06 - does a weighted average mean well does a
20:09 - hundred on your homework mean the same
20:11 - thing as a hundred on your test
20:13 - absolutely not maybe 20 of your homework
20:17 - assignments or more might mean that
20:20 - right maybe if you do 20 homework
20:23 - assignments you get a 100 that might
20:25 - mean one test score of 100 so a tests
20:29 - are a big deal so they need to be
20:30 - weighted differently when we're
20:33 - calculating the actual grade
20:38 - so
20:40 - that's what they're doing here right
20:42 - there using 0.9
20:45 - times average of
20:48 - cost of apples so here they're taking
20:51 - the average cost of the apple so they
20:53 - just create a function called average to
20:54 - make their life easier and so did we and
20:57 - now once you make something a function
21:00 - you should use that function so they're
21:02 - using the average function to compute
21:04 - the cost
21:05 - of the apple and then they're
21:08 - multiplying that by 0.9 and then they're
21:11 - doing the same thing for bananas down
21:13 - here right you see that division sign so
21:17 - they're doing the same thing for bananas
21:19 - right here except they're multiplying it
21:21 - by what 0.1 this probably means that
21:25 - they hate bananas or for some reason
21:27 - they value apples more so they're
21:30 - multiplying it a higher number and for
21:33 - bananas it's you know the inverse of
21:36 - what I just said
21:37 - okay in the above example we create okay
21:41 - we weigh the average cost of bananas by
21:43 - 90% right 0.9 is 90% and the average
21:48 - cost of bananas by 10%
21:51 - so I'm sorry this is not division this
21:54 - is continuation okay I'm throwing you
21:56 - guys off this just means lion
21:58 - continuation this is a really ugly thing
21:59 - to do and you should try to avoid doing
22:02 - this at all costs it if you must that it
22:06 - makes a code harder to read and as you
22:08 - can see I made a mistake when I was
22:10 - reading it this is pretty much you could
22:12 - just ignore it okay this takes no effect
22:14 - so it's basically 0.9 times average cost
22:18 - of Apple plus
22:20 - 0.1 times average cost of bananas
22:23 - write a function called get average that
22:26 - takes a student dictionary like lloyd
22:28 - Alice Tyler as input and returns
22:30 - his/her weighted average okay so step
22:35 - one we define a function called get
22:38 - average okay define get average here
22:42 - takes in one argument call student make
22:46 - a variable homework that stores the
22:49 - average
22:52 - average of
22:55 - student
22:57 - homework
22:59 - so effectively what this is doing this
23:01 - function get average here is
23:04 - that
23:06 - we give it a student name let's say we
23:09 - give it a Lloyd right and then what it
23:12 - would do is it'll store in homework the
23:15 - average of that students homework score
23:18 - so it will do that
23:20 - homework
23:22 - right we'll go to the value that we get
23:25 - if we use the dictionary lloyd with the
23:27 - key homework we get back this calling
23:30 - the average function on that
23:35 - list right there right calling this
23:38 - average function so what it does is it
23:41 - takes this gives that to the average
23:44 - definition of the function or yeah gives
23:48 - that right there to average and then on
23:50 - line 22 it replaces this with that the
23:53 - sum of
23:55 - all of this would be what 90 plus 97
24:00 - plus 75 plus 92 that gives you 350 for
24:05 - this flow total turns that into 350 4.0
24:11 - because a float and then you get 3 5 4.0
24:15 - it divided by length of numbers in this
24:16 - case the length of numbers is 4 and you
24:20 - get back 3/5 4/4
24:23 - 88.5 and
24:26 - once that is returned this part here
24:30 - gets turned into 88.5 and so then
24:34 - homework gets stored as 88.5
24:37 - how cool is that
24:39 - right programming is so cool we define
24:43 - these algorithms once and then then do
24:46 - monstrous amounts of work in less than
24:49 - milliseconds right I find that really
24:53 - cool and
24:54 - what we're doing is we're creating our
24:57 - own functions and then we are already
24:59 - read to leverage it right we're already
25:03 - leveraging that in our continuous
25:07 - functions that we're writing so that is
25:10 - the definition of good code how reusable
25:14 - it can be all right so repeat step two
25:18 - for quizzes and tests
25:20 - okay so now we do the same thing for
25:24 - define gets Oh
25:27 - step two for quizzes and tests okay so
25:30 - step two is just this and here I will
25:35 - change this with quizzes and the
25:38 - variable I'll change it with oh I'm
25:41 - sorry with quizzes and then I'll do the
25:47 - same thing right here tasks
25:53 - okay that's some keyboard and enjoying
25:57 - skills that I've developed over the
25:59 - years
26:02 - multiply the three averages by their
26:05 - weights and return the sum of those
26:06 - three
26:07 - so
26:12 - multiply the averages by their three by
26:15 - their weights and return the sum of
26:17 - those three so now I will say weighted
26:21 - I'm gonna write this code in a cleaner
26:22 - way because they want us to write
26:24 - everything on one line weighted homework
26:27 - is
26:29 - equal to homework times
26:33 - well it's at 10% homework is 10% which
26:36 - means
26:38 - well I'm sorry this means 10%
26:42 - okay I'm not gonna write the zero but
26:45 - you can if you want point one is just
26:48 - 10% but okay I'll write
26:50 - the zero there to just make it very
26:53 - clear what it is
26:56 - okay and then I will do weighted quizzes
27:00 - is equal to
27:06 - quizzes multiplied by you know
27:11 - 30% weighted tasks equal to tests
27:16 - multiplied by 60% you get the idea and
27:19 - now we'll just return weighted homework
27:23 - + weighted
27:26 - quizzes +
27:28 - weighted tests
27:33 - all right is that what they want us to
27:35 - do
27:37 - they didn't say a return but I returned
27:40 - it anyways
27:41 - sending a letter great work now let's
27:44 - write get letter great function that
27:46 - takes a number scores then put and
27:47 - returns a string with the letter grade
27:49 - that the student should receive
27:53 - okay so now what they want us to do is
27:56 - create a function that
27:59 - will take in whatever this average grade
28:03 - is that the student got and convert it
28:06 - to a letter okay so that's pretty cool
28:09 - right we get back let's say cemani we
28:13 - turned that into a c slap that onto the
28:16 - report card or a loop continues running
28:18 - goes to the next student sees he got 85
28:21 - in our case might be lloyd or whoever
28:23 - Alice sees that you know she got a 75
28:26 - slaps a C sends it next gets Tyler
28:30 - season 95 slaps on an A and sends that
28:34 - card a report card to his father and
28:37 - father is happy and up in arms
28:41 - okay define a function called get let's
28:46 - her
28:47 - grade
28:49 - okay I have to do des right it's a
28:52 - function that has one argument called
28:54 - score
28:56 - expect score to be a number so score is
28:59 - going to be a number if this was
29:01 - professional code I would write some
29:03 - documentation as in something like I
29:07 - would say per am
29:11 - score is an int you know something like
29:14 - that but I'm not going to do that right
29:17 - now
29:20 - score to be number inside your function
29:22 - test score using a chain of
29:26 - if-else if-else statements like so
29:31 - if
29:33 - score is
29:35 - greater than or equal to zero right we
29:38 - have to translate English to code that's
29:41 - what you'll have to do if you have a job
29:43 - or you're just trying to create a fun
29:45 - game first you'll have to think of it in
29:46 - English then translate it into code then
29:49 - it's easier so if score is nine year
29:52 - above right I'm just writing that in
29:55 - Python nothing special I'm saying if
29:57 - score is greater than or equal to
30:03 - ninety I also return a
30:06 - else if
30:09 - score is greater than or equal to 80
30:16 - return b
30:18 - else if score is greater than or equal
30:23 - to 70 return
30:26 - c
30:28 - else if score is
30:32 - greater than or equal to 60 return
30:37 - d and now for the last one okay how i
30:41 - think of it is this is an if statement
30:42 - this is a condition and then this is
30:46 - what happens when that condition is true
30:48 - for your else statements you don't need
30:50 - a condition so you can just write else
30:52 - like this so now think about it should
30:54 - we write another else if statement which
30:57 - is lf-ii LIF or should we write an else
31:00 - statement
31:02 - what do you think
31:05 - we should write an else statement we
31:08 - could write an L lift statement saying
31:09 - if score is less than 60 write anything
31:14 - less than 60 give them an F but why
31:17 - write more code when we can keep it more
31:19 - elegant and just say else and say return
31:23 - f
31:24 - right that makes it real elegant and
31:29 - that's all that get letter should do
31:32 - finally test your function call get
31:34 - letter Glade function of the result of
31:36 - print the resulting grade so print
31:41 - and I'm gonna call the get letter grade
31:46 - function and it takes in a score so it's
31:51 - dependent on a score so I'll do get
31:56 - average
31:59 - pass LOI to get average and my
32:04 - parentheses should be correct so this
32:07 - part will get the average and it'll get
32:10 - evaluated to some number let's say 85 I
32:13 - don't know what it is and then the get
32:16 - letter grade function gets called on a 5
32:18 - that goes through that loop it converts
32:22 - that to be and that's what should
32:24 - actually erratically happen and print
32:26 - out B let's say so let's give this bad
32:29 - boy a try and actually we did get a B I
32:32 - didn't know what Lloyd's average was
32:34 - gonna be but
32:36 - that's what we ended up getting
32:39 - okay now just to blow your minds I'm
32:42 - gonna take you through actually what the
32:43 - algorithm is doing the whole nine yards
32:46 - if you don't want to do it you want to
32:48 - want to watch this part because you were
32:49 - like I'm sure I got it down skip it but
32:53 - I will walk through it really quickly so
32:56 - you can know what's going on okay this
32:59 - will give you a very good idea of
33:01 - everything that's happening under the
33:02 - hood
33:04 - okay so let's say we call these
33:08 - functions in this order okay
33:10 - now get average function gets called
33:16 - okay get average function gets called so
33:19 - we go to get average
33:21 - it gets it goes here it passes in lloyd
33:25 - because to get average we gave the
33:27 - argument lloyd so everywhere it says get
33:29 - average it passes in
33:31 - everywhere it sees student it in Lloyd
33:35 - so this turns into Lloyd
33:37 - this turns into Lloyd this turns into
33:41 - Lloyd and
33:43 - then it starts getting evaluated right
33:46 - so this part gets evaluated to Lloyd's
33:49 - homework which is this
33:55 - this part gets evaluated the next part
33:58 - gets evaluated to Lloyd's quizzes which
34:02 - is right here and the third part gets
34:05 - evaluated to Lloyd's test and we get
34:08 - back a 7590 here now actually
34:16 - it happens in a different order right
34:19 - this whole part gets evaluated first but
34:22 - just to make things simple I'm keeping
34:23 - it like this now we have the average
34:26 - function being called on this list right
34:29 - here
34:30 - so
34:32 - what happens here is we pass this list
34:36 - to the average functions everywhere you
34:38 - see numbers that list gets past so we
34:41 - pass that list this sum right here
34:46 - calculates this to 90 plus 97 plus 95 I
34:51 - think those 354 right yeah we've done
34:54 - this before 354 this part makes at 350
34:59 - 4.0 this part makes it three fifty four
35:04 - point zero divided by four 354 divided
35:10 - by point zero divided by four makes it
35:13 - eighty eight point five
35:15 - that returns eighty eight point five so
35:18 - further Lloyd's homework we get eighty
35:20 - eight point five now for Lloyd's average
35:25 - the same thing happens we for we pass in
35:29 - this argument to the function average so
35:32 - it passes this guy
35:35 - what was it before and feel like I
35:37 - deleted something okay so let's just
35:40 - keep it now on in total this numbers
35:44 - changes to that so the sum function gets
35:47 - called it sums up all those numbers that
35:50 - gives you a two to two right here
35:54 - we put in two two two in here this turns
35:57 - it into a two to two point zero
35:59 - we get to two two point zero divided by
36:02 - the length of this list right here the
36:07 - length
36:08 - you know numbers the length of that list
36:11 - is actually 3 so 2 2 2 divided by 3
36:15 - gives you
36:19 - 74
36:23 - right
36:28 - so effectively we have 74 I forgot what
36:33 - the other score was it was 354
36:36 - divided by how many homeworks that he
36:40 - have
36:41 - 4 right it was 88.5 so 88.5 i'm just
36:46 - gonna keep that up there to keep track
36:47 - of it a little bit
36:49 - now for test the same thing happens for
36:52 - lloyd wright we pass in this test right
36:56 - here this test gets put right there now
36:59 - it goes to average it passes in that
37:02 - list to the argument average
37:04 - everywhere you see numbers you get that
37:07 - sum of 75 plus 90 gives you back
37:12 - 165
37:14 - right 165 it gets called on this float
37:18 - of 165 that gives you one sixty five
37:20 - point zero one sixty five point zero
37:24 - divided by the length of the numbers
37:27 - which is to 165 divided by two gives you
37:30 - eighty two point five so we get back in
37:33 - eighty two point five and ultimately we
37:36 - end up so test is eighty two point five
37:39 - when we computed quizzes it was
37:42 - seventy-four when we computed
37:45 - homework it was eighty eight point five
37:48 - right
37:50 - these were the values then effectively
37:53 - what happened right around these lines
37:56 - of code meant these lines of code run so
38:00 - we take ten of 88.5 88.5 times 0.1 you
38:06 - get eight point eight five so this pole
38:10 - part turns into eight point eight five
38:12 - four quizzes
38:14 - what's seventy four thirty percent of
38:16 - seventy four
38:17 - that part turns into what was it just to
38:22 - double-check it turns into twenty two
38:25 - point two
38:26 - this part right here turns into
38:29 - eighty two point five times point six
38:32 - forty nine point five
38:36 - so
38:38 - what do we have here eight point five
38:41 - plus twenty two point two plus forty
38:45 - nine point five eight point eight five
38:48 - plus twenty two point two plus forty
38:50 - nine point five eighty point five five
38:54 - right so it returns eighty point five
38:58 - five so this whole part gets evaluated
39:00 - to idiy eight point eighty point five
39:04 - five and then this function gets called
39:07 - now get letter grade function so this
39:11 - eighty point five five gets call
39:16 - gets passed to the function get letter
39:18 - grade so now score is eighty point five
39:20 - five and
39:22 - it goes if score is greater than or
39:25 - equal to ninety
39:27 - score is actually eighty point five five
39:30 - so this part evaluates to false
39:33 - these lines of code don't run then it
39:37 - goes to line 42 else if score is greater
39:39 - than or equal to 80 score is eighty
39:42 - point five five is eighty point five
39:46 - five greater than or equal to 80 true
39:48 - this part of valor is so true and so it
39:51 - returns be this whole part gets
39:57 - evaluated to be and it ultimately prints
40:03 - out B to the screen which is what you
40:05 - guys got right there so this video
40:11 - whoa oh boy I hopefully that just blew
40:16 - your mind right that was that was really
40:19 - powerful there's a lot of brain work
40:21 - involved that's going on there but when
40:24 - you're writing all the step-by-step and
40:26 - you're writing and methodically you're
40:29 - not doing all that in your head all the
40:30 - time right once you're done writing it
40:33 - computer takes care of all the logic and
40:36 - all the hard work I mean computer takes
40:37 - care of all the hard work you just write
40:39 - the logic part and when you do it step
40:41 - by step it's simple first step write a
40:45 - thing that does average second step
40:47 - write a thing that gets averaged and
40:50 - waits two homeworks based on the average
40:52 - function we previously created third
40:54 - step
40:56 - write a get letter great function which
40:59 - uses our previous two functions and get
41:02 - letter grade all its job is to
41:05 - return to take a score a number and
41:09 - convert it basically to a letter right
41:16 - you guys that was a very exhaustive
41:19 - video but if you've stuck through it and
41:21 - saw the explanation step by step I
41:24 - guarantee you you now have a better
41:26 - understanding than
41:29 - 99.999999% of the people who've made it
41:31 - this far in the codecademy school course
41:34 - because they don't take the time to go
41:36 - through the fundamentals you have taken
41:39 - that time and put in that effort to get
41:42 - past those types of fundamentals and sit
41:45 - through and watch it your neural
41:47 - pathways in your brain are getting
41:49 - stronger because of that right so what
41:51 - that means is all of this stuff is gonna
41:53 - be more normal to you now it's gonna be
41:55 - more natural to you you're not gonna
41:57 - have to squeeze your brain all the time
41:59 - to think about it that's why I'm trying
42:00 - to create a pattern recognition here
42:02 - constantly going through if statements
42:04 - constantly going through loops and
42:07 - functions
42:09 - arguments all of that alright that's it
42:13 - for code Academy part 12 I will see you
42:17 - in the next video code Academy part 13
42:21 - this is Kazi from clever programmer com
42:24 - see you in the next video

Cleaned transcript:

hey guys what is up this is Kazi from clever programmer calm and you're watching code Khadem e part 12 okay so let's get started and pick back up from student becomes teacher this is where objectoriented programming is gonna come into play okay if you ever heard that phrase objectoriented programming or OOP Oh P this is kind of where it comes from so let's see how these guys go about it welcome to this challenge course until now we've been leading you by the hand and working on some short and relatively easy projects I do agree with that that they do hold you by the hand a lot this is a challenge so be ready we have faith in you ready we're going to switch it up a bit and allow you to be the teacher of your own class make a gradebook for all your students the example above is just to remind you how to create a dictionary and then to access to items stored by the cat key so again you guys are Pro ID pros at this now because of how much practice we've done create a variable animal sounds store a dictionary even in the dictionary we have what is this called it's called a key and what is this whole thing called it's called a value and then the datatype here is a list with multiple elements inside of it meow and purr so if I access the cat key from animal sounds I'll get back the value meow and purr and then this comma separates the next key value pair and then that comma separates the next key value pair and it's legal also to have a trailing comma just like they have it right here create three dictionaries Lloyd Alice and Tyler okay these are all dictionaries so if a dictionary that's how you create a dictionary this is not set give each dictionary the keys name homework quizzes and tests okay so we are gonna have a key name with name Lloyd then we're gonna have a key homework with an empty that that right there okay and we're gonna separate it out nicely so it's easier to read quizzes we're gonna have an empty list just like the set and for a test we are also going to have an empty list so we I'm just gonna copy and paste this delete that and just change the names here so I don't have to do all of the work again Tyler here we go change the name this is Alice go here change that Alice this is Tyler and I've changed that with Tyler that's done I have the name and other keys should be an empty list the name key does not have the name Lloyd okay so it should actually be capital L I miss that my fault Alice and Tyler okay that part is done now fill out your Lloyd dictionary with the appropriate scores save some time with filled out the rest for you so here you can see for Alice we have the name Alice for homework we have two scores one hundred ninety two ninety eight 100 maybe this means that there were four homework assignments four quizzes that means there were probably three quizzes assignments where she got the score of 82 83 and 91 and for tasks probably two tasks where she got closer and and then well above an eight she got a 97 we're assuming it's of course based on 60d and 90 is an a so they want us to fill in that information I'm going to copy and paste it so I save some time I don't want have to type it out it says make sure to include the decimal point so your grades are stored as floats so what they're basically saying is that don't do this but do this okay what's the difference what's the difference between 88 or rather do I show you in okay let me show you really quickly in Python 2 what the difference is so if I open up a terminal here on my computer I'll show you guys maybe in some other video how you can use terminals but this is a Python 2 environment that I have opened up here now I'll show you the difference between maybe 88 and 8.0 or 80 8.0 and 88 so let's do 88 and this should not be divided by this should not be divisible by 3 but you see you get a 29 but not if I called it 88 point 0 I get the Cremora correct answer which is twenty nine point three three three so floating number tells it when you're dividing like hey I want it to be shown in the decimal place I like basically I don't want just integer division okay so in Python 2 that is important so that is one point why they're using floating numbers and they're saying this will be important later put it together now let's put the three dictionaries in a list together so we got three dictionaries and they want us to put like lloyd one dictionary and alice and the other dictionary and Tyler or Tyler also so they want us to put all three dictionaries in a list and call this list students okay so that's cool now Lloyd Alice and Tyler actually something a lot more complex and very simple things that you're used to doing up until now right so let's go and practice with them and play around so I can say print Lloyd if I printed Lloyd it or I'm sorry I should say print students of zero so the first element of students is gonna give me Lloyd which is actually a dictionary of the homework tasks quizzes and name and to access those things I can simply since this whole part right this whole part is basically this dictionary right here right it's just that dictionary how would I access homework from that dictionary I would just index it and say homework right pass in that key and if I did that I would get back that homework right there so let's go back so since that this whole part of Alice is that dictionary I can effectively just index it right over here and I can say homework and this will give me the homework scores let's say I wanted this Homer score of the third homework right I would put a two here because we start from zero zero one two two is the third element so I will go like this and I get back 75 so if you look into load which is student of zero and if you go all up to Lloyd line one and you look at homework and you look at the third element you indeed get a 75 so this whole part the values to 75 it prints it out to the screen and nice okay let's go back so we have done that where they told us to create a list all right for each student in your students list print out the students data as follows okay so this is gonna be pretty cool we're gonna be using some loops and doing some really cool things so let's get to it okay how will we print out these things I would say for student in students write print well all these dictionaries notice have the same keys right so the first time we were looping through this list students again this variable is arbitrary I can call it whatever but I'm calling it students because each item in this list represents a student so it makes most sense to call a student and it's a Python convention and you're sealed is you'll see this very commonly it'll be like for singular in plural so for student in students for orange in oranges for you get the point okay so here what we're gonna do is we're gonna set for student and students print students because that's the or I'm sorry print that's dude and and we'll pass in the key right because student really is a dictionary so this Lloyd here is actually a dictionary so I'm basically doing dictionary and then key right that was our dictionary and then key and that will give our value so I'm doing that's two Princeton's name now I can do print students homework because that's the order to want it in I will set print student quizzes to put a parenthesis here I'm getting you guys used to using print as a function right so when you switch to Python 3 you will be used to it and I say when because I know once you get a job as a Python developer and in your future career if your company is using Python 3 we'll be good to know Python 3 right and eventually all companies and everybody will switch to Python 3 ok let's go right here and paste it and let's run this loop you can see that it's printing out that students what is that premiere yeah students name then it prints out that students homework and quizzes then tests so here Lloyd you can see his homework you can see his quizzes you can see his tests then the loop switches to Alice right which is a dictionary and then this part switches to Alice it looks up Alice name this part gets evaluated to Alice but as a string Alice right because this value here is the string and then it shows Alice right there and same thing happens with the homework and I think you get the idea but I'm not gonna go through the entire thing okay so let's get out of that cool hopefully this video wouldn't stop because my hard drive is getting full almost it's okay to be average they say is it really I thought it's not okay to be average alright so when teaching a class it's important to take the students averages in order so again they're now talking about this right five divided by two gives you two 5.0 divided by two gives you 2.5 float of 5 divided by 2 also gives you a 2.5 5.0 is a float and calling float on 5 also gives you a float basically turns that 5 into a 5.0 so this float effectively turned float using the float function on 5 effectively turns that into this line right there and then you get 5.0 divided by 2 and you get to 0.5 so it's important to remember that in Python 2 especially that when you do division it by default does integer division which means that 5 divided by 2 will give you 2 instead of 2.5 okay so write a function define a called average that has one argument numbers usually whenever I think plural in Python I'm thinking okay it's gonna be a list or a dictionary or a set or something with multiple things of values in it and not just one integer okay we define a function called average as one argument numbers inside the function call the built in sum function with the numbers list as a parameter store the result in a variable total so we'll create a variable called total and what we'll do is we'll call some on numbers what that means is if I had a list called numbers with numbers 1 2 3 4 and 5 I can call the function sum on my numbers I'm gonna have to do print so it can print it out and once I run this piece of code you can see that it sums it up 1 plus 2 of 1 plus 2 plus 3 plus four plus five is indeed 15 and therefore you get 15 so some function just sums all of the numbers in a given list okay store the result in a variable called total like the example of juice float to convert total and store the result in total so what I can do is I can call float right here but that will probably confuse you guys a little bit so I'm gonna make it simpler I'm gonna say new total is just equal to float of total all that does is really like put a decimal place in front of total so it says Python make sure that this is saved as a float number because I also want when I do some division with it I also want to keep the decimal values it's important for me and so we say that's okay divide the total by the length of the numbers list use the built in length function so how do I get an average of anything well you just add those things up and you divide by how many there are so to get an average of one plus two plus three plus four plus five I would say one plus two plus three plus four plus five fifteen right and then I'll divide it by how many things there are so if I count I have one two three four five elements in this list I'll say five so 15 divided by 5 that gives me back three so the average of numbers does effectively give me back three and you can also visually look at it three lines right in the middle so you can know that this has an average of three but if it was a little bit more complicated or for some different number now three would not be the average but if you did the math how I told you to do it it would work so don't be lazy if averages aren't so natural to go ahead and actually compute the average of this add all of the five numbers and then divide by five so that's what they want you to do okay one quick way to do it is well how can you write a certain thing that always knows how many numbers to divide by right so if I wanna do average of let's say numbers how would I do that hmm well I will use one function to help me which will sum up the number so now I know already this is 15 but how do I get where does 15 divided by 5 I know I can hard code it okay but what if there was only one number in the list now you would have 1 divided by 5 which gives you a nonsensical answer because that would not be the average of that so how can we get the number of the items in the list and divide by that even if the list is dynamic or it keeps changing well that is why the Len function was built that tells you how many items there are so we take the sum of all the numbers and we divide by the length of the items in the list so how many items are in this case this part turns out to be 15 this part turns out to be 5 nice and easy we get the average of let's call it of numbers is 3 so let's see what they want us to do divide total by the length of the numbers list use the builtin Len function to calculate that so I'm going to say that um I'm gonna say return total by the length to buy total by D so in this case they just want us to divide total by the length of the numbers list because we've already summed it right so I'm gonna say total divided by the length of that list that we passed this function so again this is a function that's taking in a parameter make sure you understand what that is the parameter here is numbers okay not that means that when we call this function we have to give it one argument one thing in the parentheses and then it goes through and does something with it a challenge I give you is write a function that takes in that sums up two numbers okay it takes in as input two numbers and returns their sum so I challenge you to write that and I'm gonna quickly show you the answer so positive videos if you want to try it but here would be the answer to that define I'll call that function sum a be return a plus B that's it okay but this which this is my way of checking if you know what you're doing this is a good way to check your knowledge about functions okay so I think that should be good start next lesson just wait and see so I assume this has to do something waits there nice little lame jokes sneaking in now we need to compute a student's average using weighted averages so students weighted averages right what does a weighted average mean well does a hundred on your homework mean the same thing as a hundred on your test absolutely not maybe 20 of your homework assignments or more might mean that right maybe if you do 20 homework assignments you get a 100 that might mean one test score of 100 so a tests are a big deal so they need to be weighted differently when we're calculating the actual grade so that's what they're doing here right there using 0.9 times average of cost of apples so here they're taking the average cost of the apple so they just create a function called average to make their life easier and so did we and now once you make something a function you should use that function so they're using the average function to compute the cost of the apple and then they're multiplying that by 0.9 and then they're doing the same thing for bananas down here right you see that division sign so they're doing the same thing for bananas right here except they're multiplying it by what 0.1 this probably means that they hate bananas or for some reason they value apples more so they're multiplying it a higher number and for bananas it's you know the inverse of what I just said okay in the above example we create okay we weigh the average cost of bananas by 90% right 0.9 is 90% and the average cost of bananas by 10% so I'm sorry this is not division this is continuation okay I'm throwing you guys off this just means lion continuation this is a really ugly thing to do and you should try to avoid doing this at all costs it if you must that it makes a code harder to read and as you can see I made a mistake when I was reading it this is pretty much you could just ignore it okay this takes no effect so it's basically 0.9 times average cost of Apple plus 0.1 times average cost of bananas write a function called get average that takes a student dictionary like lloyd Alice Tyler as input and returns his/her weighted average okay so step one we define a function called get average okay define get average here takes in one argument call student make a variable homework that stores the average average of student homework so effectively what this is doing this function get average here is that we give it a student name let's say we give it a Lloyd right and then what it would do is it'll store in homework the average of that students homework score so it will do that homework right we'll go to the value that we get if we use the dictionary lloyd with the key homework we get back this calling the average function on that list right there right calling this average function so what it does is it takes this gives that to the average definition of the function or yeah gives that right there to average and then on line 22 it replaces this with that the sum of all of this would be what 90 plus 97 plus 75 plus 92 that gives you 350 for this flow total turns that into 350 4.0 because a float and then you get 3 5 4.0 it divided by length of numbers in this case the length of numbers is 4 and you get back 3/5 4/4 88.5 and once that is returned this part here gets turned into 88.5 and so then homework gets stored as 88.5 how cool is that right programming is so cool we define these algorithms once and then then do monstrous amounts of work in less than milliseconds right I find that really cool and what we're doing is we're creating our own functions and then we are already read to leverage it right we're already leveraging that in our continuous functions that we're writing so that is the definition of good code how reusable it can be all right so repeat step two for quizzes and tests okay so now we do the same thing for define gets Oh step two for quizzes and tests okay so step two is just this and here I will change this with quizzes and the variable I'll change it with oh I'm sorry with quizzes and then I'll do the same thing right here tasks okay that's some keyboard and enjoying skills that I've developed over the years multiply the three averages by their weights and return the sum of those three so multiply the averages by their three by their weights and return the sum of those three so now I will say weighted I'm gonna write this code in a cleaner way because they want us to write everything on one line weighted homework is equal to homework times well it's at 10% homework is 10% which means well I'm sorry this means 10% okay I'm not gonna write the zero but you can if you want point one is just 10% but okay I'll write the zero there to just make it very clear what it is okay and then I will do weighted quizzes is equal to quizzes multiplied by you know 30% weighted tasks equal to tests multiplied by 60% you get the idea and now we'll just return weighted homework + weighted quizzes + weighted tests all right is that what they want us to do they didn't say a return but I returned it anyways sending a letter great work now let's write get letter great function that takes a number scores then put and returns a string with the letter grade that the student should receive okay so now what they want us to do is create a function that will take in whatever this average grade is that the student got and convert it to a letter okay so that's pretty cool right we get back let's say cemani we turned that into a c slap that onto the report card or a loop continues running goes to the next student sees he got 85 in our case might be lloyd or whoever Alice sees that you know she got a 75 slaps a C sends it next gets Tyler season 95 slaps on an A and sends that card a report card to his father and father is happy and up in arms okay define a function called get let's her grade okay I have to do des right it's a function that has one argument called score expect score to be a number so score is going to be a number if this was professional code I would write some documentation as in something like I would say per am score is an int you know something like that but I'm not going to do that right now score to be number inside your function test score using a chain of ifelse ifelse statements like so if score is greater than or equal to zero right we have to translate English to code that's what you'll have to do if you have a job or you're just trying to create a fun game first you'll have to think of it in English then translate it into code then it's easier so if score is nine year above right I'm just writing that in Python nothing special I'm saying if score is greater than or equal to ninety I also return a else if score is greater than or equal to 80 return b else if score is greater than or equal to 70 return c else if score is greater than or equal to 60 return d and now for the last one okay how i think of it is this is an if statement this is a condition and then this is what happens when that condition is true for your else statements you don't need a condition so you can just write else like this so now think about it should we write another else if statement which is lfii LIF or should we write an else statement what do you think we should write an else statement we could write an L lift statement saying if score is less than 60 write anything less than 60 give them an F but why write more code when we can keep it more elegant and just say else and say return f right that makes it real elegant and that's all that get letter should do finally test your function call get letter Glade function of the result of print the resulting grade so print and I'm gonna call the get letter grade function and it takes in a score so it's dependent on a score so I'll do get average pass LOI to get average and my parentheses should be correct so this part will get the average and it'll get evaluated to some number let's say 85 I don't know what it is and then the get letter grade function gets called on a 5 that goes through that loop it converts that to be and that's what should actually erratically happen and print out B let's say so let's give this bad boy a try and actually we did get a B I didn't know what Lloyd's average was gonna be but that's what we ended up getting okay now just to blow your minds I'm gonna take you through actually what the algorithm is doing the whole nine yards if you don't want to do it you want to want to watch this part because you were like I'm sure I got it down skip it but I will walk through it really quickly so you can know what's going on okay this will give you a very good idea of everything that's happening under the hood okay so let's say we call these functions in this order okay now get average function gets called okay get average function gets called so we go to get average it gets it goes here it passes in lloyd because to get average we gave the argument lloyd so everywhere it says get average it passes in everywhere it sees student it in Lloyd so this turns into Lloyd this turns into Lloyd this turns into Lloyd and then it starts getting evaluated right so this part gets evaluated to Lloyd's homework which is this this part gets evaluated the next part gets evaluated to Lloyd's quizzes which is right here and the third part gets evaluated to Lloyd's test and we get back a 7590 here now actually it happens in a different order right this whole part gets evaluated first but just to make things simple I'm keeping it like this now we have the average function being called on this list right here so what happens here is we pass this list to the average functions everywhere you see numbers that list gets past so we pass that list this sum right here calculates this to 90 plus 97 plus 95 I think those 354 right yeah we've done this before 354 this part makes at 350 4.0 this part makes it three fifty four point zero divided by four 354 divided by point zero divided by four makes it eighty eight point five that returns eighty eight point five so further Lloyd's homework we get eighty eight point five now for Lloyd's average the same thing happens we for we pass in this argument to the function average so it passes this guy what was it before and feel like I deleted something okay so let's just keep it now on in total this numbers changes to that so the sum function gets called it sums up all those numbers that gives you a two to two right here we put in two two two in here this turns it into a two to two point zero we get to two two point zero divided by the length of this list right here the length you know numbers the length of that list is actually 3 so 2 2 2 divided by 3 gives you 74 right so effectively we have 74 I forgot what the other score was it was 354 divided by how many homeworks that he have 4 right it was 88.5 so 88.5 i'm just gonna keep that up there to keep track of it a little bit now for test the same thing happens for lloyd wright we pass in this test right here this test gets put right there now it goes to average it passes in that list to the argument average everywhere you see numbers you get that sum of 75 plus 90 gives you back 165 right 165 it gets called on this float of 165 that gives you one sixty five point zero one sixty five point zero divided by the length of the numbers which is to 165 divided by two gives you eighty two point five so we get back in eighty two point five and ultimately we end up so test is eighty two point five when we computed quizzes it was seventyfour when we computed homework it was eighty eight point five right these were the values then effectively what happened right around these lines of code meant these lines of code run so we take ten of 88.5 88.5 times 0.1 you get eight point eight five so this pole part turns into eight point eight five four quizzes what's seventy four thirty percent of seventy four that part turns into what was it just to doublecheck it turns into twenty two point two this part right here turns into eighty two point five times point six forty nine point five so what do we have here eight point five plus twenty two point two plus forty nine point five eight point eight five plus twenty two point two plus forty nine point five eighty point five five right so it returns eighty point five five so this whole part gets evaluated to idiy eight point eighty point five five and then this function gets called now get letter grade function so this eighty point five five gets call gets passed to the function get letter grade so now score is eighty point five five and it goes if score is greater than or equal to ninety score is actually eighty point five five so this part evaluates to false these lines of code don't run then it goes to line 42 else if score is greater than or equal to 80 score is eighty point five five is eighty point five five greater than or equal to 80 true this part of valor is so true and so it returns be this whole part gets evaluated to be and it ultimately prints out B to the screen which is what you guys got right there so this video whoa oh boy I hopefully that just blew your mind right that was that was really powerful there's a lot of brain work involved that's going on there but when you're writing all the stepbystep and you're writing and methodically you're not doing all that in your head all the time right once you're done writing it computer takes care of all the logic and all the hard work I mean computer takes care of all the hard work you just write the logic part and when you do it step by step it's simple first step write a thing that does average second step write a thing that gets averaged and waits two homeworks based on the average function we previously created third step write a get letter great function which uses our previous two functions and get letter grade all its job is to return to take a score a number and convert it basically to a letter right you guys that was a very exhaustive video but if you've stuck through it and saw the explanation step by step I guarantee you you now have a better understanding than 99.999999% of the people who've made it this far in the codecademy school course because they don't take the time to go through the fundamentals you have taken that time and put in that effort to get past those types of fundamentals and sit through and watch it your neural pathways in your brain are getting stronger because of that right so what that means is all of this stuff is gonna be more normal to you now it's gonna be more natural to you you're not gonna have to squeeze your brain all the time to think about it that's why I'm trying to create a pattern recognition here constantly going through if statements constantly going through loops and functions arguments all of that alright that's it for code Academy part 12 I will see you in the next video code Academy part 13 this is Kazi from clever programmer com see you in the next video
