With timestamps:

00:00 - what's up everybody my name is nas and
00:01 - i'm here with
00:03 - jesse emmy and we are here to build a
00:05 - pinterest code that looks just like this
00:08 - look at this amazing amazing
00:12 - creation right this is an actual picture
00:14 - that you'll be making today where
00:16 - look at this you will you have this
00:17 - amazing grid of layout okay
00:20 - you have these amazing buttons following
00:22 - homepage right look at that
00:23 - oh let's go the homepage right the
00:25 - notifications the chat
00:26 - all this these are actual buttons and
00:28 - all this for example check this
00:30 - out you can actually search let's say
00:31 - research for a car let's say
00:33 - i type in car look at that now you have
00:35 - cars that pop up look at this
00:36 - right here right here right they pop up
00:39 - in like random order because that's how
00:40 - pinterest
00:41 - works it's such a such it's such a
00:44 - fun little project from not little an
00:47 - amazing project going to make look at
00:48 - this
00:48 - look at this it's so cool jesse how
00:51 - pumped are you for this jesse let's go
00:55 - i'm super po for this guys i mean
00:57 - pinterest is
00:58 - one of my favorite apps i think it's
01:01 - definitely the second top in my top
01:03 - three of apps that i use on a daily
01:05 - basis
01:06 - okay so what you can do with pinterest
01:08 - it is basically
01:09 - one big digital mood board okay you can
01:12 - collect
01:13 - all your pins of interest yes pun
01:15 - intended yes yes
01:17 - and also you can collect your ideas so
01:20 - not only do i use it for you know to
01:23 - look at cute dog pictures
01:24 - but also to find resources on code
01:27 - personal development
01:29 - blockchain whatever i feel like you know
01:32 - getting to know more about yes of course
01:34 - and of course i say you guys coming in
01:35 - welcome welcome welcome
01:37 - so awesome to have you here
01:40 - we are here to be able to build a
01:42 - picturesque that looks just like this
01:43 - this is going to be a fun one right we
01:46 - are going to make a bunny from scratch
01:47 - using react gs and using of course
01:51 - using right using style components as
01:54 - well so check this out
01:55 - right in here we'll be building a react
01:57 - gs application
01:58 - through here and we'll be using style
02:00 - components of course and other
02:02 - other multiple multiple uh multiple uh
02:05 - technologies
02:06 - now granted one little thing one little
02:09 - thing
02:09 - this will be split up into multiple
02:11 - parts okay one two three parts for the
02:13 - first part we're going to be building is
02:14 - just a
02:15 - basic layout just how you see here
02:17 - that's going to be the part for this one
02:19 - then we're going to add crazy more
02:20 - functionality and crazy more different
02:22 - things so you can put it on
02:24 - your portfolio and actually potentially
02:27 - get a job from it
02:29 - how sick is that huh that's pretty
02:32 - sick that's pretty sick all right guys
02:35 - we're gonna get started pretty much
02:36 - right away at this point so here's what
02:38 - we have okay
02:39 - jesse what are the things i need to do
02:41 - to start up with a application like this
02:43 - tell me
02:44 - well the first stop you always stop the
02:47 - first step you always do
02:48 - is you're going to use the command mpa
02:51 - mpx create
02:52 - react app yes okay so that's always the
02:54 - first step
02:56 - to start your react app up in
02:59 - your um on your computer okay
03:02 - granted that you have what installed nas
03:05 - npm and node right correct
03:08 - correct okay so you want to go ahead
03:10 - sorry just go ahead yeah so this is the
03:12 - first step
03:13 - you do guys right there so mp square
03:15 - reactor is the first thing you're going
03:17 - to do on your machine
03:18 - on your local machine right to start up
03:20 - a project list of course you need
03:22 - npm for this so make sure you have that
03:24 - portion installed
03:25 - if you don't go to npm.js i think
03:27 - diet.org or just on
03:28 - type in npm.google.com so that's going
03:31 - to be really really
03:32 - good and that's pretty much it once
03:33 - you've done that you will have a project
03:35 - looks just
03:36 - just like this right here just like that
03:38 - guys and we are currently we have we are
03:40 - at
03:41 - 300 likes let's go people thank you so
03:44 - much
03:44 - let's like this video together so it's
03:46 - likely to get it to more people because
03:49 - you know you know you do have to can be
03:50 - sometimes funky just let's get up to
03:52 - more people so that we can go ahead
03:54 - and show them guys we love making these
03:56 - videos for you so please
03:58 - let us know if you like them too okay so
04:00 - smash that
04:02 - like button as always as always okay and
04:05 - one really
04:05 - important bit guys we are we have a
04:08 - react js challenge
04:10 - right for you starting february 22nd
04:12 - february 22nd that is correct
04:14 - completely free free like
04:18 - literally free no charge at all you will
04:20 - be building
04:21 - what are they going to be buildings
04:22 - jesse um slack clone
04:26 - clone yeah but it's really jacked
04:29 - it's so easy like you don't want to miss
04:31 - out guys five day react yes challenge
04:34 - starting next monday okay so the whole
04:37 - week you're gonna be
04:38 - learning amazing stuff from the one and
04:41 - only nazdamanski
04:42 - and daniel i believe and daniel correct
04:45 - correct so
04:46 - go ahead and join click the link below
04:47 - down below in the description it's going
04:49 - to be a regular challenge
04:50 - completely free no questions asked right
04:54 - you'll be part of an amazing community
04:55 - you will building react gs uh
04:57 - this lack loan with react gs uh with
04:59 - components with style components with
05:01 - redux and so much more that's gonna be
05:03 - crazy three
05:03 - five days five days let's don't want to
05:06 - miss out anyways
05:07 - all right you know what let's just get
05:09 - started but
05:28 - so all right jesse let's go ahead and
05:30 - get started right what is the first
05:31 - thing what is the first thing we need to
05:32 - do so we have
05:33 - our goal is to currently get to this
05:34 - application like this right here okay
05:36 - that's our goal right
05:38 - so this is so maybe you can explain a
05:40 - little bit nas what feature we're going
05:42 - to be building today
05:43 - correct so the feature we're going to be
05:44 - building is what actually you tell me
05:46 - oh okay well as you can see on the left
05:49 - side
05:50 - um we are first going to be building a
05:52 - header correct okay guys it's going to
05:53 - be a header
05:54 - with styled components super exciting so
05:56 - stay tuned okay
05:57 - then the second component we're going to
05:59 - be building is the main
06:01 - board with the pins right here this may
06:03 - be correct yes
06:04 - exactly and just like the original
06:07 - pinterest
06:08 - what we're going to do is we're going to
06:09 - make the search bar
06:11 - we're going to add a functionality to it
06:14 - that
06:15 - well when you look for cars you also get
06:18 - the pictures of
06:19 - cars in the main board correct so
06:21 - basically you're going to get
06:23 - get pictures based get pictures based on
06:25 - based on search
06:26 - right here yeah and we're going to get
06:29 - those pictures
06:30 - from unsplash so who's excited
06:36 - that's going to be a fun one answer if
06:38 - you don't know it's a completely free
06:40 - just a way to find images and they have
06:41 - an api and we'll teach you exactly
06:43 - how to use the api because that's how we
06:45 - get images like if i go ahead and search
06:47 - for something let's say
06:48 - what can i search for um what can i
06:50 - search for
06:52 - bali guys where's bali oh
06:56 - look at that there it is it just showed
06:58 - up right oh whoop there it is oh man i'm
07:01 - longing so much for the beach right now
07:02 - to be honest
07:03 - but unfortunately we can right now so
07:06 - cool but you can look up everything guys
07:08 - so on splash
07:09 - is amazing let's get into it so guys
07:12 - that's what we're going to be building
07:13 - today so after you
07:14 - you went ahead and you did your what you
07:16 - did your uh what's it called um
07:18 - nps correct app let's go ahead and do
07:20 - npm install and
07:22 - uh not actually npm start actually to go
07:24 - ahead and start our application npm
07:25 - start
07:26 - let's go ahead and do that this can be a
07:27 - fun one i'm going to say yes because i
07:29 - have another
07:30 - application called the minus don't worry
07:31 - about that most likely you will not have
07:32 - that kind of question on the right hand
07:34 - side
07:34 - don't worry about that guys you'll be
07:36 - all good okay
07:38 - oh oh what is this adam
07:41 - is this is this a new ampex redirect app
07:44 - holy moly uh
07:45 - yeah well this is with a redux layer oh
07:48 - my
07:48 - oh yeah cause we're going to create
07:50 - redux guys oh
07:51 - yes yes yes yes
07:55 - okay but that's gonna be in the second
07:57 - part guys so
07:58 - don't worry about that yet cool so we
08:00 - got that portion okay now of course
08:02 - to get started the first thing to do is
08:04 - we're going to clean do a little bit of
08:05 - a clean up
08:06 - let's go ahead and remove this kind of
08:07 - stuff right here let's remove
08:09 - all this counter stuff we don't really
08:10 - need that correct awesome
08:12 - down this span right here let's go ahead
08:14 - and remove this also let's go ahead and
08:16 - remove some of the things that we have
08:17 - so let's go back to here
08:19 - this set up that test stuff don't really
08:21 - need this as well and i think
08:22 - we don't need a service worker do we not
08:24 - ah actually know what we can leave there
08:26 - for now that's fine no problem yeah
08:27 - everything with the word testing it
08:29 - that's what you're gonna be cleaning up
08:30 - guys plus
08:31 - the logo.svg we don't need that anymore
08:35 - um nas already removed that in the
08:37 - app.js
08:38 - okay and that's pretty much it we also
08:41 - wanna
08:42 - no we also wanna add something to
08:43 - app.css okay what is it
08:46 - so we want everything to be at the
08:48 - margin zero nice
08:49 - so to have our app really you know tight
08:52 - and clean
08:53 - and having not to deal with any default
08:56 - margins okay and again and the reason
08:58 - why we do this this right here so this
09:00 - star means everything by the way just so
09:01 - you guys know this star means everything
09:03 - so target everything inside inside our
09:05 - html right
09:07 - right so if we go ahead and do that
09:08 - we'll say margin zero and the reason why
09:10 - we say margin zero
09:11 - is actually for this simple solution
09:13 - it's because right
09:14 - i'm not margin top margin zero is
09:16 - because of the fact that
09:18 - right all these h1s h2s and you know and
09:21 - h3s they have
09:22 - margin padding come that come pre-built
09:25 - with them well for us we don't need that
09:26 - right so we kind of just want to start
09:27 - from a clean slate that's how we do that
09:29 - okay
09:30 - cool all right so we got that app.js
09:32 - that's fine and the css is clean
09:34 - all right what's up next what's
09:37 - up next well you can go to app okay here
09:40 - and then maybe change the first class
09:43 - into app
09:44 - okay so let's go ahead and do that yeah
09:49 - it's the first and i would just to show
09:51 - you guys you know what happens when you
09:53 - edit this one
09:57 - you can just put there you can say
09:59 - header
10:00 - okay wait it's not closing oh it is
10:03 - closing yes it is
10:04 - and then we're gonna add a main
10:08 - board yes correct so you can see here
10:10 - the header right here it's right there
10:12 - the header
10:12 - the main board is gonna be it's going to
10:14 - be right there so we're going to create
10:16 - biscuit guys
10:17 - two components two components we need to
10:18 - create in this one okay
10:21 - beautiful all right keep going yeah so
10:24 - do you want um so i like to work first
10:28 - when i've installed all of the packages
10:31 - but or do you just want to do it on the
10:32 - go no just keep going no we'll do on the
10:34 - go
10:34 - on the go yes we'll do that okay so
10:36 - let's start making
10:38 - the header okay so show them
10:41 - what the header of the original one
10:42 - looks like and what by the way thank you
10:44 - so much for the five
10:46 - indian i'm not sure what's it rupees
10:47 - rupees donation
10:49 - a fossa i appreciate you so much as
10:51 - always
10:52 - says hey guys why are you using style
10:53 - components instead of regular css or sas
10:56 - only main reason is because of the fact
10:58 - that
10:59 - style components have become very
11:00 - popular in um and
11:02 - kind of the real world and the workplace
11:05 - i myself have used style components
11:06 - whenever i've been working with
11:08 - react gs and i've been you know so i had
11:10 - the job inside components and so it's
11:12 - really important for you guys to learn
11:13 - as well
11:14 - cool but thank you all right keep going
11:17 - jesse sorry
11:19 - so no problem so we have the header here
11:22 - so we're going to be first building the
11:24 - header okay so now that we see it on the
11:26 - left side
11:27 - let's just make the header into a
11:28 - component so let's go to the source
11:30 - folder
11:31 - folder folder make a new folder
11:34 - component folder let's go ahead go ahead
11:36 - and click so we'll make it right here
11:39 - right there and then we have we're going
11:42 - to make of course
11:43 - the header component
11:47 - okay that's our first component okay
11:50 - so if you guys have installed the
11:52 - extension es6
11:55 - i believe written by one person called
11:58 - dsna snyder or something it's going to
12:01 - be super easy
12:02 - to um make a functional component you
12:06 - just do rfce
12:08 - tab and boom exactly there it is
12:11 - an extension extension is pretty simple
12:13 - right the extension is if you go kind of
12:14 - go to the extension section here
12:16 - it's this one right here es7 react right
12:18 - here i think it's called react uh what
12:20 - it's called ef7
12:22 - right there right there es7 react redux
12:24 - react code snippet so just go ahead and
12:26 - install those and you pretty much will
12:27 - be will be all good
12:28 - okay all right cool awesome thank you
12:31 - jesse
12:33 - now that you see it i changed the text a
12:35 - little bit
12:36 - but now it's not changed yet no because
12:38 - why we still need to
12:40 - import it into our parent component in
12:43 - our app.js
12:44 - okay so let's import it here
12:48 - let's make this into a component capital
12:51 - letters components are always capital
12:53 - letters guys always
12:54 - always and here import but it's not in
12:57 - the same folder as
12:58 - app.js can you tell so well where is
13:01 - module coming from
13:02 - so it's going to be import a header
13:06 - from and i think components
13:10 - components that's it right header
13:11 - component slash header
13:13 - yeah component there we go that's pretty
13:15 - much it that's it right because we're
13:16 - going to go again
13:17 - we're going to go into components folder
13:19 - and i'm going to down go down to the
13:20 - header.js folder okay
13:21 - cool awesome let's keep going so now you
13:23 - can see it on the left it changed from
13:25 - header to
13:26 - hello pinterest headers okay
13:30 - so one thing cool thing we're going to
13:31 - be doing today guys is we're going to be
13:34 - using styled components as we said and
13:36 - what are the benefits of stealth
13:37 - components nas
13:38 - well there's many benefits well for one
13:40 - the benefit of style component is the
13:42 - fact that
13:43 - you can go ahead and actually basically
13:45 - include variables so you can
13:46 - include variables into style components
13:48 - so for example let's say i had a
13:49 - variable here
13:50 - let's say loading right you can actually
13:53 - for example i can actually do something
13:54 - like this for example let me see let's
13:56 - just think about this okay
13:57 - let's say that this right here the
13:58 - header is a style component let's just
13:59 - say that okay
14:00 - i can say for example loading is equal
14:03 - to
14:03 - true and then my css can actually change
14:06 - depending if loading is true or not
14:08 - right so that's a really cool part and
14:10 - so that's why that's why stock
14:11 - components are
14:12 - so cool because obviously in sas like in
14:15 - stats or css
14:16 - i cannot pass in variables but
14:19 - with style components because it works
14:21 - with
14:22 - right javascript because with javascript
14:25 - guys
14:25 - we can do that so and you'll see exactly
14:28 - how that works later on as we go on
14:31 - and what i find so cool is that we don't
14:34 - need the css files anymore yes of course
14:37 - yes
14:37 - we don't need any separate css files
14:39 - anymore so it's like you're writing css
14:42 - specifically for that component within
14:45 - your file correct okay so that's going
14:47 - to be so if we go ahead go to the
14:48 - gs let's go ahead and go into that okay
14:50 - so what are we going to do
14:51 - into that jesse well let's start with
14:54 - making a
14:54 - wrapper okay okay so let's make a
14:58 - wrapper and you'll see on the
15:02 - and the wrapper is re it's really like a
15:04 - wrapper right so it's really oops
15:06 - it should not it's really like so that's
15:08 - why you see
15:10 - twice this right here
15:13 - this whole thing right here okay just
15:15 - you guys know okay cool continue on
15:16 - jesse
15:18 - yep and
15:21 - why don't you show us yeah now it's not
15:23 - the fine because i saved it by accident
15:25 - but if you go to our original nas
15:28 - can you show us the sections of the
15:31 - header
15:32 - the sections of the header so the header
15:33 - sections are pretty simple okay well the
15:35 - sessions the header we have what
15:36 - we have number one logo we have the logo
15:40 - okay and then we have the logo we have
15:42 - also the home page button right here
15:44 - okay then we also have the following
15:47 - button right here
15:48 - okay then we also have the kind of the
15:51 - in this input
15:52 - okay this is we call it a search wrapper
15:55 - and then we have all these different
15:56 - different buttons you know like the like
15:57 - this icon this icon this icon this
15:59 - second
15:59 - and then and pretty much that's it right
16:02 - that's it
16:03 - it's super easy guys once you see it
16:05 - your mind will be
16:06 - blown i will tell you that so let's
16:08 - first start with
16:09 - the logo wrapper okay i'm going to start
16:12 - typing
16:13 - okay right there
16:16 - good awesome as you can see right here
16:17 - she's adding the logo wrapper in here
16:19 - and again right it says the represent
16:21 - defined because we have not created that
16:23 - style component just yet so you have to
16:25 - give it one second
16:26 - right so you can see we have the wrapper
16:28 - that's going to wrap everything that's
16:30 - in here right
16:31 - everything that's in here that's gonna
16:32 - be the wrapper correct
16:34 - just like this amazing awesome
16:37 - and then that's pretty much it and then
16:39 - now we're working on this logo wrapper
16:41 - you can see and now next we're going to
16:43 - work on this homepage button
16:45 - right there okay and now we're also
16:47 - working on this following button right
16:48 - here which is going to be here right
16:49 - here okay
16:50 - makes sense cool awesome but wait guys
16:52 - we are 372 likes let's get this 400
16:55 - to 400 likes you guys rock as always
16:58 - thank you so so much
17:01 - let's go amazing okay all right continue
17:04 - on so the search bar wrapper that's
17:06 - awesome
17:07 - you can see just typing which is
17:09 - basically just creating all these
17:11 - different aspects
17:12 - of like uh these components right these
17:14 - style components just just for now just
17:16 - kind of as placeholders for now okay
17:18 - just fine yeah just to give you guys a
17:20 - good overview of what we are
17:22 - exactly doing here you know so go from
17:25 - having a top to bottom
17:26 - approach let's say so like just like now
17:29 - i said before right we're
17:30 - first doing if you look here at the code
17:32 - we have the logo
17:34 - then we have the home page button the
17:36 - following button
17:37 - search wrapper search bar correct and
17:39 - the icons were
17:40 - correct okay so as you can see oh
17:42 - awesome drawing
17:43 - as you can see most there are
17:46 - one two three four five six icons that
17:50 - we use
17:51 - from whatnots the six icons that we use
17:54 - actually from something called material
17:55 - ui guys
17:56 - it's materialized so material is going
17:59 - to contain all the icons so what you do
18:00 - is wait to actually install material i
18:02 - so let's go ahead and do that right now
18:03 - so we can do material ui
18:06 - right there and if you go to material
18:08 - right right here you can see that to
18:09 - install it's pretty simple just simply
18:11 - as npm install
18:12 - material ui core so let's go ahead and
18:14 - copy that
18:15 - okay and we'll paste that into into
18:18 - let's go ahead and click click create a
18:19 - new uh terminal
18:21 - we'll do command v or paste for yours
18:23 - for your windows
18:24 - npm install material core that's pretty
18:26 - much it so let's go ahead and wait for
18:27 - that for one second
18:29 - once the install material ui core
18:30 - there's one more thing to install and
18:31 - that is the actual material ui
18:33 - icons and that's as simple as just
18:35 - simply saying
18:36 - i think npm install util ui so let's go
18:39 - ahead and do that
18:40 - and just simply set up core we simply
18:42 - say
18:43 - icons icons that's pretty much it that's
18:45 - all you got to do guys that's all you
18:47 - have to do
18:48 - right so icons are being installed cool
18:50 - cool cool
18:51 - awesome and so now if i go ahead and go
18:53 - let me let's go check it out if i go
18:55 - material
18:56 - with you high icons i just ate bless you
18:59 - thank you material icons right there
19:02 - so let's say we want to what is the
19:04 - first icon we want for example jesse
19:06 - so of course the famous pinterest icon
19:11 - you actually have that yeah so
19:14 - there you look up pinterest no way hold
19:16 - on there it is
19:18 - there it is it is so amazing yeah
19:21 - okay never mind and as you can see
19:26 - on what nas is selecting right now is
19:29 - that is how you import this icon at the
19:31 - top of your code
19:33 - that's how easy it is guys so you
19:35 - already have installed the icons library
19:37 - yes
19:38 - you know and then when you put this at
19:39 - the top of your code you can just use
19:41 - the pinterest icon like this on line
19:43 - nine
19:44 - like it's just a component correct and
19:46 - so once we import that now we go ahead
19:47 - and use it just like this right here
19:49 - so let's go ahead and actually see how
19:50 - this looks like can we without creating
19:52 - all these other style components could
19:53 - we create our first
19:54 - style component and actually see how it
19:55 - looks like jesse yeah
19:57 - so you want me just to start um yes yes
20:00 - yes
20:01 - want me to start okay so let's first
20:04 - let's first style the wrapper
20:08 - okay so install components
20:11 - this is what you do guys you make a
20:13 - variable here wrapper
20:15 - and that is what's here on line six okay
20:18 - then you go and give it you're gonna do
20:19 - whoops
20:20 - help not not on line six but
20:26 - excuse me what happened no no i got it i
20:29 - got it i calmed it out i'll comment i'll
20:31 - just see i counted up oh i don't want
20:34 - you to be
20:35 - to have to have to create all these just
20:37 - all these style buttons
20:38 - and all in one go okay oh my god yes yes
20:42 - yes
20:42 - that's good thinking okay so style div
20:45 - back ticks okay guys back decks
20:49 - and we're gonna give it a display flex
20:51 - so everything is
20:52 - nicely horizontally aligned yes whoop
20:55 - wait let me type correctly and again
20:58 - the style there means you're creating a
21:00 - div guys that's how you that's how you
21:02 - create divs in style components okay
21:04 - we give a display flex that way so we
21:06 - can go ahead and align these up very
21:08 - nicely together
21:09 - okay and we give the item center to make
21:11 - sure that everything is in the center
21:12 - right here
21:13 - okay beautiful and we give it a 56
21:15 - pixels so this whole wrapper
21:17 - the height is going to be 56 pixels so
21:18 - this whole wrap right here boom right
21:20 - there okay
21:21 - we're also going to give it a small
21:22 - padding right here 12 pixels four pixels
21:24 - and again
21:25 - as you guys know this means top right
21:28 - bottom
21:28 - left right trouble so keep this in mind
21:32 - whenever you're doing this kind of stuff
21:33 - it's really cool
21:34 - right you know this kind of stuff just
21:35 - keep in mind the key word trouble
21:37 - right there trouble troubler trouble
21:41 - joe see trouble see top
21:45 - right bottom left it's a really really
21:48 - cool way to keep track of this kind of
21:50 - stuff
21:50 - okay really cool way i awesome girl
21:53 - awesome so we have a background color
21:55 - white and the color black
21:56 - so what that's with that being here
21:58 - let's go ahead and now create the logo
21:59 - wrapper to make sure that we can
22:00 - actually see it so because right now
22:02 - currently right now if we go ahead and
22:03 - save this we have the local wrapper is
22:05 - not defined icon button defined and
22:06 - style is not defined as well
22:08 - now yeah let me import these at the top
22:12 - go ahead icon button nice
22:15 - so do you remember what the icon button
22:17 - is actually don't know is it because the
22:19 - button
22:20 - to be able to click on is that what it
22:21 - is like this no yeah it's that bubble
22:24 - effect
22:25 - exactly yeah it's that bubble effect
22:27 - when you hover over it that's what it is
22:29 - so yeah wait we've just reached 420
22:33 - 412 likes let's go guys thank you so
22:36 - much appreciate you as as as always guys
22:40 - go ahead go ahead and smash the like
22:41 - button for us help us out
22:43 - to get this out to more people so the
22:46 - deal can be coming together let's make
22:47 - this
22:48 - the best [ __ ] coding academy coding
22:51 - universe out there we want to be
22:54 - up there so when you think of coding we
22:56 - are there to provide you that knowledge
22:58 - all right that's what we're here to do
23:00 - all right let's keep going
23:03 - let's go okay so logo wrapper
23:06 - okay yes logo wrapper
23:10 - and the logo wrapper well it says what
23:12 - it is right it is
23:13 - wrapping the logo correct local wrapper
23:16 - but in this case
23:17 - we're using that actually to style
23:20 - pinterest
23:21 - icon okay go ahead because it has a
23:23 - really specific color right
23:24 - yes like this fiery red so
23:28 - guys when you want to style something of
23:30 - material ui
23:31 - you have to go into the documentation
23:33 - right and pinterest icon is actually a
23:35 - so-called
23:36 - svg icon so in order to
23:39 - target this svg icon you need to
23:43 - reference to a certain class you know
23:44 - which is called like this
23:46 - mui svg icon
23:50 - dash root okay and we'll show you why
23:52 - i'll show you why
23:53 - why that's the case in a second as we go
23:55 - into the inspect element so let's go
23:57 - keep going
23:58 - so i'm just gonna pop this one in here
24:02 - so color is this fiery red it has a font
24:05 - size of 32 pixels so it's a little bit
24:07 - bigger than what's showing up right now
24:10 - and when you hover over it it gets you
24:12 - that little hand
24:13 - okay the cursor pointer
24:16 - that's the hand
24:21 - let's keep going jesse so that's the
24:23 - logo
24:24 - wrapper um and i think that's
24:27 - pretty much when we saved this we're
24:28 - able to see how it looks like i think
24:30 - let's see let's see
24:31 - we have style okay so one thing is style
24:32 - is not defined so why is that because
24:35 - we still need to import styles
24:38 - styled from it's called style wait is it
24:42 - style dash components
24:44 - yep styled way styled
24:48 - dash component right exactly
24:51 - yes just making sure i'm right just
24:54 - okay module cannot result can i result
24:56 - it's not called
24:57 - what is it called i forgot but did you
25:00 - already install it
25:01 - oh it didn't install style components
25:03 - hold on no no no
25:05 - npmi so look at this guys so styling
25:08 - components let's go and install that
25:09 - first style component
25:11 - right there yeah style components good
25:14 - it's not components go ahead do uh not
25:16 - here let's go ahead and do that inside
25:18 - the npm right there see
25:20 - yeah npm install right there stay styled
25:22 - components
25:23 - so let's go ahead and do the right here
25:24 - the bottom cool and
25:26 - install save style component that's
25:28 - gonna be what we want to do it's
25:29 - installed
25:30 - okay now it's so good let's go ahead and
25:31 - save this up save this let's see
25:34 - boom right there hey let's go
25:37 - that's what i'm talking about nice
25:40 - beautiful okay amazing amazing awesome
25:43 - guys wait guys one more thing i want to
25:44 - say to you guys
25:45 - if you are interested in learning reg gs
25:48 - and becoming a javascript developer yeah
25:50 - developer
25:50 - we have launched the best of you as you
25:53 - know we have the
25:54 - mo the best course out there on the
25:57 - planet period
25:58 - it is one of the best courses out there
26:00 - on the planet called profit with
26:01 - javascript
26:02 - link is in below go ahead and check it
26:03 - out you get to build
26:05 - crazy crazy applications like slack like
26:07 - facebook get to
26:08 - create applications like a gmail clone
26:09 - twitter clone and so much more
26:11 - you get to be part of amazing community
26:13 - and you get to have coaching calls
26:15 - with me with jesse and so many other
26:18 - teachers on a weekly basis for a
26:20 - lifetime
26:21 - for a lifetime so if you're interested
26:23 - link below okay let's keep going jesse
26:25 - whoo okay so what should we do next well
26:30 - make the home page buttons okay buttons
26:32 - i think
26:33 - yeah let's do it let's do it so like
26:35 - button yeah so actually the buttons are
26:37 - links
26:38 - references to other pages right but
26:41 - we'll make those pages later but it's
26:43 - just an adren
26:44 - href okay so we're gonna do this
26:47 - and we're gonna
26:51 - oop everything is red
26:55 - close this one off here nice and then
26:57 - we're going to do the same thing
26:59 - with the following okay following button
27:02 - yeah
27:02 - you see these are just just buttons and
27:04 - there's all they're simply doing is
27:05 - they're simply redirecting you
27:06 - right now currently to the homepage for
27:07 - now for now just the whole page
27:09 - so if i go ahead and save this let me go
27:10 - ahead and save this
27:12 - save this let's go ahead and take okay
27:13 - oh homepage button undefined boom let's
27:16 - go
27:19 - gotta keep up gotta keep up okay so
27:21 - let's start defining those things guys
27:25 - so here home pitch button
27:28 - and i feel like i did this a little bit
27:30 - in a redundant way but maybe
27:32 - you can improve it later so let's see
27:35 - let's first start out with this you know
27:37 - when it comes to coding you always just
27:38 - want to start out with something that
27:40 - works and from there on
27:41 - you can always refactor later okay guys
27:44 - so don't worry too much
27:46 - about it so a height display flex of
27:48 - course height of 48 pixel
27:50 - min width of 103 pixel
27:54 - line items center that's the center
27:57 - right there just flat content
28:02 - horizontally as well and the water
28:05 - release is going to give us that really
28:07 - nice effect right here this really nice
28:09 - kind of concave shape right here
28:10 - that's going to be what the border
28:11 - radius is for guys okay that's going to
28:13 - be the really cool part
28:15 - okay awesome we have the cursor pointing
28:16 - amazing sweet sweet sweet okay
28:19 - and then it's going to have a background
28:21 - color like the home page button is going
28:23 - to have like
28:24 - it's black but it's not totally black
28:26 - you know what i mean what is it
28:27 - no it's not black rgb
28:30 - okay okay let's see jesse let's see what
28:33 - you got jesse
28:34 - let's see what you got okay okay so
28:37 - that's just the button okay
28:38 - but within styled components there's
28:40 - something we can do
28:42 - we can target just like within css we
28:44 - can target certain elements
28:47 - within no i would just do it like this
28:50 - but no way oh yeah sure
28:54 - squeezy okay all right so upon the link
28:58 - you know upon a link
29:01 - you know an href always has that ugly
29:04 - word that's true very ugly decoration so
29:07 - i don't want to
29:08 - i don't want to ever ever want to see
29:10 - that you know
29:11 - so and let's give it a font weight
29:15 - of 700 okay 700
29:18 - 700 700 yo 700 yo
29:23 - so let's check out the under the
29:24 - following
29:26 - yeah that's fine i will go and count
29:27 - this part out don't worry about it but
29:28 - the phone okay
29:29 - wait jesse don't delete this wait just
29:32 - i didn't i didn't delete it okay let's
29:34 - go ahead and do that oh it's gonna
29:36 - save this oh oh [ __ ] look at that that's
29:39 - fine the whole page button we have what
29:40 - it says follow following button
29:42 - following button is not defined
29:44 - even though we have the following button
29:46 - here let's try our time
29:50 - no look at this guys one cool thing that
29:52 - you guys need to understand here is that
29:53 - you see how
29:55 - you see how these display flex these are
29:57 - starting to align very nice horizontally
29:59 - you see this right here
30:00 - look at that because why because of
30:02 - display flex right
30:03 - without display flex if i right click on
30:05 - this look at this
30:07 - and if i went ahead and if i remove this
30:08 - playface on this specific portion look
30:10 - at this
30:11 - if i did display fact now remove this
30:14 - oh my god boom boom right there see
30:18 - it becomes weird from top to bottom it's
30:20 - [ __ ] up
30:21 - it's just it just becomes [ __ ] up okay
30:24 - um
30:24 - hopefully youtube does not ban us for
30:26 - that
30:28 - messy it's it is this that will make it
30:30 - look very messy look we had the home
30:31 - page button now
30:32 - let's we'll go ahead and work on the
30:33 - following button right here oh i just
30:35 - let's go ahead and see how that works
30:36 - out
30:36 - yeah so the following button is actually
30:38 - has the same shape
30:40 - um but it has a different background
30:42 - color
30:43 - and on the hover it also works
30:44 - differently so constant
30:49 - following button
30:53 - tactics i always find it so funny this
30:55 - one has backticks i know it's weird
30:56 - right i know it's a yeah
30:57 - it's so weird so weird but also so fun
31:00 - at the same time so guys
31:01 - top thing is the same as the
31:05 - homepage button so i'm just gonna pop
31:07 - that into here
31:08 - but background color is different of
31:11 - course so
31:12 - we're gonna make this one white okay
31:15 - beautiful beautiful beautiful now here's
31:17 - here's a really cool part so let's go
31:18 - ahead and save this jesse
31:19 - awesome let's go ahead and save that
31:21 - yeah okay
31:23 - so save that save this let's see if this
31:25 - works out let's see let's see let's see
31:27 - oh this tax declaration is just no bueno
31:34 - no one so what do you do well i'm saying
31:37 - the tax declaration i'm saying you see
31:38 - how you see
31:40 - we haven't targeted that href yeah
31:43 - this is what we're talking about guys in
31:44 - order to remove that hideous hideous
31:46 - text decoration
31:48 - we need to go ahead and target it in
31:49 - here so let's go ahead and do that and
31:51 - this is where it's actually
31:52 - style components are very very very
31:54 - similar to something like sas right
31:56 - because you can have you can nest
31:58 - css classes inside css classes that's
32:00 - the big
32:01 - part about style components that you
32:03 - know we can do
32:04 - so you can see it check this out as jess
32:06 - is saying
32:07 - she went ahead and she nested the a tag
32:10 - meaning
32:11 - the a tag within the following button is
32:13 - going to be the one that's targeted
32:14 - let me give this test equation a color
32:16 - block and a font weight of 700. it's as
32:18 - simple as that that's the really cool
32:19 - part about this okay
32:21 - yeah and you want me to show the hover
32:23 - one second so let's go ahead and
32:24 - save this okay oh
32:30 - so that's there okay let's go ahead and
32:33 - see the power state
32:34 - because when i hover over this you see
32:35 - this right here and i hover this i
32:37 - should be able to hover
32:38 - over this and have this type of
32:40 - functionality right here so let's go
32:41 - ahead and see this
32:43 - yeah so but usually guys when
32:47 - you want to hover on something in css
32:50 - you target first the element right and
32:53 - then using colon
32:54 - hover but in this case in the style
32:56 - component you just do this
32:58 - hover yeah okay good good good
33:02 - good good good good good then we have a
33:04 - special color
33:06 - like a light grayish
33:12 - i'm going to save it now let's go so
33:15 - save that
33:16 - let's see oh let's go jesse
33:19 - okay so one really cool thing when i add
33:21 - to this is actually really awesome so
33:23 - look at this you see the really cool
33:24 - part about style components guys is that
33:26 - again
33:26 - we're nesting here however we're nesting
33:28 - the e-tec and so forth
33:29 - but another thing you can ask is
33:31 - actually the buttons themselves
33:33 - you can see how this one has the 48
33:34 - pixels and so does this one this one has
33:36 - 123 faces and so does this one
33:38 - and this one is this one and so this is
33:40 - this one as well as this one so
33:41 - they are both very similar there's some
33:44 - the only thing the only thing they have
33:45 - difference
33:46 - is this background color so what can we
33:48 - do to
33:49 - remove this repeatedness we'll check
33:51 - this out here's what we can do i can
33:53 - actually create a style component like
33:54 - this i can say
33:55 - const right there look at this home
33:57 - button for example
33:59 - buttons equals style.div okay so watch
34:02 - watch it with me okay style it didn't do
34:04 - with me of course
34:05 - okay and i'm going to create a style
34:07 - that div like so
34:09 - okay and this is going to have
34:10 - everything that's in common so i will i
34:12 - will say for example
34:13 - although this right it's the same
34:16 - correct
34:16 - all this is the same so display flex 48
34:18 - pixel 123 pixels center center center
34:20 - yeah so yeah i will go ahead and copy
34:22 - this and i'll give it to here look at
34:24 - this
34:25 - boom right there all right yeah enter
34:27 - this out i will save that
34:29 - okay now of course nothing's going to
34:30 - change and why but pretty simple right
34:33 - but now i can go ahead and do this i can
34:35 - remove this look at this
34:36 - actually let's go ahead can we should we
34:38 - put cursor point down here too
34:40 - yeah we should yeah cursor pointer
34:44 - awesome so it's going to remove this
34:46 - crystal pointer okay
34:48 - and it's going to remove this portion
34:49 - right here as well
34:51 - and look at this right now it's about to
34:53 - go really bad so right now
34:55 - yeah i know it's hold on hold on hold on
34:58 - hold on i got you oh lord
35:02 - so here's what you want to do i'm going
35:04 - to do instead of staying saying
35:06 - style.dip i will say
35:07 - style and i will pass in the home
35:09 - buttons
35:11 - like this look at this so i'm going to
35:14 - save that now
35:16 - oh look at that so what just happened is
35:20 - inherited this home button style and
35:23 - applied it to here
35:24 - and then here is where the changes come
35:26 - in right this
35:27 - makes its own changes for this specific
35:29 - homepage button
35:30 - but inherits this right here homepage
35:33 - button
35:34 - that is the sick part okay same thing
35:37 - goes for this look at this
35:38 - i can say styled home page
35:42 - home page buttons boom right there
35:45 - save that okay uh wait
35:49 - button or home buttons how about this my
35:51 - bad guys hold your horses it's all good
35:54 - not in the world don't worry okay so
35:56 - look home buttons i saved that and look
35:58 - at this
35:59 - now we have everything we wanted boom
36:01 - boom right there look
36:02 - i can hover this it's the same buttons
36:05 - and there we go oh
36:06 - that's so clean so clean right
36:09 - i'm wondering though so you don't need
36:11 - to in that case the home buttons you
36:13 - don't need to
36:14 - um show that at the top this right here
36:19 - yeah what do you mean you have to show
36:21 - this at the top you still have to show
36:22 - that to the top yes correct you still
36:23 - have to be
36:24 - this has to be there yes
36:27 - at the top um where oh header oh you
36:31 - mean this code
36:31 - no no no it does not no no it does not
36:34 - so see guys how clean that is you don't
36:36 - need to do that
36:37 - so you can just in your css you can just
36:41 - remove redundant code like this yeah
36:43 - it's just basically removing redundant
36:45 - css
36:46 - right you can't you can't can't do that
36:47 - in css unfortunately but in some
36:49 - components yes you can
36:50 - and that's why we're teaching you so if
36:52 - you're saying why stock opponents
36:54 - now you know now you know
36:57 - now you know all right awesome all right
37:00 - keep going
37:01 - whoa nice so
37:05 - the next thing what should we do icons
37:07 - or search bar
37:09 - okay let's go ahead and do the search
37:11 - bar yeah search bar
37:13 - okay search bar so can you show the
37:16 - shares bar in the original
37:17 - one there's a search bar right here it
37:19 - looks kind of like this right here it
37:20 - looks pretty epic
37:22 - right there there's a search bar right
37:23 - there yeah it's really click it has this
37:25 - icon in it
37:26 - of course and when you stretch out
37:29 - when you stretch your screen out the
37:31 - search bar will come with it
37:33 - yes correct correct correct oh really oh
37:35 - really okay
37:37 - hold on everybody hold your horses oh
37:40 - let's go that's a nice job yeah
37:43 - yeah yeah yeah yeah yeah nice job okay
37:46 - good so
37:47 - search wrapper search rapper
37:53 - the search up that she's going to be
37:54 - making is biscuit at this point is this
37:55 - one so i contract her i will go ahead
37:56 - and actually count it out for her
37:58 - so that she doesn't have to worry about
37:59 - that okay right thank you
38:01 - and the social press this one right here
38:03 - this is what she's making right there
38:05 - okay let's keep going so
38:09 - again guys we want to have that
38:12 - nice material ui icon
38:15 - within the icon button by the way um
38:18 - so i want to create an icon button right
38:20 - here we're going to create a search
38:21 - search
38:22 - a search icon so the search tag is going
38:24 - to be this one right here that's gonna
38:25 - be the search icon
38:26 - okay yeah okay so you do have to be
38:28 - careful that you really need to
38:30 - distinguish between
38:31 - the components or the icons that you're
38:33 - getting from material i
38:34 - or you're making them for style
38:36 - components okay
38:38 - always always always always always just
38:41 - a wrapper that gives you like this whole
38:42 - thing of like when i click on it see how
38:43 - it has that really nice effect
38:45 - that's like a button guys okay yes yes
38:48 - so
38:49 - this we're going to be making the form
38:52 - okay
38:52 - and within the form we're going to be
38:54 - making an
38:56 - output okay so the output for now
38:59 - it's just gonna be text
39:04 - nice nice nice text okay text
39:07 - and let's keep it for this like this
39:10 - right now
39:11 - okay so that's just the text right now
39:12 - okay cool makes sense makes sense
39:15 - and then we're also going to be using a
39:17 - button but as you can see in the
39:18 - original
39:21 - there is no button what
39:25 - no buttons
39:33 - well the thing is though do you have you
39:36 - ever been on a website where you put in
39:37 - something and i think a lot of people
39:39 - don't even think about this anymore
39:40 - right but they fill in something and
39:42 - then they just press
39:43 - enter and it just works their input is
39:47 - being submitted
39:48 - even though there's no button yeah right
39:51 - so we're gonna be
39:52 - imitating that functionality exactly
39:55 - okay guys
39:56 - so we're gonna show you how it's done
39:59 - okay so what was i doing
40:02 - searching search wrapper okay so we're
40:05 - gonna
40:06 - make the search wrapper search wrapper
40:09 - um and the search wrapper we're going to
40:11 - give it
40:13 - not so much we're just going to give it
40:15 - um a flex one
40:17 - oh style.div okay
40:20 - okay flex so what does that mean what
40:23 - does flip flex will mean jesse
40:25 - well it will take up all the space it
40:28 - gets
40:28 - beautiful take up all the space okay
40:32 - because because again we wanted this
40:34 - whole thing
40:35 - we want this whole thing of course right
40:37 - to stretch right
40:38 - so if we give the effects of one that
40:39 - means the
40:41 - the weight of this specific deal is one
40:44 - the highest of everything so it's going
40:46 - to stretch as much as it possibly can
40:48 - you know amongst everything else that's
40:50 - what that's one thing to consider
40:52 - definitely definitely so we're gonna be
40:55 - making the search bar
40:56 - wrapper okay so as you can see guys this
40:59 - search bar wrapper is
41:00 - actually that gray area which is
41:04 - curved so it's all this area right here
41:08 - all this crate area yeah oh
41:10 - okay yeah yeah we're gonna make that
41:12 - ourselves so how keep going
41:16 - so it's gonna be a background color of
41:19 - efcf
41:20 - ef beautiful that's gonna be different
41:22 - color
41:24 - let's play display flex and let's make
41:27 - sure it's gonna go ahead and align these
41:28 - like items like this that's the whole
41:30 - goal of this okay
41:32 - yep and in order for it to
41:36 - stretch out and i think i learned this
41:38 - from you
41:40 - we're going to give it a height of 100
41:42 - percent
41:43 - nice nice nice nice border radius is
41:47 - going to be
41:47 - heavy it's going to be 50 pixels so it
41:49 - looks really curved
41:51 - carbon curve to give it this curvature
41:53 - right here right there
41:54 - yeah and we're going to give it a border
41:56 - of none because we don't want
41:58 - we want it to look really slick and
42:00 - clean right beautiful yes so
42:02 - and then we're going to give it a
42:03 - padding on the left because that icon we
42:06 - don't want it to be touching
42:08 - on the left side okay
42:12 - so that's it but we still need to target
42:16 - certain elements because if you look at
42:17 - the top here guys we have
42:19 - so we gave the search wrapper we gave it
42:21 - to flex one right
42:23 - search bar wrapper we gave it the
42:24 - background and everything
42:26 - and within that we have the search icon
42:28 - but
42:29 - we also have a form here and a form
42:32 - within the input
42:33 - and the button so let's target those
42:35 - things right now
42:36 - okay so here form
42:40 - and i'm gonna give the form also a
42:42 - display flex so it stays within
42:45 - that search bar wrapper okay beautiful
42:48 - flex one and see what this is changing
42:52 - it's changing you see how
42:53 - she's changing the form it's starting to
42:55 - take shape right here guys you see that
42:57 - right there beautiful
42:59 - so within the form we want to target the
43:03 - input okay
43:04 - so i think maybe we don't even need to
43:06 - do it like this but it's just to be
43:08 - really specific that the input
43:09 - is within the form okay i like that way
43:12 - yeah
43:12 - yeah so we're going to make that
43:14 - transparent because we don't want that
43:16 - to actually show you see the important
43:18 - thing from like white right you want to
43:20 - like basically transparent as you can
43:21 - see here right there
43:22 - as you look into it okay
43:27 - and we're going to give it a font size
43:28 - of 16 pixels as well because
43:30 - well we still want to be able to read
43:33 - stuff
43:34 - as i type right here you see now it's 16
43:36 - pixels and it has a margin level 5
43:38 - pixels and so forth beautiful beautiful
43:41 - and now you still see that if you
43:44 - maybe go to the right now you will still
43:46 - see that button we don't want that
43:48 - button to
43:49 - show up but we do want to use the
43:51 - functionality of that button
44:03 - so what do you think about that i feel
44:05 - like i saw michael right now
44:06 - i love it excuse me i feel like i'm so
44:08 - awkward right now i love it
44:11 - so what do you feel about how do you
44:13 - feel about the blue border yeah i hate
44:15 - it i [ __ ] hit it so here
44:17 - so right border to me this border i know
44:20 - who
44:20 - who made this who created this i don't
44:22 - know why they made this
44:24 - what were you thinking when you made
44:25 - this okay i'm not saying to you jesse
44:27 - i'm saying to the person who made it
44:28 - right
44:29 - right right right when i go ahead and
44:32 - inspect them on this for example you
44:34 - guys can see that we have a form right
44:35 - here this
44:36 - input right here and if i focus on this
44:38 - form if i do four stay focus
44:40 - uh if i do four state maybe in that case
44:42 - let's see
44:43 - visit it or focus within
44:47 - focus or stop active no
44:51 - i don't know why the force doesn't work
44:52 - in here but you can see we have an
44:54 - outline offset right here right
44:56 - right here let me do it one more time
44:59 - right there you see this outline offset
45:01 - right there this means
45:02 - right there see i don't disappear real
45:04 - quickly but that means there's an
45:05 - outline so if i go ahead and do input
45:07 - focus online none maybe we do not need
45:10 - actually active or jesse
45:11 - this stuff now we don't need that
45:14 - i really don't want it to show up can
45:16 - you tell really hate it
45:18 - and you can see now if i go ahead and
45:19 - just type right here see no more
45:21 - does not show up anymore guys that's
45:23 - really cool part about this okay let's
45:24 - go ahead and keep going jesse
45:26 - yeah so actually we only have
45:30 - the icons wrapper which is and within
45:33 - that we have a
45:34 - few icons from material ui
45:38 - and again we need to do we need to do
45:40 - icon button let's do that one first
45:43 - the icon button this one this one this
45:44 - one this this one right here this one
45:46 - what what do we need to do i need to add
45:48 - it don't we
45:50 - oh sorry yeah you're you're right we
45:52 - need to add it we need to import it
45:54 - exactly search icon
45:57 - then make note of 500 likes let's go
46:01 - let's get to 600 likes guys help us out
46:04 - that is what i'm talking about you guys
46:05 - are amazing
46:06 - oh oh oh oh oh
46:10 - 600 likes you guys are the best and just
46:12 - as you guys know
46:13 - right we have a reaction challenge
46:14 - coming up five day break just challenge
46:16 - completely free
46:17 - link is in the value you will be
46:19 - building the most epic
46:21 - slack clone with live functionality
46:24 - with style components with redux with so
46:27 - many different things you cannot
46:29 - explain how with login and so much more
46:32 - guys
46:33 - go ahead join the by director charles it
46:35 - is completely free
46:36 - it is great for beginners so if you have
46:38 - zero id on what javascript is or zero
46:40 - data i would react gss
46:42 - it is okay this is what we built it for
46:44 - so go ahead click the link below
46:46 - and check it out all right keep going
46:47 - jesse
46:49 - hope to see you there guys be there be
46:52 - there or be
46:53 - square so icons rapper okay let's go by
46:56 - the way
46:56 - search icon has been imported so it
46:59 - should not be complaining anymore
47:01 - if correct oh
47:04 - let's go so beautiful guys
47:08 - how cool is that drop it in the comments
47:10 - if that looks amazing at this point
47:12 - we're just getting started here guys
47:15 - started
47:16 - let's get the party started let's get
47:18 - this party started
47:19 - okay so the last thing i have is this
47:21 - icons wrapper that's the last time you
47:22 - have for this header okay
47:24 - once we've done that then we went to the
47:25 - pins okay let's go ahead and save that
47:27 - beautiful
47:27 - definitely definitely so for this let me
47:30 - start this time with the imports because
47:32 - then it's also easier to see what you
47:34 - need from the material ui
47:37 - there's four icons right it is a
47:39 - notification icon
47:41 - a face icon the little face text sms
47:44 - icon
47:44 - and the keyboard arrow down icon
47:48 - okay so all of these again need to be
47:51 - wrapped in what they all need to be
47:53 - wrapped in
47:54 - icons wrapper and an icon i get this
47:57 - right
47:57 - a button yes hover hover over
48:01 - so here boom let's go that's a lot of
48:04 - text
48:06 - that's good it's a lot of text but it's
48:07 - not difficult to read okay so
48:09 - each icon is wrapped in
48:12 - side of the um icon button
48:15 - okay i like how so that's why and then
48:17 - i'm typing at the same time that just
48:19 - like dude
48:20 - teamwork teamwork makes the dream work
48:22 - guys always
48:23 - he always makes the change is what makes
48:26 - everything work okay
48:27 - right you got no team then i don't know
48:30 - let's see
48:31 - you can get far solo but together you
48:33 - get further a lot further right
48:35 - cool awesome so let's see what do i call
48:37 - so look at that look at
48:38 - what jess is doing here okay we have an
48:40 - icon button right here
48:41 - notifications icon right there right so
48:43 - that's that's the whole call now
48:45 - of course she's wrapping inside the icon
48:46 - button to give it that little kind of
48:48 - ripple effect so when i go ahead and
48:49 - click on this it gives it the ripple
48:50 - effect you can see right here
48:53 - right there right there good creates a
48:55 - ripple effect and again
48:56 - just copy and paste this text sms icon
48:59 - face icon keyboard arrow icon
49:01 - and all those are actually imported
49:02 - inside here right there
49:04 - she just went ahead and imported from
49:05 - material ui okay
49:07 - and again the way you search for this is
49:08 - pretty simple guys all you have to do is
49:10 - go to material ui
49:11 - okay search for example whatever you
49:12 - want let's go and say let's say you want
49:14 - to do search right
49:15 - click on search and then you see the
49:17 - search icon click on the search icon
49:19 - boom and this right away tells you what
49:21 - you need to
49:22 - import like like it doesn't get [ __ ]
49:25 - easier
49:26 - it just doesn't easier but what you need
49:28 - to pay attention to guys
49:30 - is as you can see it says from material
49:32 - ui
49:33 - slash icons so sometimes it's icons and
49:36 - sometimes it's core
49:37 - so pay attention to that okay yes yes
49:40 - yes otherwise let's go ahead and save
49:41 - this
49:42 - let's see how this works out is this
49:43 - gonna work no we have to create the
49:45 - icons wrapper
49:46 - style div first style component first
49:49 - key
49:50 - const icons wrapper
49:55 - and we don't need to do anything with
49:56 - this no nothing oh no
49:58 - no no no not a kaput okay oh
50:02 - wait [ __ ] hold on hold on search rapper
50:04 - wait
50:05 - icon's wrapper is not defined this type
50:07 - of this happens i just need to refresh
50:08 - this paste sometimes
50:09 - refresh yeah
50:14 - beautiful so we went ahead and we
50:15 - finished this portion right here guys
50:17 - we have ourselves the header the home
50:19 - page the following button
50:21 - we have ourselves the search wrapper and
50:23 - all these other icons which just look
50:25 - amazing which i just love personally
50:28 - right the no the next thing we're going
50:29 - to work on so
50:30 - let's go ahead and work on part two part
50:33 - two is gonna be what is part two of this
50:35 - create one we're gonna be making the
50:37 - main board guys we're gonna be making
50:38 - the main board
50:41 - right here okay create more and this is
50:43 - going to be
50:44 - you're going to contain to contain
50:47 - contain
50:48 - the chat the pins
50:51 - that's it and we're going to use the
50:53 - later on we're going to use unsplash
50:54 - this as well so create the main board to
50:56 - contain the pins all right
50:58 - all right let's start it up part two
51:00 - let's go let's go
51:02 - let's go so just as the header guys i'm
51:05 - gonna make another file here
51:08 - within
51:12 - okay and again i'm gonna use rfce
51:16 - tab and i'm gonna make a mainboard
51:19 - component
51:20 - here okay so of course
51:23 - just like previously i need to import it
51:26 - here and i'm going to say
51:29 - main board wait wait you are in the
51:31 - attitude yes
51:32 - oh right there i see you so yeah and i'm
51:34 - gonna import it here okay
51:36 - import right there so we have the import
51:38 - main board from
51:40 - components slash main board
51:43 - just like the header guys i hope that
51:45 - did not go too fast but just like the
51:47 - header you're just gonna make
51:48 - a main board file here within your
51:50 - components and just
51:52 - make a functional component here right
51:54 - easy easy
51:56 - right here guys man with the gs once you
51:58 - create the main rds let's go ahead and
52:00 - do rfce
52:01 - to go ahead and create a react app like
52:03 - this and then once you have that you're
52:05 - pretty much set for life
52:07 - that's it see right there boom voila
52:08 - yeah and if you type anything in hasad
52:10 - here
52:10 - this is called the main board
52:13 - right let's save this we have mainboard
52:17 - right so right there that's pretty much
52:18 - what you have okay and then next up
52:20 - let's go ahead
52:21 - and go on to the next one
52:25 - yeah let's go on to the next one so
52:26 - let's style this main board
52:29 - first let's see it okay oh no wait wait
52:31 - wait
52:33 - wait let's make what we're going to do
52:36 - this in style components right yeah
52:38 - of course so what do you want to call
52:40 - the first rapper here just rapper yes
52:41 - that's called rapper of course
52:43 - always rap always always style component
52:45 - always wrappers no i just just i
52:47 - just like it i just like it makes me a
52:48 - bit hungry sort of
52:50 - wrapper sandwich
52:53 - sandwich burritos and then
52:57 - what should we call this mainboard or
52:59 - just container since this name is also
53:01 - really
53:01 - generic let's go let's call the
53:02 - container correct go ahead container
53:05 - okay container okay
53:08 - container and now what we need to do is
53:10 - we now we need to create different style
53:12 - components for those okay and again
53:13 - these contains
53:14 - we right whoops right there so what do
53:16 - we what is this right here the wrapper
53:18 - is going to be the wrapper for
53:20 - the main so here's the thing just just
53:22 - so you see exactly what we're trying to
53:23 - do here okay
53:24 - look the wrapper is this wrapper right
53:27 - here right this is the full
53:28 - width 100 the container is the container
53:31 - that contains
53:33 - the icons themselves right so that's
53:36 - where where that comes from right that's
53:38 - the really cool part about that
53:39 - so that's where again the reason why
53:42 - we're doing that is because we need to
53:43 - be able to center this
53:45 - horizontally like this because we want
53:46 - spacing in here
53:48 - right that's how we create another
53:50 - container within this wrapper okay
53:52 - makes sense comprende i hope it's
53:54 - comprende all right comprenda
53:59 - all right guys let's keep going this is
54:00 - awesome oh i'm having fun i just want a
54:03 - shoe
54:04 - i'm having fun yeah me too lots of fun
54:08 - all right let's go ahead and do it so i
54:09 - just want to show the container within
54:12 - the wrapper nice so it's going to do so
54:14 - let's see this background color pink
54:16 - okay wrapper that style the devil's
54:18 - going to save this oh we also need to
54:20 - import style components here as always
54:22 - always
54:26 - whoop like this i believe beautiful yeah
54:29 - stack components
54:30 - okay let's go ahead and save that okay
54:32 - now of course right now nothing's really
54:34 - happening the reason why is that the
54:36 - reason why is because this wrapper this
54:38 - wrapper right here
54:39 - does not have a height so we need to
54:41 - give it an actual height right
54:42 - so for this wrapper to give it a height
54:44 - so if i go ahead for example if i
54:45 - inspect them on this one
54:46 - right let's go ahead and inspect that
54:47 - one on this uh
54:49 - dvd root the class app right there this
54:52 - is right here this is our header this is
54:54 - our main board right
54:56 - you can see our main board oh [ __ ]
54:58 - something's really loud
55:00 - hello hello yeah yeah we got you we got
55:02 - you
55:03 - if you see if you say this member let's
55:05 - give it a height for example a height
55:07 - of let's say 300 pixels okay right there
55:10 - okay now this is 300 pixels for this one
55:13 - let's give it a height
55:14 - of also 300 pixels
55:18 - right there you see so that right there
55:21 - is going to be
55:22 - what this is the wrapper is the pink and
55:24 - the container
55:25 - is is green now right now we don't see
55:28 - any pink and why is that
55:29 - pretty simple because we need to go
55:31 - ahead and give the container a width
55:33 - let's say of 80 percent so for example
55:36 - how jesse is doing right here
55:37 - i'll go ahead and save this you see
55:38 - right there boom voila now we have the
55:41 - wrapper which is pink right here
55:42 - that's this right the background color
55:45 - green that's the container is going to
55:47 - contain the pins guys right
55:49 - it would give it a width of 80 percent
55:51 - okay
55:52 - that's why we have those make sense
55:53 - compressing all right let's move on
55:56 - yeah so just to add some stuff i just
55:58 - wanted to make this really visual for
55:59 - you guys you know because that's
56:00 - very important when you start working
56:02 - with this and styled component
56:04 - of course so but just let's make this um
56:07 - white because yeah that's a
56:11 - regular color okay white and
56:14 - um you want to keep the height i want to
56:17 - give it the
56:18 - width of 100 for the wrapper good nice
56:21 - and a height
56:22 - of 100 100 but i also don't want the
56:25 - pins to be
56:26 - attached to the header you know so what
56:28 - i'm going to give it is a margin
56:30 - top of 50 pixels because when the plants
56:33 - come in right they're going to come in
56:34 - half they're going to come in like this
56:38 - like the green area we just had yeah so
56:40 - we don't want the paints to be here
56:41 - right all the way here we want it to be
56:42 - margin task we want to push it down just
56:44 - a little bit as well
56:45 - go ahead exactly all right that's next
56:47 - up so for now this is good
56:49 - for css from the main board but what we
56:52 - want to show up in the main board for
56:54 - now
56:54 - is actually one pin okay guys before
56:58 - we're just gonna make it really simple
57:00 - because when it comes to coating okay
57:01 - you always need to break up your big
57:03 - problem into small chunks
57:06 - so we're gonna not gonna be making all
57:08 - of the pins now we're just gonna make
57:09 - one pin now okay and this pin is
57:12 - well a regular pin just like main board
57:15 - so let's make pin here
57:16 - okay pin then we have of course before
57:20 - actually we have to make a full file
57:23 - here yeah so let's go ahead and make a
57:24 - pin inside the components folder right
57:25 - here
57:26 - this components folder right you can see
57:28 - jessa just went ahead and she made a
57:29 - pin.js
57:30 - file and if i go and click on this she's
57:32 - going to do irfce
57:34 - right and that's going to create our our
57:37 - component in here so rfc go ahead jesse
57:42 - does it work no it is got it there we go
57:46 - beautiful
57:46 - whoa there it is
57:51 - by the way guys thank you so much 551
57:53 - likes let's get to 600 likes
57:55 - you guys are amazing as always let's get
57:58 - this
57:58 - to us to 600 guys 600 come on could we
58:01 - get to 600
58:02 - click that like button right now let's
58:05 - go
58:05 - right smash the like button subscribe
58:07 - for more videos like this guys this
58:08 - tells us that you appreciate
58:10 - what we're doing because of course we're
58:11 - putting a lot of time a lot of hard work
58:12 - into this
58:13 - i really appreciate you guys if you guys
58:14 - show it okay that's all we ask that's
58:16 - pretty much it yeah that's all we ask
58:17 - for something hard
58:18 - just click that drag button and click
58:20 - like so yes
58:22 - 5 67 likes let's go let's go how far can
58:25 - we go how far can we go
58:26 - 58 likes oh let's go let's go beautiful
58:30 - appreciate it guys let's keep going
58:33 - jesse
58:34 - so one pin we're gonna be making one pin
58:36 - but for now i'm just gonna say
58:38 - hello pin okay to make sure that our pin
58:40 - component
58:41 - is really um being imported
58:44 - into the main board so let's say here
58:47 - import pin
58:48 - well we don't need to do anything now
58:51 - because pin is in the same
58:54 - folder as main board so i don't need to
58:56 - say component slash
58:59 - so if i go to main board right because
59:01 - the pin is in the same
59:02 - folder right it's inside here i can just
59:05 - say pin from pin
59:06 - makes sense okay gotcha gotcha gotcha
59:08 - okay yeah
59:09 - oh oh hello pin let's go come in okay
59:12 - cool cool cool all right let's see them
59:14 - pins i want to see them
59:16 - yeah you want to see them pins well i
59:18 - think also you
59:20 - should pick a picture later from one
59:22 - splash
59:23 - let's go one inch i feel like i'm a kid
59:25 - right now so on splash
59:27 - on splash yeah yeah i'm sorry
59:31 - oh okay what what picture you guys want
59:32 - what do you guys want like tell me
59:34 - i always pick dogs but you know or bali
59:37 - or ocean or surfing
59:38 - you like bali don't you yeah i do i mean
59:41 - you know
59:42 - i like architecture a lot like a
59:44 - beautiful occasion like this like can we
59:45 - pick this one yeah
59:46 - could you pick this one definitely oh
59:48 - you can also pick something like berlin
59:49 - they have great architecture
59:52 - this is cool look at this guys this is
59:54 - amazing i love this
59:56 - okay i got it let's go ahead and play
59:57 - this pick this architecture right here i
59:59 - love this one
60:00 - okay copy image address copy image
60:03 - address okay
60:04 - okay let's then what do we do after that
60:05 - then we go ahead and and we're going to
60:07 - okay so i'll copy the image address for
60:08 - now okay
60:10 - and now we need to add it to a pin so
60:11 - let's go to pin.js and let's create that
60:13 - pin jesse
60:14 - that's created so first again style
60:17 - components right so
60:19 - can i try that i'll try it can i try it
60:20 - can i try it can i try of course you can
60:22 - try
60:22 - of course of course so we're going to
60:24 - create a wrapper
60:25 - that's really i don't want such a kid
60:27 - right now rapper
60:29 - can you get what excited i'm such a kid
60:31 - right now i know why
60:34 - i'm with the critic container for that
60:36 - so container okay and the reason why
60:37 - we're going to create the container
60:39 - right is because again what
60:40 - right we're going to create a pin and
60:42 - that's going to a pin is going to
60:43 - contain that image okay that's
60:45 - why we're going to create a container
60:47 - right so let's go ahead and do that
60:49 - then inside the style components go
60:50 - ahead and import style components so
60:52 - we'll say import import right styled
60:56 - from what styled from dash components
61:00 - style dash components exactly
61:03 - components okay so let's go ahead and
61:04 - save that amazing
61:06 - two two two two two let's go
61:10 - so one pin guys is one image yes okay
61:13 - let me say for example const wrapper
61:16 - is equal to style dot div right there
61:19 - style the div
61:20 - right and so forth now nothing so far
61:22 - let's go ahead and do it now container
61:24 - same thing const container
61:26 - is equal to styled dot
61:29 - div boom right there okay awesome
61:32 - so let's go ahead and save those save
61:34 - that okay you can see nothing is
61:36 - breaking that's the most important
61:37 - that's the most important thing
61:38 - let's not create an image so we'll say
61:39 - image image
61:41 - source is equal to and let's now give it
61:45 - that specific uh what's it called
61:46 - the url the image address boom right
61:49 - there that's going to be the image
61:50 - address right here okay boom right there
61:52 - then inside here let's go ahead and now
61:54 - do close this image out
61:56 - save this oh let's go
62:01 - oh oh oh okay awesome all right jesse
62:04 - let's go ahead and keep going
62:06 - this is amazing so we got ourselves an
62:07 - image that's awesome
62:09 - next up we're going to do guys is we
62:11 - need to go ahead and what
62:12 - we need to once we have the image now we
62:14 - need to modify these images to actually
62:16 - look nice so how do we do that jesse
62:18 - so when we first gotta you know we're
62:21 - gonna
62:22 - i would say first maybe adjust the style
62:26 - the wrapper
62:27 - wrapper the wrapper okay so
62:31 - this wrapper you don't see it right now
62:33 - but it has to be this
62:34 - or should we let's do this later it's
62:36 - fine it's fine yeah we can do implied
62:38 - flex that's fine that's fine
62:39 - yeah and we're gonna give it a padding
62:42 - okay
62:44 - the container is gonna have display flex
62:48 - one container good i don't think it
62:51 - needs i thought it first needed a flex
62:52 - direction column but i don't think it
62:54 - needs that
62:56 - so but to have everything really
62:58 - vertically aligned we can give it a
63:00 - line item center beautiful
63:03 - i'm going to give it this one
63:06 - and i'm going to give it like the little
63:08 - hand
63:10 - my the rocket program always starts up
63:13 - when i do
63:14 - column pointer and we're going to give
63:16 - it a width of
63:18 - 236 pixel guys and the thing is oh
63:22 - 36 and this way
63:25 - all of the images all of our pins will
63:27 - have this
63:28 - width so see if i go ahead and do this
63:30 - let's go ahead and save this if i go
63:31 - ahead and do this now look at this we
63:33 - see
63:33 - nothing has really changed on here on
63:35 - this side right it's still not 236
63:37 - pixels so if i go and right click this
63:38 - inspect element
63:39 - why is that because why this is 200 but
63:42 - the image is not
63:43 - so going to do is need to give an image
63:45 - a width of a hundred percent
63:47 - of 100 is it 100 is a height of 100
63:51 - no width 100 right now and now you can
63:53 - see now boom right there
63:55 - width of 100 you can see right there
63:57 - right and now
63:58 - that image fits directly in that width
64:00 - box okay beautiful
64:02 - now we can also give it also a border
64:03 - radius what we should give it
64:05 - give it give it uh border radius uh 16
64:08 - pixels or the radius right there
64:10 - 16 pixels boom right there look at that
64:13 - oh that looks so good
64:15 - it looks so good jesse it's so good yeah
64:18 - i know right yeah so good i love it i
64:21 - got
64:21 - you do do okay anyways
64:27 - ah awesome water is good so what jesse
64:30 - is now doing is
64:31 - we have for example a width of 100 okay
64:34 - just how we said it okay for the
64:35 - specific image
64:36 - we have a cursor what does this course
64:38 - zoom in i'm curious what is that what
64:39 - does that do
64:40 - that is i think for the picture for the
64:42 - image like when you hover over it
64:44 - it will just make it look better
64:46 - basically
64:47 - really oh oh that's the zoom in but you
64:49 - see why if i click this yeah
64:50 - this has a zoom button right there okay
64:52 - i got you okay
64:54 - cool cool cool border radius and of
64:56 - course object fit
64:57 - cover so you're how to say this your
65:00 - picture is then being skilled the right
65:02 - way yes when it comes
65:03 - into the container okay awesome and that
65:05 - looks awesome so that looks
65:06 - amazing jesse okay and that our friend
65:09 - my friends
65:10 - is our first pin now look we've got our
65:12 - first pin now the question is how do we
65:14 - get
65:14 - more pins at this are we done with this
65:15 - he says in here jesse
65:17 - yeah i think so well i i also had
65:20 - something on
65:21 - opacity but i don't think it's necessary
65:23 - for now so let's just keep moving
65:25 - awesome
65:25 - so let's go ahead this we got ourselves
65:28 - guys we got ourselves the pin
65:29 - how sick is that drop that in the
65:31 - comments below that is pretty
65:33 - pretty something says you are the best
65:34 - guys who
65:36 - let's go thank you we are currently in
65:38 - 587 likes
65:39 - let's get to 600 can we do it let's go
65:42 - 600 likes
65:43 - help us out let's defeat that youtube
65:45 - algorithm together
65:46 - let's knock it out of the podcast yo
65:48 - youtube
65:54 - i know you guys can do it 588 how far
65:57 - can we go 58
65:58 - 593 let's go finally three
66:04 - come on come on come on you guys got
66:08 - this i know it
66:08 - i know it just hit that like button and
66:10 - that's all you gotta do guys
66:13 - 5.99 okay hold on hold on
66:16 - 604
66:18 - [Music]
66:24 - appreciate you guys so much we love
66:26 - making these bills for you
66:28 - so if you like it all right cool keep
66:31 - pressing that
66:32 - like button okay that's fine that's fun
66:34 - i always love so much there's so much
66:35 - energy on here
66:36 - all right so we got we got a pin jesse
66:39 - okay that's the first part
66:40 - on pain next up we need to go ahead and
66:42 - let's how do we create now more pins
66:44 - this is where the fun part comes in
66:46 - whoa well i think we should be talking
66:49 - about data
66:50 - right now okay so let's think about this
66:52 - well check this out on splash actually
66:54 - has an api so on splash api
66:56 - on splash api right here
67:00 - unsplash api right i splash
67:03 - sorry to interrupt you but i think i
67:05 - want to take it even one step
67:07 - back okay okay easy okay okay when it
67:09 - comes to you know when
67:10 - what the user does okay let's okay good
67:13 - i like it i like it so what's gonna
67:14 - happen just explain it to us
67:16 - so like you know right now our app is
67:19 - the parent component
67:20 - yes and then we have header
67:24 - and we have main board as child
67:26 - component right correct this main board
67:27 - right here correct yes
67:28 - yeah and then within main board we even
67:31 - have another component
67:33 - called pin which is again a child
67:35 - component right correct yes
67:38 - so in which component are we starting
67:41 - right the header component because when
67:43 - we want to search for something
67:46 - we're going to put in something like
67:48 - tokyo or dogs or in your case cars
67:51 - right yeah and once we submit the cars
67:55 - what's what do we want to happen well
67:58 - once we submit once we submit the cars
67:59 - then we want to go ahead and
68:01 - look for example okay let's think about
68:02 - this if we for example let's think about
68:04 - this i'm going to put this down here so
68:05 - um search right search
68:09 - when we after we did search we want to
68:11 - go ahead we want to go ahead and
68:13 - get data from unsplash right get data
68:16 - yep
68:17 - from unsplash unsplash
68:21 - using search search right
68:25 - and then what is the next thing we need
68:26 - to do guys then once we get that we need
68:28 - to go ahead and add that
68:30 - add the data add the images that we get
68:32 - from unsplash
68:34 - back back to pins slash
68:38 - slash main board yes
68:41 - right there slash the main board and
68:43 - that's how that's going to work
68:45 - yeah guys got that that is the loop so
68:47 - it's a pretty easy like i said it's a
68:48 - pretty pretty easy simple oh
68:50 - go ahead let's do this pretty simple
68:52 - process guys okay go from search
68:54 - get that from on spot using using search
68:56 - and then add the images
68:57 - back to pins slash main board so right
69:00 - now we have the search
69:01 - now we need to go ahead and get data
69:03 - from unsplash using search is that right
69:05 - jesse
69:06 - that's right so let's go to unsplash
69:07 - like you previously wanted
69:09 - okay and show them what you need to do
69:14 - let's do it jesse let's go
69:17 - let's go beautiful beautiful so let's go
69:19 - ahead and check this out
69:20 - so if we go to unsplash okay we have an
69:22 - splash api right there
69:24 - right is it this one or is it is it this
69:25 - one or which one is it no no i think the
69:27 - first one was correct
69:28 - this one okay so it says on splash
69:31 - images now
69:32 - you would have to register as a
69:33 - developer right here right there
69:34 - register available
69:35 - it's free for anybody to join completely
69:37 - free no no questions asked
69:39 - you can join the no problem okay once
69:41 - you join you should be able to actually
69:43 - get your api key do we have an api key
69:45 - just that we can use
69:47 - yeah we have an api key it's in the
69:51 - oh it's in the other one right yeah it's
69:53 - in the api folder we have our own api
69:55 - key
69:55 - and if we go to documentation let's look
69:56 - at the invitation right now
69:59 - right you go to search you go to where's
70:02 - the search
70:02 - on your left side on your left side so
70:04 - so guys you go to the end splash you
70:06 - regulate
70:07 - yourself as developer and you go to the
70:09 - api documentation
70:10 - okay and then on your left side when you
70:13 - scroll down you have
70:15 - is search photos right there then if you
70:18 - scroll a little bit
70:19 - more down you can see the query or the
70:22 - end points
70:23 - exactly gonna be using
70:26 - so we are later gonna be defining our
70:30 - base url
70:31 - and then of course we're going to add
70:34 - the term
70:35 - on which we want to have photos for yes
70:38 - right so you can see here for example
70:39 - what they're doing in here let me
70:40 - let me take a look at this pretty simple
70:42 - right
70:44 - what they're doing in the search they
70:45 - are they are doing what
70:47 - hold on search photos right here they
70:49 - are simply go ahead and provide you a
70:51 - query you see this right here
70:52 - a query uh wait query right here it
70:54 - could be anything pretty much it can be
70:56 - a search box could be a car whatever it
70:58 - is whatever anything
70:59 - that you want that's the search term
71:01 - that you want to use okay
71:02 - that's going to the query then other
71:05 - than that pretty much we're going to
71:06 - then use the
71:07 - per page we're going to have 10 per page
71:10 - is that right
71:12 - yeah pen per page and that's pretty much
71:14 - it i think right that's pretty much it
71:16 - that's pretty much it but maybe we're
71:17 - going to be using something
71:19 - to make the request to yes unsplash so
71:22 - that's the question is
71:23 - how do we now make the request to
71:25 - actually get the data
71:27 - that's the thing well the really cool
71:29 - thing about react.js is we have
71:30 - something called
71:31 - axios right axis is a way for us to get
71:34 - data so if i go and take a look at this
71:36 - let's go say axios
71:40 - um right there see axios uh gs
71:43 - right there right there react react
71:46 - axios right there that's the one
71:48 - oh no not this one hold on uh is it this
71:51 - one
71:52 - mgm i xios just the regular
71:56 - yeah that one no not that one no no no
71:58 - no no
71:59 - no this one no
72:02 - no which one is it
72:06 - actually mpmi axios i know i'm trying to
72:09 - find where it is
72:16 - wait no maybe here oh npm install
72:19 - npnc npm install install
72:23 - axios there we go that's the one yeah
72:27 - okay yeah yeah look at that because i'm
72:28 - looking for this weekly downloads look
72:29 - at this
72:30 - 17 million weekly downloads guys that is
72:33 - pretty damn insane
72:34 - i will say yeah that's always something
72:37 - you want to check out for guys
72:38 - when installing new npm packages
72:43 - let's go ahead and do this let's go and
72:44 - open up our integrated terminal our
72:46 - beautiful integrated terminal in here
72:48 - right here let's go ahead and do command
72:50 - v for amp install axios hit enter that's
72:53 - pretty much it at this point
72:54 - okay good good good good good good good
72:56 - good that's amazing
72:58 - so we got that portion okay next up
73:01 - we're going to do
73:03 - next that we're going to do is the
73:04 - following is so we got axios which is
73:06 - which is all good now we need to go
73:08 - ahead and what and we need to import
73:10 - access is that right jesse
73:12 - definitely so i'm going to create a new
73:15 - folder
73:16 - inside where
73:20 - okay let's okay check it let's do it i'm
73:23 - watching you jesse
73:24 - let's go api
73:27 - okay here and then we're gonna make a
73:30 - file and we're gonna call it
73:32 - what is it unsplash small letters
73:35 - guys it's not a component js
73:39 - okay okay so let's open that one up
73:43 - where is it oh i'm here in it now you
73:46 - got it
73:47 - and so i don't know once we have it i
73:50 - don't know
73:51 - jesse i don't see the new file it is
73:54 - here though
73:55 - api axios
74:04 - it should be an api okay let me move
74:06 - that to the api i got it oh it's here
74:08 - okay there we go awesome okay now we got
74:11 - now we have it right here
74:12 - awesome thank you so once you have
74:15 - installed
74:15 - axios you're going to do that this guy's
74:18 - import axios
74:19 - from axios okay ooh nice okay
74:23 - right there and what we can do is really
74:26 - cool we can create sort of our
74:28 - own axio server through which we can
74:31 - send the requests to
74:32 - and then we can export this one
74:34 - throughout our whole
74:36 - app okay so we need to do this
74:40 - export
74:43 - actually yeah well yeah
74:46 - it's okay i already started repeating
74:48 - that but axios and then create
74:50 - so this is a function of axios itself
74:54 - and then your can give it all kinds of
74:58 - parameters
74:59 - okay so in this case we're going to give
75:01 - it first
75:02 - our base url of unsplash
75:07 - so this is the parts url you absolutely
75:09 - sure you're always
75:11 - using in every request that you make got
75:14 - it got it got it okay cool cool okay
75:16 - and with it um you're gonna give me the
75:20 - param
75:20 - headers nice and that one's going to
75:23 - have a key of authorization okay guys so
75:26 - authorization you can see me writing it
75:28 - with a capital letter
75:29 - very important
75:30 - [Music]
75:33 - um you will not get any requests okay so
75:36 - i speak out of experience i'm going to
75:38 - share this one with you guys
75:40 - in a silver platter okay so very
75:42 - important guys when you do stuff like
75:43 - this
75:44 - be accurate and consistent okay
75:47 - authorization capital a okay now you're
75:49 - never going to forget that
75:51 - and here we're gonna say client id again
75:54 - watch the capital letters okay then
75:57 - we're gonna
75:57 - have the access key here that you're
76:01 - gonna
76:01 - obtain from unsplash so when
76:05 - once you have registered as a developer
76:06 - you scroll down and then there's an
76:08 - access key okay at the top you can
76:11 - hardly miss it
76:12 - um exactly there right you can see
76:16 - and you can see the way she got this
76:18 - because inside documentation if you look
76:19 - at public
76:20 - authentication and in the documentation
76:22 - guys it's talking about
76:24 - right to authenticate requests in this
76:26 - way pass your application's access key
76:28 - which you get basically by logging in to
76:31 - sign up for unsplash api right then what
76:34 - happens
76:34 - you're going to get your access key and
76:36 - then at that point you will go ahead and
76:38 - you can add the access key to your
76:40 - as your client id inside here that's
76:42 - pretty much it that's it
76:43 - that's it yeah that's it easy peasy
76:47 - so i have my key already ready
76:50 - okay yes yes yes please don't copy it
76:53 - guys
76:55 - and they're correct so i mean it's quick
76:57 - they do it's fine it doesn't matter it's
76:58 - not like
76:59 - it doesn't matter we don't get charged
77:00 - for this anyway so it doesn't matter no
77:01 - it is free anyway
77:03 - so but um this is this is how i
77:07 - created the um axio server basically
77:11 - okay so i can use this one everywhere in
77:13 - my app
77:15 - because i'm exporting it here plus
77:18 - i just need to import it in my other
77:21 - component
77:22 - wait so how do you know what and how do
77:23 - we name it is that what to name this as
77:25 - well
77:26 - like name this axio server or no
77:29 - well we created a file called unsplash
77:32 - so within our like for example i know
77:34 - for sure that we're going to be using it
77:36 - in the app.js so let me show you here
77:39 - so let's go like this import unsplash
77:43 - yeah yeah be amazed
77:46 - and then we're gonna do this
77:50 - oh interesting yeah okay look at that
77:53 - guys
77:54 - that is pretty sick i will say that is
77:56 - pretty damn sick
77:57 - so we created our own server i mean it's
77:59 - not it's not our own service just a way
78:00 - for us to be able to define
78:02 - a api call basically using a using axial
78:05 - so it's very simple for us then to use
78:07 - it
78:07 - and we don't have to define it out you
78:09 - know in a different place pretty cool
78:11 - damn gesture that is awesome
78:12 - all right this cells keep going yeah
78:14 - yeah yeah
78:15 - we haven't defined it in a different
78:17 - place what do you mean so it says
78:19 - you attempted to import api and splash
78:21 - which falls outside of the project
78:22 - source directory
78:24 - so it's decided so the reason why let me
78:26 - see let me look at this
78:27 - because where where um
78:31 - let me see oh i know why i know why i
78:34 - know why i know why
78:35 - because you should not okay there we go
78:36 - now it's so good so you don't have to
78:38 - dot dot
78:38 - there we go okay no dot dot yes
78:42 - so we got that now what did you just say
78:44 - um
78:45 - well we first talked about let's first
78:48 - go back to the header
78:50 - okay okay you know because the header is
78:53 - actually the place where we start i
78:55 - always like when i make an app or
78:56 - develop the app i always like to think
78:58 - in
78:58 - the story right the user story right and
79:01 - then
79:02 - once we put in something in the input we
79:04 - want to catch that so
79:07 - what could we use for that how do we
79:08 - catch something in an input well you use
79:10 - something called
79:11 - unsubmit or unclick or unsubmit i think
79:14 - unsubmit for the input is unchanged but
79:18 - the button is definitely going to be the
79:21 - one that's going to be submitting
79:22 - something
79:23 - [Music]
79:25 - okay so okay so we're going to keep
79:26 - track let's go check out the input okay
79:29 - make sense okay go ahead so let's do
79:30 - this first
79:32 - so an unchanged event is actually
79:34 - unchanged actually an event
79:37 - so technically your input is an html
79:39 - element that is
79:40 - waiting for this unchanged event to
79:42 - happen correct unchanged just means like
79:45 - um help there's something happening in
79:47 - my input
79:48 - correct and then he catches that you
79:50 - know so for now
79:51 - i'm going to console log this so you can
79:53 - test it out
79:54 - and the event is actually i think an
79:58 - object
79:59 - so therefore within that object we have
80:03 - target and value as keys so we can grab
80:06 - that value from that input
80:08 - so maybe you can show this so if i go
80:10 - and save this guys let's say let's go
80:11 - back to and save the app.gs
80:13 - save the header here's going to happen
80:15 - if i go ahead and right click on this
80:16 - inspect element on here
80:17 - if i go to console okay so let's go
80:19 - ahead and clear this console out for a
80:21 - second
80:21 - if i start typing you see right there
80:24 - boom
80:25 - that's the target of value that that
80:26 - jess is printing out right here
80:28 - and the reason why we're doing this is
80:29 - pretty simple is because we want to keep
80:31 - when we want to save this
80:33 - right we want to be able to save this
80:35 - value right
80:36 - in something called a state right in
80:38 - state so we can go ahead and actually
80:41 - use it and then apply it when you submit
80:43 - it right so for example jesse right now
80:45 - she's going to create
80:46 - a input state right the input and set
80:48 - input using something called the use
80:50 - state
80:51 - which is if you use state is basically
80:53 - think of it as like
80:54 - think of it as like a database for
80:57 - for your own component right every
80:59 - single component
81:00 - in react.js has its own little database
81:03 - called state
81:04 - right called state and so whenever you
81:06 - make change that state right at that
81:07 - database
81:08 - it refreshes right it keeps track of
81:10 - that and so that is what jesse is doing
81:12 - you can see here
81:13 - she created a use state of where the
81:16 - default this is
81:17 - basically not an empty string okay yeah
81:19 - this is the input this is the actual
81:21 - value
81:22 - the set input is the change function the
81:24 - on change function right
81:26 - so if you want to change this specific
81:27 - value you just simply call this function
81:29 - and that's pretty much
81:30 - it so that means if i go ahead and say
81:33 - the unchanging here
81:34 - right all i have to do is instead
81:36 - instead of doing
81:38 - either target instead of doing that we
81:39 - simply do is set input
81:41 - e dot target that value so we're going
81:44 - to get the value from our input
81:46 - and we're going to change it inside
81:49 - inside out oh what happened
81:50 - oh there we go inside our what inside
81:53 - our specific input that's it
81:55 - and now every single time when you
81:58 - change this is going to change as well
82:00 - it's very very
82:01 - very very simple simple as that
82:05 - yeah and i can show you the next feature
82:08 - we're going to
82:09 - uh adding as well because now you see
82:12 - that everything changes when nas was
82:15 - typing something in in the input but we
82:17 - don't want all of those letters
82:19 - right we don't want that pyramid of
82:21 - letters we just want the last
82:24 - well the last word basically yes so what
82:26 - we do
82:27 - which moment is that when where
82:32 - oh clicking the button when you click
82:35 - pressing the enter correct you click the
82:37 - button or when you press the enter of
82:38 - course yeah
82:39 - press the enter same it's the same so
82:43 - upon a function okay once we click on
82:47 - the
82:47 - we press enter not the button because we
82:49 - made that one disappear
82:50 - yes to be clear again the reason why the
82:52 - reason why this let me just happen is
82:54 - they unclick the
82:55 - submit because the button submit by
82:58 - default
82:59 - has functionality for you to be able to
83:01 - hit enter and it will call the
83:03 - button it will call the submit button
83:04 - that's actually what's going to happen
83:06 - basically
83:07 - right by default so then we're going to
83:09 - create a function called
83:10 - right there answer submit as justice
83:12 - creating right here okay
83:15 - right there beautiful beautiful and
83:17 - we're doing this april before because
83:19 - there's some other like whenever
83:20 - whenever you click a button right like
83:21 - when you hit enter
83:23 - it by default it wants you to it's gonna
83:25 - it wants you to take to it
83:26 - you want to take it to another page but
83:28 - we want to prevent that by saying either
83:30 - parent default to do that okay make
83:32 - sense
83:33 - good good good good good awesome then
83:35 - what's going to happen is let's
83:36 - consolidate the input and that's we'll
83:37 - see
83:38 - is when you hit enter you will get the
83:40 - input right here let's go ahead and save
83:41 - this
83:42 - beautiful okay that's used as undefined
83:45 - now again yes you
83:45 - send the file because we're team pointed
83:47 - so let's go ahead and import it here i'm
83:48 - gonna say comma
83:49 - hold on sorry right there all good
83:52 - i will say use stage
83:55 - state okay there we go and beautiful now
83:58 - we have
83:58 - our use date simple and again here
84:01 - whenever you hit enter
84:02 - right it's going to click the it's going
84:04 - to hit the answer submit function
84:06 - which is in here right and our input is
84:10 - always updated because our if the input
84:12 - gets updated through what
84:14 - through our on change function right
84:16 - here that's pretty much it guys that's
84:18 - all you have to think about okay
84:19 - so let's go ahead and save that so we'll
84:22 - go ahead and save that beautiful
84:24 - okay so save that and then let's go
84:26 - ahead and refresh this
84:27 - beautiful all right now let's go ahead
84:29 - and see if i go ahead and now command k
84:32 - to clear this out
84:33 - if i'm typing for the po
84:36 - right and i say enter this is the input
84:41 - asdf whatever my b right if i say for
84:43 - example cars
84:44 - let's say hit enter there's the input
84:46 - cars right
84:47 - how sick is that guys by the way guys we
84:50 - are currently at 666 likes
84:53 - let's get us to 700 likes can we get to
84:56 - 700 should we get us 100 jesse
84:59 - can we get 700 guys i'm sure we can 700.
85:02 - let's get to 700 and let's finish this
85:04 - pinterest clone today
85:06 - right now we are guys are so close at
85:08 - this point it's insane guys
85:10 - so close so that's going to finish this
85:11 - up right now and we'll get started
85:14 - let's go jesse let's go let's go let's
85:18 - go let's go
85:18 - so nas the next thing we need to do
85:21 - actually
85:22 - is i think it's time somebody said
85:25 - somebody give you a super chat and
85:27 - give us 40 pesos says jesse i love you
85:31 - [Laughter]
85:32 - thank you calamity calamity is the name
85:36 - calamity that's awesome
85:40 - okay so um
85:45 - well you know we actually
85:49 - want what do we want to do with this
85:51 - input guys we want this
85:52 - input we want to make an api call
85:56 - with that to the on splash right and
85:58 - then
85:59 - we want those pins to be next step to be
86:02 - distributed
86:04 - or passed in as props
86:07 - correct yes to the main board yes so
86:10 - what we need to do actually because
86:11 - header is a child component a header
86:14 - you know you don't see the main board
86:15 - component here right so what we need to
86:17 - do is we need to send
86:19 - info from the header component to the
86:21 - app component
86:22 - the parent component and app component
86:25 - will
86:26 - pass it to the main board well let's
86:28 - think about this but but before we do
86:30 - that jesse let's think about this okay
86:31 - if we have if we want to make for
86:33 - example a search to the unsplash api
86:36 - okay
86:37 - what do you think that that needs to
86:38 - happen like if you want if you want to
86:39 - call an api right the on splash api what
86:41 - do you think that needs to happen
86:43 - well it needs to be distributed to
86:45 - different
86:46 - components right so i would say it's
86:48 - parent component app.js yes because
86:50 - we're going to use that functionality
86:52 - inside here
86:53 - and also inside here right so we have to
86:55 - think about that okay
86:56 - so we're going to go on on uh we will go
86:59 - to app.js
87:00 - and inside the app.js what we can create
87:02 - guys is we can create
87:03 - a actual kind of like uh think of it as
87:05 - like on search submit function okay
87:07 - so we can say create an answer segment
87:09 - function so let's go and do const
87:11 - on search submit right there oh damn how
87:13 - does it give me the the answer to that i
87:15 - don't know why
87:16 - yeah it's very smart sometimes visual
87:19 - studio
87:20 - way too smart right right this function
87:22 - we're going to pass in
87:23 - our input so we'll say for example
87:26 - equals we'll give it a function this is
87:28 - called the arrow function just so you
87:29 - know guys
87:30 - in esx we'll give it a term right there
87:32 - this term now
87:33 - what's going to happen when we go ahead
87:35 - and actually call this function well
87:37 - pretty simple
87:38 - this is where we will get images right
87:39 - we're going to call
87:41 - thank you we're going to call uh
87:43 - basically the images
87:44 - for what the images for on splash so
87:47 - that means
87:48 - like again separation of concerns we now
87:51 - want to get images from one splash
87:53 - let's go ahead and create a function
87:55 - called get images
87:56 - so i will say const const
88:00 - get images images right and that's also
88:03 - going to be a function
88:05 - right and this is also going to accept
88:07 - what a term correct
88:09 - yes right and now just how we had it
88:12 - before right
88:13 - the way because because jesse went ahead
88:15 - and created our what our onsplash
88:18 - um axios right here where is it inside
88:21 - the api
88:21 - right here see we can simply call this
88:24 - right away
88:25 - check this out i go to app.js and i
88:27 - simply say here
88:28 - look at this here's how cool this is i
88:30 - can simply say
88:32 - on splash return here we'll do unsplash
88:36 - on splash right here unsplash.git
88:40 - and we'll give it that url and we'll
88:42 - give it the what what url we're going to
88:43 - give it
88:45 - well the one that we found in the search
88:48 - query
88:48 - um area right yes yes uh within the
88:51 - documentation of em
88:53 - on splash correct so the one that we're
88:55 - going to look for is actually
88:56 - the search photos let's go ahead and do
88:58 - search photos right here
89:00 - that's going to be which one it's going
89:01 - to be pretty much this one so https api
89:04 - search photos right here boom oh you got
89:06 - it thank you jesse
89:08 - yeah yeah of course no i know you were
89:09 - looking there so exactly that we're not
89:12 - looking at exactly the source of it and
89:14 - also
89:15 - you need to give it some params right
89:18 - yes it also says it at the top
89:20 - params correct and then within these
89:23 - params is an object
89:24 - it has a key and it expects they're
89:27 - actually what you want
89:29 - to search for yeah it's out there right
89:30 - there and again
89:32 - the params are based on this as you can
89:34 - see guys right we have a query parameter
89:36 - page param a per page prime and so forth
89:38 - and by default the per page param is
89:39 - just simply 10 right
89:41 - that's how we know right that's how we
89:43 - know that you know that's how many
89:44 - photos we're going to get back every
89:46 - time we click search and that's what the
89:48 - parameter we're going to pass into our
89:49 - query so let's go ahead and do that save
89:50 - that
89:51 - and now let's just call i'm just going
89:52 - let's go and call this unsplash let's do
89:55 - let's do git images let's actually call
89:57 - it we're using the term right
89:59 - no definitely of course right now okay
90:00 - but now that's gonna happen because
90:02 - we need to nothing's been nothing's
90:04 - called the answer submit so let's for
90:06 - now let's do answer submit just as a as
90:08 - a as a
90:10 - test let's go ahead and call it with
90:12 - what should we do car
90:13 - i don't know i don't know why
90:17 - volley how about that bali how about
90:20 - that
90:21 - let's go bali so here we'll do bali okay
90:23 - we'll do bali right here
90:25 - and so now if i go back to my my right
90:28 - there
90:28 - oh okay check this out let's go ahead
90:31 - and do network
90:32 - okay you will you will still see here
90:34 - right there where is there is arizona
90:35 - where is it photos bali look at this
90:37 - hey and here's a result let's check this
90:39 - out we get our results let's go
90:47 - [Music]
91:00 - hey
91:12 - you gotta have fun sometimes you know
91:16 - special friday night it's friday night
91:18 - here it's friday night let's go
91:22 - this is the result we got back from
91:25 - unsplash okay
91:26 - isn't that awesome yes like
91:29 - an array with 10 objects and each of
91:32 - those objects what do they contain
91:34 - us they contain look at this i'm not
91:36 - sure well do they contain jesse actually
91:37 - you tell me a lot
91:38 - though but what you should be looking
91:40 - for is the urls
91:42 - where's the url
91:46 - no bottom bottom oh url so right there
91:49 - yeah yours we have a full url a raw
91:51 - a regular yeah a small thumbnail and so
91:53 - our goal is we're going to go ahead and
91:55 - go
91:56 - and get which one well um usually the
91:59 - regular one
92:00 - is good yeah you can see we made it out
92:03 - not you can test it out you can copy one
92:05 - url and paste it in your browser we copy
92:07 - it
92:09 - yeah that's cool i mean it's just like
92:11 - it works in source right
92:12 - for an image so let's go and copy this
92:14 - guys cup
92:15 - case copies pasta pasta
92:20 - pasta in here oh that looks oh jesse why
92:23 - am i not there justin how is the
92:24 - question
92:26 - something way to see anyways
92:29 - isn't this amazing guys
92:34 - always always be positive guys always
92:37 - always okay
92:38 - so here that's how you connect thank you
92:41 - love youtube
92:43 - that's how you can test that your api
92:46 - called two on splash
92:47 - went perfect though yes okay exactly
92:50 - let's go let's go now so we got the
92:52 - answer submit okay jesse let's go ahead
92:54 - and drive us what's next
92:55 - what's next so um i think we want to
92:59 - call this unsearch submit
93:00 - when we're doing what when we're
93:02 - pressing
93:04 - enter enter enter so how do we do that
93:08 - jesse so when we go back to header.js
93:10 - okay
93:12 - right there apparently we have the
93:14 - unsearched submit
93:15 - correct right here sounds familiar yes
93:18 - so here we're gonna be
93:21 - calling that function with an app
93:24 - component
93:25 - but wait how can i call a function in
93:28 - the parent component
93:31 - from a child that's a good point that's
93:33 - a good point well
93:34 - the way you do is you can actually pass
93:36 - in guys you can pass in
93:38 - a function as an actual prop or think of
93:40 - it as a parameter
93:41 - not a prop a prop to a component is
93:44 - think as like a parameter
93:45 - to your function right so don't confuse
93:47 - that it's a pretty simple term to
93:49 - understand okay
93:50 - prop is a comparable to a function so
93:53 - within the header no let me start at the
93:56 - beginning but the header will receive
93:58 - props which is the function so when we
94:00 - go back to app.js
94:02 - let's pass that function in and let's
94:04 - call it
94:06 - um unsubmit you know like do it let's
94:09 - call it unsubmit
94:10 - yeah you can do it no you do you you do
94:12 - it you do it you do it okay okay
94:14 - on submit and we're gonna pass in
94:18 - that function that we made okay so it's
94:20 - the on
94:21 - search submit so just to be really clear
94:24 - about this
94:25 - guys these are different things but here
94:28 - look
94:29 - unsubmit is the key on props
94:32 - okay because prop's always an object and
94:35 - on that key we will have the unsearched
94:38 - submit function so when header
94:42 - receives props and basically it looks
94:45 - like
94:46 - this now uh under the hood
94:49 - okay okay not with the not with quote
94:52 - guys but
94:54 - just like this and it will have
94:59 - and then here it will have that function
95:01 - yeah so on this this
95:03 - this guys is happening underneath the
95:04 - hood just you know this is underneath
95:05 - the hood basically
95:07 - this is how props can be passed in right
95:10 - into the header component okay so it's
95:11 - just so you know right it's not magic
95:14 - it's not magic right
95:15 - underneath the hood when you pass in a
95:18 - prop into here
95:19 - right it's like you're passing a
95:20 - parameter into your function and you're
95:22 - given the parameter a function uncalled
95:24 - answer submit
95:25 - and then we accept it by saying like
95:27 - this and now we can say what we can do
95:29 - props what
95:30 - props dot what on submit
95:34 - submit submit and look at this and then
95:37 - we can call using the term
95:38 - what is it the input which we get what
95:41 - the input right here
95:43 - and that's it and so now it's going to
95:45 - happen is look
95:46 - look this right here is going to call
95:50 - the on submit function that's going to
95:52 - remove this unsubmit function
95:54 - which is actually inside the app.js
95:56 - which is right here right there see
95:58 - so now if i go ahead and do this if i
96:00 - say console.log
96:03 - sorry god bless you no no
96:06 - sorry answer submit right there right
96:10 - right there and i i give it a term let's
96:12 - say term
96:13 - okay so let's go ahead and save this
96:15 - beautiful if i do that guys check this
96:17 - out if i do that look at this
96:19 - what's going to happen is pretty simple
96:21 - i will go ahead and do this right now
96:23 - and let's go ahead and inspect element
96:26 - console let's do this bali
96:30 - look at that answer submit bali and
96:32 - that's the one guys
96:34 - how cool is that huh
96:37 - [Music]
96:42 - i'll say that's pretty sick so you can
96:43 - see if he called this
96:45 - function this function was called right
96:48 - within you see
96:49 - you had this function which was one
96:50 - function here right let me play this
96:52 - right
96:53 - this was our function called the app.js
96:56 - this was our app.js
96:59 - that gs and we had our oops let's go
97:01 - ahead and do this
97:02 - and we had our what's it called our
97:04 - header header
97:05 - right there so let's go ahead and do
97:06 - this say header header.js
97:09 - right there and what happened is that
97:11 - from the app.gs
97:12 - we went ahead and we have a function
97:14 - called um
97:15 - what is it called on subscribe submit on
97:18 - search submit
97:20 - right there right let's go make this a
97:22 - little bit smaller right there
97:24 - right there oh boom wait
97:27 - see answer submit then what's going to
97:29 - happen is that this answer submit is
97:30 - going to
97:31 - pass itself in right then we'll go to
97:33 - the other brush pass itself
97:35 - into here and then we're going to get
97:38 - the on submit function here
97:40 - right and so what's going to happen is
97:42 - when we call now this
97:43 - and go and okay boom we now call this
97:47 - this is going to be this is actually
97:49 - going to call this
97:50 - so this right there and that's pretty
97:52 - much it right it's going to call this
97:54 - and it's going to pass in
97:55 - the term any term any parameter that we
97:58 - want
97:58 - so parameter let me see param into it as
98:01 - well
98:02 - how cool is that right so just keep that
98:05 - in mind guys okay let's just keep that
98:07 - in mind with you right
98:08 - really important tool for you guys to
98:09 - know exactly what you're doing all right
98:11 - cool
98:11 - all right let's go ahead and keep going
98:12 - so we got that specific portion what's
98:14 - next jesse
98:16 - what's next let me think let me think
98:19 - okay so
98:20 - let's look at app.js
98:24 - so we're gonna make api close to one
98:26 - splash right now
98:27 - yes and once we have that
98:31 - once we get results back what do we want
98:33 - to do with those
98:35 - i think we want us i think we want to
98:37 - make new pins out of those right
98:40 - so once we've done here line 23 guys
98:43 - once we have
98:44 - um we get the pictures back from
98:46 - unsplash okay
98:48 - we want to do something with that result
98:50 - right correct so we're going to say then
98:53 - by the way um
98:56 - axio is always returning promises yeah
98:59 - okay guys we're going
99:00 - to wait 64 likes let's get to 700 guys
99:02 - just six more likes
99:05 - 700 likes omg that's a lot
99:08 - that's a lot so get images
99:12 - term we're gonna wait for that function
99:13 - to come back with the pictures and then
99:15 - we have the result
99:17 - of that okay so let's do something with
99:18 - that so let's catch that in a variable
99:21 - and say rest.results
99:25 - this one on the right side this actually
99:27 - what we're getting back from unsplash
99:29 - remember we had that
99:30 - result an array and then we flipped out
99:33 - right here
99:33 - that's exactly that right there see this
99:35 - results right here guys we see this
99:36 - result
99:36 - this is the result we're calling right
99:38 - here so this directly maps
99:40 - to that right there directly mapped to
99:42 - that just so you know okay
99:44 - so we want to store that within a new
99:47 - array and we call that
99:48 - new pins okay what we want to do there
99:51 - is actually
99:51 - we want to have all of the results in
99:53 - there all of it
99:55 - so we're going to use something spread
99:57 - operator and we're also going to do that
99:59 - for previous pins that we have
100:02 - because at the top of this app we also
100:04 - want to do something else we always want
100:06 - to
100:07 - know a certain state yes okay a certain
100:10 - state
100:10 - regarding the pins because that's what
100:12 - we want right
100:14 - so here again pins sets new pins so
100:17 - these are going to collapse are going to
100:19 - reference whatever pins you have here so
100:21 - these pins are going to
100:22 - contain the data okay to show
100:25 - all of these other pins right here right
100:28 - that's how this
100:29 - is going to work it's pretty simple
100:30 - right so let's go ahead and keep going
100:32 - jesse
100:33 - so people yeah okay go ahead so
100:36 - we have a state here of pins and then
100:39 - with the react hook of use state
100:42 - which has a default of an empty array so
100:44 - if we don't have any pins it will just
100:45 - have an empty array
100:46 - okay but with set new pins this function
100:50 - which is the setter we can set the value
100:52 - of
100:53 - pins okay so once we have new pins here
100:56 - what we're going to do is well first
100:58 - we're going to sort it a little bit
100:59 - because we don't want pins like
101:01 - 10 dogs 10 cats 10 cars we don't want
101:04 - that we don't
101:04 - we want to shuffle that a little bit
101:06 - okay so we're going to use a sort
101:08 - function here
101:09 - to do that
101:18 - we're going to randomize it okay but
101:21 - actually what's the most important part
101:22 - of this function is we're going to
101:24 - set the new pins with
101:27 - the new pins yes yes yes yes so
101:31 - line 34 guys line 34 that's what it's
101:34 - all about
101:34 - we're going to give new pins as an
101:36 - argument to the setter function which
101:38 - means
101:39 - new pins here will be set on pins
101:43 - and will be displayed
101:46 - we get the results here right we get we
101:49 - use the results and we concatenate
101:51 - together with our current pins
101:52 - which are currently inside our state
101:54 - right here right there you see
101:56 - inside this state right you concatenate
101:58 - this is called
101:59 - a spread operator so we can actually
102:01 - spread out whatever's in here
102:02 - and what i was in here i kind of put
102:04 - them and put them together right so
102:06 - imagine
102:06 - taking for example imagine taking like
102:09 - uh
102:09 - taking like for example here you see
102:12 - this right here see this
102:13 - actually let me put this imagine doing
102:15 - this for example you have this and you
102:17 - have this
102:17 - right and then what you do is you bring
102:19 - it together by doing just doing
102:21 - you're doing like this now you have one
102:24 - that's pretty much it now you have one
102:25 - that's all you're doing when you when
102:26 - you're doing the spread operator
102:27 - together right that's all pretty much
102:29 - you're doing what we're doing here
102:30 - okay so you got that then we're going to
102:31 - have here and we're going to just
102:33 - randomize them just for
102:34 - recommendations think and then we're
102:36 - going to actually save them
102:37 - usually called something set new pins
102:39 - which we get from
102:40 - here directly and that's pretty much it
102:42 - now we have the set new pins and so
102:43 - every single time
102:44 - we now search we're going to show these
102:47 - pins
102:48 - in here we're going to set them save
102:50 - them in here and that's it
102:52 - and now because we have that because we
102:55 - have that what we can do now
102:57 - what we can do now is pretty much just
102:59 - go ahead and what
103:01 - pass it to the main board exactly
103:05 - let's do it jesse you got this come on
103:08 - okay so guys so we're gonna be
103:11 - we're gonna be passing the pins as a
103:14 - prop
103:14 - to mainboard right so here with a
103:17 - mainboard
103:19 - chorus pass props are gonna be here
103:22 - okay so always make sure when you're
103:24 - making react components that you know
103:26 - you think about the data flow right
103:28 - not props but props yep
103:32 - so let's destructure that because just
103:34 - like i showed before
103:35 - props and objects so the key on it is
103:37 - pins so let's just do this
103:39 - yeah we're currently wearing that we're
103:40 - currently where in the we are
103:42 - main words the js let's go ahead and do
103:44 - that right now
103:45 - okay click beautiful nice nice awesome
103:49 - so now we only have one pin here but i
103:52 - still want to show it
103:53 - first of all let me fix that error for
103:55 - you
103:56 - here import you state
104:00 - where is it where is it where are you
104:01 - doing that where are you doing that
104:02 - jesse
104:03 - yes yes let's go back to app.js hold on
104:06 - app.js okay keep going
104:08 - yeah so make sure you let me know where
104:09 - you're doing this okay yeah yeah
104:11 - sorry after gs i fixed it on the top at
104:14 - the top
104:15 - good so we have the use state right here
104:16 - that's beautiful to make sure that
104:18 - that's all working
104:19 - okay nice good oh there we go now it's
104:21 - working probably okay keep going keep
104:22 - going
104:23 - yeah yeah so i'm gonna go back to
104:25 - mainboard.js
104:27 - okay let's go so now that we have all of
104:30 - the pins what do you think we want to do
104:31 - nice
104:33 - well we underwent now we want to go
104:34 - ahead and loop through them
104:36 - fully and actually show every single pin
104:39 - that we get
104:40 - how cool would that be oh let's go
104:42 - [Music]
104:43 - well let's just map through it or you
104:44 - want to for each through it
104:48 - well we can do we can do map we can do
104:49 - for each let's do map that's fine okay
104:51 - that's fine we can do it that's fine
104:54 - visual studio code um
104:58 - pinstop map and i'm mapping through each
105:01 - pin
105:02 - and each pin has a url to to just make
105:05 - it a little bit
105:07 - more readable cool so what's happening
105:10 - here guys is pretty simple
105:12 - we're going to get these pins that are
105:14 - going to come from
105:15 - the the home page okay from the app.js
105:17 - right here from this these pins right
105:18 - here
105:19 - then we're going to loop through every
105:20 - single pin right we're going to get
105:24 - left every single pin right and then
105:25 - what's going to happen here now jesse
105:28 - well we're going to get the url
105:32 - we're going to get the urls yeah of the
105:34 - pen right and then again
105:36 - we can actually show show what show the
105:39 - actual component of the pen
105:41 - yes so we're going to pass it in to the
105:44 - pin
105:45 - because remember when if we're looking
105:48 - at pin.js
105:50 - i'm now in pin.js we have that image
105:53 - source right
105:54 - the hard-coded copy link or the link you
105:57 - copied in
105:59 - if you go to pin.js i'm doing it right
106:00 - now and then
106:02 - yes right there okay let's see okay oh
106:05 - so it's currently hard copy so we need
106:06 - to actually replace
106:07 - this right we need to go and replace
106:09 - this with a prop
106:11 - so if we go ahead and pass some props
106:12 - here okay props here
106:14 - okay we're gonna place that prop with an
106:16 - actual
106:17 - url from props so let's do that right
106:19 - now so we can pass in a prop
106:22 - what prop should we pass in here equal
106:24 - url
106:25 - right there right there and we can say
106:27 - urls
106:29 - that what the regular right because why
106:32 - you can see that inside here it's right
106:34 - inside here
106:36 - we have urls right there right urls
106:39 - and then we have a regular a raw a full
106:42 - a small and so forth
106:43 - and we're going to get a regular for
106:44 - this one so we'll say urls.regular
106:47 - right to get just the regular ones okay
106:49 - beautiful i'm going to close this out
106:51 - okay yep sorry and what i do sometimes
106:54 - just to make sure
106:55 - i'm gonna put a question mark here so
106:59 - in case it's not there it won't freak
107:01 - out yes correct correct correct
107:03 - so what's going to happen is once we go
107:05 - ahead and we have the urls.regular
107:07 - okay so cool you have that guys now of
107:10 - course you can see
107:11 - nothing's happening you can see this
107:12 - kind of it kind of broke right
107:14 - but that's exactly what we want to do
107:16 - you want it to break right we want it to
107:17 - break right now
107:18 - because we're not passing in urls just
107:21 - yet
107:22 - now to do that we go to main board okay
107:24 - we go to the main board
107:26 - so wherever we passing url so you can
107:27 - see now we're passing urls and look at
107:29 - this
107:29 - let's go and pass it in and you can see
107:31 - nothing right now is happening just yet
107:34 - no no no because we need to do this
107:39 - this one oh let's go hold on
107:42 - so we need to save this hola save this
107:46 - it's still not showing up which is
107:48 - completely fine
107:51 - that's fine look right so we want to go
107:53 - ahead for this specific one
107:54 - right for every single pin in the in the
107:58 - main board if we go ahead and let's take
107:59 - a look at this
108:00 - if i go ahead and see this let's go to
108:01 - console let's see if we have any issues
108:03 - there's no issues right now that are
108:05 - showing which is no problem
108:06 - let me see so we go ahead and map
108:08 - through this we have pins
108:10 - okay let's go ahead and do console log
108:12 - pins to see if we actually get in the
108:13 - pin so console.log
108:16 - now actually hold on this makes sense
108:18 - look at this this makes sense why this
108:20 - is now does not work why guys
108:21 - because this should be working when we
108:24 - click submit when we hit submit that's
108:26 - why
108:27 - right when we hit submit so if i say
108:29 - click this if i say car
108:31 - ready ready for this jesse are you ready
108:35 - oh let's go
108:38 - that's what i'm talking about hold on
108:41 - look at this oh
108:42 - that is so cool thank you so much guys
108:46 - we are clearly at 715 likes
108:48 - let's get to 800 likes you guys are
108:51 - amazing thank you so much let's go ahead
108:53 - and keep going we're almost there let's
108:55 - go ahead and make it
108:55 - so good so good almost pictures man
109:00 - that's really like that gets me pumped
109:02 - about pinterest every time you see it
109:04 - you know
109:04 - now one thing i will say to you guys is
109:06 - you see how we have this issue right
109:07 - here say call unique key prop
109:09 - no problem what we can do is here for
109:11 - here is we can actually give it a unique
109:13 - key so look at this
109:14 - this is something you you need for every
109:16 - whenever you map through it we can you
109:18 - need to give it a unique
109:19 - key that's the one thing you need to do
109:20 - which is no problem so we can do
109:22 - is a set of pin we can now do key
109:25 - key right here key is equal to index and
109:28 - every single component when you loop
109:30 - through it needs to have some kind of a
109:31 - key
109:32 - and the reason why is because this is
109:34 - how right here just so you guys know
109:36 - just so you know this right here this
109:37 - key is how react.js
109:40 - tracks changes so whenever something
109:43 - changes for xjs this is how it tracks
109:44 - changes this is how it knows
109:46 - how to update your view that you have
109:48 - okay
109:49 - cool so kind of keep going with this
109:51 - that's also what makes it really fast
109:53 - right yes yes yes yes okay so we saved
109:56 - that
109:57 - keep going jesse so keep going keep
110:00 - going
110:01 - you know what nas let's go back to
110:05 - app.js
110:07 - because now we only get pictures upon
110:09 - the submit
110:10 - okay okay actually when i open up the
110:12 - app i want to see
110:13 - pictures as well right i want to see
110:15 - pins as well okay
110:17 - and maybe based on a few search terms
110:19 - that i've
110:20 - you know used in the past couple of days
110:22 - so what do you think
110:23 - so maybe let's create a function that
110:25 - will maybe
110:26 - that will right away show us show us a
110:29 - few pins right away how about that jesse
110:32 - yeah well i think it's good if we use
110:34 - use effect for that
110:35 - because use effect is one of the react
110:38 - hooks i believe
110:39 - that you know renders one time it fires
110:41 - off one time
110:42 - when you open up an app exactly okay so
110:45 - let's
110:45 - use that one and let's let let
110:48 - blow up let the use effect fire off
110:52 - another function yes okay so let me make
110:54 - that one here i don't know where you are
110:56 - i'm in the app.js as well okay great
111:01 - i'm gonna give it an empty array here
111:04 - good good good good good okay and then
111:07 - what should we call it i think like get
111:09 - new pins for example yes yes yes yes yes
111:12 - and guys the reason why we're doing this
111:13 - is because again user effect is a really
111:15 - popular thing where
111:16 - every time the page loads right whenever
111:18 - the page loads we're going to call this
111:20 - function on page load
111:22 - right and so then we're going to create
111:23 - a get new pins function right here
111:25 - which is going to be called on again
111:27 - page load
111:28 - and then we're going to get just a few
111:30 - you know few simple
111:32 - uh kind of like a few simple pins
111:35 - for us to show right away from the
111:36 - get-go so let's go and see this
111:38 - so we're going to do is we're going to
111:40 - create multiple promises here
111:41 - the reason why we're creating this
111:43 - process is because again we're going to
111:45 - have
111:45 - multiple uh what's it called um multiple
111:48 - uh
111:49 - calls to the api multicast api because
111:52 - if i do this check this out
111:53 - if we do this if we think about this let
111:55 - me go ahead and click a brush and let me
111:56 - go ahead and freeze this
111:57 - right we have all let's we'll create a
112:00 - few different search terms so we'll have
112:01 - for example
112:02 - car maybe we'll have for example bali
112:05 - right maybe
112:06 - we would want to show for example uh
112:07 - something else let's say it's car or dog
112:10 - just kind of how jesse is typing right
112:11 - there right this is let's say it's an
112:13 - array
112:13 - okay let's say this is an array okay
112:16 - that's awesome
112:17 - then what's going to happen is pretty
112:19 - simple guys right we're going to for
112:21 - every single one
112:23 - we're going to call the unsplash api
112:28 - flash api right on splash api
112:31 - right and we'll do like this we'll go to
112:33 - car
112:34 - we'll call that splash api and we'll get
112:36 - data and we'll save it to pins so here
112:38 - our pins are going to be here this is
112:40 - the pins data okay
112:42 - then same thing is going to happen for
112:43 - bali right we're going to go
112:45 - bali collapse api save it back to pins
112:49 - then dog answers api save it back
112:52 - to pins really simple really simple guys
112:55 - this is why we have multiple promises in
112:57 - here because of for that reason because
112:59 - we want to be able to show
113:01 - we want to wait for all this to happen
113:03 - at once and then we want to go ahead and
113:05 - show
113:05 - all the images so you can see you see
113:07 - jesse right here where she's going yeah
113:09 - where she's got the promises
113:10 - she's got the list of pins just how i
113:12 - just showed it to you
113:13 - we're looping every single pin right
113:15 - here a little bit exactly
113:17 - okay okay lupita
113:20 - and then what's going to happen is for
113:22 - every single pin
113:23 - pricing pin turn which is going to be
113:24 - this this and so forth
113:26 - we're going to create a promise or push
113:28 - a promise right a promise
113:30 - using the get images function right here
113:33 - it's as simple as that okay
113:35 - so you digest it right here here just
113:37 - doing she's doing the get images
113:39 - function just like how i did it
113:40 - beforehand in here to get images
113:42 - function to get the term
113:44 - but in our case we're doing good images
113:45 - for every single pen term inside here
113:48 - okay then we get results
113:51 - that are just how did before and now we
113:53 - have the pin data so go ahead just to
113:54 - keep going
113:58 - so we're going to concat that previous
114:01 - correct things we're going to concat the
114:04 - current pin data which is
114:05 - a current pandita which is kind of
114:08 - basically empty right empty array for
114:10 - now
114:11 - with a new result so basically we're
114:13 - going to create a bunch of pins
114:14 - right here for for ocean for tokyo for
114:17 - dogs
114:17 - whatever we get for ocean is going to go
114:19 - here there we go for tokyo
114:20 - is going to go to here whatever we get
114:22 - for dogs is going to go here
114:24 - that's it and now what she's doing is
114:26 - she's going to go ahead and sort this
114:28 - right just to kind of uh let's go ahead
114:30 - just to sort this just to go ahead
114:32 - and kind of like insert it just to so so
114:34 - it's not blend you know so it's not
114:36 - blend
114:36 - and that's pretty much it so here when
114:38 - we're sorting we're just randomizing it
114:40 - that's it and that's it that's pretty
114:42 - much it jesse right
114:44 - but at the end we're gonna collect all
114:47 - of those promises
114:48 - all of those from those requests that we
114:50 - send out yes
114:51 - yes so this is gonna be at the end
114:54 - and then we're gonna do the most
114:56 - important things what do you think we
114:58 - should be doing
114:58 - setting the new pins of course yes with
115:02 - all of the pin data exactly exactly
115:05 - so what's going to happen now is that
115:07 - promise is not all what it does is
115:08 - pretty simple guys
115:09 - it goes ahead and it waits for all the
115:11 - promises to finish right
115:12 - that's what all the problems to finish
115:14 - meaning it waits for all these api calls
115:16 - to finish like the images for the ocean
115:18 - for tokyo and so forth
115:19 - and then we're going to and then all it
115:22 - wants is going to set new pins
115:23 - with the pinned data that we have here
115:26 - it's a pretty simple solution right
115:27 - we're going to set your pins with a new
115:29 - pin that we have here and that's pretty
115:30 - much it
115:31 - makes sense that's pretty much it makes
115:34 - sense
115:35 - all right let me see i'm missing a
115:37 - bracket somewhere missing a bracket let
115:39 - me see we have the bracket here
115:40 - we have a bracket here we call this
115:44 - here bracket here racket here
115:48 - bracket here
115:53 - let me see let me see let me see i think
115:54 - you got it pretty much
115:58 - i think it's actually because of
116:02 - let me see here
116:05 - that's actually interesting where'd that
116:07 - come about
116:09 - i don't know let me see
116:12 - we have a bracket here the bracket is
116:15 - here okay that's fine
116:21 - now it's still not gone and then here
116:25 - what is it here
116:30 - maybe somewhere at the top
116:33 - i got it command x let's cut this for
116:36 - now for a second
116:38 - i think it might be fluke with use code
116:40 - for a second here that's all
116:42 - and then command p no
116:49 - let me see there's that
116:54 - use of fact is in here and make sure
116:56 - this is all good you got that that's
116:57 - awesome oh we haven't
116:58 - imported use effect um that's why
117:02 - hmm well it's funny how it doesn't fully
117:06 - give us the what's it called
117:08 - doesn't give us the proper uh error if
117:10 - we wanted to
117:11 - mm-hmm yeah so we have used
117:14 - this word okay that's fine yeah let's
117:16 - try this
117:18 - say this it says okay there we go and
117:21 - now we have
117:22 - ourselves pins look at this oh let's go
117:26 - so you can see now now of course it
117:28 - looks weird right it looks weird as [ __ ]
117:29 - look at this
117:30 - actually that's pretty cool holy [ __ ]
117:32 - can we just leave it at this
117:34 - damn yeah yeah yeah yeah we create our
117:37 - own pinterest can we just leave that
117:38 - down
117:39 - pinterest what color for you because
117:40 - this is much better i'm sorry
117:43 - i love this i really love the amazing
117:46 - layout though where you have like the
117:47 - small blocks and the big blocks and then
117:49 - it looks really
117:51 - please okay guys how cool is that guys
117:53 - let's go ahead
117:54 - guys we're currently at 706 likes let's
117:57 - get to 800 guys
117:59 - for this epic view for this epic picture
118:01 - score that we've got right now
118:03 - look at how beautiful it is good look at
118:05 - that
118:06 - i love it that's amazing amazing guys
118:08 - let's go ahead and get it to 800 we are
118:10 - currently at 727
118:12 - can we get to 100 i'm sure we can i know
118:14 - we can you guys current you guys can
118:18 - let's go all right keep going jesse
118:20 - let's go ahead so we got the pins
118:22 - right we're getting the pins right here
118:23 - no problem okay what's the next thing we
118:25 - should do we should probably
118:26 - focus a little bit on the styling
118:27 - portion right what do you think yeah so
118:30 - guys this is the last part okay we're
118:32 - gonna give this app that famous
118:34 - pinterest
118:35 - look let's do it let's do it a masonry
118:38 - layout are you ready
118:39 - let's go let's go i'm ready are you
118:41 - ready jesse
118:42 - are you ready ready are you ready
118:45 - i'm ready i'm ready i'm ready for a long
118:48 - time
118:48 - so let's go back to the main board now
118:51 - let's go back
118:52 - there okay so mainboard.js okay awesome
118:55 - let's see it
118:56 - okay so we're good yeah the gs we're
118:59 - going to go back
119:00 - to mail and we're going to actually be
119:02 - focusing on the container so remember we
119:05 - had to put on a width of 80 percent and
119:07 - when i showed that green block
119:09 - it was really persistent on showing that
119:10 - right yes but
119:12 - actually when you're making this layout
119:14 - we're going to use
119:15 - columns and yeah we're going to use
119:17 - columns
119:18 - and gaps and some counts because we're
119:21 - going to be saying
119:22 - if your screen is a certain size you
119:25 - need this many
119:26 - columns which basically means you're
119:28 - going to show this amount
119:30 - of columns of pictures okay so what is
119:33 - natural so
119:34 - for what is initially what columns
119:35 - should we show initially for now
119:38 - what columns how many columns um
119:41 - maybe for this height maybe five columns
119:43 - or something just to show it you mean
119:45 - okay let's do it just a show let's see
119:50 - um comic con five okay sophie
119:54 - oh okay hold on hold on we're getting
119:56 - somewhere hold on
119:58 - getting somewhere column column gap go
120:00 - do it do it do we do it do it jesse
120:02 - okay column gap sporty nice cool nice
120:06 - beautiful
120:07 - beautiful oh it's gonna well this was a
120:10 - little bit smaller i think i think this
120:11 - was
120:12 - like five pixels no
120:16 - okay that looks better okay and we want
120:18 - to set a margin of auto
120:21 - zero auto so give it auto good on the
120:23 - container on the full container good
120:25 - yeah yeah and well
120:28 - we did have the height already yes
120:30 - correct no
120:32 - 100 percent no it's not necessary i
120:34 - think
120:35 - but maybe just to be sure yes
120:38 - so what you also need to be doing is
120:40 - something very important there's
120:42 - something you need to do with the
120:44 - pin itself i believe okay what is it
120:47 - what should we do
120:47 - jesse we should put the pin on a display
120:51 - inline block otherwise it will not do
120:54 - anything
120:54 - okay display inline block where would
120:59 - that be
121:00 - that would be in the pin pin.js
121:03 - here and it would be on i think the pin
121:07 - container if i remember correctly
121:09 - might be the wrapper i think actually oh
121:12 - yeah
121:13 - yeah oh we already put a display inline
121:15 - flex on it
121:16 - correct correct correct and so you can
121:18 - see now right these are not showing up
121:20 - in the three color three columns that we
121:22 - want to show up right
121:23 - let's go ahead and inspect that one on
121:24 - this one just to make sure just to check
121:26 - it out okay
121:27 - so here is all paint all pins right boom
121:29 - right there okay
121:30 - we have this specific portion right here
121:32 - okay this specific portion is
121:34 - display flex right and so forth this
121:37 - specific portion has a display flex with
121:39 - a column
121:40 - count of five and margin zero auto but
121:43 - of course it's not putting what do you
121:44 - think that's not putting you just see
121:45 - the column cut i'm curious um
121:48 - that squish question um
121:52 - so here's what we can do let me see so
121:54 - if i go ahead if we have this specific
121:56 - thing let me see let's
121:56 - let's check this out
122:01 - because i think i think is because of
122:04 - the fact
122:04 - of this so you see column gap column
122:07 - count merges your auto
122:08 - let's see about height don't need this
122:12 - so we have the container which is fine
122:14 - okay
122:15 - display flex okay
122:18 - let's go ahead and do a line i can i do
122:20 - it like item center
122:23 - that's fine cancel
122:26 - that's fine let's go ahead and now do
122:29 - the following so we got that let me see
122:31 - column column uh what is it what is it
122:35 - called column what
122:37 - column count column or what do you mean
122:41 - column count css right there
122:45 - so for column count to work properly
122:47 - let's see for column count to work
122:48 - properly we need to do what
122:49 - uh no just like that that's fine
122:55 - column count
123:00 - so column count of three column count of
123:02 - four depending
123:04 - i think it's actually because of the
123:05 - fact that it's going out so for example
123:08 - i think what we need to do jesse in here
123:10 - is inside this container
123:12 - mm-hmm you see how we have
123:15 - this container goes side goes outside
123:17 - the width of this we need to prevent it
123:19 - from go outside the width of this
123:20 - ah you see this is the way this width
123:22 - has a width of this
123:24 - so we actually almost need to think
123:26 - remove this width
123:28 - right there that's fine because this is
123:30 - for example 435 this is for example
123:33 - let's see wrapper this is container
123:37 - look at that the width this is a
123:38 - thousand pixels you see this is however
123:40 - container okay i see
123:42 - okay um this one this one here is
123:46 - 944 pixels let's see
123:51 - okay let me see
124:00 - okay that's fine okay i think we need to
124:03 - look at
124:04 - our first our big one here big one here
124:08 - okay let's see max with
124:12 - with a hundred percent for this one okay
124:14 - let's take this okay
124:16 - okay 959 which is gonna be this one
124:18 - that's fine
124:21 - okay now it's going to happen let me see
124:23 - so if we go ahead and check this out
124:24 - this is 9.59
124:26 - how do i make sure let's give it this a
124:28 - width for example let's give this a um
124:31 - let's give this a width of
124:34 - of let's say 400 pixels
124:38 - okay so we're getting somewhere hold on
124:41 - hold on oh
124:42 - yeah sorry you're right we need to give
124:44 - it a max with to be honest
124:46 - thank you jesse appreciate it yeah there
124:48 - we go because you have max with right
124:49 - here yeah
124:50 - yeah yeah no i'm sorry i forgot about it
124:52 - but you need to give it a max width and
124:53 - within the max width
124:55 - then you can set a certain amount of
124:57 - columns yeah
124:58 - so if i remove this width actually i
124:59 - guess we don't need this okay
125:01 - right for this as well that's fine but
125:04 - for this specifically
125:06 - let's do a max width
125:09 - so let's try like 1008 pixels for max
125:12 - with
125:13 - 1000 pixels yeah something like that and
125:16 - then maybe
125:17 - like yeah four column count four for
125:19 - example
125:20 - column count four do you think that's
125:24 - gonna work
125:26 - hope so no it's not gonna work
125:29 - let's see one more time so if i have
125:31 - this let's save this
125:36 - all right so we have column where's our
125:37 - column count right here
125:39 - for the container right so we need to
125:41 - set
125:42 - on the container of this let's give it a
125:45 - on the container
125:50 - max width right here let's say it's
125:53 - given knight a width of 756 pixels
125:56 - what do you think what do you guys think
125:58 - you should do huh what do you think what
125:59 - do you guys think that we should
126:01 - have okay so it's getting somewhere it's
126:03 - a little bit okay
126:04 - all right that's fine okay that's fine
126:07 - um i think we need to do because is this
126:09 - the inviting flex or just flex
126:12 - inline flex uh no this should be a flex
126:15 - i think
126:16 - um oh sorry that's the whole point you
126:19 - need to remove the flex
126:22 - sorry you need to remove the flex yeah
126:24 - there we go
126:26 - oh sorry hold on you need to remove the
126:29 - flex
126:29 - remove the flex nice okay beautiful yeah
126:32 - yeah
126:32 - now it still looks weird as hell yeah
126:35 - yeah but
126:36 - i can change that for this one like for
126:38 - example
126:39 - if you put this one on 1260 pixels
126:45 - and then you're gonna give it a compound
126:47 - of five can you save it
126:50 - one two three four yeah oh that looks so
126:53 - much
126:53 - better thank you okay so it was all
126:56 - display of flex that was the issue
126:57 - because this place like
126:59 - keeps it in one row to use that but with
127:02 - the amazing
127:02 - rate layout we don't need to use that so
127:05 - learn from this guys okay
127:06 - so now you guys know i think that's not
127:09 - allowed
127:10 - honestly cool so guys so we got that
127:13 - specific portion and somebody said flex
127:14 - wrap
127:15 - thank you actually we could have done it
127:16 - can we do what's on display flags can we
127:19 - do
127:19 - this display flex let's see display
127:22 - flex and could we have done it with a
127:25 - flax wrap
127:26 - somebody said gonna have spaces i
127:28 - believe flex
127:29 - rap i'm just curious here
127:32 - rap prep
127:34 - [Music]
127:37 - i mean i mean that kind of works
127:42 - yeah it works but um only because you're
127:46 - using the column count i think
127:48 - i mean it kind of works not badly no
127:51 - that's true
127:52 - that's true okay okay cool cool cool
127:55 - cool cool
127:56 - i like that i like that okay so now we
127:59 - don't necessarily need to use that right
128:00 - there we don't necessarily need to use
128:02 - that so it's still going to be
128:03 - flex wrap of this specific actually no
128:05 - actually off
128:06 - i think actually i want to make it
128:08 - responsive nas hold on hold on
128:10 - just hold on hold on hold on this is fun
128:13 - align items
128:15 - flex uh start start
128:18 - oh okay oh
128:23 - yeah you're gonna have it's not gonna
128:24 - have oh i see what you mean so you see
128:26 - yeah
128:26 - it's gonna ah so it won't be the same
128:28 - can i talk yeah i'll be the same
128:30 - gotta check that yeah yeah yeah nice but
128:32 - it's cool it's really good it's really
128:33 - good if people try this out
128:35 - you get a feeling for it you know i was
128:37 - really hoping the flex will fix this but
128:38 - i guess i was wrong
128:41 - it's all right sometimes you win
128:42 - sometimes you lose you know that's
128:43 - that's part of life
128:46 - but this looks amazing though i'm happy
128:48 - look at that guys
128:50 - 743 likes let's get to 800 guys for this
128:53 - sick
128:54 - demonstration right here guys all right
128:55 - let's go let's do this let's do this omg
128:58 - yes yes yes yes yes all right so let's
129:00 - keep going
129:01 - let's keep going i want to make this
129:03 - responsive so that means
129:05 - what when you stretch it out yes i want
129:08 - the
129:08 - column count yeah you know i want it to
129:12 - be
129:12 - you know smooth like like the car spins
129:15 - popping up
129:16 - there so what did i do for that you know
129:19 - um
129:19 - something called media queries yes with
129:22 - a media query
129:23 - you can basically set
129:26 - and say like hey if your screen is this
129:29 - size between
129:30 - this line of pixels and this amount of
129:32 - pixels you
129:33 - should change certain classes or certain
129:36 - css properties of your class in this
129:39 - case
129:39 - your styled components okay so i'm gonna
129:43 - should i well it's a really long list
129:47 - i mean let's see here we can actually
129:49 - copy that list and probably let's create
129:50 - a css file
129:51 - let's copy and paste that list so people
129:53 - can see it and we'll be able to provide
129:54 - to you guys no problem later on don't
129:55 - worry about this
129:58 - so let's do it so let's go ahead and go
130:00 - ahead and create a main.css file
130:04 - here in components yes yes yes yes yes
130:06 - yes yes
130:09 - mainboard.css file okay
130:11 - so she's going to create a name with a
130:12 - css file right here right there
130:14 - and that's just going to go ahead and
130:15 - actually use media queries to add media
130:17 - queries to that
130:18 - so let's do import just go to import now
130:21 - import right right there
130:25 - main board main board dot
130:29 - css right here and then on this specific
130:31 - section inside my mobile site css
130:34 - oh sure they got ahold of media queries
130:35 - so look at this guys this is the media
130:37 - queries that we can use i guess we'll
130:38 - provide this to you in the github page
130:40 - holy [ __ ] that's a lot jesse
130:42 - yeah a lot but look here looks look here
130:45 - like line 23 remember when i said
130:47 - max with 1260 yes oh sorry this is mini
130:51 - width here but max weight is here
130:53 - match with 1260 and then i'm gonna give
130:55 - it a column count of
130:56 - five so when you stretch out your
131:00 - um browser until that amount of pixels
131:02 - is going to have a column count of five
131:04 - correct
131:04 - if you're gonna stretch it out more it's
131:06 - gonna have six so kind of like this
131:08 - right
131:08 - let's say this this right here so the
131:09 - min width for example is guys
131:11 - this right here is the min width so min
131:12 - width is kind of like main width
131:15 - i mean width it's pretty simple to
131:17 - understand it's basically
131:18 - the main width of this container of the
131:21 - whole box right of the whole
131:22 - of the whole um uh browser right that's
131:25 - the main weight
131:26 - max width right here is till how far
131:28 - will it go
131:29 - maybe it will go till this width right
131:32 - now basically from here
131:34 - to here right we'll get a we'll
131:38 - add the container width of 100 1500
131:40 - pixels
131:41 - and a column count of six right that's
131:43 - that's pretty much all it said so the
131:44 - column count will increase
131:46 - here for example for a max width of 1260
131:49 - and then a minimum 1260 and a max of
131:51 - 5 15 11 right we'll do a column count or
131:54 - five
131:55 - pretty simple as that right so we go
131:57 - ahead and check this out let's go and
131:58 - save this jesse you ready for this
132:01 - yes but we now we still have a default
132:04 - because we have put the max mainboard
132:06 - with now on a certain
132:08 - max weight remember what do you mean
132:12 - oh yeah yeah yeah yeah yeah yeah so
132:14 - let's go do this let's go ahead and do
132:15 - this
132:16 - so we'll do here let's do remove the max
132:18 - with
132:19 - wait where is it right there so let's
132:20 - remove this one okay yeah and let's
132:22 - remove the column count
132:24 - as well please
132:27 - and we don't want to remove the gap
132:29 - that's not going to work you know why
132:34 - i know why e
132:37 - we need to import or what
132:44 - we need to go ahead and actually add a
132:46 - class to this one
132:49 - oh that's what you wanted to do okay
132:52 - container see
132:52 - so yeah yeah this one we'll say class
132:56 - name
132:59 - boom mainboard container see
133:03 - let's go oh my god it looks so good
133:07 - let's go let's go oh
133:13 - look at this guys holy moly
133:15 - [Music]
133:20 - that looks sick how cool does that look
133:21 - guys let's get
133:23 - this video up to 800 likes for a 757.
133:27 - can you guys do 800 likes
133:29 - let's go smash that like button below
133:31 - guys we finished our application guys
133:34 - we will provide you with the github to
133:36 - this app again this is part one of part
133:38 - three parts okay
133:39 - but this is part one of three parts that
133:41 - we're going to be working on okay
133:43 - this is only just a functionality guy
133:44 - but jesse what other functionality are
133:46 - we going to be adding in the next few
133:48 - parts of this pinterest clone
133:50 - well like in a normal pinterest you know
133:53 - you can
133:53 - add pins to a board okay you can add
133:56 - pins to a board to
133:58 - newly created boards and we're going to
134:00 - be i'm
134:01 - i mean you want to see those boards
134:02 - right so we're going to be making a user
134:05 - profile
134:06 - super sick super super jagged
134:09 - a lot of data flow a lot of css html
134:13 - styles components
134:15 - okay like get ready guys this one is
134:17 - going to be
134:18 - one hell of a series okay so i'm so
134:22 - so proud of this one though that's gonna
134:23 - be so much fun so guys how sick is that
134:25 - drop in the comments below
134:26 - we are calling at six 767 likes can we
134:29 - get to
134:30 - to 800 let's go come on can we get to
134:32 - okay 100 likes guys
134:34 - i'm sure we can i know we can guys one
134:37 - less thing i will tell you okay really
134:38 - important guys so yeah like i said we
134:39 - finished starting first pitch is cloned
134:41 - it looks really cool if i for example
134:43 - now type in car look at this i can type
134:45 - in car
134:45 - and look at that it adds car right there
134:48 - boom boom right and randomizes it that's
134:50 - the whole point of pinterest right
134:52 - about the position and making it making
134:54 - it look like a really nice board right
134:56 - that's the whole point of this
134:57 - so that that's that's awesome now really
135:00 - quickly here
135:00 - before we we go we'll go ahead and
135:02 - finish with you guys
135:04 - again we have a react.js workshop and
135:07 - now reg.js challenge
135:09 - for you down below link in the
135:10 - description guys you want to check this
135:11 - out completely free
135:13 - you will learn how you will kickstart
135:15 - you will not only kickstart your
135:16 - your career as a rack just developer but
135:19 - you will also go ahead and build
135:21 - a slack loan free portfolio you will get
135:23 - your own portfolio by using react.js
135:25 - you will upload that portfolio online
135:28 - you will upload slackline online
135:30 - you will learn how to kickstart your
135:31 - career in the in terms of
135:33 - have become you will learn how to
135:34 - kickstart your career as a react.js
135:36 - developer
135:36 - you will learn how to make money as a
135:39 - reactor developer and you will learn how
135:40 - to become
135:41 - a six figure developer in general guys
135:43 - trust me it's so much fun we have
135:44 - thousands of people now at this point
135:46 - in this challenge join now it is going
135:49 - to be
135:50 - so so much fun the next few days again
135:53 - it's going to start february 22nd so
135:55 - join up because you will miss out
135:57 - and you don't want to miss out i'm sure
135:58 - you don't if you join
136:01 - hold on if you've joined the react just
136:03 - challenge let us know in the comments
136:05 - below
136:05 - and we'll shout you out so if you've
136:07 - joined to the redress challenge let us
136:08 - know in the comments below i will make
136:10 - sure
136:10 - to shout you out okay guys so jesse
136:14 - how was this built how would you enjoy
136:15 - this you enjoyed this oh man i enjoyed
136:17 - it so much i mean look at this
136:20 - and when you stretch it out it will get
136:22 - all of the other pins as well it's
136:24 - responsive it looks slick it has
136:26 - functionality to it the icons look good
136:29 - it's styled components like i mean
136:30 - what's there not to like
136:32 - yes it does i love love love it's so
136:34 - good i love this
136:35 - i hope you guys love this too give us
136:37 - some more likes
136:38 - smash that like button okay and join
136:41 - that five day react yes challenge guys
136:43 - you don't want to miss out
136:45 - next monday it's starting okay so be
136:47 - sure to subscribe
136:49 - or to register asap okay play guys
136:52 - please don't spend a chance guys we
136:54 - don't like that
136:55 - you know why let's keep it clean we're
136:57 - all here to learn let's be nice
136:59 - just be nice and learn what's the harm
137:01 - there's there's no
137:02 - there's nothing like guys just be nice
137:05 - learn
137:06 - if you don't like it then go like you
137:08 - know what i mean
137:09 - that's as simple as that if you don't
137:11 - like what you see it's free
137:12 - this is free guys free completely free
137:15 - you pay zero dollars you pay nothing
137:18 - right so again don't spam be nice
137:21 - because the more you spend months you
137:22 - only you only hurt yourself more because
137:24 - you get into that mindset you get to
137:25 - that state of you know being negative
137:27 - and being hurtful
137:28 - and that's only going to propel you into
137:30 - a very bad trajectory in life just in
137:32 - general
137:32 - so being positive being optimistic is a
137:34 - really important part of life
137:36 - right and now spreading so much
137:37 - negativity or so much you know
137:39 - negativity or spamming that only hurts
137:42 - more
137:43 - it hurts you more than anybody else
137:46 - trust me it hurts you more
137:47 - than anybody else because then you put
137:49 - negativity into your mind
137:51 - and then guess that gets to everything
137:52 - else that you're doing in your life
137:54 - might that be career
137:55 - may they be family might that be friends
137:57 - anything else
137:58 - and trust me that's not a life that you
138:00 - want to live believe me
138:01 - believe me so if you're trying to spam
138:04 - if you're trying to
138:05 - spread negativity if you're trying to
138:07 - say some stupid things
138:09 - no reason no reason okay
138:12 - this is a completely free for you if you
138:14 - don't like it just go
138:16 - just simple as that right no need for
138:19 - that so guys again
138:20 - thank you so much guys let's go ahead oh
138:22 - aisha's in the house hiya yisha so good
138:24 - to see
138:24 - you so good to see you that
138:28 - is amazing so aisha says jesse can you
138:30 - repeat
138:31 - again about the five day challenge
138:33 - [Laughter]
138:34 - aisha next monday we're starting a five
138:37 - day react
138:38 - yes challenge okay and we're going to be
138:40 - building the slack clone
138:42 - and it's going to be jacked okay you're
138:44 - going to be learning so much from nas
138:46 - and daniel amazing instructors at clever
138:48 - programmer
138:49 - okay and what else are they going to
138:51 - learn as you're going to learn
138:52 - some react yes some javascript but
138:54 - probably also
138:55 - redux how to make money as a developer
138:58 - how to start up your career
139:00 - i mean guys for real you don't want to
139:02 - be
139:03 - missing out on this and it's free okay
139:06 - it's f r e e it is free you guys
139:09 - all five days you can join it and you
139:12 - can enjoy it
139:13 - you can learn together with the
139:15 - community and meet a lot of new people
139:17 - too
139:17 - you know that's why we want you guys to
139:19 - be positive you know because
139:20 - this community is about learning
139:22 - together and being
139:23 - positive okay guys i always say life's a
139:26 - gift
139:27 - so that's why you got to take it as it
139:29 - is and make the best out of it yes you
139:31 - know
139:31 - that's basically what it is so aisha i
139:34 - hope that answers your question
139:35 - please come around we love seeing you
139:38 - there and of course
139:39 - everybody else too very very welcome i
139:42 - hope you guys loved this pinterest clone
139:45 - by the way
139:46 - that was so much fun can we get some
139:47 - more likes that's when we get some guys
139:49 - so we're currently 784 likes let's get
139:51 - it to 20 it's
139:52 - 16 more likes just 16 60 more
139:56 - and when we get to 800 then we say we're
139:58 - done so that's it
139:59 - and we got a special yeah and then
140:00 - what's say we're done then and then we
140:02 - celebrate and then we all go home
140:04 - so everybody hit the like button
140:06 - subscribe for more videos like this okay
140:07 - let's get this to
140:08 - 800 we are currently at 7.85 let's go
140:12 - 800 guys so close so close let's get to
140:16 - 800 guys trust me
140:17 - you want to create this it's just as
140:18 - simple as just you just scroll down you
140:20 - use the button click
140:21 - cursor pointer you scroll down that's it
140:23 - now guys look at this
140:24 - so many students from pwj by the way in
140:26 - the house thank you funny thank you joe
140:29 - for coming by amazing oh man
140:33 - that's so cool though 791 guys only nine
140:35 - more to go
140:36 - come on and guys like i said i'm very
140:39 - proud of we just did right this is an
140:41 - amazing picture school i cannot wait for
140:43 - us to to
140:44 - build more on top of this and see what
140:45 - we can take out of this right
140:47 - it's pretty insane pretty insane so let
140:49 - me see we're calling seven likes
140:51 - 78 798 likes hold on 7.98 come on come
140:53 - on come on 797 come on
140:56 - only one more to go 800 likes let's go
141:00 - [Music]
141:02 - [Applause]
141:05 - thank you guys you guys are wrapping
141:06 - thank you so much thank you so much all
141:08 - right guys
141:08 - have yourself an amazing day we will see
141:11 - you
141:12 - in the next video chill out
141:15 - bye-bye love you all
141:33 - bro

Cleaned transcript:

what's up everybody my name is nas and i'm here with jesse emmy and we are here to build a pinterest code that looks just like this look at this amazing amazing creation right this is an actual picture that you'll be making today where look at this you will you have this amazing grid of layout okay you have these amazing buttons following homepage right look at that oh let's go the homepage right the notifications the chat all this these are actual buttons and all this for example check this out you can actually search let's say research for a car let's say i type in car look at that now you have cars that pop up look at this right here right here right they pop up in like random order because that's how pinterest works it's such a such it's such a fun little project from not little an amazing project going to make look at this look at this it's so cool jesse how pumped are you for this jesse let's go i'm super po for this guys i mean pinterest is one of my favorite apps i think it's definitely the second top in my top three of apps that i use on a daily basis okay so what you can do with pinterest it is basically one big digital mood board okay you can collect all your pins of interest yes pun intended yes yes and also you can collect your ideas so not only do i use it for you know to look at cute dog pictures but also to find resources on code personal development blockchain whatever i feel like you know getting to know more about yes of course and of course i say you guys coming in welcome welcome welcome so awesome to have you here we are here to be able to build a picturesque that looks just like this this is going to be a fun one right we are going to make a bunny from scratch using react gs and using of course using right using style components as well so check this out right in here we'll be building a react gs application through here and we'll be using style components of course and other other multiple multiple uh multiple uh technologies now granted one little thing one little thing this will be split up into multiple parts okay one two three parts for the first part we're going to be building is just a basic layout just how you see here that's going to be the part for this one then we're going to add crazy more functionality and crazy more different things so you can put it on your portfolio and actually potentially get a job from it how sick is that huh that's pretty sick that's pretty sick all right guys we're gonna get started pretty much right away at this point so here's what we have okay jesse what are the things i need to do to start up with a application like this tell me well the first stop you always stop the first step you always do is you're going to use the command mpa mpx create react app yes okay so that's always the first step to start your react app up in your um on your computer okay granted that you have what installed nas npm and node right correct correct okay so you want to go ahead sorry just go ahead yeah so this is the first step you do guys right there so mp square reactor is the first thing you're going to do on your machine on your local machine right to start up a project list of course you need npm for this so make sure you have that portion installed if you don't go to npm.js i think diet.org or just on type in npm.google.com so that's going to be really really good and that's pretty much it once you've done that you will have a project looks just just like this right here just like that guys and we are currently we have we are at 300 likes let's go people thank you so much let's like this video together so it's likely to get it to more people because you know you know you do have to can be sometimes funky just let's get up to more people so that we can go ahead and show them guys we love making these videos for you so please let us know if you like them too okay so smash that like button as always as always okay and one really important bit guys we are we have a react js challenge right for you starting february 22nd february 22nd that is correct completely free free like literally free no charge at all you will be building what are they going to be buildings jesse um slack clone clone yeah but it's really jacked it's so easy like you don't want to miss out guys five day react yes challenge starting next monday okay so the whole week you're gonna be learning amazing stuff from the one and only nazdamanski and daniel i believe and daniel correct correct so go ahead and join click the link below down below in the description it's going to be a regular challenge completely free no questions asked right you'll be part of an amazing community you will building react gs uh this lack loan with react gs uh with components with style components with redux and so much more that's gonna be crazy three five days five days let's don't want to miss out anyways all right you know what let's just get started but so all right jesse let's go ahead and get started right what is the first thing what is the first thing we need to do so we have our goal is to currently get to this application like this right here okay that's our goal right so this is so maybe you can explain a little bit nas what feature we're going to be building today correct so the feature we're going to be building is what actually you tell me oh okay well as you can see on the left side um we are first going to be building a header correct okay guys it's going to be a header with styled components super exciting so stay tuned okay then the second component we're going to be building is the main board with the pins right here this may be correct yes exactly and just like the original pinterest what we're going to do is we're going to make the search bar we're going to add a functionality to it that well when you look for cars you also get the pictures of cars in the main board correct so basically you're going to get get pictures based get pictures based on based on search right here yeah and we're going to get those pictures from unsplash so who's excited that's going to be a fun one answer if you don't know it's a completely free just a way to find images and they have an api and we'll teach you exactly how to use the api because that's how we get images like if i go ahead and search for something let's say what can i search for um what can i search for bali guys where's bali oh look at that there it is it just showed up right oh whoop there it is oh man i'm longing so much for the beach right now to be honest but unfortunately we can right now so cool but you can look up everything guys so on splash is amazing let's get into it so guys that's what we're going to be building today so after you you went ahead and you did your what you did your uh what's it called um nps correct app let's go ahead and do npm install and uh not actually npm start actually to go ahead and start our application npm start let's go ahead and do that this can be a fun one i'm going to say yes because i have another application called the minus don't worry about that most likely you will not have that kind of question on the right hand side don't worry about that guys you'll be all good okay oh oh what is this adam is this is this a new ampex redirect app holy moly uh yeah well this is with a redux layer oh my oh yeah cause we're going to create redux guys oh yes yes yes yes okay but that's gonna be in the second part guys so don't worry about that yet cool so we got that portion okay now of course to get started the first thing to do is we're going to clean do a little bit of a clean up let's go ahead and remove this kind of stuff right here let's remove all this counter stuff we don't really need that correct awesome down this span right here let's go ahead and remove this also let's go ahead and remove some of the things that we have so let's go back to here this set up that test stuff don't really need this as well and i think we don't need a service worker do we not ah actually know what we can leave there for now that's fine no problem yeah everything with the word testing it that's what you're gonna be cleaning up guys plus the logo.svg we don't need that anymore um nas already removed that in the app.js okay and that's pretty much it we also wanna no we also wanna add something to app.css okay what is it so we want everything to be at the margin zero nice so to have our app really you know tight and clean and having not to deal with any default margins okay and again and the reason why we do this this right here so this star means everything by the way just so you guys know this star means everything so target everything inside inside our html right right so if we go ahead and do that we'll say margin zero and the reason why we say margin zero is actually for this simple solution it's because right i'm not margin top margin zero is because of the fact that right all these h1s h2s and you know and h3s they have margin padding come that come prebuilt with them well for us we don't need that right so we kind of just want to start from a clean slate that's how we do that okay cool all right so we got that app.js that's fine and the css is clean all right what's up next what's up next well you can go to app okay here and then maybe change the first class into app okay so let's go ahead and do that yeah it's the first and i would just to show you guys you know what happens when you edit this one you can just put there you can say header okay wait it's not closing oh it is closing yes it is and then we're gonna add a main board yes correct so you can see here the header right here it's right there the header the main board is gonna be it's going to be right there so we're going to create biscuit guys two components two components we need to create in this one okay beautiful all right keep going yeah so do you want um so i like to work first when i've installed all of the packages but or do you just want to do it on the go no just keep going no we'll do on the go on the go yes we'll do that okay so let's start making the header okay so show them what the header of the original one looks like and what by the way thank you so much for the five indian i'm not sure what's it rupees rupees donation a fossa i appreciate you so much as always says hey guys why are you using style components instead of regular css or sas only main reason is because of the fact that style components have become very popular in um and kind of the real world and the workplace i myself have used style components whenever i've been working with react gs and i've been you know so i had the job inside components and so it's really important for you guys to learn as well cool but thank you all right keep going jesse sorry so no problem so we have the header here so we're going to be first building the header okay so now that we see it on the left side let's just make the header into a component so let's go to the source folder folder folder make a new folder component folder let's go ahead go ahead and click so we'll make it right here right there and then we have we're going to make of course the header component okay that's our first component okay so if you guys have installed the extension es6 i believe written by one person called dsna snyder or something it's going to be super easy to um make a functional component you just do rfce tab and boom exactly there it is an extension extension is pretty simple right the extension is if you go kind of go to the extension section here it's this one right here es7 react right here i think it's called react uh what it's called ef7 right there right there es7 react redux react code snippet so just go ahead and install those and you pretty much will be will be all good okay all right cool awesome thank you jesse now that you see it i changed the text a little bit but now it's not changed yet no because why we still need to import it into our parent component in our app.js okay so let's import it here let's make this into a component capital letters components are always capital letters guys always always and here import but it's not in the same folder as app.js can you tell so well where is module coming from so it's going to be import a header from and i think components components that's it right header component slash header yeah component there we go that's pretty much it that's it right because we're going to go again we're going to go into components folder and i'm going to down go down to the header.js folder okay cool awesome let's keep going so now you can see it on the left it changed from header to hello pinterest headers okay so one thing cool thing we're going to be doing today guys is we're going to be using styled components as we said and what are the benefits of stealth components nas well there's many benefits well for one the benefit of style component is the fact that you can go ahead and actually basically include variables so you can include variables into style components so for example let's say i had a variable here let's say loading right you can actually for example i can actually do something like this for example let me see let's just think about this okay let's say that this right here the header is a style component let's just say that okay i can say for example loading is equal to true and then my css can actually change depending if loading is true or not right so that's a really cool part and so that's why that's why stock components are so cool because obviously in sas like in stats or css i cannot pass in variables but with style components because it works with right javascript because with javascript guys we can do that so and you'll see exactly how that works later on as we go on and what i find so cool is that we don't need the css files anymore yes of course yes we don't need any separate css files anymore so it's like you're writing css specifically for that component within your file correct okay so that's going to be so if we go ahead go to the gs let's go ahead and go into that okay so what are we going to do into that jesse well let's start with making a wrapper okay okay so let's make a wrapper and you'll see on the and the wrapper is re it's really like a wrapper right so it's really oops it should not it's really like so that's why you see twice this right here this whole thing right here okay just you guys know okay cool continue on jesse yep and why don't you show us yeah now it's not the fine because i saved it by accident but if you go to our original nas can you show us the sections of the header the sections of the header so the header sections are pretty simple okay well the sessions the header we have what we have number one logo we have the logo okay and then we have the logo we have also the home page button right here okay then we also have the following button right here okay then we also have the kind of the in this input okay this is we call it a search wrapper and then we have all these different different buttons you know like the like this icon this icon this icon this second and then and pretty much that's it right that's it it's super easy guys once you see it your mind will be blown i will tell you that so let's first start with the logo wrapper okay i'm going to start typing okay right there good awesome as you can see right here she's adding the logo wrapper in here and again right it says the represent defined because we have not created that style component just yet so you have to give it one second right so you can see we have the wrapper that's going to wrap everything that's in here right everything that's in here that's gonna be the wrapper correct just like this amazing awesome and then that's pretty much it and then now we're working on this logo wrapper you can see and now next we're going to work on this homepage button right there okay and now we're also working on this following button right here which is going to be here right here okay makes sense cool awesome but wait guys we are 372 likes let's get this 400 to 400 likes you guys rock as always thank you so so much let's go amazing okay all right continue on so the search bar wrapper that's awesome you can see just typing which is basically just creating all these different aspects of like uh these components right these style components just just for now just kind of as placeholders for now okay just fine yeah just to give you guys a good overview of what we are exactly doing here you know so go from having a top to bottom approach let's say so like just like now i said before right we're first doing if you look here at the code we have the logo then we have the home page button the following button search wrapper search bar correct and the icons were correct okay so as you can see oh awesome drawing as you can see most there are one two three four five six icons that we use from whatnots the six icons that we use actually from something called material ui guys it's materialized so material is going to contain all the icons so what you do is wait to actually install material i so let's go ahead and do that right now so we can do material ui right there and if you go to material right right here you can see that to install it's pretty simple just simply as npm install material ui core so let's go ahead and copy that okay and we'll paste that into into let's go ahead and click click create a new uh terminal we'll do command v or paste for yours for your windows npm install material core that's pretty much it so let's go ahead and wait for that for one second once the install material ui core there's one more thing to install and that is the actual material ui icons and that's as simple as just simply saying i think npm install util ui so let's go ahead and do that and just simply set up core we simply say icons icons that's pretty much it that's all you got to do guys that's all you have to do right so icons are being installed cool cool cool awesome and so now if i go ahead and go let me let's go check it out if i go material with you high icons i just ate bless you thank you material icons right there so let's say we want to what is the first icon we want for example jesse so of course the famous pinterest icon you actually have that yeah so there you look up pinterest no way hold on there it is there it is it is so amazing yeah okay never mind and as you can see on what nas is selecting right now is that is how you import this icon at the top of your code that's how easy it is guys so you already have installed the icons library yes you know and then when you put this at the top of your code you can just use the pinterest icon like this on line nine like it's just a component correct and so once we import that now we go ahead and use it just like this right here so let's go ahead and actually see how this looks like can we without creating all these other style components could we create our first style component and actually see how it looks like jesse yeah so you want me just to start um yes yes yes want me to start okay so let's first let's first style the wrapper okay so install components this is what you do guys you make a variable here wrapper and that is what's here on line six okay then you go and give it you're gonna do whoops help not not on line six but excuse me what happened no no i got it i got it i calmed it out i'll comment i'll just see i counted up oh i don't want you to be to have to have to create all these just all these style buttons and all in one go okay oh my god yes yes yes that's good thinking okay so style div back ticks okay guys back decks and we're gonna give it a display flex so everything is nicely horizontally aligned yes whoop wait let me type correctly and again the style there means you're creating a div guys that's how you that's how you create divs in style components okay we give a display flex that way so we can go ahead and align these up very nicely together okay and we give the item center to make sure that everything is in the center right here okay beautiful and we give it a 56 pixels so this whole wrapper the height is going to be 56 pixels so this whole wrap right here boom right there okay we're also going to give it a small padding right here 12 pixels four pixels and again as you guys know this means top right bottom left right trouble so keep this in mind whenever you're doing this kind of stuff it's really cool right you know this kind of stuff just keep in mind the key word trouble right there trouble troubler trouble joe see trouble see top right bottom left it's a really really cool way to keep track of this kind of stuff okay really cool way i awesome girl awesome so we have a background color white and the color black so what that's with that being here let's go ahead and now create the logo wrapper to make sure that we can actually see it so because right now currently right now if we go ahead and save this we have the local wrapper is not defined icon button defined and style is not defined as well now yeah let me import these at the top go ahead icon button nice so do you remember what the icon button is actually don't know is it because the button to be able to click on is that what it is like this no yeah it's that bubble effect exactly yeah it's that bubble effect when you hover over it that's what it is so yeah wait we've just reached 420 412 likes let's go guys thank you so much appreciate you as as as always guys go ahead go ahead and smash the like button for us help us out to get this out to more people so the deal can be coming together let's make this the best [ __ ] coding academy coding universe out there we want to be up there so when you think of coding we are there to provide you that knowledge all right that's what we're here to do all right let's keep going let's go okay so logo wrapper okay yes logo wrapper and the logo wrapper well it says what it is right it is wrapping the logo correct local wrapper but in this case we're using that actually to style pinterest icon okay go ahead because it has a really specific color right yes like this fiery red so guys when you want to style something of material ui you have to go into the documentation right and pinterest icon is actually a socalled svg icon so in order to target this svg icon you need to reference to a certain class you know which is called like this mui svg icon dash root okay and we'll show you why i'll show you why why that's the case in a second as we go into the inspect element so let's go keep going so i'm just gonna pop this one in here so color is this fiery red it has a font size of 32 pixels so it's a little bit bigger than what's showing up right now and when you hover over it it gets you that little hand okay the cursor pointer that's the hand let's keep going jesse so that's the logo wrapper um and i think that's pretty much when we saved this we're able to see how it looks like i think let's see let's see we have style okay so one thing is style is not defined so why is that because we still need to import styles styled from it's called style wait is it style dash components yep styled way styled dash component right exactly yes just making sure i'm right just okay module cannot result can i result it's not called what is it called i forgot but did you already install it oh it didn't install style components hold on no no no npmi so look at this guys so styling components let's go and install that first style component right there yeah style components good it's not components go ahead do uh not here let's go ahead and do that inside the npm right there see yeah npm install right there stay styled components so let's go ahead and do the right here the bottom cool and install save style component that's gonna be what we want to do it's installed okay now it's so good let's go ahead and save this up save this let's see boom right there hey let's go that's what i'm talking about nice beautiful okay amazing amazing awesome guys wait guys one more thing i want to say to you guys if you are interested in learning reg gs and becoming a javascript developer yeah developer we have launched the best of you as you know we have the mo the best course out there on the planet period it is one of the best courses out there on the planet called profit with javascript link is in below go ahead and check it out you get to build crazy crazy applications like slack like facebook get to create applications like a gmail clone twitter clone and so much more you get to be part of amazing community and you get to have coaching calls with me with jesse and so many other teachers on a weekly basis for a lifetime for a lifetime so if you're interested link below okay let's keep going jesse whoo okay so what should we do next well make the home page buttons okay buttons i think yeah let's do it let's do it so like button yeah so actually the buttons are links references to other pages right but we'll make those pages later but it's just an adren href okay so we're gonna do this and we're gonna oop everything is red close this one off here nice and then we're going to do the same thing with the following okay following button yeah you see these are just just buttons and there's all they're simply doing is they're simply redirecting you right now currently to the homepage for now for now just the whole page so if i go ahead and save this let me go ahead and save this save this let's go ahead and take okay oh homepage button undefined boom let's go gotta keep up gotta keep up okay so let's start defining those things guys so here home pitch button and i feel like i did this a little bit in a redundant way but maybe you can improve it later so let's see let's first start out with this you know when it comes to coding you always just want to start out with something that works and from there on you can always refactor later okay guys so don't worry too much about it so a height display flex of course height of 48 pixel min width of 103 pixel line items center that's the center right there just flat content horizontally as well and the water release is going to give us that really nice effect right here this really nice kind of concave shape right here that's going to be what the border radius is for guys okay that's going to be the really cool part okay awesome we have the cursor pointing amazing sweet sweet sweet okay and then it's going to have a background color like the home page button is going to have like it's black but it's not totally black you know what i mean what is it no it's not black rgb okay okay let's see jesse let's see what you got jesse let's see what you got okay okay so that's just the button okay but within styled components there's something we can do we can target just like within css we can target certain elements within no i would just do it like this but no way oh yeah sure squeezy okay all right so upon the link you know upon a link you know an href always has that ugly word that's true very ugly decoration so i don't want to i don't want to ever ever want to see that you know so and let's give it a font weight of 700 okay 700 700 700 yo 700 yo so let's check out the under the following yeah that's fine i will go and count this part out don't worry about it but the phone okay wait jesse don't delete this wait just i didn't i didn't delete it okay let's go ahead and do that oh it's gonna save this oh oh [ __ ] look at that that's fine the whole page button we have what it says follow following button following button is not defined even though we have the following button here let's try our time no look at this guys one cool thing that you guys need to understand here is that you see how you see how these display flex these are starting to align very nice horizontally you see this right here look at that because why because of display flex right without display flex if i right click on this look at this and if i went ahead and if i remove this playface on this specific portion look at this if i did display fact now remove this oh my god boom boom right there see it becomes weird from top to bottom it's [ __ ] up it's just it just becomes [ __ ] up okay um hopefully youtube does not ban us for that messy it's it is this that will make it look very messy look we had the home page button now let's we'll go ahead and work on the following button right here oh i just let's go ahead and see how that works out yeah so the following button is actually has the same shape um but it has a different background color and on the hover it also works differently so constant following button tactics i always find it so funny this one has backticks i know it's weird right i know it's a yeah it's so weird so weird but also so fun at the same time so guys top thing is the same as the homepage button so i'm just gonna pop that into here but background color is different of course so we're gonna make this one white okay beautiful beautiful beautiful now here's here's a really cool part so let's go ahead and save this jesse awesome let's go ahead and save that yeah okay so save that save this let's see if this works out let's see let's see let's see oh this tax declaration is just no bueno no one so what do you do well i'm saying the tax declaration i'm saying you see how you see we haven't targeted that href yeah this is what we're talking about guys in order to remove that hideous hideous text decoration we need to go ahead and target it in here so let's go ahead and do that and this is where it's actually style components are very very very similar to something like sas right because you can have you can nest css classes inside css classes that's the big part about style components that you know we can do so you can see it check this out as jess is saying she went ahead and she nested the a tag meaning the a tag within the following button is going to be the one that's targeted let me give this test equation a color block and a font weight of 700. it's as simple as that that's the really cool part about this okay yeah and you want me to show the hover one second so let's go ahead and save this okay oh so that's there okay let's go ahead and see the power state because when i hover over this you see this right here and i hover this i should be able to hover over this and have this type of functionality right here so let's go ahead and see this yeah so but usually guys when you want to hover on something in css you target first the element right and then using colon hover but in this case in the style component you just do this hover yeah okay good good good good good good good good then we have a special color like a light grayish i'm going to save it now let's go so save that let's see oh let's go jesse okay so one really cool thing when i add to this is actually really awesome so look at this you see the really cool part about style components guys is that again we're nesting here however we're nesting the etec and so forth but another thing you can ask is actually the buttons themselves you can see how this one has the 48 pixels and so does this one this one has 123 faces and so does this one and this one is this one and so this is this one as well as this one so they are both very similar there's some the only thing the only thing they have difference is this background color so what can we do to remove this repeatedness we'll check this out here's what we can do i can actually create a style component like this i can say const right there look at this home button for example buttons equals style.div okay so watch watch it with me okay style it didn't do with me of course okay and i'm going to create a style that div like so okay and this is going to have everything that's in common so i will i will say for example although this right it's the same correct all this is the same so display flex 48 pixel 123 pixels center center center yeah so yeah i will go ahead and copy this and i'll give it to here look at this boom right there all right yeah enter this out i will save that okay now of course nothing's going to change and why but pretty simple right but now i can go ahead and do this i can remove this look at this actually let's go ahead can we should we put cursor point down here too yeah we should yeah cursor pointer awesome so it's going to remove this crystal pointer okay and it's going to remove this portion right here as well and look at this right now it's about to go really bad so right now yeah i know it's hold on hold on hold on hold on i got you oh lord so here's what you want to do i'm going to do instead of staying saying style.dip i will say style and i will pass in the home buttons like this look at this so i'm going to save that now oh look at that so what just happened is inherited this home button style and applied it to here and then here is where the changes come in right this makes its own changes for this specific homepage button but inherits this right here homepage button that is the sick part okay same thing goes for this look at this i can say styled home page home page buttons boom right there save that okay uh wait button or home buttons how about this my bad guys hold your horses it's all good not in the world don't worry okay so look home buttons i saved that and look at this now we have everything we wanted boom boom right there look i can hover this it's the same buttons and there we go oh that's so clean so clean right i'm wondering though so you don't need to in that case the home buttons you don't need to um show that at the top this right here yeah what do you mean you have to show this at the top you still have to show that to the top yes correct you still have to be this has to be there yes at the top um where oh header oh you mean this code no no no it does not no no it does not so see guys how clean that is you don't need to do that so you can just in your css you can just remove redundant code like this yeah it's just basically removing redundant css right you can't you can't can't do that in css unfortunately but in some components yes you can and that's why we're teaching you so if you're saying why stock opponents now you know now you know now you know all right awesome all right keep going whoa nice so the next thing what should we do icons or search bar okay let's go ahead and do the search bar yeah search bar okay search bar so can you show the shares bar in the original one there's a search bar right here it looks kind of like this right here it looks pretty epic right there there's a search bar right there yeah it's really click it has this icon in it of course and when you stretch out when you stretch your screen out the search bar will come with it yes correct correct correct oh really oh really okay hold on everybody hold your horses oh let's go that's a nice job yeah yeah yeah yeah yeah yeah nice job okay good so search wrapper search rapper the search up that she's going to be making is biscuit at this point is this one so i contract her i will go ahead and actually count it out for her so that she doesn't have to worry about that okay right thank you and the social press this one right here this is what she's making right there okay let's keep going so again guys we want to have that nice material ui icon within the icon button by the way um so i want to create an icon button right here we're going to create a search search a search icon so the search tag is going to be this one right here that's gonna be the search icon okay yeah okay so you do have to be careful that you really need to distinguish between the components or the icons that you're getting from material i or you're making them for style components okay always always always always always just a wrapper that gives you like this whole thing of like when i click on it see how it has that really nice effect that's like a button guys okay yes yes so this we're going to be making the form okay and within the form we're going to be making an output okay so the output for now it's just gonna be text nice nice nice text okay text and let's keep it for this like this right now okay so that's just the text right now okay cool makes sense makes sense and then we're also going to be using a button but as you can see in the original there is no button what no buttons well the thing is though do you have you ever been on a website where you put in something and i think a lot of people don't even think about this anymore right but they fill in something and then they just press enter and it just works their input is being submitted even though there's no button yeah right so we're gonna be imitating that functionality exactly okay guys so we're gonna show you how it's done okay so what was i doing searching search wrapper okay so we're gonna make the search wrapper search wrapper um and the search wrapper we're going to give it not so much we're just going to give it um a flex one oh style.div okay okay flex so what does that mean what does flip flex will mean jesse well it will take up all the space it gets beautiful take up all the space okay because because again we wanted this whole thing we want this whole thing of course right to stretch right so if we give the effects of one that means the the weight of this specific deal is one the highest of everything so it's going to stretch as much as it possibly can you know amongst everything else that's what that's one thing to consider definitely definitely so we're gonna be making the search bar wrapper okay so as you can see guys this search bar wrapper is actually that gray area which is curved so it's all this area right here all this crate area yeah oh okay yeah yeah we're gonna make that ourselves so how keep going so it's gonna be a background color of efcf ef beautiful that's gonna be different color let's play display flex and let's make sure it's gonna go ahead and align these like items like this that's the whole goal of this okay yep and in order for it to stretch out and i think i learned this from you we're going to give it a height of 100 percent nice nice nice nice border radius is going to be heavy it's going to be 50 pixels so it looks really curved carbon curve to give it this curvature right here right there yeah and we're going to give it a border of none because we don't want we want it to look really slick and clean right beautiful yes so and then we're going to give it a padding on the left because that icon we don't want it to be touching on the left side okay so that's it but we still need to target certain elements because if you look at the top here guys we have so we gave the search wrapper we gave it to flex one right search bar wrapper we gave it the background and everything and within that we have the search icon but we also have a form here and a form within the input and the button so let's target those things right now okay so here form and i'm gonna give the form also a display flex so it stays within that search bar wrapper okay beautiful flex one and see what this is changing it's changing you see how she's changing the form it's starting to take shape right here guys you see that right there beautiful so within the form we want to target the input okay so i think maybe we don't even need to do it like this but it's just to be really specific that the input is within the form okay i like that way yeah yeah so we're going to make that transparent because we don't want that to actually show you see the important thing from like white right you want to like basically transparent as you can see here right there as you look into it okay and we're going to give it a font size of 16 pixels as well because well we still want to be able to read stuff as i type right here you see now it's 16 pixels and it has a margin level 5 pixels and so forth beautiful beautiful and now you still see that if you maybe go to the right now you will still see that button we don't want that button to show up but we do want to use the functionality of that button so what do you think about that i feel like i saw michael right now i love it excuse me i feel like i'm so awkward right now i love it so what do you feel about how do you feel about the blue border yeah i hate it i [ __ ] hit it so here so right border to me this border i know who who made this who created this i don't know why they made this what were you thinking when you made this okay i'm not saying to you jesse i'm saying to the person who made it right right right right when i go ahead and inspect them on this for example you guys can see that we have a form right here this input right here and if i focus on this form if i do four stay focus uh if i do four state maybe in that case let's see visit it or focus within focus or stop active no i don't know why the force doesn't work in here but you can see we have an outline offset right here right right here let me do it one more time right there you see this outline offset right there this means right there see i don't disappear real quickly but that means there's an outline so if i go ahead and do input focus online none maybe we do not need actually active or jesse this stuff now we don't need that i really don't want it to show up can you tell really hate it and you can see now if i go ahead and just type right here see no more does not show up anymore guys that's really cool part about this okay let's go ahead and keep going jesse yeah so actually we only have the icons wrapper which is and within that we have a few icons from material ui and again we need to do we need to do icon button let's do that one first the icon button this one this one this one this this one right here this one what what do we need to do i need to add it don't we oh sorry yeah you're you're right we need to add it we need to import it exactly search icon then make note of 500 likes let's go let's get to 600 likes guys help us out that is what i'm talking about you guys are amazing oh oh oh oh oh 600 likes you guys are the best and just as you guys know right we have a reaction challenge coming up five day break just challenge completely free link is in the value you will be building the most epic slack clone with live functionality with style components with redux with so many different things you cannot explain how with login and so much more guys go ahead join the by director charles it is completely free it is great for beginners so if you have zero id on what javascript is or zero data i would react gss it is okay this is what we built it for so go ahead click the link below and check it out all right keep going jesse hope to see you there guys be there be there or be square so icons rapper okay let's go by the way search icon has been imported so it should not be complaining anymore if correct oh let's go so beautiful guys how cool is that drop it in the comments if that looks amazing at this point we're just getting started here guys started let's get the party started let's get this party started okay so the last thing i have is this icons wrapper that's the last time you have for this header okay once we've done that then we went to the pins okay let's go ahead and save that beautiful definitely definitely so for this let me start this time with the imports because then it's also easier to see what you need from the material ui there's four icons right it is a notification icon a face icon the little face text sms icon and the keyboard arrow down icon okay so all of these again need to be wrapped in what they all need to be wrapped in icons wrapper and an icon i get this right a button yes hover hover over so here boom let's go that's a lot of text that's good it's a lot of text but it's not difficult to read okay so each icon is wrapped in side of the um icon button okay i like how so that's why and then i'm typing at the same time that just like dude teamwork teamwork makes the dream work guys always he always makes the change is what makes everything work okay right you got no team then i don't know let's see you can get far solo but together you get further a lot further right cool awesome so let's see what do i call so look at that look at what jess is doing here okay we have an icon button right here notifications icon right there right so that's that's the whole call now of course she's wrapping inside the icon button to give it that little kind of ripple effect so when i go ahead and click on this it gives it the ripple effect you can see right here right there right there good creates a ripple effect and again just copy and paste this text sms icon face icon keyboard arrow icon and all those are actually imported inside here right there she just went ahead and imported from material ui okay and again the way you search for this is pretty simple guys all you have to do is go to material ui okay search for example whatever you want let's go and say let's say you want to do search right click on search and then you see the search icon click on the search icon boom and this right away tells you what you need to import like like it doesn't get [ __ ] easier it just doesn't easier but what you need to pay attention to guys is as you can see it says from material ui slash icons so sometimes it's icons and sometimes it's core so pay attention to that okay yes yes yes otherwise let's go ahead and save this let's see how this works out is this gonna work no we have to create the icons wrapper style div first style component first key const icons wrapper and we don't need to do anything with this no nothing oh no no no no not a kaput okay oh wait [ __ ] hold on hold on search rapper wait icon's wrapper is not defined this type of this happens i just need to refresh this paste sometimes refresh yeah beautiful so we went ahead and we finished this portion right here guys we have ourselves the header the home page the following button we have ourselves the search wrapper and all these other icons which just look amazing which i just love personally right the no the next thing we're going to work on so let's go ahead and work on part two part two is gonna be what is part two of this create one we're gonna be making the main board guys we're gonna be making the main board right here okay create more and this is going to be you're going to contain to contain contain the chat the pins that's it and we're going to use the later on we're going to use unsplash this as well so create the main board to contain the pins all right all right let's start it up part two let's go let's go let's go so just as the header guys i'm gonna make another file here within okay and again i'm gonna use rfce tab and i'm gonna make a mainboard component here okay so of course just like previously i need to import it here and i'm going to say main board wait wait you are in the attitude yes oh right there i see you so yeah and i'm gonna import it here okay import right there so we have the import main board from components slash main board just like the header guys i hope that did not go too fast but just like the header you're just gonna make a main board file here within your components and just make a functional component here right easy easy right here guys man with the gs once you create the main rds let's go ahead and do rfce to go ahead and create a react app like this and then once you have that you're pretty much set for life that's it see right there boom voila yeah and if you type anything in hasad here this is called the main board right let's save this we have mainboard right so right there that's pretty much what you have okay and then next up let's go ahead and go on to the next one yeah let's go on to the next one so let's style this main board first let's see it okay oh no wait wait wait wait let's make what we're going to do this in style components right yeah of course so what do you want to call the first rapper here just rapper yes that's called rapper of course always rap always always style component always wrappers no i just just i just like it i just like it makes me a bit hungry sort of wrapper sandwich sandwich burritos and then what should we call this mainboard or just container since this name is also really generic let's go let's call the container correct go ahead container okay container okay container and now what we need to do is we now we need to create different style components for those okay and again these contains we right whoops right there so what do we what is this right here the wrapper is going to be the wrapper for the main so here's the thing just just so you see exactly what we're trying to do here okay look the wrapper is this wrapper right here right this is the full width 100 the container is the container that contains the icons themselves right so that's where where that comes from right that's the really cool part about that so that's where again the reason why we're doing that is because we need to be able to center this horizontally like this because we want spacing in here right that's how we create another container within this wrapper okay makes sense comprende i hope it's comprende all right comprenda all right guys let's keep going this is awesome oh i'm having fun i just want a shoe i'm having fun yeah me too lots of fun all right let's go ahead and do it so i just want to show the container within the wrapper nice so it's going to do so let's see this background color pink okay wrapper that style the devil's going to save this oh we also need to import style components here as always always whoop like this i believe beautiful yeah stack components okay let's go ahead and save that okay now of course right now nothing's really happening the reason why is that the reason why is because this wrapper this wrapper right here does not have a height so we need to give it an actual height right so for this wrapper to give it a height so if i go ahead for example if i inspect them on this one right let's go ahead and inspect that one on this uh dvd root the class app right there this is right here this is our header this is our main board right you can see our main board oh [ __ ] something's really loud hello hello yeah yeah we got you we got you if you see if you say this member let's give it a height for example a height of let's say 300 pixels okay right there okay now this is 300 pixels for this one let's give it a height of also 300 pixels right there you see so that right there is going to be what this is the wrapper is the pink and the container is is green now right now we don't see any pink and why is that pretty simple because we need to go ahead and give the container a width let's say of 80 percent so for example how jesse is doing right here i'll go ahead and save this you see right there boom voila now we have the wrapper which is pink right here that's this right the background color green that's the container is going to contain the pins guys right it would give it a width of 80 percent okay that's why we have those make sense compressing all right let's move on yeah so just to add some stuff i just wanted to make this really visual for you guys you know because that's very important when you start working with this and styled component of course so but just let's make this um white because yeah that's a regular color okay white and um you want to keep the height i want to give it the width of 100 for the wrapper good nice and a height of 100 100 but i also don't want the pins to be attached to the header you know so what i'm going to give it is a margin top of 50 pixels because when the plants come in right they're going to come in half they're going to come in like this like the green area we just had yeah so we don't want the paints to be here right all the way here we want it to be margin task we want to push it down just a little bit as well go ahead exactly all right that's next up so for now this is good for css from the main board but what we want to show up in the main board for now is actually one pin okay guys before we're just gonna make it really simple because when it comes to coating okay you always need to break up your big problem into small chunks so we're gonna not gonna be making all of the pins now we're just gonna make one pin now okay and this pin is well a regular pin just like main board so let's make pin here okay pin then we have of course before actually we have to make a full file here yeah so let's go ahead and make a pin inside the components folder right here this components folder right you can see jessa just went ahead and she made a pin.js file and if i go and click on this she's going to do irfce right and that's going to create our our component in here so rfc go ahead jesse does it work no it is got it there we go beautiful whoa there it is by the way guys thank you so much 551 likes let's get to 600 likes you guys are amazing as always let's get this to us to 600 guys 600 come on could we get to 600 click that like button right now let's go right smash the like button subscribe for more videos like this guys this tells us that you appreciate what we're doing because of course we're putting a lot of time a lot of hard work into this i really appreciate you guys if you guys show it okay that's all we ask that's pretty much it yeah that's all we ask for something hard just click that drag button and click like so yes 5 67 likes let's go let's go how far can we go how far can we go 58 likes oh let's go let's go beautiful appreciate it guys let's keep going jesse so one pin we're gonna be making one pin but for now i'm just gonna say hello pin okay to make sure that our pin component is really um being imported into the main board so let's say here import pin well we don't need to do anything now because pin is in the same folder as main board so i don't need to say component slash so if i go to main board right because the pin is in the same folder right it's inside here i can just say pin from pin makes sense okay gotcha gotcha gotcha okay yeah oh oh hello pin let's go come in okay cool cool cool all right let's see them pins i want to see them yeah you want to see them pins well i think also you should pick a picture later from one splash let's go one inch i feel like i'm a kid right now so on splash on splash yeah yeah i'm sorry oh okay what what picture you guys want what do you guys want like tell me i always pick dogs but you know or bali or ocean or surfing you like bali don't you yeah i do i mean you know i like architecture a lot like a beautiful occasion like this like can we pick this one yeah could you pick this one definitely oh you can also pick something like berlin they have great architecture this is cool look at this guys this is amazing i love this okay i got it let's go ahead and play this pick this architecture right here i love this one okay copy image address copy image address okay okay let's then what do we do after that then we go ahead and and we're going to okay so i'll copy the image address for now okay and now we need to add it to a pin so let's go to pin.js and let's create that pin jesse that's created so first again style components right so can i try that i'll try it can i try it can i try it can i try of course you can try of course of course so we're going to create a wrapper that's really i don't want such a kid right now rapper can you get what excited i'm such a kid right now i know why i'm with the critic container for that so container okay and the reason why we're going to create the container right is because again what right we're going to create a pin and that's going to a pin is going to contain that image okay that's why we're going to create a container right so let's go ahead and do that then inside the style components go ahead and import style components so we'll say import import right styled from what styled from dash components style dash components exactly components okay so let's go ahead and save that amazing two two two two two let's go so one pin guys is one image yes okay let me say for example const wrapper is equal to style dot div right there style the div right and so forth now nothing so far let's go ahead and do it now container same thing const container is equal to styled dot div boom right there okay awesome so let's go ahead and save those save that okay you can see nothing is breaking that's the most important that's the most important thing let's not create an image so we'll say image image source is equal to and let's now give it that specific uh what's it called the url the image address boom right there that's going to be the image address right here okay boom right there then inside here let's go ahead and now do close this image out save this oh let's go oh oh oh okay awesome all right jesse let's go ahead and keep going this is amazing so we got ourselves an image that's awesome next up we're going to do guys is we need to go ahead and what we need to once we have the image now we need to modify these images to actually look nice so how do we do that jesse so when we first gotta you know we're gonna i would say first maybe adjust the style the wrapper wrapper the wrapper okay so this wrapper you don't see it right now but it has to be this or should we let's do this later it's fine it's fine yeah we can do implied flex that's fine that's fine yeah and we're gonna give it a padding okay the container is gonna have display flex one container good i don't think it needs i thought it first needed a flex direction column but i don't think it needs that so but to have everything really vertically aligned we can give it a line item center beautiful i'm going to give it this one and i'm going to give it like the little hand my the rocket program always starts up when i do column pointer and we're going to give it a width of 236 pixel guys and the thing is oh 36 and this way all of the images all of our pins will have this width so see if i go ahead and do this let's go ahead and save this if i go ahead and do this now look at this we see nothing has really changed on here on this side right it's still not 236 pixels so if i go and right click this inspect element why is that because why this is 200 but the image is not so going to do is need to give an image a width of a hundred percent of 100 is it 100 is a height of 100 no width 100 right now and now you can see now boom right there width of 100 you can see right there right and now that image fits directly in that width box okay beautiful now we can also give it also a border radius what we should give it give it give it uh border radius uh 16 pixels or the radius right there 16 pixels boom right there look at that oh that looks so good it looks so good jesse it's so good yeah i know right yeah so good i love it i got you do do okay anyways ah awesome water is good so what jesse is now doing is we have for example a width of 100 okay just how we said it okay for the specific image we have a cursor what does this course zoom in i'm curious what is that what does that do that is i think for the picture for the image like when you hover over it it will just make it look better basically really oh oh that's the zoom in but you see why if i click this yeah this has a zoom button right there okay i got you okay cool cool cool border radius and of course object fit cover so you're how to say this your picture is then being skilled the right way yes when it comes into the container okay awesome and that looks awesome so that looks amazing jesse okay and that our friend my friends is our first pin now look we've got our first pin now the question is how do we get more pins at this are we done with this he says in here jesse yeah i think so well i i also had something on opacity but i don't think it's necessary for now so let's just keep moving awesome so let's go ahead this we got ourselves guys we got ourselves the pin how sick is that drop that in the comments below that is pretty pretty something says you are the best guys who let's go thank you we are currently in 587 likes let's get to 600 can we do it let's go 600 likes help us out let's defeat that youtube algorithm together let's knock it out of the podcast yo youtube i know you guys can do it 588 how far can we go 58 593 let's go finally three come on come on come on you guys got this i know it i know it just hit that like button and that's all you gotta do guys 5.99 okay hold on hold on 604 appreciate you guys so much we love making these bills for you so if you like it all right cool keep pressing that like button okay that's fine that's fun i always love so much there's so much energy on here all right so we got we got a pin jesse okay that's the first part on pain next up we need to go ahead and let's how do we create now more pins this is where the fun part comes in whoa well i think we should be talking about data right now okay so let's think about this well check this out on splash actually has an api so on splash api on splash api right here unsplash api right i splash sorry to interrupt you but i think i want to take it even one step back okay okay easy okay okay when it comes to you know when what the user does okay let's okay good i like it i like it so what's gonna happen just explain it to us so like you know right now our app is the parent component yes and then we have header and we have main board as child component right correct this main board right here correct yes yeah and then within main board we even have another component called pin which is again a child component right correct yes so in which component are we starting right the header component because when we want to search for something we're going to put in something like tokyo or dogs or in your case cars right yeah and once we submit the cars what's what do we want to happen well once we submit once we submit the cars then we want to go ahead and look for example okay let's think about this if we for example let's think about this i'm going to put this down here so um search right search when we after we did search we want to go ahead we want to go ahead and get data from unsplash right get data yep from unsplash unsplash using search search right and then what is the next thing we need to do guys then once we get that we need to go ahead and add that add the data add the images that we get from unsplash back back to pins slash slash main board yes right there slash the main board and that's how that's going to work yeah guys got that that is the loop so it's a pretty easy like i said it's a pretty pretty easy simple oh go ahead let's do this pretty simple process guys okay go from search get that from on spot using using search and then add the images back to pins slash main board so right now we have the search now we need to go ahead and get data from unsplash using search is that right jesse that's right so let's go to unsplash like you previously wanted okay and show them what you need to do let's do it jesse let's go let's go beautiful beautiful so let's go ahead and check this out so if we go to unsplash okay we have an splash api right there right is it this one or is it is it this one or which one is it no no i think the first one was correct this one okay so it says on splash images now you would have to register as a developer right here right there register available it's free for anybody to join completely free no no questions asked you can join the no problem okay once you join you should be able to actually get your api key do we have an api key just that we can use yeah we have an api key it's in the oh it's in the other one right yeah it's in the api folder we have our own api key and if we go to documentation let's look at the invitation right now right you go to search you go to where's the search on your left side on your left side so so guys you go to the end splash you regulate yourself as developer and you go to the api documentation okay and then on your left side when you scroll down you have is search photos right there then if you scroll a little bit more down you can see the query or the end points exactly gonna be using so we are later gonna be defining our base url and then of course we're going to add the term on which we want to have photos for yes right so you can see here for example what they're doing in here let me let me take a look at this pretty simple right what they're doing in the search they are they are doing what hold on search photos right here they are simply go ahead and provide you a query you see this right here a query uh wait query right here it could be anything pretty much it can be a search box could be a car whatever it is whatever anything that you want that's the search term that you want to use okay that's going to the query then other than that pretty much we're going to then use the per page we're going to have 10 per page is that right yeah pen per page and that's pretty much it i think right that's pretty much it that's pretty much it but maybe we're going to be using something to make the request to yes unsplash so that's the question is how do we now make the request to actually get the data that's the thing well the really cool thing about react.js is we have something called axios right axis is a way for us to get data so if i go and take a look at this let's go say axios um right there see axios uh gs right there right there react react axios right there that's the one oh no not this one hold on uh is it this one mgm i xios just the regular yeah that one no not that one no no no no no no this one no no which one is it actually mpmi axios i know i'm trying to find where it is wait no maybe here oh npm install npnc npm install install axios there we go that's the one yeah okay yeah yeah look at that because i'm looking for this weekly downloads look at this 17 million weekly downloads guys that is pretty damn insane i will say yeah that's always something you want to check out for guys when installing new npm packages let's go ahead and do this let's go and open up our integrated terminal our beautiful integrated terminal in here right here let's go ahead and do command v for amp install axios hit enter that's pretty much it at this point okay good good good good good good good good that's amazing so we got that portion okay next up we're going to do next that we're going to do is the following is so we got axios which is which is all good now we need to go ahead and what and we need to import access is that right jesse definitely so i'm going to create a new folder inside where okay let's okay check it let's do it i'm watching you jesse let's go api okay here and then we're gonna make a file and we're gonna call it what is it unsplash small letters guys it's not a component js okay okay so let's open that one up where is it oh i'm here in it now you got it and so i don't know once we have it i don't know jesse i don't see the new file it is here though api axios it should be an api okay let me move that to the api i got it oh it's here okay there we go awesome okay now we got now we have it right here awesome thank you so once you have installed axios you're going to do that this guy's import axios from axios okay ooh nice okay right there and what we can do is really cool we can create sort of our own axio server through which we can send the requests to and then we can export this one throughout our whole app okay so we need to do this export actually yeah well yeah it's okay i already started repeating that but axios and then create so this is a function of axios itself and then your can give it all kinds of parameters okay so in this case we're going to give it first our base url of unsplash so this is the parts url you absolutely sure you're always using in every request that you make got it got it got it okay cool cool okay and with it um you're gonna give me the param headers nice and that one's going to have a key of authorization okay guys so authorization you can see me writing it with a capital letter very important um you will not get any requests okay so i speak out of experience i'm going to share this one with you guys in a silver platter okay so very important guys when you do stuff like this be accurate and consistent okay authorization capital a okay now you're never going to forget that and here we're gonna say client id again watch the capital letters okay then we're gonna have the access key here that you're gonna obtain from unsplash so when once you have registered as a developer you scroll down and then there's an access key okay at the top you can hardly miss it um exactly there right you can see and you can see the way she got this because inside documentation if you look at public authentication and in the documentation guys it's talking about right to authenticate requests in this way pass your application's access key which you get basically by logging in to sign up for unsplash api right then what happens you're going to get your access key and then at that point you will go ahead and you can add the access key to your as your client id inside here that's pretty much it that's it that's it yeah that's it easy peasy so i have my key already ready okay yes yes yes please don't copy it guys and they're correct so i mean it's quick they do it's fine it doesn't matter it's not like it doesn't matter we don't get charged for this anyway so it doesn't matter no it is free anyway so but um this is this is how i created the um axio server basically okay so i can use this one everywhere in my app because i'm exporting it here plus i just need to import it in my other component wait so how do you know what and how do we name it is that what to name this as well like name this axio server or no well we created a file called unsplash so within our like for example i know for sure that we're going to be using it in the app.js so let me show you here so let's go like this import unsplash yeah yeah be amazed and then we're gonna do this oh interesting yeah okay look at that guys that is pretty sick i will say that is pretty damn sick so we created our own server i mean it's not it's not our own service just a way for us to be able to define a api call basically using a using axial so it's very simple for us then to use it and we don't have to define it out you know in a different place pretty cool damn gesture that is awesome all right this cells keep going yeah yeah yeah we haven't defined it in a different place what do you mean so it says you attempted to import api and splash which falls outside of the project source directory so it's decided so the reason why let me see let me look at this because where where um let me see oh i know why i know why i know why i know why because you should not okay there we go now it's so good so you don't have to dot dot there we go okay no dot dot yes so we got that now what did you just say um well we first talked about let's first go back to the header okay okay you know because the header is actually the place where we start i always like when i make an app or develop the app i always like to think in the story right the user story right and then once we put in something in the input we want to catch that so what could we use for that how do we catch something in an input well you use something called unsubmit or unclick or unsubmit i think unsubmit for the input is unchanged but the button is definitely going to be the one that's going to be submitting something okay so okay so we're going to keep track let's go check out the input okay make sense okay go ahead so let's do this first so an unchanged event is actually unchanged actually an event so technically your input is an html element that is waiting for this unchanged event to happen correct unchanged just means like um help there's something happening in my input correct and then he catches that you know so for now i'm going to console log this so you can test it out and the event is actually i think an object so therefore within that object we have target and value as keys so we can grab that value from that input so maybe you can show this so if i go and save this guys let's say let's go back to and save the app.gs save the header here's going to happen if i go ahead and right click on this inspect element on here if i go to console okay so let's go ahead and clear this console out for a second if i start typing you see right there boom that's the target of value that that jess is printing out right here and the reason why we're doing this is pretty simple is because we want to keep when we want to save this right we want to be able to save this value right in something called a state right in state so we can go ahead and actually use it and then apply it when you submit it right so for example jesse right now she's going to create a input state right the input and set input using something called the use state which is if you use state is basically think of it as like think of it as like a database for for your own component right every single component in react.js has its own little database called state right called state and so whenever you make change that state right at that database it refreshes right it keeps track of that and so that is what jesse is doing you can see here she created a use state of where the default this is basically not an empty string okay yeah this is the input this is the actual value the set input is the change function the on change function right so if you want to change this specific value you just simply call this function and that's pretty much it so that means if i go ahead and say the unchanging here right all i have to do is instead instead of doing either target instead of doing that we simply do is set input e dot target that value so we're going to get the value from our input and we're going to change it inside inside out oh what happened oh there we go inside our what inside our specific input that's it and now every single time when you change this is going to change as well it's very very very very simple simple as that yeah and i can show you the next feature we're going to uh adding as well because now you see that everything changes when nas was typing something in in the input but we don't want all of those letters right we don't want that pyramid of letters we just want the last well the last word basically yes so what we do which moment is that when where oh clicking the button when you click pressing the enter correct you click the button or when you press the enter of course yeah press the enter same it's the same so upon a function okay once we click on the we press enter not the button because we made that one disappear yes to be clear again the reason why the reason why this let me just happen is they unclick the submit because the button submit by default has functionality for you to be able to hit enter and it will call the button it will call the submit button that's actually what's going to happen basically right by default so then we're going to create a function called right there answer submit as justice creating right here okay right there beautiful beautiful and we're doing this april before because there's some other like whenever whenever you click a button right like when you hit enter it by default it wants you to it's gonna it wants you to take to it you want to take it to another page but we want to prevent that by saying either parent default to do that okay make sense good good good good good awesome then what's going to happen is let's consolidate the input and that's we'll see is when you hit enter you will get the input right here let's go ahead and save this beautiful okay that's used as undefined now again yes you send the file because we're team pointed so let's go ahead and import it here i'm gonna say comma hold on sorry right there all good i will say use stage state okay there we go and beautiful now we have our use date simple and again here whenever you hit enter right it's going to click the it's going to hit the answer submit function which is in here right and our input is always updated because our if the input gets updated through what through our on change function right here that's pretty much it guys that's all you have to think about okay so let's go ahead and save that so we'll go ahead and save that beautiful okay so save that and then let's go ahead and refresh this beautiful all right now let's go ahead and see if i go ahead and now command k to clear this out if i'm typing for the po right and i say enter this is the input asdf whatever my b right if i say for example cars let's say hit enter there's the input cars right how sick is that guys by the way guys we are currently at 666 likes let's get us to 700 likes can we get to 700 should we get us 100 jesse can we get 700 guys i'm sure we can 700. let's get to 700 and let's finish this pinterest clone today right now we are guys are so close at this point it's insane guys so close so that's going to finish this up right now and we'll get started let's go jesse let's go let's go let's go let's go so nas the next thing we need to do actually is i think it's time somebody said somebody give you a super chat and give us 40 pesos says jesse i love you [Laughter] thank you calamity calamity is the name calamity that's awesome okay so um well you know we actually want what do we want to do with this input guys we want this input we want to make an api call with that to the on splash right and then we want those pins to be next step to be distributed or passed in as props correct yes to the main board yes so what we need to do actually because header is a child component a header you know you don't see the main board component here right so what we need to do is we need to send info from the header component to the app component the parent component and app component will pass it to the main board well let's think about this but but before we do that jesse let's think about this okay if we have if we want to make for example a search to the unsplash api okay what do you think that that needs to happen like if you want if you want to call an api right the on splash api what do you think that needs to happen well it needs to be distributed to different components right so i would say it's parent component app.js yes because we're going to use that functionality inside here and also inside here right so we have to think about that okay so we're going to go on on uh we will go to app.js and inside the app.js what we can create guys is we can create a actual kind of like uh think of it as like on search submit function okay so we can say create an answer segment function so let's go and do const on search submit right there oh damn how does it give me the the answer to that i don't know why yeah it's very smart sometimes visual studio way too smart right right this function we're going to pass in our input so we'll say for example equals we'll give it a function this is called the arrow function just so you know guys in esx we'll give it a term right there this term now what's going to happen when we go ahead and actually call this function well pretty simple this is where we will get images right we're going to call thank you we're going to call uh basically the images for what the images for on splash so that means like again separation of concerns we now want to get images from one splash let's go ahead and create a function called get images so i will say const const get images images right and that's also going to be a function right and this is also going to accept what a term correct yes right and now just how we had it before right the way because because jesse went ahead and created our what our onsplash um axios right here where is it inside the api right here see we can simply call this right away check this out i go to app.js and i simply say here look at this here's how cool this is i can simply say on splash return here we'll do unsplash on splash right here unsplash.git and we'll give it that url and we'll give it the what what url we're going to give it well the one that we found in the search query um area right yes yes uh within the documentation of em on splash correct so the one that we're going to look for is actually the search photos let's go ahead and do search photos right here that's going to be which one it's going to be pretty much this one so https api search photos right here boom oh you got it thank you jesse yeah yeah of course no i know you were looking there so exactly that we're not looking at exactly the source of it and also you need to give it some params right yes it also says it at the top params correct and then within these params is an object it has a key and it expects they're actually what you want to search for yeah it's out there right there and again the params are based on this as you can see guys right we have a query parameter page param a per page prime and so forth and by default the per page param is just simply 10 right that's how we know right that's how we know that you know that's how many photos we're going to get back every time we click search and that's what the parameter we're going to pass into our query so let's go ahead and do that save that and now let's just call i'm just going let's go and call this unsplash let's do let's do git images let's actually call it we're using the term right no definitely of course right now okay but now that's gonna happen because we need to nothing's been nothing's called the answer submit so let's for now let's do answer submit just as a as a as a test let's go ahead and call it with what should we do car i don't know i don't know why volley how about that bali how about that let's go bali so here we'll do bali okay we'll do bali right here and so now if i go back to my my right there oh okay check this out let's go ahead and do network okay you will you will still see here right there where is there is arizona where is it photos bali look at this hey and here's a result let's check this out we get our results let's go hey you gotta have fun sometimes you know special friday night it's friday night here it's friday night let's go this is the result we got back from unsplash okay isn't that awesome yes like an array with 10 objects and each of those objects what do they contain us they contain look at this i'm not sure well do they contain jesse actually you tell me a lot though but what you should be looking for is the urls where's the url no bottom bottom oh url so right there yeah yours we have a full url a raw a regular yeah a small thumbnail and so our goal is we're going to go ahead and go and get which one well um usually the regular one is good yeah you can see we made it out not you can test it out you can copy one url and paste it in your browser we copy it yeah that's cool i mean it's just like it works in source right for an image so let's go and copy this guys cup case copies pasta pasta pasta in here oh that looks oh jesse why am i not there justin how is the question something way to see anyways isn't this amazing guys always always be positive guys always always okay so here that's how you connect thank you love youtube that's how you can test that your api called two on splash went perfect though yes okay exactly let's go let's go now so we got the answer submit okay jesse let's go ahead and drive us what's next what's next so um i think we want to call this unsearch submit when we're doing what when we're pressing enter enter enter so how do we do that jesse so when we go back to header.js okay right there apparently we have the unsearched submit correct right here sounds familiar yes so here we're gonna be calling that function with an app component but wait how can i call a function in the parent component from a child that's a good point that's a good point well the way you do is you can actually pass in guys you can pass in a function as an actual prop or think of it as a parameter not a prop a prop to a component is think as like a parameter to your function right so don't confuse that it's a pretty simple term to understand okay prop is a comparable to a function so within the header no let me start at the beginning but the header will receive props which is the function so when we go back to app.js let's pass that function in and let's call it um unsubmit you know like do it let's call it unsubmit yeah you can do it no you do you you do it you do it you do it okay okay on submit and we're gonna pass in that function that we made okay so it's the on search submit so just to be really clear about this guys these are different things but here look unsubmit is the key on props okay because prop's always an object and on that key we will have the unsearched submit function so when header receives props and basically it looks like this now uh under the hood okay okay not with the not with quote guys but just like this and it will have and then here it will have that function yeah so on this this this guys is happening underneath the hood just you know this is underneath the hood basically this is how props can be passed in right into the header component okay so it's just so you know right it's not magic it's not magic right underneath the hood when you pass in a prop into here right it's like you're passing a parameter into your function and you're given the parameter a function uncalled answer submit and then we accept it by saying like this and now we can say what we can do props what props dot what on submit submit submit and look at this and then we can call using the term what is it the input which we get what the input right here and that's it and so now it's going to happen is look look this right here is going to call the on submit function that's going to remove this unsubmit function which is actually inside the app.js which is right here right there see so now if i go ahead and do this if i say console.log sorry god bless you no no sorry answer submit right there right right there and i i give it a term let's say term okay so let's go ahead and save this beautiful if i do that guys check this out if i do that look at this what's going to happen is pretty simple i will go ahead and do this right now and let's go ahead and inspect element console let's do this bali look at that answer submit bali and that's the one guys how cool is that huh i'll say that's pretty sick so you can see if he called this function this function was called right within you see you had this function which was one function here right let me play this right this was our function called the app.js this was our app.js that gs and we had our oops let's go ahead and do this and we had our what's it called our header header right there so let's go ahead and do this say header header.js right there and what happened is that from the app.gs we went ahead and we have a function called um what is it called on subscribe submit on search submit right there right let's go make this a little bit smaller right there right there oh boom wait see answer submit then what's going to happen is that this answer submit is going to pass itself in right then we'll go to the other brush pass itself into here and then we're going to get the on submit function here right and so what's going to happen is when we call now this and go and okay boom we now call this this is going to be this is actually going to call this so this right there and that's pretty much it right it's going to call this and it's going to pass in the term any term any parameter that we want so parameter let me see param into it as well how cool is that right so just keep that in mind guys okay let's just keep that in mind with you right really important tool for you guys to know exactly what you're doing all right cool all right let's go ahead and keep going so we got that specific portion what's next jesse what's next let me think let me think okay so let's look at app.js so we're gonna make api close to one splash right now yes and once we have that once we get results back what do we want to do with those i think we want us i think we want to make new pins out of those right so once we've done here line 23 guys once we have um we get the pictures back from unsplash okay we want to do something with that result right correct so we're going to say then by the way um axio is always returning promises yeah okay guys we're going to wait 64 likes let's get to 700 guys just six more likes 700 likes omg that's a lot that's a lot so get images term we're gonna wait for that function to come back with the pictures and then we have the result of that okay so let's do something with that so let's catch that in a variable and say rest.results this one on the right side this actually what we're getting back from unsplash remember we had that result an array and then we flipped out right here that's exactly that right there see this results right here guys we see this result this is the result we're calling right here so this directly maps to that right there directly mapped to that just so you know okay so we want to store that within a new array and we call that new pins okay what we want to do there is actually we want to have all of the results in there all of it so we're going to use something spread operator and we're also going to do that for previous pins that we have because at the top of this app we also want to do something else we always want to know a certain state yes okay a certain state regarding the pins because that's what we want right so here again pins sets new pins so these are going to collapse are going to reference whatever pins you have here so these pins are going to contain the data okay to show all of these other pins right here right that's how this is going to work it's pretty simple right so let's go ahead and keep going jesse so people yeah okay go ahead so we have a state here of pins and then with the react hook of use state which has a default of an empty array so if we don't have any pins it will just have an empty array okay but with set new pins this function which is the setter we can set the value of pins okay so once we have new pins here what we're going to do is well first we're going to sort it a little bit because we don't want pins like 10 dogs 10 cats 10 cars we don't want that we don't we want to shuffle that a little bit okay so we're going to use a sort function here to do that we're going to randomize it okay but actually what's the most important part of this function is we're going to set the new pins with the new pins yes yes yes yes so line 34 guys line 34 that's what it's all about we're going to give new pins as an argument to the setter function which means new pins here will be set on pins and will be displayed we get the results here right we get we use the results and we concatenate together with our current pins which are currently inside our state right here right there you see inside this state right you concatenate this is called a spread operator so we can actually spread out whatever's in here and what i was in here i kind of put them and put them together right so imagine taking for example imagine taking like uh taking like for example here you see this right here see this actually let me put this imagine doing this for example you have this and you have this right and then what you do is you bring it together by doing just doing you're doing like this now you have one that's pretty much it now you have one that's all you're doing when you when you're doing the spread operator together right that's all pretty much you're doing what we're doing here okay so you got that then we're going to have here and we're going to just randomize them just for recommendations think and then we're going to actually save them usually called something set new pins which we get from here directly and that's pretty much it now we have the set new pins and so every single time we now search we're going to show these pins in here we're going to set them save them in here and that's it and now because we have that because we have that what we can do now what we can do now is pretty much just go ahead and what pass it to the main board exactly let's do it jesse you got this come on okay so guys so we're gonna be we're gonna be passing the pins as a prop to mainboard right so here with a mainboard chorus pass props are gonna be here okay so always make sure when you're making react components that you know you think about the data flow right not props but props yep so let's destructure that because just like i showed before props and objects so the key on it is pins so let's just do this yeah we're currently wearing that we're currently where in the we are main words the js let's go ahead and do that right now okay click beautiful nice nice awesome so now we only have one pin here but i still want to show it first of all let me fix that error for you here import you state where is it where is it where are you doing that where are you doing that jesse yes yes let's go back to app.js hold on app.js okay keep going yeah so make sure you let me know where you're doing this okay yeah yeah sorry after gs i fixed it on the top at the top good so we have the use state right here that's beautiful to make sure that that's all working okay nice good oh there we go now it's working probably okay keep going keep going yeah yeah so i'm gonna go back to mainboard.js okay let's go so now that we have all of the pins what do you think we want to do nice well we underwent now we want to go ahead and loop through them fully and actually show every single pin that we get how cool would that be oh let's go well let's just map through it or you want to for each through it well we can do we can do map we can do for each let's do map that's fine okay that's fine we can do it that's fine visual studio code um pinstop map and i'm mapping through each pin and each pin has a url to to just make it a little bit more readable cool so what's happening here guys is pretty simple we're going to get these pins that are going to come from the the home page okay from the app.js right here from this these pins right here then we're going to loop through every single pin right we're going to get left every single pin right and then what's going to happen here now jesse well we're going to get the url we're going to get the urls yeah of the pen right and then again we can actually show show what show the actual component of the pen yes so we're going to pass it in to the pin because remember when if we're looking at pin.js i'm now in pin.js we have that image source right the hardcoded copy link or the link you copied in if you go to pin.js i'm doing it right now and then yes right there okay let's see okay oh so it's currently hard copy so we need to actually replace this right we need to go and replace this with a prop so if we go ahead and pass some props here okay props here okay we're gonna place that prop with an actual url from props so let's do that right now so we can pass in a prop what prop should we pass in here equal url right there right there and we can say urls that what the regular right because why you can see that inside here it's right inside here we have urls right there right urls and then we have a regular a raw a full a small and so forth and we're going to get a regular for this one so we'll say urls.regular right to get just the regular ones okay beautiful i'm going to close this out okay yep sorry and what i do sometimes just to make sure i'm gonna put a question mark here so in case it's not there it won't freak out yes correct correct correct so what's going to happen is once we go ahead and we have the urls.regular okay so cool you have that guys now of course you can see nothing's happening you can see this kind of it kind of broke right but that's exactly what we want to do you want it to break right we want it to break right now because we're not passing in urls just yet now to do that we go to main board okay we go to the main board so wherever we passing url so you can see now we're passing urls and look at this let's go and pass it in and you can see nothing right now is happening just yet no no no because we need to do this this one oh let's go hold on so we need to save this hola save this it's still not showing up which is completely fine that's fine look right so we want to go ahead for this specific one right for every single pin in the in the main board if we go ahead and let's take a look at this if i go ahead and see this let's go to console let's see if we have any issues there's no issues right now that are showing which is no problem let me see so we go ahead and map through this we have pins okay let's go ahead and do console log pins to see if we actually get in the pin so console.log now actually hold on this makes sense look at this this makes sense why this is now does not work why guys because this should be working when we click submit when we hit submit that's why right when we hit submit so if i say click this if i say car ready ready for this jesse are you ready oh let's go that's what i'm talking about hold on look at this oh that is so cool thank you so much guys we are clearly at 715 likes let's get to 800 likes you guys are amazing thank you so much let's go ahead and keep going we're almost there let's go ahead and make it so good so good almost pictures man that's really like that gets me pumped about pinterest every time you see it you know now one thing i will say to you guys is you see how we have this issue right here say call unique key prop no problem what we can do is here for here is we can actually give it a unique key so look at this this is something you you need for every whenever you map through it we can you need to give it a unique key that's the one thing you need to do which is no problem so we can do is a set of pin we can now do key key right here key is equal to index and every single component when you loop through it needs to have some kind of a key and the reason why is because this is how right here just so you guys know just so you know this right here this key is how react.js tracks changes so whenever something changes for xjs this is how it tracks changes this is how it knows how to update your view that you have okay cool so kind of keep going with this that's also what makes it really fast right yes yes yes yes okay so we saved that keep going jesse so keep going keep going you know what nas let's go back to app.js because now we only get pictures upon the submit okay okay actually when i open up the app i want to see pictures as well right i want to see pins as well okay and maybe based on a few search terms that i've you know used in the past couple of days so what do you think so maybe let's create a function that will maybe that will right away show us show us a few pins right away how about that jesse yeah well i think it's good if we use use effect for that because use effect is one of the react hooks i believe that you know renders one time it fires off one time when you open up an app exactly okay so let's use that one and let's let let blow up let the use effect fire off another function yes okay so let me make that one here i don't know where you are i'm in the app.js as well okay great i'm gonna give it an empty array here good good good good good okay and then what should we call it i think like get new pins for example yes yes yes yes yes and guys the reason why we're doing this is because again user effect is a really popular thing where every time the page loads right whenever the page loads we're going to call this function on page load right and so then we're going to create a get new pins function right here which is going to be called on again page load and then we're going to get just a few you know few simple uh kind of like a few simple pins for us to show right away from the getgo so let's go and see this so we're going to do is we're going to create multiple promises here the reason why we're creating this process is because again we're going to have multiple uh what's it called um multiple uh calls to the api multicast api because if i do this check this out if we do this if we think about this let me go ahead and click a brush and let me go ahead and freeze this right we have all let's we'll create a few different search terms so we'll have for example car maybe we'll have for example bali right maybe we would want to show for example uh something else let's say it's car or dog just kind of how jesse is typing right there right this is let's say it's an array okay let's say this is an array okay that's awesome then what's going to happen is pretty simple guys right we're going to for every single one we're going to call the unsplash api flash api right on splash api right and we'll do like this we'll go to car we'll call that splash api and we'll get data and we'll save it to pins so here our pins are going to be here this is the pins data okay then same thing is going to happen for bali right we're going to go bali collapse api save it back to pins then dog answers api save it back to pins really simple really simple guys this is why we have multiple promises in here because of for that reason because we want to be able to show we want to wait for all this to happen at once and then we want to go ahead and show all the images so you can see you see jesse right here where she's going yeah where she's got the promises she's got the list of pins just how i just showed it to you we're looping every single pin right here a little bit exactly okay okay lupita and then what's going to happen is for every single pin pricing pin turn which is going to be this this and so forth we're going to create a promise or push a promise right a promise using the get images function right here it's as simple as that okay so you digest it right here here just doing she's doing the get images function just like how i did it beforehand in here to get images function to get the term but in our case we're doing good images for every single pen term inside here okay then we get results that are just how did before and now we have the pin data so go ahead just to keep going so we're going to concat that previous correct things we're going to concat the current pin data which is a current pandita which is kind of basically empty right empty array for now with a new result so basically we're going to create a bunch of pins right here for for ocean for tokyo for dogs whatever we get for ocean is going to go here there we go for tokyo is going to go to here whatever we get for dogs is going to go here that's it and now what she's doing is she's going to go ahead and sort this right just to kind of uh let's go ahead just to sort this just to go ahead and kind of like insert it just to so so it's not blend you know so it's not blend and that's pretty much it so here when we're sorting we're just randomizing it that's it and that's it that's pretty much it jesse right but at the end we're gonna collect all of those promises all of those from those requests that we send out yes yes so this is gonna be at the end and then we're gonna do the most important things what do you think we should be doing setting the new pins of course yes with all of the pin data exactly exactly so what's going to happen now is that promise is not all what it does is pretty simple guys it goes ahead and it waits for all the promises to finish right that's what all the problems to finish meaning it waits for all these api calls to finish like the images for the ocean for tokyo and so forth and then we're going to and then all it wants is going to set new pins with the pinned data that we have here it's a pretty simple solution right we're going to set your pins with a new pin that we have here and that's pretty much it makes sense that's pretty much it makes sense all right let me see i'm missing a bracket somewhere missing a bracket let me see we have the bracket here we have a bracket here we call this here bracket here racket here bracket here let me see let me see let me see i think you got it pretty much i think it's actually because of let me see here that's actually interesting where'd that come about i don't know let me see we have a bracket here the bracket is here okay that's fine now it's still not gone and then here what is it here maybe somewhere at the top i got it command x let's cut this for now for a second i think it might be fluke with use code for a second here that's all and then command p no let me see there's that use of fact is in here and make sure this is all good you got that that's awesome oh we haven't imported use effect um that's why hmm well it's funny how it doesn't fully give us the what's it called doesn't give us the proper uh error if we wanted to mmhmm yeah so we have used this word okay that's fine yeah let's try this say this it says okay there we go and now we have ourselves pins look at this oh let's go so you can see now now of course it looks weird right it looks weird as [ __ ] look at this actually that's pretty cool holy [ __ ] can we just leave it at this damn yeah yeah yeah yeah we create our own pinterest can we just leave that down pinterest what color for you because this is much better i'm sorry i love this i really love the amazing layout though where you have like the small blocks and the big blocks and then it looks really please okay guys how cool is that guys let's go ahead guys we're currently at 706 likes let's get to 800 guys for this epic view for this epic picture score that we've got right now look at how beautiful it is good look at that i love it that's amazing amazing guys let's go ahead and get it to 800 we are currently at 727 can we get to 100 i'm sure we can i know we can you guys current you guys can let's go all right keep going jesse let's go ahead so we got the pins right we're getting the pins right here no problem okay what's the next thing we should do we should probably focus a little bit on the styling portion right what do you think yeah so guys this is the last part okay we're gonna give this app that famous pinterest look let's do it let's do it a masonry layout are you ready let's go let's go i'm ready are you ready jesse are you ready ready are you ready i'm ready i'm ready i'm ready for a long time so let's go back to the main board now let's go back there okay so mainboard.js okay awesome let's see it okay so we're good yeah the gs we're going to go back to mail and we're going to actually be focusing on the container so remember we had to put on a width of 80 percent and when i showed that green block it was really persistent on showing that right yes but actually when you're making this layout we're going to use columns and yeah we're going to use columns and gaps and some counts because we're going to be saying if your screen is a certain size you need this many columns which basically means you're going to show this amount of columns of pictures okay so what is natural so for what is initially what columns should we show initially for now what columns how many columns um maybe for this height maybe five columns or something just to show it you mean okay let's do it just a show let's see um comic con five okay sophie oh okay hold on hold on we're getting somewhere hold on getting somewhere column column gap go do it do it do we do it do it jesse okay column gap sporty nice cool nice beautiful beautiful oh it's gonna well this was a little bit smaller i think i think this was like five pixels no okay that looks better okay and we want to set a margin of auto zero auto so give it auto good on the container on the full container good yeah yeah and well we did have the height already yes correct no 100 percent no it's not necessary i think but maybe just to be sure yes so what you also need to be doing is something very important there's something you need to do with the pin itself i believe okay what is it what should we do jesse we should put the pin on a display inline block otherwise it will not do anything okay display inline block where would that be that would be in the pin pin.js here and it would be on i think the pin container if i remember correctly might be the wrapper i think actually oh yeah yeah oh we already put a display inline flex on it correct correct correct and so you can see now right these are not showing up in the three color three columns that we want to show up right let's go ahead and inspect that one on this one just to make sure just to check it out okay so here is all paint all pins right boom right there okay we have this specific portion right here okay this specific portion is display flex right and so forth this specific portion has a display flex with a column count of five and margin zero auto but of course it's not putting what do you think that's not putting you just see the column cut i'm curious um that squish question um so here's what we can do let me see so if i go ahead if we have this specific thing let me see let's let's check this out because i think i think is because of the fact of this so you see column gap column count merges your auto let's see about height don't need this so we have the container which is fine okay display flex okay let's go ahead and do a line i can i do it like item center that's fine cancel that's fine let's go ahead and now do the following so we got that let me see column column uh what is it what is it called column what column count column or what do you mean column count css right there so for column count to work properly let's see for column count to work properly we need to do what uh no just like that that's fine column count so column count of three column count of four depending i think it's actually because of the fact that it's going out so for example i think what we need to do jesse in here is inside this container mmhmm you see how we have this container goes side goes outside the width of this we need to prevent it from go outside the width of this ah you see this is the way this width has a width of this so we actually almost need to think remove this width right there that's fine because this is for example 435 this is for example let's see wrapper this is container look at that the width this is a thousand pixels you see this is however container okay i see okay um this one this one here is 944 pixels let's see okay let me see okay that's fine okay i think we need to look at our first our big one here big one here okay let's see max with with a hundred percent for this one okay let's take this okay okay 959 which is gonna be this one that's fine okay now it's going to happen let me see so if we go ahead and check this out this is 9.59 how do i make sure let's give it this a width for example let's give this a um let's give this a width of of let's say 400 pixels okay so we're getting somewhere hold on hold on oh yeah sorry you're right we need to give it a max with to be honest thank you jesse appreciate it yeah there we go because you have max with right here yeah yeah yeah no i'm sorry i forgot about it but you need to give it a max width and within the max width then you can set a certain amount of columns yeah so if i remove this width actually i guess we don't need this okay right for this as well that's fine but for this specifically let's do a max width so let's try like 1008 pixels for max with 1000 pixels yeah something like that and then maybe like yeah four column count four for example column count four do you think that's gonna work hope so no it's not gonna work let's see one more time so if i have this let's save this all right so we have column where's our column count right here for the container right so we need to set on the container of this let's give it a on the container max width right here let's say it's given knight a width of 756 pixels what do you think what do you guys think you should do huh what do you think what do you guys think that we should have okay so it's getting somewhere it's a little bit okay all right that's fine okay that's fine um i think we need to do because is this the inviting flex or just flex inline flex uh no this should be a flex i think um oh sorry that's the whole point you need to remove the flex sorry you need to remove the flex yeah there we go oh sorry hold on you need to remove the flex remove the flex nice okay beautiful yeah yeah now it still looks weird as hell yeah yeah but i can change that for this one like for example if you put this one on 1260 pixels and then you're gonna give it a compound of five can you save it one two three four yeah oh that looks so much better thank you okay so it was all display of flex that was the issue because this place like keeps it in one row to use that but with the amazing rate layout we don't need to use that so learn from this guys okay so now you guys know i think that's not allowed honestly cool so guys so we got that specific portion and somebody said flex wrap thank you actually we could have done it can we do what's on display flags can we do this display flex let's see display flex and could we have done it with a flax wrap somebody said gonna have spaces i believe flex rap i'm just curious here rap prep i mean i mean that kind of works yeah it works but um only because you're using the column count i think i mean it kind of works not badly no that's true that's true okay okay cool cool cool cool cool i like that i like that okay so now we don't necessarily need to use that right there we don't necessarily need to use that so it's still going to be flex wrap of this specific actually no actually off i think actually i want to make it responsive nas hold on hold on just hold on hold on hold on this is fun align items flex uh start start oh okay oh yeah you're gonna have it's not gonna have oh i see what you mean so you see yeah it's gonna ah so it won't be the same can i talk yeah i'll be the same gotta check that yeah yeah yeah nice but it's cool it's really good it's really good if people try this out you get a feeling for it you know i was really hoping the flex will fix this but i guess i was wrong it's all right sometimes you win sometimes you lose you know that's that's part of life but this looks amazing though i'm happy look at that guys 743 likes let's get to 800 guys for this sick demonstration right here guys all right let's go let's do this let's do this omg yes yes yes yes yes all right so let's keep going let's keep going i want to make this responsive so that means what when you stretch it out yes i want the column count yeah you know i want it to be you know smooth like like the car spins popping up there so what did i do for that you know um something called media queries yes with a media query you can basically set and say like hey if your screen is this size between this line of pixels and this amount of pixels you should change certain classes or certain css properties of your class in this case your styled components okay so i'm gonna should i well it's a really long list i mean let's see here we can actually copy that list and probably let's create a css file let's copy and paste that list so people can see it and we'll be able to provide to you guys no problem later on don't worry about this so let's do it so let's go ahead and go ahead and create a main.css file here in components yes yes yes yes yes yes yes mainboard.css file okay so she's going to create a name with a css file right here right there and that's just going to go ahead and actually use media queries to add media queries to that so let's do import just go to import now import right right there main board main board dot css right here and then on this specific section inside my mobile site css oh sure they got ahold of media queries so look at this guys this is the media queries that we can use i guess we'll provide this to you in the github page holy [ __ ] that's a lot jesse yeah a lot but look here looks look here like line 23 remember when i said max with 1260 yes oh sorry this is mini width here but max weight is here match with 1260 and then i'm gonna give it a column count of five so when you stretch out your um browser until that amount of pixels is going to have a column count of five correct if you're gonna stretch it out more it's gonna have six so kind of like this right let's say this this right here so the min width for example is guys this right here is the min width so min width is kind of like main width i mean width it's pretty simple to understand it's basically the main width of this container of the whole box right of the whole of the whole um uh browser right that's the main weight max width right here is till how far will it go maybe it will go till this width right now basically from here to here right we'll get a we'll add the container width of 100 1500 pixels and a column count of six right that's that's pretty much all it said so the column count will increase here for example for a max width of 1260 and then a minimum 1260 and a max of 5 15 11 right we'll do a column count or five pretty simple as that right so we go ahead and check this out let's go and save this jesse you ready for this yes but we now we still have a default because we have put the max mainboard with now on a certain max weight remember what do you mean oh yeah yeah yeah yeah yeah yeah so let's go do this let's go ahead and do this so we'll do here let's do remove the max with wait where is it right there so let's remove this one okay yeah and let's remove the column count as well please and we don't want to remove the gap that's not going to work you know why i know why e we need to import or what we need to go ahead and actually add a class to this one oh that's what you wanted to do okay container see so yeah yeah this one we'll say class name boom mainboard container see let's go oh my god it looks so good let's go let's go oh look at this guys holy moly that looks sick how cool does that look guys let's get this video up to 800 likes for a 757. can you guys do 800 likes let's go smash that like button below guys we finished our application guys we will provide you with the github to this app again this is part one of part three parts okay but this is part one of three parts that we're going to be working on okay this is only just a functionality guy but jesse what other functionality are we going to be adding in the next few parts of this pinterest clone well like in a normal pinterest you know you can add pins to a board okay you can add pins to a board to newly created boards and we're going to be i'm i mean you want to see those boards right so we're going to be making a user profile super sick super super jagged a lot of data flow a lot of css html styles components okay like get ready guys this one is going to be one hell of a series okay so i'm so so proud of this one though that's gonna be so much fun so guys how sick is that drop in the comments below we are calling at six 767 likes can we get to to 800 let's go come on can we get to okay 100 likes guys i'm sure we can i know we can guys one less thing i will tell you okay really important guys so yeah like i said we finished starting first pitch is cloned it looks really cool if i for example now type in car look at this i can type in car and look at that it adds car right there boom boom right and randomizes it that's the whole point of pinterest right about the position and making it making it look like a really nice board right that's the whole point of this so that that's that's awesome now really quickly here before we we go we'll go ahead and finish with you guys again we have a react.js workshop and now reg.js challenge for you down below link in the description guys you want to check this out completely free you will learn how you will kickstart you will not only kickstart your your career as a rack just developer but you will also go ahead and build a slack loan free portfolio you will get your own portfolio by using react.js you will upload that portfolio online you will upload slackline online you will learn how to kickstart your career in the in terms of have become you will learn how to kickstart your career as a react.js developer you will learn how to make money as a reactor developer and you will learn how to become a six figure developer in general guys trust me it's so much fun we have thousands of people now at this point in this challenge join now it is going to be so so much fun the next few days again it's going to start february 22nd so join up because you will miss out and you don't want to miss out i'm sure you don't if you join hold on if you've joined the react just challenge let us know in the comments below and we'll shout you out so if you've joined to the redress challenge let us know in the comments below i will make sure to shout you out okay guys so jesse how was this built how would you enjoy this you enjoyed this oh man i enjoyed it so much i mean look at this and when you stretch it out it will get all of the other pins as well it's responsive it looks slick it has functionality to it the icons look good it's styled components like i mean what's there not to like yes it does i love love love it's so good i love this i hope you guys love this too give us some more likes smash that like button okay and join that five day react yes challenge guys you don't want to miss out next monday it's starting okay so be sure to subscribe or to register asap okay play guys please don't spend a chance guys we don't like that you know why let's keep it clean we're all here to learn let's be nice just be nice and learn what's the harm there's there's no there's nothing like guys just be nice learn if you don't like it then go like you know what i mean that's as simple as that if you don't like what you see it's free this is free guys free completely free you pay zero dollars you pay nothing right so again don't spam be nice because the more you spend months you only you only hurt yourself more because you get into that mindset you get to that state of you know being negative and being hurtful and that's only going to propel you into a very bad trajectory in life just in general so being positive being optimistic is a really important part of life right and now spreading so much negativity or so much you know negativity or spamming that only hurts more it hurts you more than anybody else trust me it hurts you more than anybody else because then you put negativity into your mind and then guess that gets to everything else that you're doing in your life might that be career may they be family might that be friends anything else and trust me that's not a life that you want to live believe me believe me so if you're trying to spam if you're trying to spread negativity if you're trying to say some stupid things no reason no reason okay this is a completely free for you if you don't like it just go just simple as that right no need for that so guys again thank you so much guys let's go ahead oh aisha's in the house hiya yisha so good to see you so good to see you that is amazing so aisha says jesse can you repeat again about the five day challenge [Laughter] aisha next monday we're starting a five day react yes challenge okay and we're going to be building the slack clone and it's going to be jacked okay you're going to be learning so much from nas and daniel amazing instructors at clever programmer okay and what else are they going to learn as you're going to learn some react yes some javascript but probably also redux how to make money as a developer how to start up your career i mean guys for real you don't want to be missing out on this and it's free okay it's f r e e it is free you guys all five days you can join it and you can enjoy it you can learn together with the community and meet a lot of new people too you know that's why we want you guys to be positive you know because this community is about learning together and being positive okay guys i always say life's a gift so that's why you got to take it as it is and make the best out of it yes you know that's basically what it is so aisha i hope that answers your question please come around we love seeing you there and of course everybody else too very very welcome i hope you guys loved this pinterest clone by the way that was so much fun can we get some more likes that's when we get some guys so we're currently 784 likes let's get it to 20 it's 16 more likes just 16 60 more and when we get to 800 then we say we're done so that's it and we got a special yeah and then what's say we're done then and then we celebrate and then we all go home so everybody hit the like button subscribe for more videos like this okay let's get this to 800 we are currently at 7.85 let's go 800 guys so close so close let's get to 800 guys trust me you want to create this it's just as simple as just you just scroll down you use the button click cursor pointer you scroll down that's it now guys look at this so many students from pwj by the way in the house thank you funny thank you joe for coming by amazing oh man that's so cool though 791 guys only nine more to go come on and guys like i said i'm very proud of we just did right this is an amazing picture school i cannot wait for us to to build more on top of this and see what we can take out of this right it's pretty insane pretty insane so let me see we're calling seven likes 78 798 likes hold on 7.98 come on come on come on 797 come on only one more to go 800 likes let's go thank you guys you guys are wrapping thank you so much thank you so much all right guys have yourself an amazing day we will see you in the next video chill out byebye love you all bro
