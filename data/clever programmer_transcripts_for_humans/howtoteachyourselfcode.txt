With timestamps:

00:00 - - Okay, so I'm gonna give you the benefit
00:01 - of the doubt, 'cause I don't
think that you're stupid.
00:04 - Looking up something like how
to teach yourself to code,
00:06 - there are a million resources.
00:08 - I'm sure you were able to find some.
00:09 - But that's also exactly the
problem, because there is
00:12 - an overwhelming amount
of information out there.
00:15 - I'm gonna guide you through
00:16 - all of the stuff that's not good versus
00:19 - the stuff that's actually really useful.
00:21 - That's what's gonna be
covered in the video today.
00:24 - (synth blares)
00:26 - (audio distorts dramatically)
00:31 - Hey guys, what's up?
00:32 - This is Qazi from
00:33 - CleverProgrammer.com.
00:34 - Let's talk about how
to teach yourself code.
00:38 - Now, teaching yourself how to code
00:40 - is very difficult.
00:42 - The number of resources
out there is actually
00:46 - just totally overbearing and overwhelming.
00:49 - You have, like, a myriad of resources
00:53 - as soon as you search for
anything related to code.
00:56 - Codecademy.com pops up.
00:58 - Udacity.com pops up.
01:00 - Coursera.com pops up.
01:02 - edX.com pops up.
01:04 - And oh, my god, Team Treehouse,
01:07 - teamtreehouse.com pops up.
01:10 - So, you really have a
million resources out there
01:14 - where you can actually go and
learn computer programming.
01:19 - So I guess you don't need
to watch this video anymore
01:21 - because I just gave you
all of the resources.
01:23 - I'm just kidding.
01:24 - The point is that, even
with all of these resources,
01:28 - you want to narrow down your learning,
01:31 - because a very common
problem that people face
01:34 - is actually something
called a learning binge,
01:38 - which is great, because that's
something that I always do.
01:42 - I'm like, oh, I wanna learn
this, and I wanna learn that.
01:44 - There are like so many
different programming languages
01:46 - out there, and there's so
many different resources.
01:48 - I wanna be enrolled in all of them.
01:50 - I want to be subscribed
to all the podcasts
01:53 - and all the blog posts,
01:54 - and just kind of have a fire hose
01:58 - and have it be directed at my brain
02:01 - to the point where even
if it's not making sense,
02:03 - I would try to keep going.
02:06 - But my point here is to kind of
02:07 - guide you through all of that.
02:09 - Now, at this point,
you might be wondering,
02:12 - who is this guy, and why
should I follow his advice?
02:17 - I am somebody who has
actually been through
02:21 - a lot of these, so what I wanna do is...
02:24 - Kind of cut through the crap and get you
02:27 - the right information
so you can get started
02:30 - without being overwhelmed
02:32 - by the number of options.
02:33 - If you guys look up Codecademy Python,
02:37 - my videos are ranked number one,
02:40 - so I have been through Codecademy.
02:43 - As a matter of fact,
I've been through it all.
02:46 - I have certifications
from Coursera University,
02:49 - or Coursera, the MOOC,
02:52 - on Udacity.com,
02:54 - I've completed the CS50 course on edX,
02:58 - and I have dabbled a little
bit in Team Treehouse.
03:01 - And I have done a bunch of other stuff
03:04 - on, like, so many more websites
03:06 - related to computer programming.
03:08 - I also happen to be one
of the top instructors
03:11 - for computer programming at TakeLessons
03:14 - with over 30...
03:15 - (Qazi pops mouth)
03:16 - Testimonials.
03:18 - But, let's get done with this boring part.
03:25 - I have been through
it, and I wanna kind of
03:27 - help you out, narrow your path,
03:31 - focus your learning,
03:32 - so you can spend less time researching
03:35 - and more time actually learning.
03:37 - Okay, so, before I kinda
give you a good solution
03:41 - to a lot of these
problems, I wanna discuss
03:43 - some common problems that exist.
03:46 - So, number one is almost all
those other courses out there
03:52 - are boring as hell.
03:55 - They're made by somebody who's like,
03:58 - sitting behind a screen,
with a screen cast, and
04:02 - they're just like sitting there
and talking about something
04:05 - and they don't treat you
like you're a human being.
04:10 - Computer programming courses?
04:12 - Well, I'm sorry, guys, I take
that back, because this guy,
04:16 - he doesn't even know
the meaning of boring.
04:19 - All right?
(Qazi claps hands)
04:20 - So I'm super excited, okay guys, let's,
04:22 - let's check it out, all right?
04:24 - Let's check our this course, okay?
04:26 - Let's do it.
04:31 - (upbeat rock music)
04:33 - (Qazi snaps fingers)
04:40 - Damn!
04:42 - Did you guys see that intro?
04:45 - (Qazi slaps desk)
04:45 - Did you guys see that intro?
04:48 - What?
04:49 - Let's, let's check it out again.
04:51 - Let's check it out again.
04:52 - (upbeat rock music)
04:57 - Woohoo hoo!
04:58 - - Welcome to the R Programming Language.
04:59 - - Damn, boy!
05:01 - - I'd like to...
- That was smooth,
05:03 - that was real smooth.
- explain why I want
05:05 - my students to learn the
R Programming Language.
05:10 - Over the years, I have learned
and taught a great many
05:14 - computer languages, including
Fortran, Basic, Pascal...
05:20 - - So I hope you guys kinda get a sense
05:22 - of what I was talking about.
05:25 - Anyways, no videos like
these for you guys.
05:28 - He has a...
05:31 - 120,000 views!
05:34 - With 539 likes.
05:36 - What?
05:37 - 120,000 views, you guys!
05:39 - What?
05:40 - That's unbelievable.
05:42 - You want somebody to talk to you,
05:44 - guide you, and make you
go through that process,
05:48 - because especially when
you're starting out,
05:50 - that's what you need.
05:53 - I know that because that's what I needed
05:55 - when I was starting out.
05:56 - I needed somebody there to kind of almost,
05:58 - almost be there physically,
but that's impossible
06:01 - if you're trying to do
it through the internet,
06:02 - but there are ways somebody
can connect with you,
06:05 - and one good way is that
there's a human being
06:08 - treating you like a human being
06:10 - and not just hiding behind a screen cast
06:14 - and speaking to you in a very
monotonous and boring tone.
06:18 - So that is...
06:20 - One common problem in
a lot of these courses.
06:24 - Number two.
06:25 - These do not center around beginners.
06:28 - Okay?
06:29 - So a lot of these courses
will be called 101,
06:32 - even in courses in college
that are called 101
06:35 - a lot of the times, but they don't...
06:38 - Scale gradually.
06:40 - The scale is kind of like broken.
06:42 - It's almost like a stepwise
function in mathematics,
06:46 - which means that the lines aren't like,
06:48 - connected, and there's a gradual increase.
06:51 - It's kind of crazy, it's like...
06:52 - (Qazi mimics explosion)
06:53 - You know, it's like
exponential difficulty scale.
06:57 - So, they say they're
centered around beginners,
06:59 - but they take really a
lot of things for granted
07:02 - and skip over a lot of little steps
07:05 - which leave you frustrated,
and sometimes you think
07:08 - that you're dumb, because, again, I know,
07:11 - because I felt really stupid
taking a lot of these,
07:14 - either blogs, like,
following these blog guides,
07:17 - or following these videos.
07:19 - I would think, hey, maybe
I'm just really stupid
07:22 - and those things that
they're taking for granted,
07:24 - they're taking it for
granted for a good reason,
07:27 - and I should have just
known it in the first place.
07:29 - But it turns out that
that's not really true.
07:32 - They should teach you those things,
07:34 - because there's no other way
you would have learned them,
07:37 - and they shouldn't assume that,
07:38 - especially when you're starting out.
07:41 - So, that's one problem,
taking things for granted.
07:44 - Now I wanna talk about
problem number three.
07:48 - Feedback is slow as hell.
07:51 - Okay?
07:52 - So in most of these
courses that you're taking,
07:55 - you get stuck in a problem,
or you wanna try out
07:58 - some new idea that you came up with.
08:01 - But...
08:02 - Where do you get feedback for it?
08:04 - Well, the best solution
that you come up with
08:07 - after a lot of contemplation is, hmm,
08:10 - maybe I'll just post it in the forums.
08:13 - So then, you start thinking
about an intelligent way
08:16 - to put together the question,
08:17 - so that you can post it in the forums.
08:20 - Before you know it, a
half an hour has passed
08:23 - while you're trying to compose
this brilliant question,
08:26 - because, after all, you
don't want those snarky
08:29 - intelligent people on the
internet laughing at you.
08:32 - Do you?
08:34 - So, you do the next best thing,
08:36 - is you tell yourself,
wow, this has taken me
08:39 - way too long, and what
the heck was I even doing,
08:42 - thinking about posting
a question in the forums
08:45 - in the first place?
08:47 - Forget it.
08:48 - So you give up,
08:50 - and ultimately,
08:53 - you skip that part of the
course, and you move on.
08:56 - Well, what happens when you
08:57 - skip that part of the course and move on?
09:00 - You are missing a fundamental
piece of understanding.
09:06 - Everything that you learn after this
09:08 - is going to be much
weaker, and is going to...
09:12 - Basically not build itself on top of
09:16 - what you had previously learned,
09:17 - and therefore the new knowledge is...
09:21 - Really not going to be
any knowledge at all,
09:23 - and you're going to start
getting very confused
09:26 - with the more advanced
concepts, 'cause in the middle,
09:28 - your knowledge is very weak.
09:29 - And ultimately, what ends up happening,
09:33 - you actually quit the entire course.
09:35 - Okay guys, and this is
the horn tooting section.
09:40 - What does that mean?
09:42 - Well, it just simply
means that I'm about to
09:45 - toot my own horn, something
I don't like to do
09:47 - very much, but hey...
09:49 - When it's called for,
you gotta do it, right?
09:51 - You gotta step up to the occasion,
09:53 - and you gotta toot your horn.
09:56 - I took all of those things into account.
09:59 - The feedback being slow,
10:01 - the courses being extremely boring,
10:04 - the lessons not being
catered towards beginners,
10:06 - and I decided to build something
10:09 - that resolves all those problems.
10:12 - So I'm gonna show you guys
10:13 - just a little bit of a sneak peek
10:15 - into my own course.
10:17 - I've created my own coding
school called CleverProgrammer,
10:22 - and I want you to just take a look at it
10:25 - and see what you think.
10:27 - (Qazi claps hands)
10:28 - All right, so I wanna give
you a little sneak peek
10:29 - of my website.
10:30 - So you go to CleverProgrammer.com, okay?
10:33 - Now, let's say you go to
the Learn Python course.
10:38 - You have the entire
curriculum in front of you,
10:41 - okay, so you can do exercises,
you can go projects,
10:45 - or you can go step-by-step, linearly,
10:47 - how I have put it together for you.
10:50 - So, let's say you go
to Lesson Zero, right?
10:53 - It's a little bit slower,
10:55 - 'cause I'm doing a screen cast here.
10:57 - So, for example.
10:58 - Two questions.
10:59 - Why are you so beautiful,
11:00 - and what the heck was
I just talking about?
11:02 - Today, we're gonna learn
how to install Python
11:05 - in less than five minutes.
11:07 - So let's get started.
11:08 - (audio distorts dramatically)
11:09 - All right, super cool, cool
guy, with the cool intro,
11:13 - let's just watch the intro a little bit.
11:14 - (audio distorts dramatically)
11:15 - Super dope.
11:16 - But that's not what's important.
11:18 - What's important is that...
11:20 - When I'm talking about coding and Python
11:22 - and stuff like that, right,
11:23 - let's say that I'm doing...
11:25 - Five plus five is 10,
11:27 - 10 times 20 is 200?
11:29 - You could be like, right
here, and you can actually go
11:32 - five plus five, okay, and,
11:35 - for example, hit print,
put printer on and hit run,
11:39 - and you can actually see
on the right-hand side,
11:41 - it says 10, okay?
11:44 - You can do the same thing for 10 times 20.
11:47 - 10 times 20.
11:49 - Boom.
11:50 - You see that right there.
11:52 - So...
11:53 - You get to code,
11:55 - live,
11:57 - with me while watching.
11:58 - How cool is that?
12:00 - Right?
12:01 - You don't need anything installed,
12:03 - and you don't even need
to leave that space
12:06 - where the video is.
12:07 - You can actually be doing
that at the same time,
12:09 - while he's talking, or I'm talking,
12:10 - and you're actually coding.
12:14 - So, super cool, then you can
go and leave a comment below
12:18 - or whatever, right?
12:19 - That's pretty obvious.
12:20 - But now what isn't obvious is,
12:21 - let's say that you're watching this part,
12:23 - and you are stuck.
12:24 - You're like, hey, what is that thing
12:26 - that you just opened
with the black screen?
12:28 - I don't know what that is.
12:29 - You know?
12:30 - That's kind of confusing me.
12:32 - And so you just click this button,
12:34 - and you go,
12:36 - hey, what's that black thing
12:41 - with green letters?
12:43 - (notification dings)
12:44 - You're truly confused.
12:46 - And I go...
12:50 - Well, that's just the terminal, silly!
12:52 - So, that's so simple, right?
12:56 - But it gives you that immediate feedback,
12:59 - and it ends up being one
of the most powerful tools,
13:02 - and I have, as of now,
13:06 - this feature was
implemented fairly recently,
13:08 - but even up until now, I
have seen some tremendous
13:12 - benefits of this with students,
13:14 - and I'm getting countless
feedback from students
13:17 - telling me how much they love this feature
13:20 - and how much it's helping them, okay?
13:22 - So, check it out, test this out.
13:26 - Maybe this feature could be
helpful to you as well, okay?
13:30 - So that's a little bit of a sneak peek
13:32 - of my website.
13:35 - Hopefully you guys found
this to be beneficial
13:38 - and enlightening,
13:40 - and awesome,
13:41 - and the toot-horning list...
13:43 - (Qazi slaps hand to match each syllable)
13:44 - Goes on!
13:45 - These courses are
centered around beginners.
13:48 - So I actually start teaching you visually.
13:51 - I use a tool called
Turtle, which is a module,
13:54 - and it actually builds things
graphically as we learn them,
13:58 - so when I'm showing you the
process of looping over,
14:00 - we're actually making a
circle out of squares.
14:04 - This way, you're not like,
14:06 - oh, your answer was
supposed to be 87.69992.
14:10 - This way, if your turtle
isn't making a circle
14:14 - out of squares, then you
automatically know that
14:17 - your code is wrong, so you're
getting some fast feedback.
14:21 - Now, another most important
thing I wanted to share with you
14:24 - is three, feedback being extremely fast.
14:27 - You see that blue button
at the bottom right corner?
14:30 - Click that, and you can
speak to me directly,
14:32 - like we're text messaging,
like we're best buddies.
14:35 - Okay?
14:36 - I try to make it as simple as possible.
14:39 - You can almost think of it like a mentor
14:41 - being alongside you as you're learning.
14:44 - So, this is a very powerful tool
14:46 - that you guys can leverage
so you learn what you need
14:50 - when you need, okay, because that's key.
14:55 - So.
14:57 - I want you guys to sign up
for the Learn Python course
15:00 - if you're interested.
15:02 - Go to the school, check it out.
15:05 - Okay, so.
15:07 - Let's say that your goal
is not to learn Python.
15:10 - Let's say your goal is
not to learn anything
15:12 - that is on my website, or
you simply don't like me,
15:15 - whatever the reason may be,
15:18 - I wanna offer you something valuable.
15:21 - I wanna give you good resources
15:23 - and good places to get started off with.
15:25 - Maybe your choice of what
you're learning is different,
15:28 - so...
15:29 - If you want to start off with, let's say,
15:32 - web development, you want to
do things on the front-end,
15:36 - you want to do things on the back-end,
15:38 - and you wanna do stuff with HTML or CSS
15:41 - or JavaScript, why are you even here?
15:45 - You should be at Free Code Camp.
15:48 - Okay?
15:49 - Free Code Camp is an
unbelievable place to go to
15:53 - for learning all web development stuff.
15:55 - Web development, go to Free Code Camp.
15:58 - They will help you out, they
will help you build projects,
16:01 - they will help you build portfolios,
16:03 - they are absolutely great, okay?
16:06 - Back-end development, and
if you're starting out,
16:09 - again, my website is going to be
16:11 - a really good resource for you,
16:14 - because Python can be used
for the back end, okay,
16:18 - and it's a good language
to start off with,
16:21 - and if you guys haven't seen my video,
16:23 - What Programming Language
Should I Learn First,
16:25 - you guys should view that,
because it'll help you
16:28 - get an overall view of what...
16:32 - What's something that you
should start off with.
16:34 - And it'll tell you also
16:36 - about other programming
languages and their benefits.
16:39 - So, hopefully that gives you a little bit
16:42 - of a better view of how
to go about it, okay?
16:46 - Now, I wanna mention a few
resources for you guys.
16:50 - Coursera is a pretty good resource, okay?
16:54 - But my list, my order of the resources
16:57 - that I recommend them in,
16:59 - is if there's something on Udacity,
17:01 - you should go to Udacity
first, because Udacity,
17:04 - honestly, has the best
introductory courses.
17:07 - Why?
17:08 - They're very high-quality production,
17:11 - okay, and...
17:14 - They are very clear and to-the-point,
17:17 - but they're not rigorous.
17:18 - So they give you a little
taste of what's to come
17:20 - and what you can do, so...
17:23 - You can start learning about
those things in Udacity.
17:26 - And then you can take the next level
17:29 - of that course, say, at Coursera,
17:31 - where things are a
little bit more rigorous.
17:33 - So at Coursera, you
have a lot of deadlines,
17:36 - you have courses, it's a
little bit more academic,
17:40 - I would say, okay, but not like school,
17:42 - because school just
focuses on regurgitation
17:45 - and doing well on quizzes,
but it doesn't care about
17:48 - you remembering these things
and retaining this information,
17:51 - actually using this to get employed.
17:53 - Okay?
17:54 - So...
17:55 - Coursera's, that's not what
I mean when I said academic
17:58 - for Coursera, okay?
18:00 - What I just mean is that...
18:02 - Coursera is a little bit more structured.
18:06 - After Coursera, something
even more rigorous,
18:10 - but again, something, a very
valuable resource is edX.
18:13 - So if you wanna just take
it right to the next level
18:16 - from the get-go and you
wanna have quizzes and grades
18:19 - and instructors and all of
that, and a lot of rigor,
18:23 - go to edX, okay?
18:25 - That website has pretty rigorous courses,
18:28 - they're very intense, but you
will come out pretty good.
18:32 - But again, I want to emphasize
that you wanna make sure
18:35 - you're having fun the
entire time you're coding,
18:38 - because that's the number one factor
18:40 - in getting anybody good at something.
18:43 - You wanna make sure you're having fun
18:45 - while you're doing it, because eventually,
18:47 - you will quit if you don't.
18:51 - Like...
18:52 - Anybody who's rational
18:54 - won't do those things of crazy things.
18:57 - You have to have fun in a way
where it's irrational, right?
19:03 - Steve Jobs said something
along those lines.
19:08 - Because those guys wouldn't
be doing what they did
19:11 - if they didn't find it fun, okay?.
19:14 - So...
19:15 - With Udacity, Coursera,
and edX out of the way,
19:19 - there are some other resources
that are pretty cool,
19:22 - like Team Treehouse is another
resource that you can go to,
19:25 - but I cannot personally recommend
it, because I haven't...
19:29 - Used Team Treehouse.
19:30 - Anyways, guys, I appreciate you.
19:33 - I love every single one of you.
19:37 - Please.
19:38 - If you would so wish to remain on YouTube,
19:41 - go ahead and check out my Python tutorial.
19:45 - Go ahead and check out some recent stuff
19:48 - that's been going on, and
make sure you subscribe
19:51 - to the damn channel.
19:53 - And, of course, if you wanna enroll,
19:55 - here's the link again
for CleverProgrammer.com,
20:00 - and again, I love you guys,
20:02 - take care, I'm out.

Cleaned transcript:

Okay, so I'm gonna give you the benefit of the doubt, 'cause I don't think that you're stupid. Looking up something like how to teach yourself to code, there are a million resources. I'm sure you were able to find some. But that's also exactly the problem, because there is an overwhelming amount of information out there. I'm gonna guide you through all of the stuff that's not good versus the stuff that's actually really useful. That's what's gonna be covered in the video today. (synth blares) (audio distorts dramatically) Hey guys, what's up? This is Qazi from CleverProgrammer.com. Let's talk about how to teach yourself code. Now, teaching yourself how to code is very difficult. The number of resources out there is actually just totally overbearing and overwhelming. You have, like, a myriad of resources as soon as you search for anything related to code. Codecademy.com pops up. Udacity.com pops up. Coursera.com pops up. edX.com pops up. And oh, my god, Team Treehouse, teamtreehouse.com pops up. So, you really have a million resources out there where you can actually go and learn computer programming. So I guess you don't need to watch this video anymore because I just gave you all of the resources. I'm just kidding. The point is that, even with all of these resources, you want to narrow down your learning, because a very common problem that people face is actually something called a learning binge, which is great, because that's something that I always do. I'm like, oh, I wanna learn this, and I wanna learn that. There are like so many different programming languages out there, and there's so many different resources. I wanna be enrolled in all of them. I want to be subscribed to all the podcasts and all the blog posts, and just kind of have a fire hose and have it be directed at my brain to the point where even if it's not making sense, I would try to keep going. But my point here is to kind of guide you through all of that. Now, at this point, you might be wondering, who is this guy, and why should I follow his advice? I am somebody who has actually been through a lot of these, so what I wanna do is... Kind of cut through the crap and get you the right information so you can get started without being overwhelmed by the number of options. If you guys look up Codecademy Python, my videos are ranked number one, so I have been through Codecademy. As a matter of fact, I've been through it all. I have certifications from Coursera University, or Coursera, the MOOC, on Udacity.com, I've completed the CS50 course on edX, and I have dabbled a little bit in Team Treehouse. And I have done a bunch of other stuff on, like, so many more websites related to computer programming. I also happen to be one of the top instructors for computer programming at TakeLessons with over 30... (Qazi pops mouth) Testimonials. But, let's get done with this boring part. I have been through it, and I wanna kind of help you out, narrow your path, focus your learning, so you can spend less time researching and more time actually learning. Okay, so, before I kinda give you a good solution to a lot of these problems, I wanna discuss some common problems that exist. So, number one is almost all those other courses out there are boring as hell. They're made by somebody who's like, sitting behind a screen, with a screen cast, and they're just like sitting there and talking about something and they don't treat you like you're a human being. Computer programming courses? Well, I'm sorry, guys, I take that back, because this guy, he doesn't even know the meaning of boring. All right? (Qazi claps hands) So I'm super excited, okay guys, let's, let's check it out, all right? Let's check our this course, okay? Let's do it. (upbeat rock music) (Qazi snaps fingers) Damn! Did you guys see that intro? (Qazi slaps desk) Did you guys see that intro? What? Let's, let's check it out again. Let's check it out again. (upbeat rock music) Woohoo hoo! Welcome to the R Programming Language. Damn, boy! I'd like to... That was smooth, that was real smooth. explain why I want my students to learn the R Programming Language. Over the years, I have learned and taught a great many computer languages, including Fortran, Basic, Pascal... So I hope you guys kinda get a sense of what I was talking about. Anyways, no videos like these for you guys. He has a... 120,000 views! With 539 likes. What? 120,000 views, you guys! What? That's unbelievable. You want somebody to talk to you, guide you, and make you go through that process, because especially when you're starting out, that's what you need. I know that because that's what I needed when I was starting out. I needed somebody there to kind of almost, almost be there physically, but that's impossible if you're trying to do it through the internet, but there are ways somebody can connect with you, and one good way is that there's a human being treating you like a human being and not just hiding behind a screen cast and speaking to you in a very monotonous and boring tone. So that is... One common problem in a lot of these courses. Number two. These do not center around beginners. Okay? So a lot of these courses will be called 101, even in courses in college that are called 101 a lot of the times, but they don't... Scale gradually. The scale is kind of like broken. It's almost like a stepwise function in mathematics, which means that the lines aren't like, connected, and there's a gradual increase. It's kind of crazy, it's like... (Qazi mimics explosion) You know, it's like exponential difficulty scale. So, they say they're centered around beginners, but they take really a lot of things for granted and skip over a lot of little steps which leave you frustrated, and sometimes you think that you're dumb, because, again, I know, because I felt really stupid taking a lot of these, either blogs, like, following these blog guides, or following these videos. I would think, hey, maybe I'm just really stupid and those things that they're taking for granted, they're taking it for granted for a good reason, and I should have just known it in the first place. But it turns out that that's not really true. They should teach you those things, because there's no other way you would have learned them, and they shouldn't assume that, especially when you're starting out. So, that's one problem, taking things for granted. Now I wanna talk about problem number three. Feedback is slow as hell. Okay? So in most of these courses that you're taking, you get stuck in a problem, or you wanna try out some new idea that you came up with. But... Where do you get feedback for it? Well, the best solution that you come up with after a lot of contemplation is, hmm, maybe I'll just post it in the forums. So then, you start thinking about an intelligent way to put together the question, so that you can post it in the forums. Before you know it, a half an hour has passed while you're trying to compose this brilliant question, because, after all, you don't want those snarky intelligent people on the internet laughing at you. Do you? So, you do the next best thing, is you tell yourself, wow, this has taken me way too long, and what the heck was I even doing, thinking about posting a question in the forums in the first place? Forget it. So you give up, and ultimately, you skip that part of the course, and you move on. Well, what happens when you skip that part of the course and move on? You are missing a fundamental piece of understanding. Everything that you learn after this is going to be much weaker, and is going to... Basically not build itself on top of what you had previously learned, and therefore the new knowledge is... Really not going to be any knowledge at all, and you're going to start getting very confused with the more advanced concepts, 'cause in the middle, your knowledge is very weak. And ultimately, what ends up happening, you actually quit the entire course. Okay guys, and this is the horn tooting section. What does that mean? Well, it just simply means that I'm about to toot my own horn, something I don't like to do very much, but hey... When it's called for, you gotta do it, right? You gotta step up to the occasion, and you gotta toot your horn. I took all of those things into account. The feedback being slow, the courses being extremely boring, the lessons not being catered towards beginners, and I decided to build something that resolves all those problems. So I'm gonna show you guys just a little bit of a sneak peek into my own course. I've created my own coding school called CleverProgrammer, and I want you to just take a look at it and see what you think. (Qazi claps hands) All right, so I wanna give you a little sneak peek of my website. So you go to CleverProgrammer.com, okay? Now, let's say you go to the Learn Python course. You have the entire curriculum in front of you, okay, so you can do exercises, you can go projects, or you can go stepbystep, linearly, how I have put it together for you. So, let's say you go to Lesson Zero, right? It's a little bit slower, 'cause I'm doing a screen cast here. So, for example. Two questions. Why are you so beautiful, and what the heck was I just talking about? Today, we're gonna learn how to install Python in less than five minutes. So let's get started. (audio distorts dramatically) All right, super cool, cool guy, with the cool intro, let's just watch the intro a little bit. (audio distorts dramatically) Super dope. But that's not what's important. What's important is that... When I'm talking about coding and Python and stuff like that, right, let's say that I'm doing... Five plus five is 10, 10 times 20 is 200? You could be like, right here, and you can actually go five plus five, okay, and, for example, hit print, put printer on and hit run, and you can actually see on the righthand side, it says 10, okay? You can do the same thing for 10 times 20. 10 times 20. Boom. You see that right there. So... You get to code, live, with me while watching. How cool is that? Right? You don't need anything installed, and you don't even need to leave that space where the video is. You can actually be doing that at the same time, while he's talking, or I'm talking, and you're actually coding. So, super cool, then you can go and leave a comment below or whatever, right? That's pretty obvious. But now what isn't obvious is, let's say that you're watching this part, and you are stuck. You're like, hey, what is that thing that you just opened with the black screen? I don't know what that is. You know? That's kind of confusing me. And so you just click this button, and you go, hey, what's that black thing with green letters? (notification dings) You're truly confused. And I go... Well, that's just the terminal, silly! So, that's so simple, right? But it gives you that immediate feedback, and it ends up being one of the most powerful tools, and I have, as of now, this feature was implemented fairly recently, but even up until now, I have seen some tremendous benefits of this with students, and I'm getting countless feedback from students telling me how much they love this feature and how much it's helping them, okay? So, check it out, test this out. Maybe this feature could be helpful to you as well, okay? So that's a little bit of a sneak peek of my website. Hopefully you guys found this to be beneficial and enlightening, and awesome, and the toothorning list... (Qazi slaps hand to match each syllable) Goes on! These courses are centered around beginners. So I actually start teaching you visually. I use a tool called Turtle, which is a module, and it actually builds things graphically as we learn them, so when I'm showing you the process of looping over, we're actually making a circle out of squares. This way, you're not like, oh, your answer was supposed to be 87.69992. This way, if your turtle isn't making a circle out of squares, then you automatically know that your code is wrong, so you're getting some fast feedback. Now, another most important thing I wanted to share with you is three, feedback being extremely fast. You see that blue button at the bottom right corner? Click that, and you can speak to me directly, like we're text messaging, like we're best buddies. Okay? I try to make it as simple as possible. You can almost think of it like a mentor being alongside you as you're learning. So, this is a very powerful tool that you guys can leverage so you learn what you need when you need, okay, because that's key. So. I want you guys to sign up for the Learn Python course if you're interested. Go to the school, check it out. Okay, so. Let's say that your goal is not to learn Python. Let's say your goal is not to learn anything that is on my website, or you simply don't like me, whatever the reason may be, I wanna offer you something valuable. I wanna give you good resources and good places to get started off with. Maybe your choice of what you're learning is different, so... If you want to start off with, let's say, web development, you want to do things on the frontend, you want to do things on the backend, and you wanna do stuff with HTML or CSS or JavaScript, why are you even here? You should be at Free Code Camp. Okay? Free Code Camp is an unbelievable place to go to for learning all web development stuff. Web development, go to Free Code Camp. They will help you out, they will help you build projects, they will help you build portfolios, they are absolutely great, okay? Backend development, and if you're starting out, again, my website is going to be a really good resource for you, because Python can be used for the back end, okay, and it's a good language to start off with, and if you guys haven't seen my video, What Programming Language Should I Learn First, you guys should view that, because it'll help you get an overall view of what... What's something that you should start off with. And it'll tell you also about other programming languages and their benefits. So, hopefully that gives you a little bit of a better view of how to go about it, okay? Now, I wanna mention a few resources for you guys. Coursera is a pretty good resource, okay? But my list, my order of the resources that I recommend them in, is if there's something on Udacity, you should go to Udacity first, because Udacity, honestly, has the best introductory courses. Why? They're very highquality production, okay, and... They are very clear and tothepoint, but they're not rigorous. So they give you a little taste of what's to come and what you can do, so... You can start learning about those things in Udacity. And then you can take the next level of that course, say, at Coursera, where things are a little bit more rigorous. So at Coursera, you have a lot of deadlines, you have courses, it's a little bit more academic, I would say, okay, but not like school, because school just focuses on regurgitation and doing well on quizzes, but it doesn't care about you remembering these things and retaining this information, actually using this to get employed. Okay? So... Coursera's, that's not what I mean when I said academic for Coursera, okay? What I just mean is that... Coursera is a little bit more structured. After Coursera, something even more rigorous, but again, something, a very valuable resource is edX. So if you wanna just take it right to the next level from the getgo and you wanna have quizzes and grades and instructors and all of that, and a lot of rigor, go to edX, okay? That website has pretty rigorous courses, they're very intense, but you will come out pretty good. But again, I want to emphasize that you wanna make sure you're having fun the entire time you're coding, because that's the number one factor in getting anybody good at something. You wanna make sure you're having fun while you're doing it, because eventually, you will quit if you don't. Like... Anybody who's rational won't do those things of crazy things. You have to have fun in a way where it's irrational, right? Steve Jobs said something along those lines. Because those guys wouldn't be doing what they did if they didn't find it fun, okay?. So... With Udacity, Coursera, and edX out of the way, there are some other resources that are pretty cool, like Team Treehouse is another resource that you can go to, but I cannot personally recommend it, because I haven't... Used Team Treehouse. Anyways, guys, I appreciate you. I love every single one of you. Please. If you would so wish to remain on YouTube, go ahead and check out my Python tutorial. Go ahead and check out some recent stuff that's been going on, and make sure you subscribe to the damn channel. And, of course, if you wanna enroll, here's the link again for CleverProgrammer.com, and again, I love you guys, take care, I'm out.
