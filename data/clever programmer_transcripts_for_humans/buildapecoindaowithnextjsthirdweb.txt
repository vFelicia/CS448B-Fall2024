With timestamps:

00:00 - what if you wanted to build an app where
00:01 - your community has the voting power to
00:04 - make decisions so if you were between
00:06 - hiring an angular js developer or a
00:09 - react developer your community can
00:11 - actually help vote and not only that
00:13 - let's take it a step further people who
00:15 - had more coins in your community their
00:18 - vote actually held more weight in the
00:20 - decision-making process so let's say you
00:22 - ask your community hey should we hire a
00:24 - react developer and then john votes for
00:27 - that and john says you know what we
00:29 - should hire a react developer and john
00:32 - is somebody in your community that has a
00:34 - lot of coins so he's rich in your
00:36 - community and he makes a decision unless
00:38 - john has like 50 000 coins and then bob
00:41 - comes along and bob says i'm against
00:43 - react react sucks i'm voting against it
00:46 - but bob only has 5 000 coins in your
00:48 - community now who will
00:50 - win on that decision john would and
00:52 - therefore the proposal to hire a new
00:56 - react developer would actually go
00:57 - through and imagine even one step
00:59 - further
01:00 - that developer you wanted to hire
01:02 - automatically got paid as soon as that
01:05 - proposal went through
01:08 - now that is a power of web 3 and this is
01:11 - a technology that's shifting the world
01:14 - and this is powered by blockchain and
01:16 - i'm going to show you how you can build
01:18 - all of this even if you're a complete
01:19 - beginner and you've never done anything
01:21 - with web3 you're going to be able to
01:23 - build this and what gives you a lot of
01:25 - value as a developer is if you could
01:27 - build things like this or communities
01:29 - like this for other influencers other
01:31 - creators other celebrities and you can
01:33 - give them a community where their
01:35 - community has voting powers where people
01:37 - can actually earn
01:39 - coins to be able to make decisions and
01:41 - change things i mean tomorrow jay-z or
01:44 - rihanna could have a huge community
01:45 - where their people have a voting power
01:48 - this could monumentally shift the world
01:51 - and you are at the forefront of learning
01:53 - technology like this so with that said
01:56 - i'm excited smash that like button so
01:58 - this video goes out to as many people as
02:01 - possible and hey by the way if you don't
02:02 - know me i'm rafa qazi the ceo and
02:05 - founder of clever programmer i've helped
02:07 - millions of people learn how to code and
02:09 - my job here is to make you a better
02:11 - developer now let's get into a little
02:12 - bit of a deeper dive into this app so
02:15 - i'm going to open this app up this app
02:17 - is powered by next js i'm going to
02:20 - connect my wallet with the meta mask so
02:22 - i'm going to click that and i'll be able
02:24 - to actually log in
02:26 - now that i logged in you could see that
02:28 - it's showing me the front page with
02:29 - proposals i can make a proposal like
02:32 - higher next gs dev or higher angular dev
02:36 - and once i've made the proposal you can
02:38 - see it shows me against foreign abstain
02:40 - that just means hey somebody can vote
02:42 - you can vote for do you want to be
02:44 - against this or for this or do you want
02:46 - to not vote on this at all say i go
02:48 - ahead and i say i am for hiring in
02:51 - nextgs developer and now you could see
02:53 - that boom it's asking me to open up my
02:55 - meta mask i go ahead and confirm the
02:58 - transaction and once i do that
03:00 - you could see um all right this there's
03:03 - you know x amount of coins like 50 000
03:06 - coins or whatever delegated towards four
03:10 - okay so it's basically what it's doing
03:12 - is it's taking all of my uh coins in my
03:15 - wallet you know my ape coins or my
03:18 - developer dow coins or whatever right
03:20 - and it's delegating them towards the
03:22 - vote which means that if somebody else
03:24 - comes along and votes their vote will
03:27 - have more power you know if they have
03:29 - more money than me or more coins than me
03:32 - so how this works is whoever has the
03:34 - most coins their votes count higher okay
03:38 - so this way you have an incentive
03:40 - actually to earn points and credits
03:41 - inside of this community because the
03:43 - more coins you have the higher your
03:46 - voting power is therefore the more
03:48 - influence you can make inside of this
03:50 - community uh this app is powered by
03:52 - third web so a lot of the technology
03:55 - will be covered by third web and it'll
03:57 - make it really easy for us to access
03:58 - everything yeah so with that all of that
04:00 - said we're ready to pretty much get
04:02 - started here's what i want you to do go
04:04 - ahead and in the description below
04:06 - you're going to see a link that says
04:08 - join.replit.com
04:11 - cp
04:13 - dao so go ahead click that link below
04:16 - that'll take you to replit and then it's
04:18 - then go ahead and simply fork this repo
04:22 - or fork this ruffle it doesn't cost you
04:23 - anything it's completely free to fork
04:26 - and why i'm asking you to fork is
04:27 - because we're going to be giving away a
04:29 - ton of the assets for this build so for
04:32 - example we're giving away all of the
04:34 - front end the css html styling
04:38 - a lot of the react components because
04:39 - what i want to focus on is purely the uh
04:42 - web 3 part of this technology the
04:44 - blockchain part of this build okay so i
04:47 - don't want to focus too much on let's
04:49 - create these react components again for
04:50 - the 100th time right because we've done
04:52 - so much of that over the last few years
04:54 - so a lot of that front end is going to
04:56 - be given so when you fork that rublet
04:58 - you're already going to have access to
05:00 - all of the components etc and then what
05:02 - we're going to do is we're going to code
05:03 - everything step by step and the way that
05:05 - i've set it up for you there's exercises
05:08 - almost exercise like structure meaning
05:10 - there's going to be functions that are
05:12 - already there and then you're going to
05:13 - have to complete it and we'll complete
05:15 - it and walk through it together so my
05:17 - goal is that you get a ton of
05:19 - understanding of how this works you'll
05:21 - be able to hit run your app will run
05:22 - your functionality won't work yet
05:25 - because that's the part you're gonna
05:26 - have to add in and we're gonna add all
05:28 - of that part in
05:29 - from scratch so you will still
05:31 - understand and retain a lot that said
05:34 - i'm excited let's go ahead jump in and
05:37 - start coding this bad boy up all right
05:39 - so you can go ahead and name your fork
05:41 - whatever you want so i'm gonna call it
05:43 - instructor because this is gonna be mine
05:46 - you could go ahead and call it
05:48 - you know something completely different
05:50 - that's totally fine uh you could call it
05:52 - a project or you could just leave it as
05:54 - is that's fine too okay
05:56 - now
05:57 - once this is forked this is gonna be
05:59 - great we're gonna leave this alone now
06:02 - and what we're gonna do is set up
06:05 - because what we're gonna need is third
06:06 - web for this so let's go ahead and just
06:08 - set up third web real quick so we can
06:10 - make sure we can start building uh
06:12 - everything on here is completely free
06:14 - you could see third web is 100 free
06:18 - so click start all right and then we're
06:20 - gonna go ahead and click deploy new
06:23 - contract okay and before we do this here
06:27 - a couple of things you need to know
06:29 - make sure that in your meta mask you
06:31 - have
06:32 - uh your switch to
06:34 - the mumbai network okay and how you
06:36 - could do that is if you don't have that
06:39 - setup yet just in settings
06:41 - i mean if you don't have meta mask make
06:42 - sure you install and download metamask
06:45 - right that's step one but then you can
06:47 - go into advanced and you can go into
06:50 - networks show test networks and just
06:52 - turn that to yes
06:54 - okay so once you turn that to yes
06:57 - you'll be able to go and
06:59 - you'll be able to see all these networks
07:01 - i want you to switch to mumbai because
07:04 - rankaby will be deprecated soon so go
07:06 - ahead and do mumbai all right and now
07:08 - you should be in mumbai okay and then if
07:10 - you don't have matic we're gonna need to
07:12 - get you matic so just go ahead to mumbai
07:14 - faucet like that
07:16 - and then click here
07:18 - should bring you to this page
07:20 - and they just need your wallet address
07:22 - so
07:23 - click your metamask account
07:25 - click your wallet address and just copy
07:28 - it okay if you just click that button
07:29 - right there it'll copy it and paste it
07:32 - right here and hit send me matic okay
07:36 - for me since i've already asked it to
07:38 - send me matic it has sent me every 24
07:40 - hours or sorry it has sent me one
07:43 - but i requested it a few hours ago so i
07:46 - won't be able to get new one but if you
07:48 - put it in you will be able to get a new
07:50 - one
07:51 - okay and then you should have matic and
07:54 - you should be good to go on that end
07:56 - okay now going back to this app over
07:58 - here let's go back and see
08:01 - okay what it should say is you should
08:03 - have some amount of matic so you might
08:05 - have to wait for a little bit it might
08:06 - take a second so just be patient maybe
08:09 - give it a few minutes if it's taking
08:10 - long but at some point you should look
08:13 - and you should have matic okay you're
08:14 - gonna need that because otherwise you
08:16 - won't be able to deploy contracts and do
08:17 - the next parts we're gonna do okay so
08:19 - once we're done with that great go ahead
08:21 - and hit deploy new contract okay
08:25 - and then we're going to go ahead click
08:26 - pre-built contracts and it says what do
08:29 - you want to build
08:31 - so we want to build really two things
08:33 - one we want to build a token so our
08:36 - community can have money and token and
08:38 - all that and two we want to be able to
08:40 - build votes so
08:42 - then we can have actual proposals and we
08:44 - can have voting powers etc so we want to
08:46 - do it in that order let's go ahead and
08:49 - build out our tokens first and then
08:51 - we're going to do our governance and
08:52 - splits which is where our votes are
08:54 - going to be so let's click this
08:56 - and we're going to choose token and
08:58 - inside of our token i want to choose i'm
09:02 - going to give it a name
09:03 - okay so
09:05 - i can go ahead and call this the ape
09:08 - uh ap coin
09:10 - dao
09:11 - okay and you could give it whatever
09:13 - image you want so i'll probably choose
09:15 - some random image but you could give it
09:17 - an image of um
09:20 - you could give it whatever image you
09:21 - want
09:22 - well that looks like that has a little
09:24 - monkey in it so i'll just give it that
09:26 - you can you should give it like a
09:28 - actual
09:30 - dowel image so that looks you know look
09:32 - cleaner that way
09:34 - and
09:35 - i'll say the symbol is ape for this okay
09:38 - and now for recipient address that'll be
09:41 - your wallet address right over here so
09:43 - those should match
09:45 - and then
09:46 - the chain make sure you scroll down and
09:49 - you choose mumbai
09:51 - and you choose matic okay once you do
09:53 - that we're gonna go ahead and click
09:55 - deploy now
09:56 - that button right there the deploy now
09:58 - button
10:00 - okay now it pops up our meta mask
10:02 - so let's go ahead and hit confirm
10:05 - and we will hit confirm
10:07 - and once we're good on that it's going
10:10 - to take a second but it's going to then
10:11 - take us to the next page where it's
10:13 - going to say hey you're done building
10:15 - out your token okay
10:17 - once we're done building out our token
10:19 - all we need to do is make sure that we
10:22 - distribute this token and we give the ap
10:25 - coin to ourselves all right now it took
10:28 - a while but it popped just this up right
10:30 - here the second confirmation so i'm
10:33 - gonna go ahead and hit confirm
10:36 - okay and then once that's confirmed
10:38 - we're pretty much good to go okay so
10:40 - that's still gonna take maybe another
10:42 - minute or something right 30 seconds a
10:44 - minute let's just wait for it all right
10:46 - now you should see this screen where
10:47 - it's a successfully deployed contract
10:50 - you should see this if coin dao
10:53 - and go ahead and just hit copy here so
10:55 - when you click that it'll copy it to
10:56 - your clipboard so just make sure you
10:58 - copy to your clipboard you don't need to
11:00 - click it a hundred times like i did but
11:02 - i just did it for fun
11:03 - so make sure that that's copied you're
11:05 - gonna need that for later right now
11:07 - you'll see that the amount of coins that
11:09 - a coin has to in total is zero and owned
11:13 - by you is zero
11:14 - so we're gonna go ahead and mint so
11:16 - we're gonna distribute
11:18 - coins and you could give as much supply
11:20 - as you want so we'll just say that there
11:22 - are a total of one million coins
11:24 - i believe that's one million let's just
11:26 - see
11:27 - uh
11:28 - that's not okay there we go that should
11:31 - be good let's go ahead and mint tokens
11:34 - and now it should distribute about one
11:36 - million coins to this community and
11:40 - um i think in the start they're by
11:41 - default owned they have to be owned by
11:43 - somebody so they'll just be owned by you
11:46 - and the start
11:48 - we can make another uh wallet and we can
11:50 - send some to another wallet as well
11:53 - okay now we wait all right now it says
11:56 - at the bottom tokens minted successfully
11:58 - so go ahead and refresh this page now
12:02 - and pretty soon it should show that
12:05 - there are 1 million coins in total
12:06 - supply 1 million are owned by you so
12:10 - let's go to our meta mask wallet and now
12:12 - here's what i want you to do in assets
12:14 - you see where i have ape you won't have
12:17 - that there okay so in order to get that
12:19 - to show up you're gonna need to click
12:21 - where it says import tokens so go ahead
12:24 - and click import tokens paste that
12:27 - contract address from here
12:29 - it will automatically say hey that's ape
12:32 - whatever hit add custom token and hit
12:35 - import tokens okay and now you got all
12:38 - of those okay so you just got all of
12:40 - these ape tokens okay
12:42 - i don't need this one so i'll hide
12:45 - hide this one for now there we go so
12:47 - this is the one that we just got okay
12:50 - so you have one million tokens here now
12:52 - if i had another um i can send these
12:55 - tokens to another person as well so for
12:57 - example say i go to this other account
12:59 - that i have
13:01 - bts cp2 okay that's my second account
13:05 - you could call it whatever you want
13:07 - okay you just make your own account
13:09 - and let's send it to this address so
13:11 - copy the address of the second account
13:13 - go back to your first account hit send
13:17 - paste the address of that and we're
13:19 - gonna send it ape
13:21 - so i'm gonna send it
13:23 - let's say three hundred thousand
13:26 - eight
13:27 - okay let's hit next and
13:29 - let's hit confirm okay
13:32 - now our meta mask is sending it and
13:33 - remember all of this is happening over
13:35 - the test network right so this is
13:37 - obviously none of it is real
13:39 - money just yet because you should build
13:41 - your apps on tests and then you should
13:43 - take them out to
13:44 - the um if you know final versions i'm
13:48 - just going to click speed up because
13:49 - this is fake money
13:51 - so i can just keep spending it to speed
13:53 - up the process you could hit speed up
13:55 - and hit submit and what that will do is
13:57 - speed up the process so it happens
13:59 - faster now let's go ahead and i have
14:02 - seven hundred thousand eight coins left
14:05 - okay and the confirmation is here that
14:08 - it has been sent
14:09 - so let's go back to bts cp2 my second
14:12 - account and let's also import this
14:15 - contract address so let's go ahead copy
14:17 - this
14:18 - uh okay let's copy this
14:20 - let's go ahead hit import tokens let's
14:22 - import the token
14:24 - all right
14:25 - ad
14:27 - yep
14:28 - if it doesn't know what the decimal is
14:30 - just put 18
14:31 - we'll hit add import tokens
14:34 - there we go
14:36 - okay
14:36 - so now the 300 000 has been sent
14:40 - let's go to our account
14:43 - cool so now you can see that our account
14:46 - one has seven hundred thousand and when
14:47 - i switch this account to account two
14:49 - that has three hundred thousand so now
14:52 - inside of our third web i can see okay
14:54 - this is my total supply this is a total
14:56 - supply and this is what's actually owned
14:58 - by me
15:00 - okay so
15:02 - there you go so that's all good now the
15:05 - next thing we need to do is we need to
15:06 - deploy a voting contract okay so let's
15:09 - go ahead
15:11 - and let's go back to our app so i'm
15:14 - gonna click this home button right here
15:17 - okay and um
15:19 - now we're gonna go ahead and create a
15:21 - new
15:23 - dow
15:23 - okay so we've made a coin now
15:27 - we're sorry we just made
15:30 - uh apecoin
15:32 - so i just removed all the other
15:34 - contracts because i wanted to make your
15:36 - life simpler so it's easier to
15:37 - understand follow this tutorial
15:39 - so you should only have essentially one
15:44 - contract in here
15:45 - and right now that should just be your
15:48 - type token okay so this is not gonna be
15:50 - the voting one it's just gonna be your
15:53 - token okay so this is your coin this
15:56 - this is a contract address right there
15:58 - all right now we're going to go ahead
16:00 - and deploy a new contract
16:02 - and we're going to choose pre-built
16:04 - contracts we're going to go ahead and go
16:06 - government governance and splits
16:09 - let's go ahead click vote
16:11 - and then here we're going to call it
16:12 - ipcoin
16:14 - dao
16:16 - vote
16:18 - okay now it's going to ask for the token
16:21 - address you can paste the token address
16:24 - from your coin okay if you lost it
16:28 - go back and copy it
16:30 - but that's the token address you need
16:32 - that you you had earlier for voting
16:34 - period i'm gonna just choose 60 because
16:36 - it takes two seconds for every block
16:39 - this is 60 blocks so that basically
16:41 - means the voting period will last
16:42 - roughly two minutes long okay so that's
16:45 - basically what i'm saying there
16:47 - and then vote in quorum we'll leave this
16:49 - as zero
16:51 - and we'll leave voting delay at zero as
16:54 - well
16:55 - okay
16:56 - all right
16:58 - and then other than that everything else
16:59 - is good
17:00 - and then we have our
17:02 - mumbai matic
17:04 - chain make sure this is the chain you
17:06 - chose and then just go ahead and click
17:08 - deploy now so pretty soon this should be
17:10 - all set up and then we'll be coding okay
17:12 - well but we just got to get this all set
17:14 - up and then we're ready to code so hit
17:16 - confirm
17:18 - and then just wait
17:20 - might take a couple of seconds might
17:21 - take a few minutes but
17:23 - you know this is the web 3 world so
17:25 - sometimes you have to wait a little bit
17:26 - okay you're going to get used to that
17:29 - but in the future you know obviously
17:31 - they're going to make all of this much
17:32 - faster and
17:33 - you'll be able to get through it but
17:34 - right now it takes long because
17:37 - it has a lot of security mechanisms and
17:39 - features built into it
17:41 - so
17:42 - that ends up taking a second all right
17:45 - there we go so our contract is
17:47 - successfully deployed as you can see at
17:48 - the bottom
17:50 - and now it just says hey for your voting
17:52 - thing you're gonna need to delegate some
17:54 - stuff okay delegate to create your own
17:56 - proposals
17:58 - or vote on other proposals so i'm just
18:00 - going to go ahead and hit delegate
18:01 - tokens
18:03 - okay
18:04 - and then it will pop this thing up right
18:06 - here and hit yes all i'm saying is my 70
18:09 - 000 or 700 000 that i have yes i want
18:12 - that to be delegated towards voting
18:15 - now that doesn't mean i'm going to lose
18:17 - my 700 000 doesn't mean that at all i
18:19 - still keep all my 700 000 coins it just
18:22 - means that when i vote
18:24 - i am voting with the full power of my
18:27 - seven hundred thousand coins okay so
18:29 - that's all that delegating token means
18:31 - and now that i'm done with that the
18:34 - delegation is completed okay
18:36 - um well let's actually just see if it's
18:38 - actually completed or not so i'm gonna
18:40 - click meta mask you can see it's pending
18:41 - here so i could hit speed up hit submit
18:45 - and then it'll happen a little bit
18:47 - faster but it's cued right now
18:49 - and then
18:50 - once it's actually fully done when you
18:52 - hit refresh on this page it won't bother
18:54 - you about that delegation anymore okay
18:57 - so right now i can still see it's
18:58 - pending
18:59 - and it'll take a few seconds i imagine
19:02 - okay so let's wait for this all right
19:04 - now my delegation is complete i can
19:06 - confirm that from a meta mask that
19:08 - delegation has happened
19:10 - and i can see my balance here and that
19:12 - weird orange
19:14 - error message or whatever is not showing
19:16 - up anymore so that's a really good sign
19:18 - okay
19:19 - and this is our
19:21 - ape dow vote um coin address we're gonna
19:24 - need this later for now let's just
19:26 - simply head to our home page
19:28 - and you should be seeing these two
19:30 - contracts you've created
19:33 - so one should be a token and one should
19:35 - be a vote
19:36 - both of them should be on the mumbai
19:38 - testnet
19:39 - and then their contract addresses should
19:41 - be right here so you're going to need
19:42 - this later to copy this contract
19:45 - addresses and use them with that said
19:48 - ready to go back to our app and start
19:50 - coding
19:51 - all right so this is where you should be
19:53 - at right now let's just go back to our
19:55 - app
19:56 - and you should just be seeing it says
19:57 - apecoin dao and then it should say
19:59 - connect with metamask if you try to hit
20:02 - connect with metamask right now you're
20:03 - going to run into an error because we
20:05 - haven't connected anything
20:07 - um because the front end is there but
20:09 - the app is completely broken right now
20:12 - okay so we're going to go ahead and
20:13 - build it out step by step the first
20:15 - thing we're going to do is we're going
20:16 - to wrap this entire app in a third web
20:19 - provider
20:20 - okay so i'm gonna go ahead and and just
20:22 - so you can get the lay of the land
20:24 - before i even continue moving further
20:26 - okay
20:27 - uh you'll notice that index tsx like the
20:31 - basically this index file and it's just
20:33 - a next file so you could write regular
20:35 - next code here you should be fine okay
20:38 - all of this is already completed for you
20:41 - okay if you go to public or you go to
20:42 - styles all the styles here are done
20:45 - ahead of time for you if you go to next
20:48 - config that's already handled for you
20:52 - all packages and everything you need to
20:54 - install are already installed for you so
20:56 - you'll see on the left hand side they're
20:57 - all installed that you need like
21:00 - toastify
21:01 - react third web react third web sdk all
21:03 - of that everything is here free okay
21:06 - so we've set up this
21:07 - repel
21:08 - in a way where you have access to
21:11 - everything that you need i'm just gonna
21:13 - make the font size bigger so it's easier
21:15 - for you to see
21:17 - all the code okay
21:19 - so there you go so you have already
21:22 - access to pretty much everything okay
21:24 - let's go like this
21:26 - now
21:27 - inside of
21:29 - the main thing and components right
21:31 - we're giving away the header component
21:33 - we are giving away the
21:37 - so you know what's the header component
21:38 - so we're giving away this header
21:40 - component
21:41 - we're giving away all of this this the
21:44 - design for this the components that make
21:46 - up that right the proposal card
21:48 - component the login component this
21:50 - component right here okay all of that is
21:53 - given away
21:54 - in the front end and there's not crazy
21:57 - amount of complexity going on there okay
21:59 - this is something you
22:01 - you can kind of grasp your mind around
22:03 - or you could look at previous videos and
22:05 - see how we've done this so you should be
22:07 - good there now what we're actually going
22:10 - to be coding is if you go into your app
22:12 - tsx we're going to wrap this in the
22:14 - third web provider so we're going to be
22:15 - focused just on the web 3 logic
22:18 - okay
22:19 - now
22:20 - let's go ahead and
22:22 - think through this right now what i want
22:23 - to do is i want to wrap the entire app
22:25 - up
22:26 - inside my third web provider
22:29 - in order to do that i'm going to go
22:31 - ahead and say import and we'll say chain
22:35 - id
22:37 - and also third web provider third web
22:41 - provider okay and we're gonna say from
22:45 - i said third web dev slash react
22:49 - okay so we're gonna get chain id and
22:50 - third web provider now we're gonna wrap
22:53 - our entire app up inside of that the web
22:55 - provider so i'm going to go here and i'm
22:56 - going to say third web provider and
22:59 - we're going to give it a desired
23:02 - chain id okay
23:04 - now
23:05 - on line six you could see it says a
23:06 - comment here it says this is a chain id
23:08 - your dap will work on so let's head go
23:11 - ahead and set up our active
23:13 - chain id
23:15 - and i'm going to say chain id dot
23:17 - rinkeby and let's say
23:19 - const right there okay so basically i am
23:24 - from our chain id oh let's go ahead and
23:26 - go small c here from our chain id
23:29 - actually it's a capital c that we're
23:31 - importing capital c here
23:33 - we'll go capital c here
23:36 - okay so now we're importing rinkeby
23:42 - that will get us access to the ranking
23:44 - network make sure you do it with a
23:45 - capital r
23:46 - okay there we go
23:48 - so we're gonna say our desired chain id
23:51 - is this and we're gonna put it in
23:53 - squiggly so it knows we're referring to
23:56 - uh some
23:58 - javascript here active chain id
24:01 - and then we're gonna have to close our
24:02 - third web provider so we're going to go
24:04 - ahead and say
24:06 - third web provider just like that i'll
24:07 - format the code
24:10 - and so there you go okay now our app is
24:13 - wrapped inside of the third web provider
24:15 - so the entire app has access to third
24:18 - web so that'll be able so that'll make
24:20 - it easy for us to log in and anywhere we
24:22 - need third web data we can get it
24:25 - okay great
24:27 - so let's go ahead and save and
24:30 - it sometimes takes a second this page to
24:32 - load okay but once it is loaded you will
24:36 - see the home page
24:38 - showing up here
24:39 - but uh rinkybee is deprecated so we
24:42 - won't be using this we will be using in
24:44 - place of rinkaby we'll be using mumbai
24:47 - so let's go ahead and see if it has
24:48 - mumbai it seems like it does
24:51 - and
24:52 - that's what we're going to pass as our
24:53 - desired chain and that's going to be our
24:55 - active chain id all right guys so now
24:58 - we're going to transition into adding
24:59 - the authentication functionality into
25:01 - our app so what i want you to do
25:04 - is go ahead to
25:07 - this file in go to the folder context
25:10 - and go to context
25:12 - dot js go to this file right over here
25:15 - all right so one shot one note that you
25:18 - should know about is this context.js
25:21 - you probably saw on my screen there was
25:23 - solution.js
25:25 - but that file is supposed to be hidden
25:27 - so in yours you wouldn't see it you guys
25:30 - wouldn't see that okay because we're
25:32 - hiding the solution file from you if you
25:33 - want to see it click this hit show
25:36 - hidden files and it'll show you
25:37 - everything including the solution but i
25:39 - only recommend looking at that if you're
25:41 - really really stuck and can't get past
25:43 - it okay but the solution is there for
25:44 - you the whole time all right so now we
25:47 - have imported some of these files from
25:49 - third web sdk which you're going to need
25:51 - later so for example we need this use
25:54 - vote hook this use token hook use
25:56 - address use meta mask and use disconnect
25:59 - okay for now i don't want you to worry
26:01 - about these two
26:03 - i only want you to worry about these
26:06 - three
26:07 - we're going to use these three hooks
26:08 - right here
26:09 - to make sure that our connect wallet
26:12 - button is working okay so the connect
26:15 - wallet button is when you start your app
26:17 - and you have the connect wallet button
26:18 - show up on your right hand side this one
26:20 - we're just gonna go ahead and make that
26:22 - functionality work okay
26:24 - so in order to be able to do that by the
26:26 - way we have some notes here for you too
26:28 - so if you wanted to attempt this on your
26:29 - own right all the notes are there for
26:32 - you and what each function should do the
26:34 - bodies of the function are written
26:36 - make sure you don't change the bodies of
26:38 - the function they're i'm sorry
26:40 - make sure you add stuff to the bodies of
26:42 - the function but don't change their
26:43 - names because all their names are
26:45 - important and they're being referenced
26:47 - in other files and so if you like change
26:49 - the name or you make it lowercase or
26:51 - uppercase or whatever
26:53 - this create proposal function will not
26:55 - work and then you'll have to go in other
26:56 - files and make it work okay so just keep
26:59 - these variable names as they are all
27:01 - right so we've imported all of this
27:04 - stuff now let's go ahead and
27:07 - and add it so we're going to add this
27:09 - disconnect wallet and then connect with
27:11 - metamask all right here you can see this
27:14 - uh note that says get the address using
27:16 - third web's convenient hooks so i'm
27:18 - gonna remove where it says true
27:22 - and we're just gonna go ahead and say
27:25 - use
27:26 - address all right next up for connect
27:29 - with the meta mask we're gonna use the
27:31 - hook that we got from up here from third
27:33 - web sdk
27:35 - and we're gonna go ahead and say
27:38 - use
27:39 - meta mask
27:40 - okay and that will give us access to
27:43 - metamask and then we're gonna also
27:45 - disconnect wallet and so we're gonna use
27:47 - the use disconnect hook here okay so now
27:50 - our address is set our connect
27:52 - meta mask is set and disconnect wallet
27:54 - is set now what we have to do is we have
27:56 - to go down and we have to export all of
27:58 - these luckily
28:00 - our exporting is already done so
28:02 - normally you would have to export this
28:04 - okay you'll have to make sure that you
28:06 - say connect with metamask disconnect
28:08 - wallet and address all right so what
28:09 - we're going to do is technically this
28:12 - address that we have here is really the
28:13 - current user address okay whoever the
28:16 - current logged in user is so i'm just
28:18 - gonna go ahead i'm gonna right click
28:20 - this too and rename all references and
28:22 - i'll say current
28:24 - user address all right now just double
28:27 - check if you scroll down and make sure
28:30 - that
28:31 - current user address is right here as
28:33 - well and um so we're we're giving this
28:35 - off to our
28:37 - context provider okay
28:39 - and if i go to my context
28:42 - if i go outside of my context now to my
28:45 - login file so let's go to
28:47 - components and i'll go to my login.js
28:49 - component you can see that login is
28:52 - already destructure and connect with
28:54 - metamask so that's the one that we
28:56 - provided it it's getting it from our
28:58 - context and then down here you can see
29:00 - that on click we're giving it that
29:03 - connect with meta mask button now what
29:05 - we're going to do if we want to test
29:06 - this out and run this now metamask
29:08 - sometimes doesn't like working from an
29:10 - iframe so meaning within this window
29:12 - right so what we're going to do is we're
29:14 - going to hit that new tab at the top
29:16 - right this is opening a new tab so we'll
29:18 - open this up okay and let's try running
29:20 - this and let's see what happens and if
29:22 - you're wondering what the hell is
29:23 - happening with qazi's shirt that's just
29:25 - because it's a green shirt and i have a
29:27 - green screen behind me and so it thinks
29:30 - i'm not really wearing anything okay
29:32 - we'll wait for this app to load and then
29:34 - as soon as it loads we'll hit that
29:35 - connect button
29:37 - all right so if we have done everything
29:38 - correctly fingers crossed
29:40 - didn't mean to print that oops fingers
29:43 - crossed if i hit connect with meta mask
29:45 - my meta mask should pop up at the top so
29:48 - let's see connect with metamask boom
29:50 - there you go it's showing that i'll hit
29:52 - next connect
29:55 - and something should happen great so now
29:57 - we're getting an error which is totally
29:59 - okay okay we just all we're trying to
30:01 - make work right now is a connect wallet
30:03 - okay so there's some other part of the
30:05 - app that's complaining that's fine we're
30:07 - going to fix that
30:08 - no problem all right so now that we've
30:10 - connected the wallet with this connect
30:13 - with metamask that we added to our
30:15 - context.js
30:16 - now we should actually be able to go to
30:18 - the deployed version of the app so make
30:20 - sure you don't do it in preview because
30:21 - that won't work so go here and now we
30:24 - should be able to hit connect with meta
30:26 - mask and our metamask boy thing should
30:29 - pop up okay boom right there
30:31 - let's click that and connect
30:34 - boom look at that it brings me straight
30:37 - to the home page of the website right
30:40 - and i can see
30:42 - if coin down
30:43 - make a proposal and it's giving me
30:47 - uh
30:47 - whether it's against for or abstain
30:50 - how much has been against for or
30:53 - abstained and then a way to disconnect
30:55 - my wallet now this over here that you're
30:58 - seeing you can notice that there's a
30:59 - text in here and it says it's a dummy
31:01 - proposal okay so this is fake dummy data
31:05 - that we have hard coded for you so you
31:08 - could
31:08 - just see what it looks like but then
31:10 - what we're going to do in our next steps
31:12 - is we're going to auto populate it
31:13 - populated with actual data right so for
31:15 - example if i show you this if we go to
31:17 - our index.js you could see i have this
31:20 - state variable here called dummy data
31:22 - and inside of dummy data i have who the
31:24 - proposer is okay and i gave it a wallet
31:26 - address i'm telling it what the votes
31:29 - are right so you could see 30 thousand
31:32 - forty uh thirty thousand four hundred
31:34 - forty three
31:35 - right and then four
31:37 - has forty three thousand and you can see
31:39 - that four here has forty three thousand
31:41 - uh abstain has thirty four hundred which
31:44 - is right there so we're clearly pulling
31:46 - this from the dummy data and the dummy
31:48 - data is inside of our index.js all right
31:51 - so if we go back to our code and we go
31:53 - back to our login page okay you can see
31:58 - that we have given our connect with
32:00 - metamask but
32:02 - something else that we've actually done
32:04 - that's really cool
32:05 - if we go to i believe our index and we
32:09 - scroll down
32:10 - actually let's go to our header so let's
32:12 - get out of pages let's go to header.js
32:14 - and inside of header you're going to see
32:17 - that we have
32:18 - the disconnect button right and
32:21 - since you added it to context you can
32:24 - see we're getting our disconnect wallet
32:26 - from our context and right over here
32:29 - we're giving it to our on click so now
32:31 - when you actually click this disconnect
32:33 - wallet
32:35 - you'll get disconnected as well all
32:36 - right let's go ahead and hit disconnect
32:38 - wallet
32:39 - and first let's go ahead and just
32:41 - refresh the apps to make sure that all
32:43 - of our current changes are up to date
32:45 - all right so we're going to go ahead and
32:47 - hit that disconnect wallet button
32:50 - okay so
32:51 - i'm clicking it but nothing is really
32:53 - happening so give me one second here
32:55 - let's try it one more time
32:57 - boom there you go i hit disconnect
32:59 - wallet and you can see it's disconnected
33:01 - the reason why it's working is if you go
33:03 - to your header
33:04 - in your components you'll see we're
33:06 - already extracting disconnect wallet
33:09 - and then we're saying hey if the
33:10 - disconnect wallet function is there
33:12 - then on click disconnect the wallet
33:15 - otherwise just console log disconnect
33:17 - button clicked okay so in our case we do
33:20 - have access to it so then let's go ahead
33:22 - connect with
33:23 - blah blah let's hit disconnect and boom
33:25 - you see it just disconnects you right
33:27 - away all right so here's what we're
33:28 - gonna do let's go back to our third web
33:31 - dashboard
33:32 - and we're gonna go ahead to our
33:35 - a coin down vote that you created
33:37 - earlier
33:38 - and let's go ahead at the top right you
33:40 - see where it says create proposal click
33:42 - that so we're going to create a proposal
33:44 - and we're going to say uh we're going to
33:45 - say hire a
33:48 - reactions developer okay so i'm gonna
33:51 - make submit this proposal and then
33:53 - metamask is gonna pop up and it's gonna
33:55 - show me this i'm gonna go ahead and hit
33:57 - confirm okay
33:59 - then it's gonna okay let's see we've
34:02 - gotten an error all right so there you
34:04 - go my proposal is created successfully
34:07 - all i did is i just removed the emoji
34:09 - maybe it has problems when you do it
34:10 - with an emoji so if it failed for you
34:12 - like it failed for me the first time
34:14 - just do this and you should be fine now
34:16 - we have one proposal created already all
34:18 - right so now that we have this in here
34:20 - let's go back to our app and we're gonna
34:22 - try to actually pull all of this
34:24 - data and how we're gonna do this is
34:27 - inside of our let's go back to our
34:30 - context so inside of our context
34:33 - let's go down we're going to go ahead
34:35 - and get all of the proposals here
34:38 - okay
34:39 - and i'm going to say
34:41 - for getting all the proposals i'm going
34:42 - to say cons proposals and in order to
34:45 - get my proposals
34:47 - okay
34:48 - what i need to do is i need access to my
34:51 - contract address for voting so i need
34:54 - access to
34:55 - the voting contract address so how i'm
34:58 - going to do that is let's click to our
35:00 - home page and let's copy this vote
35:02 - contract address and so i'm gonna now
35:06 - go up top
35:07 - right here
35:09 - where we have let vote and i'm gonna now
35:12 - say
35:13 - use
35:15 - vote
35:16 - and i'm going to pop in that contract
35:18 - address now this use vote hook we've
35:20 - already used pulled it from here and you
35:23 - can see we have a used token hook as
35:25 - well okay
35:26 - so
35:27 - i'm now going to go ahead and save
35:29 - proposal is equal to await
35:31 - vote.getall so this will get all of my
35:34 - votes
35:35 - and then we can console log these
35:38 - proposals and then we can also simply
35:41 - return them all right now so watch this
35:44 - if everything you've done correctly here
35:48 - if you go to your app it should
35:50 - automatically
35:53 - pull your proposal and if you actually
35:55 - see
35:56 - it already is look at that
35:59 - it's pulling your proposal from the
36:01 - proposal that you've created right so
36:03 - for example if i go here i can see
36:05 - higher react.js developer
36:07 - and it's actually pulling it so that is
36:10 - fantastic i mean that is so slick that
36:12 - happens so quickly
36:13 - now let me show you all the kind of
36:15 - behind the scenes logic
36:17 - that
36:19 - um allowed it to get rendered to the
36:21 - front end so we're let's go ahead
36:24 - and see this right so we're we have this
36:26 - function get all proposals now we need
36:28 - our entire app to have access to this
36:30 - get all proposals and so what we have
36:32 - done
36:33 - is we've sent it to our provider get all
36:36 - proposals
36:38 - and then let's go to
36:40 - our index.js
36:42 - and inside of our index.js you'll see we
36:44 - have this use effect hook
36:46 - what it's doing is it's calling our get
36:48 - all proposals function and since it's a
36:49 - promise we're saying
36:51 - once you get it then check if there are
36:54 - any there are proposals so that's why
36:56 - it's checking the length if there are
36:58 - proposals then i want you to reverse the
37:02 - proposals
37:03 - so
37:04 - we call dot reverse on it and the point
37:06 - of this dot reverse here is so it
37:08 - reverses the order right so you actually
37:11 - see it in a descending order meaning the
37:13 - most recent ones first and then we go
37:15 - ahead and console log it so you could
37:17 - see it let's go back to the app i'm
37:19 - gonna hit inspect let's click console
37:22 - and you can see i'm getting these um
37:24 - arrays of objects here right and you can
37:27 - see inside of it i have a proposal and
37:30 - that proposal says hire react.js
37:32 - developer and then it has a bunch of
37:34 - different information in here that's not
37:36 - super useful for us but it can also tell
37:39 - us the votes and we can see it has votes
37:41 - and it has how many you know what are
37:43 - the types of those votes
37:45 - and
37:46 - how many votes
37:48 - those have okay so let's get out of here
37:51 - let's close this
37:52 - so it's already pulling the proposals
37:54 - like so for example if you made another
37:56 - one
37:57 - it will also pull that too so if i go
37:59 - ahead hit create proposal and i say hire
38:01 - a next.js developer okay let's hit
38:05 - submit proposal
38:07 - and
38:09 - make sure you have matic in your wallet
38:11 - okay hit confirm
38:13 - make sure you're on the mumbai network
38:15 - you have matic in your wallet okay so a
38:17 - couple of things just make sure if you
38:19 - get an error no problem just refresh try
38:22 - again if you added emojis remove them
38:24 - try it without emojis
38:26 - i think sometimes the emojis can throw
38:27 - it off is what i've noticed at least
38:29 - maybe you might notice something
38:30 - different if you notice that they don't
38:32 - really give you problems but it was
38:33 - something else let me know that too so
38:35 - here proposal successfully created and
38:37 - you can see higher nexus developer
38:39 - showing up but it's saying the state is
38:41 - currently pending which means
38:43 - that it won't be showing up yet in our
38:45 - app
38:46 - but once that state is not pending
38:48 - anymore it should show up right away
38:50 - there you go you could see
38:51 - our app is automatically pulling higher
38:54 - next yes developer
38:57 - so
38:58 - that is
38:59 - a really nice experience and this is
39:01 - what's helping do the rendering right
39:04 - it's
39:04 - calling the function
39:06 - and uh you know showing it out onto the
39:09 - screen
39:10 - so now well you might be asking okay how
39:12 - is proposals actually showing up kazi i
39:14 - see you're calling the function i see
39:15 - your console logging here
39:17 - how it's actually showing is if i
39:20 - let's go to command f4 proposals
39:23 - and here you see we have proposals
39:25 - and then we're just
39:26 - we're checking if that proposal exists
39:28 - if they do then we're iterating through
39:30 - the proposals and then we're building it
39:33 - out in a proposal card okay to get the
39:35 - keys
39:36 - all right so
39:37 - you can see that we're just rendering
39:39 - out the proposals
39:40 - that is what's allowing the proposals to
39:42 - show up
39:43 - okay if there are proposals then show
39:46 - them
39:47 - okay
39:48 - um and if there aren't
39:50 - if we if we're in a situation where we
39:52 - don't have proposals right so you can
39:53 - see the whole thing is wrapped in a
39:55 - ternary operator with proposals so
39:57 - proposals exist do this
39:59 - if proposals don't exist
40:02 - well then what i want you to do is
40:05 - show the dummy data you guys see that
40:07 - right there dummy
40:08 - data so this here is the structure of
40:12 - the one proposal we get right so imagine
40:14 - this is a proposal right here
40:16 - the top part of that proposal is the
40:18 - proposer who proposed okay and then
40:23 - uh this part over here which says
40:24 - testing or whatever right we said hire
40:27 - react.js developer that's the
40:28 - description
40:30 - and so this is the data structure okay
40:32 - so meaning like that object that we get
40:34 - back this is how we can parse it we can
40:36 - look we can grab the proposal from the
40:38 - proposal we could grab the description
40:40 - from it and a few other things
40:42 - now there are a few other things like
40:44 - the status so it can say defeated it can
40:47 - say successful so for example if the
40:50 - if most people were against and the vote
40:54 - is over ill say defeated if most people
40:57 - were four and it's over ill says
40:59 - successful
41:00 - okay so that's the status state
41:03 - and then you have a vote types array so
41:06 - this is like okay i have three types i
41:07 - have type against type four type abstain
41:10 - and then we have the vote count at the
41:12 - bottom that shows me okay against is
41:14 - eleven thousand four zero thousand and
41:17 - abstain is zero um or sorry not 0 000
41:20 - what the hell zero eight coins and
41:22 - abstain is zero if coins okay so this is
41:25 - the data structure so if you understand
41:27 - this that's going to be valuable for you
41:28 - as we continue through the build
41:30 - all right now we're going to make this
41:32 - function create proposal and what this
41:34 - does is create a proposal
41:36 - to mint tokens to the dao's
41:39 - treasury
41:41 - okay
41:42 - so let's get to work on this create
41:44 - proposal guy
41:46 - now the first thing i want to do is i'm
41:48 - going to have an amount so i'll just set
41:50 - the amount here to 100 000. so if you do
41:53 - underscore this
41:54 - it's the same as saying this but this is
41:56 - just easier to read
41:57 - all right so we're going to get rid of
41:59 - this amount here actually so what we're
42:01 - going to do is going to be even some a
42:02 - lot simpler and i'm just going to go
42:04 - ahead and say
42:05 - hey get me the proposal
42:08 - and the proposal will be
42:12 - we're going to await
42:14 - vote.propose and uh this is what we're
42:17 - gonna propose we're gonna
42:18 - pass in the description the user gave us
42:21 - and that's it
42:23 - okay
42:24 - and then we're just gonna console.log
42:26 - the proposal proposal okay
42:29 - so
42:30 - this statement right here just this
42:32 - command right here will automatically
42:33 - create create a proposal for us
42:36 - and it'll add it to our third web so
42:39 - we're gonna see another proposals pop up
42:42 - in there
42:43 - now let's go above and finish our is
42:45 - executable function all right so what
42:49 - we're going to do is we're going to go
42:50 - right here and for our is executable
42:53 - it's going to take in an id
42:55 - okay and it's going to check if the
42:57 - proposal given is executable okay so i'm
43:00 - going to go ahead and say const can
43:02 - execute
43:04 - and then this is going to return to us a
43:06 - boolean and i'm just going to say vote
43:08 - can execute
43:09 - and it'll take in an id okay and then
43:12 - we'll just return can execute
43:16 - all right boom done
43:18 - and then we're going to also check if
43:20 - the user has voted for the given
43:21 - proposal so this will actually check if
43:24 - if the whatever the user was
43:26 - you know mostly the logged in user if
43:28 - that user has voted or not
43:31 - and so we're gonna say
43:34 - await vote dot has voted
43:39 - and we're gonna take in the address of
43:41 - that user
43:43 - as well
43:44 - okay and then
43:46 - um we're gonna go ahead down here
43:52 - and we're gonna say has voted
43:57 - and then we're just going to return the
43:59 - res
43:59 - all right we're going to call this
44:01 - current user address okay because that's
44:03 - what we're choosing to call this so
44:04 - everywhere you see address change it
44:06 - with current user address and so there
44:08 - we go and that should be what check if
44:11 - voted should look like
44:13 - all right so for the vote for i'm gonna
44:15 - go ahead and say try and then i'm gonna
44:20 - set our delegation and i'm going to say
44:22 - await token.get
44:25 - delegation
44:27 - of and we're going to get current user
44:29 - address
44:32 - okay
44:32 - and then if
44:34 - the user has delegation
44:36 - okay delegation
44:45 - so this will basically just check if the
44:47 - coins have been delegated right if they
44:49 - have been
44:50 - then we're gonna say
44:53 - delegate
44:54 - to address
44:56 - all right and
45:01 - we're gonna say vote type
45:06 - and let's go down here
45:10 - i'm going to say if the
45:14 - type is against
45:16 - here's what i want to happen okay so if
45:18 - the type is against
45:21 - i want to set vote type to
45:25 - vote type dot against
45:30 - all right so vote type if you're seeing
45:32 - hey what is this vote type it's actually
45:34 - being we're calling it
45:35 - from third web so we're calling it right
45:37 - here vote type okay we're importing it
45:41 - so
45:42 - let's go ahead and go
45:44 - for type not against and then we'll say
45:47 - else if
45:49 - type is
45:51 - for
45:54 - okay if this is the case
45:56 - we're gonna say vote type is equal to
45:58 - vote votetype.4
46:03 - okay and then we're going to say we're
46:05 - going to go down here we're going to say
46:07 - else
46:10 - vote type is equal to
46:12 - vote type abstain because that's really
46:14 - the only
46:16 - choice left at that point
46:18 - stain
46:19 - just like this okay so let's get out of
46:21 - this else here and i'm gonna say my
46:23 - result is
46:26 - and we're gonna await check if voted
46:29 - we're gonna pass it the id
46:32 - if i have not voted
46:39 - all right so this in other words had
46:41 - this is really has voted okay so you
46:43 - could change that so then it's like okay
46:45 - so if the user has not voted
46:48 - then effectively i want you to await
46:52 - and go ahead and vote
46:57 - okay so then we're gonna go ahead and
46:59 - call
47:00 - uh your you know we're gonna we're gonna
47:02 - place a vote all right that's what we're
47:04 - gonna do if you haven't like if you
47:06 - clicked it and you hadn't voted yet then
47:08 - we're gonna place a vote
47:11 - otherwise we're going to say
47:14 - you have already
47:16 - voted for this proposal okay and we can
47:19 - even make it fun i guess it oh oh looks
47:23 - like you have already voted for this
47:25 - proposal okay so if you have already
47:27 - voted it will detect that
47:29 - with this
47:30 - okay and then at the end of all of this
47:34 - this try catch block we're gonna go
47:35 - ahead and say catch and we'll say error
47:39 - sorry error
47:41 - okay and if there is an error then i
47:43 - just want you to console log it so we
47:45 - can just go ahead and say console log
47:49 - there we
47:50 - go
47:52 - okay
47:53 - so this is our vote for
47:58 - all right
47:59 - all right so if you actually scroll up
48:01 - here and you see this error that says
48:02 - property delegate 2 does not exist on
48:05 - type string
48:06 - we have not
48:07 - add given any value to token so let's go
48:10 - ahead and set that up so we have this
48:12 - use token hook that we have so let's go
48:14 - ahead and do this we're going to say use
48:16 - token
48:19 - okay and then this is going to take in
48:22 - the token address
48:24 - that you got
48:26 - from um
48:28 - from third web so go back
48:30 - to your home page on third web
48:33 - and on your home page you're gonna see
48:34 - your token copy the contract address for
48:37 - your token
48:39 - okay so make sure it says
48:42 - make sure it says token right here
48:44 - okay contract type and then just paste
48:46 - that so now you have token
48:50 - okay
48:51 - now that error should go away because
48:53 - delegate2 does exist on it
48:56 - okay
48:57 - and then make this a capital left here
48:59 - for
49:00 - votetype.4 make it a capital f
49:03 - and that'll get rid of that little error
49:05 - that was showing up okay and just to
49:07 - kind of recap and understand what's
49:09 - happening here this part of the code is
49:10 - basically saying hey delegate your
49:12 - custom tokens you own
49:14 - to be used to vote
49:16 - okay
49:17 - this part here is determining
49:21 - what the user voted and then our parts
49:23 - underneath it
49:25 - is check if the user has voted okay if
49:27 - they haven't voted then cast their vote
49:31 - and if they have already voted then just
49:32 - let them know you've already voted and
49:34 - here we're just catching any errors that
49:36 - happen okay so that's really what's
49:38 - happening in this entire script it looks
49:40 - scary but it's really not all right guys
49:42 - so let's go back to our app and see if
49:45 - you can create a proposal and vote for
49:46 - it so if you had done everything
49:48 - correctly in here you should be able to
49:49 - do something okay with it so i'm gonna
49:51 - go ahead and say
49:53 - hire
49:54 - an angular
49:56 - developer okay let's go ahead and hit
49:58 - submit and see what happens okay
50:00 - something really weird happened but
50:03 - um
50:04 - our mask popped up so let's go ahead and
50:06 - hit confirm and let's see what will
50:08 - happen okay
50:10 - so let's fix this probably some icon is
50:12 - showing up but it's telling us that it's
50:14 - submitting our proposal here so that's a
50:17 - good sign
50:19 - now let's take a look at our meta mask
50:23 - and let's go ahead and speed this up
50:25 - and we'll fix this ui bug that's
50:27 - happening
50:29 - but let's just see if our vote is being
50:31 - casted or not that's the main main main
50:33 - thing because if our vote or if our
50:35 - proposal is being created then
50:37 - you know the main functionality app is
50:39 - working so our proposal looks like went
50:41 - through let's refresh and let's look at
50:43 - here as well let's refresh our third web
50:46 - and see if in our third web we got a new
50:48 - proposal
50:49 - oh
50:50 - nice look at that we just got a brand
50:53 - new proposal hire an angular developer
50:55 - proposed by
50:56 - and it seems like it's pulling my wallet
50:58 - address
51:00 - and let's see here
51:02 - yo
51:04 - that is sick right like our angular
51:06 - developer uh proposal is coming up so
51:09 - that is beautiful
51:10 - all right so basically that little error
51:12 - that happened it was toastify and it was
51:15 - missing its css so that's why you didn't
51:17 - really see anything so we're just gonna
51:18 - go ahead and import this inside of our
51:20 - index.js okay you probably will already
51:23 - have this but it just wasn't there in
51:25 - mind so because i want to give away all
51:27 - the front end i'm going to give you this
51:28 - don't worry so then you don't have to
51:29 - deal with that stupid problem
51:31 - let's go back here and let's make
51:32 - another proposal and i'll just call it
51:34 - another proposal
51:36 - and let's hit submit and see what
51:38 - happens and now you can see it looks
51:39 - beautiful right submitting proposal
51:41 - comes up looks really nice
51:44 - and i can hit confirm and now you know
51:47 - if the proposal is done it will tell me
51:49 - it's successfully done too so that's the
51:51 - really nice part so i'm gonna speed it
51:52 - up in the meantime
51:54 - just keep paying for it and hitting
51:56 - speed up
51:57 - okay
51:58 - and then whenever
52:00 - uh it's done you can go ahead and hit
52:02 - refresh all right so this is good now
52:06 - let's get out of here
52:08 - we have our app working right our
52:11 - toaster toastify thing was showing up at
52:13 - the top submitting a proposal looked
52:15 - clean looked nice and now we know our
52:17 - proposal has went through if we refresh
52:19 - on third web we'll be able to see it and
52:21 - then if we go back and we refresh here
52:23 - we'll see it now it's time to vote so
52:25 - let's see if our voting would work okay
52:28 - so i'm gonna go ahead and hit open up
52:30 - inspect element as well so i could see
52:32 - what's happening and let's go ahead and
52:34 - hit four here
52:36 - and uh it says false has voted so you
52:39 - see it doesn't
52:41 - it notices that i haven't voted yet so
52:44 - that's a really good sign and then i'm
52:46 - gonna go ahead and hit confirm all right
52:48 - so i've had i hit confirm and now let's
52:51 - see how long it takes for my vote to
52:53 - cast cast vote with reason is what you
52:55 - should see it's queued up
52:58 - and i'm gonna go ahead and hit refresh
53:00 - on third web as well to take a look if
53:02 - my vote has come through yet
53:04 - i don't think it has
53:06 - okay not yet
53:07 - it's still loading and now let's speed
53:10 - it up so it happens just a wee bit
53:12 - faster
53:13 - okay speed it up some more
53:15 - right
53:17 - let's refresh
53:19 - okay so sometimes this can take a second
53:21 - don't you know don't worry about it's
53:22 - not too big of a problem we'll just wait
53:24 - it out ten percent increase let we do
53:27 - aggressive it doesn't seem like it's
53:29 - allowing us to go much faster ah there
53:31 - we go okay so we could see that we have
53:34 - voted for this and there is 700 000 a
53:38 - coins worth of power
53:40 - towards this proposal meaning if
53:41 - somebody wants to overthrow this
53:43 - they need to vote they need to have like
53:45 - more than seven hundred thousand coins
53:48 - uh eight coins to beat my vote so it
53:51 - either needs to be multiple people that
53:53 - need to vote that have more than seven
53:54 - hundred thousand eight points or it
53:56 - needs to be somebody who's like richer
53:58 - right in this community than me who
54:00 - needs to vote and overthrow me otherwise
54:02 - this is not gonna get overthrown and
54:04 - this another proposal is gonna get
54:06 - passed in favor four
54:09 - okay so after two minutes pass
54:12 - pretty much the proposal window's gonna
54:14 - close and you see it says this one says
54:16 - defeated pretty soon this one is gonna
54:18 - say successful because we have a four
54:21 - and we don't have any against or
54:23 - abstains so it seems like it's gonna go
54:26 - through okay
54:27 - so there you go it looks like almost all
54:30 - of the functionality of our app is
54:32 - working right we don't really we're not
54:34 - really facing any problems
54:37 - all right now i'm going to try to vote
54:38 - as a second person so it looks like
54:40 - there's multiple people voting here so
54:41 - i'm going to go ahead and refresh
54:46 - um and
54:47 - yeah and you can see right it's actually
54:49 - pulling the 700 000 eight coins it can
54:51 - see that too which is super cool
54:54 - now i'm gonna come in and log in as a
54:56 - different user to vote so let's go ahead
54:58 - and let's actually try voting as the
55:01 - same user and let's see
55:02 - it goes uh oh looks like you have
55:04 - already voted for this proposal so you
55:06 - can detect
55:07 - very clearly that you have voted so
55:09 - that's good
55:10 - now i'm going to switch my user so i'm
55:12 - going to go ahead and go to my other
55:14 - user and i'm going to connect to the
55:16 - site and let's go here
55:18 - and now i'm going to vote against
55:20 - and let's see what happens
55:22 - i tried voting against and it says
55:24 - address is not defined
55:27 - so let's go ahead and see where we're
55:29 - using
55:30 - address and where it's not defined all
55:34 - right so here this is
55:36 - it it's we're using address when we
55:38 - should really be using current user
55:40 - address
55:41 - so let's go back to our app
55:43 - let's hit refresh and let's try that
55:45 - same thing again and let's see what
55:46 - happens
55:48 - so
55:49 - that vote has ended
55:51 - okay so that vote actually just ended
55:54 - because
55:55 - uh this is successful because two
55:56 - minutes passed
55:58 - and we had uh two minutes passed and we
56:01 - already had somebody voting for and
56:03 - nobody else voted in that time frame so
56:05 - that looks like it succeeded
56:07 - all right so now you can see that i have
56:10 - this whole thing coming up it says
56:12 - successful okay and we have this execute
56:14 - button here as well
56:16 - so this execute button would be like if
56:17 - you wanted to set it up so like let's
56:19 - just say that you wanted to hire a
56:21 - developer and you knew exactly which
56:23 - developer it was and then you had their
56:24 - wallet address right here you could hit
56:26 - this execute button once this vote
56:28 - passed and it would automatically fund
56:30 - their account with money okay so that's
56:32 - the really cool part about this you
56:33 - could do it like that now i'm gonna
56:35 - create a proposal from a different
56:37 - account
56:38 - and let's see what happens let's see if
56:39 - we run into any problems i'm gonna say
56:42 - um eat a cookie no hold on eat ice cream
56:46 - tonight so let's see what we want to
56:48 - vote for we want to eat ice cream or
56:50 - cookie or what do we want to eat so
56:51 - let's see let's go ahead and start with
56:53 - ice cream i'm going to try to create a
56:55 - proposal and you're going to see i get
56:57 - this error that says proposer votes
56:59 - below threshold
57:00 - and this basically implies that i
57:02 - haven't delegated my coins to this dao
57:07 - and so therefore i'm not able to like
57:09 - create a proposal with it or do anything
57:11 - so we're going to go ahead and fix that
57:12 - now
57:13 - okay so let's go back to our app we're
57:15 - going to write a use-effect hook that's
57:16 - going to catch a scenario where the user
57:18 - who hasn't delegated their coins can
57:21 - can use this dao okay so we're going to
57:23 - create a use effect hook and use effect
57:27 - we have a function and then
57:29 - our dependency array is going to be
57:31 - empty so it's not it's going to just
57:32 - fire off
57:34 - on page refresh
57:36 - and it's going to be an async function
57:37 - i'm going to go ahead and say try so
57:40 - we're going to try
57:41 - and see if we have this
57:43 - delegation
57:45 - and i'm going to await it okay we're
57:47 - going to get delegation of the current
57:50 - of the current
57:52 - user so i'm going to say current
57:54 - user address
57:56 - okay
57:56 - and then if delegation so we're going to
57:59 - actually repeat this code
58:01 - and we could probably even just copy
58:03 - some of this so this part over here just
58:05 - copy this and paste this because we're
58:08 - effectively doing this same thing here
58:11 - okay so i'm going to say
58:14 - boom
58:17 - paste
58:19 - okay
58:26 - there we go
58:28 - okay and then we're gonna say catch
58:31 - and for catch we're gonna do the same
58:33 - thing hey if there's an error then just
58:35 - console.log and we're going to say
58:37 - error.message
58:40 - and we'll we'll follow it up with error
58:43 - and then us and then since this is a
58:46 - iife okay me iife
58:50 - immediately invoked
58:53 - function expression
58:57 - that just basically means that since
58:59 - this function doesn't have a name you
59:00 - need to call it right away because if
59:02 - you don't then you won't ever be able to
59:03 - reference it by anything
59:05 - so i'm just gonna call it right away
59:08 - okay so this block of code will just
59:10 - call itself
59:13 - and yeah it'll call itself whenever the
59:15 - app loads
59:17 - so let's go ahead now we're getting this
59:19 - error that says use effect is not
59:21 - defined not a problem we're just going
59:23 - to go ahead and import
59:25 - use effect from react so i'm going to go
59:26 - ahead and say use effect
59:29 - and then
59:31 - we should be gucci
59:33 - okay and then let's go to our app and
59:35 - let's go ahead and hit refresh okay and
59:38 - now let's try making a proposal so
59:41 - proposal
59:44 - uh eat ice cream tonight
59:47 - let's go ahead and put an ice cream
59:48 - emoji there i'm gonna hit submit there
59:50 - we go now it says submitting proposal
59:53 - ah
59:54 - okay getting an error again all right
59:55 - now what i want you to do is just switch
59:57 - back to the main account
59:59 - okay so i'm gonna go ahead and i'm gonna
60:01 - reject this just ignore ignore this for
60:03 - now
60:04 - okay don't worry about that
60:06 - go back to your main account so i'm just
60:07 - gonna switch back to my main account
60:09 - that i was on which is my btscp in this
60:12 - case
60:13 - and then i'm going to make the same
60:14 - proposal with the main account
60:17 - and let's see if we can vote from the
60:19 - main account and another account so
60:21 - let's try that that's important because
60:23 - we
60:24 - we don't also want maybe everybody to
60:26 - make a proposal we want it to be where
60:27 - only like we as the owners of an account
60:30 - can make
60:31 - um the proposal
60:33 - so let's start with this for now
60:36 - and uh let's take a look at our metamask
60:39 - and see
60:40 - what's happening so i'm going to go
60:41 - ahead and say speed up
60:43 - and then we'll wait and it looks like
60:45 - the proposal has happened so if i hit
60:47 - refresh
60:48 - it should pop up pretty much right away
60:52 - all right there we go i got my ice cream
60:55 - proposal i'm gonna go ahead and say i'm
60:57 - for eating ice cream so i'm gonna hit
60:59 - i'm gonna vote for four
61:02 - and this popped up let's go ahead and
61:07 - hit confirm
61:10 - and now we'll see
61:12 - what happens okay so now we have one
61:14 - person voting for let's just double
61:16 - check that our
61:18 - vote is going through i'll just speed it
61:20 - up a little bit
61:21 - okay but in the meantime while that vote
61:24 - is pending i'm gonna go ahead and switch
61:26 - so that vote shouldn't be pending
61:28 - anymore actually but let's refresh and
61:29 - that vote should be showing up and you
61:31 - can see
61:32 - that 700 000 worth of ape coins have
61:35 - voted for
61:36 - ice cream tonight now remember this is
61:38 - not you actually putting your money on
61:40 - the line
61:41 - it's just saying that your seven your
61:44 - vote has seven hundred thousand a coins
61:46 - worth of power
61:48 - okay that's all that means
61:50 - now let's go to our
61:53 - uh bts cp2 account okay so you're go now
61:56 - go to your second account
61:58 - and from your second account just go
62:00 - ahead and see if you could vote so i'm
62:01 - going to go ahead and say against
62:03 - and boom look at that it actually allows
62:06 - me to vote and let's go ahead and hit
62:08 - confirm
62:10 - and now let's go to
62:12 - our app here i'm gonna hit refresh
62:15 - okay and there you go you can actually
62:18 - see
62:19 - um actually hold on i think our vote is
62:22 - still processing it hasn't happened yet
62:24 - so i could speed it up
62:26 - now it has happened let's refresh
62:30 - let's take a look oh we don't i don't
62:33 - see it yet
62:34 - i don't see it yet
62:36 - so that means i must have voted
62:39 - without having my coins
62:42 - be delegated
62:44 - right that's probably
62:46 - that's probably what that actually means
62:50 - okay so let's see
62:52 - what the error
62:54 - what problem we're running into here
62:56 - okay we're still running into that error
62:58 - okay
62:59 - let's go back
63:01 - let's go to our dashboard
63:03 - and let's hit refresh
63:05 - on this ice cream one ah so what
63:07 - happened the first time it was actually
63:09 - delegating my tokens towards the thing
63:11 - now i can actually vote so let's go
63:13 - ahead and vote okay so delegation just
63:16 - means i'm allowing
63:18 - you know if uh i'm a law allowing
63:22 - uh my vote to have power with this ape
63:25 - coins okay so i'm delegating my coins
63:27 - towards the power of voting and these
63:31 - you know towards these proposals
63:33 - now i can actually vote so this is this
63:36 - is working as expected so this is good
63:39 - this is good
63:41 - all right so our vote is now pending
63:44 - okay our delegation is complete so
63:46 - that's good let's go ahead and speed up
63:48 - our vote
63:49 - it says queued and once it's done you'll
63:52 - see
63:52 - that it'll be a green text underneath it
63:55 - which would imply
63:56 - that it is done there we go and now we
63:58 - could see august 2nd and it is done okay
64:02 - let's go ahead and hit refresh
64:05 - and let's see if we have somebody
64:07 - let's wait for it wait for it let's wait
64:10 - to get the dynamic data
64:12 - okay
64:13 - let's go to our dashboard and let's see
64:15 - if we voted for it or not
64:18 - okay we have active
64:20 - awesome so you saw how we were able to
64:22 - do that now we can actually even make
64:24 - another one right eat cookies later
64:27 - and let me put a cookie here and i'll
64:28 - hit submit and now watch this from my
64:30 - second account
64:32 - it's also allowing me
64:34 - so let me just reject all of these
64:36 - transactions for now so i can just show
64:37 - this from scratch
64:39 - let's go ahead and just refresh now
64:41 - you'll see from my second account since
64:43 - i've delegated my tokens
64:45 - i can now
64:46 - make a proposal from this account as
64:48 - well so eat cookies tonight
64:51 - let's put a cookie and let's hit submit
64:54 - okay and now you're going to see my meta
64:56 - mask pop up
64:58 - right there above my head
65:01 - and
65:02 - i'm going to go ahead and hit confirm
65:05 - and now that proposal should be able
65:07 - should be popping up soon
65:09 - okay so we'll just
65:11 - wait for it
65:13 - and uh if it allows you to just go ahead
65:15 - and speed it up okay
65:18 - all right there we go our uh our
65:20 - proposal seems to have happened so now
65:22 - with the second account i should have
65:23 - been able to create
65:25 - my
65:26 - proposal
65:28 - and boom there you go i was able to
65:30 - actually create my proposal with the
65:32 - second account
65:33 - so with that said guys i hope you
65:36 - enjoyed this build it was a ton of fun
65:38 - to build it together with you from
65:39 - scratch we had already done a lot of the
65:41 - front end work which means that if you
65:43 - followed along hopefully it saved you a
65:46 - ton of time from having to do every
65:48 - single thing from scratch so make sure
65:50 - you fork the rapplet below because it'll
65:53 - save your life it'll
65:54 - you know be able to give you all the
65:56 - front end all the styling the components
65:58 - so that way you're only writing the web
66:00 - 3 logic and doing a lot of the third web
66:02 - stuff
66:02 - with that said i hope you enjoyed it i
66:04 - hope you picked up something a new skill
66:07 - out of it and
66:08 - just so you have some context right
66:10 - blockchain world
66:12 - there's a lot of opportunity there a lot
66:14 - of developers making you know 70 000
66:17 - thousand dollars hundred thousand
66:18 - dollars a year and a bunch of developers
66:20 - i personally know they're making hundred
66:22 - that thirty thousand two hundred
66:23 - thousand three hundred thousand dollars
66:25 - a year or more and so
66:28 - if you're good in this community
66:30 - and you're as in you're a great
66:32 - developer and you're a good person
66:34 - you can go pretty far and this industry
66:37 - is just booming so if you learn these
66:40 - skills you'll be very you know sought
66:42 - after and if you use something like
66:43 - third web it makes it a lot easier for
66:46 - you right to be able to do all of these
66:47 - things
66:48 - it simplifies the process and it just
66:50 - makes it a much more enjoyable
66:51 - experience instead of having to just
66:53 - write every single line of solidity code
66:55 - all by yourself and that just makes
66:57 - things more complicated with that said i
66:59 - love your beautiful face i hope you
67:01 - enjoyed this video and as always i'll
67:03 - see you
67:04 - in the next video

Cleaned transcript:

what if you wanted to build an app where your community has the voting power to make decisions so if you were between hiring an angular js developer or a react developer your community can actually help vote and not only that let's take it a step further people who had more coins in your community their vote actually held more weight in the decisionmaking process so let's say you ask your community hey should we hire a react developer and then john votes for that and john says you know what we should hire a react developer and john is somebody in your community that has a lot of coins so he's rich in your community and he makes a decision unless john has like 50 000 coins and then bob comes along and bob says i'm against react react sucks i'm voting against it but bob only has 5 000 coins in your community now who will win on that decision john would and therefore the proposal to hire a new react developer would actually go through and imagine even one step further that developer you wanted to hire automatically got paid as soon as that proposal went through now that is a power of web 3 and this is a technology that's shifting the world and this is powered by blockchain and i'm going to show you how you can build all of this even if you're a complete beginner and you've never done anything with web3 you're going to be able to build this and what gives you a lot of value as a developer is if you could build things like this or communities like this for other influencers other creators other celebrities and you can give them a community where their community has voting powers where people can actually earn coins to be able to make decisions and change things i mean tomorrow jayz or rihanna could have a huge community where their people have a voting power this could monumentally shift the world and you are at the forefront of learning technology like this so with that said i'm excited smash that like button so this video goes out to as many people as possible and hey by the way if you don't know me i'm rafa qazi the ceo and founder of clever programmer i've helped millions of people learn how to code and my job here is to make you a better developer now let's get into a little bit of a deeper dive into this app so i'm going to open this app up this app is powered by next js i'm going to connect my wallet with the meta mask so i'm going to click that and i'll be able to actually log in now that i logged in you could see that it's showing me the front page with proposals i can make a proposal like higher next gs dev or higher angular dev and once i've made the proposal you can see it shows me against foreign abstain that just means hey somebody can vote you can vote for do you want to be against this or for this or do you want to not vote on this at all say i go ahead and i say i am for hiring in nextgs developer and now you could see that boom it's asking me to open up my meta mask i go ahead and confirm the transaction and once i do that you could see um all right this there's you know x amount of coins like 50 000 coins or whatever delegated towards four okay so it's basically what it's doing is it's taking all of my uh coins in my wallet you know my ape coins or my developer dow coins or whatever right and it's delegating them towards the vote which means that if somebody else comes along and votes their vote will have more power you know if they have more money than me or more coins than me so how this works is whoever has the most coins their votes count higher okay so this way you have an incentive actually to earn points and credits inside of this community because the more coins you have the higher your voting power is therefore the more influence you can make inside of this community uh this app is powered by third web so a lot of the technology will be covered by third web and it'll make it really easy for us to access everything yeah so with that all of that said we're ready to pretty much get started here's what i want you to do go ahead and in the description below you're going to see a link that says join.replit.com cp dao so go ahead click that link below that'll take you to replit and then it's then go ahead and simply fork this repo or fork this ruffle it doesn't cost you anything it's completely free to fork and why i'm asking you to fork is because we're going to be giving away a ton of the assets for this build so for example we're giving away all of the front end the css html styling a lot of the react components because what i want to focus on is purely the uh web 3 part of this technology the blockchain part of this build okay so i don't want to focus too much on let's create these react components again for the 100th time right because we've done so much of that over the last few years so a lot of that front end is going to be given so when you fork that rublet you're already going to have access to all of the components etc and then what we're going to do is we're going to code everything step by step and the way that i've set it up for you there's exercises almost exercise like structure meaning there's going to be functions that are already there and then you're going to have to complete it and we'll complete it and walk through it together so my goal is that you get a ton of understanding of how this works you'll be able to hit run your app will run your functionality won't work yet because that's the part you're gonna have to add in and we're gonna add all of that part in from scratch so you will still understand and retain a lot that said i'm excited let's go ahead jump in and start coding this bad boy up all right so you can go ahead and name your fork whatever you want so i'm gonna call it instructor because this is gonna be mine you could go ahead and call it you know something completely different that's totally fine uh you could call it a project or you could just leave it as is that's fine too okay now once this is forked this is gonna be great we're gonna leave this alone now and what we're gonna do is set up because what we're gonna need is third web for this so let's go ahead and just set up third web real quick so we can make sure we can start building uh everything on here is completely free you could see third web is 100 free so click start all right and then we're gonna go ahead and click deploy new contract okay and before we do this here a couple of things you need to know make sure that in your meta mask you have uh your switch to the mumbai network okay and how you could do that is if you don't have that setup yet just in settings i mean if you don't have meta mask make sure you install and download metamask right that's step one but then you can go into advanced and you can go into networks show test networks and just turn that to yes okay so once you turn that to yes you'll be able to go and you'll be able to see all these networks i want you to switch to mumbai because rankaby will be deprecated soon so go ahead and do mumbai all right and now you should be in mumbai okay and then if you don't have matic we're gonna need to get you matic so just go ahead to mumbai faucet like that and then click here should bring you to this page and they just need your wallet address so click your metamask account click your wallet address and just copy it okay if you just click that button right there it'll copy it and paste it right here and hit send me matic okay for me since i've already asked it to send me matic it has sent me every 24 hours or sorry it has sent me one but i requested it a few hours ago so i won't be able to get new one but if you put it in you will be able to get a new one okay and then you should have matic and you should be good to go on that end okay now going back to this app over here let's go back and see okay what it should say is you should have some amount of matic so you might have to wait for a little bit it might take a second so just be patient maybe give it a few minutes if it's taking long but at some point you should look and you should have matic okay you're gonna need that because otherwise you won't be able to deploy contracts and do the next parts we're gonna do okay so once we're done with that great go ahead and hit deploy new contract okay and then we're going to go ahead click prebuilt contracts and it says what do you want to build so we want to build really two things one we want to build a token so our community can have money and token and all that and two we want to be able to build votes so then we can have actual proposals and we can have voting powers etc so we want to do it in that order let's go ahead and build out our tokens first and then we're going to do our governance and splits which is where our votes are going to be so let's click this and we're going to choose token and inside of our token i want to choose i'm going to give it a name okay so i can go ahead and call this the ape uh ap coin dao okay and you could give it whatever image you want so i'll probably choose some random image but you could give it an image of um you could give it whatever image you want well that looks like that has a little monkey in it so i'll just give it that you can you should give it like a actual dowel image so that looks you know look cleaner that way and i'll say the symbol is ape for this okay and now for recipient address that'll be your wallet address right over here so those should match and then the chain make sure you scroll down and you choose mumbai and you choose matic okay once you do that we're gonna go ahead and click deploy now that button right there the deploy now button okay now it pops up our meta mask so let's go ahead and hit confirm and we will hit confirm and once we're good on that it's going to take a second but it's going to then take us to the next page where it's going to say hey you're done building out your token okay once we're done building out our token all we need to do is make sure that we distribute this token and we give the ap coin to ourselves all right now it took a while but it popped just this up right here the second confirmation so i'm gonna go ahead and hit confirm okay and then once that's confirmed we're pretty much good to go okay so that's still gonna take maybe another minute or something right 30 seconds a minute let's just wait for it all right now you should see this screen where it's a successfully deployed contract you should see this if coin dao and go ahead and just hit copy here so when you click that it'll copy it to your clipboard so just make sure you copy to your clipboard you don't need to click it a hundred times like i did but i just did it for fun so make sure that that's copied you're gonna need that for later right now you'll see that the amount of coins that a coin has to in total is zero and owned by you is zero so we're gonna go ahead and mint so we're gonna distribute coins and you could give as much supply as you want so we'll just say that there are a total of one million coins i believe that's one million let's just see uh that's not okay there we go that should be good let's go ahead and mint tokens and now it should distribute about one million coins to this community and um i think in the start they're by default owned they have to be owned by somebody so they'll just be owned by you and the start we can make another uh wallet and we can send some to another wallet as well okay now we wait all right now it says at the bottom tokens minted successfully so go ahead and refresh this page now and pretty soon it should show that there are 1 million coins in total supply 1 million are owned by you so let's go to our meta mask wallet and now here's what i want you to do in assets you see where i have ape you won't have that there okay so in order to get that to show up you're gonna need to click where it says import tokens so go ahead and click import tokens paste that contract address from here it will automatically say hey that's ape whatever hit add custom token and hit import tokens okay and now you got all of those okay so you just got all of these ape tokens okay i don't need this one so i'll hide hide this one for now there we go so this is the one that we just got okay so you have one million tokens here now if i had another um i can send these tokens to another person as well so for example say i go to this other account that i have bts cp2 okay that's my second account you could call it whatever you want okay you just make your own account and let's send it to this address so copy the address of the second account go back to your first account hit send paste the address of that and we're gonna send it ape so i'm gonna send it let's say three hundred thousand eight okay let's hit next and let's hit confirm okay now our meta mask is sending it and remember all of this is happening over the test network right so this is obviously none of it is real money just yet because you should build your apps on tests and then you should take them out to the um if you know final versions i'm just going to click speed up because this is fake money so i can just keep spending it to speed up the process you could hit speed up and hit submit and what that will do is speed up the process so it happens faster now let's go ahead and i have seven hundred thousand eight coins left okay and the confirmation is here that it has been sent so let's go back to bts cp2 my second account and let's also import this contract address so let's go ahead copy this uh okay let's copy this let's go ahead hit import tokens let's import the token all right ad yep if it doesn't know what the decimal is just put 18 we'll hit add import tokens there we go okay so now the 300 000 has been sent let's go to our account cool so now you can see that our account one has seven hundred thousand and when i switch this account to account two that has three hundred thousand so now inside of our third web i can see okay this is my total supply this is a total supply and this is what's actually owned by me okay so there you go so that's all good now the next thing we need to do is we need to deploy a voting contract okay so let's go ahead and let's go back to our app so i'm gonna click this home button right here okay and um now we're gonna go ahead and create a new dow okay so we've made a coin now we're sorry we just made uh apecoin so i just removed all the other contracts because i wanted to make your life simpler so it's easier to understand follow this tutorial so you should only have essentially one contract in here and right now that should just be your type token okay so this is not gonna be the voting one it's just gonna be your token okay so this is your coin this this is a contract address right there all right now we're going to go ahead and deploy a new contract and we're going to choose prebuilt contracts we're going to go ahead and go government governance and splits let's go ahead click vote and then here we're going to call it ipcoin dao vote okay now it's going to ask for the token address you can paste the token address from your coin okay if you lost it go back and copy it but that's the token address you need that you you had earlier for voting period i'm gonna just choose 60 because it takes two seconds for every block this is 60 blocks so that basically means the voting period will last roughly two minutes long okay so that's basically what i'm saying there and then vote in quorum we'll leave this as zero and we'll leave voting delay at zero as well okay all right and then other than that everything else is good and then we have our mumbai matic chain make sure this is the chain you chose and then just go ahead and click deploy now so pretty soon this should be all set up and then we'll be coding okay well but we just got to get this all set up and then we're ready to code so hit confirm and then just wait might take a couple of seconds might take a few minutes but you know this is the web 3 world so sometimes you have to wait a little bit okay you're going to get used to that but in the future you know obviously they're going to make all of this much faster and you'll be able to get through it but right now it takes long because it has a lot of security mechanisms and features built into it so that ends up taking a second all right there we go so our contract is successfully deployed as you can see at the bottom and now it just says hey for your voting thing you're gonna need to delegate some stuff okay delegate to create your own proposals or vote on other proposals so i'm just going to go ahead and hit delegate tokens okay and then it will pop this thing up right here and hit yes all i'm saying is my 70 000 or 700 000 that i have yes i want that to be delegated towards voting now that doesn't mean i'm going to lose my 700 000 doesn't mean that at all i still keep all my 700 000 coins it just means that when i vote i am voting with the full power of my seven hundred thousand coins okay so that's all that delegating token means and now that i'm done with that the delegation is completed okay um well let's actually just see if it's actually completed or not so i'm gonna click meta mask you can see it's pending here so i could hit speed up hit submit and then it'll happen a little bit faster but it's cued right now and then once it's actually fully done when you hit refresh on this page it won't bother you about that delegation anymore okay so right now i can still see it's pending and it'll take a few seconds i imagine okay so let's wait for this all right now my delegation is complete i can confirm that from a meta mask that delegation has happened and i can see my balance here and that weird orange error message or whatever is not showing up anymore so that's a really good sign okay and this is our ape dow vote um coin address we're gonna need this later for now let's just simply head to our home page and you should be seeing these two contracts you've created so one should be a token and one should be a vote both of them should be on the mumbai testnet and then their contract addresses should be right here so you're going to need this later to copy this contract addresses and use them with that said ready to go back to our app and start coding all right so this is where you should be at right now let's just go back to our app and you should just be seeing it says apecoin dao and then it should say connect with metamask if you try to hit connect with metamask right now you're going to run into an error because we haven't connected anything um because the front end is there but the app is completely broken right now okay so we're going to go ahead and build it out step by step the first thing we're going to do is we're going to wrap this entire app in a third web provider okay so i'm gonna go ahead and and just so you can get the lay of the land before i even continue moving further okay uh you'll notice that index tsx like the basically this index file and it's just a next file so you could write regular next code here you should be fine okay all of this is already completed for you okay if you go to public or you go to styles all the styles here are done ahead of time for you if you go to next config that's already handled for you all packages and everything you need to install are already installed for you so you'll see on the left hand side they're all installed that you need like toastify react third web react third web sdk all of that everything is here free okay so we've set up this repel in a way where you have access to everything that you need i'm just gonna make the font size bigger so it's easier for you to see all the code okay so there you go so you have already access to pretty much everything okay let's go like this now inside of the main thing and components right we're giving away the header component we are giving away the so you know what's the header component so we're giving away this header component we're giving away all of this this the design for this the components that make up that right the proposal card component the login component this component right here okay all of that is given away in the front end and there's not crazy amount of complexity going on there okay this is something you you can kind of grasp your mind around or you could look at previous videos and see how we've done this so you should be good there now what we're actually going to be coding is if you go into your app tsx we're going to wrap this in the third web provider so we're going to be focused just on the web 3 logic okay now let's go ahead and think through this right now what i want to do is i want to wrap the entire app up inside my third web provider in order to do that i'm going to go ahead and say import and we'll say chain id and also third web provider third web provider okay and we're gonna say from i said third web dev slash react okay so we're gonna get chain id and third web provider now we're gonna wrap our entire app up inside of that the web provider so i'm going to go here and i'm going to say third web provider and we're going to give it a desired chain id okay now on line six you could see it says a comment here it says this is a chain id your dap will work on so let's head go ahead and set up our active chain id and i'm going to say chain id dot rinkeby and let's say const right there okay so basically i am from our chain id oh let's go ahead and go small c here from our chain id actually it's a capital c that we're importing capital c here we'll go capital c here okay so now we're importing rinkeby that will get us access to the ranking network make sure you do it with a capital r okay there we go so we're gonna say our desired chain id is this and we're gonna put it in squiggly so it knows we're referring to uh some javascript here active chain id and then we're gonna have to close our third web provider so we're going to go ahead and say third web provider just like that i'll format the code and so there you go okay now our app is wrapped inside of the third web provider so the entire app has access to third web so that'll be able so that'll make it easy for us to log in and anywhere we need third web data we can get it okay great so let's go ahead and save and it sometimes takes a second this page to load okay but once it is loaded you will see the home page showing up here but uh rinkybee is deprecated so we won't be using this we will be using in place of rinkaby we'll be using mumbai so let's go ahead and see if it has mumbai it seems like it does and that's what we're going to pass as our desired chain and that's going to be our active chain id all right guys so now we're going to transition into adding the authentication functionality into our app so what i want you to do is go ahead to this file in go to the folder context and go to context dot js go to this file right over here all right so one shot one note that you should know about is this context.js you probably saw on my screen there was solution.js but that file is supposed to be hidden so in yours you wouldn't see it you guys wouldn't see that okay because we're hiding the solution file from you if you want to see it click this hit show hidden files and it'll show you everything including the solution but i only recommend looking at that if you're really really stuck and can't get past it okay but the solution is there for you the whole time all right so now we have imported some of these files from third web sdk which you're going to need later so for example we need this use vote hook this use token hook use address use meta mask and use disconnect okay for now i don't want you to worry about these two i only want you to worry about these three we're going to use these three hooks right here to make sure that our connect wallet button is working okay so the connect wallet button is when you start your app and you have the connect wallet button show up on your right hand side this one we're just gonna go ahead and make that functionality work okay so in order to be able to do that by the way we have some notes here for you too so if you wanted to attempt this on your own right all the notes are there for you and what each function should do the bodies of the function are written make sure you don't change the bodies of the function they're i'm sorry make sure you add stuff to the bodies of the function but don't change their names because all their names are important and they're being referenced in other files and so if you like change the name or you make it lowercase or uppercase or whatever this create proposal function will not work and then you'll have to go in other files and make it work okay so just keep these variable names as they are all right so we've imported all of this stuff now let's go ahead and and add it so we're going to add this disconnect wallet and then connect with metamask all right here you can see this uh note that says get the address using third web's convenient hooks so i'm gonna remove where it says true and we're just gonna go ahead and say use address all right next up for connect with the meta mask we're gonna use the hook that we got from up here from third web sdk and we're gonna go ahead and say use meta mask okay and that will give us access to metamask and then we're gonna also disconnect wallet and so we're gonna use the use disconnect hook here okay so now our address is set our connect meta mask is set and disconnect wallet is set now what we have to do is we have to go down and we have to export all of these luckily our exporting is already done so normally you would have to export this okay you'll have to make sure that you say connect with metamask disconnect wallet and address all right so what we're going to do is technically this address that we have here is really the current user address okay whoever the current logged in user is so i'm just gonna go ahead i'm gonna right click this too and rename all references and i'll say current user address all right now just double check if you scroll down and make sure that current user address is right here as well and um so we're we're giving this off to our context provider okay and if i go to my context if i go outside of my context now to my login file so let's go to components and i'll go to my login.js component you can see that login is already destructure and connect with metamask so that's the one that we provided it it's getting it from our context and then down here you can see that on click we're giving it that connect with meta mask button now what we're going to do if we want to test this out and run this now metamask sometimes doesn't like working from an iframe so meaning within this window right so what we're going to do is we're going to hit that new tab at the top right this is opening a new tab so we'll open this up okay and let's try running this and let's see what happens and if you're wondering what the hell is happening with qazi's shirt that's just because it's a green shirt and i have a green screen behind me and so it thinks i'm not really wearing anything okay we'll wait for this app to load and then as soon as it loads we'll hit that connect button all right so if we have done everything correctly fingers crossed didn't mean to print that oops fingers crossed if i hit connect with meta mask my meta mask should pop up at the top so let's see connect with metamask boom there you go it's showing that i'll hit next connect and something should happen great so now we're getting an error which is totally okay okay we just all we're trying to make work right now is a connect wallet okay so there's some other part of the app that's complaining that's fine we're going to fix that no problem all right so now that we've connected the wallet with this connect with metamask that we added to our context.js now we should actually be able to go to the deployed version of the app so make sure you don't do it in preview because that won't work so go here and now we should be able to hit connect with meta mask and our metamask boy thing should pop up okay boom right there let's click that and connect boom look at that it brings me straight to the home page of the website right and i can see if coin down make a proposal and it's giving me uh whether it's against for or abstain how much has been against for or abstained and then a way to disconnect my wallet now this over here that you're seeing you can notice that there's a text in here and it says it's a dummy proposal okay so this is fake dummy data that we have hard coded for you so you could just see what it looks like but then what we're going to do in our next steps is we're going to auto populate it populated with actual data right so for example if i show you this if we go to our index.js you could see i have this state variable here called dummy data and inside of dummy data i have who the proposer is okay and i gave it a wallet address i'm telling it what the votes are right so you could see 30 thousand forty uh thirty thousand four hundred forty three right and then four has forty three thousand and you can see that four here has forty three thousand uh abstain has thirty four hundred which is right there so we're clearly pulling this from the dummy data and the dummy data is inside of our index.js all right so if we go back to our code and we go back to our login page okay you can see that we have given our connect with metamask but something else that we've actually done that's really cool if we go to i believe our index and we scroll down actually let's go to our header so let's get out of pages let's go to header.js and inside of header you're going to see that we have the disconnect button right and since you added it to context you can see we're getting our disconnect wallet from our context and right over here we're giving it to our on click so now when you actually click this disconnect wallet you'll get disconnected as well all right let's go ahead and hit disconnect wallet and first let's go ahead and just refresh the apps to make sure that all of our current changes are up to date all right so we're going to go ahead and hit that disconnect wallet button okay so i'm clicking it but nothing is really happening so give me one second here let's try it one more time boom there you go i hit disconnect wallet and you can see it's disconnected the reason why it's working is if you go to your header in your components you'll see we're already extracting disconnect wallet and then we're saying hey if the disconnect wallet function is there then on click disconnect the wallet otherwise just console log disconnect button clicked okay so in our case we do have access to it so then let's go ahead connect with blah blah let's hit disconnect and boom you see it just disconnects you right away all right so here's what we're gonna do let's go back to our third web dashboard and we're gonna go ahead to our a coin down vote that you created earlier and let's go ahead at the top right you see where it says create proposal click that so we're going to create a proposal and we're going to say uh we're going to say hire a reactions developer okay so i'm gonna make submit this proposal and then metamask is gonna pop up and it's gonna show me this i'm gonna go ahead and hit confirm okay then it's gonna okay let's see we've gotten an error all right so there you go my proposal is created successfully all i did is i just removed the emoji maybe it has problems when you do it with an emoji so if it failed for you like it failed for me the first time just do this and you should be fine now we have one proposal created already all right so now that we have this in here let's go back to our app and we're gonna try to actually pull all of this data and how we're gonna do this is inside of our let's go back to our context so inside of our context let's go down we're going to go ahead and get all of the proposals here okay and i'm going to say for getting all the proposals i'm going to say cons proposals and in order to get my proposals okay what i need to do is i need access to my contract address for voting so i need access to the voting contract address so how i'm going to do that is let's click to our home page and let's copy this vote contract address and so i'm gonna now go up top right here where we have let vote and i'm gonna now say use vote and i'm going to pop in that contract address now this use vote hook we've already used pulled it from here and you can see we have a used token hook as well okay so i'm now going to go ahead and save proposal is equal to await vote.getall so this will get all of my votes and then we can console log these proposals and then we can also simply return them all right now so watch this if everything you've done correctly here if you go to your app it should automatically pull your proposal and if you actually see it already is look at that it's pulling your proposal from the proposal that you've created right so for example if i go here i can see higher react.js developer and it's actually pulling it so that is fantastic i mean that is so slick that happens so quickly now let me show you all the kind of behind the scenes logic that um allowed it to get rendered to the front end so we're let's go ahead and see this right so we're we have this function get all proposals now we need our entire app to have access to this get all proposals and so what we have done is we've sent it to our provider get all proposals and then let's go to our index.js and inside of our index.js you'll see we have this use effect hook what it's doing is it's calling our get all proposals function and since it's a promise we're saying once you get it then check if there are any there are proposals so that's why it's checking the length if there are proposals then i want you to reverse the proposals so we call dot reverse on it and the point of this dot reverse here is so it reverses the order right so you actually see it in a descending order meaning the most recent ones first and then we go ahead and console log it so you could see it let's go back to the app i'm gonna hit inspect let's click console and you can see i'm getting these um arrays of objects here right and you can see inside of it i have a proposal and that proposal says hire react.js developer and then it has a bunch of different information in here that's not super useful for us but it can also tell us the votes and we can see it has votes and it has how many you know what are the types of those votes and how many votes those have okay so let's get out of here let's close this so it's already pulling the proposals like so for example if you made another one it will also pull that too so if i go ahead hit create proposal and i say hire a next.js developer okay let's hit submit proposal and make sure you have matic in your wallet okay hit confirm make sure you're on the mumbai network you have matic in your wallet okay so a couple of things just make sure if you get an error no problem just refresh try again if you added emojis remove them try it without emojis i think sometimes the emojis can throw it off is what i've noticed at least maybe you might notice something different if you notice that they don't really give you problems but it was something else let me know that too so here proposal successfully created and you can see higher nexus developer showing up but it's saying the state is currently pending which means that it won't be showing up yet in our app but once that state is not pending anymore it should show up right away there you go you could see our app is automatically pulling higher next yes developer so that is a really nice experience and this is what's helping do the rendering right it's calling the function and uh you know showing it out onto the screen so now well you might be asking okay how is proposals actually showing up kazi i see you're calling the function i see your console logging here how it's actually showing is if i let's go to command f4 proposals and here you see we have proposals and then we're just we're checking if that proposal exists if they do then we're iterating through the proposals and then we're building it out in a proposal card okay to get the keys all right so you can see that we're just rendering out the proposals that is what's allowing the proposals to show up okay if there are proposals then show them okay um and if there aren't if we if we're in a situation where we don't have proposals right so you can see the whole thing is wrapped in a ternary operator with proposals so proposals exist do this if proposals don't exist well then what i want you to do is show the dummy data you guys see that right there dummy data so this here is the structure of the one proposal we get right so imagine this is a proposal right here the top part of that proposal is the proposer who proposed okay and then uh this part over here which says testing or whatever right we said hire react.js developer that's the description and so this is the data structure okay so meaning like that object that we get back this is how we can parse it we can look we can grab the proposal from the proposal we could grab the description from it and a few other things now there are a few other things like the status so it can say defeated it can say successful so for example if the if most people were against and the vote is over ill say defeated if most people were four and it's over ill says successful okay so that's the status state and then you have a vote types array so this is like okay i have three types i have type against type four type abstain and then we have the vote count at the bottom that shows me okay against is eleven thousand four zero thousand and abstain is zero um or sorry not 0 000 what the hell zero eight coins and abstain is zero if coins okay so this is the data structure so if you understand this that's going to be valuable for you as we continue through the build all right now we're going to make this function create proposal and what this does is create a proposal to mint tokens to the dao's treasury okay so let's get to work on this create proposal guy now the first thing i want to do is i'm going to have an amount so i'll just set the amount here to 100 000. so if you do underscore this it's the same as saying this but this is just easier to read all right so we're going to get rid of this amount here actually so what we're going to do is going to be even some a lot simpler and i'm just going to go ahead and say hey get me the proposal and the proposal will be we're going to await vote.propose and uh this is what we're gonna propose we're gonna pass in the description the user gave us and that's it okay and then we're just gonna console.log the proposal proposal okay so this statement right here just this command right here will automatically create create a proposal for us and it'll add it to our third web so we're gonna see another proposals pop up in there now let's go above and finish our is executable function all right so what we're going to do is we're going to go right here and for our is executable it's going to take in an id okay and it's going to check if the proposal given is executable okay so i'm going to go ahead and say const can execute and then this is going to return to us a boolean and i'm just going to say vote can execute and it'll take in an id okay and then we'll just return can execute all right boom done and then we're going to also check if the user has voted for the given proposal so this will actually check if if the whatever the user was you know mostly the logged in user if that user has voted or not and so we're gonna say await vote dot has voted and we're gonna take in the address of that user as well okay and then um we're gonna go ahead down here and we're gonna say has voted and then we're just going to return the res all right we're going to call this current user address okay because that's what we're choosing to call this so everywhere you see address change it with current user address and so there we go and that should be what check if voted should look like all right so for the vote for i'm gonna go ahead and say try and then i'm gonna set our delegation and i'm going to say await token.get delegation of and we're going to get current user address okay and then if the user has delegation okay delegation so this will basically just check if the coins have been delegated right if they have been then we're gonna say delegate to address all right and we're gonna say vote type and let's go down here i'm going to say if the type is against here's what i want to happen okay so if the type is against i want to set vote type to vote type dot against all right so vote type if you're seeing hey what is this vote type it's actually being we're calling it from third web so we're calling it right here vote type okay we're importing it so let's go ahead and go for type not against and then we'll say else if type is for okay if this is the case we're gonna say vote type is equal to vote votetype.4 okay and then we're going to say we're going to go down here we're going to say else vote type is equal to vote type abstain because that's really the only choice left at that point stain just like this okay so let's get out of this else here and i'm gonna say my result is and we're gonna await check if voted we're gonna pass it the id if i have not voted all right so this in other words had this is really has voted okay so you could change that so then it's like okay so if the user has not voted then effectively i want you to await and go ahead and vote okay so then we're gonna go ahead and call uh your you know we're gonna we're gonna place a vote all right that's what we're gonna do if you haven't like if you clicked it and you hadn't voted yet then we're gonna place a vote otherwise we're going to say you have already voted for this proposal okay and we can even make it fun i guess it oh oh looks like you have already voted for this proposal okay so if you have already voted it will detect that with this okay and then at the end of all of this this try catch block we're gonna go ahead and say catch and we'll say error sorry error okay and if there is an error then i just want you to console log it so we can just go ahead and say console log there we go okay so this is our vote for all right all right so if you actually scroll up here and you see this error that says property delegate 2 does not exist on type string we have not add given any value to token so let's go ahead and set that up so we have this use token hook that we have so let's go ahead and do this we're going to say use token okay and then this is going to take in the token address that you got from um from third web so go back to your home page on third web and on your home page you're gonna see your token copy the contract address for your token okay so make sure it says make sure it says token right here okay contract type and then just paste that so now you have token okay now that error should go away because delegate2 does exist on it okay and then make this a capital left here for votetype.4 make it a capital f and that'll get rid of that little error that was showing up okay and just to kind of recap and understand what's happening here this part of the code is basically saying hey delegate your custom tokens you own to be used to vote okay this part here is determining what the user voted and then our parts underneath it is check if the user has voted okay if they haven't voted then cast their vote and if they have already voted then just let them know you've already voted and here we're just catching any errors that happen okay so that's really what's happening in this entire script it looks scary but it's really not all right guys so let's go back to our app and see if you can create a proposal and vote for it so if you had done everything correctly in here you should be able to do something okay with it so i'm gonna go ahead and say hire an angular developer okay let's go ahead and hit submit and see what happens okay something really weird happened but um our mask popped up so let's go ahead and hit confirm and let's see what will happen okay so let's fix this probably some icon is showing up but it's telling us that it's submitting our proposal here so that's a good sign now let's take a look at our meta mask and let's go ahead and speed this up and we'll fix this ui bug that's happening but let's just see if our vote is being casted or not that's the main main main thing because if our vote or if our proposal is being created then you know the main functionality app is working so our proposal looks like went through let's refresh and let's look at here as well let's refresh our third web and see if in our third web we got a new proposal oh nice look at that we just got a brand new proposal hire an angular developer proposed by and it seems like it's pulling my wallet address and let's see here yo that is sick right like our angular developer uh proposal is coming up so that is beautiful all right so basically that little error that happened it was toastify and it was missing its css so that's why you didn't really see anything so we're just gonna go ahead and import this inside of our index.js okay you probably will already have this but it just wasn't there in mind so because i want to give away all the front end i'm going to give you this don't worry so then you don't have to deal with that stupid problem let's go back here and let's make another proposal and i'll just call it another proposal and let's hit submit and see what happens and now you can see it looks beautiful right submitting proposal comes up looks really nice and i can hit confirm and now you know if the proposal is done it will tell me it's successfully done too so that's the really nice part so i'm gonna speed it up in the meantime just keep paying for it and hitting speed up okay and then whenever uh it's done you can go ahead and hit refresh all right so this is good now let's get out of here we have our app working right our toaster toastify thing was showing up at the top submitting a proposal looked clean looked nice and now we know our proposal has went through if we refresh on third web we'll be able to see it and then if we go back and we refresh here we'll see it now it's time to vote so let's see if our voting would work okay so i'm gonna go ahead and hit open up inspect element as well so i could see what's happening and let's go ahead and hit four here and uh it says false has voted so you see it doesn't it notices that i haven't voted yet so that's a really good sign and then i'm gonna go ahead and hit confirm all right so i've had i hit confirm and now let's see how long it takes for my vote to cast cast vote with reason is what you should see it's queued up and i'm gonna go ahead and hit refresh on third web as well to take a look if my vote has come through yet i don't think it has okay not yet it's still loading and now let's speed it up so it happens just a wee bit faster okay speed it up some more right let's refresh okay so sometimes this can take a second don't you know don't worry about it's not too big of a problem we'll just wait it out ten percent increase let we do aggressive it doesn't seem like it's allowing us to go much faster ah there we go okay so we could see that we have voted for this and there is 700 000 a coins worth of power towards this proposal meaning if somebody wants to overthrow this they need to vote they need to have like more than seven hundred thousand coins uh eight coins to beat my vote so it either needs to be multiple people that need to vote that have more than seven hundred thousand eight points or it needs to be somebody who's like richer right in this community than me who needs to vote and overthrow me otherwise this is not gonna get overthrown and this another proposal is gonna get passed in favor four okay so after two minutes pass pretty much the proposal window's gonna close and you see it says this one says defeated pretty soon this one is gonna say successful because we have a four and we don't have any against or abstains so it seems like it's gonna go through okay so there you go it looks like almost all of the functionality of our app is working right we don't really we're not really facing any problems all right now i'm going to try to vote as a second person so it looks like there's multiple people voting here so i'm going to go ahead and refresh um and yeah and you can see right it's actually pulling the 700 000 eight coins it can see that too which is super cool now i'm gonna come in and log in as a different user to vote so let's go ahead and let's actually try voting as the same user and let's see it goes uh oh looks like you have already voted for this proposal so you can detect very clearly that you have voted so that's good now i'm going to switch my user so i'm going to go ahead and go to my other user and i'm going to connect to the site and let's go here and now i'm going to vote against and let's see what happens i tried voting against and it says address is not defined so let's go ahead and see where we're using address and where it's not defined all right so here this is it it's we're using address when we should really be using current user address so let's go back to our app let's hit refresh and let's try that same thing again and let's see what happens so that vote has ended okay so that vote actually just ended because uh this is successful because two minutes passed and we had uh two minutes passed and we already had somebody voting for and nobody else voted in that time frame so that looks like it succeeded all right so now you can see that i have this whole thing coming up it says successful okay and we have this execute button here as well so this execute button would be like if you wanted to set it up so like let's just say that you wanted to hire a developer and you knew exactly which developer it was and then you had their wallet address right here you could hit this execute button once this vote passed and it would automatically fund their account with money okay so that's the really cool part about this you could do it like that now i'm gonna create a proposal from a different account and let's see what happens let's see if we run into any problems i'm gonna say um eat a cookie no hold on eat ice cream tonight so let's see what we want to vote for we want to eat ice cream or cookie or what do we want to eat so let's see let's go ahead and start with ice cream i'm going to try to create a proposal and you're going to see i get this error that says proposer votes below threshold and this basically implies that i haven't delegated my coins to this dao and so therefore i'm not able to like create a proposal with it or do anything so we're going to go ahead and fix that now okay so let's go back to our app we're going to write a useeffect hook that's going to catch a scenario where the user who hasn't delegated their coins can can use this dao okay so we're going to create a use effect hook and use effect we have a function and then our dependency array is going to be empty so it's not it's going to just fire off on page refresh and it's going to be an async function i'm going to go ahead and say try so we're going to try and see if we have this delegation and i'm going to await it okay we're going to get delegation of the current of the current user so i'm going to say current user address okay and then if delegation so we're going to actually repeat this code and we could probably even just copy some of this so this part over here just copy this and paste this because we're effectively doing this same thing here okay so i'm going to say boom paste okay there we go okay and then we're gonna say catch and for catch we're gonna do the same thing hey if there's an error then just console.log and we're going to say error.message and we'll we'll follow it up with error and then us and then since this is a iife okay me iife immediately invoked function expression that just basically means that since this function doesn't have a name you need to call it right away because if you don't then you won't ever be able to reference it by anything so i'm just gonna call it right away okay so this block of code will just call itself and yeah it'll call itself whenever the app loads so let's go ahead now we're getting this error that says use effect is not defined not a problem we're just going to go ahead and import use effect from react so i'm going to go ahead and say use effect and then we should be gucci okay and then let's go to our app and let's go ahead and hit refresh okay and now let's try making a proposal so proposal uh eat ice cream tonight let's go ahead and put an ice cream emoji there i'm gonna hit submit there we go now it says submitting proposal ah okay getting an error again all right now what i want you to do is just switch back to the main account okay so i'm gonna go ahead and i'm gonna reject this just ignore ignore this for now okay don't worry about that go back to your main account so i'm just gonna switch back to my main account that i was on which is my btscp in this case and then i'm going to make the same proposal with the main account and let's see if we can vote from the main account and another account so let's try that that's important because we we don't also want maybe everybody to make a proposal we want it to be where only like we as the owners of an account can make um the proposal so let's start with this for now and uh let's take a look at our metamask and see what's happening so i'm going to go ahead and say speed up and then we'll wait and it looks like the proposal has happened so if i hit refresh it should pop up pretty much right away all right there we go i got my ice cream proposal i'm gonna go ahead and say i'm for eating ice cream so i'm gonna hit i'm gonna vote for four and this popped up let's go ahead and hit confirm and now we'll see what happens okay so now we have one person voting for let's just double check that our vote is going through i'll just speed it up a little bit okay but in the meantime while that vote is pending i'm gonna go ahead and switch so that vote shouldn't be pending anymore actually but let's refresh and that vote should be showing up and you can see that 700 000 worth of ape coins have voted for ice cream tonight now remember this is not you actually putting your money on the line it's just saying that your seven your vote has seven hundred thousand a coins worth of power okay that's all that means now let's go to our uh bts cp2 account okay so you're go now go to your second account and from your second account just go ahead and see if you could vote so i'm going to go ahead and say against and boom look at that it actually allows me to vote and let's go ahead and hit confirm and now let's go to our app here i'm gonna hit refresh okay and there you go you can actually see um actually hold on i think our vote is still processing it hasn't happened yet so i could speed it up now it has happened let's refresh let's take a look oh we don't i don't see it yet i don't see it yet so that means i must have voted without having my coins be delegated right that's probably that's probably what that actually means okay so let's see what the error what problem we're running into here okay we're still running into that error okay let's go back let's go to our dashboard and let's hit refresh on this ice cream one ah so what happened the first time it was actually delegating my tokens towards the thing now i can actually vote so let's go ahead and vote okay so delegation just means i'm allowing you know if uh i'm a law allowing uh my vote to have power with this ape coins okay so i'm delegating my coins towards the power of voting and these you know towards these proposals now i can actually vote so this is this is working as expected so this is good this is good all right so our vote is now pending okay our delegation is complete so that's good let's go ahead and speed up our vote it says queued and once it's done you'll see that it'll be a green text underneath it which would imply that it is done there we go and now we could see august 2nd and it is done okay let's go ahead and hit refresh and let's see if we have somebody let's wait for it wait for it let's wait to get the dynamic data okay let's go to our dashboard and let's see if we voted for it or not okay we have active awesome so you saw how we were able to do that now we can actually even make another one right eat cookies later and let me put a cookie here and i'll hit submit and now watch this from my second account it's also allowing me so let me just reject all of these transactions for now so i can just show this from scratch let's go ahead and just refresh now you'll see from my second account since i've delegated my tokens i can now make a proposal from this account as well so eat cookies tonight let's put a cookie and let's hit submit okay and now you're going to see my meta mask pop up right there above my head and i'm going to go ahead and hit confirm and now that proposal should be able should be popping up soon okay so we'll just wait for it and uh if it allows you to just go ahead and speed it up okay all right there we go our uh our proposal seems to have happened so now with the second account i should have been able to create my proposal and boom there you go i was able to actually create my proposal with the second account so with that said guys i hope you enjoyed this build it was a ton of fun to build it together with you from scratch we had already done a lot of the front end work which means that if you followed along hopefully it saved you a ton of time from having to do every single thing from scratch so make sure you fork the rapplet below because it'll save your life it'll you know be able to give you all the front end all the styling the components so that way you're only writing the web 3 logic and doing a lot of the third web stuff with that said i hope you enjoyed it i hope you picked up something a new skill out of it and just so you have some context right blockchain world there's a lot of opportunity there a lot of developers making you know 70 000 thousand dollars hundred thousand dollars a year and a bunch of developers i personally know they're making hundred that thirty thousand two hundred thousand three hundred thousand dollars a year or more and so if you're good in this community and you're as in you're a great developer and you're a good person you can go pretty far and this industry is just booming so if you learn these skills you'll be very you know sought after and if you use something like third web it makes it a lot easier for you right to be able to do all of these things it simplifies the process and it just makes it a much more enjoyable experience instead of having to just write every single line of solidity code all by yourself and that just makes things more complicated with that said i love your beautiful face i hope you enjoyed this video and as always i'll see you in the next video
