With timestamps:

00:00 - you'll build an open c blockchain web
00:02 - 3.0 app with next.js you'll style it
00:05 - using tailwind css you'll learn how to
00:07 - create your own marketplace on the
00:09 - blockchain i'll then show you exactly
00:11 - how you can mint your own nfts and make
00:13 - your own nft collection then in this app
00:15 - you'll be able to list and buy your own
00:18 - nfts that you have created on your own
00:20 - marketplace using the third web sdk will
00:23 - then add authentication to the app using
00:25 - metamask we'll then use sanity io as our
00:28 - database backend to store our users and
00:31 - owners and marketplace information about
00:33 - them we'll build our front end and
00:35 - update our data on the collection and
00:37 - nft pages using third web on the
00:40 - blockchain you'll learn how to use grok
00:42 - and sanity api to retrieve your data the
00:44 - chain that you'll be building this app
00:46 - on is the ethereum chain and finally
00:49 - we'll take your app
00:51 - deploy it using versailles and you'll
00:54 - have your own openc web 3.0 blockchain
00:57 - app built with next.js now right before
01:00 - i demo the app go ahead and do me a
01:02 - favor smash that like button do it right
01:04 - now turn that thing blue now that it's
01:06 - blue here's a photo of a koala bear just
01:08 - because i love you awesome now with that
01:10 - said also subscribe to the channel if
01:12 - you want to become the best react next
01:15 - or blockchain developer in the world
01:16 - that's what we're here to help you do so
01:18 - subscribe become a part of this
01:19 - community that said let's go ahead and
01:21 - demo the app right now so look at this i
01:24 - have my openc app open up right here
01:27 - with the beautiful header a stunning
01:29 - background the blurred filtered effect
01:32 - right when i hover over these buttons
01:33 - they look super nice i got my nav bar
01:35 - looks exactly like it now i'm gonna go
01:38 - on to my next page which is i'll hit
01:39 - collections and we'll go to our
01:41 - collections page right now here i have
01:43 - my board ape yacht club listed i can see
01:46 - how many owners it has we can see the
01:48 - floor price we can see the volume traded
01:50 - i have all my nfts listed here and what
01:52 - i can do is i can go to let's say one of
01:54 - these so for example this one is listed
01:57 - and is up for sale this one is up for
01:58 - sale this one is not so you don't see
02:00 - any price there all of this actually is
02:03 - being pulled from the blockchain using
02:06 - third web right and this is created by
02:08 - this is coming from our database our
02:10 - sanity database that we're gonna be
02:11 - using so let's just go ahead to six five
02:13 - one two i'm gonna click on it it's gonna
02:15 - load this up and check this out looks
02:18 - exactly like open c so i have my nft
02:21 - 6512 i see a history underneath right i
02:24 - see my data and now i can go ahead and
02:26 - click buy now and let's watch what
02:27 - happens i'm going to hit confirm and
02:30 - let's wait for it fingers crossed whoa
02:33 - look at that i see that it came by and
02:35 - went away quickly so this purchase was
02:38 - actually successful now in order to
02:40 - prove that it was successful let's go
02:41 - back to our collections and notice
02:44 - 6526512 here is not listed there anymore
02:47 - it means it's actually sold and somebody
02:50 - has purchased this just to confirm that
02:53 - the confirmation happened on metamask
02:54 - here you can actually see the history
02:56 - that one purchase was made and now let
02:59 - me show you the authentication part and
03:00 - how we're using metamask authenticate so
03:02 - let me go back to my home page i'm going
03:04 - to click meta mask go wherever the
03:06 - deployed version is connected we'll go
03:07 - to connected sites and disconnect now
03:09 - that i'm actually disconnected and
03:11 - noticed that on the home page i'm logged
03:13 - out i can't do anything but once i hit
03:16 - connect wallet my meta mask extension
03:18 - pops up i can go down choose the account
03:20 - i want to connect with hit next hit
03:21 - connect and boom you are in and now you
03:24 - can go to the collections page and check
03:26 - out the collections see what's listed
03:27 - and buy or sell so with that said i'm
03:30 - excited i hope you're excited let's go
03:32 - ahead and start building this thing up
03:34 - now before we start getting coding i
03:36 - would do want to let you know we're
03:37 - building the world's best and biggest
03:39 - web 3 community in the world around web3
03:43 - and blockchain so make sure if you want
03:45 - to join that click the button below
03:46 - it'll take and ask you for a name and
03:48 - email and it'll also give you access to
03:50 - our discord the second thing i do want
03:52 - to let you know is now at clever
03:53 - programmer what we're trying to do is
03:55 - we're opening up locations in different
03:57 - cities we're so we might be coming to a
03:59 - city near you because we're already in
04:01 - new york city in l.a hosting sessions
04:03 - almost every single week in person
04:05 - through meetup.com make sure that if you
04:07 - want to sign up for those click the link
04:09 - below it's going to be
04:10 - cleverprogrammer.com
04:11 - meetups so we're already in tampa
04:13 - florida in north carolina raleigh los
04:16 - angeles and in new york city so
04:18 - whichever one is the closest to you pick
04:20 - one and come in we'll do web 3 stuff
04:22 - we'll do web 2 stuff we'll build full
04:24 - stack projects we'll dive into next js
04:26 - we'll dive into solidity or whatever you
04:29 - want to do right so make sure take
04:30 - advantage of that and you can actually
04:32 - come in person get help this vision is
04:34 - big this movement is freaking exciting
04:35 - be a part of it click the button below
04:37 - and sign up for that as well oh and it's
04:39 - completely free so you have nothing to
04:41 - lose go ahead and do that right now all
04:43 - right let's start coding so i'm gonna
04:44 - hop over to my terminal and i'm gonna go
04:46 - to my github and we're gonna do yarn
04:49 - create next app and i wanna install it
04:52 - with tailwind so i'm gonna do dash e
04:54 - with tailwind css and then name your app
04:57 - so whatever you want to call in this
04:59 - case i'll call it openc blockchain clone
05:03 - okay you could call it whatever you want
05:05 - now it's going to begin the installation
05:07 - process and hopefully it will install
05:10 - tailwind as well so let's go ahead and
05:14 - see what it returns to us so it says
05:16 - it's done we're going to
05:18 - cd into it and i'm going to do code
05:20 - period so it opens up my visual studio
05:22 - code in the same exact directory and if
05:26 - i go here uh let's see if i have
05:28 - tailwind i actually have tailwind can
05:30 - config set up properly here if i go to
05:33 - my global css tailwind is right there as
05:36 - well so it's perfect i got my tailwind
05:38 - if tsx freaks you out don't worry it
05:40 - this is typescript and you can
05:42 - essentially run javascript files in here
05:44 - no problem and if it's still freaking
05:46 - you out you can just go ahead and name
05:48 - it jsx and
05:50 - it won't do anything or you can even
05:51 - name it js won't really make any
05:54 - difference to your app so you'll be fine
05:56 - either way typescript is really awesome
05:58 - and i want you to start learning how to
05:59 - use it because it is super cool all
06:01 - right now let's just make sure
06:02 - everything in our app is running so i'm
06:04 - going to zoom in here a little bit so
06:06 - you can see things a bit better let's
06:08 - close this off i'm going to command j
06:10 - and open up my command line here and
06:12 - we'll open up another one and let's do
06:13 - yarn dev let's just make sure that we
06:15 - have everything running and there you go
06:18 - we have everything up and running so my
06:20 - app is running on localhost 3000 we are
06:23 - good to go if i scroll up and down
06:25 - everything is looking good now in order
06:27 - to get it started we're going to clean
06:29 - up this whole darn thing and we're just
06:32 - going to kind of start from scratch so
06:34 - let's just do h2 i'll say yo and
06:36 - hopefully that shows up that yo shows up
06:38 - right there this is a great place to
06:39 - start let's continue from here all right
06:41 - the next thing we need to do is set up
06:42 - our database with sanity so the first
06:44 - thing you need to do is type in this
06:46 - command paste and uh hit enter you need
06:49 - to install sanity all right if this is
06:52 - giving you problems go all the way to
06:54 - the front type in sudo and then do this
06:56 - so this should install sanity cli in
06:58 - your computer i'm not gonna do this
07:00 - because i've already installed sanity so
07:01 - i don't need to reinstall it once that's
07:04 - done what you need to do is let's create
07:06 - a folder at our root level so hit that
07:09 - folder icon right there and we're going
07:11 - to call it studio make sure it's at the
07:13 - root level so it should be the same
07:15 - level as pages now i'm going to cd into
07:18 - my studio all right now that i'm in my
07:19 - studio i'm going to do sanity init and
07:22 - do not hit enter yet make sure to do
07:24 - coupon clever programmer if you want
07:26 - your app to work this is really
07:27 - important you do that and we have
07:29 - negotiated a deal with sanity so they're
07:31 - going to give you guys the best stuff
07:32 - meaning that you get 200 000 api
07:34 - requests for free you get a whole bunch
07:36 - of stuff for free all of this is
07:38 - completely free you just get it as a
07:40 - benefit if you're a clever programmer
07:42 - student on youtube so type that in and
07:44 - hit enter also we'll put the link below
07:46 - to sign up on using sanity's link so
07:49 - then you can get the free plan as well
07:51 - and you can host your database and
07:53 - unlimited free projects there freaking
07:54 - cool right now with that said once you
07:56 - have your line entered hit enter to
07:59 - install sanity now in terms of the
08:00 - project name this project is just open c
08:03 - blockchain clone all right hit enter and
08:06 - then just let it do its magic so just
08:08 - keep hitting enter it will do everything
08:09 - by default you don't need to set
08:11 - anything you know any anything more
08:13 - custom than that okay project output
08:15 - path that is uh perfect so we'll do hit
08:18 - enter and we will do clean project with
08:20 - no predefined schemas don't start it
08:22 - with a predefined schema we're going to
08:23 - start completely scratch all right now
08:25 - it's installing a bunch of stuff inside
08:27 - of your studio so you should see all of
08:29 - this stuff jumping into your studio so
08:31 - make sure you have that set up okay so
08:33 - we're gonna wait all right
08:35 - cool it's getting done linking the
08:37 - dependencies and then it's gonna give
08:39 - you the schema schemas is the important
08:41 - part so we're just going to go ahead and
08:42 - set up our schema in there properly and
08:44 - one thing we want to do is go in our git
08:46 - ignore and change this from a backslash
08:48 - node modules to just regular node
08:51 - modules hit save and it will ignore both
08:53 - node modules here and inside of the
08:55 - studio now let's go inside of our
08:58 - schemas and in my schema i'm going to go
09:00 - right here and i'm going to paste this
09:03 - so what i've done is i've just pasted
09:05 - this big schema i don't need that there
09:08 - and i don't need this closing right
09:10 - there hit save so it might be like hey
09:12 - what did i just add so i've added my
09:15 - entire schema which essentially is i
09:18 - have my users each users will have a
09:21 - username all right and this is what the
09:23 - schema looks like so if i go under going
09:26 - content i have users and market items so
09:29 - you can see on the left hand side i have
09:31 - users and then inside of my users i have
09:33 - user name so
09:35 - this over here is my username and now if
09:38 - i go right there you can see the title
09:41 - username right maps to username right
09:44 - there the wallet address maps to this
09:47 - one
09:48 - and because i said string it's a string
09:50 - the profile image maps to this one and
09:53 - because i said it's an image it takes in
09:55 - an image and then we have banner image
09:58 - and our twitter handle so on and so
10:00 - forth and then we have one for market
10:02 - items so what we're going to try to do
10:04 - is we're going to make it where you can
10:06 - just get access to our schema file we'll
10:08 - try to link it below and then you can
10:09 - essentially just copy paste that schema
10:11 - that i've added right here it's just an
10:13 - array of objects and i'll scroll down so
10:16 - you can also pause the video and
10:17 - manually add it if you need it to now
10:20 - that we're done with sanity what we need
10:21 - to do is make sure that we set up our
10:23 - meta mask so for metamask make sure you
10:25 - go and install metamask from chrome so
10:28 - go ahead download it install it that's
10:30 - step number one for you all right once
10:32 - you've set up your metamask account make
10:34 - sure that you have an account like the
10:35 - one i have here btscp admin the next
10:38 - thing we're gonna need to do is add in
10:40 - our network so make sure you're not
10:42 - gonna have all the networks that i have
10:44 - available here so what you need to do is
10:46 - go ahead to your settings go to advanced
10:49 - all right and then what you want to do
10:51 - is you want to click this that says show
10:53 - test networks so make sure that your
10:55 - show test networks is on and then once
10:57 - it's on go ahead and choose rankib test
11:01 - network that's the network you're gonna
11:03 - need to be on and that's the that's the
11:05 - ethereum blockchain all right now that
11:07 - our meta mask is completely set up let's
11:10 - go ahead and set up our third web that's
11:12 - what's going to allow us to actually
11:14 - connect and communicate to the
11:15 - blockchain so let's go i'm going to open
11:17 - a new tab and we're going to go to
11:18 - thirdweb.com and what i will say is
11:20 - actually use the link right here that
11:23 - will have in the description below
11:25 - because that link will give you their
11:27 - most you know the free access and it'll
11:29 - give you uh the best access because we
11:32 - have a good deal with third web as well
11:34 - so make sure you use that link and it
11:36 - let them know that you're coming from
11:37 - the clever programmer community this is
11:39 - the page you should come to if you click
11:40 - that link let's hit let's get started
11:42 - let's go ahead and connect our wallet so
11:45 - i'm gonna click meta mask and i will
11:47 - connect this wallet right here now once
11:50 - i'm in here most of you are gonna get
11:52 - this error at the bottom which is gonna
11:54 - say insufficient funds if you get an
11:57 - error that says insufficient funds you
11:59 - need to go
12:00 - to a faucet and get some free ethereum
12:03 - if you want to see how to get free
12:04 - ethereum oh before we keep continuing
12:06 - this video go ahead and smash that like
12:09 - button break that like button turn it
12:10 - blue and subscribe to the goddamn
12:12 - channel and let's keep going this is the
12:15 - link that we want to go to right here so
12:17 - i'm going to zoom in so you can see that
12:18 - it's faucets
12:20 - dot chain dot link slash rinkaby that's
12:23 - the one we want to go to so let's hit
12:25 - enter and i'm right here ethereum
12:28 - rinkaby now you need to give it your
12:30 - address i'm going to give it my account
12:32 - address right here copy paste and i only
12:36 - need to set myself 0.1 test eth let's
12:38 - say i'm not a robot so if it works well
12:41 - i should go from 0.68 to
12:43 - 0.73 eth let's hit send request and now
12:47 - it's saying waiting for confirmation so
12:49 - we're going to wait a couple of seconds
12:51 - usually takes five to ten seconds
12:53 - sometimes it might take longer it just
12:55 - really depends when you're using the
12:57 - chain because if you're using it at a
12:58 - time when it's kind of packed and booked
13:00 - and a lot of people are using it it's
13:02 - going to take longer it's kind of like
13:03 - the freaking la traffic the 405 it gets
13:06 - pretty congested all right so request is
13:08 - now completed the token has been
13:11 - transferred let's close let's check my
13:13 - meta mask and let's see and boom
13:16 - 0.73 eth we need that to do a bunch of
13:19 - things so now we're here okay great
13:22 - let's create a new project so hit that
13:24 - blue button right there for me create a
13:26 - new project we're going to create it on
13:27 - the test net not the main net and let's
13:30 - do rinkaby here onrain could be here we
13:33 - will say open c blockchain and let's
13:35 - just hit create that's pretty good it is
13:38 - saying you'll be prompted for one
13:40 - transaction so let's hit confirm this
13:42 - will cost us some gas fee so let's go
13:44 - ahead and pay that gas fee
13:46 - and then we're ready to get to the next
13:49 - uh stage all right now i'm in this
13:51 - project so what's super cool is if you
13:53 - have nfts and people start buying them
13:56 - and you make royalties all your
13:58 - royalties will be right here and then
14:00 - you just click this one button and these
14:02 - royalties come out and you can collect
14:04 - them third web makes all of this so
14:06 - freaking easy all right let's go ahead
14:08 - add module now the module i want here is
14:10 - the marketplace one we want to create
14:12 - our own marketplace because that's where
14:14 - we'll be able to list stuff so let's
14:16 - create it we'll say openc marketplace
14:19 - and uh let's put a three percent
14:21 - marketplace fee anytime somebody does
14:23 - any transactions we will get paid three
14:25 - percent for it let's go ahead and hit
14:27 - confirm
14:28 - to cover the gas fee and create this
14:31 - marketplace this will take a couple of
14:33 - seconds
14:34 - once our marketplace is up and running
14:37 - then we're good to go and then we're
14:39 - going to go on and start working on our
14:40 - nfts and so forth it should also bring
14:43 - up the second transaction for you so go
14:45 - ahead and confirm that as well and then
14:47 - just wait for this to finish all right
14:49 - now
14:50 - i see here that my marketplace is done
14:53 - being built i see these green check
14:56 - marks i'm the only one who i want right
14:58 - now if you want your friends or anybody
15:01 - else to have admin level access to this
15:03 - marketplace or you're gonna build a
15:06 - project and you need team members to get
15:07 - access simply just keep putting in their
15:10 - wallet addresses right here and if you
15:11 - keep doing that you can keep giving them
15:13 - access which is super cool and then when
15:14 - they connect to their wallet right here
15:16 - on third web boom they'll have access to
15:18 - the same projects you do so if you're
15:19 - working in teams or whatever do it this
15:21 - way and what i'd recommend if you're a
15:23 - part of the clever programmer community
15:25 - or you're at one of our meetups in new
15:26 - york city or la that we have you know
15:29 - all all of you should get under one like
15:31 - team account and then work on this
15:33 - project together like you guys can make
15:34 - little groups anyways let's keep going
15:36 - all right so this is my open sea
15:38 - marketplace currently you see it has no
15:41 - items listed because we haven't listed
15:43 - any and then it gives you certain things
15:44 - right now we don't need to worry about
15:46 - any of these let's go back to the
15:47 - dashboard so we're done building our
15:50 - project and we have a marketplace in it
15:52 - so openc blockchain right now i have one
15:55 - module in here which is a marketplace
15:57 - another module i need to create in here
15:58 - is an nft collection right there so
16:01 - let's go ahead and create that i'll hit
16:02 - setup module and we'll call it board ape
16:06 - yacht club you could call yours whatever
16:08 - you want and for symbol i'll just say
16:10 - bake
16:12 - and we'll say like anytime purchases
16:14 - happen we'll make five percent royalty
16:16 - let's
16:16 - let's hit this and then we'll wait for
16:18 - the transactions to pop up and hit
16:21 - confirm and then it'll have another one
16:23 - pop up if don't pop up then keep an eye
16:26 - on your meta mask and see if it shows
16:29 - like a one blue notification if it does
16:31 - it means it's a pop-up is there but it's
16:34 - hiding so you could click it and you can
16:36 - force it to like reveal itself oh yeah
16:38 - so if you look right a pop-up actually
16:40 - came for me and that's what's hiding it
16:42 - that's why it's not coming up so i click
16:43 - that one and then i can hit confirm
16:46 - right here and now the transaction will
16:49 - go through now just go ahead and get
16:51 - access to photos so for me these are the
16:54 - nfts that i've gotten access to you guys
16:57 - can go and literally download anything
16:59 - you want you can have it be a different
17:01 - project but
17:02 - yeah we'll also give you this folder
17:04 - like in the links
17:06 - in the description and you can download
17:08 - these assets if you want and then use
17:10 - these exact photos so let's go ahead and
17:12 - mint some i'm not going to sit here and
17:14 - mint all 17 because that's going to take
17:15 - forever i'll just mint like one or two
17:17 - for now so let's come down here and
17:20 - let's hit confirm so my nft collection
17:23 - is pretty much done now inside of my nft
17:26 - collection i need to like mint my nft so
17:28 - let's go ahead and hit upload all right
17:31 - and i'll go to my downloads i'll go to
17:33 - my bake which is board api club and
17:35 - we'll start uploading some of them so
17:37 - we'll start off with our first one
17:39 - right here and i'll give this some
17:41 - number two three one two and
17:45 - that's pretty good
17:46 - all right let's go ahead and mint our
17:48 - nft so now it's going to take a couple
17:50 - of seconds for it to mint and once it's
17:53 - done it'll show up so let's pay the gas
17:55 - fee for minting it and some other fees
17:58 - and once that's done this will mint
18:00 - sometimes it will take a really long
18:01 - time to mint so please do me a favor
18:03 - don't try to
18:05 - re-mint or whatever just wait because
18:08 - then you're gonna otherwise you're gonna
18:09 - get duplicates all right so we minted
18:11 - that one let's go ahead and mint one
18:13 - more shoop
18:15 - shoop name it three four one two mint
18:18 - all right copy the fee confirm all right
18:21 - and we're done with um our second nft
18:24 - here as well so for now
18:27 - this is all i'm gonna mint you guys can
18:29 - mint all 10 or 15 of them i'm just not
18:31 - going to do that right this second it's
18:32 - going to take too long we'll mint
18:34 - another one all right now let's go to
18:36 - our nft collection so i'm going to go to
18:38 - board api club nft collection what we
18:40 - need to do is list these guys we need to
18:43 - list them on the marketplace that we
18:45 - created so let's go hit list let's
18:48 - select the openc marketplace that we
18:50 - created we're going to do direct listing
18:52 - and we will do ethereum for the currency
18:54 - and the price of this will be let's say
18:59 - 0.0.1 eth for this and we'll hit list
19:02 - now have these pop up and confirm let's
19:05 - confirm this as well and we're just
19:07 - going to list out all of these so go
19:09 - ahead and list all three of these just
19:11 - manually run through it
19:13 - hit list do it and then do it one more
19:15 - time just so we have like or we don't
19:17 - need to list all of them you could just
19:19 - list like one or two that's fine like
19:21 - let's just list one more so we can also
19:23 - see the difference between listed and
19:25 - then unlisted ones also list us for 0.1
19:28 - eth boom let's hit confirm all right so
19:30 - for now we're pretty much done with our
19:32 - third web setup we're pretty much done
19:34 - with our sanity setup one thing i just
19:36 - want to do to make sure everything is
19:37 - good is make sure you're inside of your
19:40 - studio folder and just do sanity start
19:43 - let's just double check that our app is
19:45 - running the schema is looking like how
19:47 - we want it to look like all right and
19:49 - then go from there so just wait for this
19:51 - to compile let's give it a little bit
19:53 - once it's all ready to go then we'll be
19:55 - good to rock and roll so it's saying
19:57 - that it's
19:58 - on localhost
19:59 - 333 let's go check it out sign in with
20:02 - whichever provider you want i'm usually
20:04 - signed in with github so i just keep it
20:06 - consistent with github you could do
20:07 - google that's totally fine and notice
20:09 - that it has the users just like how we
20:11 - created and right now it has no users so
20:14 - we can create a user right now if we
20:15 - want and i can say clever quasi on this
20:18 - and i can give it a wallet address i can
20:20 - i'll leave that empty for now and i can
20:22 - also upload a profile image a banner
20:24 - image a twitter handle right and then a
20:27 - cl instagram handle so let's just do
20:29 - this let's hit publish so this is just
20:31 - from what we've made and then these are
20:33 - the market items so let's go back now
20:36 - all right so you are now done with the
20:39 - setup congratulations amazing job for
20:41 - sticking through that and now we're
20:43 - ready for the fun stuff we're ready to
20:45 - code so if you're excited i'm excited
20:48 - smash that like button let's start
20:49 - getting back in and let's start coding
20:51 - all right the first thing we're going to
20:52 - work on is the nav bar so let's get our
20:56 - nav bar up and running
20:59 - and our nav bar should be looking like
21:01 - this so when i full screen this right
21:03 - here
21:04 - you can see how this nav bar looks
21:06 - that's how our navbar needs to look so
21:09 - let's let's go ahead and build that
21:11 - thing out now
21:13 - i'm going to create a new folder we're
21:15 - going to call it components
21:17 - and inside of my components i'll have a
21:19 - new file it'll be called header.js and
21:22 - in here let's rafce
21:24 - save
21:27 - and then in here for now let's just say
21:29 - navbar
21:31 - or yeah header
21:35 - and let's just make sure that this
21:36 - component is showing up inside of our
21:39 - pages in index
21:41 - i will remove all of this and we'll say
21:44 - header we're going to say import
21:47 - i'm going to say header from
21:49 - component slash header and there we go
21:52 - we have our header showing up
21:55 - that's perfect now let's actually go and
21:58 - we're going to start styling our headers
22:00 - i'm going to go to my header
22:02 - and again from on the styling end guys
22:05 - i'm going to move through the styling
22:06 - part real quick because i want to get to
22:08 - the interesting parts of the build i'll
22:10 - full screen this as well so you can at
22:12 - any point pause it and kind of copy this
22:15 - but and i'll walk through the styling
22:17 - slowly as well once the whole thing
22:19 - shows up i'll kind of like walk through
22:21 - it a little bit
22:22 - so this is this is all our styling this
22:25 - is it
22:26 - and all these one liners are coming from
22:30 - tailwind css
22:32 - and and then this little hack here which
22:34 - is super nice
22:36 - this is awesome when you do brackets you
22:38 - might be wondering like why are we doing
22:39 - brackets until when this is if you want
22:41 - to give tailwind an exact color because
22:43 - one of the things that was like always
22:45 - super annoying to me about tailwind is
22:46 - like what if what if i want this exact
22:48 - color that i know i want or this exact
22:50 - size that i know i want so this is what
22:52 - you can do
22:53 - anytime you use brackets you can give it
22:54 - the exact things that you're looking for
22:57 - so then tailwind can extend to
23:00 - essentially really anything you want
23:03 - all right so let's go ahead here i'm
23:05 - going to make a div
23:07 - and this will have a class name
23:09 - let's give it style wrapper
23:12 - and then inside of our wrapper we're
23:14 - going to have a link tag because when i
23:16 - put my logos i'm going to wrap them in a
23:18 - link because it's going to be a
23:20 - url so what do i mean by that if i go to
23:23 - my app right here if i go to the
23:25 - collections page watch this if i hit the
23:27 - logo here it brings me back to the home
23:29 - page
23:30 - right so that's what we
23:32 - want in our app so we're going to put
23:34 - that in the link and i'm going to create
23:36 - a div
23:37 - this will have a class name of style
23:40 - logo container
23:42 - and inside of here i'm going to have my
23:45 - image tag
23:46 - so this is going to be coming from the
23:48 - next image so make sure to import image
23:50 - from next
23:53 - and we're going to give it our openc
23:56 - logo all of these files will also give
23:59 - you guys so you guys can get them but
24:01 - this is the openc logo you can also just
24:03 - go to the openc
24:05 - website and and get it but yeah so i'll
24:08 - make a new folder here it's going to be
24:10 - called assets
24:11 - and then inside of here i'm going to put
24:14 - my openc logo so right there that's it
24:17 - just a openc png file you can download
24:20 - it from the internet if you want and
24:22 - then put it right there
24:24 - cool so let's go back
24:27 - and i'm gonna say import openc logo from
24:32 - and we'll say assets
24:34 - open c logo png
24:37 - so there we go
24:39 - and then for heights
24:42 - we're going to give it a height of 40
24:45 - and a width of 40.
24:48 - and we'll close it it's going to be a
24:50 - self-closing tag
24:52 - now it's saying module can't resolve
24:55 - because it's not openc logo it's
24:57 - actually
24:58 - openc.png so let's try that again
25:01 - oh and it says link is not defined so
25:04 - let's also get link from next so i'm
25:06 - going to paste that right there so we
25:07 - got link from next
25:09 - let's refresh this
25:11 - and we need to give this href so for now
25:13 - let's just get give it a href of home
25:16 - perfect there we go so whenever you
25:18 - click it it'll bring you to home if i
25:20 - had given it a href of profile
25:22 - when you click it it would take you to
25:24 - slash profile slash profile would say
25:26 - the page could not be found because we
25:27 - do not have a profile page
25:29 - so
25:30 - let's just change this to slash perfect
25:33 - now inside of this image another thing
25:35 - that i will need to add is we're going
25:37 - to have a div
25:38 - and this one will actually this will be
25:42 - style logo
25:44 - text
25:45 - like this
25:47 - okay and we will say open c
25:50 - boom
25:51 - i actually really like this way of
25:53 - styling where you just add like a it's
25:55 - almost like react nativiy
25:57 - and you just write all your tailwind
25:58 - right there super cool instead of
26:00 - putting in another file and it's also
26:02 - better in my opinion than using stat
26:04 - styled components because what i don't
26:06 - like about style components is you can't
26:08 - tell when you're looking at your
26:12 - jsx you can't tell
26:14 - what's regular css and divs versus
26:16 - what's like an actual component that
26:19 - you're using so in this
26:21 - you can clearly tell because your
26:23 - styling just goes inside a class name so
26:25 - it looks super nice and looks similar to
26:27 - how you would style with next
26:30 - great so all of that is looking good
26:34 - we have our text open c showing up now
26:37 - right underneath this link we're going
26:38 - to create another div
26:41 - and this will have a class name of
26:45 - search bar
26:48 - and then inside of my search bar what i
26:50 - want to do is create my search icon
26:53 - put them right there and inside of here
26:56 - i want to do a outline search
26:59 - so this is going to be my search icon
27:00 - now you're going to be like hey where is
27:02 - this coming from it's coming from react
27:04 - icons so all we need to do is install
27:06 - that so i'm going to do yarn add
27:08 - react icons and hit enter
27:10 - this will install the react icons
27:12 - library
27:14 - okay and then all we need to do is just
27:16 - import these three icons that we're
27:18 - gonna need so i'm going to paste that
27:19 - right there
27:21 - our ai outline our cg profile and our md
27:24 - outline account balance wallet
27:27 - all of these are coming from react icons
27:29 - cool
27:30 - so let's hit refresh and let's see what
27:32 - happens portrays requested let's see
27:35 - let's kill our app and let's start it
27:37 - again let's see if that helps we're
27:39 - getting the same error oh i see my error
27:41 - i installed it in my studios so i need
27:44 - to get out of my studio and i need to
27:46 - install it here in the root directory so
27:48 - we're going to yarn add
27:50 - react icons because the studio doesn't
27:52 - need it our app needs it so now
27:56 - it's uh
27:57 - should be good to go in just a second
28:00 - boom there we go so now if you look we
28:02 - got our search bar right here our search
28:05 - icon is showing up
28:07 - because this icon is actually coming
28:09 - from right there
28:10 - all right so
28:12 - that's great perfect now let's go right
28:14 - underneath this div and what i want to
28:17 - do is actually make an input
28:20 - all right this will be text we don't
28:22 - need to give it a type right here we'll
28:24 - just give it a class name so let's go
28:26 - ahead and let's go give it a class name
28:29 - and we're gonna say style search input
28:31 - all right and then for placeholder
28:34 - i will say search items collections and
28:39 - we will say and accounts
28:44 - just like that
28:45 - search items collections and now when i
28:47 - hover over it notice that that effect is
28:49 - right there
28:50 - and if i had to explain this from
28:52 - tailwind if you look at the search input
28:54 - well it's telling us exactly what height
28:56 - we want it to have right 2.6 if i reduce
28:59 - this height to 1
29:01 - you can see that my
29:02 - thing just became a little bit smaller
29:04 - so we're going to give it our 2.6 height
29:06 - a width full if i take that away you'll
29:09 - see the width becomes slightly smaller
29:11 - so if i add that
29:13 - the width becomes full of that search
29:15 - input and then if i take away this
29:17 - background transparent watch what
29:19 - happens here right the whole thing
29:21 - becomes white and weird looking
29:24 - so all of the styling is right there
29:28 - that we need for this
29:30 - cool
29:31 - so we have our search
29:33 - and now all we need to do is essentially
29:36 - link to our collections as well and we
29:38 - should be good with the navbar
29:40 - shortly
29:41 - let's create another div right
29:43 - underneath this
29:45 - search input so we're going to do div
29:48 - and then i'm going to do class name
29:50 - and we'll do style dot header items
29:55 - and inside of these items let's do this
29:58 - i will do style.header
30:01 - item
30:04 - let's do class name and then inside of
30:07 - here i'm going to say collections
30:10 - let's copy this paste it a couple of
30:11 - times because we're going to need
30:12 - multiple
30:14 - things that we want here
30:16 - so we're going to have the second one be
30:18 - stats
30:21 - and the third one is going to be
30:22 - resources and this one is going to be
30:24 - create
30:25 - perfect now let's look boom collection
30:27 - stats resources create
30:29 - and then we just need some icons
30:33 - so we're going to add those as well so
30:36 - let's go here i'm going to say div
30:40 - all right and then this one is going to
30:42 - be class name equals
30:45 - i'll say style that header icon
30:49 - and we'll put our cg profile
30:53 - okay and right underneath this we'll
30:54 - have another div
30:55 - we'll do class name
30:59 - for this one i'm going to do header icon
31:01 - as well and then we're going to put
31:03 - another icon
31:04 - and this one is going to be our account
31:06 - balance
31:07 - so there we go we got our account
31:09 - balance we got our
31:11 - little person there we got everything
31:13 - else perfect now all we need to do is
31:15 - just make this collection link
31:18 - to a certain page
31:20 - so i'm going to go to my collections and
31:22 - wrap it in a link tag
31:24 - capital
31:26 - let's take this put this down here and
31:28 - for my link
31:30 - i'm going to say href
31:32 - collections
31:34 - and we're gonna give it our collection
31:36 - contract address
31:38 - so this is our collection
31:41 - let's just copy this
31:43 - and we're gonna do that right there
31:46 - so this is gonna be necessary later
31:49 - right now when you go to it the app is
31:51 - gonna crash of course because we don't
31:53 - have that page built yet
31:55 - but once we do then the app is gonna be
31:58 - good to go so let's go back
32:00 - let's refresh
32:03 - boom
32:04 - if we are to build that page out right
32:07 - now if we go ahead and build a new
32:09 - folder
32:10 - and we call this folder let's say
32:12 - collections
32:13 - so
32:14 - let's create a new folder inside of
32:16 - pages
32:18 - inside of pages we'll call it
32:19 - collections and then inside of
32:21 - collections we're going to have a
32:24 - new file
32:27 - all right and this file this is how i
32:29 - want you to name it put brackets
32:32 - and we're going to do collection id
32:35 - dot js okay let's do rfce
32:41 - so
32:42 - you want to name it like that even
32:43 - though it looks like a weird name that's
32:45 - how you want to name it and here
32:47 - this is
32:49 - we're just going to call this collection
32:52 - okay and then you're going to
32:54 - just do default export export default
32:57 - collection just like that
33:00 - and then whatever you pass it we're
33:01 - going to extract it from our router so
33:03 - let's go ahead and put our router here
33:05 - this use router hook
33:08 - you're going to need to this is you kind
33:10 - of get access to it with the react
33:13 - and next or next actually so we need to
33:16 - just import that from the top
33:18 - so let's go ahead and import that from
33:20 - the top
33:22 - and this router has access to multiple
33:25 - things
33:26 - for example it has access to our query
33:28 - so if i do
33:30 - router.query right you can even do
33:34 - router.query.probably like collection id
33:37 - id like this
33:39 - and let's just take a look at what
33:41 - happens i'll go inspect here we'll go in
33:43 - console mode
33:45 - all right and let's hit
33:46 - collections
33:48 - and watch our app did not crash
33:51 - and we just got collection id object
33:53 - which is this query right here
33:56 - and the actual collection id right there
33:59 - so that's how you move around with react
34:01 - with next and notice how the page is
34:04 - already made right so for example to
34:05 - prove to you the page is already made
34:07 - you just wrap this in h2
34:10 - and i can actually show you our i can do
34:14 - router.query.collection id
34:17 - and boom right there look at that it's
34:18 - pulling it
34:20 - right and
34:23 - so freaking nice and easy and if you
34:26 - want you could wrap it in a link let's
34:28 - go ahead and wrap this
34:30 - h2 in a link tag so i'll go link we'll
34:34 - import it
34:37 - and we'll wrap it in a link and i'll
34:39 - just say href i've taken me back to the
34:41 - home page just for now so when you click
34:43 - this
34:44 - it just takes you back to the home page
34:45 - so
34:46 - collections go here click that
34:50 - and yeah so that's just to kind of just
34:52 - show you that we can go back and forth
34:54 - between these this is not how the actual
34:56 - functionality of what what's going to be
34:58 - on this page but this is just to kind of
35:00 - get you started and show you the power
35:02 - of next if you think if you like next
35:04 - and you think this was pretty freaking
35:06 - cool because i think that was pretty
35:07 - freaking cool it was so easy to route
35:08 - between the pages way easier than react
35:10 - router do me a favor and smash that like
35:13 - button alright let's get this video out
35:15 - to as many people as possible so we can
35:18 - help
35:18 - make the world
35:20 - a web 3 world all right and help a lot
35:23 - of other developers on the planet and it
35:25 - doesn't cost you anything and it's free
35:28 - and it's easy so do it and it will be
35:30 - awesome and i'll love you forever
35:33 - so let's keep going all right so my nav
35:35 - bar is looking like it's pretty much
35:37 - done
35:38 - now we're gonna build out our home page
35:42 - or hero meaning when i go here this hero
35:45 - that you see right here so let's get to
35:47 - that right now all right now we're gonna
35:49 - build the hero which is uh this guy
35:52 - right over here
35:54 - right here let me zoom out a little bit
35:57 - that's our hero which is that whole
35:59 - thing this plus this
36:02 - all of it
36:03 - so
36:04 - let's go ahead and build build it out
36:08 - now in my components
36:11 - i'm going to create a new component all
36:13 - right and we'll just call it hero.js and
36:16 - another thing you could do is you could
36:17 - create a folder
36:19 - uh called home inside of components if
36:22 - you want to be like
36:24 - really cool about it
36:26 - nah that's fine let's just create a new
36:28 - component new file we'll call it hero
36:30 - dot js
36:32 - that's fine this is great let's do raf c
36:35 - e
36:36 - boom so first thing we're just gonna
36:38 - have it say hero and i just want to make
36:41 - sure it's showing up in my index.js so
36:44 - let's go to our index.js
36:46 - and we have our header showing up that's
36:48 - fantastic
36:52 - and we also want this to show up so
36:54 - we're gonna
36:55 - [Music]
36:56 - we are going to wrap our return in empty
37:00 - jsx fragments
37:02 - make sure we put a paren
37:05 - take out that's cool so we're going to
37:07 - have a header and then we're going to
37:09 - put a hero
37:14 - all right
37:15 - there we go
37:17 - header and hero
37:19 - so let's close this it's not importing
37:22 - it for whatever reasons let's import
37:24 - hero from
37:26 - and we're going to do the same thing and
37:28 - we're going to say hero
37:31 - great so hero is now showing up and
37:33 - working
37:34 - now we just need to go ahead and start
37:36 - styling and working on our hero
37:40 - so there we go
37:41 - got a bunch of styling for our hero
37:45 - a bunch of styling again we're going to
37:47 - link this repo for you guys as well
37:50 - down below so you can always just go to
37:53 - this git repo and
37:56 - get access to the styling and everything
37:57 - we have as well so if there's something
37:59 - you can't see or can't read
38:01 - just go ahead and do that and you should
38:03 - be good to go
38:04 - i added my styles
38:06 - and now we're gonna go ahead and start
38:08 - working on this
38:11 - so
38:12 - let's go
38:15 - all right our first div i'm going to
38:17 - give it a class name
38:19 - and we're going to say style wrapper
38:22 - all right inside of here i'm going to
38:23 - have another div we'll give it a class
38:26 - name of style container
38:29 - inside of my container i'm going to have
38:30 - content wrapper
38:32 - so basically it's going to be little
38:34 - nested so we're going to have a couple
38:35 - of these so here
38:40 - i got my content wrapper
38:43 - inside of my content wrapper i'm gonna
38:45 - have my copy container
38:48 - let's close that div out
38:52 - as well
38:54 - and then inside of my copy container i'm
38:56 - gonna have my title so let's go ahead
38:59 - put our title right there and we should
39:01 - start to see it now
39:03 - all right there we go discovered collect
39:06 - and sell extra extraordinary
39:09 - nfts
39:11 - great
39:12 - well we need to build a lot more things
39:14 - now right underneath this title i'm
39:16 - gonna create another div and this one
39:18 - will have a class name of
39:19 - style.description
39:22 - all right and then inside of my
39:24 - description i want to say open c is the
39:27 - world
39:29 - and we'll do this first
39:32 - and largest
39:35 - market
39:37 - place or largest nft
39:41 - marketplace
39:43 - and i meant to put an ampersand here
39:46 - like that so that will
39:48 - put that apostrophe right there you
39:51 - don't want to use a regular apostrophe
39:53 - or whoops
39:54 - let me hide myself here so you can see
39:56 - what the heck i'm talking about
39:59 - this guy right here puts that apostrophe
40:03 - all right so now basically after we have
40:06 - that
40:07 - i want to basically now add my cta
40:10 - container and inside of my cta container
40:13 - all i want to do is i want to add my
40:14 - button so this is my first bun this is
40:16 - explore button after the explore button
40:18 - i want to add my create button okay so
40:20 - there we go and i should be able to like
40:23 - hover over these like this and have that
40:26 - styling so if i actually make myself go
40:28 - away here you can see i can hover over
40:30 - and it like lights up
40:32 - right and then basically what i want to
40:34 - do is i want to create another div
40:36 - and this should be for my card container
40:38 - okay so i'm going to give it the
40:40 - rounded styling and i want to give it
40:42 - this url right there okay this url is
40:45 - really easy to get if you were on openc
40:47 - you can also just get their latest photo
40:49 - because that's essentially what i did
40:50 - right click copy image address
40:52 - paste it
40:53 - and that's the url that i'm using it's
40:56 - just when i was building the openc clone
40:58 - at the time they had a different photo
40:59 - so you could just update it with this
41:01 - photo okay that should be completely
41:04 - fine
41:05 - okay let's keep on rocking and rolling
41:07 - here
41:09 - let's also build an info container which
41:12 - is going to be like right at the bottom
41:13 - as you can see right there okay i added
41:16 - my profile photo there so i added
41:19 - my profile photo url
41:22 - then i made it rounded
41:24 - so it made it nice
41:25 - okay
41:27 - and then after that let's just go ahead
41:29 - and basically create an author
41:31 - and we'll also give him a name so i'll
41:34 - just say the author name here's jolly
41:37 - and then we'll link to ola canola
41:39 - because that's the
41:40 - artist that mine linked to
41:42 - and this link over here the openc1 that
41:45 - you see
41:46 - is simply the link to the actual asset
41:48 - meaning that when i go to openc and i
41:50 - hit i am sati or whatever it links me to
41:53 - the actual asset so i just copy that
41:55 - link paste it there okay that's all that
41:57 - link is so you can do it that way
42:00 - so cool there you go so up until now you
42:03 - should be good all right so one thing
42:04 - we're gonna do in order to fix this and
42:06 - make this look right so you see how
42:09 - there's a dark background color here and
42:10 - here we have very light so here's what
42:12 - we need to do let's make the opacity 30
42:15 - here
42:16 - okay
42:17 - and now this is bright so we're gonna
42:19 - add a background color
42:22 - that's gonna make this dark so let's add
42:24 - html let's add body
42:26 - and inside of our body we're gonna add a
42:28 - background color that's dark like that
42:30 - so that should fix it then let's add
42:32 - padding of zero margin of zero because
42:34 - we don't want anything to have these
42:37 - random margins or padding let's make
42:39 - sure that our link tag
42:41 - inherits the colors and has no text
42:43 - decoration and then let's just do box
42:45 - size saying border box and then that
42:47 - should be good
42:48 - and
42:49 - boom our page is looking
42:52 - fresh
42:53 - might i add and if you like it
42:56 - make sure to smash that like button
43:00 - so let me show you the hack that i'm
43:01 - actually doing here when i do this watch
43:04 - what happens to the container in the
43:06 - background boom it vanishes okay when i
43:09 - do this
43:10 - boom it comes right back
43:13 - there's a great video by coder coder
43:15 - that talks about how to use before to
43:17 - implement that so go ahead and watch
43:19 - that i don't know if it's somewhere here
43:21 - or a link in the description below or
43:22 - just type in coder coder and look at
43:24 - before she killed it with that video
43:27 - and uh use that for reference okay
43:29 - that'll help you with this but
43:31 - essentially what i'm doing is i'm
43:33 - continuing a container here
43:36 - okay
43:37 - which is this guy right there
43:39 - and i'm saying hey before any of the
43:42 - other content
43:44 - add yourself so like add whatever i give
43:47 - it so here if i give it a absolute
43:49 - position absolute and i give it an image
43:52 - it makes sure that it shows that image
43:54 - but that div isn't really attached to
43:56 - anything else and isn't like affecting
43:57 - anything else so it's like a div
43:59 - that's kind of behind this one
44:03 - okay then we're adding this over it
44:06 - okay if you don't do it like that you're
44:08 - going to run into weird errors where the
44:10 - opacity of that div
44:12 - is going to bleed onto its children
44:14 - meaning that that same opacity is going
44:16 - to be on there so they're going to be
44:17 - dark and blurry and weird stuff okay so
44:20 - that's the hack
44:21 - that we're doing there
44:23 - now for the copy container that's to
44:25 - contain this copy
44:27 - so when i give this a 50 or width of one
44:30 - two one slash two it basically breaks
44:33 - these up into two different things so
44:35 - for example if i remove this watch what
44:37 - happens right each of them ends up
44:39 - taking the full thing so you can just
44:41 - keep commenting these out and seeing
44:42 - what these do
44:44 - that's a good way to play with it and
44:45 - see
44:47 - what's doing what
44:49 - okay so this will help you pick up
44:52 - tailwind as well okay so do that now
44:54 - with that said look at how beautiful the
44:57 - homepage is looking this is our hero and
45:01 - our header
45:02 - right even when i scroll down it's there
45:04 - if you like this
45:05 - you know i'm pumped for you and we're
45:08 - gonna now move on to our collections
45:10 - page we are almost done with this page
45:12 - okay but before we move on to our
45:14 - collection page the only thing we need
45:16 - to do now
45:17 - is just add in our metamask
45:19 - authentication so let's get to work on
45:21 - that now
45:23 - all right so let's work on our meta mask
45:25 - authentication first thing first if this
45:28 - is tsx is freaking you out you can just
45:30 - turn it to js you should be fine now
45:33 - and if it complains about any of this
45:36 - stuff like hey
45:38 - app props is not a thing fine just
45:41 - remove it boom
45:42 - get rid of it
45:44 - cool
45:45 - so we'll import our styles here and the
45:49 - other thing i want to do is i want to
45:50 - actually do
45:52 - a third web provider or third web
45:56 - 3 provider
45:59 - oh sorry this is like weird third web
46:03 - web 3
46:05 - provider provider
46:07 - and we're going to say from
46:10 - and now we're going to do third web
46:15 - hooks
46:16 - so let's install this as well so we're
46:19 - gonna do yarn add and we're gonna do
46:21 - third
46:24 - third
46:25 - web
46:26 - hooks like that so let me just zoom into
46:29 - that so you can read that really easily
46:31 - and let's hit enter
46:36 - beautiful
46:37 - so let's install that
46:39 - and that's that should take care of that
46:41 - now what we need to do is
46:44 - build our chain
46:46 - okay which chain are we going to be
46:47 - using so the supported chain this is the
46:49 - four means this is the rinky b chain we
46:51 - want to use
46:53 - and this we're just gonna leave blank
46:55 - because we're going to be injecting our
46:57 - meta mask into this
46:58 - so this is good
47:02 - i'll give you these notes here
47:05 - so the chain id 4 represents the drinky
47:07 - network and the injected connector is a
47:08 - web 3 connection method used by
47:12 - metamask
47:13 - all right great
47:16 - so now it's having some trouble
47:18 - web3 provider
47:19 - can't resolve third web
47:24 - third web hooks
47:26 - all right let's start the app again and
47:28 - let's see if that works
47:31 - perfect that looks like that works great
47:34 - just restart and start it again
47:37 - the ultimate ultimate solution to life
47:39 - huh
47:40 - now what we need to do is wrap this app
47:42 - in our third web provider
47:44 - so let's wrap this
47:46 - let's end it with third web provider
47:49 - right there
47:50 - all right let's wrap the whole thing in
47:52 - return statement
47:54 - and we will remove this return right
47:56 - there so
47:58 - third web
47:59 - components wrapped in here so this is
48:01 - our entire thing and the entire thing is
48:03 - wrapped in this third web 3 provider
48:06 - cool that is a very important step make
48:09 - sure you get that one right
48:11 - now let's go to our index.js so this is
48:15 - where we're going to make some of the
48:16 - other magic happen okay
48:18 - so let's get our styling in place
48:20 - because i just want to fly through
48:21 - styling pretty quickly here it is if you
48:24 - want to like copy it or pause it or
48:26 - whatever
48:28 - so we're going to leave that there
48:30 - and now
48:32 - inside of this home function what i want
48:34 - to do is i actually want to use my web3
48:37 - hook
48:38 - now it's going to be like hey what is
48:39 - this web3 hook it's not defined
48:42 - you just get it from the third web hooks
48:46 - all right so just like that
48:48 - i'm gonna get it from the third web
48:50 - hooks and we're gonna use it and it
48:51 - gives you access to the connect wallet
48:54 - and it gives you access to the address
48:56 - this is the wallet address
49:00 - cool
49:01 - and perfect now what we're gonna do is
49:04 - we're going to
49:06 - uh grab the user
49:08 - all right now let's add some condition
49:10 - or some a wrapper around this so it
49:12 - looks a little bit better and now what
49:14 - we're going to do is we're going to do
49:16 - some conditional rendering here based on
49:18 - if the user is logged in or not so
49:20 - here i'm going to ask if the address
49:22 - exists and if it does show the header
49:24 - and the hero and if it doesn't show a
49:26 - button
49:28 - so the user is not logged in right show
49:30 - the button so in this case yeah the user
49:32 - is not logged in so there we go we have
49:34 - a button showing up if the user was
49:36 - logged in and it shouldn't show that
49:39 - and right underneath that let's go ahead
49:42 - and a
49:45 - thing that you need chrome to be able to
49:46 - run this app so that's one thing i just
49:49 - put down here and then i wrap this
49:52 - entire thing in this div that is a
49:55 - wallet connect wrapper okay right there
49:58 - now just be careful with how you write
50:00 - this so make sure you have this div at
50:02 - the top
50:03 - this conditional rendering
50:05 - goes here so
50:06 - it either does this
50:09 - either does this
50:10 - or
50:12 - this
50:13 - that's what the conditional rendering is
50:15 - doing it starts here and ends right
50:16 - there
50:18 - so now let's see if i connect and if it
50:20 - works
50:21 - let's try it hit next connect and boom
50:25 - i'm in and i can see everything and if i
50:27 - go here
50:29 - and i go right there and i disconnect
50:32 - let's see
50:34 - wow
50:34 - guys isn't that cool i feel like
50:37 - metamask authentication is even way
50:40 - easier than google sign-in right and any
50:43 - other type of auth like this is honestly
50:45 - the best
50:46 - authentication experience i've ever
50:49 - ever went through like that this is
50:52 - this is ridiculously awesome so if you
50:54 - love it smash that like button below do
50:57 - it right now show some love drop it in
50:59 - the comments let's keep on going
51:01 - all right now what i want to do is when
51:03 - the user logs in i want to add them to
51:07 - my sanity database so let's go ahead and
51:09 - do that i'm going to create a use effect
51:11 - hook
51:12 - and it's going to be looking for the
51:13 - address this address will only occur as
51:17 - soon as the user logs in this use effect
51:19 - is actually going to work if they're not
51:20 - logged in it won't work
51:22 - all right so i'm basically going to say
51:24 - if there's no address just return out of
51:26 - it
51:26 - if there is then i want you to do the
51:28 - following so i'm going to write a
51:32 - iife which is a immediately invoked
51:35 - expression i love these i just found out
51:37 - about them and they're awesome so you
51:39 - just create a function you call it right
51:40 - away i'll show you how it works it's
51:41 - pretty simple so i'm going to create an
51:43 - async function it's an anonymous async
51:45 - function
51:46 - and all i'm doing here
51:48 - is i'm creating a user doc
51:51 - and then what i do is i tell sanity go
51:54 - ahead and create the user if the yet
51:56 - user does not exist that's literally it
51:59 - and then i call this function right away
52:02 - so normally just to give you an idea of
52:05 - how what the heck is actually happening
52:07 - here let's say you just create some
52:09 - function right
52:10 - well usually how it works is
52:13 - i don't know it's like
52:15 - let's just say it's it returns 2
52:18 - whatever some function returns 2.
52:20 - when you want to call this function you
52:22 - will say sum function
52:25 - some function and you will do this
52:28 - well i could actually make this function
52:30 - something that can be immediately
52:32 - invoked
52:34 - by doing the following wrap it in
52:36 - parentheses and just call it right away
52:38 - so super freaking weird but like i'm
52:41 - creating the function and then i'm
52:43 - calling it right away this is a
52:45 - immediately invoked um function if i if
52:49 - i do alert
52:51 - alert
52:52 - let's just say hello
52:55 - it should alert me in a second let's uh
52:57 - get our use effect hook actually up at
53:00 - the top so i'm going to go here and i'm
53:02 - going to say import
53:04 - use effect from react
53:07 - just like this
53:08 - and now we got our use effect
53:11 - this is erroring out because we need to
53:13 - put a semicolon there
53:16 - all right so there we go i changed that
53:18 - alert to console.log and you can see
53:20 - this is an anonymous function i created
53:22 - called console.log hello all it does is
53:25 - logs hello
53:26 - and then it immediately runs
53:29 - and right there you see hello so
53:31 - this is called iife
53:34 - okay immediately invoked
53:37 - invoked functional expressions and i
53:39 - know it's a mouthful but you'll start
53:41 - seeing them everywhere in so many code
53:44 - bases and they're really pure and
53:45 - beautiful and their scope is really
53:47 - small
53:48 - they're run and then they're deleted
53:50 - and then javascript doesn't remember
53:52 - about them so they don't pollute your
53:54 - global space they're really bug free and
53:57 - they're a really nice way to do things
53:59 - if you just need a function just do
54:00 - something run and finish this is a nice
54:02 - way to do it
54:04 - cool so we're just and just put a
54:06 - semicolon right here because if you
54:08 - don't it'll like move this up into this
54:11 - so
54:12 - starting it with a semicolon is kind of
54:14 - important but other than that it's just
54:15 - a normal function
54:17 - and we're creating a user we're giving
54:19 - the wallet address and then we just
54:21 - create that user if that user does not
54:23 - exist in the sanity database so now
54:27 - when i hit connect wallet what should
54:29 - actually happen it should create a user
54:30 - so in order to be able to see it what i
54:32 - want to do is i need to cd into my
54:34 - studio and i'm going to do sanity start
54:36 - here so let me zoom in here so you can
54:38 - see that and let's do sanity start
54:42 - all right make sure to do that that will
54:44 - whip up your sanity database
54:47 - and once it whips that up we will be
54:50 - good to go so let's go where do we have
54:52 - it
54:54 - we'll do localhost 3333
54:59 - just like that
55:00 - and let's bring that
55:03 - here
55:04 - so right now you can see i have no users
55:06 - i just have that one user clever quasi
55:09 - and that user i just manually created
55:11 - that user so that user really shouldn't
55:13 - even exist let's see if we can delete
55:15 - that user and yes we can so i'm just
55:17 - going to delete that user because we
55:19 - don't really need that user
55:22 - all right
55:23 - now let's go to our app and let's go
55:26 - ahead and hit connect wallet let's see
55:28 - if it works
55:30 - and we will do next connect now we got
55:33 - an error client is not defined it's a
55:35 - great error that means this line ran and
55:38 - we got an error so what is happening
55:40 - here well we're going to need our client
55:43 - so perfect this is a perfect time to
55:45 - build our client so let's go ahead
55:47 - create a new folder it'll be called lib
55:49 - and inside of lib we will have something
55:52 - called a sanity
55:55 - actually
55:56 - what's the best way to name this we will
55:57 - call it a sanity client
56:01 - so let's go sanityclient.js
56:05 - all right and in my sanityclient.js we
56:08 - are going to import this at the top
56:11 - so this module we're going to need to
56:13 - install so let's go ahead and install
56:14 - that right now all right so we're gonna
56:17 - go and do
56:18 - yarn add
56:20 - at sign sanity slash client
56:23 - just like that go ahead and install that
56:28 - perfect while it's installing let's go
56:30 - ahead and build out our client so i'm
56:32 - going to say export const client is
56:34 - equal to sanity client
56:37 - all right and then we're going to put
56:39 - our project id here so project id
56:42 - will be i will go here into my sanity
56:45 - projects and here we have
56:50 - openc blockchain clone this is the one
56:52 - working on this is the project id i need
56:54 - so copy that
56:56 - right there boom that's the one
56:59 - grab that bad boy
57:01 - and let's go ahead and put it right
57:03 - there
57:05 - data set is going to be production
57:07 - that's great
57:08 - then we're going to need the api version
57:10 - and let's just say
57:13 - 25 make sure you put that exactly like
57:15 - that use cdn we're going to say false
57:19 - and then we're going to need a token so
57:21 - in order to create the token go to api
57:23 - we're going to need to do a couple of
57:24 - things here
57:25 - cores origin let's go ahead and make
57:27 - sure we have http
57:30 - 3000 because that's where we're running
57:31 - our app so let's go ahead and save that
57:35 - so course origin is going to be
57:36 - important even when you deploy the app
57:38 - you're going to need to put our course
57:39 - origin right there and this is fine you
57:41 - don't need to do credentials so then hit
57:42 - add api token and we're just gonna give
57:45 - this editor access
57:48 - so this will give a read and write
57:50 - access and we'll call this
57:52 - openc
57:54 - token whatever it doesn't matter just
57:56 - hit save
57:58 - perfect so we got this token copy
58:01 - and we're going to go back
58:03 - i'm going to sit
58:04 - i'm going to say token
58:07 - and we will paste that right there so we
58:09 - got our token perfect
58:11 - now
58:13 - this client that i've made and i've
58:15 - exported i can actually use this client
58:18 - all right so let's go back
58:21 - into our app and i can say the following
58:24 - i can actually import this client now we
58:26 - have access to this client and there it
58:29 - is
58:30 - so let's give this same thing a try
58:32 - again one more time so i'm going to log
58:35 - out for now
58:38 - connected sites let's hit delete on the
58:40 - local host one disconnect and let's hit
58:43 - connect wallet
58:44 - next connect nothing broke
58:47 - let's go to our sanity app and let's go
58:50 - here
58:51 - and let's see if a user was created
58:55 - so we do not have a user created as of
58:58 - yet all right so we got an error if you
59:00 - actually look at the console we get this
59:02 - error that actually says
59:05 - something about credentials in the
59:07 - header so let's actually give something
59:09 - a try all right what we're gonna do
59:11 - is let's go back to our third web here
59:15 - and where i have said not allowed
59:17 - credentials let's change that so i'll
59:19 - just delete this for now
59:21 - we'll hit add corresion add add cores
59:25 - and i'm going to say localhost 3000 and
59:27 - then i'm going to say allow credentials
59:28 - should this origin be allowed to send
59:30 - authenticated requests with the user's
59:32 - token or session
59:33 - yes they should let's say yes allowed
59:37 - now
59:38 - let's uh try that one more time so i'm
59:40 - gonna
59:42 - i'm gonna log out
59:44 - so same thing hit the three dots
59:45 - connected sites
59:47 - and let's hit local delete local host
59:49 - your disconnect
59:51 - let's connect again
59:53 - next next connect
59:55 - i didn't get any errors at the bottom
59:57 - now let's go look at our database boom
60:00 - let's go the user is added how freaking
60:02 - nice is that guys and watch this i'll
60:06 - i'll rename this user to be clever quasi
60:09 - and now when i create another like when
60:11 - i sign in again it won't actually
60:13 - overwrite this user that's what's
60:14 - freaking cool about sanity i mean even
60:16 - firebase doesn't have this functionality
60:18 - so it's so freaking dope i love this
60:21 - right so watch this
60:23 - if i go here
60:25 - boom and let's log out again sign out
60:28 - connected details
60:30 - disconnect
60:31 - wait what the heck happened why not log
60:33 - out connected sites
60:36 - oh i'm looking at the deployed one
60:38 - perfect now i'm going to try to connect
60:39 - again and watch what happens with hit
60:41 - next
60:42 - connect
60:43 - and um
60:44 - look no new user was created because the
60:47 - id is the wallet address as long as the
60:50 - wallet address is the same it won't
60:52 - create a new user that's how it's
60:54 - detecting if that user exists or not
60:55 - because detecting if that wallet exists
60:57 - or not and that's coming from this line
61:00 - this nice little line right here create
61:02 - if not exists
61:04 - and it uses this id
61:07 - okay
61:09 - so
61:10 - that's what's happening there now if i
61:12 - signed in with a different wallet so
61:14 - let's give that a try so i will
61:17 - connect and i will disconnect here and i
61:20 - will connect with some different wallet
61:21 - that i have whatever this one is fine
61:24 - let's go right here hit look
61:26 - let's try that one again let's hit
61:28 - connect
61:29 - and let's see it chose that one hit
61:30 - connect
61:31 - okay let's go here and boom unnamed
61:34 - brand new one because different wallet
61:36 - address guys oh my lord sanity is
61:39 - beautiful
61:40 - turn that thing blue for sanity let's
61:42 - keep going
61:43 - okay great work sandy y'all are
61:46 - beautiful
61:48 - okay awesome
61:50 - so
61:51 - let's go back
61:52 - this is the easiest database thing that
61:54 - you've ever done in your life your well
61:57 - now all i'm going to do is uh once the
61:59 - user successfully logs in we're just
62:01 - going to add a little toast a notif uh
62:03 - like a notification at the bottom or at
62:06 - the top that just says like hey welcome
62:08 - back
62:09 - so let's go ahead and do that now so i
62:11 - like this library it's called react hot
62:13 - toast so i'm gonna import that right
62:15 - here
62:16 - and this is the library name react hot
62:19 - toast so whatever is there that's the
62:20 - thing you want to install right there so
62:23 - let's go ahead and do that so i'll do
62:24 - yarn
62:25 - add
62:27 - and just so you can see here whoops
62:31 - yarn add react hot toast just like this
62:35 - so install that that's a super nice
62:38 - library that adds these awesome
62:40 - notifications on the flyer react
62:42 - hot toast so you can look at it
62:45 - here as well oops
62:47 - that's it
62:49 - and if you hit make me a toast right it
62:51 - shows you here's your toast
62:53 - and you could you could put it top left
62:55 - you could put it at the top center right
62:56 - position top center top right
62:59 - and then it gives you the code right
63:01 - here super easy
63:03 - to follow so that's the code
63:05 - all right and then if you want it in
63:07 - tailwind you can grab it in tailwind as
63:09 - well and style it and close all of that
63:11 - so this is
63:13 - super awesome
63:15 - i would say add it for any time you have
63:17 - a promise that you need to resolve it's
63:19 - really nice to give a notification like
63:21 - hey purchase was successful or hey the
63:24 - user you know welcome back you know
63:26 - you've logged in successfully whatever
63:29 - so it was having a trouble resolving the
63:31 - module all we need to do is just like
63:33 - kill our server with control c and just
63:35 - hit yarn dev again
63:37 - and we should be good to go
63:39 - and be up and running
63:42 - so let's hit refresh here
63:44 - and see what happens okay cool i'm in
63:47 - everything is working so let's go and
63:49 - work on our toast now
63:51 - let's make our toast function here so
63:54 - it's going to be called welcome user
63:56 - it'll take in a username and a toast
63:58 - handler by default it'll be toast
64:01 - that one right there
64:03 - let's go
64:05 - toasthandler.success and on success
64:08 - we'll say welcome back to the user and
64:10 - we'll say their name
64:13 - and we'll style it where it's like a
64:16 - green
64:17 - check mark that they get
64:20 - and that's essentially it
64:23 - okay so
64:25 - there we go this is our function for
64:27 - welcome user
64:29 - now all we need to do is actually use
64:31 - that function
64:32 - once the user successfully signs in
64:35 - so we can go ahead and use that
64:39 - boom we'll welcome the user and we'll
64:41 - say result.username
64:44 - great
64:46 - because
64:47 - result gives you the object back
64:49 - whichever one was created
64:52 - all right so let's give it a try now
64:55 - let's see what happens when i log out
64:57 - and i log back in and let's look for a
65:00 - toast
65:01 - oh we actually need to render this toast
65:03 - out so we've made it but we need to
65:04 - actually render it now on the screen so
65:08 - let's go ahead and do that
65:10 - right underneath
65:12 - wrapper and we're going to say toaster
65:14 - position
65:16 - equals and we'll go and choose top
65:18 - center
65:19 - and we'll say reverse order
65:22 - we'll say false
65:25 - and end this so that's where the toaster
65:27 - should show up perfect you see that it
65:29 - says welcome back right there let's
65:31 - refresh
65:34 - boom welcome back look at how nice that
65:36 - is
65:38 - now we're done with our home page
65:40 - because why
65:42 - we have the nav bar we have the hero
65:46 - we have all these amazing sections and
65:48 - it looks beautiful we have the blurred
65:50 - background we have authentication even
65:53 - now we need to make collections work so
65:55 - let's get to it all right now let's work
65:58 - on our collections page so i'm going to
65:59 - go into my collections i'm going to go
66:01 - into collection
66:03 - id dot js and i'm gonna basically add
66:07 - all my style
66:09 - here so let's
66:10 - full screen it you can pause it you copy
66:12 - it whatever you want all right so this
66:14 - is all of my style that i'm going to
66:18 - need
66:18 - for this page okay cool we got that
66:22 - now i need to
66:24 - get a couple of other things so we're
66:26 - gonna add our provider here
66:30 - because we need access to that i'm going
66:32 - to get my collection id from the router
66:36 - i'm going to destructure my collection
66:37 - id actually
66:38 - i will set my state for collection
66:41 - because i'm going to need access to the
66:42 - collection and i'm going to need access
66:44 - to all of the nfts and i'm going to need
66:46 - access to all of the listings
66:48 - now
66:49 - we're going to import use date at the
66:53 - top so
66:54 - we're going to go right here and we're
66:56 - going to say use effect and use state
66:58 - because i'm also going to need use
67:00 - effect
67:02 - let's import our web 3 hooks so
67:06 - that error will start going away
67:11 - also there are two use effects here so
67:13 - we'll get rid of this use effect here
67:15 - and we'll just have one at the top
67:18 - now before we continue one another thing
67:20 - we need to do is actually set up a
67:22 - infuria link actually let's sign up for
67:25 - alchemy api so go to alchemy and alchemy
67:28 - api
67:29 - web3 development made easy and you can
67:32 - simply get started for free and sign up
67:35 - i already have an account so i'm just
67:37 - gonna essentially log in it's gonna just
67:39 - bring me to the dashboard for you it's
67:41 - going to ask you to create an account
67:43 - go through that process make an account
67:45 - here and
67:46 - we'll use the api that we get from here
67:50 - so at the top here you see it says
67:52 - create app so you can hit create app
67:54 - here if you want we can see we can say
67:56 - open c
67:58 - blockchain build or clone whatever you
68:01 - want to call it
68:03 - uh
68:04 - youtube tutorial for my description you
68:06 - guys can call it whatever you want and
68:08 - environment
68:10 - uh whatever staging
68:12 - it's fine
68:13 - and then chain is going to be ethereum
68:16 - and we're going to be on the rinkeby
68:18 - network so let's create app
68:22 - all right so i see my open c blockchain
68:25 - i'm gonna go into that
68:27 - perfect
68:28 - and uh here's my key so i'm just simply
68:30 - gonna copy this key
68:32 - and i'll write this key down here in
68:35 - comments i'm gonna need access to this
68:37 - shortly
68:39 - all right so i'm going to create a
68:40 - little function called nft module and
68:42 - this will help me get access to the nft
68:44 - module we're going to use memo here
68:46 - which is kind of like a use effect but
68:49 - it also has some caching built into it
68:51 - too so it's a good
68:52 - hook to use
68:54 - the dependency of this is going to be
68:56 - the provider
68:57 - and if the provider doesn't exist then
68:59 - just return otherwise we're going to
69:00 - create a third web sdk we're going to
69:02 - get our signer
69:04 - and we're going to use
69:06 - our api key
69:09 - and then we're just going to return the
69:11 - nft module and we're going to give it
69:14 - the collection id
69:16 - cool
69:17 - now i'm going to
69:18 - cop this guy right here
69:21 - and we're going to pop that in
69:24 - we're going to pop this link in
69:28 - right here
69:31 - perfect
69:32 - all right let's create another function
69:34 - that gets all the nfts inside of a
69:36 - collection we'll create a use effect
69:38 - hook the dependency is going to be nft
69:40 - module so whenever the nft module
69:43 - is loaded this right here this use
69:46 - effect will run
69:47 - and if the nft module doesn't exist stop
69:49 - it we're going to run an iife
69:52 - immediately invoked functional
69:54 - expression so this function just creates
69:56 - itself and then calls itself right away
69:59 - we're going to get the nfts from the nft
70:01 - module and then we will set the nfts
70:05 - just like so
70:08 - this will update our nft's variable
70:10 - right here
70:12 - all right so now what i'm going to do is
70:14 - we're going to get access to our
70:15 - marketplace module
70:17 - and i'm going to again use memo here the
70:20 - dependency is going to be the provider
70:22 - if the providers is this stop
70:25 - we're going to create our third web sdk
70:27 - we're going to get our signer we'll pass
70:29 - in the api key and we will get our
70:32 - marketplace module all right so that's
70:34 - how we will get our marketplace module
70:36 - now if you're wondering where i got the
70:38 - marketplace module from in third web
70:42 - you're going to go to your project so
70:45 - you can go at the project level whatever
70:48 - let's hit here open c blockchain
70:50 - and here's my openc marketplace
70:53 - right there so you just click that and
70:55 - you can copy that address
70:57 - all right so that's the marketplace we
70:59 - need access to
71:02 - all right so let's get all the listings
71:04 - inside a collection we'll use a use
71:05 - effect hook it look for marketplace
71:08 - module if it doesn't exist return let's
71:10 - call a function and run it immediately
71:13 - and we will set all the listings to the
71:16 - listings that we actually get from the
71:18 - marketplace module so as soon as we get
71:21 - them we set them
71:23 - all right now one thing we want to do
71:24 - guys is let's go inside of our sanity
71:27 - database so let's go to market items
71:30 - and what we want to do market items is
71:32 - basically just our nft collection so
71:36 - there's just another another way just
71:37 - saying is what are the
71:39 - you know it's a collection on the market
71:41 - let's hit that button right there and we
71:44 - will add in our nft collection of board
71:47 - ape yachts club
71:49 - for the contract address let's put the
71:51 - same contract address that so for
71:53 - description i'm just going to put the
71:54 - board api club is the blah blah blah
71:57 - for contract address what i'm doing is
71:59 - in third web just go to board api club
72:02 - or whichever one you have
72:03 - copy your nft collection address and you
72:08 - could put that right there so this is
72:10 - the nft collection address
72:13 - created by who was this created by so in
72:15 - this case i'll just choose clever quasi
72:17 - and you can see how nice it is right
72:18 - insanity i have my drop down modules and
72:20 - it shows me volume traded let's say 342
72:24 - thousand each so i'll just put 42 342
72:27 - here
72:28 - and then on the back end we can add in
72:30 - the k or you could just do 342 000 like
72:33 - this
72:35 - zero 34200
72:35 - floor
72:36 - price is going to be 93 ethereum
72:39 - and then i don't know let's just say
72:41 - clever quasi also is an owner and has
72:43 - one so this is like how many owners it
72:46 - has and who are the owners so we'll put
72:48 - all that information right here and then
72:51 - i'll put in
72:53 - a profile image for it and we will put
72:55 - in a banner image for it so you guys can
72:58 - just google these images or go to openc
73:00 - and lookup board api club and you'll be
73:02 - able to pull pull these images from
73:05 - there so let's just double check
73:08 - all right
73:09 - and let's hit publish
73:11 - hopefully those photos will update in
73:14 - time
73:15 - there we go our profile photo is updated
73:17 - here and then we'll soon have our banner
73:19 - image i'm sure updated
73:22 - there we go got it so now that we have
73:24 - that
73:26 - now we can actually go to our vision
73:29 - and make our queries so let's go to our
73:33 - vision let's paste this so i'm going to
73:35 - give it our contract address
73:37 - which again was this collection right
73:40 - there
73:41 - so let's go ahead and give that
73:43 - collection
73:44 - all right so let's go back to our desk
73:47 - here right and let's see
73:50 - so
73:50 - my query that i'm making here is
73:52 - basically saying
73:54 - hey
73:55 - if the market if the type is market
73:58 - items
73:59 - all right so get me market items type
74:02 - and then if the contract address is
74:04 - equal to this one and get me the
74:06 - following so in this case
74:08 - i'll just say
74:09 - get me the title so let's see what
74:11 - happens let's go title
74:14 - and let's hit fetch and you can see that
74:17 - it's getting me the board ape yacht club
74:20 - so whatever collection i pass it here
74:22 - it's going to give me that collections
74:25 - title
74:26 - and now what i'm going to do is i'm
74:28 - going to go ahead and ask it for
74:31 - multiple pieces of information so it'll
74:33 - look like
74:35 - this
74:36 - all right
74:37 - there we go
74:39 - there we go let's hit fetch and let's
74:41 - see what we get
74:42 - all right we got back everything so
74:45 - let's just look at this so it's saying
74:47 - hey if you matched board api club get me
74:49 - the image url so there is the image url
74:54 - i also say give me the banner image url
74:57 - so here is the here is the banner image
74:59 - url that we got the image url you can
75:02 - see is kind of at the bottom right there
75:05 - i'm asking to for it to give me the
75:07 - volume traded and it does volume traded
75:11 - i ask for it to give me created by
75:13 - right and it gives me created by
75:16 - and i say hey for creator
75:18 - get me their username
75:21 - so
75:22 - we'll go and look at creator and boom it
75:25 - gets me their username
75:28 - for all owners
75:30 - that shows me who all the owners are so
75:32 - it just returns to me like an array of
75:35 - objects so in this case
75:37 - we just have one owner right the list is
75:40 - has one item inside of it
75:42 - and then i also ask for the description
75:44 - so this is our query
75:46 - all right we can copy this query and
75:48 - this is a query that we're actually
75:50 - going to be using so make sure you copy
75:52 - it and bring it into your vs code
75:55 - because this is what we'll
75:57 - need to use i'm going to just comment it
75:59 - out for now
76:01 - all right so one thing we can do is we
76:04 - can wrap it in these tildes
76:06 - and i can just say const query is equal
76:09 - to that
76:10 - so that's my
76:12 - big query and i'll use it in just a
76:14 - second
76:16 - all right so let's get our let's get our
76:20 - collection data from sanity
76:22 - we're gonna
76:23 - pass it the query and then let's do a
76:26 - couple of things here so we're gonna get
76:28 - the collection data and await it
76:31 - all right we'll fix this part in just a
76:33 - second
76:35 - and then we're going to set the
76:37 - collection data so whatever we get we're
76:40 - going to set that
76:42 - let's copy this let's cut that query and
76:45 - let's paste that over this one
76:47 - they're the same
76:48 - but i think that this one is easier to
76:51 - read
76:52 - now the only thing i kind of want to
76:54 - just change is instead of this
76:56 - hard-coded address here
76:59 - what we'll do is
77:03 - replace this
77:05 - with that collection id
77:08 - and we can pass in our collection id
77:12 - cool
77:13 - so once you pass that collection id it
77:15 - knows what to do and
77:17 - i can also just give it a default
77:19 - collection id in this case it'll be like
77:21 - hey by default just get me that board
77:23 - ape
77:24 - yacht club from collection id or
77:27 - whatever the user passes just make that
77:30 - the default one
77:32 - just in case the user does not give you
77:34 - the second argument
77:36 - so this will run the query the query
77:38 - will return
77:40 - these results that we saw here
77:43 - that's what that query will return
77:46 - and then once that query returns that
77:48 - what we're doing is we're taking that
77:50 - and we're storing all that
77:52 - data inside of collection data okay so
77:56 - awaitsani.clientfetchquery we're passing
77:58 - this query in there
77:59 - and then once we get that data we're
78:01 - just storing that data right here inside
78:03 - of set collection
78:06 - now all we need to do is let's create a
78:07 - use effect hook
78:09 - it look for the collection id and then
78:12 - it'll
78:13 - collect
78:14 - it'll run and collect the data so
78:16 - whenever the collection id
78:18 - is updated
78:19 - in other words whenever you route to
78:22 - this page which is collections this
78:25 - query should run because it'll pull the
78:27 - query from the query parameter that's
78:30 - how you'll get the collection id and if
78:32 - that changes then this will run
78:35 - this says use memo is not defined so
78:37 - let's go ahead and import use
78:41 - memo
78:43 - client is not defined let's go ahead and
78:45 - import our client
78:50 - now third web sdk is not defined so
78:53 - let's go ahead and import that
78:57 - great and let's go ahead and install
79:00 - that so let's go right here and we're
79:02 - gonna do
79:04 - yarn add
79:06 - third
79:07 - web sdk
79:09 - so now it's going to install the sdk
79:11 - once that's done
79:13 - that we should be past that error and on
79:16 - to
79:17 - creating our app my installation is done
79:20 - so let's refresh our page and let's see
79:22 - if we're
79:23 - done with that error looks like we are
79:26 - the page should be good to go soon let's
79:28 - just refresh one more time
79:31 - and yes we're good to go
79:35 - okay perfect
79:37 - actually let's get rid of this line over
79:40 - here i'm gonna remove that collection id
79:43 - it's fine we're just gonna pass that
79:44 - collection id from our
79:46 - state
79:47 - and then let's go ahead and console.log
79:50 - our collection data
79:53 - and i'll put a fire emoji so i can
79:55 - identify it easily
79:57 - and here is my collection data
80:00 - i am getting
80:02 - array of one
80:03 - and it's giving me all this stuff that's
80:06 - inside of it
80:07 - all right so that was super easy to pull
80:10 - all of the data from sanity now all we
80:12 - need to do is just whip up the front end
80:14 - because we already have access to all of
80:16 - the collections we have access to the
80:18 - marketplace module and then ft module
80:21 - we're getting all the nfts and we're
80:22 - getting all the listings
80:25 - so
80:26 - now all we need to do is build out the
80:29 - front end so let's go ahead and work on
80:32 - that now
80:33 - let's just go ahead and import a couple
80:35 - of things we're going to need so
80:38 - for this page we're definitely going to
80:39 - need our header
80:42 - and we're going to need a bunch of icons
80:45 - so let's go ahead and get them now
80:49 - all right i'm going to need my cg
80:51 - website my ai outline instagram and my
80:54 - high dots vertical icons
80:57 - i'm going to remove everything inside of
80:59 - this link tag and make this return empty
81:03 - and let's just build one component we're
81:05 - going to need so i'm going to go inside
81:07 - of my components we'll create a new file
81:10 - i will do
81:12 - nftcard.js just like this we'll hit raf
81:14 - c e on this
81:16 - cool
81:17 - now in this component all i'm going to
81:18 - do for now is let's say it's going to
81:21 - take in an nft item
81:23 - and all it will do is
81:27 - it will
81:28 - return an image
81:30 - and it will do nft item dot image
81:34 - that's all an nft card is going to do
81:37 - for now
81:38 - and then we'll build it out in a second
81:41 - now let's come back to our
81:43 - what we're going to render here in our
81:45 - return and let's get to work on this
81:47 - oh and one last thing before we actually
81:49 - do that let's just go and make sure that
81:52 - we're importing our nft card so i'm just
81:55 - gonna say import
81:56 - nft card
81:58 - from
82:00 - and we're gonna go get it from our
82:02 - components and we're gonna get it from
82:05 - our nft card just like that now we are
82:08 - all
82:08 - set all right so let's start building
82:11 - this page now so
82:14 - i'm gonna make sure my overflow is
82:16 - hidden when i make this div so my scroll
82:18 - bars are not showing up let's add our
82:20 - header
82:21 - boom now my header is showing up so
82:24 - that's great news
82:27 - all right now in my banner image
82:29 - container i'm gonna put my banner image
82:31 - and basically what we're saying here is
82:34 - if
82:35 - banner image exists then show the banner
82:38 - image otherwise show a placeholder
82:40 - that's all
82:42 - now we're going to create an info
82:44 - container this is going to
82:45 - contain our info like how much volume
82:48 - was traded how many owners there are
82:50 - things like that so in the mid row we're
82:53 - going to add a profile image
82:55 - and that profile image
82:58 - is going to again do the same thing if
83:00 - it exists show it otherwise show a
83:02 - placeholder
83:03 - that's all
83:04 - now we're going to add an end road to
83:06 - this and that's also going to create
83:08 - social icons
83:10 - and uh
83:11 - we're going to stick our cg website in
83:14 - there so it'll be on this right hand
83:16 - side you'll start seeing it
83:19 - we'll put some dividers
83:21 - we'll put our instagram in there
83:24 - and we'll put our twitter in there and
83:27 - then we'll put our vertical dots
83:31 - cool
83:32 - all right now we're gonna make another
83:34 - mid row
83:35 - and this will this not another mid row
83:37 - but this will be the mid row and this
83:39 - will have our title
83:41 - board ape yacht club
83:44 - cool it'll be it'll show who it's
83:46 - created by okay so in this case it's
83:48 - created by clever quasi
83:51 - it's actually pulling the real creator's
83:53 - name that i've put into sanity which is
83:55 - super dope
83:57 - we'll then create another mid row and
83:59 - this will contain stats
84:01 - all right and then inside of my stats
84:04 - we're going to have our nft and how many
84:07 - nfts we have so in this case 18
84:10 - i'll say 18 items
84:12 - collection stat so now we'll say how
84:16 - many owners there are
84:18 - so this is actually pulling all the
84:20 - owners and then the length of the owners
84:22 - if they exist it's getting the length of
84:24 - the owners otherwise nothing
84:27 - and then it's going to say owners right
84:29 - underneath that
84:31 - we will also get another stat value and
84:34 - this will be how much each we have so
84:37 - we're just using this svg you can pause
84:39 - the video and
84:41 - copy this svg that's showing the
84:43 - ethereum
84:45 - it'll say floor price underneath it
84:48 - and then we will have our stat value and
84:50 - we will have another image boom
84:53 - and then we have our volume traded
84:57 - and then we do 0.5 k
85:00 - now since we're already putting k here
85:04 - we can go to our sanity database and
85:06 - update it so let's go to sanity let's go
85:08 - to
85:10 - users
85:12 - okay or actually let's go to market
85:13 - items let's go to board api club and
85:15 - inside of board api club i'm simply
85:17 - going to change that to 342
85:20 - and we will hit publish
85:22 - okay let's go back to our apps it should
85:24 - say 342
85:26 - k eth so let's hit refresh on this
85:31 - and there we go 342.5
85:34 - k eath so looking
85:36 - way better
85:38 - that's great and let's add in volume
85:41 - traded right underneath that
85:43 - then we'll add in the description so the
85:45 - board api club is a collection of 10 000
85:48 - unique board ape yacht nfts we'll now
85:51 - flex wrap and then we'll start making
85:54 - all of our items our nft cards
85:57 - so we're mapping through them and then
85:58 - we're just making our nft cards
86:01 - and we're passing nft item title and all
86:04 - of our listings over to our nft card
86:07 - component which all it knows how to do
86:09 - is make an image so that's pretty good
86:12 - so far and if i scroll through
86:14 - that all of our board apis are showing
86:17 - up how freaking cool is that right we're
86:20 - pulling all of these from third web the
86:22 - marketplace we're pulling this from
86:24 - sanity and
86:26 - i mean it's so cool so much dynamic data
86:29 - and we're doing so much here combining
86:31 - web 2 with web 3
86:33 - freaking awesome
86:35 - now all we got to do is style this these
86:38 - nft cards so they look a lot nicer let's
86:40 - go ahead and do that
86:42 - so i'll go to nft card
86:45 - all right so i'm going to paste all of
86:47 - this styling all right again i'll full
86:50 - screen it so you can pause and copy if
86:52 - you want to there it is
86:54 - and i'll just keep going again if i go
86:57 - through the styling and every single
86:58 - line of it guys the apps the video
87:01 - length is gonna triple quadruple
87:03 - quintuple and we'll never get to the fun
87:06 - blockchain or database parts so that's
87:08 - why i'm kind of like going through this
87:09 - fast because i think by this point how
87:11 - many apps we've built
87:12 - we should be really getting this and if
87:14 - you're not getting this go back to so
87:16 - many of the previous clones that we've
87:18 - done and start going through the styling
87:21 - part they'll explain it in way more
87:23 - detail if you go through our older
87:25 - builds these ones i kind of want to
87:26 - focus more on the newer stuff that we're
87:28 - learning
87:30 - all right
87:31 - so um at the top i want to i'm going to
87:34 - need a couple of things here so i'm
87:36 - going to need use effect and use state
87:38 - from react
87:39 - for this i'm going i'm going to need a
87:42 - buy heart icon and then i'm going to
87:44 - need a router because i'm gonna have to
87:46 - do some routing stuff
87:49 - let's also add a couple of more props so
87:51 - we're gonna get title and listings as
87:53 - well and let's set a few states at the
87:56 - top so we'll have a is listed state
87:59 - and we'll also keep track of our set
88:01 - price
88:02 - and price date
88:04 - now one thing that you need to
88:06 - understand is this
88:09 - we have on the left hand side
88:12 - we have all of our listings
88:15 - and on the right hand side we have all
88:17 - of our nfts
88:19 - now
88:21 - we might have some nfts that are not
88:24 - listed
88:25 - but you know so let's say like this
88:28 - two
88:30 - three
88:31 - four
88:32 - but maybe out of all of those nfts only
88:35 - two are listed three and four
88:38 - listed meaning you have them for sale on
88:42 - the marketplace meaning you went to the
88:44 - third web platform
88:46 - put them and listed them for sale now
88:48 - what we need to do
88:50 - is we need to find where the matches are
88:52 - in this case the matches are aka in
88:55 - what's it called uh
88:58 - sql you will do an inner join right so
89:00 - you have
89:02 - you have some data whatever and then you
89:04 - do inner join
89:05 - so we're trying to find that match that
89:07 - kind of looks like a butt crack but
89:10 - whatever like
89:11 - you're trying to do an inner join right
89:14 - here and here what we have are
89:17 - three
89:18 - and four
89:20 - so where that match is what we need to
89:22 - do is go to each of those so we need to
89:24 - go to three and set its listing to true
89:27 - so this is basically
89:29 - is listed as true here and then what we
89:32 - need to do is set a price for them
89:37 - so we need to set set is listed here my
89:41 - bad i meant to write set
89:43 - set is listed to true and we need to set
89:45 - the price for them and the price will be
89:47 - whatever the price is in the listing
89:50 - because remember there are a couple of
89:52 - different things about nfts and listings
89:54 - if you go to third webs documentation
89:56 - what you'll find out is in nfts you
89:59 - don't find out about pricing
90:01 - if you look at the nft module what you
90:04 - find out is well what's the trait of
90:07 - that what's the description of that
90:09 - what's the image of that nft
90:12 - on listing you find different things
90:14 - like what's the price of that nft
90:16 - so both of these modules have two
90:18 - different pieces of information so what
90:21 - we're gonna do is we're gonna for price
90:23 - we're gonna put our hands into the
90:25 - listing bucket for three
90:27 - right and then set that price for three
90:29 - then we're gonna repeat the same process
90:31 - for four and set that price for four so
90:34 - that's how at a high level
90:37 - it's working let's turn it into code so
90:40 - i'm going to create a use effect hook
90:42 - it's going to have two dependencies
90:44 - listings and an ft item that's when it's
90:46 - going to fire when it whenever it sees
90:48 - those update because those are the two
90:50 - things it needs
90:51 - we're gonna loop through all of our
90:52 - listings and if our listing matches our
90:55 - nft item then we're gonna set as listed
90:58 - to true we're gonna set the price
91:01 - by pulling it out of the listing
91:04 - and then we're going to break
91:06 - and that's it
91:08 - all right so now let's actually build
91:10 - out our component so i'm going to build
91:12 - a
91:13 - div
91:14 - and then we're going to give it a class
91:17 - name of wrapper and then basically we're
91:20 - going to say on click
91:21 - i want you to take me inside of that
91:24 - asset so we're going to build all of
91:26 - these pages but don't worry about this
91:28 - right now what this does is when you
91:30 - click it it should take you inside of
91:32 - the detail view we're going to build
91:34 - that out in a second then what i want to
91:36 - do is let's have an image container and
91:39 - inside of that image container we're
91:41 - going to put all of our images so now
91:42 - when i look look at that it's already
91:45 - starting to look a heck of a lot better
91:50 - and in details we're going to have our
91:52 - info and then we're going to have info
91:54 - left so what's on the left hand side
91:56 - right
91:57 - so we're going to put our title
91:59 - board ape yacht club
92:01 - whoops board api club right this is the
92:04 - title
92:05 - of which collection it is
92:07 - and then we're going to put the nft name
92:10 - so which numbers these are right eight
92:12 - seven five
92:14 - four five nine eight etc
92:18 - we will do conditional rendering if that
92:21 - item is listed
92:23 - we're going to show its info on the
92:25 - right and that info is going to contain
92:27 - the price
92:28 - and it's going to contain the price
92:31 - value
92:32 - and we're going to have a nice little
92:34 - image each image with the price so there
92:36 - we go this one is listed so
92:39 - the first one is listed the second one
92:41 - is listed but notice that the third one
92:43 - is not listed this is not listed this is
92:45 - not listed
92:46 - so
92:48 - only these are listed here
92:52 - okay
92:52 - perfect let's go ahead and do likes
92:57 - and likes will have a heart right
93:00 - there
93:01 - and it'll also say how many likes
93:03 - something has so for now that probably
93:05 - will just remain empty which is fine
93:08 - cool
93:10 - so this is the this is what's happening
93:13 - right now and look at this right all of
93:15 - a sudden our
93:17 - cards are looking beautiful this data is
93:20 - being pulled dynamically right from
93:22 - third web like if i go to third web
93:25 - and we go to our nft collection
93:28 - when you were not looking
93:30 - i added all of these in here so
93:34 - that's why that's where they're coming
93:35 - from if you were confused i'm sorry but
93:37 - yeah i added basically 17 inside of
93:39 - third web
93:40 - so that's where all of the nfts are
93:43 - coming from
93:46 - all right so now let's do this i just
93:47 - removed that function with the whole for
93:50 - loop because i think it's bad
93:53 - so
93:54 - i think here's a much cleaner way of
93:56 - doing this so let's do it like this
93:58 - let's create our use effect hook let's
94:00 - do the same dependencies that we had
94:01 - before
94:03 - and for the listing
94:06 - let's see if we can match that based on
94:08 - if
94:09 - the
94:10 - nft and the listing asset id
94:13 - matches if it matches it means that
94:16 - that particular nft is listed
94:19 - and we're going to say if it's listed if
94:21 - it's true or false this will return a
94:23 - true or false so if you find a match
94:25 - this will return a true if you don't
94:27 - find the match this will return if false
94:31 - all right we're going to set the listing
94:33 - to true and we're going to set the price
94:35 - to the following
94:36 - price
94:38 - and now let's check our app and refresh
94:41 - and let's just see if things work
94:43 - fingers crossed hopefully the work
94:48 - and boom there we go it finds the
94:51 - matches and it lists their price
94:54 - pretty darn cool huh
94:56 - i hope you like that this solution is
94:58 - much cleaner so let's use that one
95:01 - all right and let's explain this part
95:03 - now a bit further so what's happening
95:06 - here we're just saying hey if it's
95:08 - listed
95:10 - let me know that it's listed so if set
95:12 - listed is true then it will make this
95:14 - true and pass it in the url parameters
95:17 - and you'll be able to pull it down from
95:19 - the url parameters right
95:22 - path name will be this
95:25 - so now let's go ahead and build this
95:28 - folder and this particular id thing so
95:32 - here's what we're going to do
95:34 - in collections
95:36 - we're sorry in pages pages
95:38 - we're going to create a new folder
95:42 - and this folder will be called
95:46 - we could call them nfts yeah let's just
95:48 - call it nfts i don't like assets kind of
95:50 - confusing let's do
95:53 - so let's go ahead new folder we'll call
95:55 - it nfts my bad
95:57 - nfts
95:58 - and inside of nfts
96:02 - we will have
96:05 - nftid.js
96:08 - like that or nft item id
96:14 - this is fine
96:17 - dot js just like that
96:20 - cool
96:21 - now in here
96:24 - let's just put something so here like
96:26 - let's just import the header
96:29 - let's do rafc e and then in terms of the
96:32 - name here i'm going to just say nft
96:36 - so we'll just call it an nft component
96:39 - like that cool
96:41 - and we will return
96:44 - header
96:48 - and that's all we will return for now
96:50 - so
96:52 - let's try it let's click something
96:56 - nice and look our header shows up we
96:58 - actually get routed into that bad boy
97:01 - and you can see that i can see the id is
97:04 - zero
97:05 - so even in my third web if i actually
97:08 - click look id 0 here right so let's go
97:11 - back
97:12 - let's go to another another guy like
97:15 - let's go to this guy 4598 and you can
97:18 - see the ids too
97:20 - let's go inside of our third web and i
97:22 - can see the id for this guy is two
97:24 - indeed
97:26 - right and what else am i getting it's
97:27 - listed as false let's go inside of third
97:30 - web
97:31 - and we'll be able to see it so let's go
97:33 - to project let's move that
97:36 - here for now
97:39 - and we'll go to
97:42 - board api club
97:45 - oh no not this one
97:47 - so on this one we have our nft module
97:49 - open and this one will have our openc
97:51 - marketplace open and let's just take a
97:53 - look
97:55 - let's see if it's listed or not
97:57 - so this page is loading right now as you
97:59 - can see from that circle right there
98:08 - so there you go you see that there's
98:09 - only two listed but the one with the id
98:12 - of two that is not listed so this is a
98:16 - true statement that that's this listed
98:18 - is false
98:19 - but if i go to this blue one right here
98:22 - that should say that it is listed
98:24 - listed is true so that is
98:27 - very nice it's working
98:29 - all right so let's just build this nft
98:31 - id page from completely from scratch
98:34 - okay
98:35 - so let's go ahead and import our header
98:38 - we'll also get our use effect use memo
98:40 - use state because we'll need it we'll
98:42 - need to use web3
98:45 - from third web let's also get the third
98:47 - web sdk let's also get routers
98:50 - we'll do some styling for wrapper
98:52 - container our top content nft image
98:54 - container and details container
98:57 - and then what i want to do here is i'll
99:00 - do export default nft and the function
99:03 - will just return header for now all
99:05 - right and it'll just be
99:07 - the the component will just be called
99:08 - nft that's it
99:11 - now inside of it let's go ahead and get
99:13 - our provider from web3
99:16 - we will set some states here so the
99:18 - selected nft which is the you know
99:20 - whichever one is a selected nft like the
99:22 - one that the user has clicked on for
99:24 - example
99:25 - we'll get all of our listings and we'll
99:28 - we'll track the state of our liftings
99:30 - listings will track the state of our
99:31 - selected nft
99:33 - we will get the router because that'll
99:36 - allow us to
99:37 - pull the data from url parameters and
99:39 - the query parameters
99:42 - we will create a get our nft module and
99:45 - if provider doesn't exist and just
99:47 - return
99:48 - update on provider creator third web sdk
99:52 - and then we will use our alchemy's
99:55 - api
99:56 - and we will get the nft module and this
99:58 - is the nft module
100:00 - and again i'm getting the url from right
100:03 - here for the nft module and then for the
100:05 - openc marketplace
100:07 - that's going to be right below this
100:09 - right there
100:12 - okay cool
100:13 - now let's all get all the nfts in the
100:15 - collection again this isn't the cleanest
100:17 - code because we're repeating it for you
100:19 - i'll leave it as a challenge see if you
100:21 - can try to refactor this code and make
100:23 - it where it's being re-reusable because
100:26 - you're seeing that we're using some
100:27 - patterns that we've used before
100:30 - all right
100:31 - so if the nft module does not exist then
100:34 - return we're going to use an
100:37 - immediately invoked functional
100:38 - expression here just async function call
100:40 - it immediately
100:42 - it will get all of the nfts and from our
100:45 - nft array we'll filter and we'll filter
100:48 - it based on
100:50 - the specific asset id and then we'll set
100:54 - the selected nft to the one that we have
100:56 - found
100:58 - so another way of doing this is instead
101:00 - of
101:00 - dot filter you could actually say dot
101:03 - find
101:04 - and then you don't need to do this
101:07 - zero index anymore so
101:10 - both ways should work you can leave
101:12 - whichever one you want let's keep going
101:15 - for now we'll create our marketplace
101:17 - module here
101:19 - and we'll use memo here
101:22 - all right
101:23 - provider again if it's empty just return
101:26 - we're going to create our sdk give it
101:28 - our signer
101:30 - same url and then we're going to return
101:33 - our
101:34 - and get our marketplace module and give
101:37 - it our marketplace
101:39 - a marketplace contract address okay
101:42 - perfect
101:43 - so that should be all good now next up
101:46 - let's create another use effect hook
101:48 - this will update on the marketplace
101:50 - module
101:52 - and we're just gonna get all the
101:55 - listings and then we're gonna set all of
101:57 - the listings meaning so we can have
101:58 - access to all of this and once that's
102:01 - done
102:04 - all right
102:06 - now let's create a component called nft
102:08 - image so i'm going to wrap this in
102:12 - div and then right underneath it i'm
102:15 - going to pass in my nft
102:18 - image
102:19 - and it should break
102:22 - we will need to create this component
102:24 - and here we're going to we're going to
102:25 - create a new folder this folder is going
102:27 - to be called
102:28 - nft and then inside of here
102:32 - we're going to have a new file it's
102:34 - going to be called nft
102:37 - image.js
102:39 - so this is the one that we're going to
102:41 - create
102:44 - let's just do rfce
102:46 - and we'll do
102:49 - yo
102:51 - with fire emoji
102:54 - and let's just see if that renders so
102:56 - let's go or actually let's import it
102:58 - first image
103:01 - boom
103:02 - from component slash nft slash nft image
103:06 - just like that
103:07 - let's go ahead
103:09 - open this bad boy up click it and you
103:12 - can see that my yo and fire emoji is
103:15 - rendering so that means
103:17 - my nft image is working
103:22 - all we need to do is now actually start
103:24 - working on it and styling it so first
103:27 - off let's just remove everything inside
103:29 - of here for now
103:31 - let's bring that back just for a second
103:34 - and what we're going to do is we're
103:36 - going to pass it the selected nft so
103:38 - let's go back to our nft image where
103:40 - we're passing it
103:42 - and what we're gonna do is we're gonna
103:45 - give it our selected
103:47 - nft
103:49 - and we're gonna say selected nft do we
103:51 - have selected nft here right here
103:53 - yes so we're going to pass the selected
103:55 - nft
103:57 - down into nft image
104:00 - right there
104:02 - now let's go back here now let's go
104:04 - ahead and delete some of this
104:08 - let's go ahead and import style
104:11 - we're going to need that so this is
104:12 - going to be the style that we're going
104:14 - to be using for this
104:16 - we're going to need two icons so let's
104:18 - grab them and this reacting isn't
104:21 - necessary to get
104:24 - cool
104:24 - and now we're going to work on rendering
104:26 - the component out itself
104:29 - all right so let's return let's
104:32 - make our divs here and inside
104:35 - we're going to add a top bar and in the
104:37 - top our content we're going to add this
104:40 - icon so you should be seeing that right
104:42 - there let's go ahead and add a likes
104:45 - counter so we'll say this has 2.3 000
104:49 - likes which you can see right there
104:51 - and then we will add another div
104:54 - we will say selected nft and we'll grab
104:57 - its
104:58 - image
104:59 - select
105:00 - ted nft so we'll fix that in just a
105:03 - second
105:04 - let's go ahead and fix that right there
105:06 - selected nft i found the bug this is not
105:10 - asset id this is supposed to be nft id
105:14 - nft id just like that and now
105:18 - it'll pull what you're looking for
105:21 - also now you could turn it into that dot
105:23 - find method because i think that's a
105:24 - better method to use in this case so
105:27 - let's convert this to dot find it's not
105:30 - an array anymore so we don't need to do
105:32 - index of zero
105:33 - also let's rename it because it's not an
105:35 - array anymore so let's say selected nft
105:37 - item
105:39 - all right and then let's also call this
105:41 - selected nft item as well and now boom
105:44 - you're good to go
105:46 - so all we're doing is this returns an
105:49 - array of nfts
105:51 - and we're just looking through them and
105:54 - we're seeing if we find
105:56 - zero
105:58 - inside of any any of this
106:01 - and if we do then that's a match
106:04 - then put that match in here
106:07 - that's the selected nft
106:09 - and then show that nft show the image of
106:11 - that nft and all that
106:14 - all right so let's do this i just
106:15 - removed my nft image from here
106:19 - and after removing that let's go ahead
106:22 - and do the following so let's go and
106:25 - build a wrapper
106:26 - put a container inside of it put top
106:28 - content inside of it and put an nft
106:30 - image container
106:32 - and then let's put the nft image
106:34 - so let's go ahead and do that
106:37 - right now
106:39 - now let's go and build a general
106:43 - general details component so i'm gonna
106:46 - put that inside of my nft folder here so
106:50 - let's go new file and we're gonna go
106:52 - general
106:53 - details
106:54 - and let's build this out now
106:57 - and before we build this out let's give
106:59 - it what it requires so let's go here for
107:02 - props
107:04 - and for general details the prop that
107:06 - i'm gonna need to give it is going to be
107:09 - my selected nft kind of like that
107:12 - so let's go ahead and then do the
107:15 - following
107:16 - let's right underneath here add a
107:18 - details container and then inside of
107:21 - this details container
107:24 - we're gonna add our general details
107:29 - nft now it should crash that's fine
107:33 - let's go in general details hit
107:35 - c e do this let's go back
107:37 - let's delete this s and hit enter
107:40 - it should give us the option to auto
107:42 - import let's do our auto import and
107:44 - perfect it's auto importing
107:46 - now let's go into general details
107:49 - let's and
107:50 - let's start building this out now
107:53 - oh and let's not forget let's do
107:55 - selected nft
107:58 - just like that
108:01 - all right so now let's this is what you
108:04 - should have in general details if you
108:06 - have import react that's fine but now
108:08 - let's actually work on this component of
108:10 - general details so let's import
108:12 - everything that we need so get our ai
108:15 - fill heart because we're going to need
108:16 - that icon we're going to need a md
108:18 - refresh icon
108:20 - ri share box line fi more vertical gi
108:23 - share
108:24 - and then for our styling
108:27 - let's we're going to have a wrapper
108:29 - we're going to need an info container
108:31 - we're gonna need an accent an nft title
108:34 - one
108:35 - other info one who is owned by the likes
108:38 - the like icon actions button container
108:41 - we're gonna need action buttons and then
108:44 - action button
108:45 - and then a divider so that's it for
108:48 - styling
108:49 - and now let's actually start rendering
108:51 - this component so
108:53 - we're going to need our wrapper
108:55 - inside of our wrapper we're going to
108:56 - have our info container inside of that
108:58 - we're going to say board api club so
109:00 - boom right there you can see it's
109:02 - starting to show up
109:04 - we are going to
109:06 - put the name right here let's get other
109:08 - info so who is it owned by we need to
109:11 - put that
109:12 - information and let's go for likes let's
109:16 - show our likes right there 2.3 k
109:19 - favorites
109:20 - and then we will put our action buttons
109:23 - container and then we're going to start
109:25 - putting our action buttons in there so
109:27 - there we go you see refresh at the top
109:29 - right
109:30 - now we're going to create a divider now
109:32 - we're going to do
109:33 - a box line
109:36 - let's go ahead and create another action
109:37 - button gi share
109:40 - and let's go find more vertical and
109:43 - there we go
109:44 - boom look at that
109:46 - so now our general item details are
109:50 - completed and they're all showing up
109:52 - nice work so far
109:54 - now we're going to add in our item
109:56 - activity so let's go ahead and create a
109:59 - new component inside of nft
110:01 - and this is going to be called item
110:06 - activity.js
110:07 - we're going to
110:09 - rafce
110:11 - we don't even need that at the top
110:13 - let's go back to general details
110:16 - let's go to nft id actually
110:20 - and right here we're gonna add our item
110:23 - activity
110:26 - okay
110:28 - there we go and let's go ahead and
110:30 - import this as well at the top item
110:32 - activity from components nft item
110:35 - activity
110:36 - and this is going to be some dummy data
110:38 - but it's going to make this app look
110:40 - much better so let's work on this now
110:42 - all right so let's work on our item
110:43 - activity component so let's go ahead and
110:46 - import cg arrows exchange v
110:49 - we're going to need this
110:51 - let's go ahead and import ai outline
110:53 - down and outline up
110:56 - let's use get use date from react and
110:58 - dummy events don't worry we will fill
111:00 - out this file soon we'll create a list
111:03 - of some dummy events
111:05 - this is going to be our styling so i'll
111:07 - full screen this if you want to copy
111:09 - this okay it's going to be our styling
111:13 - and then we're going to need to keep
111:14 - track of toggle
111:16 - and the reason we're going to need to
111:17 - keep track of toggle is if i go to our
111:20 - collections and this is our you know
111:22 - finished app deployed app when i go here
111:25 - and i actually click this toggle watch
111:26 - what happens boom
111:28 - right so
111:30 - that's super nice
111:31 - so this is the toggle that we're
111:33 - actually gonna build so that's what we
111:35 - need to keep track of the toggle
111:37 - and then we're gonna return the
111:38 - following let's have our wrapper
111:40 - and title and then we need to set uh
111:44 - toggle on and off based on
111:46 - click all right we're going to add item
111:49 - activity
111:51 - and then we need to add the arrow
111:53 - as well and then we're going to if the
111:56 - toggle is true then make it show up
112:00 - if it is not toggled then make it point
112:03 - down
112:05 - okay
112:05 - so for example if i go to my deployed
112:07 - app look at it's pointing down and when
112:09 - i click it it points up and this and
112:12 - then means if the toggle is true then
112:15 - show all of this if it's not true then
112:17 - don't show this all right so we're gonna
112:20 - show the toggle
112:22 - and then in the table header we need to
112:24 - have events
112:25 - we need to have price we need to have so
112:27 - kind of like this right event price from
112:30 - to date
112:31 - just like that
112:33 - and then we're going to map through each
112:35 - of the dummy events and we're going to
112:36 - render out each event
112:39 - kind of like this
112:40 - all right so we need to get some dummy
112:42 - events now
112:44 - so we're going to create a folder called
112:46 - static
112:47 - and inside of this folder we will create
112:51 - dummy
112:52 - events
112:53 - and i'm just going to put
112:55 - an array of objects of dummy events so
112:58 - you could put it and whatever you want
113:00 - it to be from to whatever you want and
113:02 - if you want you could even essentially
113:04 - connect these events to the database and
113:06 - pull events from a database again i
113:08 - would leave that to you as a challenge i
113:11 - just need to make sure that when i'm
113:12 - making this app the scope isn't 12 hours
113:14 - long right so that's why
113:16 - i'm putting some dummy data here but
113:18 - i'll leave that to you as a challenge to
113:19 - see if you can figure out how to do that
113:22 - cool so our dummy events are right here
113:25 - and now all we need is we need to import
113:28 - my dummy events so let's go ahead and do
113:31 - that and let's see
113:32 - so import dummy events from static dummy
113:35 - events
113:37 - cool
113:38 - and now what i need to do is work on my
113:40 - event item component
113:43 - so in my components inside of um
113:48 - my nft component we're going to do new
113:50 - folder we're going to say item
113:53 - item activity and inside of there we're
113:56 - going to create a new file and it's
113:57 - going to be called
113:59 - a new component rather
114:01 - and it'll be called event
114:03 - item.js and before i start building this
114:06 - out let's just go to oh this is this is
114:09 - good over here because i'm
114:11 - mapping through and i'm giving
114:13 - events an event
114:17 - all right so let's get to work on this
114:19 - component so we will import a fill
114:23 - cart fill bs fill cart fill so it's an
114:26 - icon
114:27 - we are going to export default event
114:29 - item let's create our style
114:32 - these are going to be all of our
114:33 - stylings and then an event item
114:36 - what i want to do is
114:39 - let's go ahead and destructure event
114:42 - and then for each event item
114:45 - i'm going to do the following we'll
114:46 - create an event event icon
114:49 - give me this cart fill icon which is
114:51 - this guy right there
114:53 - and let's go to
114:55 - our component and see if it's showing
114:58 - anything in the meantime
115:00 - event item is not defined so let's go
115:03 - ahead and save this and let's go back
115:06 - event item let's go ahead and import it
115:09 - so let's go at the top now it's
115:11 - importing it correctly so now event item
115:14 - is defined
115:16 - and there we go our event item is
115:18 - showing up
115:20 - look at that
115:21 - that's that's actually looking pretty
115:23 - freaking clean you guys look at that
115:27 - all right let's go ahead and get our
115:29 - event price
115:30 - we'll give it a flex 2 here
115:33 - and
115:34 - for image i'm just going to give it that
115:35 - ethereum image this is svg file
115:40 - oh and then let's go ahead and give it
115:42 - event price
115:44 - all right we will add a two here
115:49 - and then we will add
115:51 - uh event.date so four months ago
115:55 - and boom
115:57 - all right our event item and our table
115:59 - is done let's click this whoa whoa look
116:02 - at that
116:04 - your table is working guys
116:07 - guys if you think that is freaking cool
116:09 - smash that like button seriously smash
116:12 - that like button break that thing
116:14 - that was freaking awesome and one thing
116:16 - i do want to say right if there's
116:17 - javascript in here that's like getting
116:19 - too advanced for you and you're like man
116:21 - what the hell's going on look what i
116:23 - want you to do is go and just
116:25 - join our course profit with react
116:28 - because that will break down all the
116:30 - javascript all the html all the css all
116:33 - the react
116:35 - that like is maybe jumbling up your
116:37 - brain you're like what is happening here
116:40 - because if i were to break down every
116:42 - single line of code every single
116:43 - javascript line again this thing will
116:45 - turn into 12 15 hour long video right
116:47 - and that's that's not something that's
116:49 - sustainable for you
116:51 - to watch or for me to build and uh
116:54 - videos sometimes can't even go over 20
116:56 - hours so what i'd recommend is
116:59 - go
117:00 - check out our courses below you know
117:02 - join profit with react or i'll try to
117:04 - link some
117:05 - you know free course as well but i would
117:07 - highly recommend profit the react
117:08 - because it comes with coaching calls as
117:10 - well so you can really sharpen your
117:13 - javascript and react and coding skills
117:17 - because once you do that
117:18 - then building even on the blockchain is
117:20 - not that hard but if you don't do that
117:23 - honestly building on blockchain and
117:24 - those things are going to continually
117:26 - keep being hard so
117:29 - check it out best freaking course on the
117:31 - planet check it out all right let's keep
117:33 - going
117:35 - so
117:36 - there we go our item activity table is
117:38 - made it's doing what we need it to do
117:40 - and now we just want to work on our last
117:43 - function and we're pretty much done so
117:46 - let's go ahead and work on our function
117:48 - component so in my nft i'm going to do
117:50 - new file
117:51 - we'll do purchase.js
117:53 - just like this
117:55 - and let's work on this component now
117:58 - let's go back actually to our nft id and
118:02 - there let's go ahead right under general
118:04 - detail we're actually going to do
118:07 - purchase
118:08 - and it's going to be a self-closing tag
118:10 - like this
118:12 - let's go here and i'm going to say is
118:14 - listed
118:15 - and we're going to go router.query.is
118:19 - listed so pass it like that
118:22 - we're going to say selected nft is going
118:24 - to be selected nft
118:28 - we will go listings will be listings
118:31 - okay and marketplace module is going to
118:34 - be marketplace module
118:36 - all right
118:38 - now it says purchase is not defined that
118:40 - is
118:41 - fine we're going to import that in just
118:44 - a second so let's go ahead and import
118:48 - that now
118:48 - [Music]
118:50 - purchase
118:53 - cool
118:54 - and now we're ready to work on our
118:57 - purchase component
118:58 - let's do it what the hell was that let's
119:01 - do it
119:03 - let's what's up what's going on with me
119:05 - all right let's keep going
119:07 - honestly i think it's just 2 107 am
119:10 - right now and i'm uh
119:13 - starting to lose my brain cells a little
119:15 - bit but you know what i was like just
119:16 - screw it i'm gonna finish this goddamn
119:17 - video i'm gonna just finish it instead
119:19 - of leaving it for multiple days let's
119:21 - just do the whole freaking thing all
119:23 - right and if you're watching this and
119:24 - you're watching this live
119:26 - show me some love all right i'm here
119:28 - grinding for you
119:30 - smash that like button show me some
119:32 - freaking love all right subscribe
119:34 - drop some heat in the comments and share
119:37 - some love with me let's keep going
119:40 - all right so let's start working on our
119:42 - purchase component so i'm going to
119:44 - export default make offer
119:47 - and then we're gonna get use effect and
119:50 - use state i will also get my high tag
119:53 - because i'm gonna need that
119:55 - my wallet
119:57 - let's go ahead and get our toast
120:00 - all right cool and i'm going to create
120:03 - my styling here just like this button
120:05 - button icon button text
120:07 - and then we're going to create our make
120:09 - offer and then in make offer
120:12 - i'm gonna need i mean i could call it
120:14 - purchase as well and just i decided to
120:16 - call it make offer
120:18 - so is listed it's gonna destructure
120:20 - selected nft we're gonna destructure
120:22 - listings and marketplace module
120:25 - and then let's get our selected market
120:28 - nft so which is the nft that we have
120:31 - selected
120:32 - let's have our enable button and track
120:34 - the state of that
120:36 - and if it's
120:37 - not listed or if it listed is false then
120:42 - i just want you to return and end this
120:45 - and track these three please because
120:47 - whenever they get updated i want you to
120:49 - fire this use effect again
120:51 - here is the iife that i want you to call
120:54 - and
120:55 - i want you to basically look for
120:58 - if the market nft matches the selected
121:01 - nft if it does then set that to the
121:04 - selected market nft and let's create
121:06 - another use effect hook
121:08 - and what this will do is
121:11 - again if none of these are set then just
121:13 - end
121:14 - otherwise you're going to set the enable
121:16 - button to true this is kind of your buy
121:18 - now button
121:19 - and then we're going to track selected
121:21 - market nft
121:23 - states and here's our confirm purchase
121:25 - function
121:27 - and on purchase we're gonna say purchase
121:29 - successful we're gonna have a little
121:30 - toaster notification
121:32 - and then here's our buy item function
121:35 - that we're going to create so it's going
121:36 - to take in
121:37 - it's going to take in two arguments
121:39 - listing id and by default the listing id
121:41 - is going to be the selected market nft
121:43 - id
121:44 - and quantity desired is going to be by
121:48 - default one and module by default is
121:51 - going to be marketplace module so all of
121:54 - it has three arguments this function by
121:56 - item has three arguments
121:58 - and these are all the defaults that were
122:00 - passing it
122:02 - and then what we're going to do is we're
122:04 - going to
122:05 - buy we're essentially going to use the
122:07 - third webs buyout direct listing method
122:11 - okay and that allows you to easily buy
122:12 - an nft
122:14 - and then we're going to do confirm
122:15 - purchase which is our toaster which is
122:19 - our react hot toast function which is
122:21 - going to pop up a little notification
122:22 - saying hey great work
122:25 - let's go ahead and now start building
122:28 - and rendering this out
122:30 - so here's what this is going to look
122:32 - like okay let's go ahead and show our
122:34 - toaster component
122:36 - all right and then
122:38 - inside
122:41 - if the listing is true
122:43 - then i want you to render the following
122:46 - okay actually let's go ahead and see
122:49 - what's the error here
122:52 - let's refresh can't resolve purchase
122:55 - let's take a look uh
122:57 - in our nft id where we put purchase it's
123:01 - not asset it's actually nft here so now
123:04 - it should resolve at the very least
123:07 - but let's hope yes it's being resolved
123:10 - perfect now it's going to start showing
123:12 - our enable button and buy now button and
123:14 - list now button and things like that
123:17 - so let's go back
123:19 - and if the listing is true then
123:22 - basically render out an enable button
123:24 - that allows you to buy
123:26 - the nft so if the enable button is there
123:30 - and and i've clicked it meaning like
123:32 - i've just clicked the buy now button
123:34 - then
123:35 - fire off the buy item method
123:37 - and we're going to render out the buy
123:39 - now button and let's go ahead and also
123:42 - write make offer
123:45 - and if this is not the case then i want
123:47 - you to do the following so look at that
123:49 - our buy now button is showing up and our
123:51 - make offer is showing up as well let's
123:54 - go ahead and list our item
123:57 - and that should be it
124:00 - so
124:01 - what's this saying if listed is true
124:04 - then render this if it's not true then
124:06 - render this so
124:08 - let's go to one that's not listed so
124:10 - let's go collections
124:12 - and for example this one is not listed
124:15 - here let's click it and you can see it
124:17 - says list item now if i go back to
124:19 - collections and we go to this one right
124:21 - over here it will say buy now or make
124:24 - offer
124:25 - now let's actually see if we can buy
124:28 - this
124:29 - guys this is the moment of truth this is
124:32 - what we have been building up to if this
124:34 - works this is gonna be mind-blowing it's
124:37 - gonna be crazy so if you're getting
124:38 - hyped yo drop some love get hyped let's
124:42 - see if this actually works what the heck
124:44 - this is crazy
124:47 - so
124:48 - i'm gonna i'm just gonna
124:50 - give it a try let's hit by now and let's
124:54 - see what happens buy now
124:56 - oh man okay cool so we have
125:00 - uh missing argument past the contract
125:03 - count is equal to three accepted count
125:06 - four let's see what's happening here
125:09 - all right so we're at the finishing
125:11 - touch and we're about to make the buy
125:13 - now button work now it was crazy it was
125:16 - working and then all of a sudden started
125:18 - bugging out for a while and
125:21 - right now it's almost 5 a.m i was
125:23 - debunking this for the last three to
125:24 - four hours
125:25 - with my team and also just debugging
125:27 - myself and
125:29 - i'm like i'm not gonna go to sleep until
125:31 - i freaking solved this right so
125:33 - i got it done we got it done and here's
125:36 - what it is
125:37 - so
125:38 - one of the things you have to do is
125:40 - upgrade all of your packages so that's
125:41 - one of the errors that i was running
125:43 - into so basically what you want to
125:44 - do is
125:45 - i'll zoom in here so you can see this
125:47 - command but basically what you want to
125:49 - do is yarn upgrade
125:52 - like this i'm going to do
125:55 - lates dash dash lates like that
125:58 - this command takes a while to run it
126:00 - takes a while so
126:02 - just let that run
126:04 - it's not frozen it just takes a long
126:06 - time and it'll upgrade all of your
126:08 - packages so that's the one
126:10 - the next thing we want to do is
126:12 - everywhere we have this ranki or infura
126:15 - or alchemy link just delete that so
126:18 - let's delete that from here
126:21 - let's delete that from here
126:23 - and then the other place that has it is
126:24 - in the collection id so those are the
126:26 - only two files that has those links so
126:28 - let's go into collection id
126:30 - let's delete this
126:32 - and let's delete this
126:35 - all right
126:36 - there we go
126:37 - now
126:38 - let's go to our app let's go to
126:40 - collections
126:41 - and let's see what's listed on here on
126:43 - third web so i have this blue one listed
126:46 - and this one listed so those are the
126:48 - only two ones that should be
126:50 - showing prices right now
126:52 - so let's see
126:53 - yep those are the two those are the only
126:55 - two ones that are showing prices for me
126:57 - right now
126:59 - so
127:00 - let's go to this blue one and i'm going
127:03 - to connect with a different wallet
127:05 - so what i'm doing here is this is my
127:08 - wallet i am
127:10 - i actually probably don't have enough
127:11 - eath
127:12 - to buy this
127:14 - so
127:16 - let's transfer some ethia
127:18 - so
127:19 - i'm gonna go to my
127:22 - secondary wallet
127:24 - okay this is some random wallet i have
127:26 - i'm going to copy the address
127:28 - so go here
127:29 - and let's send eth to this address and
127:32 - we will send 0.38
127:34 - [Music]
127:36 - 0.48
127:40 - confirm
127:42 - so i'm just sending some eth over to my
127:44 - other account to buy because this is an
127:46 - admin account so this is not the account
127:48 - you want to buy with
127:50 - you want to purchase it with you want to
127:52 - act like you're just a person who's
127:55 - going through the store and buying stuff
127:57 - right
127:58 - store owner is not going to buy stuff
128:00 - so let's go to this one now now i have
128:02 - enough eath to purchase so and i've
128:04 - connected my account with this make sure
128:07 - you disconnect with your main one your
128:09 - admin one
128:10 - and if you don't know how to create a
128:11 - new account just hit create account and
128:13 - it literally makes a new account for you
128:16 - connect it to the rinkyb test network
128:18 - log in with it and you should be good to
128:19 - go if i go to connected sites i have
128:21 - local host 3000 here so now
128:24 - this is the moment of truth let's see if
128:27 - this buy now button works if it works
128:30 - we're good if it doesn't we're in
128:32 - trouble all right here we go
128:34 - if it works at the bottom left you're
128:36 - going to see the notification let's
128:38 - actually make our notification better so
128:40 - let's go to our toast
128:42 - where's our
128:43 - where's your toast nft id in purchase
128:47 - i think i have my toast
128:50 - yeah let's go instead of
128:53 - bottom left
128:55 - we'll go
128:55 - [Music]
128:57 - position
129:00 - top
129:01 - center
129:02 - i think that's what it is right top
129:04 - center
129:05 - let's look
129:08 - top center
129:11 - top center
129:13 - huge shout out to third web by the way
129:14 - it's three or f it's like four a.m four
129:17 - am almost in raza his username is
129:22 - let's actually see raza codes python
129:24 - huge shout out to raza codes python he
129:28 - came in actually from third web to help
129:30 - me out so i mean this is amazing their
129:33 - customer support and their community is
129:35 - freaking awesome so that's massive props
129:37 - like guys
129:38 - go join their discord all right we'll
129:40 - link it below go join their discord and
129:42 - be a part of their community because
129:44 - that's pretty ridiculous so
129:46 - all right in here i got i have
129:48 - everything good to go i made it top
129:50 - center all right now let's see moment of
129:54 - truth let's hit by now and let's watch
129:55 - what happens and at the top center we
129:58 - should see purchase successful so let's
130:00 - go
130:01 - buy now
130:02 - fingers crossed
130:05 - hopefully my metamask wallet comes up to
130:08 - make the purchase we'll see
130:10 - boom look at that
130:12 - yo
130:14 - 0.1 eth
130:16 - let's see
130:17 - let's wait for it now it's charging me
130:19 - gas fees as well
130:21 - let's hit it
130:23 - let's hit it
130:25 - please work please work please work come
130:28 - on
130:29 - i spent my whole night
130:31 - i will sleep so peacefully
130:34 - please work
130:36 - let's give it a few more seconds guys
130:39 - blockchain blockchain likes to take its
130:41 - time making transactions
130:43 - takes its sweet time
130:47 - boom look at that it said purchase
130:50 - successful joe let's freaking go you
130:53 - guys
130:55 - that's what i'm talking about guys
130:57 - all right if you thought that that was
130:59 - freaking awesome
131:00 - guys come on do me a favor smash that
131:03 - like button break that like button let's
131:06 - get this video out to as many people as
131:07 - possible and just hype it up in the
131:10 - comments below hype it up in the live
131:11 - chat if you're watching it live
131:13 - man
131:15 - i am beyond hype right now that was
131:17 - awesome and let's make sure that that
131:20 - purchase has happened right so
131:23 - let's go and
131:25 - i'll refresh this i'll actually let's go
131:27 - to collections and in collections
131:31 - let's go
131:32 - and you see the blue one is not listed
131:35 - anymore look at that
131:37 - right
131:38 - it's
131:39 - it's been purchased so it's not listed
131:42 - anymore and now let's go inside of it
131:44 - look it just says list item it does not
131:46 - say buy now okay our toggle here is
131:49 - working as well does not say by now if i
131:52 - go to third web and we refresh here
131:54 - let's watch what happens
131:56 - so it takes a second to load it on third
131:58 - web but if you keep waiting boom look at
132:00 - that the blue one is gone it's not
132:02 - listed on the market anymore that means
132:05 - somebody actually owns it so
132:08 - that's exactly the experience we're
132:09 - looking for right and if i go to my if i
132:11 - look at my wallet i can see that i
132:13 - bought
132:14 - something
132:15 - right and i can even
132:17 - view it on the block explorer if i
132:20 - wanted to confirm that transaction you
132:22 - could actually check it out on
132:23 - rinkybee.etherscan
132:25 - and you can see that it was a success
132:27 - okay and you can see the contract
132:30 - from
132:31 - and you know what you bought what
132:32 - collection it was all of it so
132:35 - guys
132:37 - so freaking cool man so freaking cool
132:40 - all right so this app is done at this
132:44 - point all we need to do is we need to
132:46 - deploy this app so let's go ahead and
132:49 - let's start working on deploying this
132:51 - app so make sure
132:52 - that you have an account on
132:53 - versailles.com
132:56 - all right
132:58 - and let's go here
133:01 - you want to have a account on here and
133:04 - what we want to do
133:05 - so just make sure you're signed up on
133:07 - here that's kind of all you need to do
133:09 - now inside of my project i'm actually
133:11 - going to type in versel
133:13 - and it's automatically going to pop up
133:15 - these things let's just follow these
133:17 - command lines here so it says setup and
133:18 - deploy
133:20 - and we will say yes
133:22 - so i just hit
133:23 - y
133:24 - which scope do you want i'll just say
133:26 - clever programmer for this
133:29 - i'll zoom out because i often forget to
133:31 - zoom out and that causes problems
133:35 - link to an existing project i'm going to
133:36 - hit enter it's going to be default no
133:39 - openc blockchain clone yes that's the
133:41 - project's name all the defaults are
133:43 - pretty smart they're pretty good so i
133:45 - just kept hitting enter
133:47 - in which director is your code located
133:49 - this directory right here
133:52 - and let's see what happens so now it's
133:55 - going to work on
133:56 - uploading this project and pushing it
133:58 - out and kind of deploying it and
134:01 - what we want to do is in our sanity we
134:03 - want to make sure that we give it the
134:05 - course origin
134:07 - where
134:08 - our course has a versaille on there
134:13 - so once i get the actual link to the app
134:16 - i'll put that one it says our project is
134:18 - deployed so i'm gonna command click it
134:23 - and we're live it seems like it's
134:25 - deployed what the heck this is awesome
134:29 - so all we need to do though
134:31 - is grab that url wherever we deployed
134:35 - this app just now
134:37 - so let's grab this
134:39 - let's go to our sanity studio
134:41 - [Music]
134:42 - or not not here
134:44 - let's go here and in api
134:47 - we want to add course origin
134:49 - add this hit allow credentials and hit
134:52 - save
134:54 - boom there we go
134:55 - it's perfect
134:57 - now let's go to our deployed app let's
134:59 - connect wallet
135:02 - and let's go ahead and
135:07 - connect with this wallet and let's see
135:09 - it should say something like maybe
135:11 - welcome back clever quasi or something
135:13 - there we go welcome back clever quasi
135:15 - beautiful that's exactly what we wanted
135:17 - it pulled our username from the sanity
135:19 - database everything looks beautiful
135:21 - beautiful the nav bar looks beautiful
135:23 - right look at that
135:25 - we have the on hover effects and
135:26 - everything let's hit collections
135:29 - so we can come to our main page
135:32 - board ape yacht club
135:34 - boom look at that all the projects are
135:38 - here and any one of them that are listed
135:42 - are showing up as listed
135:44 - yo that is beautiful and now let's see
135:48 - again the moment of truth on the
135:49 - deployed version can we actually buy
135:51 - this nft
135:53 - we were able to list it now let's see if
135:55 - we can buy it right so
135:58 - wallet
135:59 - perfect i'm on uh which wallet let's see
136:01 - which one i'm connected with i'm
136:03 - connected with this i'm going to
136:04 - disconnect with this for now
136:07 - so we're going to
136:09 - disconnect
136:14 - and i'm going to go to this one and i
136:17 - will connect to current site
136:21 - and i'll purchase this one with that so
136:24 - let's see
136:25 - i just hit buy now so my meta mask
136:27 - should actually pop up soon
136:38 - let's see
136:42 - let's refresh
136:47 - beautiful let's hit by now
136:57 - alright so there we go i just had to go
136:59 - to the collections come back and it
137:02 - looks like it's pulling it up here we go
137:06 - all right let me open up my meta mask
137:08 - and this is the moment of truth we're on
137:10 - the deployed version is it actually
137:12 - going to be able to make a purchase
137:13 - let's see let's hit confirm
137:16 - and it's going through it's pending it
137:19 - says right there and now we just wait
137:23 - pending
137:25 - see pending pending pending
137:28 - oh man please work whoa look at that it
137:32 - was it just said successful
137:34 - and it just says successful buy right
137:37 - there
137:38 - guys this is absolutely beautiful it's
137:40 - deployed so you guys can actually
137:42 - interact with this app as well you can
137:44 - go online and check it out
137:47 - but if we refresh on our marketplace
137:51 - now if we wait long enough this actually
137:54 - should be unlisted as well and should
137:56 - stop showing up
137:58 - on third web boom
138:00 - this is gonna go away soon
138:02 - there you go it's gone not showing up
138:05 - anymore right it just takes a second but
138:07 - there we go it's gone so
138:10 - guys we have done an absolutely amazing
138:14 - job right we have used third web for the
138:17 - blockchain component we have built this
138:20 - amazing beautiful front end with nexjs
138:23 - you use tailwind css to style this whole
138:25 - freaking thing you have you're pulling
138:28 - data from sanity right this data is
138:30 - actually coming from sanity
138:33 - floor owners items all of this is
138:35 - dynamic this is also coming dynamically
138:38 - from sanity the database
138:40 - all of these nfts here are actually
138:43 - being pulled are being directly
138:45 - retrieved right from the blockchain
138:47 - itself
138:49 - using third
138:50 - web and then you're able to list your
138:54 - nfts and you were able to buy nfts right
138:58 - so
138:59 - in terms of functionalities
139:01 - wow what an absolutely amazing project
139:05 - we've built together
139:06 - and
139:07 - really amazing
139:08 - awesome things that we're using in this
139:10 - project right like use memo
139:12 - and
139:13 - we're using
139:15 - like used memo made this app so fast
139:17 - because if you do this without use memo
139:21 - this will be so freaking slow it'll take
139:22 - forever
139:23 - if you look at what use memo does use
139:25 - memo is super cool it will cache
139:28 - the calls so the more times you make the
139:30 - calls the faster it gets right so for
139:32 - example i just clicked on that one
139:34 - and i go back
139:36 - it'll be a little bit slower then it'll
139:37 - just keep getting faster and faster and
139:39 - especially when i click on the same
139:41 - exact guy it'll keep getting faster and
139:43 - faster
139:44 - like that see that boom
139:46 - boom boom
139:48 - boom
139:49 - that's the power
139:51 - of that so
139:52 - there is just so much cool stuff that i
139:55 - feel like we've gotten done and
139:57 - accomplished in this and then just so
139:59 - little time it's absolutely unbelievable
140:02 - so guys at this point what i want to
140:03 - tell you is
140:05 - look if you're here and you've enjoyed
140:07 - this first of all make that smash button
140:09 - blue right smash the like button let's
140:11 - get this video out the other things i
140:12 - want to say is if you were struggling
140:14 - with this or you need help with this
140:16 - look join our community at clever
140:18 - programmer it's completely free
140:21 - click it join it become part of our
140:23 - discord become part of our email
140:26 - newsletter where we'll be able to help
140:28 - you on a weekly basis if we have online
140:30 - trainings we'll let you know if we have
140:32 - a free course we can give you right in
140:34 - the description below i'll also link a
140:36 - free course that you guys can actually
140:38 - join and go through if you want to join
140:40 - profit with react and get a lot more
140:42 - training hands-on technical
140:45 - it's going to be in the description
140:46 - below
140:47 - if you need more help and you want to
140:49 - get in and meet us physically in person
140:52 - in l.a i'm personally hosting the
140:54 - workshops in new york city we have
140:57 - people hosting the workshops and then we
140:59 - have multiple other cities where we have
141:02 - clever programmer people hosting
141:03 - workshops so you can come to new york
141:05 - city and la and get help with how do you
141:08 - build this amazing project and work with
141:10 - me in person and work with you know our
141:13 - team members in person and we'll help
141:15 - you build web 3 projects web 2 projects
141:18 - full stack blockchain whatever it is
141:20 - we'll help you with it and we just have
141:22 - you know such an amazing community and
141:24 - it's completely free so that's also
141:27 - going to be in the descriptions below
141:29 - and it's just at
141:29 - cleverprogrammer.commeetups
141:32 - all right once you go there you get
141:34 - access to all of our upcoming meetups
141:36 - and you can just join them for free
141:38 - there's no cost to you i would love to
141:40 - see you there and we are running
141:42 - multiple per month our goal is to be
141:45 - able to run them once a week but at
141:47 - least you know two to three times a
141:49 - month we're running them
141:51 - as of now
141:52 - so take advantage of that take massive
141:55 - advantage of that because i don't know
141:56 - how long i'm going to be running them i
141:57 - don't know when i'm going to stop doing
141:59 - that and i don't i don't know how long
142:00 - i'm going to be running it for free if
142:02 - you're watching this video right now it
142:03 - might
142:04 - might even be gone might not even be a
142:06 - thing
142:07 - but if you want to jump on it right away
142:09 - i would say do it so that's it those are
142:12 - all the things i wanted to keep you
142:14 - abreast of with that said i love your
142:16 - beautiful face this was so freaking cool
142:19 - thank you so much for building it with
142:20 - me and as always i'll see you
142:24 - in the next
142:25 - video

Cleaned transcript:

you'll build an open c blockchain web 3.0 app with next.js you'll style it using tailwind css you'll learn how to create your own marketplace on the blockchain i'll then show you exactly how you can mint your own nfts and make your own nft collection then in this app you'll be able to list and buy your own nfts that you have created on your own marketplace using the third web sdk will then add authentication to the app using metamask we'll then use sanity io as our database backend to store our users and owners and marketplace information about them we'll build our front end and update our data on the collection and nft pages using third web on the blockchain you'll learn how to use grok and sanity api to retrieve your data the chain that you'll be building this app on is the ethereum chain and finally we'll take your app deploy it using versailles and you'll have your own openc web 3.0 blockchain app built with next.js now right before i demo the app go ahead and do me a favor smash that like button do it right now turn that thing blue now that it's blue here's a photo of a koala bear just because i love you awesome now with that said also subscribe to the channel if you want to become the best react next or blockchain developer in the world that's what we're here to help you do so subscribe become a part of this community that said let's go ahead and demo the app right now so look at this i have my openc app open up right here with the beautiful header a stunning background the blurred filtered effect right when i hover over these buttons they look super nice i got my nav bar looks exactly like it now i'm gonna go on to my next page which is i'll hit collections and we'll go to our collections page right now here i have my board ape yacht club listed i can see how many owners it has we can see the floor price we can see the volume traded i have all my nfts listed here and what i can do is i can go to let's say one of these so for example this one is listed and is up for sale this one is up for sale this one is not so you don't see any price there all of this actually is being pulled from the blockchain using third web right and this is created by this is coming from our database our sanity database that we're gonna be using so let's just go ahead to six five one two i'm gonna click on it it's gonna load this up and check this out looks exactly like open c so i have my nft 6512 i see a history underneath right i see my data and now i can go ahead and click buy now and let's watch what happens i'm going to hit confirm and let's wait for it fingers crossed whoa look at that i see that it came by and went away quickly so this purchase was actually successful now in order to prove that it was successful let's go back to our collections and notice 6526512 here is not listed there anymore it means it's actually sold and somebody has purchased this just to confirm that the confirmation happened on metamask here you can actually see the history that one purchase was made and now let me show you the authentication part and how we're using metamask authenticate so let me go back to my home page i'm going to click meta mask go wherever the deployed version is connected we'll go to connected sites and disconnect now that i'm actually disconnected and noticed that on the home page i'm logged out i can't do anything but once i hit connect wallet my meta mask extension pops up i can go down choose the account i want to connect with hit next hit connect and boom you are in and now you can go to the collections page and check out the collections see what's listed and buy or sell so with that said i'm excited i hope you're excited let's go ahead and start building this thing up now before we start getting coding i would do want to let you know we're building the world's best and biggest web 3 community in the world around web3 and blockchain so make sure if you want to join that click the button below it'll take and ask you for a name and email and it'll also give you access to our discord the second thing i do want to let you know is now at clever programmer what we're trying to do is we're opening up locations in different cities we're so we might be coming to a city near you because we're already in new york city in l.a hosting sessions almost every single week in person through meetup.com make sure that if you want to sign up for those click the link below it's going to be cleverprogrammer.com meetups so we're already in tampa florida in north carolina raleigh los angeles and in new york city so whichever one is the closest to you pick one and come in we'll do web 3 stuff we'll do web 2 stuff we'll build full stack projects we'll dive into next js we'll dive into solidity or whatever you want to do right so make sure take advantage of that and you can actually come in person get help this vision is big this movement is freaking exciting be a part of it click the button below and sign up for that as well oh and it's completely free so you have nothing to lose go ahead and do that right now all right let's start coding so i'm gonna hop over to my terminal and i'm gonna go to my github and we're gonna do yarn create next app and i wanna install it with tailwind so i'm gonna do dash e with tailwind css and then name your app so whatever you want to call in this case i'll call it openc blockchain clone okay you could call it whatever you want now it's going to begin the installation process and hopefully it will install tailwind as well so let's go ahead and see what it returns to us so it says it's done we're going to cd into it and i'm going to do code period so it opens up my visual studio code in the same exact directory and if i go here uh let's see if i have tailwind i actually have tailwind can config set up properly here if i go to my global css tailwind is right there as well so it's perfect i got my tailwind if tsx freaks you out don't worry it this is typescript and you can essentially run javascript files in here no problem and if it's still freaking you out you can just go ahead and name it jsx and it won't do anything or you can even name it js won't really make any difference to your app so you'll be fine either way typescript is really awesome and i want you to start learning how to use it because it is super cool all right now let's just make sure everything in our app is running so i'm going to zoom in here a little bit so you can see things a bit better let's close this off i'm going to command j and open up my command line here and we'll open up another one and let's do yarn dev let's just make sure that we have everything running and there you go we have everything up and running so my app is running on localhost 3000 we are good to go if i scroll up and down everything is looking good now in order to get it started we're going to clean up this whole darn thing and we're just going to kind of start from scratch so let's just do h2 i'll say yo and hopefully that shows up that yo shows up right there this is a great place to start let's continue from here all right the next thing we need to do is set up our database with sanity so the first thing you need to do is type in this command paste and uh hit enter you need to install sanity all right if this is giving you problems go all the way to the front type in sudo and then do this so this should install sanity cli in your computer i'm not gonna do this because i've already installed sanity so i don't need to reinstall it once that's done what you need to do is let's create a folder at our root level so hit that folder icon right there and we're going to call it studio make sure it's at the root level so it should be the same level as pages now i'm going to cd into my studio all right now that i'm in my studio i'm going to do sanity init and do not hit enter yet make sure to do coupon clever programmer if you want your app to work this is really important you do that and we have negotiated a deal with sanity so they're going to give you guys the best stuff meaning that you get 200 000 api requests for free you get a whole bunch of stuff for free all of this is completely free you just get it as a benefit if you're a clever programmer student on youtube so type that in and hit enter also we'll put the link below to sign up on using sanity's link so then you can get the free plan as well and you can host your database and unlimited free projects there freaking cool right now with that said once you have your line entered hit enter to install sanity now in terms of the project name this project is just open c blockchain clone all right hit enter and then just let it do its magic so just keep hitting enter it will do everything by default you don't need to set anything you know any anything more custom than that okay project output path that is uh perfect so we'll do hit enter and we will do clean project with no predefined schemas don't start it with a predefined schema we're going to start completely scratch all right now it's installing a bunch of stuff inside of your studio so you should see all of this stuff jumping into your studio so make sure you have that set up okay so we're gonna wait all right cool it's getting done linking the dependencies and then it's gonna give you the schema schemas is the important part so we're just going to go ahead and set up our schema in there properly and one thing we want to do is go in our git ignore and change this from a backslash node modules to just regular node modules hit save and it will ignore both node modules here and inside of the studio now let's go inside of our schemas and in my schema i'm going to go right here and i'm going to paste this so what i've done is i've just pasted this big schema i don't need that there and i don't need this closing right there hit save so it might be like hey what did i just add so i've added my entire schema which essentially is i have my users each users will have a username all right and this is what the schema looks like so if i go under going content i have users and market items so you can see on the left hand side i have users and then inside of my users i have user name so this over here is my username and now if i go right there you can see the title username right maps to username right there the wallet address maps to this one and because i said string it's a string the profile image maps to this one and because i said it's an image it takes in an image and then we have banner image and our twitter handle so on and so forth and then we have one for market items so what we're going to try to do is we're going to make it where you can just get access to our schema file we'll try to link it below and then you can essentially just copy paste that schema that i've added right here it's just an array of objects and i'll scroll down so you can also pause the video and manually add it if you need it to now that we're done with sanity what we need to do is make sure that we set up our meta mask so for metamask make sure you go and install metamask from chrome so go ahead download it install it that's step number one for you all right once you've set up your metamask account make sure that you have an account like the one i have here btscp admin the next thing we're gonna need to do is add in our network so make sure you're not gonna have all the networks that i have available here so what you need to do is go ahead to your settings go to advanced all right and then what you want to do is you want to click this that says show test networks so make sure that your show test networks is on and then once it's on go ahead and choose rankib test network that's the network you're gonna need to be on and that's the that's the ethereum blockchain all right now that our meta mask is completely set up let's go ahead and set up our third web that's what's going to allow us to actually connect and communicate to the blockchain so let's go i'm going to open a new tab and we're going to go to thirdweb.com and what i will say is actually use the link right here that will have in the description below because that link will give you their most you know the free access and it'll give you uh the best access because we have a good deal with third web as well so make sure you use that link and it let them know that you're coming from the clever programmer community this is the page you should come to if you click that link let's hit let's get started let's go ahead and connect our wallet so i'm gonna click meta mask and i will connect this wallet right here now once i'm in here most of you are gonna get this error at the bottom which is gonna say insufficient funds if you get an error that says insufficient funds you need to go to a faucet and get some free ethereum if you want to see how to get free ethereum oh before we keep continuing this video go ahead and smash that like button break that like button turn it blue and subscribe to the goddamn channel and let's keep going this is the link that we want to go to right here so i'm going to zoom in so you can see that it's faucets dot chain dot link slash rinkaby that's the one we want to go to so let's hit enter and i'm right here ethereum rinkaby now you need to give it your address i'm going to give it my account address right here copy paste and i only need to set myself 0.1 test eth let's say i'm not a robot so if it works well i should go from 0.68 to 0.73 eth let's hit send request and now it's saying waiting for confirmation so we're going to wait a couple of seconds usually takes five to ten seconds sometimes it might take longer it just really depends when you're using the chain because if you're using it at a time when it's kind of packed and booked and a lot of people are using it it's going to take longer it's kind of like the freaking la traffic the 405 it gets pretty congested all right so request is now completed the token has been transferred let's close let's check my meta mask and let's see and boom 0.73 eth we need that to do a bunch of things so now we're here okay great let's create a new project so hit that blue button right there for me create a new project we're going to create it on the test net not the main net and let's do rinkaby here onrain could be here we will say open c blockchain and let's just hit create that's pretty good it is saying you'll be prompted for one transaction so let's hit confirm this will cost us some gas fee so let's go ahead and pay that gas fee and then we're ready to get to the next uh stage all right now i'm in this project so what's super cool is if you have nfts and people start buying them and you make royalties all your royalties will be right here and then you just click this one button and these royalties come out and you can collect them third web makes all of this so freaking easy all right let's go ahead add module now the module i want here is the marketplace one we want to create our own marketplace because that's where we'll be able to list stuff so let's create it we'll say openc marketplace and uh let's put a three percent marketplace fee anytime somebody does any transactions we will get paid three percent for it let's go ahead and hit confirm to cover the gas fee and create this marketplace this will take a couple of seconds once our marketplace is up and running then we're good to go and then we're going to go on and start working on our nfts and so forth it should also bring up the second transaction for you so go ahead and confirm that as well and then just wait for this to finish all right now i see here that my marketplace is done being built i see these green check marks i'm the only one who i want right now if you want your friends or anybody else to have admin level access to this marketplace or you're gonna build a project and you need team members to get access simply just keep putting in their wallet addresses right here and if you keep doing that you can keep giving them access which is super cool and then when they connect to their wallet right here on third web boom they'll have access to the same projects you do so if you're working in teams or whatever do it this way and what i'd recommend if you're a part of the clever programmer community or you're at one of our meetups in new york city or la that we have you know all all of you should get under one like team account and then work on this project together like you guys can make little groups anyways let's keep going all right so this is my open sea marketplace currently you see it has no items listed because we haven't listed any and then it gives you certain things right now we don't need to worry about any of these let's go back to the dashboard so we're done building our project and we have a marketplace in it so openc blockchain right now i have one module in here which is a marketplace another module i need to create in here is an nft collection right there so let's go ahead and create that i'll hit setup module and we'll call it board ape yacht club you could call yours whatever you want and for symbol i'll just say bake and we'll say like anytime purchases happen we'll make five percent royalty let's let's hit this and then we'll wait for the transactions to pop up and hit confirm and then it'll have another one pop up if don't pop up then keep an eye on your meta mask and see if it shows like a one blue notification if it does it means it's a popup is there but it's hiding so you could click it and you can force it to like reveal itself oh yeah so if you look right a popup actually came for me and that's what's hiding it that's why it's not coming up so i click that one and then i can hit confirm right here and now the transaction will go through now just go ahead and get access to photos so for me these are the nfts that i've gotten access to you guys can go and literally download anything you want you can have it be a different project but yeah we'll also give you this folder like in the links in the description and you can download these assets if you want and then use these exact photos so let's go ahead and mint some i'm not going to sit here and mint all 17 because that's going to take forever i'll just mint like one or two for now so let's come down here and let's hit confirm so my nft collection is pretty much done now inside of my nft collection i need to like mint my nft so let's go ahead and hit upload all right and i'll go to my downloads i'll go to my bake which is board api club and we'll start uploading some of them so we'll start off with our first one right here and i'll give this some number two three one two and that's pretty good all right let's go ahead and mint our nft so now it's going to take a couple of seconds for it to mint and once it's done it'll show up so let's pay the gas fee for minting it and some other fees and once that's done this will mint sometimes it will take a really long time to mint so please do me a favor don't try to remint or whatever just wait because then you're gonna otherwise you're gonna get duplicates all right so we minted that one let's go ahead and mint one more shoop shoop name it three four one two mint all right copy the fee confirm all right and we're done with um our second nft here as well so for now this is all i'm gonna mint you guys can mint all 10 or 15 of them i'm just not going to do that right this second it's going to take too long we'll mint another one all right now let's go to our nft collection so i'm going to go to board api club nft collection what we need to do is list these guys we need to list them on the marketplace that we created so let's go hit list let's select the openc marketplace that we created we're going to do direct listing and we will do ethereum for the currency and the price of this will be let's say 0.0.1 eth for this and we'll hit list now have these pop up and confirm let's confirm this as well and we're just going to list out all of these so go ahead and list all three of these just manually run through it hit list do it and then do it one more time just so we have like or we don't need to list all of them you could just list like one or two that's fine like let's just list one more so we can also see the difference between listed and then unlisted ones also list us for 0.1 eth boom let's hit confirm all right so for now we're pretty much done with our third web setup we're pretty much done with our sanity setup one thing i just want to do to make sure everything is good is make sure you're inside of your studio folder and just do sanity start let's just double check that our app is running the schema is looking like how we want it to look like all right and then go from there so just wait for this to compile let's give it a little bit once it's all ready to go then we'll be good to rock and roll so it's saying that it's on localhost 333 let's go check it out sign in with whichever provider you want i'm usually signed in with github so i just keep it consistent with github you could do google that's totally fine and notice that it has the users just like how we created and right now it has no users so we can create a user right now if we want and i can say clever quasi on this and i can give it a wallet address i can i'll leave that empty for now and i can also upload a profile image a banner image a twitter handle right and then a cl instagram handle so let's just do this let's hit publish so this is just from what we've made and then these are the market items so let's go back now all right so you are now done with the setup congratulations amazing job for sticking through that and now we're ready for the fun stuff we're ready to code so if you're excited i'm excited smash that like button let's start getting back in and let's start coding all right the first thing we're going to work on is the nav bar so let's get our nav bar up and running and our nav bar should be looking like this so when i full screen this right here you can see how this nav bar looks that's how our navbar needs to look so let's let's go ahead and build that thing out now i'm going to create a new folder we're going to call it components and inside of my components i'll have a new file it'll be called header.js and in here let's rafce save and then in here for now let's just say navbar or yeah header and let's just make sure that this component is showing up inside of our pages in index i will remove all of this and we'll say header we're going to say import i'm going to say header from component slash header and there we go we have our header showing up that's perfect now let's actually go and we're going to start styling our headers i'm going to go to my header and again from on the styling end guys i'm going to move through the styling part real quick because i want to get to the interesting parts of the build i'll full screen this as well so you can at any point pause it and kind of copy this but and i'll walk through the styling slowly as well once the whole thing shows up i'll kind of like walk through it a little bit so this is this is all our styling this is it and all these one liners are coming from tailwind css and and then this little hack here which is super nice this is awesome when you do brackets you might be wondering like why are we doing brackets until when this is if you want to give tailwind an exact color because one of the things that was like always super annoying to me about tailwind is like what if what if i want this exact color that i know i want or this exact size that i know i want so this is what you can do anytime you use brackets you can give it the exact things that you're looking for so then tailwind can extend to essentially really anything you want all right so let's go ahead here i'm going to make a div and this will have a class name let's give it style wrapper and then inside of our wrapper we're going to have a link tag because when i put my logos i'm going to wrap them in a link because it's going to be a url so what do i mean by that if i go to my app right here if i go to the collections page watch this if i hit the logo here it brings me back to the home page right so that's what we want in our app so we're going to put that in the link and i'm going to create a div this will have a class name of style logo container and inside of here i'm going to have my image tag so this is going to be coming from the next image so make sure to import image from next and we're going to give it our openc logo all of these files will also give you guys so you guys can get them but this is the openc logo you can also just go to the openc website and and get it but yeah so i'll make a new folder here it's going to be called assets and then inside of here i'm going to put my openc logo so right there that's it just a openc png file you can download it from the internet if you want and then put it right there cool so let's go back and i'm gonna say import openc logo from and we'll say assets open c logo png so there we go and then for heights we're going to give it a height of 40 and a width of 40. and we'll close it it's going to be a selfclosing tag now it's saying module can't resolve because it's not openc logo it's actually openc.png so let's try that again oh and it says link is not defined so let's also get link from next so i'm going to paste that right there so we got link from next let's refresh this and we need to give this href so for now let's just get give it a href of home perfect there we go so whenever you click it it'll bring you to home if i had given it a href of profile when you click it it would take you to slash profile slash profile would say the page could not be found because we do not have a profile page so let's just change this to slash perfect now inside of this image another thing that i will need to add is we're going to have a div and this one will actually this will be style logo text like this okay and we will say open c boom i actually really like this way of styling where you just add like a it's almost like react nativiy and you just write all your tailwind right there super cool instead of putting in another file and it's also better in my opinion than using stat styled components because what i don't like about style components is you can't tell when you're looking at your jsx you can't tell what's regular css and divs versus what's like an actual component that you're using so in this you can clearly tell because your styling just goes inside a class name so it looks super nice and looks similar to how you would style with next great so all of that is looking good we have our text open c showing up now right underneath this link we're going to create another div and this will have a class name of search bar and then inside of my search bar what i want to do is create my search icon put them right there and inside of here i want to do a outline search so this is going to be my search icon now you're going to be like hey where is this coming from it's coming from react icons so all we need to do is install that so i'm going to do yarn add react icons and hit enter this will install the react icons library okay and then all we need to do is just import these three icons that we're gonna need so i'm going to paste that right there our ai outline our cg profile and our md outline account balance wallet all of these are coming from react icons cool so let's hit refresh and let's see what happens portrays requested let's see let's kill our app and let's start it again let's see if that helps we're getting the same error oh i see my error i installed it in my studios so i need to get out of my studio and i need to install it here in the root directory so we're going to yarn add react icons because the studio doesn't need it our app needs it so now it's uh should be good to go in just a second boom there we go so now if you look we got our search bar right here our search icon is showing up because this icon is actually coming from right there all right so that's great perfect now let's go right underneath this div and what i want to do is actually make an input all right this will be text we don't need to give it a type right here we'll just give it a class name so let's go ahead and let's go give it a class name and we're gonna say style search input all right and then for placeholder i will say search items collections and we will say and accounts just like that search items collections and now when i hover over it notice that that effect is right there and if i had to explain this from tailwind if you look at the search input well it's telling us exactly what height we want it to have right 2.6 if i reduce this height to 1 you can see that my thing just became a little bit smaller so we're going to give it our 2.6 height a width full if i take that away you'll see the width becomes slightly smaller so if i add that the width becomes full of that search input and then if i take away this background transparent watch what happens here right the whole thing becomes white and weird looking so all of the styling is right there that we need for this cool so we have our search and now all we need to do is essentially link to our collections as well and we should be good with the navbar shortly let's create another div right underneath this search input so we're going to do div and then i'm going to do class name and we'll do style dot header items and inside of these items let's do this i will do style.header item let's do class name and then inside of here i'm going to say collections let's copy this paste it a couple of times because we're going to need multiple things that we want here so we're going to have the second one be stats and the third one is going to be resources and this one is going to be create perfect now let's look boom collection stats resources create and then we just need some icons so we're going to add those as well so let's go here i'm going to say div all right and then this one is going to be class name equals i'll say style that header icon and we'll put our cg profile okay and right underneath this we'll have another div we'll do class name for this one i'm going to do header icon as well and then we're going to put another icon and this one is going to be our account balance so there we go we got our account balance we got our little person there we got everything else perfect now all we need to do is just make this collection link to a certain page so i'm going to go to my collections and wrap it in a link tag capital let's take this put this down here and for my link i'm going to say href collections and we're gonna give it our collection contract address so this is our collection let's just copy this and we're gonna do that right there so this is gonna be necessary later right now when you go to it the app is gonna crash of course because we don't have that page built yet but once we do then the app is gonna be good to go so let's go back let's refresh boom if we are to build that page out right now if we go ahead and build a new folder and we call this folder let's say collections so let's create a new folder inside of pages inside of pages we'll call it collections and then inside of collections we're going to have a new file all right and this file this is how i want you to name it put brackets and we're going to do collection id dot js okay let's do rfce so you want to name it like that even though it looks like a weird name that's how you want to name it and here this is we're just going to call this collection okay and then you're going to just do default export export default collection just like that and then whatever you pass it we're going to extract it from our router so let's go ahead and put our router here this use router hook you're going to need to this is you kind of get access to it with the react and next or next actually so we need to just import that from the top so let's go ahead and import that from the top and this router has access to multiple things for example it has access to our query so if i do router.query right you can even do router.query.probably like collection id id like this and let's just take a look at what happens i'll go inspect here we'll go in console mode all right and let's hit collections and watch our app did not crash and we just got collection id object which is this query right here and the actual collection id right there so that's how you move around with react with next and notice how the page is already made right so for example to prove to you the page is already made you just wrap this in h2 and i can actually show you our i can do router.query.collection id and boom right there look at that it's pulling it right and so freaking nice and easy and if you want you could wrap it in a link let's go ahead and wrap this h2 in a link tag so i'll go link we'll import it and we'll wrap it in a link and i'll just say href i've taken me back to the home page just for now so when you click this it just takes you back to the home page so collections go here click that and yeah so that's just to kind of just show you that we can go back and forth between these this is not how the actual functionality of what what's going to be on this page but this is just to kind of get you started and show you the power of next if you think if you like next and you think this was pretty freaking cool because i think that was pretty freaking cool it was so easy to route between the pages way easier than react router do me a favor and smash that like button alright let's get this video out to as many people as possible so we can help make the world a web 3 world all right and help a lot of other developers on the planet and it doesn't cost you anything and it's free and it's easy so do it and it will be awesome and i'll love you forever so let's keep going all right so my nav bar is looking like it's pretty much done now we're gonna build out our home page or hero meaning when i go here this hero that you see right here so let's get to that right now all right now we're gonna build the hero which is uh this guy right over here right here let me zoom out a little bit that's our hero which is that whole thing this plus this all of it so let's go ahead and build build it out now in my components i'm going to create a new component all right and we'll just call it hero.js and another thing you could do is you could create a folder uh called home inside of components if you want to be like really cool about it nah that's fine let's just create a new component new file we'll call it hero dot js that's fine this is great let's do raf c e boom so first thing we're just gonna have it say hero and i just want to make sure it's showing up in my index.js so let's go to our index.js and we have our header showing up that's fantastic and we also want this to show up so we're gonna we are going to wrap our return in empty jsx fragments make sure we put a paren take out that's cool so we're going to have a header and then we're going to put a hero all right there we go header and hero so let's close this it's not importing it for whatever reasons let's import hero from and we're going to do the same thing and we're going to say hero great so hero is now showing up and working now we just need to go ahead and start styling and working on our hero so there we go got a bunch of styling for our hero a bunch of styling again we're going to link this repo for you guys as well down below so you can always just go to this git repo and get access to the styling and everything we have as well so if there's something you can't see or can't read just go ahead and do that and you should be good to go i added my styles and now we're gonna go ahead and start working on this so let's go all right our first div i'm going to give it a class name and we're going to say style wrapper all right inside of here i'm going to have another div we'll give it a class name of style container inside of my container i'm going to have content wrapper so basically it's going to be little nested so we're going to have a couple of these so here i got my content wrapper inside of my content wrapper i'm gonna have my copy container let's close that div out as well and then inside of my copy container i'm gonna have my title so let's go ahead put our title right there and we should start to see it now all right there we go discovered collect and sell extra extraordinary nfts great well we need to build a lot more things now right underneath this title i'm gonna create another div and this one will have a class name of style.description all right and then inside of my description i want to say open c is the world and we'll do this first and largest market place or largest nft marketplace and i meant to put an ampersand here like that so that will put that apostrophe right there you don't want to use a regular apostrophe or whoops let me hide myself here so you can see what the heck i'm talking about this guy right here puts that apostrophe all right so now basically after we have that i want to basically now add my cta container and inside of my cta container all i want to do is i want to add my button so this is my first bun this is explore button after the explore button i want to add my create button okay so there we go and i should be able to like hover over these like this and have that styling so if i actually make myself go away here you can see i can hover over and it like lights up right and then basically what i want to do is i want to create another div and this should be for my card container okay so i'm going to give it the rounded styling and i want to give it this url right there okay this url is really easy to get if you were on openc you can also just get their latest photo because that's essentially what i did right click copy image address paste it and that's the url that i'm using it's just when i was building the openc clone at the time they had a different photo so you could just update it with this photo okay that should be completely fine okay let's keep on rocking and rolling here let's also build an info container which is going to be like right at the bottom as you can see right there okay i added my profile photo there so i added my profile photo url then i made it rounded so it made it nice okay and then after that let's just go ahead and basically create an author and we'll also give him a name so i'll just say the author name here's jolly and then we'll link to ola canola because that's the artist that mine linked to and this link over here the openc1 that you see is simply the link to the actual asset meaning that when i go to openc and i hit i am sati or whatever it links me to the actual asset so i just copy that link paste it there okay that's all that link is so you can do it that way so cool there you go so up until now you should be good all right so one thing we're gonna do in order to fix this and make this look right so you see how there's a dark background color here and here we have very light so here's what we need to do let's make the opacity 30 here okay and now this is bright so we're gonna add a background color that's gonna make this dark so let's add html let's add body and inside of our body we're gonna add a background color that's dark like that so that should fix it then let's add padding of zero margin of zero because we don't want anything to have these random margins or padding let's make sure that our link tag inherits the colors and has no text decoration and then let's just do box size saying border box and then that should be good and boom our page is looking fresh might i add and if you like it make sure to smash that like button so let me show you the hack that i'm actually doing here when i do this watch what happens to the container in the background boom it vanishes okay when i do this boom it comes right back there's a great video by coder coder that talks about how to use before to implement that so go ahead and watch that i don't know if it's somewhere here or a link in the description below or just type in coder coder and look at before she killed it with that video and uh use that for reference okay that'll help you with this but essentially what i'm doing is i'm continuing a container here okay which is this guy right there and i'm saying hey before any of the other content add yourself so like add whatever i give it so here if i give it a absolute position absolute and i give it an image it makes sure that it shows that image but that div isn't really attached to anything else and isn't like affecting anything else so it's like a div that's kind of behind this one okay then we're adding this over it okay if you don't do it like that you're going to run into weird errors where the opacity of that div is going to bleed onto its children meaning that that same opacity is going to be on there so they're going to be dark and blurry and weird stuff okay so that's the hack that we're doing there now for the copy container that's to contain this copy so when i give this a 50 or width of one two one slash two it basically breaks these up into two different things so for example if i remove this watch what happens right each of them ends up taking the full thing so you can just keep commenting these out and seeing what these do that's a good way to play with it and see what's doing what okay so this will help you pick up tailwind as well okay so do that now with that said look at how beautiful the homepage is looking this is our hero and our header right even when i scroll down it's there if you like this you know i'm pumped for you and we're gonna now move on to our collections page we are almost done with this page okay but before we move on to our collection page the only thing we need to do now is just add in our metamask authentication so let's get to work on that now all right so let's work on our meta mask authentication first thing first if this is tsx is freaking you out you can just turn it to js you should be fine now and if it complains about any of this stuff like hey app props is not a thing fine just remove it boom get rid of it cool so we'll import our styles here and the other thing i want to do is i want to actually do a third web provider or third web 3 provider oh sorry this is like weird third web web 3 provider provider and we're going to say from and now we're going to do third web hooks so let's install this as well so we're gonna do yarn add and we're gonna do third third web hooks like that so let me just zoom into that so you can read that really easily and let's hit enter beautiful so let's install that and that's that should take care of that now what we need to do is build our chain okay which chain are we going to be using so the supported chain this is the four means this is the rinky b chain we want to use and this we're just gonna leave blank because we're going to be injecting our meta mask into this so this is good i'll give you these notes here so the chain id 4 represents the drinky network and the injected connector is a web 3 connection method used by metamask all right great so now it's having some trouble web3 provider can't resolve third web third web hooks all right let's start the app again and let's see if that works perfect that looks like that works great just restart and start it again the ultimate ultimate solution to life huh now what we need to do is wrap this app in our third web provider so let's wrap this let's end it with third web provider right there all right let's wrap the whole thing in return statement and we will remove this return right there so third web components wrapped in here so this is our entire thing and the entire thing is wrapped in this third web 3 provider cool that is a very important step make sure you get that one right now let's go to our index.js so this is where we're going to make some of the other magic happen okay so let's get our styling in place because i just want to fly through styling pretty quickly here it is if you want to like copy it or pause it or whatever so we're going to leave that there and now inside of this home function what i want to do is i actually want to use my web3 hook now it's going to be like hey what is this web3 hook it's not defined you just get it from the third web hooks all right so just like that i'm gonna get it from the third web hooks and we're gonna use it and it gives you access to the connect wallet and it gives you access to the address this is the wallet address cool and perfect now what we're gonna do is we're going to uh grab the user all right now let's add some condition or some a wrapper around this so it looks a little bit better and now what we're going to do is we're going to do some conditional rendering here based on if the user is logged in or not so here i'm going to ask if the address exists and if it does show the header and the hero and if it doesn't show a button so the user is not logged in right show the button so in this case yeah the user is not logged in so there we go we have a button showing up if the user was logged in and it shouldn't show that and right underneath that let's go ahead and a thing that you need chrome to be able to run this app so that's one thing i just put down here and then i wrap this entire thing in this div that is a wallet connect wrapper okay right there now just be careful with how you write this so make sure you have this div at the top this conditional rendering goes here so it either does this either does this or this that's what the conditional rendering is doing it starts here and ends right there so now let's see if i connect and if it works let's try it hit next connect and boom i'm in and i can see everything and if i go here and i go right there and i disconnect let's see wow guys isn't that cool i feel like metamask authentication is even way easier than google signin right and any other type of auth like this is honestly the best authentication experience i've ever ever went through like that this is this is ridiculously awesome so if you love it smash that like button below do it right now show some love drop it in the comments let's keep on going all right now what i want to do is when the user logs in i want to add them to my sanity database so let's go ahead and do that i'm going to create a use effect hook and it's going to be looking for the address this address will only occur as soon as the user logs in this use effect is actually going to work if they're not logged in it won't work all right so i'm basically going to say if there's no address just return out of it if there is then i want you to do the following so i'm going to write a iife which is a immediately invoked expression i love these i just found out about them and they're awesome so you just create a function you call it right away i'll show you how it works it's pretty simple so i'm going to create an async function it's an anonymous async function and all i'm doing here is i'm creating a user doc and then what i do is i tell sanity go ahead and create the user if the yet user does not exist that's literally it and then i call this function right away so normally just to give you an idea of how what the heck is actually happening here let's say you just create some function right well usually how it works is i don't know it's like let's just say it's it returns 2 whatever some function returns 2. when you want to call this function you will say sum function some function and you will do this well i could actually make this function something that can be immediately invoked by doing the following wrap it in parentheses and just call it right away so super freaking weird but like i'm creating the function and then i'm calling it right away this is a immediately invoked um function if i if i do alert alert let's just say hello it should alert me in a second let's uh get our use effect hook actually up at the top so i'm going to go here and i'm going to say import use effect from react just like this and now we got our use effect this is erroring out because we need to put a semicolon there all right so there we go i changed that alert to console.log and you can see this is an anonymous function i created called console.log hello all it does is logs hello and then it immediately runs and right there you see hello so this is called iife okay immediately invoked invoked functional expressions and i know it's a mouthful but you'll start seeing them everywhere in so many code bases and they're really pure and beautiful and their scope is really small they're run and then they're deleted and then javascript doesn't remember about them so they don't pollute your global space they're really bug free and they're a really nice way to do things if you just need a function just do something run and finish this is a nice way to do it cool so we're just and just put a semicolon right here because if you don't it'll like move this up into this so starting it with a semicolon is kind of important but other than that it's just a normal function and we're creating a user we're giving the wallet address and then we just create that user if that user does not exist in the sanity database so now when i hit connect wallet what should actually happen it should create a user so in order to be able to see it what i want to do is i need to cd into my studio and i'm going to do sanity start here so let me zoom in here so you can see that and let's do sanity start all right make sure to do that that will whip up your sanity database and once it whips that up we will be good to go so let's go where do we have it we'll do localhost 3333 just like that and let's bring that here so right now you can see i have no users i just have that one user clever quasi and that user i just manually created that user so that user really shouldn't even exist let's see if we can delete that user and yes we can so i'm just going to delete that user because we don't really need that user all right now let's go to our app and let's go ahead and hit connect wallet let's see if it works and we will do next connect now we got an error client is not defined it's a great error that means this line ran and we got an error so what is happening here well we're going to need our client so perfect this is a perfect time to build our client so let's go ahead create a new folder it'll be called lib and inside of lib we will have something called a sanity actually what's the best way to name this we will call it a sanity client so let's go sanityclient.js all right and in my sanityclient.js we are going to import this at the top so this module we're going to need to install so let's go ahead and install that right now all right so we're gonna go and do yarn add at sign sanity slash client just like that go ahead and install that perfect while it's installing let's go ahead and build out our client so i'm going to say export const client is equal to sanity client all right and then we're going to put our project id here so project id will be i will go here into my sanity projects and here we have openc blockchain clone this is the one working on this is the project id i need so copy that right there boom that's the one grab that bad boy and let's go ahead and put it right there data set is going to be production that's great then we're going to need the api version and let's just say 25 make sure you put that exactly like that use cdn we're going to say false and then we're going to need a token so in order to create the token go to api we're going to need to do a couple of things here cores origin let's go ahead and make sure we have http 3000 because that's where we're running our app so let's go ahead and save that so course origin is going to be important even when you deploy the app you're going to need to put our course origin right there and this is fine you don't need to do credentials so then hit add api token and we're just gonna give this editor access so this will give a read and write access and we'll call this openc token whatever it doesn't matter just hit save perfect so we got this token copy and we're going to go back i'm going to sit i'm going to say token and we will paste that right there so we got our token perfect now this client that i've made and i've exported i can actually use this client all right so let's go back into our app and i can say the following i can actually import this client now we have access to this client and there it is so let's give this same thing a try again one more time so i'm going to log out for now connected sites let's hit delete on the local host one disconnect and let's hit connect wallet next connect nothing broke let's go to our sanity app and let's go here and let's see if a user was created so we do not have a user created as of yet all right so we got an error if you actually look at the console we get this error that actually says something about credentials in the header so let's actually give something a try all right what we're gonna do is let's go back to our third web here and where i have said not allowed credentials let's change that so i'll just delete this for now we'll hit add corresion add add cores and i'm going to say localhost 3000 and then i'm going to say allow credentials should this origin be allowed to send authenticated requests with the user's token or session yes they should let's say yes allowed now let's uh try that one more time so i'm gonna i'm gonna log out so same thing hit the three dots connected sites and let's hit local delete local host your disconnect let's connect again next next connect i didn't get any errors at the bottom now let's go look at our database boom let's go the user is added how freaking nice is that guys and watch this i'll i'll rename this user to be clever quasi and now when i create another like when i sign in again it won't actually overwrite this user that's what's freaking cool about sanity i mean even firebase doesn't have this functionality so it's so freaking dope i love this right so watch this if i go here boom and let's log out again sign out connected details disconnect wait what the heck happened why not log out connected sites oh i'm looking at the deployed one perfect now i'm going to try to connect again and watch what happens with hit next connect and um look no new user was created because the id is the wallet address as long as the wallet address is the same it won't create a new user that's how it's detecting if that user exists or not because detecting if that wallet exists or not and that's coming from this line this nice little line right here create if not exists and it uses this id okay so that's what's happening there now if i signed in with a different wallet so let's give that a try so i will connect and i will disconnect here and i will connect with some different wallet that i have whatever this one is fine let's go right here hit look let's try that one again let's hit connect and let's see it chose that one hit connect okay let's go here and boom unnamed brand new one because different wallet address guys oh my lord sanity is beautiful turn that thing blue for sanity let's keep going okay great work sandy y'all are beautiful okay awesome so let's go back this is the easiest database thing that you've ever done in your life your well now all i'm going to do is uh once the user successfully logs in we're just going to add a little toast a notif uh like a notification at the bottom or at the top that just says like hey welcome back so let's go ahead and do that now so i like this library it's called react hot toast so i'm gonna import that right here and this is the library name react hot toast so whatever is there that's the thing you want to install right there so let's go ahead and do that so i'll do yarn add and just so you can see here whoops yarn add react hot toast just like this so install that that's a super nice library that adds these awesome notifications on the flyer react hot toast so you can look at it here as well oops that's it and if you hit make me a toast right it shows you here's your toast and you could you could put it top left you could put it at the top center right position top center top right and then it gives you the code right here super easy to follow so that's the code all right and then if you want it in tailwind you can grab it in tailwind as well and style it and close all of that so this is super awesome i would say add it for any time you have a promise that you need to resolve it's really nice to give a notification like hey purchase was successful or hey the user you know welcome back you know you've logged in successfully whatever so it was having a trouble resolving the module all we need to do is just like kill our server with control c and just hit yarn dev again and we should be good to go and be up and running so let's hit refresh here and see what happens okay cool i'm in everything is working so let's go and work on our toast now let's make our toast function here so it's going to be called welcome user it'll take in a username and a toast handler by default it'll be toast that one right there let's go toasthandler.success and on success we'll say welcome back to the user and we'll say their name and we'll style it where it's like a green check mark that they get and that's essentially it okay so there we go this is our function for welcome user now all we need to do is actually use that function once the user successfully signs in so we can go ahead and use that boom we'll welcome the user and we'll say result.username great because result gives you the object back whichever one was created all right so let's give it a try now let's see what happens when i log out and i log back in and let's look for a toast oh we actually need to render this toast out so we've made it but we need to actually render it now on the screen so let's go ahead and do that right underneath wrapper and we're going to say toaster position equals and we'll go and choose top center and we'll say reverse order we'll say false and end this so that's where the toaster should show up perfect you see that it says welcome back right there let's refresh boom welcome back look at how nice that is now we're done with our home page because why we have the nav bar we have the hero we have all these amazing sections and it looks beautiful we have the blurred background we have authentication even now we need to make collections work so let's get to it all right now let's work on our collections page so i'm going to go into my collections i'm going to go into collection id dot js and i'm gonna basically add all my style here so let's full screen it you can pause it you copy it whatever you want all right so this is all of my style that i'm going to need for this page okay cool we got that now i need to get a couple of other things so we're gonna add our provider here because we need access to that i'm going to get my collection id from the router i'm going to destructure my collection id actually i will set my state for collection because i'm going to need access to the collection and i'm going to need access to all of the nfts and i'm going to need access to all of the listings now we're going to import use date at the top so we're going to go right here and we're going to say use effect and use state because i'm also going to need use effect let's import our web 3 hooks so that error will start going away also there are two use effects here so we'll get rid of this use effect here and we'll just have one at the top now before we continue one another thing we need to do is actually set up a infuria link actually let's sign up for alchemy api so go to alchemy and alchemy api web3 development made easy and you can simply get started for free and sign up i already have an account so i'm just gonna essentially log in it's gonna just bring me to the dashboard for you it's going to ask you to create an account go through that process make an account here and we'll use the api that we get from here so at the top here you see it says create app so you can hit create app here if you want we can see we can say open c blockchain build or clone whatever you want to call it uh youtube tutorial for my description you guys can call it whatever you want and environment uh whatever staging it's fine and then chain is going to be ethereum and we're going to be on the rinkeby network so let's create app all right so i see my open c blockchain i'm gonna go into that perfect and uh here's my key so i'm just simply gonna copy this key and i'll write this key down here in comments i'm gonna need access to this shortly all right so i'm going to create a little function called nft module and this will help me get access to the nft module we're going to use memo here which is kind of like a use effect but it also has some caching built into it too so it's a good hook to use the dependency of this is going to be the provider and if the provider doesn't exist then just return otherwise we're going to create a third web sdk we're going to get our signer and we're going to use our api key and then we're just going to return the nft module and we're going to give it the collection id cool now i'm going to cop this guy right here and we're going to pop that in we're going to pop this link in right here perfect all right let's create another function that gets all the nfts inside of a collection we'll create a use effect hook the dependency is going to be nft module so whenever the nft module is loaded this right here this use effect will run and if the nft module doesn't exist stop it we're going to run an iife immediately invoked functional expression so this function just creates itself and then calls itself right away we're going to get the nfts from the nft module and then we will set the nfts just like so this will update our nft's variable right here all right so now what i'm going to do is we're going to get access to our marketplace module and i'm going to again use memo here the dependency is going to be the provider if the providers is this stop we're going to create our third web sdk we're going to get our signer we'll pass in the api key and we will get our marketplace module all right so that's how we will get our marketplace module now if you're wondering where i got the marketplace module from in third web you're going to go to your project so you can go at the project level whatever let's hit here open c blockchain and here's my openc marketplace right there so you just click that and you can copy that address all right so that's the marketplace we need access to all right so let's get all the listings inside a collection we'll use a use effect hook it look for marketplace module if it doesn't exist return let's call a function and run it immediately and we will set all the listings to the listings that we actually get from the marketplace module so as soon as we get them we set them all right now one thing we want to do guys is let's go inside of our sanity database so let's go to market items and what we want to do market items is basically just our nft collection so there's just another another way just saying is what are the you know it's a collection on the market let's hit that button right there and we will add in our nft collection of board ape yachts club for the contract address let's put the same contract address that so for description i'm just going to put the board api club is the blah blah blah for contract address what i'm doing is in third web just go to board api club or whichever one you have copy your nft collection address and you could put that right there so this is the nft collection address created by who was this created by so in this case i'll just choose clever quasi and you can see how nice it is right insanity i have my drop down modules and it shows me volume traded let's say 342 thousand each so i'll just put 42 342 here and then on the back end we can add in the k or you could just do 342 000 like this zero 34200 floor price is going to be 93 ethereum and then i don't know let's just say clever quasi also is an owner and has one so this is like how many owners it has and who are the owners so we'll put all that information right here and then i'll put in a profile image for it and we will put in a banner image for it so you guys can just google these images or go to openc and lookup board api club and you'll be able to pull pull these images from there so let's just double check all right and let's hit publish hopefully those photos will update in time there we go our profile photo is updated here and then we'll soon have our banner image i'm sure updated there we go got it so now that we have that now we can actually go to our vision and make our queries so let's go to our vision let's paste this so i'm going to give it our contract address which again was this collection right there so let's go ahead and give that collection all right so let's go back to our desk here right and let's see so my query that i'm making here is basically saying hey if the market if the type is market items all right so get me market items type and then if the contract address is equal to this one and get me the following so in this case i'll just say get me the title so let's see what happens let's go title and let's hit fetch and you can see that it's getting me the board ape yacht club so whatever collection i pass it here it's going to give me that collections title and now what i'm going to do is i'm going to go ahead and ask it for multiple pieces of information so it'll look like this all right there we go there we go let's hit fetch and let's see what we get all right we got back everything so let's just look at this so it's saying hey if you matched board api club get me the image url so there is the image url i also say give me the banner image url so here is the here is the banner image url that we got the image url you can see is kind of at the bottom right there i'm asking to for it to give me the volume traded and it does volume traded i ask for it to give me created by right and it gives me created by and i say hey for creator get me their username so we'll go and look at creator and boom it gets me their username for all owners that shows me who all the owners are so it just returns to me like an array of objects so in this case we just have one owner right the list is has one item inside of it and then i also ask for the description so this is our query all right we can copy this query and this is a query that we're actually going to be using so make sure you copy it and bring it into your vs code because this is what we'll need to use i'm going to just comment it out for now all right so one thing we can do is we can wrap it in these tildes and i can just say const query is equal to that so that's my big query and i'll use it in just a second all right so let's get our let's get our collection data from sanity we're gonna pass it the query and then let's do a couple of things here so we're gonna get the collection data and await it all right we'll fix this part in just a second and then we're going to set the collection data so whatever we get we're going to set that let's copy this let's cut that query and let's paste that over this one they're the same but i think that this one is easier to read now the only thing i kind of want to just change is instead of this hardcoded address here what we'll do is replace this with that collection id and we can pass in our collection id cool so once you pass that collection id it knows what to do and i can also just give it a default collection id in this case it'll be like hey by default just get me that board ape yacht club from collection id or whatever the user passes just make that the default one just in case the user does not give you the second argument so this will run the query the query will return these results that we saw here that's what that query will return and then once that query returns that what we're doing is we're taking that and we're storing all that data inside of collection data okay so awaitsani.clientfetchquery we're passing this query in there and then once we get that data we're just storing that data right here inside of set collection now all we need to do is let's create a use effect hook it look for the collection id and then it'll collect it'll run and collect the data so whenever the collection id is updated in other words whenever you route to this page which is collections this query should run because it'll pull the query from the query parameter that's how you'll get the collection id and if that changes then this will run this says use memo is not defined so let's go ahead and import use memo client is not defined let's go ahead and import our client now third web sdk is not defined so let's go ahead and import that great and let's go ahead and install that so let's go right here and we're gonna do yarn add third web sdk so now it's going to install the sdk once that's done that we should be past that error and on to creating our app my installation is done so let's refresh our page and let's see if we're done with that error looks like we are the page should be good to go soon let's just refresh one more time and yes we're good to go okay perfect actually let's get rid of this line over here i'm gonna remove that collection id it's fine we're just gonna pass that collection id from our state and then let's go ahead and console.log our collection data and i'll put a fire emoji so i can identify it easily and here is my collection data i am getting array of one and it's giving me all this stuff that's inside of it all right so that was super easy to pull all of the data from sanity now all we need to do is just whip up the front end because we already have access to all of the collections we have access to the marketplace module and then ft module we're getting all the nfts and we're getting all the listings so now all we need to do is build out the front end so let's go ahead and work on that now let's just go ahead and import a couple of things we're going to need so for this page we're definitely going to need our header and we're going to need a bunch of icons so let's go ahead and get them now all right i'm going to need my cg website my ai outline instagram and my high dots vertical icons i'm going to remove everything inside of this link tag and make this return empty and let's just build one component we're going to need so i'm going to go inside of my components we'll create a new file i will do nftcard.js just like this we'll hit raf c e on this cool now in this component all i'm going to do for now is let's say it's going to take in an nft item and all it will do is it will return an image and it will do nft item dot image that's all an nft card is going to do for now and then we'll build it out in a second now let's come back to our what we're going to render here in our return and let's get to work on this oh and one last thing before we actually do that let's just go and make sure that we're importing our nft card so i'm just gonna say import nft card from and we're gonna go get it from our components and we're gonna get it from our nft card just like that now we are all set all right so let's start building this page now so i'm gonna make sure my overflow is hidden when i make this div so my scroll bars are not showing up let's add our header boom now my header is showing up so that's great news all right now in my banner image container i'm gonna put my banner image and basically what we're saying here is if banner image exists then show the banner image otherwise show a placeholder that's all now we're going to create an info container this is going to contain our info like how much volume was traded how many owners there are things like that so in the mid row we're going to add a profile image and that profile image is going to again do the same thing if it exists show it otherwise show a placeholder that's all now we're going to add an end road to this and that's also going to create social icons and uh we're going to stick our cg website in there so it'll be on this right hand side you'll start seeing it we'll put some dividers we'll put our instagram in there and we'll put our twitter in there and then we'll put our vertical dots cool all right now we're gonna make another mid row and this will this not another mid row but this will be the mid row and this will have our title board ape yacht club cool it'll be it'll show who it's created by okay so in this case it's created by clever quasi it's actually pulling the real creator's name that i've put into sanity which is super dope we'll then create another mid row and this will contain stats all right and then inside of my stats we're going to have our nft and how many nfts we have so in this case 18 i'll say 18 items collection stat so now we'll say how many owners there are so this is actually pulling all the owners and then the length of the owners if they exist it's getting the length of the owners otherwise nothing and then it's going to say owners right underneath that we will also get another stat value and this will be how much each we have so we're just using this svg you can pause the video and copy this svg that's showing the ethereum it'll say floor price underneath it and then we will have our stat value and we will have another image boom and then we have our volume traded and then we do 0.5 k now since we're already putting k here we can go to our sanity database and update it so let's go to sanity let's go to users okay or actually let's go to market items let's go to board api club and inside of board api club i'm simply going to change that to 342 and we will hit publish okay let's go back to our apps it should say 342 k eth so let's hit refresh on this and there we go 342.5 k eath so looking way better that's great and let's add in volume traded right underneath that then we'll add in the description so the board api club is a collection of 10 000 unique board ape yacht nfts we'll now flex wrap and then we'll start making all of our items our nft cards so we're mapping through them and then we're just making our nft cards and we're passing nft item title and all of our listings over to our nft card component which all it knows how to do is make an image so that's pretty good so far and if i scroll through that all of our board apis are showing up how freaking cool is that right we're pulling all of these from third web the marketplace we're pulling this from sanity and i mean it's so cool so much dynamic data and we're doing so much here combining web 2 with web 3 freaking awesome now all we got to do is style this these nft cards so they look a lot nicer let's go ahead and do that so i'll go to nft card all right so i'm going to paste all of this styling all right again i'll full screen it so you can pause and copy if you want to there it is and i'll just keep going again if i go through the styling and every single line of it guys the apps the video length is gonna triple quadruple quintuple and we'll never get to the fun blockchain or database parts so that's why i'm kind of like going through this fast because i think by this point how many apps we've built we should be really getting this and if you're not getting this go back to so many of the previous clones that we've done and start going through the styling part they'll explain it in way more detail if you go through our older builds these ones i kind of want to focus more on the newer stuff that we're learning all right so um at the top i want to i'm going to need a couple of things here so i'm going to need use effect and use state from react for this i'm going i'm going to need a buy heart icon and then i'm going to need a router because i'm gonna have to do some routing stuff let's also add a couple of more props so we're gonna get title and listings as well and let's set a few states at the top so we'll have a is listed state and we'll also keep track of our set price and price date now one thing that you need to understand is this we have on the left hand side we have all of our listings and on the right hand side we have all of our nfts now we might have some nfts that are not listed but you know so let's say like this two three four but maybe out of all of those nfts only two are listed three and four listed meaning you have them for sale on the marketplace meaning you went to the third web platform put them and listed them for sale now what we need to do is we need to find where the matches are in this case the matches are aka in what's it called uh sql you will do an inner join right so you have you have some data whatever and then you do inner join so we're trying to find that match that kind of looks like a butt crack but whatever like you're trying to do an inner join right here and here what we have are three and four so where that match is what we need to do is go to each of those so we need to go to three and set its listing to true so this is basically is listed as true here and then what we need to do is set a price for them so we need to set set is listed here my bad i meant to write set set is listed to true and we need to set the price for them and the price will be whatever the price is in the listing because remember there are a couple of different things about nfts and listings if you go to third webs documentation what you'll find out is in nfts you don't find out about pricing if you look at the nft module what you find out is well what's the trait of that what's the description of that what's the image of that nft on listing you find different things like what's the price of that nft so both of these modules have two different pieces of information so what we're gonna do is we're gonna for price we're gonna put our hands into the listing bucket for three right and then set that price for three then we're gonna repeat the same process for four and set that price for four so that's how at a high level it's working let's turn it into code so i'm going to create a use effect hook it's going to have two dependencies listings and an ft item that's when it's going to fire when it whenever it sees those update because those are the two things it needs we're gonna loop through all of our listings and if our listing matches our nft item then we're gonna set as listed to true we're gonna set the price by pulling it out of the listing and then we're going to break and that's it all right so now let's actually build out our component so i'm going to build a div and then we're going to give it a class name of wrapper and then basically we're going to say on click i want you to take me inside of that asset so we're going to build all of these pages but don't worry about this right now what this does is when you click it it should take you inside of the detail view we're going to build that out in a second then what i want to do is let's have an image container and inside of that image container we're going to put all of our images so now when i look look at that it's already starting to look a heck of a lot better and in details we're going to have our info and then we're going to have info left so what's on the left hand side right so we're going to put our title board ape yacht club whoops board api club right this is the title of which collection it is and then we're going to put the nft name so which numbers these are right eight seven five four five nine eight etc we will do conditional rendering if that item is listed we're going to show its info on the right and that info is going to contain the price and it's going to contain the price value and we're going to have a nice little image each image with the price so there we go this one is listed so the first one is listed the second one is listed but notice that the third one is not listed this is not listed this is not listed so only these are listed here okay perfect let's go ahead and do likes and likes will have a heart right there and it'll also say how many likes something has so for now that probably will just remain empty which is fine cool so this is the this is what's happening right now and look at this right all of a sudden our cards are looking beautiful this data is being pulled dynamically right from third web like if i go to third web and we go to our nft collection when you were not looking i added all of these in here so that's why that's where they're coming from if you were confused i'm sorry but yeah i added basically 17 inside of third web so that's where all of the nfts are coming from all right so now let's do this i just removed that function with the whole for loop because i think it's bad so i think here's a much cleaner way of doing this so let's do it like this let's create our use effect hook let's do the same dependencies that we had before and for the listing let's see if we can match that based on if the nft and the listing asset id matches if it matches it means that that particular nft is listed and we're going to say if it's listed if it's true or false this will return a true or false so if you find a match this will return a true if you don't find the match this will return if false all right we're going to set the listing to true and we're going to set the price to the following price and now let's check our app and refresh and let's just see if things work fingers crossed hopefully the work and boom there we go it finds the matches and it lists their price pretty darn cool huh i hope you like that this solution is much cleaner so let's use that one all right and let's explain this part now a bit further so what's happening here we're just saying hey if it's listed let me know that it's listed so if set listed is true then it will make this true and pass it in the url parameters and you'll be able to pull it down from the url parameters right path name will be this so now let's go ahead and build this folder and this particular id thing so here's what we're going to do in collections we're sorry in pages pages we're going to create a new folder and this folder will be called we could call them nfts yeah let's just call it nfts i don't like assets kind of confusing let's do so let's go ahead new folder we'll call it nfts my bad nfts and inside of nfts we will have nftid.js like that or nft item id this is fine dot js just like that cool now in here let's just put something so here like let's just import the header let's do rafc e and then in terms of the name here i'm going to just say nft so we'll just call it an nft component like that cool and we will return header and that's all we will return for now so let's try it let's click something nice and look our header shows up we actually get routed into that bad boy and you can see that i can see the id is zero so even in my third web if i actually click look id 0 here right so let's go back let's go to another another guy like let's go to this guy 4598 and you can see the ids too let's go inside of our third web and i can see the id for this guy is two indeed right and what else am i getting it's listed as false let's go inside of third web and we'll be able to see it so let's go to project let's move that here for now and we'll go to board api club oh no not this one so on this one we have our nft module open and this one will have our openc marketplace open and let's just take a look let's see if it's listed or not so this page is loading right now as you can see from that circle right there so there you go you see that there's only two listed but the one with the id of two that is not listed so this is a true statement that that's this listed is false but if i go to this blue one right here that should say that it is listed listed is true so that is very nice it's working all right so let's just build this nft id page from completely from scratch okay so let's go ahead and import our header we'll also get our use effect use memo use state because we'll need it we'll need to use web3 from third web let's also get the third web sdk let's also get routers we'll do some styling for wrapper container our top content nft image container and details container and then what i want to do here is i'll do export default nft and the function will just return header for now all right and it'll just be the the component will just be called nft that's it now inside of it let's go ahead and get our provider from web3 we will set some states here so the selected nft which is the you know whichever one is a selected nft like the one that the user has clicked on for example we'll get all of our listings and we'll we'll track the state of our liftings listings will track the state of our selected nft we will get the router because that'll allow us to pull the data from url parameters and the query parameters we will create a get our nft module and if provider doesn't exist and just return update on provider creator third web sdk and then we will use our alchemy's api and we will get the nft module and this is the nft module and again i'm getting the url from right here for the nft module and then for the openc marketplace that's going to be right below this right there okay cool now let's all get all the nfts in the collection again this isn't the cleanest code because we're repeating it for you i'll leave it as a challenge see if you can try to refactor this code and make it where it's being rereusable because you're seeing that we're using some patterns that we've used before all right so if the nft module does not exist then return we're going to use an immediately invoked functional expression here just async function call it immediately it will get all of the nfts and from our nft array we'll filter and we'll filter it based on the specific asset id and then we'll set the selected nft to the one that we have found so another way of doing this is instead of dot filter you could actually say dot find and then you don't need to do this zero index anymore so both ways should work you can leave whichever one you want let's keep going for now we'll create our marketplace module here and we'll use memo here all right provider again if it's empty just return we're going to create our sdk give it our signer same url and then we're going to return our and get our marketplace module and give it our marketplace a marketplace contract address okay perfect so that should be all good now next up let's create another use effect hook this will update on the marketplace module and we're just gonna get all the listings and then we're gonna set all of the listings meaning so we can have access to all of this and once that's done all right now let's create a component called nft image so i'm going to wrap this in div and then right underneath it i'm going to pass in my nft image and it should break we will need to create this component and here we're going to we're going to create a new folder this folder is going to be called nft and then inside of here we're going to have a new file it's going to be called nft image.js so this is the one that we're going to create let's just do rfce and we'll do yo with fire emoji and let's just see if that renders so let's go or actually let's import it first image boom from component slash nft slash nft image just like that let's go ahead open this bad boy up click it and you can see that my yo and fire emoji is rendering so that means my nft image is working all we need to do is now actually start working on it and styling it so first off let's just remove everything inside of here for now let's bring that back just for a second and what we're going to do is we're going to pass it the selected nft so let's go back to our nft image where we're passing it and what we're gonna do is we're gonna give it our selected nft and we're gonna say selected nft do we have selected nft here right here yes so we're going to pass the selected nft down into nft image right there now let's go back here now let's go ahead and delete some of this let's go ahead and import style we're going to need that so this is going to be the style that we're going to be using for this we're going to need two icons so let's grab them and this reacting isn't necessary to get cool and now we're going to work on rendering the component out itself all right so let's return let's make our divs here and inside we're going to add a top bar and in the top our content we're going to add this icon so you should be seeing that right there let's go ahead and add a likes counter so we'll say this has 2.3 000 likes which you can see right there and then we will add another div we will say selected nft and we'll grab its image select ted nft so we'll fix that in just a second let's go ahead and fix that right there selected nft i found the bug this is not asset id this is supposed to be nft id nft id just like that and now it'll pull what you're looking for also now you could turn it into that dot find method because i think that's a better method to use in this case so let's convert this to dot find it's not an array anymore so we don't need to do index of zero also let's rename it because it's not an array anymore so let's say selected nft item all right and then let's also call this selected nft item as well and now boom you're good to go so all we're doing is this returns an array of nfts and we're just looking through them and we're seeing if we find zero inside of any any of this and if we do then that's a match then put that match in here that's the selected nft and then show that nft show the image of that nft and all that all right so let's do this i just removed my nft image from here and after removing that let's go ahead and do the following so let's go and build a wrapper put a container inside of it put top content inside of it and put an nft image container and then let's put the nft image so let's go ahead and do that right now now let's go and build a general general details component so i'm gonna put that inside of my nft folder here so let's go new file and we're gonna go general details and let's build this out now and before we build this out let's give it what it requires so let's go here for props and for general details the prop that i'm gonna need to give it is going to be my selected nft kind of like that so let's go ahead and then do the following let's right underneath here add a details container and then inside of this details container we're gonna add our general details nft now it should crash that's fine let's go in general details hit c e do this let's go back let's delete this s and hit enter it should give us the option to auto import let's do our auto import and perfect it's auto importing now let's go into general details let's and let's start building this out now oh and let's not forget let's do selected nft just like that all right so now let's this is what you should have in general details if you have import react that's fine but now let's actually work on this component of general details so let's import everything that we need so get our ai fill heart because we're going to need that icon we're going to need a md refresh icon ri share box line fi more vertical gi share and then for our styling let's we're going to have a wrapper we're going to need an info container we're gonna need an accent an nft title one other info one who is owned by the likes the like icon actions button container we're gonna need action buttons and then action button and then a divider so that's it for styling and now let's actually start rendering this component so we're going to need our wrapper inside of our wrapper we're going to have our info container inside of that we're going to say board api club so boom right there you can see it's starting to show up we are going to put the name right here let's get other info so who is it owned by we need to put that information and let's go for likes let's show our likes right there 2.3 k favorites and then we will put our action buttons container and then we're going to start putting our action buttons in there so there we go you see refresh at the top right now we're going to create a divider now we're going to do a box line let's go ahead and create another action button gi share and let's go find more vertical and there we go boom look at that so now our general item details are completed and they're all showing up nice work so far now we're going to add in our item activity so let's go ahead and create a new component inside of nft and this is going to be called item activity.js we're going to rafce we don't even need that at the top let's go back to general details let's go to nft id actually and right here we're gonna add our item activity okay there we go and let's go ahead and import this as well at the top item activity from components nft item activity and this is going to be some dummy data but it's going to make this app look much better so let's work on this now all right so let's work on our item activity component so let's go ahead and import cg arrows exchange v we're going to need this let's go ahead and import ai outline down and outline up let's use get use date from react and dummy events don't worry we will fill out this file soon we'll create a list of some dummy events this is going to be our styling so i'll full screen this if you want to copy this okay it's going to be our styling and then we're going to need to keep track of toggle and the reason we're going to need to keep track of toggle is if i go to our collections and this is our you know finished app deployed app when i go here and i actually click this toggle watch what happens boom right so that's super nice so this is the toggle that we're actually gonna build so that's what we need to keep track of the toggle and then we're gonna return the following let's have our wrapper and title and then we need to set uh toggle on and off based on click all right we're going to add item activity and then we need to add the arrow as well and then we're going to if the toggle is true then make it show up if it is not toggled then make it point down okay so for example if i go to my deployed app look at it's pointing down and when i click it it points up and this and then means if the toggle is true then show all of this if it's not true then don't show this all right so we're gonna show the toggle and then in the table header we need to have events we need to have price we need to have so kind of like this right event price from to date just like that and then we're going to map through each of the dummy events and we're going to render out each event kind of like this all right so we need to get some dummy events now so we're going to create a folder called static and inside of this folder we will create dummy events and i'm just going to put an array of objects of dummy events so you could put it and whatever you want it to be from to whatever you want and if you want you could even essentially connect these events to the database and pull events from a database again i would leave that to you as a challenge i just need to make sure that when i'm making this app the scope isn't 12 hours long right so that's why i'm putting some dummy data here but i'll leave that to you as a challenge to see if you can figure out how to do that cool so our dummy events are right here and now all we need is we need to import my dummy events so let's go ahead and do that and let's see so import dummy events from static dummy events cool and now what i need to do is work on my event item component so in my components inside of um my nft component we're going to do new folder we're going to say item item activity and inside of there we're going to create a new file and it's going to be called a new component rather and it'll be called event item.js and before i start building this out let's just go to oh this is this is good over here because i'm mapping through and i'm giving events an event all right so let's get to work on this component so we will import a fill cart fill bs fill cart fill so it's an icon we are going to export default event item let's create our style these are going to be all of our stylings and then an event item what i want to do is let's go ahead and destructure event and then for each event item i'm going to do the following we'll create an event event icon give me this cart fill icon which is this guy right there and let's go to our component and see if it's showing anything in the meantime event item is not defined so let's go ahead and save this and let's go back event item let's go ahead and import it so let's go at the top now it's importing it correctly so now event item is defined and there we go our event item is showing up look at that that's that's actually looking pretty freaking clean you guys look at that all right let's go ahead and get our event price we'll give it a flex 2 here and for image i'm just going to give it that ethereum image this is svg file oh and then let's go ahead and give it event price all right we will add a two here and then we will add uh event.date so four months ago and boom all right our event item and our table is done let's click this whoa whoa look at that your table is working guys guys if you think that is freaking cool smash that like button seriously smash that like button break that thing that was freaking awesome and one thing i do want to say right if there's javascript in here that's like getting too advanced for you and you're like man what the hell's going on look what i want you to do is go and just join our course profit with react because that will break down all the javascript all the html all the css all the react that like is maybe jumbling up your brain you're like what is happening here because if i were to break down every single line of code every single javascript line again this thing will turn into 12 15 hour long video right and that's that's not something that's sustainable for you to watch or for me to build and uh videos sometimes can't even go over 20 hours so what i'd recommend is go check out our courses below you know join profit with react or i'll try to link some you know free course as well but i would highly recommend profit the react because it comes with coaching calls as well so you can really sharpen your javascript and react and coding skills because once you do that then building even on the blockchain is not that hard but if you don't do that honestly building on blockchain and those things are going to continually keep being hard so check it out best freaking course on the planet check it out all right let's keep going so there we go our item activity table is made it's doing what we need it to do and now we just want to work on our last function and we're pretty much done so let's go ahead and work on our function component so in my nft i'm going to do new file we'll do purchase.js just like this and let's work on this component now let's go back actually to our nft id and there let's go ahead right under general detail we're actually going to do purchase and it's going to be a selfclosing tag like this let's go here and i'm going to say is listed and we're going to go router.query.is listed so pass it like that we're going to say selected nft is going to be selected nft we will go listings will be listings okay and marketplace module is going to be marketplace module all right now it says purchase is not defined that is fine we're going to import that in just a second so let's go ahead and import that now purchase cool and now we're ready to work on our purchase component let's do it what the hell was that let's do it let's what's up what's going on with me all right let's keep going honestly i think it's just 2 107 am right now and i'm uh starting to lose my brain cells a little bit but you know what i was like just screw it i'm gonna finish this goddamn video i'm gonna just finish it instead of leaving it for multiple days let's just do the whole freaking thing all right and if you're watching this and you're watching this live show me some love all right i'm here grinding for you smash that like button show me some freaking love all right subscribe drop some heat in the comments and share some love with me let's keep going all right so let's start working on our purchase component so i'm going to export default make offer and then we're gonna get use effect and use state i will also get my high tag because i'm gonna need that my wallet let's go ahead and get our toast all right cool and i'm going to create my styling here just like this button button icon button text and then we're going to create our make offer and then in make offer i'm gonna need i mean i could call it purchase as well and just i decided to call it make offer so is listed it's gonna destructure selected nft we're gonna destructure listings and marketplace module and then let's get our selected market nft so which is the nft that we have selected let's have our enable button and track the state of that and if it's not listed or if it listed is false then i just want you to return and end this and track these three please because whenever they get updated i want you to fire this use effect again here is the iife that i want you to call and i want you to basically look for if the market nft matches the selected nft if it does then set that to the selected market nft and let's create another use effect hook and what this will do is again if none of these are set then just end otherwise you're going to set the enable button to true this is kind of your buy now button and then we're going to track selected market nft states and here's our confirm purchase function and on purchase we're gonna say purchase successful we're gonna have a little toaster notification and then here's our buy item function that we're going to create so it's going to take in it's going to take in two arguments listing id and by default the listing id is going to be the selected market nft id and quantity desired is going to be by default one and module by default is going to be marketplace module so all of it has three arguments this function by item has three arguments and these are all the defaults that were passing it and then what we're going to do is we're going to buy we're essentially going to use the third webs buyout direct listing method okay and that allows you to easily buy an nft and then we're going to do confirm purchase which is our toaster which is our react hot toast function which is going to pop up a little notification saying hey great work let's go ahead and now start building and rendering this out so here's what this is going to look like okay let's go ahead and show our toaster component all right and then inside if the listing is true then i want you to render the following okay actually let's go ahead and see what's the error here let's refresh can't resolve purchase let's take a look uh in our nft id where we put purchase it's not asset it's actually nft here so now it should resolve at the very least but let's hope yes it's being resolved perfect now it's going to start showing our enable button and buy now button and list now button and things like that so let's go back and if the listing is true then basically render out an enable button that allows you to buy the nft so if the enable button is there and and i've clicked it meaning like i've just clicked the buy now button then fire off the buy item method and we're going to render out the buy now button and let's go ahead and also write make offer and if this is not the case then i want you to do the following so look at that our buy now button is showing up and our make offer is showing up as well let's go ahead and list our item and that should be it so what's this saying if listed is true then render this if it's not true then render this so let's go to one that's not listed so let's go collections and for example this one is not listed here let's click it and you can see it says list item now if i go back to collections and we go to this one right over here it will say buy now or make offer now let's actually see if we can buy this guys this is the moment of truth this is what we have been building up to if this works this is gonna be mindblowing it's gonna be crazy so if you're getting hyped yo drop some love get hyped let's see if this actually works what the heck this is crazy so i'm gonna i'm just gonna give it a try let's hit by now and let's see what happens buy now oh man okay cool so we have uh missing argument past the contract count is equal to three accepted count four let's see what's happening here all right so we're at the finishing touch and we're about to make the buy now button work now it was crazy it was working and then all of a sudden started bugging out for a while and right now it's almost 5 a.m i was debunking this for the last three to four hours with my team and also just debugging myself and i'm like i'm not gonna go to sleep until i freaking solved this right so i got it done we got it done and here's what it is so one of the things you have to do is upgrade all of your packages so that's one of the errors that i was running into so basically what you want to do is i'll zoom in here so you can see this command but basically what you want to do is yarn upgrade like this i'm going to do lates dash dash lates like that this command takes a while to run it takes a while so just let that run it's not frozen it just takes a long time and it'll upgrade all of your packages so that's the one the next thing we want to do is everywhere we have this ranki or infura or alchemy link just delete that so let's delete that from here let's delete that from here and then the other place that has it is in the collection id so those are the only two files that has those links so let's go into collection id let's delete this and let's delete this all right there we go now let's go to our app let's go to collections and let's see what's listed on here on third web so i have this blue one listed and this one listed so those are the only two ones that should be showing prices right now so let's see yep those are the two those are the only two ones that are showing prices for me right now so let's go to this blue one and i'm going to connect with a different wallet so what i'm doing here is this is my wallet i am i actually probably don't have enough eath to buy this so let's transfer some ethia so i'm gonna go to my secondary wallet okay this is some random wallet i have i'm going to copy the address so go here and let's send eth to this address and we will send 0.38 0.48 confirm so i'm just sending some eth over to my other account to buy because this is an admin account so this is not the account you want to buy with you want to purchase it with you want to act like you're just a person who's going through the store and buying stuff right store owner is not going to buy stuff so let's go to this one now now i have enough eath to purchase so and i've connected my account with this make sure you disconnect with your main one your admin one and if you don't know how to create a new account just hit create account and it literally makes a new account for you connect it to the rinkyb test network log in with it and you should be good to go if i go to connected sites i have local host 3000 here so now this is the moment of truth let's see if this buy now button works if it works we're good if it doesn't we're in trouble all right here we go if it works at the bottom left you're going to see the notification let's actually make our notification better so let's go to our toast where's our where's your toast nft id in purchase i think i have my toast yeah let's go instead of bottom left we'll go position top center i think that's what it is right top center let's look top center top center huge shout out to third web by the way it's three or f it's like four a.m four am almost in raza his username is let's actually see raza codes python huge shout out to raza codes python he came in actually from third web to help me out so i mean this is amazing their customer support and their community is freaking awesome so that's massive props like guys go join their discord all right we'll link it below go join their discord and be a part of their community because that's pretty ridiculous so all right in here i got i have everything good to go i made it top center all right now let's see moment of truth let's hit by now and let's watch what happens and at the top center we should see purchase successful so let's go buy now fingers crossed hopefully my metamask wallet comes up to make the purchase we'll see boom look at that yo 0.1 eth let's see let's wait for it now it's charging me gas fees as well let's hit it let's hit it please work please work please work come on i spent my whole night i will sleep so peacefully please work let's give it a few more seconds guys blockchain blockchain likes to take its time making transactions takes its sweet time boom look at that it said purchase successful joe let's freaking go you guys that's what i'm talking about guys all right if you thought that that was freaking awesome guys come on do me a favor smash that like button break that like button let's get this video out to as many people as possible and just hype it up in the comments below hype it up in the live chat if you're watching it live man i am beyond hype right now that was awesome and let's make sure that that purchase has happened right so let's go and i'll refresh this i'll actually let's go to collections and in collections let's go and you see the blue one is not listed anymore look at that right it's it's been purchased so it's not listed anymore and now let's go inside of it look it just says list item it does not say buy now okay our toggle here is working as well does not say by now if i go to third web and we refresh here let's watch what happens so it takes a second to load it on third web but if you keep waiting boom look at that the blue one is gone it's not listed on the market anymore that means somebody actually owns it so that's exactly the experience we're looking for right and if i go to my if i look at my wallet i can see that i bought something right and i can even view it on the block explorer if i wanted to confirm that transaction you could actually check it out on rinkybee.etherscan and you can see that it was a success okay and you can see the contract from and you know what you bought what collection it was all of it so guys so freaking cool man so freaking cool all right so this app is done at this point all we need to do is we need to deploy this app so let's go ahead and let's start working on deploying this app so make sure that you have an account on versailles.com all right and let's go here you want to have a account on here and what we want to do so just make sure you're signed up on here that's kind of all you need to do now inside of my project i'm actually going to type in versel and it's automatically going to pop up these things let's just follow these command lines here so it says setup and deploy and we will say yes so i just hit y which scope do you want i'll just say clever programmer for this i'll zoom out because i often forget to zoom out and that causes problems link to an existing project i'm going to hit enter it's going to be default no openc blockchain clone yes that's the project's name all the defaults are pretty smart they're pretty good so i just kept hitting enter in which director is your code located this directory right here and let's see what happens so now it's going to work on uploading this project and pushing it out and kind of deploying it and what we want to do is in our sanity we want to make sure that we give it the course origin where our course has a versaille on there so once i get the actual link to the app i'll put that one it says our project is deployed so i'm gonna command click it and we're live it seems like it's deployed what the heck this is awesome so all we need to do though is grab that url wherever we deployed this app just now so let's grab this let's go to our sanity studio or not not here let's go here and in api we want to add course origin add this hit allow credentials and hit save boom there we go it's perfect now let's go to our deployed app let's connect wallet and let's go ahead and connect with this wallet and let's see it should say something like maybe welcome back clever quasi or something there we go welcome back clever quasi beautiful that's exactly what we wanted it pulled our username from the sanity database everything looks beautiful beautiful the nav bar looks beautiful right look at that we have the on hover effects and everything let's hit collections so we can come to our main page board ape yacht club boom look at that all the projects are here and any one of them that are listed are showing up as listed yo that is beautiful and now let's see again the moment of truth on the deployed version can we actually buy this nft we were able to list it now let's see if we can buy it right so wallet perfect i'm on uh which wallet let's see which one i'm connected with i'm connected with this i'm going to disconnect with this for now so we're going to disconnect and i'm going to go to this one and i will connect to current site and i'll purchase this one with that so let's see i just hit buy now so my meta mask should actually pop up soon let's see let's refresh beautiful let's hit by now alright so there we go i just had to go to the collections come back and it looks like it's pulling it up here we go all right let me open up my meta mask and this is the moment of truth we're on the deployed version is it actually going to be able to make a purchase let's see let's hit confirm and it's going through it's pending it says right there and now we just wait pending see pending pending pending oh man please work whoa look at that it was it just said successful and it just says successful buy right there guys this is absolutely beautiful it's deployed so you guys can actually interact with this app as well you can go online and check it out but if we refresh on our marketplace now if we wait long enough this actually should be unlisted as well and should stop showing up on third web boom this is gonna go away soon there you go it's gone not showing up anymore right it just takes a second but there we go it's gone so guys we have done an absolutely amazing job right we have used third web for the blockchain component we have built this amazing beautiful front end with nexjs you use tailwind css to style this whole freaking thing you have you're pulling data from sanity right this data is actually coming from sanity floor owners items all of this is dynamic this is also coming dynamically from sanity the database all of these nfts here are actually being pulled are being directly retrieved right from the blockchain itself using third web and then you're able to list your nfts and you were able to buy nfts right so in terms of functionalities wow what an absolutely amazing project we've built together and really amazing awesome things that we're using in this project right like use memo and we're using like used memo made this app so fast because if you do this without use memo this will be so freaking slow it'll take forever if you look at what use memo does use memo is super cool it will cache the calls so the more times you make the calls the faster it gets right so for example i just clicked on that one and i go back it'll be a little bit slower then it'll just keep getting faster and faster and especially when i click on the same exact guy it'll keep getting faster and faster like that see that boom boom boom boom that's the power of that so there is just so much cool stuff that i feel like we've gotten done and accomplished in this and then just so little time it's absolutely unbelievable so guys at this point what i want to tell you is look if you're here and you've enjoyed this first of all make that smash button blue right smash the like button let's get this video out the other things i want to say is if you were struggling with this or you need help with this look join our community at clever programmer it's completely free click it join it become part of our discord become part of our email newsletter where we'll be able to help you on a weekly basis if we have online trainings we'll let you know if we have a free course we can give you right in the description below i'll also link a free course that you guys can actually join and go through if you want to join profit with react and get a lot more training handson technical it's going to be in the description below if you need more help and you want to get in and meet us physically in person in l.a i'm personally hosting the workshops in new york city we have people hosting the workshops and then we have multiple other cities where we have clever programmer people hosting workshops so you can come to new york city and la and get help with how do you build this amazing project and work with me in person and work with you know our team members in person and we'll help you build web 3 projects web 2 projects full stack blockchain whatever it is we'll help you with it and we just have you know such an amazing community and it's completely free so that's also going to be in the descriptions below and it's just at cleverprogrammer.commeetups all right once you go there you get access to all of our upcoming meetups and you can just join them for free there's no cost to you i would love to see you there and we are running multiple per month our goal is to be able to run them once a week but at least you know two to three times a month we're running them as of now so take advantage of that take massive advantage of that because i don't know how long i'm going to be running them i don't know when i'm going to stop doing that and i don't i don't know how long i'm going to be running it for free if you're watching this video right now it might might even be gone might not even be a thing but if you want to jump on it right away i would say do it so that's it those are all the things i wanted to keep you abreast of with that said i love your beautiful face this was so freaking cool thank you so much for building it with me and as always i'll see you in the next video
