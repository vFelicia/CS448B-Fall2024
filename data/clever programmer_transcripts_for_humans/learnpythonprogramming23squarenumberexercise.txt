With timestamps:

00:00 - okay now let's try our hand at our first
00:03 - problem okay so I'm going to give you
00:05 - your very first problem this time okay
00:07 - so let's go ahead into our course this
00:10 - is on the main website okay
00:12 - let's go to or clever programmer comm
00:15 - that is let's go to the problem call
00:17 - square a number and let's click on it
00:19 - and don't worry if you're watching this
00:21 - on YouTube I'll provide the notes below
00:24 - so I'll give you the link to the problem
00:26 - and I'll give you a link to the solution
00:28 - as well okay on the website is just all
00:31 - more integrated so at the top before you
00:34 - get before you actually have to write
00:35 - your function I have some notes here to
00:37 - help you out so like for example I say
00:40 - something like remember functions always
00:42 - start off with the word d EF which means
00:45 - define so if you're ever writing a
00:48 - function always start off with d EF note
00:51 - 2 says don't forget your colons okay
00:54 - note 3 says always do return rather than
00:58 - print in your functions usually you do
01:00 - print to check if it's working correctly
01:02 - other than that you want to do return
01:03 - I'll make a video on return vs. print so
01:06 - you guys know more in depth what's going
01:08 - on so here is an example for you guys
01:12 - that we just did in our previous video
01:14 - but I'll leave this here for every
01:16 - problem just so you guys can remember
01:18 - how it works so if you so remember the
01:21 - add to function that we wrote or some to
01:23 - function it takes in two numbers and
01:25 - input as inputs and returns their sum
01:27 - well this is how you write it
01:30 - define add two takes in two inputs we
01:33 - just call them a and B and we return the
01:35 - sum of both of them so if you look at
01:38 - line four it says it's now using the
01:41 - function so that's an example of how to
01:43 - use your function so print add two one
01:48 - and two all right so one and two should
01:50 - give you back three then it prints three
01:52 - and you get that result that you see
01:54 - right there where the arrows are
01:57 - pointing okay now let's get to our
01:59 - actual problem the problem is called
02:02 - squaring a number okay you can read this
02:04 - on your own too so I'm going to go
02:05 - through this a little bit fast I want
02:08 - you to try this on your own hopefully
02:09 - you have taken a stab at this
02:11 - problem after you have done so this part
02:16 - is going to be the solution okay so I'm
02:18 - going to go through the solution of this
02:19 - now all right write a function that
02:24 - Square is the number that write a
02:26 - function square number that takes in a
02:28 - number and squares it so right away I
02:30 - know it's something like this okay
02:34 - first part is done the function is
02:37 - called square number and I have to put a
02:39 - DF before it I also have to put open
02:41 - closed parentheses because it's a
02:43 - function even if it takes no arguments
02:45 - you have to put a parenthesis open close
02:47 - parenthesis like that all right what
02:51 - else does it say
02:52 - it tells me to take a number and square
02:55 - it which means that I have only one
02:57 - input right so I know that I have one
03:02 - input and I have some integer or I have
03:08 - some output okay some number based
03:10 - output so I know my return statement
03:14 - whatever is going to return should be
03:16 - something that probably returns a number
03:17 - okay in this case right my output is
03:23 - going to be something like number
03:27 - squared okay so we are taking in one
03:33 - input let's call the input number and
03:35 - let's just do a return that number
03:39 - squared okay at the bottom I have a
03:44 - bunch of testing things for you so this
03:47 - part of the code actually tests your
03:49 - function so it's a function called test
03:52 - square number that tests your function
03:54 - okay so just to make sure you got
03:57 - everything right you should have a line
03:59 - print it out if you've done done wrote
04:02 - this correctly you should have a line
04:04 - saying your code is correct okay so to
04:09 - do that you have to always uncomment the
04:12 - bottom line that I have here for you
04:13 - which is the call to this function here
04:17 - test square number okay so you want to
04:19 - uncomment that line below and now let's
04:22 - run it and see if our code is correct
04:25 - okay and you can see right here that it
04:27 - says your code is correct alright just
04:34 - to break it down these two asterisks
04:36 - mean exponent exponentiation so I'm
04:38 - saying number squared okay how you would
04:44 - write it in math would be something like
04:46 - this and then let's see what happens
04:48 - happening right if you give me two you
04:50 - should get back for if you give me eight
04:52 - you should get back 64 if you give me
04:54 - ten you should get back 100 and now
04:56 - let's see how it works so if I give you
04:58 - to write this function call over here
05:00 - square number two what happens let's
05:04 - write it down right here square number
05:07 - and give it two okay two gets passed in
05:11 - as the number you have two over here
05:13 - everywhere there is number the variable
05:16 - number it's replaced by 2 2 to the power
05:20 - of 2 or 2 squared just gives you 4 and
05:24 - so it asserts four equal equal four
05:29 - right and then it gives you and then
05:31 - it's it says it's good how assertions
05:34 - work this thing that I have that tests
05:36 - your code is that if it evaluates to
05:38 - like it takes in some condition of that
05:40 - condition evaluates to false it throws a
05:42 - big error right if I said assert 5 equal
05:46 - equal 4 and I ran this it's going to
05:49 - give me a big error at the bottom here
05:52 - right parser but bad input on line 11 oh
05:58 - okay okay it's giving me an error here
06:00 - but let's fix this guy now it gives me
06:03 - an error on where I expected to give me
06:05 - error on line 14 which says assert 5 is
06:09 - equal to 4 and it says no that's not
06:11 - true but if I had 4 equal equal 4 it
06:15 - would just pass it quietly meaning like
06:17 - it won't do anything
06:18 - so if it doesn't give you an error it
06:20 - means that thing is correct okay
06:22 - and that's it that's our solution for
06:26 - this problem square a number in the next
06:29 - video we're going to solve the problem
06:32 - of checking if a number is even all
06:35 - right so try it on your own and in the
06:37 - next video I'll have to
06:39 - actual problem for you guys and I'll
06:40 - have the notes below and I'll have the
06:43 - link to solution below as well if you're
06:46 - watching it on my You Tube channel if
06:48 - you're watching it on my website then
06:50 - there won't be anything below because
06:53 - everything is actually part of the
06:54 - clever programmer comm website alright
06:58 - I'll see you in the next video

Cleaned transcript:

okay now let's try our hand at our first problem okay so I'm going to give you your very first problem this time okay so let's go ahead into our course this is on the main website okay let's go to or clever programmer comm that is let's go to the problem call square a number and let's click on it and don't worry if you're watching this on YouTube I'll provide the notes below so I'll give you the link to the problem and I'll give you a link to the solution as well okay on the website is just all more integrated so at the top before you get before you actually have to write your function I have some notes here to help you out so like for example I say something like remember functions always start off with the word d EF which means define so if you're ever writing a function always start off with d EF note 2 says don't forget your colons okay note 3 says always do return rather than print in your functions usually you do print to check if it's working correctly other than that you want to do return I'll make a video on return vs. print so you guys know more in depth what's going on so here is an example for you guys that we just did in our previous video but I'll leave this here for every problem just so you guys can remember how it works so if you so remember the add to function that we wrote or some to function it takes in two numbers and input as inputs and returns their sum well this is how you write it define add two takes in two inputs we just call them a and B and we return the sum of both of them so if you look at line four it says it's now using the function so that's an example of how to use your function so print add two one and two all right so one and two should give you back three then it prints three and you get that result that you see right there where the arrows are pointing okay now let's get to our actual problem the problem is called squaring a number okay you can read this on your own too so I'm going to go through this a little bit fast I want you to try this on your own hopefully you have taken a stab at this problem after you have done so this part is going to be the solution okay so I'm going to go through the solution of this now all right write a function that Square is the number that write a function square number that takes in a number and squares it so right away I know it's something like this okay first part is done the function is called square number and I have to put a DF before it I also have to put open closed parentheses because it's a function even if it takes no arguments you have to put a parenthesis open close parenthesis like that all right what else does it say it tells me to take a number and square it which means that I have only one input right so I know that I have one input and I have some integer or I have some output okay some number based output so I know my return statement whatever is going to return should be something that probably returns a number okay in this case right my output is going to be something like number squared okay so we are taking in one input let's call the input number and let's just do a return that number squared okay at the bottom I have a bunch of testing things for you so this part of the code actually tests your function so it's a function called test square number that tests your function okay so just to make sure you got everything right you should have a line print it out if you've done done wrote this correctly you should have a line saying your code is correct okay so to do that you have to always uncomment the bottom line that I have here for you which is the call to this function here test square number okay so you want to uncomment that line below and now let's run it and see if our code is correct okay and you can see right here that it says your code is correct alright just to break it down these two asterisks mean exponent exponentiation so I'm saying number squared okay how you would write it in math would be something like this and then let's see what happens happening right if you give me two you should get back for if you give me eight you should get back 64 if you give me ten you should get back 100 and now let's see how it works so if I give you to write this function call over here square number two what happens let's write it down right here square number and give it two okay two gets passed in as the number you have two over here everywhere there is number the variable number it's replaced by 2 2 to the power of 2 or 2 squared just gives you 4 and so it asserts four equal equal four right and then it gives you and then it's it says it's good how assertions work this thing that I have that tests your code is that if it evaluates to like it takes in some condition of that condition evaluates to false it throws a big error right if I said assert 5 equal equal 4 and I ran this it's going to give me a big error at the bottom here right parser but bad input on line 11 oh okay okay it's giving me an error here but let's fix this guy now it gives me an error on where I expected to give me error on line 14 which says assert 5 is equal to 4 and it says no that's not true but if I had 4 equal equal 4 it would just pass it quietly meaning like it won't do anything so if it doesn't give you an error it means that thing is correct okay and that's it that's our solution for this problem square a number in the next video we're going to solve the problem of checking if a number is even all right so try it on your own and in the next video I'll have to actual problem for you guys and I'll have the notes below and I'll have the link to solution below as well if you're watching it on my You Tube channel if you're watching it on my website then there won't be anything below because everything is actually part of the clever programmer comm website alright I'll see you in the next video
