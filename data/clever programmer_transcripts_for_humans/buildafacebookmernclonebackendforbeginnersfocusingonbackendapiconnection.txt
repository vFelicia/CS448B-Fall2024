With timestamps:

00:00 - everybody um let's start dropping in
00:04 - uh where you guys are coming in from
00:06 - welcome everybody by the way
00:08 - uh this is going to be the second act of
00:11 - the mern
00:13 - facebook clone um last time it was a bit
00:16 - long
00:17 - but this time we will be only focusing
00:20 - on the uh backhand
00:23 - uh and actually i gave you the front end
00:27 - just like
00:27 - last time with the messenger build it
00:30 - should be down below this description
00:32 - um so i'm just gonna go ahead and share
00:34 - my screen
00:36 - and let's see how we go about it so
00:41 - i go to youtube of course here is uh
00:44 - the stream oh oh yep
00:48 - there we go and the uh
00:51 - github link is down here guys
00:55 - who is excited let's drop it in the
00:57 - comments who is excited
00:59 - i want to know who is excited i want to
01:02 - know who is ready to build
01:04 - the facebook mirn clone with me today
01:07 - and who is ready uh to have this
01:11 - awesome build on their portfolio
01:14 - hey okay i see uh christina dropped some
01:18 - fire
01:19 - nice we got lots of people we got
01:22 - oh tommy kelly hey yo uh he actually won
01:26 - the kobe tracker challenge
01:28 - nice to have you in the house bro um
01:31 - whoa
01:32 - we got we got so many people
01:36 - who who can't wait to uh to build
01:39 - nice awesome okay friday john says i'm
01:43 - ready
01:43 - uh love from bangladesh and whoa we
01:47 - are at 181
01:50 - concurrent viewers nice job guys
01:54 - guys if you're excited if you're pumped
01:57 - to have this
01:58 - facebook build on your portfolio smash
02:01 - the like and
02:01 - thumbs up button uh hit the subscribe to
02:04 - this video
02:05 - and let's get this video out there to
02:08 - everybody
02:09 - else and if you guys guys find this
02:12 - uh even the whole thing a whole channel
02:16 - uh like um informative and you got
02:19 - value out of what we are doing here with
02:21 - qazi sunny nas
02:23 - aaron and all the guys at team cp
02:26 - drop a drop some nice comments and
02:29 - and smash the like button so that this
02:32 - video and all the others
02:34 - can go ahead get out to everybody and we
02:37 - can
02:38 - provide everybody as much value as
02:41 - possible because
02:42 - i don't know if you know it but for 2020
02:46 - we are planning to help 5 000 people to
02:50 - get jobs as developers guys who is
02:52 - excited
02:53 - who is pumped to have job as a developer
02:56 - punch it in the comment section let me
02:58 - know if you want to
02:59 - start working and earn your income as
03:03 - a developer uh starting in 2020 and if
03:07 - you want to be
03:08 - one of the 5 000 people who
03:12 - who get a jobs as developers buy
03:15 - clever programmers help okay nice
03:19 - yeah we got some crazy amount of fire
03:22 - and yes
03:23 - and whoa and me
03:26 - okay yeah i see lots of people want to
03:29 - become developers
03:30 - that's great okay um
03:33 - with that i think i'm just gonna go
03:35 - ahead and start helping you guys
03:38 - uh yup okay so
03:41 - now uh this should be the
03:44 - description that you are seeing at the
03:47 - moment
03:48 - and this is the link that you want to go
03:51 - ahead and
03:52 - click now what i will be doing
03:55 - is uh here it is i think this
03:58 - should be um public let me know guys
04:02 - if you if you can open this link or if i
04:05 - need to set
04:06 - something uh up
04:09 - hey dr mirn thank you guys
04:12 - thank you so much uh yeah
04:15 - okay so guys go to this github link
04:18 - and let me know if it's working
04:20 - perfectly if it's working good
04:22 - um and let's actually
04:26 - clone this app by going here uh
04:29 - smashing that green button just like the
04:31 - like button
04:34 - so literally go ahead hit that green
04:36 - button
04:37 - and there is the link that you want to
04:39 - go ahead and grab
04:41 - now i'm gonna go ahead and
04:44 - try to select all this and copy
04:47 - now i'm going back to this folder that i
04:49 - created for today's session
04:51 - and there is a project coming for pwj by
04:55 - the way
04:56 - i'm going to create a new folder i'm
04:58 - going to call it fb
05:00 - which is like facebook uh
05:03 - mern shantan who says nice hair dude
05:06 - thank you so much took me two years to
05:08 - grow um
05:10 - yeah so facebook mirn uh and
05:13 - back end of course and i'm gonna go
05:17 - ahead
05:17 - open up a terminal at this folder
05:21 - and guys if you don't know why this is
05:24 - colorful uh it's because i'm using all
05:27 - my zsh now all my zsh
05:29 - is a super awesome tool super awesome
05:33 - uh tool to
05:36 - upgrade your terminal it basically gives
05:39 - you a bunch of features
05:41 - but most importantly it helps you
05:44 - understand
05:44 - how to use terminal so much easier
05:48 - that um yeah so before using all my
05:51 - zetta sage i was like oh no way no
05:53 - terminal at all
05:55 - but ever since i started using it i'm
05:57 - like oh this is a good stuff
05:59 - okay now uh what i will be doing is
06:03 - just basically type in here get in it
06:06 - which
06:07 - initializes the
06:10 - git version control and now you can
06:13 - already see that i'm on the master
06:15 - branch
06:16 - okay now what i will be typing in here
06:18 - is essentially a git
06:19 - clone and paste the link that
06:22 - i got out from here
06:25 - oh that's a wrong color let's use this
06:28 - one
06:29 - uh so that link is essentially pasted
06:33 - right right over there
06:36 - sorry guys okay um
06:40 - yeah and now it is actually yeah
06:43 - so that was pretty much cloning the
06:45 - whole git project
06:47 - and now uh it actually
06:50 - created another folder so i don't know
06:52 - why i created that folder doesn't matter
06:55 - oh and i will be just uh
06:58 - seeding into that folder so let's go
07:00 - ahead and copy
07:02 - and just cd and boom there we go and now
07:05 - what i will be doing
07:06 - is essentially just typing in mpm
07:10 - i which stands for mpm install
07:14 - hey rookie uh hey uh atari wa we are not
07:18 - doing firebase
07:19 - um we kind of will because the front end
07:22 - is
07:23 - i mean it's it's already probably um
07:27 - up on firebase for you guys if you have
07:30 - done the
07:30 - uh original react
07:34 - uh build with sunny oh by the way let me
07:37 - know in the comment section below
07:39 - uh or actually on the right side or the
07:41 - left side i don't know
07:42 - uh let me know in the chat if you have
07:45 - built the original uh
07:47 - version with sunny uh i'm super pumped
07:50 - to see
07:51 - uh if you guys have built it uh because
07:54 - this
07:54 - actually this starter project is a
07:56 - little bit
07:57 - modified so it's not the exact same one
08:01 - but it's very close so like there is
08:03 - like one or two line that is not not the
08:05 - exact same it's just uh
08:08 - saving us a little bit of time because i
08:10 - am planning to finish
08:12 - this up um under two hours
08:15 - or under two and a half hours max
08:20 - okay uh so if you haven't done that
08:23 - not a problem it's not a requirement as
08:26 - it
08:26 - is down below and you can use that
08:28 - project to
08:30 - uh go ahead and work with this
08:33 - um work through today's
08:36 - session but i highly recommend so so
08:39 - that you will actually get the whole
08:41 - mirn thing done and you will have like
08:44 - more experience in react and stuff like
08:46 - that
08:47 - i highly recommend you go ahead and
08:49 - literally like
08:51 - uh and and finish up the build with
08:54 - sunny
08:54 - as well um you can just find it on
08:58 - on clever programmers youtube channel
09:01 - it's um
09:02 - oh and by the way we hit uh 800k
09:05 - subscribers
09:06 - thank you so much everybody whoever uh
09:09 - subscribed to
09:10 - uh our youtube there we go 800
09:14 - thousand nice so uh the original
09:18 - facebook build with sunny should be
09:20 - somewhere around here down
09:22 - there okay
09:25 - now with that said
09:29 - who is ready to start
09:32 - building the mern facebook
09:35 - clone with me today
09:39 - let me know in the comment section uh
09:42 - drop some fire let me know if you uh
09:45 - if you're getting value out of this
09:47 - channel and because that's what
09:50 - literally gets
09:51 - us moving forward uh let me
09:54 - let me move the comments a bit yeah
09:57 - okay i'm ready um okay
10:00 - uh now it says me nice
10:04 - um guys please do not use
10:07 - caps lock because our
10:11 - nightbot is gonna ban you um
10:14 - uh anamika says i'm excited david let's
10:17 - go
10:18 - nice uh dave kumar you bro go ahead
10:22 - thank you bro okay yeah
10:26 - miles says people who don't say me are
10:28 - missing limbs
10:30 - yeah right mustafa goes uh
10:33 - ready let's go rukia goes me and lots of
10:37 - fire
10:38 - hey there we go guys okay let's
10:41 - jump straight into building uh the mern
10:45 - facebook clone and i think it's yeah
10:48 - there we go
10:49 - so now we have the front end project
10:53 - um
10:58 - cloned yep that's the word i was looking
11:00 - for
11:01 - and i think i just gonna go ahead and
11:04 - open up this uh folder
11:08 - in my wii s code um
11:12 - yup it should be it nice and i will zoom
11:15 - in in just a little bit let me just get
11:17 - everything uh working okay source
11:21 - and i will just open up app.js and
11:25 - let's actually go ahead and zoom in
11:28 - okay guys you should be seeing it now
11:32 - pretty
11:32 - uh decently let me know if you need a
11:35 - bit more zoom and hey dave kumar just
11:39 - dropped a nice little donation
11:42 - thank you so much bro i i actually
11:44 - remember you
11:46 - and and you're always showing up awesome
11:49 - stuff
11:49 - thank you so much we really appreciate
11:52 - you
11:53 - uh yeah let's continue for a great start
11:56 - yeah thank you so much bro okay
12:00 - um yeah so
12:03 - essentially we have this starter project
12:06 - right here
12:08 - so what i want you to notice guys is
12:12 - um we have this feed
12:16 - uh we are actually pulling in data from
12:19 - the firebase which is firebase.js yeah
12:25 - this is where your firebase config goes
12:27 - we will
12:28 - uh not worry about that okay yeah we
12:30 - will uh we will be doing that in a bit
12:33 - when we set up the authentication um
12:37 - let's actually do it right now so i'm
12:39 - just gonna i don't know if
12:40 - do i have no i don't uh let me quickly
12:43 - open up a new safari
12:45 - over here and let's actually
12:48 - open up firebase uh so now
12:52 - what we will be working on is
12:53 - essentially get this
12:55 - uh this project working
12:58 - and like have something have like an
13:01 - idea of what is going on because
13:03 - if we uh go ahead and open up the
13:06 - terminal
13:07 - and say ls and
13:10 - let's just go in here boom
13:14 - ls again because we are
13:17 - two folders deep okay oops
13:21 - okay there we go and now if i go ahead
13:24 - and say
13:26 - hey we got an other donation by sh
13:30 - uh sneha right i hope i pronounced your
13:34 - name correctly
13:35 - thank you so much bro uh we appreciate
13:38 - you a lot
13:39 - uh yeah uh on mo says please zoom
13:43 - boom uh so thank you so much for this
13:46 - lovely donation um
13:48 - yeah we really appreciate you uh and we
13:51 - love
13:52 - love you guys hey priyanshu what's up
13:55 - okay um let's go so if i go ahead and
13:58 - type in
13:59 - npm start uh it's gonna
14:03 - essentially start up the project i hope
14:05 - so because
14:06 - i've run npm install yeah there we go
14:10 - we are starting development server nice
14:13 - and
14:13 - we should soon be able to see it on
14:16 - local host
14:17 - 3000 now let's wait
14:21 - until this
14:24 - opens up yeah okay
14:27 - let's see what we got local host why
14:30 - didn't pop-up by the way
14:31 - yeah so it's um we can say it's not
14:35 - really working
14:36 - uh it's because we don't have the
14:38 - firebase hooked
14:40 - up um yeah so
14:43 - with that said let's actually work this
14:46 - out
14:47 - uh i will be creating a new project just
14:50 - because you guys
14:51 - um might need so
14:54 - if somebody is a super beginner with
14:57 - firebase it's actually a suite of tools
14:59 - provided by google
15:00 - i will be creating a new project uh just
15:03 - so you can
15:04 - you know um how to set it up but it's
15:07 - essentially
15:08 - it's oh i'm two projects away from the
15:10 - project limit i gotta do something about
15:12 - that
15:13 - uh yep so guys actually um watch out for
15:17 - this thing
15:18 - because once it runs out it's gonna give
15:20 - you a hard time for a month
15:22 - uh so yeah it's a suite of tools it's
15:24 - like nice uh
15:26 - nice stuff all you need to have to have
15:29 - firebase is a google account i'm sure
15:32 - most of you have a gmail account so yeah
15:36 - okay um let's type in here
15:40 - uh facebook mern that's good
15:43 - uh i don't need no google analytics and
15:47 - let's go ahead and create today's
15:49 - project let's see if i have any
15:52 - questions in here in the comment section
15:54 - by the time hey mustafa says yo
15:58 - keep supporting guys yeah you know
16:04 - okay uh will you show it on heroku as
16:07 - well yeah i can
16:08 - i can deploy it to heroku
16:11 - yep there we go uh so we are in
16:15 - the project that we just created
16:18 - and i will go to this uh
16:22 - this icon over there that's essentially
16:24 - adding a web
16:25 - application that's what we are doing at
16:27 - the moment
16:29 - uh let's go ahead and add the web app
16:32 - here
16:32 - you have to uh what you need to um
16:36 - make sure is that you check that box
16:39 - i forgot it last time it gave me a hard
16:41 - time okay
16:42 - if you see this that's good and now
16:45 - let's go ahead and type in here facebook
16:47 - mirn
16:48 - and just go ahead and register the app
16:52 - don't worry about uh firebase sdk
16:55 - and all these type of stuff
16:58 - we are not not gonna uh worry about that
17:01 - what you need to do
17:03 - is go to and now uh announcements
17:06 - authentication
17:08 - and go ahead and hit setup sign in
17:10 - method
17:12 - um coyote ask did i catch this live
17:15 - yes you did yes you did my man and what
17:19 - we will be doing
17:20 - is google uh authentication that's the
17:23 - one
17:24 - let's just hit it enable and
17:28 - the support email is gonna be whatever
17:31 - email you have
17:33 - yep uh david i made my first
17:36 - box with code tutoring uh
17:39 - during people let me okay and i kid you
17:43 - not go
17:44 - check one of the males cause he wrote
17:47 - hey priyanshu
17:51 - great job bro nice job
17:54 - okay um i think i'm gonna turn a bit up
17:57 - the
17:58 - air horn and yeah
18:03 - okay uh awesome now
18:07 - uh we are still we have 200 people in
18:10 - the house
18:10 - let's go guys drop some fire if you're
18:13 - uh
18:14 - if you're ready for today's build smash
18:17 - the like button if you like it
18:19 - and if you got a value out of
18:22 - any um videos by clever programmer
18:27 - let's go okay
18:32 - so yeah google authentication is already
18:34 - done
18:35 - nice and what we need to do is go to
18:38 - that
18:38 - icon hit project settings
18:42 - over there scroll down
18:45 - all the way to the bottom uh hit that
18:47 - config
18:48 - that will pull this thing up and you
18:51 - only need
18:52 - this stuff inside of the object
18:55 - yo uh doing react tutorial i would love
18:59 - to but i have exams at the moment
19:02 - not a problem pranav you will be able to
19:04 - watch this back
19:06 - after uh later on
19:09 - it's uh it's all good and
19:12 - firebase probably costs money right no
19:15 - it doesn't it's completely free
19:18 - uh you don't have to worry about it we
19:20 - guys will let you know in advance if
19:22 - something is going to cost you
19:24 - money but we haven't haven't done
19:27 - anything that literally costed money
19:30 - we are trying to focus on teaching you
19:33 - guys
19:33 - stuff that is essentially free
19:37 - and provides you a lot of value okay
19:40 - so we we don't want to break your bank
19:43 - okay uh now what you need to do is like
19:48 - essentially copy this uh snippet of code
19:51 - go to firebase.js delete this commented
19:54 - line and just uh
19:57 - paste it and i think we should be good
20:01 - to go
20:01 - very soon okay here we go nice
20:06 - um bruce bane asks whoa
20:09 - uh hey david will you be building the
20:11 - front end as well or just the backhand
20:14 - uh today we will focus on the
20:17 - back end hardly because a full moon
20:20 - build
20:20 - would it's actually a two session or two
20:24 - day
20:24 - thing um so yeah
20:27 - now not gonna build the front end today
20:30 - uh you can
20:31 - go ahead and search up sunny's video on
20:34 - that
20:35 - and um and then you will be
20:39 - you will have a step-by-step video guide
20:41 - on how to build
20:42 - this very front end all right let's hit
20:46 - sign in
20:48 - and it's gonna drop me over to that yep
20:51 - i'm gonna go ahead and sign in here and
20:54 - here we go
20:55 - so because at the moment um this is not
21:00 - we don't have a running server or
21:02 - something
21:03 - that it is attached to uh and
21:06 - that's why it's not showing anything but
21:08 - we can see
21:10 - that we are live over there which is
21:12 - nice
21:13 - uh so the widget is working uh the use
21:17 - what was that react context api is
21:19 - working because
21:20 - actually essentially these are uh these
21:23 - are using react connects api
21:26 - there we go and you can already notice
21:29 - the only difference
21:31 - uh between sony's build and this build
21:34 - is i changed the input form so in
21:38 - originally in sunny's build there is an
21:40 - other
21:41 - uh link oh no no a text box
21:44 - uh where you put the uh
21:48 - image link and then that was the thing
21:50 - you uploaded
21:51 - now we are gonna be using
21:54 - uh mongodb grid
21:58 - file system i think i think grid fs is
22:00 - grid file system
22:01 - i'm not sure by the way so we will be
22:04 - using mongodb
22:05 - grid fs to upload files
22:08 - so that we will actually be uploading
22:12 - files to mongodb
22:14 - it was a highly requested thing uh
22:18 - from us and we want to let you know guys
22:20 - that we hear you
22:21 - we are here for you and we
22:24 - are providing the value that you request
22:28 - and yeah so you guys ask we deliver
22:32 - that's that's how it works okay um
22:36 - real mobile app using javascript frank
22:39 - asks
22:40 - yeah we we are actually planning on
22:42 - launching a couple of uh react native
22:44 - uh sessions as well okay
22:48 - uh yeah let's go ahead and
22:53 - start working on the back end so
22:56 - out here i will be creating a new folder
22:59 - which i will essentially call oh that's
23:03 - the
23:03 - facebook mirror backhand oh my god okay
23:06 - sorry um
23:10 - i i i gave it the wrong name okay
23:13 - don't worry about the facebook mirroring
23:15 - backhand folder um that was my mistake
23:18 - okay so here is where the facebook
23:22 - backend project will go uh
23:30 - orif says you're so nice looking thanks
23:32 - bro
23:33 - uh okay so what i will be doing
23:36 - is opening up a new terminal and
23:39 - list out whatever we got i'm gonna go
23:42 - into facebook backend
23:44 - boom and clear out the whole terminal
23:47 - i think i'll just close these because we
23:49 - will worry about those later
23:51 - and what i want to do is essentially oh
23:54 - um
23:56 - start get version control and i can do
23:59 - that by
24:00 - typing in get in it nice
24:03 - there we go and i think i pulled it up
24:06 - yep
24:06 - and what we will be doing too is
24:10 - is pretty much just um initializing the
24:14 - mpm package
24:15 - okay so npm init there we go
24:18 - it's going to throw a bunch of questions
24:20 - and some stuff that you will never read
24:23 - at you so package name is actually good
24:26 - for
24:26 - facebook backend version uh it's one
24:30 - description um learn
24:33 - facebook backend
24:37 - project okay uh
24:40 - what you need to know is that
24:43 - we are not going to be doing the
24:45 - index.js entry point
24:48 - we will actually uh do
24:52 - server.js and whoa
24:54 - we have 222
24:58 - people watching this live two to two
25:02 - awesome guys thank you so much for uh
25:05 - being here with me and smash the like
25:08 - button if you
25:09 - got uh any value out of this
25:12 - live or any other
25:15 - for that purpose um
25:18 - yeah okay so what i will be doing
25:22 - is uh type in here
25:27 - dot server.js nice there we go test
25:29 - command don't worry about it git
25:30 - repository leave it empty keywords
25:33 - author it's gonna be me cozy nice
25:37 - license okay is this okay yes it is
25:40 - and what we will be doing is installing
25:43 - all the dependencies at once i don't
25:46 - want to worry about uh
25:48 - any of those later and yes uh sri bassam
25:51 - asks if this is the package.json file
25:55 - yes my man this is the package.json we
25:58 - just have it
25:59 - uh ready so before we go any further
26:02 - let's close it up uh so it doesn't mess
26:04 - everything
26:05 - up i will um clear out the terminal so
26:09 - you guys can see it
26:10 - nicely and what i will be typing in here
26:13 - is npm
26:14 - install or mpmi and we will uh
26:17 - use express mongoose uh
26:21 - cores motor
26:24 - motor grid fs
26:28 - storage okay there is already a lot of
26:32 - stuff that we don't know so express is
26:35 - actually
26:36 - the server side javascript that we will
26:38 - be using today
26:39 - it's a framework uh which is running on
26:41 - the node.js runtime so
26:43 - if you guys don't know what the mern
26:46 - stack is
26:47 - uh oops wrong button uh
26:51 - sonny mer yeah
26:54 - so the murn is actually standing for
26:58 - mongol db express
27:02 - js oops can't speak while i'm typing
27:06 - react js
27:09 - and node.js so node.js is actually a
27:13 - javascript runtime
27:15 - it's a nice little stuff mongodb
27:18 - is the database that we will be using to
27:20 - store not just
27:21 - our posts and text and stuff like that
27:24 - that we did earlier
27:26 - we will actually store images inside of
27:28 - there
27:29 - um and we will be using something called
27:33 - the grid fs to store
27:36 - images and we will also use
27:39 - mongoose to connect to our
27:42 - database and express.js will be
27:46 - running on our server react is our front
27:48 - end
27:49 - nice so yep that's pretty much it
27:53 - okay hold on uh boom
27:57 - okay oh okay hold on a moment
28:01 - yeah there we go okay so what we will be
28:04 - doing
28:06 - sachin says david rox thank you so much
28:08 - bro
28:09 - thank you so much okay
28:13 - what we will be doing is type in npm
28:16 - install
28:16 - express bungles course motor motor grid
28:19 - fs storage so motor is basically just
28:21 - accepting the image motor grid fs
28:24 - storage is going to be
28:25 - the actual storage where we uh store
28:28 - uh our images uh
28:32 - grid stream is gonna grid fs stream is
28:34 - gonna be uh responsible for
28:37 - uh reading out and rendering out
28:41 - stuff to the user's screen
28:44 - uh we will also have body parser
28:48 - we will also have path and pusher
28:52 - because this app is going to be a real
28:55 - time
28:56 - okay um yep i think that's pretty much
29:00 - it
29:00 - let's go ahead and install everything
29:04 - and while it's doing its stuff let's
29:06 - actually
29:07 - go ahead and set up our mongodb
29:10 - database why is my hair coming all the
29:13 - way yeah
29:14 - okay mongodb.com now guys
29:18 - who has worked who worked with mongodb
29:21 - let me know in the chat i want to know
29:23 - if you know mongodb
29:25 - if you know this awesome nosql database
29:28 - let me know guys in the comment section
29:29 - down below because this is some awesome
29:32 - stuff that is highly in demand
29:34 - in the job market right now along with
29:37 - the other three stuff inside the mirror
29:40 - pre-answer says it's the first time nice
29:43 - awesome
29:44 - so mongodb priyanshu priyanshu mongodb
29:47 - hey
29:48 - um yeah uh rukia says me
29:52 - um it's me because you're you have used
29:55 - it the first time or if you have oh no
29:57 - i asked if you have yeah okay i see a
29:59 - lot of people
30:00 - already have used it nice awesome
30:03 - okay
30:06 - um yeah i see a couple of first-timers
30:09 - and i also see
30:11 - a couple of people who have already used
30:13 - it i work with a lot
30:15 - of jason says kebab it's uh pretty much
30:18 - the same stuff
30:19 - i mean we're literally gonna be storing
30:21 - stuff in a json format
30:23 - pratham says yes i used mongodb mustafa
30:26 - says
30:27 - me too i used it nice guys
30:30 - is it the beginning um almost the
30:32 - beginning
30:34 - you're not not too late okay
30:37 - so what we will be doing is so it's it's
30:40 - actually a
30:41 - freezer for those of you who are uh new
30:44 - to mongodb this is a completely free
30:47 - i mean it you you can also upgrade of
30:50 - course upgrade to
30:51 - uh paid version but yeah we will be
30:54 - doing using the free
30:55 - uh completely free stuff um and this is
30:59 - going
30:59 - this is a nosql database
31:03 - and this is going to allow us to store
31:05 - in our images and post since
31:07 - every single detail okay
31:10 - if you haven't used mongodb uh
31:14 - visit fail
31:18 - this is your button to click if you
31:20 - already have
31:21 - like me sign in is the button you want
31:25 - to go for
31:26 - um essentially it's super easy to uh
31:30 - set up you need an email address a
31:32 - password of course
31:34 - and then you will be guided through now
31:37 - because i already have it i will just
31:40 - sign
31:40 - in and yep let's go ahead and we are
31:45 - signing
31:46 - into mongodb are we using mongodb
31:49 - or firebase we are going to be using
31:52 - both
31:53 - but we are not going to be using the
31:55 - firebase database
31:56 - we will be using mongodb instead so
31:58 - firebase today is only going to be
32:00 - used for authentication and hosting
32:04 - i just came in what's he doing uh asks
32:08 - kion pillai um i'm doing the facebook
32:11 - clone
32:13 - um tell marks i said hi and i will be
32:16 - doing it in the
32:17 - mern stack okay so what i will be doing
32:21 - here
32:22 - so those of you who are using mongodb
32:24 - for the first time let's just go ahead
32:26 - and build a cluster it's going to be
32:27 - inside in the middle uh let's just go
32:30 - with that and you will be able to follow
32:32 - uh the follow up once we have the screen
32:35 - again
32:36 - i just need to go ahead and create a new
32:38 - project alongside with those who have
32:40 - already used mango db
32:42 - so i'm going to click new project right
32:44 - there
32:45 - um i will give it a name i will call it
32:47 - facebook
32:48 - mern clone
32:52 - okay nice
32:55 - i will click yes this is the place where
32:57 - you can add other members i'm not
32:59 - working with anybody so
33:01 - create new project uh radu mihai
33:04 - says i love learning things nice
33:08 - that's that's the mindset bro so anybody
33:11 - who is new to mango db
33:12 - uh was on this screen so let's go ahead
33:15 - and build a cluster with them
33:17 - uh we will be using javascript of course
33:20 - and this is where you want to go ahead
33:22 - and create a cluster
33:24 - now you can go with the paid version if
33:27 - you
33:27 - want to pay but we will be using it free
33:30 - because it's completely enough
33:31 - don't worry about any of the stuff going
33:34 - on around here
33:37 - yeah just pretty much leave everything
33:40 - just the way it is and click that
33:42 - create cluster button down below
33:45 - uh nice and this is essentially going to
33:48 - take a couple of minutes
33:50 - it says it's uh one to three minutes
33:52 - well it's not
33:53 - um it's a little longer usually but in
33:56 - the meantime
33:57 - we will be setting up network access
34:01 - um let's actually do it a bit later
34:04 - because
34:05 - okay let's actually do it a bit later
34:08 - let's see how our uh
34:09 - yeah so everything let's go back to the
34:11 - code everything
34:12 - is installed and what we want to do
34:16 - is let's first deal with the
34:21 - okay so if you guys can yeah
34:25 - so there is like 2k in the version
34:28 - control stash
34:29 - um we don't want that to happen that's
34:32 - because uh there is node modules and
34:34 - there is a meme i usually show
34:37 - so node modules github
34:40 - meme so what happens if you're not doing
34:44 - this step with me is
34:47 - where we ah there it is um
34:50 - that's pretty much what's gonna happen
34:52 - to your github whenever you push this
34:54 - code up
34:55 - uh so there is this node modules it's a
34:57 - couple of hundred megabytes already
34:59 - because we have uh we installed lots of
35:02 - dependencies
35:03 - going on here uh these are all added
35:06 - here
35:07 - and if you're not following me
35:10 - this tab it's gonna blow the whole thing
35:12 - over
35:13 - okay guys get the energy up
35:17 - let's get started coding what we will be
35:20 - doing
35:21 - first is add a dot git ignore
35:24 - file uh we're just gonna type in node
35:27 - module
35:27 - oops modules in here and let's save it
35:31 - and now that version control just went
35:33 - back to three
35:34 - that's what we want to see okay nice
35:36 - stuff
35:37 - that is uh so get ignore
35:40 - that was it let's go back to
35:41 - package.json two things that we need to
35:44 - do here
35:45 - uh one of them being is set the type to
35:47 - module
35:49 - and enable es6 uh coding in node.js
35:53 - now you want you might if you were here
35:55 - for the first time and you haven't seen
35:56 - any of these marine videos
35:58 - you might be surprised because es6 is
36:02 - still
36:02 - in experimental um
36:05 - [Music]
36:06 - in experimental state but
36:09 - we know and you know that ex es6
36:12 - is the way uh is the
36:16 - is in demand right now in the job market
36:19 - so we will be doing
36:20 - es6 stuff therefore we need to type in
36:24 - type
36:25 - and select the module that will allow us
36:28 - to
36:30 - do the exact same stuff that you you
36:32 - yeah that you do
36:33 - with uh sunny so we will be importing
36:36 - a package from the other package
36:41 - um no importing a module from the
36:43 - package yeah
36:44 - that's the way and yes he
36:47 - makes a aliens in area 51 es6's
36:50 - experiment
36:51 - yes es6 is experimental okay
36:56 - jokes aside um so yeah and we will be
36:59 - importing a module from a package
37:01 - that's going to be the terminology that
37:02 - we will be using instead of requiring it
37:05 - that's it the other thing we need to do
37:08 - is type start in here and we will just
37:12 - say
37:12 - node server.js
37:17 - and add the comma at the end of the
37:19 - previous line nice there we go
37:22 - with that said uh package.json
37:25 - is ready um and we we actually
37:28 - if you you guys might be interested in
37:31 - why we added this stuff
37:32 - over here it uh it will be needed for
37:35 - heroku to be able to start the
37:37 - application by itself nice
37:39 - uh with the cover let's close this file
37:41 - as well
37:42 - and create a new uh
37:45 - file inside of the back end
37:48 - project which we will call uh server.js
37:53 - and we just got a nice lovely donation
37:55 - by anupam
37:57 - uh he goes uh oh
38:00 - it's just um okay it's without tax thank
38:02 - you so much bro um
38:04 - we massively appreciate you uh and stick
38:08 - around
38:08 - and be with us and get the most value
38:11 - out of it and get a job with us
38:13 - okay thank you so much by the way
38:16 - and yeah we love the we love you guys
38:19 - okay
38:20 - um can you make your face come a little
38:23 - bigger
38:24 - um at the moment i can't uh later on
38:27 - i will upgrade it's essentially it's
38:29 - just a built-in uh
38:30 - webcam but i uh new one is on the way
38:34 - okay let's put it that way okay now i
38:36 - will be closing the terminal so i can
38:39 - free up some space
38:40 - uh yeah
38:44 - okay um what we will be doing is
38:47 - essentially just uh sketching up the out
38:49 - the app
38:50 - so that we will know what to uh what we
38:54 - will be working with
38:56 - okay uh
38:59 - type in this is where we will be
39:01 - importing
39:02 - stuff this is where we will be
39:05 - configuring the application so this is
39:07 - the app config part
39:10 - then we will have a couple of
39:12 - middlewares
39:14 - then we will have some db config going
39:16 - on
39:18 - um
39:21 - once i learn how to type we will also
39:24 - have a couple of
39:26 - api routes nice and we
39:29 - will i think that's that's no no
39:32 - we we will have a listener nice okay
39:35 - okay there is a listen okay
39:39 - so this is how the structure of this
39:41 - application is going to be
39:42 - it's completely unnecessary to write in
39:45 - here if you don't want to but it just
39:47 - helps you a lot
39:48 - to see what you're working with and
39:50 - separate all the stuff that we will be
39:52 - working
39:53 - with okay now i have a bit of a snippet
39:56 - of code that
39:58 - i'm just gonna paste in here it's
40:00 - essentially just importing
40:02 - oh it's essentially uh importing
40:04 - everything
40:05 - uh every module from its uh
40:10 - package okay uh
40:14 - let us do yeah now i'm kind of missing
40:17 - that yeah priyanja i know i know
40:19 - guys get the energy up let's drop in the
40:22 - comments if you like it
40:24 - uh let's stop here for a moment and so
40:27 - let me know guys
40:28 - if you are finding this uh interesting
40:30 - if you are hyped about it
40:31 - if you are ready to put this application
40:34 - on your portfolio
40:36 - and if you want to have a killer project
40:40 - that will get you a job guys let me know
40:43 - who is excited who is ready to build
40:46 - this application
40:47 - with me today um and yeah
40:51 - on that i think um
40:54 - we can go ahead uh nico says story
40:57 - concentrating on the
40:58 - it's all good bro okay
41:01 - yeah there we go
41:04 - so with that said uh
41:08 - okay what another thing we will be doing
41:10 - is
41:13 - this this is essentially just uh setting
41:15 - up the
41:16 - all the gridifs and mango stuff
41:20 - this is just a nice way to doing that
41:23 - yeah clever programmer you are doing
41:24 - great job
41:25 - thank you so much bro uh sherry
41:28 - i i hope i said your name correctly
41:30 - thank you so much we appreciate you
41:32 - brother
41:33 - um preacher when do you sleep man he
41:36 - doesn't sleep
41:38 - uh yeah pumped up uh let's go
41:42 - you guys are amazing thank you so much
41:44 - yeah
41:45 - what's the use of pusher though great
41:48 - question
41:50 - uh that's a thing which we will be using
41:53 - to make the whole application real time
41:56 - uh i hope you're excited for that so
41:58 - mongodb is normally not a real-time
42:00 - database
42:01 - um and firestore if you remember
42:04 - sun is built it actually is and
42:07 - whenever you're like submitting
42:09 - something and just hit uh hit the return
42:11 - and
42:11 - and it's actually getting added to the
42:13 - database at the same time and it
42:15 - re-renders just that part
42:17 - that's what we will be um
42:22 - that's what pusher is for
42:25 - okay um yep i'll remove this overlay
42:28 - nice and push it pretty much just a
42:32 - little bit between front
42:33 - and back and right yes that is correct
42:36 - and it can actually transmit data but
42:38 - we will not worry about that just now
42:41 - uh we are not going to do it the
42:43 - efficient way later on
42:45 - we will uh i will actually drop a
42:47 - session where i'll make the application
42:49 - crazy efficient when it just gonna add
42:52 - the new stuff
42:53 - on top of everything but for now um
42:57 - we're just going to be focusing on
42:59 - getting the things working
43:00 - and we will just re-sync whenever
43:02 - something happens so pusher is actually
43:04 - able to push the data that was just
43:08 - added to mongodb
43:10 - to uh to the front end so yeah
43:14 - um okay which has a low number of
43:17 - concurrent collections limit
43:19 - it's actually a hundred uh concurrent
43:21 - connections for free
43:23 - but we will not reach that okay
43:26 - let's create our application and let's
43:28 - actually uh
43:29 - create our very first api route today
43:33 - what we will be doing is essentially
43:35 - just typing in uh so
43:36 - let's just create an application
43:38 - instance so
43:40 - const app equals express
43:44 - oh express
43:47 - boom and the other thing we want to do
43:50 - is const
43:51 - port oops uh port
43:55 - and normally if we just wanted it on our
43:58 - local server we could just literally
43:59 - just type in 9000 but that boring way to
44:02 - go about it
44:03 - we definitely want to go ahead and
44:05 - upload it to and then deploy it to
44:07 - heroku
44:08 - so we will type in process dot in the
44:10 - wireman
44:11 - dot port and
44:14 - two of these standing lines i don't know
44:17 - these names
44:18 - um and that's where the 9000
44:21 - will go okay
44:24 - so it's lit it's pretty much the setting
44:27 - up
44:27 - uh so if there is a process a
44:31 - m file which is added by
44:35 - heroku by default we will use that
44:39 - but if there is if that's not
44:40 - non-existent we will use 9000 that's
44:43 - pretty much it
44:44 - and one thing which i always forget so i
44:47 - will add that
44:48 - right now is the middlewares um
44:51 - if you guys have watched the messenger
44:53 - clone build with me
44:55 - i think on saturday uh
44:58 - yeah you can you can watch how how i uh
45:00 - forget about it
45:02 - okay so what we will be using uh what we
45:04 - will be doing and pasting here is uh
45:06 - app.use body parser json it's
45:09 - essentially making the app being able to
45:12 - read write and and work with json files
45:15 - the other one
45:16 - is just setting up the course headers
45:20 - okay um hey
45:23 - kelvin thank you so much for this lovely
45:26 - five dollar canadian donation massive
45:30 - appreciation
45:31 - and thank you so much for uh thank you
45:33 - so much for it and
45:34 - for being for you being here um
45:37 - i will make it a little smaller so i can
45:39 - read it out loud
45:40 - you guys keep giving us massive value
45:43 - and i can't help but share my
45:46 - appreciation to whole cp team
45:47 - thank you david keep it going thank you
45:49 - so much bro for being here with us
45:52 - we are delivering this for you and and
45:55 - we are
45:55 - happy that you guys like it so much okay
46:00 - nice to have you in a family by the way
46:03 - okay
46:04 - uh yeah so let's actually create our
46:08 - very first api
46:10 - endpoint uh let's forget about dbconfig
46:13 - just for now uh and what we will be
46:15 - doing is basically it's just gonna be a
46:17 - health check and a
46:18 - nice little thing uh that we create
46:21 - so that we know that our application is
46:24 - up and running
46:25 - so what we will be typing in is app.get
46:30 - a slash between these single quotes
46:34 - and we will have a request a response
46:37 - and what we will be doing is set the
46:40 - response status
46:42 - to 200 and send
46:45 - a hello
46:49 - world now guys um
46:52 - probably there is a couple of you who
46:54 - don't even know what i've done here and
46:56 - that's
46:56 - completely okay because i'm just gonna
46:58 - go ahead and
46:59 - explain everything so app
47:02 - remember uh
47:05 - this app the instance that we just
47:07 - created so whenever this applique
47:10 - app uh receives a request
47:13 - so we we are creating apis which is
47:16 - essentially
47:17 - um request and response and in between
47:20 - some logical stuff
47:22 - uh but yeah so whenever the app gets a
47:25 - request
47:26 - with a get method so if you don't know
47:28 - what get is it's basically downloading
47:30 - data from the database
47:32 - not the database from the server and
47:34 - there is like post put
47:36 - delete a lot of other stuff i didn't
47:39 - even know all of these
47:40 - just like that so get is downloading
47:43 - data from the server
47:45 - or post is uploading delete it's of
47:48 - course it's deleting
47:49 - put is essentially it's a delete and
47:52 - a post so it's pretty much like um
47:56 - it's more like uh changing something
47:59 - so whenever you okay let's let's put it
48:02 - that way
48:03 - so when you were um
48:06 - uploading a image
48:09 - to facebook you are using a post request
48:12 - that will be uploading everything to the
48:14 - server
48:15 - then to actually show it to you you will
48:18 - need to make a get request so that you
48:20 - will be able to download it
48:22 - onto your screen and if you are
48:25 - changing your profile picture um you are
48:28 - you
48:28 - you are doing a put request right i
48:31 - i hope it actually uh made it clear
48:35 - okay uh whoa we are still ha we still
48:38 - have
48:39 - 895 people with us
48:42 - awesome stuff guys uh let's go
48:45 - okay so while we will be yeah uh and
48:48 - and whenever we receive this kind of
48:50 - request on the
48:52 - slash so basically the root it will fire
48:55 - off
48:55 - a uh callback function which has a
48:58 - request and a response parameter
49:01 - and there is we will set the response
49:03 - parameter to 200 status
49:06 - which essentially uh says
49:09 - okay and we will
49:12 - send back hello world um kian says mine
49:16 - says
49:17 - 19169 yeah because you're just
49:19 - watching youtube but we are live on
49:21 - twitch we are live on facebook
49:24 - on i think two different places so yeah
49:27 - all in all it's 200 now stick with me
49:30 - guys and if you
49:31 - guys uh got some value out of this video
49:34 - hit the like button okay
49:38 - uh yeah there we go and we will actually
49:42 - make this application listen to
49:44 - our requests and what we will be doing
49:47 - is
49:47 - basically typing apple app.listen
49:51 - on the port we defined up here
49:55 - and whenever so so it's
49:58 - basically when when we start listening
50:00 - with the application
50:02 - we will go ahead and console.log that we
50:05 - are listening on localhost
50:06 - and the port which we have
50:10 - and i am here actually using
50:13 - a string interpolation or
50:17 - the other thing is string concatenation
50:19 - i think uh
50:20 - so i'm using backticks over here instead
50:23 - of
50:23 - normal single quotes okay
50:27 - um let's go guys
50:31 - who's who is pumped about having their
50:34 - own
50:34 - first api route let me know in the
50:36 - comment section down below
50:38 - and yeah let's go ahead and fire this
50:42 - server
50:42 - up i will be opening up my terminal
50:46 - clear out everything so you guys can
50:48 - actually see what i'm doing
50:50 - and i will type in nodemon just simply
50:54 - just like that
50:56 - and this is actually starting up my
50:58 - server
50:59 - and as you can see there is the
51:01 - listening on local host
51:03 - 9000 which i've defined up here
51:06 - okay uh nice let's
51:10 - go to our postman oops i need to zoom in
51:13 - a
51:14 - bit uh yep
51:17 - and i think i already have all the api
51:20 - uh stuff going on here
51:22 - uh yeah and just just type in localhost
51:25 - 9000 and
51:30 - because it says hello world we know this
51:32 - app is
51:33 - up and running great job guys you
51:36 - just created your very first
51:39 - own api route
51:43 - this this deserves two air horns
51:46 - actually
51:49 - okay with that said let's go back
51:52 - and let's actually jump into the middle
51:55 - and upload an image to mongodb guys
51:58 - who knows how to upload an image to
52:01 - mongodb
52:02 - drop it in the comment section drop it
52:04 - in the chat let me know if you're
52:06 - excited let me know if you know what
52:08 - will
52:08 - what we will be doing right now
52:11 - um and yeah with that said
52:14 - let's actually stretch a little because
52:18 - guys this is gonna be
52:21 - the build this is gonna be the new thing
52:24 - rookia goes let's go
52:26 - yes play says
52:29 - i like your hairstyle thank you uh yeah
52:32 - and
52:33 - a thoroughball asks if it's binary nope
52:36 - um
52:36 - i mean it could be binary i don't
52:39 - actually know
52:40 - how the grid fs works but
52:44 - yeah i i i it could be binary it um
52:47 - so the way it it works is essentially
52:50 - cutting up to 255 uh kilobyte
52:54 - chunks uh our uh image and it will be
52:58 - like cut up into small little uh pieces
53:02 - and then we will have everything um set
53:05 - up
53:06 - uh and it will map together the stuff
53:09 - whenever we are retrieving those
53:11 - okay now with that said uh imat goes
53:14 - let's do it
53:16 - you think let's do a tree let's do it
53:18 - awesome
53:20 - yeah let's go so what we will be doing
53:24 - is let's actually connect to our mongodb
53:28 - database by the time this should have
53:30 - finished
53:31 - and what we will be doing first is set
53:34 - up a
53:35 - database access and a network access so
53:38 - let's start with the network one
53:40 - so we will be adding an ip address where
53:43 - we will be able
53:44 - to access to this database and we will
53:48 - hit this
53:49 - allow access from anywhere and guys a
53:52 - huge
53:53 - huge disclaimer let me actually
53:58 - write it out okay
54:01 - this disclaimer do not do this
54:05 - in a production environment you don't
54:07 - want to allow
54:08 - access from anywhere um
54:12 - this is just for uh teaching purposes or
54:15 - educational purposes
54:16 - we are not we don't want to allow access
54:19 - from anywhere
54:20 - okay let's hit confirm let's go ahead
54:22 - yeah
54:23 - and it's going to do its stuff uh
54:26 - exactly
54:26 - only on testing screwed if on production
54:29 - that
54:30 - is right a thoroughbar that is exactly
54:33 - what
54:33 - is it okay nice
54:36 - uh let's go and set up the database
54:39 - access
54:40 - what you want to do is just type in here
54:42 - in the uh
54:44 - user field admin and then auto generate
54:48 - a secure password
54:49 - and then you want to save it somewhere
54:51 - very very safe where you will be able to
54:54 - uh
54:54 - return retrieve it because this is the
54:57 - last time you're gonna see this password
54:59 - and then
54:59 - let's go ahead and oh um
55:02 - let's go ahead and hit add user
55:06 - this is the only thing you need to worry
55:07 - about right now
55:09 - uh don't have to worry about all these
55:11 - rules and stuff okay
55:13 - and we just got another lovely donation
55:16 - five pound lovely donation which is a
55:18 - massive amount
55:20 - thank you so much lux and she goes i
55:22 - just finished
55:23 - react facebook clone front-end tutorial
55:26 - this is the place where you want to be
55:29 - uh there is a tiny little bit of money
55:31 - uh modification
55:33 - between the starter project down below
55:35 - and the sun is built
55:36 - um we will be covering that okay
55:41 - nice stuff by the way stick around and
55:43 - you will have a
55:44 - full moon facebook clone that's the way
55:47 - to go about it
55:48 - okay um
55:51 - okay and let's go back to our clusters
55:54 - it's actually deploying
55:56 - uh our changes which is nice
55:59 - and what we will be doing is essentially
56:01 - just connecting to our database
56:04 - with that button let's go ahead and hit
56:07 - connect your application and that
56:11 - is the string you want to copy
56:14 - okay let's hit copy and
56:17 - guys actually notice that there is two
56:20 - little
56:21 - uh parameters that we will need to pass
56:23 - in one is password and one is db
56:25 - name okay um we will hard code the db
56:29 - name
56:30 - and we would this is where your password
56:32 - will go
56:33 - okay let's go back to our code and what
56:35 - you want to do
56:36 - is type in here create a new const
56:40 - which will uh be a uri
56:43 - and you wanna just paste your um
56:47 -  uri in here i will close
56:50 - everything out so that you guys can
56:52 - actually see
56:53 - everything perfectly and in the database
56:56 - is going to be the facebook database
57:00 - which we will be just go
57:02 - uh fbdb uh hi the best from stream
57:05 - we have crazy people um
57:09 - i mean i can't really hide it from
57:12 - for now i'll just uh yeah i just
57:16 - go go go this way guys don't spam
57:20 - the facebook clone my facebook loan okay
57:23 - okay yeah so this is uh
57:28 - this is the full uri that we will
57:30 - be doing and
57:32 - we just received an other lovely
57:33 - donation from south africa
57:36 - uh 35 zar
57:40 - and marius thank you so much
57:43 - first of all we really appreciate you
57:46 - brother
57:47 - thank you very much and he goes uh
57:51 - the eye is called a pipe usually ii
57:54 - means
57:55 - or exactly oh yeah it's called a pipe
57:58 - okay
57:58 - thank you so much for yeah so the name
58:01 - of that character
58:02 - is pipe okay thank you so much and yeah
58:06 - uh two of them
58:07 - means or that that is right and cheers
58:09 - from south africa
58:10 - cheers bro for staying here with us um
58:15 - yeah i i think it's pretty late over
58:16 - there i think it's around like
58:18 - 10 p.m or something okay
58:22 - uh yeah let's go ahead
58:25 - and now we will need two different kind
58:28 - of connections to
58:29 - our mongodb uh i'm just gonna pass them
58:33 - inside of here and so
58:37 - notice that there is a tiny bit of a
58:40 - difference so we will be using the first
58:43 - one
58:43 - um i can do it a much nicer way so we
58:47 - will be using
58:48 - this connection uh
58:51 - hold on a moment so we will be using
58:55 - this
58:56 - uh whenever we are uploading an image
58:58 - and it's basically going
59:00 - it's gonna go ahead create a connection
59:03 - it's going to save it to a variable
59:05 - we will be able to work with that and
59:07 - then
59:08 - it's going to be like delete the whole
59:10 - thing and drop everything
59:12 - now on the other hand
59:17 - we will have another one mongoose
59:19 - connect which is like a general
59:21 - connection
59:22 - and it's um it's essentially just a pool
59:24 - of connection and it will be used
59:26 - whenever
59:27 - uh you want to use it okay
59:31 - uh with that said let's actually set
59:34 - up our db connections okay okay i just
59:38 - did
59:39 - okay um but one thing we want to
59:43 - definitely do
59:44 - is log when
59:47 - both connections whenever they are up
59:49 - and running
59:51 - so we will do con
59:54 - uh yeah con because we defined it as
59:57 - quan
59:58 - so we will say con once
60:02 - and yeah once
60:06 - open uh we want to fire off a callback
60:10 - function
60:11 - and we were just going to go ahead and
60:13 - console.log
60:14 - uh db connected
60:18 - nice and the other one is gonna be
60:22 - um
60:26 - yeah uh i usually ask didn't get how how
60:29 - this copy is pasted suddenly without
60:31 - copying i actually did copy it from my
60:33 - other screen
60:34 - um yeah i'm just trying to save a lot of
60:37 - time and energy
60:39 - for you guys and i'm more like um i'm
60:42 - just
60:43 - some some snippets i just uh copy paste
60:46 - and some of them
60:47 - i type it out as it is
60:50 - and which whenever i'm copy pasting i am
60:53 - making sure that
60:54 - we are actually understanding what is
60:58 - going on
60:58 - behind the scenes okay with that said
61:01 - let's go
61:02 - and let's go with the other um
61:06 - connection so uh we will say
61:10 - oh mongoose.connection
61:14 - connection yes and again
61:17 - once and open
61:21 - we will fire off and other uh callback
61:24 - function
61:25 - which will do the exact same thing so
61:28 - console log
61:30 - vb connected and that's kind of like
61:34 - kind of what we want to do um
61:37 - yeah and if you guys see 2db connected
61:40 - that is awesome hey we just received
61:43 - that other donation by
61:46 - ayush gupta thank you so much bro
61:49 - we really appreciate it thank you so
61:51 - much
61:52 - and yep and
61:55 - he says congrats uh congrats team for
61:58 - 800k
61:59 - subs thank you so much
62:03 - please drop a react crash course more
62:05 - inclined
62:06 - covering specific topics like hooks
62:08 - props rotor uh redux
62:10 - etc
62:13 - we are actually gonna do that very soon
62:16 - stay tuned brother
62:17 - we hear you guys we will be doing that
62:20 - very very
62:21 - soon okay
62:24 - um there is some kind of russian text
62:27 - going on as well in the chat anybody who
62:29 - is russian let's respond to him
62:31 - please him or her okay
62:35 - um yep so with that said
62:38 - uh we pretty much have our db connection
62:41 - done
62:42 - and now what we want to do is
62:44 - essentially set up
62:45 - everything so that we for the
62:49 - image saving stuff okay so what we will
62:51 - be doing
62:52 - is pretty much set up the grid fs which
62:55 - okay actually let's create the grid fs
62:58 - so we will be using a
63:00 - lat gfs and that's going to be our
63:03 - grid fs and what we will be saying is
63:08 - grid fs equals um
63:12 - there's some thing going on on my
63:15 - keyboard
63:16 - okay i'm back uh so grid fs is going to
63:20 - be grid
63:22 - con dot db and
63:25 - mongoose
63:29 - this is pretty much setting uh sending
63:31 - the target of this gridifs so the
63:32 - connection database
63:34 - inside of mongodb uh yep
63:37 - and the other thing we will be doing
63:40 - inside of here
63:41 - is define the actual collection where we
63:43 - will save all these images
63:45 - so gfs.connect
63:49 - collection okay it's a collection um
63:53 - [Music]
63:54 - and we will say images in here so we
63:56 - just pretty much just creating a
63:58 - collection to store
63:59 - all our images uh inside of there hassan
64:02 - asks uh is mongodb supporting real-time
64:06 - db like the uh firebase no uh
64:09 - originally it doesn't but we will make
64:11 - it work uh
64:13 - real time e real timey i don't know if
64:16 - it makes sense
64:17 - uh so yeah we will be doing there some
64:19 - kind of real time stuff
64:20 - uh it needs a little bit of extra work
64:23 - but other than that
64:24 - um it doesn't support it okay
64:27 - so inside of connect con once
64:31 - there is nothing else for us to do what
64:34 - we will be doing
64:35 - is create our actual storage where we
64:38 - will be store
64:38 - all our images um
64:43 - okay and we will be typing in
64:47 - so we will create our storage and this
64:49 - is going to be a new
64:51 - grid fs storage of course
64:54 - and inside of there we will have the url
64:58 - which is going to be uri so if you
65:00 - guys
65:01 - uh just added it inside of here
65:06 - um i think it's a lot better to have it
65:09 - like in a separate
65:11 - um separate um
65:15 - variable so that you can access it a lot
65:17 - of a lot of other times
65:19 - hassan asks uh i should add extra mpm
65:21 - packages
65:22 - bro it's all up here uh
65:25 - these are the packages that we imported
65:28 - and
65:29 - if i i think you were the one who asked
65:31 - about the
65:32 - real-time stuff pusher is responsible
65:35 - for making mongodb
65:36 - real time okay nice let's go back and
65:39 - let's get to work
65:40 - so we will have a url and we also wanna
65:44 - oh not there there
65:48 - and we will also have a uh have a little
65:51 - bit of
65:51 - file inside of here because we're
65:54 - actually
65:55 - adding a file um
65:58 - and we will have this is going to be in
66:01 - the request
66:03 - we and the in the function that we want
66:06 - to fire off we have the request and the
66:08 - file
66:09 - uh parameters and let's go ahead
66:12 - and return a new promise
66:15 - right written new promise
66:19 - which will either resolve or reject
66:23 - uh yep and
66:28 - let's actually define the file name
66:32 - uh domain says awesome love you guys
66:35 - thank you so much bro we really
66:36 - appreciate you stick around till the
66:38 - very end because this is going to be
66:39 - some juicy stuff
66:41 - all righty uh so const file name
66:45 - is gonna be so this is where you
66:48 - get to uh add whatever um
66:52 - uh file name you ever want otherwise
66:56 - by bro make sure to watch it later uh
66:58 - and i will be creating a
67:01 - file name which will say image
67:04 - a dash and the um
67:08 - and and the date now in in some kind of
67:11 - programmatic form
67:13 - okay so let's go and type in image
67:16 - dash and this is where um
67:19 - the date dot now will go
67:23 - oh oops okay here we go
67:26 - and we also want the extension to
67:30 - display
67:30 - because that's part of the uh
67:34 - part part of the file of course so we
67:37 - will be passing in the path.extension
67:40 - name
67:41 - and it's going to be the file the or
67:45 - from from the file the original name so
67:48 - this is essentially just wrapping out
67:50 - the extension
67:51 - from the original file name and just
67:52 - chuck it in there
67:54 - okay with that said uh we also need to
67:57 - add a
67:58 - file info which is not gonna be
68:03 - um something crazy fancy
68:06 - so the file name is gonna be uh
68:10 - file name and we will have a
68:13 - bucket name which is gonna be
68:17 - and guys make sure that you know what
68:20 - you're doing
68:21 - because we are typing in images again
68:23 - but please
68:24 - notice that we are saying
68:28 - images here as well as here
68:32 - so these two literally have to be the
68:34 - same otherwise it's gonna be um
68:38 - it's not gonna work out well uh
68:42 - biff okay um
68:45 - parth says i need help with cyber
68:47 - security class i mean we are actually
68:49 - planning on dropping some security
68:51 - content
68:52 - okay uh let's go ahead and
68:56 - let's resolve everything boom
68:59 - resolve and we will say file info
69:03 - awesome with that said
69:07 - we pretty much have our storage uh done
69:10 - but we need to set it uh so that this is
69:14 - gonna be used as the default storage
69:16 - so const upload and
69:20 - this is going to be the method that we
69:21 - will be using to upload the file
69:24 - and we will say uh
69:27 - motor and motor is essentially a package
69:30 - in node.js that you can use to upload
69:34 - images and files and
69:36 - whatnot and we will just pass in this
69:39 - storage
69:40 - right so that's pretty much setting up
69:44 - the
69:44 - storage and we should now be able to
69:49 - upload a file so
69:52 - who is excited to upload a file to
69:55 - mongodb
69:56 - who has done that who hasn't let me know
69:59 - in the comments because
70:01 - let's just try to make this um
70:04 - lecture-ish
70:05 - thing uh transformed to a
70:08 - conversation where you guys are
70:11 - like communicating with me and i'm
70:13 - answering like literally i'm answering a
70:16 - lot of comments inside of here
70:18 - so guys let me know
70:21 - if you have done this before if you know
70:24 - what's happening if you're completely
70:26 - new
70:26 - let's make this a conversation let's
70:29 - build a relationship
70:31 - um yeah and i need to drink because
70:34 - okay so sriracha says i didn't all good
70:37 - bro
70:37 - we are focusing on beginner-friendly
70:40 - stuff
70:41 - so i'll be explaining everything
70:47 - james says i did it bro yeah nice
70:50 - awesome
70:51 - oops and
70:54 - let's actually go ahead and
70:57 - build that um endpoint
71:00 - so what we will be doing here
71:03 - is i okay um
71:06 - yeah i haven't but i'm excited
71:11 - that's the way to go about it nice
71:13 - awesome
71:14 - okay uh so we will say add the post
71:19 - and we will say uh nude as well
71:23 - i'm your backhand hair fun lovely bro
71:26 - thank you
71:28 - okay so we will say
71:33 - upload uh image
71:36 - so notice that we have like two parts
71:40 - of this endpoint uh the first one is
71:42 - gonna be upload
71:43 - uh patrick says i'm new to node.js
71:45 - welcome to the family bro
71:48 - uh so upload we are gonna be using
71:50 - upload
71:51 - for uploading post as well but
71:54 - now we are just uploading the image okay
71:58 - so and we will be passing in the upload
72:02 - dot single which will enable
72:05 - uploading only a single file and we will
72:08 - be looking
72:09 - for this file in the file field right
72:13 - so let's type in file in there and we
72:16 - will also fire up
72:17 - a callback which will have the usual
72:19 - request response
72:20 - and we will set the response status to
72:23 - 201
72:25 - which means actually created so that's
72:27 - the equivalent of
72:28 - it's kind of like okay
72:31 - when you're successfully uploaded
72:33 - something that's a 201
72:35 - right okay uh yep
72:38 - and let's go ahead and send back the
72:42 - request dot file in there so that we can
72:46 - make sure that we um
72:50 - we did everything correctly let's go
72:54 - and check everything out let's okay so
72:57 - my server is restarting
72:59 - db connected twice yeah you can see it
73:02 - guys nice and let's
73:04 - actually check this out so what i will
73:07 - be doing here
73:08 - is copy this um
73:12 - boom boom okay and
73:16 - okay so upload image what i will be
73:18 - doing
73:19 - is have a body going on here
73:22 - a file like body you gotta
73:28 - select form data and here
73:31 - this essentially gonna turn to become a
73:34 - file
73:35 - so you can add in a text and you can
73:38 - also add in a
73:39 - file so i will go ahead and select a
73:42 - file
73:44 - and yeah let's go with a cozy picture
73:48 - boom okay so i'm ending this image
73:52 - and i'm gonna go ahead and hit send guys
73:55 - who is ready to save our first image
73:58 - into mongodb
73:59 - let me know guys in the chat
74:03 - i will not press this until you let me
74:05 - know
74:06 - if you're excited about it or if i'm
74:08 - just being alone
74:10 - all over here just coding and talking
74:12 - let me know guys
74:13 - if you're with me if you're at this
74:15 - point and if you
74:17 - are ready to save your images into
74:20 - mongodb
74:22 - okay who is ready to do that
74:26 - excited do it okay
74:30 - yes lots of hands by kelvin
74:34 - okay super excited says rukia awesome
74:37 - okay let's go ahead yes we are with you
74:41 - nice okay okay
74:44 - uh let's go ahead and send it
74:49 - let's see what is happening and guys
74:52 - we just have it okay i'm gonna unzoom a
74:54 - bit
74:55 - so we have it working so whenever you
74:58 - see the stuff
75:00 - that means we have everything in our
75:02 - mangodb
75:04 - so that's the file name we just defined
75:06 - yeah
75:07 - so jpeg jpg actually
75:11 - yeah let's go man good vibes awesome
75:14 - so jpg is the extension
75:18 - um
75:21 - and this is the new date that we
75:26 - did over there yup
75:29 - no it's in date that now sorry
75:32 - and this is the image from the beginning
75:34 - okay
75:36 - now uh what i want you to show you guys
75:39 - is actually let's go to collections it's
75:42 - just um
75:43 - now everybody can sit back for a couple
75:45 - of minutes i'm just going to talk a
75:46 - little and you will be able to see
75:49 - how it's actually uh saved into mango db
75:52 - so because this image is
75:55 - pretty low resolution the image that
75:59 - chunks
76:00 - is gonna be just a one document thing
76:05 - so the collection size is one two two
76:07 - kilobytes which is not a huge
76:09 - it's because the image is not like a
76:11 - crazy high uh
76:12 - hd 2080p something but if i were to
76:16 - upload a 4k file it would accept it but
76:18 - it would like divide
76:20 - like crazy amount of little chunks and
76:22 - this is the images dot
76:24 - files and this is where all the details
76:28 - for
76:28 - the file is gonna be saved with that
76:31 - said
76:32 - okay this was the um
76:36 - this was the part when you didn't have
76:37 - to uh code anything let's go back to the
76:40 - code
76:41 - let's get ready to retrieve this image
76:43 - so that we will actually be able to see
76:47 - what we just did okay
76:51 - so let's stretch a little
76:54 - because that's important and if you guys
76:57 - have some water
76:58 - have some water get your coffee ready
77:00 - get your water ready
77:02 - because we are gonna get into the juicy
77:04 - part real
77:05 - soon
77:11 - okay yeah
77:15 - uh let's go ahead and retrieve this
77:17 - exact
77:18 - file that we just uh saved in there so
77:22 - what we will do is say app
77:26 - oops app.gap yeah
77:29 - and we will just say um
77:33 - the endpoint is gonna be uh retrieve
77:37 - yeah retrieve last time somebody i think
77:40 - it was rukia who
77:41 - uh spotted then i made a typo please
77:44 - check it
77:45 - if it's correct um yep and i will say
77:48 - image
77:49 - and single and what i will be doing
77:53 - is fire off another request response
77:57 - parameter
77:58 - callback function and oops
78:04 - and inside of there we will be
78:07 - starting to look stuff inside of
78:11 - grid fs okay guys
78:14 - who's excited to retrieve that image
78:18 - that we just
78:19 - saved into mongodb let me know
78:22 - guys let's start engaging uh the
78:25 - comments are not popping as they did
78:27 - before
78:28 - um let's actually have a conversation
78:31 - let's
78:32 - let's go let's go guys let's start
78:33 - typing in whatever you're thinking
78:35 - whatever your question is
78:37 - let's drop it in the comments and with
78:39 - that said
78:40 - let's go so what we will be saying here
78:44 - is grid fs dot uh file
78:48 - oops files fire laser
78:52 - no nice and find
78:55 - one and inside of there
78:59 - we will be adding the file name
79:02 - and this is pretty much like filtering
79:04 - whatever we have
79:06 - now uh we're gonna be passing in
79:09 - something a query
79:10 - on top of the uh link i'll show you i'll
79:13 - show every
79:14 - i'll show you guys everything so
79:17 - request.query
79:19 - the name so we will be passing in
79:22 - with every single request a name
79:26 - and and that's going to be the file name
79:28 - that we want to retrieve
79:29 - okay and once that's done
79:33 - let's actually uh do the error handling
79:38 - um we are taking it
79:41 - in cause this is the juicy stuff that is
79:44 - correct
79:44 - calvin that's right my man okay
79:48 - yeah uh so let's do a little bit of
79:51 - error handling this is where the error
79:54 - or the data goes
79:57 - it's actually going to be the file and
80:00 - this is where we will be starting to use
80:02 - the grid fs stream okay
80:06 - so inside of there uh it's going to be
80:09 - almost the usual thing but
80:15 - we are gonna so if there is an error we
80:17 - will
80:18 - of course set the response status to 500
80:21 - and send the error back so we can go
80:23 - ahead and debug it
80:25 - the other thing we will be doing so if
80:28 - if it's successful
80:29 - nice uh but we need to make sure that if
80:32 - it's
80:33 - either a file first or if the length of
80:36 - the file is not
80:38 - zero so if that that's the case
80:41 - then we're just gonna say file not found
80:44 - and send it back as an error
80:46 - message uh but if
80:49 - if that's okay uh it's actually nested
80:51 - if
80:52 - gate uh so if that's okay we will be
80:55 - creating a read stream
80:57 - which will um which is like a grid fest
81:00 - great read stream and that's
81:02 - uh this is where we pass in which file
81:05 - do we want to
81:06 - find uh shuri says
81:10 - very valuable live thank you so much bro
81:13 - bro i really appreciate you and i'm
81:16 - seeing you you are actually one of the
81:17 - actives
81:19 - massive thank you bro and let's go let's
81:22 - go guys and
81:23 - smash the thumbs up if you guys like
81:25 - this build
81:27 - okay so um
81:30 - and the other thing uh the next row is
81:33 - pretty much just gonna set up a
81:34 - pipe and that's where we will be
81:38 - uh so that's where we wanna uh
81:41 - pass in the file that we just created
81:45 - right does it make sense guys let me
81:47 - know in the comment section down below
81:49 - if it makes sense
81:51 - and whoa we are at 290 likes guys
81:56 - hit the uh smash the like button if you
81:59 - like this
82:00 - and let's get this video up to 300 likes
82:04 - let's give it a go let's actually
82:07 - do it we are at 291 i'm not gonna go any
82:11 - further and i'm not gonna show you
82:12 - if this is working until we reach 300
82:16 - likes
82:17 - let's go let's smash it let's actually
82:20 - go ahead
82:21 - and hit that button we are 295
82:24 - let's go guys i'm waiting here i'm gonna
82:28 - wait until we go
82:30 - up to 300 let's go 298
82:33 - two more two more let's go
82:38 - okay 303 nice thank you so much guys
82:41 - thank you so much really appreciate it
82:43 - okay
82:44 - let's uh on that let's actually go ahead
82:46 - and
82:47 - retrieve the image so uh notice that
82:51 - this is the image we want to go ahead
82:53 - and retrieve
82:55 - and i'm gonna go ahead and
82:58 - oh okay yeah rim retrieve
83:02 - image i think this is how i yeah
83:05 - retrieve image single okay nice uh and
83:08 - the name
83:09 - what i will be passing in is actually
83:12 - called a param
83:14 - that's what you want to do and this is
83:16 - where you want to go ahead and add the
83:17 - name
83:18 - and the file name is going to go
83:21 - over here um
83:26 - yeah rookie ask fi file length
83:30 - zero file shouldn't be empty right
83:32 - exactly
83:33 - that's what's happening exactly and this
83:36 - is where
83:36 - um i'll pass in the image name
83:39 - and notice that this uh actually the
83:42 - parameter is gonna go up here
83:44 - up top which is gonna be useful in a bit
83:48 - okay let's hit it and let's see if it is
83:52 - working hey there we go
83:56 - nice okay we just retrieved qazi
84:00 - okay and actually what i want to do
84:03 - is copy this whole link
84:06 - and paste it to my browser
84:12 - hey that's so it
84:15 - saw a couple of people asking where
84:17 - cause is on my screen bro
84:20 - that's literally cozy okay
84:24 - um we will be using this in just a bit
84:27 - on the front end
84:27 - and we are at one hour and third almost
84:31 - 30 minutes
84:31 - so we gotta speed up a bit
84:35 - okay i'm kidding um
84:38 - okay now what we want to do cause a
84:41 - retrieve to life finally
84:43 - that's right okay so what we want to do
84:46 - i am it's going to be a bit uh
84:50 - hard to understand so i'm going to go
84:52 - ahead and type it out
84:54 - or like show you guys so what we will be
84:57 - doing is
84:58 - first uh
85:01 - so fur whoops
85:06 - so first uh let's make that bigger
85:10 - actually
85:14 - uh yeah that's the way yeah okay so
85:17 - first
85:19 - damn we will save the image okay
85:23 - we will save the image then from the
85:26 - response
85:28 - that's where we will know the file name
85:30 - right
85:31 - because that's how we retrieve this
85:33 - image so we will grab that file name
85:36 - and then save it with
85:40 - the post right so that we know which
85:43 - image goes to which post right
85:46 - and then when we retrieve it first we
85:48 - retrieve the post
85:51 - first post and then
85:54 - we're gonna second we're gonna retrieve
85:57 - the image
85:58 - okay this is gonna be the process so
86:00 - first we save the image
86:02 - then get the file name that we just
86:04 - created save it with the post
86:06 - then when we are actually rendering it
86:09 - out we're gonna render out the post
86:10 - first
86:11 - and then at the same exact moment
86:14 - we're gonna go ahead and make the uh
86:17 - request to the image as well hope you
86:20 - guys it
86:21 - actually made sense let me know in the
86:23 - comment section down below
86:24 - if it did make sense and let's remove
86:27 - the gray board
86:28 - um so guys
86:32 - if it made sense let me know in the
86:34 - comment section
86:35 - so i know if i'm explaining uh
86:39 - in a way that you guys understand it so
86:42 - with that we're gonna definitely need
86:45 - two more endpoints one of them is going
86:46 - to be saving
86:47 - the image or the whole post
86:50 - sorry and the other one is gonna be for
86:53 - retrieving okay
86:55 - now um what i will be doing
86:59 - is create a post model
87:03 - as we usually do it's going to be just a
87:05 - structure
87:06 - for this um
87:10 - for the database how we will be saving
87:12 - the whole post okay
87:14 - muhammad says yes great work thank you
87:16 - so much bro really appreciate it
87:18 - and let's go and type in here so the
87:22 - file name i'm gonna i'm gonna just gonna
87:24 - name it uh
87:24 -  posts so that we know it's gonna
87:27 - be a mongodb
87:28 - uh schema yep and inside of here
87:32 - uh let's import mangoes from
87:35 - uh oops mongoose
87:39 - and let's create a post model
87:42 - oops post actually
87:46 - post model yup that's it
87:50 - and it's going to be mongoose
87:54 - the schema nice and
87:57 - i always make this mistake i always
87:59 - import it
88:00 - accidentally so and inside of there
88:04 - i'm just gonna pass in all the stuff
88:06 - that we wanna
88:08 - uh save so we definitely wanna save the
88:10 - user the image name
88:12 - which i was just talking about the text
88:15 - which the user
88:16 - uh just type in here but the file is uh
88:19 - it tells me file not found oh
88:20 - the file is not saved um drop me a
88:23 - message
88:24 - and we can debug it
88:27 - we definitely want to save the avatar uh
88:30 - which is
88:31 - gonna be which we will get
88:35 - with the uh login and we wanna save
88:39 - a timestamp so that we will be
88:42 - able to order it in the nice
88:45 - uh in the nice way so the newest is
88:48 - going to be up top
88:49 - and what we want to do is export default
88:54 - the mongoose model that we just created
88:57 - and this is where you guys are gonna be
89:01 - uh give a name for
89:04 - the uh for
89:07 - the um what you call it
89:11 - the collection where you will be uh
89:13 - saving your posts
89:14 - right now notice that
89:18 - it is in a plural you need to make sure
89:21 - that it's gonna be plural
89:22 - plural otherwise um mongoose is going to
89:26 - be
89:27 - renaming it anyways so don't worry about
89:29 - it it's going to do its job
89:30 - but when we are setting up uh pusher
89:33 - and real-time stuff you will be like why
89:36 - is it not working and that's probably
89:38 - because like most of the times
89:40 - uh it's because we didn't um
89:44 - you didn't add the plural version in
89:47 - here and you're
89:47 - trying to subscribe to the singular
89:50 - version so
89:51 - if you want to see that that thing
89:53 - happening
89:54 - i recommend going ahead and watching the
89:56 - mern whatsapp build
89:58 - as well because that's where i i made
90:01 - that mistake and that's how i learned it
90:03 - okay let's go back and oh and of course
90:06 - we are passing in the
90:07 - uh post model okay
90:10 - with that said let's save this file and
90:13 - close it because we're not going to be
90:14 - doing it
90:15 - we're not going to be needing it anymore
90:18 - but what we definitely need to do
90:20 - is import that and for that we
90:23 - gonna be go up here what is this
90:27 - um and this is where we will be
90:30 - importing it so
90:31 - we will be importing it as posts
90:34 - so that we know what is going on in here
90:37 - and
90:38 - i have it with the wrong name so i will
90:40 - be name yeah mango post
90:42 - js nice great work guys says uh
90:46 - yazid thank you so much um
90:49 - collection of the data we are passing
90:51 - post that is correct
90:53 - rukia that's right okay
90:57 - um yeah with that said
91:01 - let's actually create the two more
91:03 - endpoints that we will be
91:05 - uh working with today one of them
91:08 - is gonna be uh i'll
91:12 - so i i like to group these uh requests
91:14 - and uh
91:15 - and uh the image upload so all the
91:18 - uploads should be like in one place and
91:20 - all the retrievers gonna be you know
91:22 - in another place uh we need type as
91:25 - date um you can do it that way but
91:28 - i'm not gonna do it so i will be passing
91:30 - in a string
91:31 - instead of a date you can you can
91:33 - definitely do that like literally do
91:35 - that
91:37 - um yeah psycho coder
91:41 - okay um yeah let's see
91:45 - if there is like a good question so guys
91:47 - if you are
91:48 - uh asking like real awesome questions
91:50 - i'm gonna be
91:51 - popping it out on the screen okay with
91:54 - that said
91:54 - let's go ahead and upload the
91:58 - post so what we will be doing is
92:01 - essentially uh receiving
92:05 - a request on the upload slash
92:08 - post right uh so that that
92:12 - is upload as well and that is uploaded
92:14 - as well but it's image and that's post
92:16 - it's just kind of like a naming
92:17 - convention thing because i i want you
92:19 - guys to have a project under your buckle
92:22 - which um no under your butt sorry
92:26 - uh under no i actually buckle me
92:29 - makes sense as well so um on your github
92:33 - that is actually like a nice
92:36 - nice way nice to look at your code uh
92:39 - project so what you want to do is
92:41 - definitely make other developers who
92:43 - you're working with
92:45 - you you want to make their jobs as easy
92:47 - as possible in the meantime i'm going to
92:50 - while you are copying it i'm going to
92:52 - like add a nice little frame so you know
92:54 - what to
92:54 - um what to copy i'm gonna explain it a
92:58 - little uh
92:59 - in just a bit but i wanna do uh i wanna
93:02 - help you guys in the naming convention
93:05 - stuff so that
93:06 - it's going to be super easy to read and
93:09 - understand your code because code is for
93:10 - human
93:12 - instead of machine so it will be
93:14 - translated into a machine language
93:16 - all right now what we will be doing
93:19 - is so inside of here we will create a db
93:24 - post
93:24 - um const
93:28 - a variable and this is where we will
93:30 - save
93:31 - the request body right and
93:35 - we want to go ahead and in the mango
93:37 - pose that we just created
93:39 - right uh we want to use that schema
93:42 - to create a new post inside of our
93:45 - database using the
93:46 - db post so essentially the request body
93:49 - and we just want to go ahead and save it
93:51 - and this is where the error handling is
93:53 - going to happen
93:54 - so the usual if there is an error send
93:57 - back
93:58 - 500 send back the error and if there if
94:00 - everything is working perfectly
94:02 - let's go ahead and set the response
94:04 - status to 201
94:05 - and send the data back that we just
94:07 - saved
94:08 - nice that's gonna be uploading the post
94:11 - and
94:12 - we will need to make sure on the
94:13 - front-end side that we are actually
94:15 - passing in the image name because
94:17 - otherwise this whole thing is going to
94:18 - blow up and not
94:19 - going to work so down here we are going
94:22 - to be
94:23 - retrieving um
94:27 - the posts so what we want to do
94:31 - is go with the user naming convention
94:36 - so what we want to do is uh whenever we
94:38 - receive a get request on the retrieve
94:40 - posts
94:41 - fire of this function then posts
94:46 - this thing yeah mango posts find
94:50 - and you could literally go ahead and
94:52 - like filter out some stuff
94:53 - and and just pass it with pass back that
94:57 - but we're not gonna do that we are gonna
94:59 - omit the whole thing
95:01 - and then we will move forward with the
95:03 - error handling so if there is an error
95:05 - 500 and if there is not this is where
95:08 - the sorting thing will go
95:10 - so this is why i'm using the timestamp
95:14 - uh data model that or the data type that
95:17 - i'm actually using
95:18 - i'm going to be passing in high big only
95:20 - by the way
95:21 - i'm going to be passing in strings which
95:24 - are going to be like
95:25 - numbers which are going to be exactly
95:27 - like
95:28 - this is the um date
95:31 - time oh wrong
95:34 - wrong annotation so this is gonna be the
95:36 - date uh datetime format that i'm gonna
95:39 - be passing in and i'm gonna be saving it
95:41 - as
95:41 - a string because that's literally the
95:43 - easiest way to
95:46 - work with data okay
95:50 - and based on how so
95:53 - data sort b and a and
95:56 - based on what is the timestamp i'm gonna
95:59 - be
95:59 - sorting the whole thing it's literally a
96:01 - snippet of code that i found on the
96:03 - internet
96:04 - um and this is how i'm sorting
96:06 - everything um
96:09 - from uh inside of the database and once
96:12 - that's done
96:13 - let's go ahead and set the response
96:16 - status to 200
96:17 - and send that data back
96:21 - nice i think with that said
96:24 - this should be good now uh to test it
96:28 - out we we are not gonna be worried
96:30 - uh we're not gonna be testing it out for
96:33 - now
96:34 - uh because we are actually gonna be
96:37 - hooking it up on our front end which
96:41 - for those of you who joined late uh you
96:43 - might be wondering why do i have the
96:45 - front and inside of a backhand folder
96:48 - i made a mistake that was literally it
96:51 - okay
96:53 - um so that's essentially our
96:56 - back end now let's go ahead and
96:59 - oops there's this fireball okay
97:03 - let's go ahead and i think i'm gonna be
97:06 - removing all these firebase stuff
97:08 - because
97:09 - uh this might be some old stuff guys
97:12 - literally uh if you guys have this
97:13 - firebase going on
97:15 - uh i highly recommend doing the same
97:17 - thing
97:18 - okay uh yeah so inside of source
97:23 - i have the components right around here
97:26 - and i have the app.js i'm just gonna
97:29 - go ahead and shut down the server.js
97:32 - file for now and
97:34 - what we will fir what we first need to
97:36 - do yeah we have the node modules so
97:38 - that's
97:39 - done and let's actually
97:42 - take a look at how this application is
97:45 - actually
97:46 - built up so on the header
97:50 - we are importing lots of a bunch of
97:52 - stuff so this
97:54 - is the exact same that sonic built
97:58 - with the react context api everything is
98:00 - working and functioning
98:01 - so we are just passing in uh the
98:03 - facebook logo
98:04 - this is search icon uh search
98:08 - the input field for searching uh all the
98:11 - icons that are going on
98:13 - and the other set of icons on the right
98:15 - hand side and this is where
98:17 - the uh user name and the
98:20 - photo url uh are happening
98:23 - that part yeah that's the middle part
98:27 - and yep so let's literally uh
98:30 - the part we are uh looking at
98:34 - so the part we are looking at on in vs
98:37 - code is essentially this part
98:39 - nothing uh super
98:42 - uh fancy going on in here okay
98:45 - now let's close the header we're not
98:48 - gonna be worrying about that
98:50 - sidebar uh hmm
98:53 - why do i have this comment here okay so
98:56 - we are literally like
98:57 - passing in the sidebar row which is
99:00 - uh which is made up
99:03 - of a of an avatar and an icon
99:07 - yep so this so this is the avatar
99:10 - this is what happens when when when we
99:12 - pass in the avatar
99:14 - and this is what happens when we pass in
99:16 - the icon so
99:17 - we are literally like oops passing in
99:21 - everything well that's actually a nice
99:24 - way
99:25 - to show it so guys i hope you guys can
99:28 - uh see it in a good yeah okay
99:32 - so that we are literally just passing in
99:34 - some stuff and we are reusing the exact
99:36 - same
99:37 - component because why would we want to
99:39 - go ahead and build it again
99:40 - doesn't make sense okay let's close it
99:42 - again
99:44 - uh and widgets um
99:47 - this is literally just a facebook embed
99:50 - nothing super crazy going on in here and
99:52 - the login
99:54 - this is where we set the um
99:57 - set everything up inside of the react
100:00 - context api
100:01 - um yeah that's pretty much login page
100:04 - nothing
100:05 - super hard going on i'm not gonna go
100:08 - deep i'm not gonna
100:09 - dive deep into react context api
100:12 - um it's working okay
100:16 - so one thing feed that's uh hola que
100:19 - talestan
100:21 - mr jose
100:24 - that was pretty much all my spanish
100:26 - knowledge by the way
100:29 - yeah okay
100:34 - i already imported in axios and the
100:37 - other so from the instance that i've
100:39 - already created
100:40 - i've installed pusher um
100:44 - so what we definitely want to go ahead
100:46 - and do is check out the
100:48 - uh axios so in here we have the
100:51 - localhost 9000
100:53 - set up already
100:56 - um yeah superhero hahaha
101:00 - uh mangustan lost videos mainspring um
101:04 - i really appreciate you bro i cannot
101:06 - respond to that in spanish i'm sorry
101:08 - uh yep so buena espanol
101:13 - oh my god swedish clicks swedish clicks
101:16 - in faster
101:17 - okay so in axios we have the instance
101:19 - ready
101:20 - nice so what we are
101:23 - doing inside of here is essentially uh
101:26 - checking in the
101:27 - um firebase database that sunny
101:31 - um can you answer at instagram after of
101:34 - course
101:35 - um so inside of the collection posts
101:39 - on snapshot this is more like so
101:42 - yeah uh we're creating a snapshot and we
101:45 - are sending the post data to
101:47 - that thing now this is the part
101:50 - where things are gonna get a bit
101:53 - different so this is what we're gonna be
101:56 - deleting
101:57 - and then create our stuff
102:01 - sorry guys i need to drink a bit
102:11 - yeah yeah um
102:15 - but i love swedish okay um
102:22 - yeah so uh this is the firebase stuff
102:24 - don't worry about it for now uh we're
102:26 - gonna be deleting that
102:27 - let's see what's inside of story real
102:29 - it's pretty much
102:30 - just creating the stories like passing
102:33 - in all these uh stuff
102:34 - don't worry about that avatar
102:39 - that's all good psycho coder if you
102:41 - don't know much about react
102:42 - check out one of sony's videos on that
102:45 - super informative and super super
102:48 - awesome and it's very very on demand
102:50 - okay let's go to message center
102:54 - this is the other file that we will need
102:56 - to worry about because
102:57 - inside of here yeah i already had the
103:00 - axios and the form data
103:02 - uh good morning from australia yo
103:05 - what's up australia in a house that
103:08 - deserves an air horn
103:11 - okay and we still have 144 people live
103:15 - guys stick with me this is gonna be like
103:18 - very soon
103:18 - uh we're gonna be finishing uh we got
103:21 - like 15 to 20 minutes
103:23 - back to the end make it uh till the end
103:26 - with me guys so
103:27 - yeah uh let's carry on
103:30 - so inside of here we are pretty much uh
103:33 - like this is the uh save subma handle
103:37 - mid stuff uh this is the firebase thing
103:39 - that we will be replacing with
103:41 - our uh content multilingual have been
103:45 - built of course why not
103:48 - okay uh yep message sender and let's
103:51 - check out the
103:52 - post what's going on in here and it's
103:54 - basically just
103:55 - accepting uh all these props that we are
103:59 - passing on and then based on that
104:01 - we are um
104:04 - we are we are just rendering out
104:08 - everything
104:09 - one thing though that we need to worry
104:11 - about is this part
104:12 - this is a bit of a different way of
104:15 - going about
104:17 - how sony built it because this is where
104:19 - the link
104:20 - will go um hold on a moment
104:25 - uh this is where this link will go right
104:28 - these kind of links so this is how we
104:30 - will be rendering
104:31 - oops rendering out all these images
104:35 - hey quasi okay um
104:39 - let's actually start with the feed
104:42 - so what we will be doing inside of here
104:45 - is uh we will
104:49 - literally like create a new uh function
104:52 - that is gonna okay let's get rid of this
104:56 - use effect for now
104:57 - uh we're not gonna be using that sorry
104:59 - sonny um
105:02 - so sync feed is gonna be the function
105:05 - that we will be firing off to sing the
105:07 - whole
105:07 - uh feed and to grab all the
105:12 - um posts that we had
105:16 - uh naming convention hello
105:19 - so retrieve posts and then we will yeah
105:22 - you can go ahead and console.log it and
105:24 - then what we want to do is set the post
105:26 - data to
105:27 - response.data okay
105:30 - now uh what then what we want to do
105:33 - is whenever this application when
105:36 - whenever the application loads
105:38 - uh we want to have a use effect to sync
105:41 - the whole thing
105:42 - and then essentially everything is gonna
105:45 - be
105:45 - the exact same we're gonna be
105:49 - returning here it's not done just yet
105:53 - now another thing we will be doing is
105:56 - going into message sender and this is
105:59 - going to be
106:00 - a juicy part because
106:03 - first we have to decide whether this
106:06 - uh post has an image attached
106:10 - or not and because
106:13 - if we are trying to save like you can
106:16 - literally post
106:17 - uh without or with an image on facebook
106:19 - of course and we are building the clone
106:21 - so we need to handle that situation so
106:24 - whenever
106:25 - um there is an image we want to go
106:28 - about it in a different way and when
106:30 - there is no image
106:32 - we just want to save the post and that's
106:33 - it so
106:36 - inside of handle submit uh let's
106:39 - so you need to have this row
106:44 - ah that row stays there
106:48 - and these stuff stay here i pretty much
106:50 - made it separate
106:52 - so that you can go ahead and just delete
106:53 - the lines that
106:55 - you need to delete now uh what we
106:59 - what we will be doing is
107:02 - let's actually create an if gate boom
107:05 - so if there is an image
107:08 - um and how do we know if there is an
107:12 - image
107:13 - okay that's a good question i forgot
107:16 - okay yeah
107:16 - how do we know if there is an image this
107:18 - is how we will know
107:20 - if there is an image so if we
107:23 - actually go ahead and click that upload
107:25 - image button
107:26 - and then select an image that's going to
107:27 - be stored inside of
107:29 - this uh u state or of this state
107:33 - and then if it is happening
107:37 - then we will be uh
107:40 - creating an image form or um
107:44 - yeah creating an image form which is
107:45 - pretty much uh form data it's just
107:48 - animate image form
107:49 - and then we will open that file
107:52 - that image and this was
107:56 - so okay so how does this whole thing
107:58 - work so we are appending something
108:00 - to the uh image form form data
108:03 - now the field name where we want to
108:05 - append it is going to be the file
108:07 - the data that we actually so the thing
108:09 - that we actually want to be
108:11 - i want to like put in there is going to
108:13 - be the image
108:14 - and then how uh and then we want to
108:19 - refer it to as then as the name of that
108:22 - image
108:23 - guys let me know in the comments because
108:25 - the comments
108:26 - are stopped again let me know guys if
108:28 - you're enjoying this
108:29 - if you're finding this valuable and
108:32 - you always know that you can smash that
108:35 - like button
108:36 - and show me that you literally like
108:39 - this video okay
108:42 - let me know guys if if it's clear if we
108:45 - can move on and we can
108:46 - go ahead and save everything inside of
108:50 - our mongodb database i really want to
108:52 - know and i really want to see it coming
108:54 - inside of the comments
108:57 - so let me know guys um
109:00 - yeah so actually let's go ahead and save
109:03 - the image
109:05 - so naming convention
109:08 - so we're going to be uploading the image
109:11 - and
109:12 - oops it's freaking out because i haven't
109:14 - closed everything
109:16 - so what we will be doing is uh making a
109:20 - post request guys that don't like
109:21 - don't don't see if you if you guys are
109:23 - understanding it uh let me know in the
109:25 - comments
109:26 - so we will be making a post request to
109:28 - the upload image
109:30 - um upload image endpoint and we will be
109:34 - passing in the image form
109:36 - and then we are adding a couple of
109:38 - headers which we
109:39 - definitely which we need to work with
109:42 - now uh accept is going to be application
109:46 - json because we are gonna we want to
109:49 - save it as a
109:51 - json and accept language
109:54 - i'm i'm using english so yeah there we
109:58 - go
109:58 - uh and then we want to add the content
110:01 - type which is going to be a multi-part
110:03 - form data and we want to pass in the
110:06 - boundary
110:07 - of that form data just like that
110:11 - all right with that said one more thing
110:14 - we need to do
110:15 - because we then remember guys
110:18 - we then want to go ahead and save the
110:22 - post with the data
110:25 - retrieved from this request okay
110:30 - so what we want to be doing is
110:34 - uh then create a post data
110:38 - it's just going to be a post data for
110:39 - now uh
110:41 - we're going to be console logging it
110:42 - it's actually not necessary but it's
110:44 - nice to see how everything goes
110:47 - so let's create a post data thing
110:50 - and let's add the text that
110:53 - the person the user typed inside of the
110:57 - text
110:57 - form or or the input field then add the
111:01 - image name which we will be retrieving
111:03 - from the response data
111:05 - as the file name and then
111:09 - add the user's display name and then as
111:12 - an
111:12 - avatar add the user photo url and also
111:16 - the timestamp which will be a date dot
111:18 - now let's
111:20 - console log it to see how it actually
111:22 - looks like and then
111:24 - use and then call this function which we
111:27 - haven't created
111:28 - just yet
111:31 - um but before we do that
111:36 - uh we need to have an else
111:39 - uh thing going on right
111:42 - yeah there we go so if there is no image
111:46 - like remember
111:47 - uh this only happens if we got an image
111:49 - so if there is no image we just want to
111:51 - create
111:52 - we we're going to create the exact same
111:54 - form data
111:55 - without the image name right you see
111:58 - that there is no image name
112:00 - text image name user and then text and
112:02 - user
112:03 - okay that's pretty much what happens
112:06 - here
112:06 - and then we want to go ahead and create
112:08 - a new
112:09 - uh function outside of this whole thing
112:15 - and that's essentially gonna uh like
112:18 - upload the whole
112:19 - uh post there we go
112:23 - so with that said we pretty much should
112:26 - be able to
112:26 - upload stuff to our mongodb using our
112:30 - front end
112:31 - now what we definitely want to go ahead
112:34 - and do
112:35 - is inside of here let's remove this s
112:37 - because i didn't do it that way
112:40 - so we are now able to save
112:44 - stuff to our mongodb database and
112:48 - we are able to retrieve those and now
112:51 - i'm just going to add in http
112:57 - local host 9000
113:00 - so that the image source is going to be
113:03 - set to this
113:04 - um this uh url
113:09 - okay um why is mark okay
113:13 - now we literally should be able to have
113:16 - a working application
113:18 - with us guys let me know in the uh
113:21 - chat section if you guys are with me
113:24 - if you guys are following me and if you
113:27 - are in here
113:28 - with me oh okay so just the comments are
113:31 - not coming through
113:32 - i actually see uh
113:35 - see them coming in okay
113:38 - okay yeah yeah perfect okay um i think
113:42 - i'm gonna stay
113:42 - here then and i don't know why the
113:45 - comments are not coming through
113:47 - don't worry okay now um
113:50 - let's actually test this app out let's
113:54 - uh reload it a couple of times but
113:58 - let me know guys if you are with me
114:02 - uh except language in spanish too yeah
114:05 - that's right
114:06 - um yeah following nice okay
114:09 - uh stuck retrieving the image uh
114:12 - retrieving the image is just gonna be
114:14 - a link which we which you will be
114:16 - building
114:17 - up okay present dr mern yes
114:20 - let's go okay i'm not gonna be able to
114:24 - highlight any more images because for
114:26 - some reason the streaming app is not
114:28 - working as it
114:29 - should okay let's go back
114:32 - to the presentation and let's actually
114:36 - go ahead and sign in
114:40 - let's use this account awesome
114:43 - and now what i will be doing is say
114:47 - hey guys and the fire emoji
114:52 - and i'm going to choose a new choose a
114:53 - file
114:55 - and let's actually i will be
114:59 - covering this for a little bit
115:02 - yes i'm stuck okay
115:06 - so inside of here i'm just gonna put a
115:09 - couple of html css on javascript logos
115:12 - so that we know what this um
115:16 - whole thing is about boom let's save it
115:19 - and right now we're not seeing anything
115:21 - because this is
115:22 - not real time but let's actually check
115:25 - our mongodb
115:27 - how things are going on uh in here
115:30 - so in files we see a second one and
115:34 - it says it's the gmt time is
115:37 - 12 uh yeah
115:40 - not 12 20 58 which actually matches
115:44 - um yeah so it's 2 p.m
115:47 - pacific so yeah it's actually pretty
115:50 - good
115:52 - now let's actually refresh the whole
115:54 - thing
115:55 - let's sign in again and let's see if it
115:58 - is working okay now
116:02 - there we go that's it guys
116:05 - literally we have a fully
116:08 - functional um facebook clone
116:12 - and let's actually test out if it works
116:15 - without that
116:16 - uh ima um without an image yep that's it
116:21 - like say yo who's pumped
116:26 - and let's add a rocket emoji boom
116:31 - and let's sign in again and refresh
116:36 - because it's still not real time
116:39 - and here we go everything is working the
116:42 - order is correct
116:44 - uh we see this timestamp going on
116:47 - so guys let me know
116:50 - in the chat who is pumped and
116:53 - who has this project at this state
116:57 - where it's fully functioning we just
117:00 - need to make it
117:01 - real time uh
117:05 - teddy asks can i be your friend of
117:07 - course bro
117:08 - text me on instagram it's actually
117:11 - um you can see it
117:16 - right here yeah text me over here
117:20 - okay there we go
117:24 - so how you make this work real time
117:26 - that's what we will be doing back down
117:29 - nice question thank you uh okay
117:34 - and yeah so now i'm introducing pusher
117:39 - that's how we will make this whole thing
117:41 - real time
117:43 - we will need a little bit of
117:44 - modification on the front end and the
117:46 - back end as well
117:47 - but this is gonna be working perfectly
117:50 - so let's go ahead and go to pusher.com
117:53 - and what we will be doing is oops
117:57 - not not printing the uh page definitely
118:01 - um so what we will be doing is if you
118:04 - guys
118:04 - haven't used for sure this is
118:06 - essentially a service that we will be
118:08 - using to watch our mongodb
118:10 - and do and whenever something happens
118:13 - which is going to fire off a function
118:14 - that's going to refresh the whole page
118:16 - and there we go
118:17 - so if you haven't used it you can go
118:19 - ahead and sign up this is completely
118:21 - free
118:22 - for the use what we will be doing and
118:24 - i'm just going to go ahead and sign
118:26 - in with my github
118:30 - because that's just one click and here
118:32 - we go
118:33 - so all the way here uh let's just go to
118:36 - manage
118:37 - yeah just like that and if it's the
118:39 - first time you're using it you're gonna
118:40 - see it get started
118:42 - uh over here on channels and make sure
118:44 - to use
118:45 - channels okay let's go to manage let's
118:48 - go to create app
118:51 - oops uh let's see what's up yep
118:54 - okay so create and i'm gonna say
118:58 - facebook learn live because we are live
119:01 - okay eu i'm gonna set it to us west
119:05 - okay for the front end i'm using
119:08 - react and for the backend i'm using
119:12 - node.js let's create the app
119:16 - and they are super nice because they are
119:18 - kind of like give you
119:19 - a bunch of code that you can start
119:21 - working with
119:22 - reaction auto update because state has
119:24 - changed um
119:26 - the state is that doesn't change so the
119:28 - thing that is happening okay
119:30 - so
119:34 - [Music]
119:36 - let me let me put myself up so what is
119:38 - happening
119:39 - uh with react and firebase so react
119:42 - would change automatically whenever the
119:45 - state is changed
119:46 - but you need to stay change the state
119:48 - first
119:49 - and that's why you are using this on
119:51 - snapshot thing
119:52 - so whenever something is happening that
119:54 - snapshot is going to be fired off
119:56 - because firebase has a real-time
119:59 - database
120:00 - but because mongodb by default
120:03 - is not uh real-time
120:06 - the on snapshot is not getting fired
120:09 - that means
120:10 - the state it doesn't change and then
120:12 - react doesn't
120:13 - refresh okay so it's not
120:16 - there is no problem with react uh react
120:19 - is working just fine
120:20 - um it's the matter of the database
120:24 - okay i just wanted to clear that out i
120:26 - saw that
120:27 - uh awesome comment by psycho coder
120:31 - okay so does pusher have rate limit of
120:33 - course
120:34 - it does it's actually pretty low but
120:37 - it's gonna be
120:37 - just enough for us today
120:41 - um okay
120:45 - and yeah we
120:48 - okay let's go back here
120:51 - nice so we have all these code with us
120:54 - let's go actually and set up our
120:56 - back end so we will need these two stuff
120:59 - but let's actually grab this one first
121:03 - and i'm just gonna open up
121:08 - my uh server.js file
121:12 - which is essentially in the backend and
121:14 - what i will be doing so
121:16 - or okay oh my god okay resolve
121:20 - let's remove this because we don't need
121:22 - that path
121:23 - okay so uh pusher is already imported
121:26 - nice
121:26 - and
121:30 - and what we will be doing is going to
121:32 - app config
121:34 - and just paste it here now there's two
121:37 - little modification
121:38 - that we will need to make in here
121:41 - one of them is getting rid of var
121:43 - because that's just a
121:44 - no go whenever you're uh developing in
121:47 - javascript
121:48 - you don't want wanna um you don't wanna
121:50 - don't ever want to use
121:52 - voir you're literally gonna be kicked
121:55 - out of an interview just for that
121:57 - and the other thing you wanna change is
121:58 - encrypted and
122:00 - because it's for some reason it's uh
122:02 - duplicating and you want to go ahead and
122:04 - use
122:04 - tls instead of encrypted and it's not
122:08 - going to be
122:10 - uh messing around yeah
122:13 - okay um okay yep that's
122:16 - uh mongoose stuff and they be connected
122:19 - perfect
122:20 - so next thing we want to go ahead and
122:24 - do is going into
122:28 - the first mongos connection once open
122:32 - so the other one is just for grid fs and
122:34 - saving file don't worry about that don't
122:36 - don't change anything on that what you
122:39 - do what you need to do
122:40 - inside of here is create a new change
122:42 - stream
122:43 - and then if you guys don't know what
122:45 - that is that's basically just
122:47 - watching your database and whenever
122:49 - something happens
122:51 - it fires off simple
122:54 - so you want to create a change stream
122:57 - um it's actually it's a nice
123:01 - thing by uh mongodb i'm just gonna
123:06 - paste it in here uh so you want to
123:08 - create a chain stream
123:09 - which is a which is literally just a
123:12 - mongoose connection collection
123:14 - watching thing so the manga's connection
123:18 - the collection the post collection of
123:20 - the mongoose collection you want to
123:22 - watch that
123:23 - so you want to watch the mongoose
123:26 - connection
123:27 - post collection i hope it's actually
123:31 - clear
123:31 - what i'm trying to say drop it in the
123:35 - comments if you know how to say it
123:36 - correctly
123:37 - and what you want to do
123:41 - is when the change stream
123:45 - is fired off so on
123:49 - change right you're going to fire off a
123:53 - callback function which will have a
123:55 - parameter
123:56 - the change which actually happens on the
123:59 - back end
124:02 - which is the actual change right so it's
124:05 - it could be a
124:06 - inserted data it could be a deleted data
124:09 - it could be
124:10 - a change data something you're just
124:12 - gonna just want to
124:13 - have it inside of a variable uh
124:16 - you can go ahead and console.log it
124:20 - and then what you definitely need to do
124:24 - is if the
124:27 - uh change
124:31 - changes operation type right there's
124:34 - gonna be a
124:35 - bunch of parameters inside of there one
124:37 - of them is going to be operation type
124:39 - and
124:39 - if it is insert
124:44 - then what you want to do is uh first
124:48 - like you can go ahead and console like
124:50 - so that you can like debug it
124:53 - and you can go ahead and say uh
124:56 - triggering
124:58 - pusher that's that's nice and then
125:02 - uh what you want to do is literally just
125:05 - say
125:06 - pusher dot trigger and then
125:10 - uh you want to create a channel inside
125:13 - of pusher
125:13 - which the best way to go about it is
125:16 - uh say the um
125:21 - say the collection's name okay so posts
125:24 - and you want to go ahead and create an
125:27 - event
125:28 - which will be inserted in this case
125:31 - and then and that's
125:35 - pretty much it i mean we can definitely
125:38 - pass
125:38 - in whatever changed okay so change
125:42 - equals change and you just pass it on
125:46 - you will be able to watch it on the
125:48 - pushers server
125:50 - that's pretty much it okay
125:53 - now uh what happens if if it's not
125:57 - insert well um then else you're gonna
126:01 - go ahead and console.log
126:04 - uh error triggering
126:09 - pusher that's that's pretty
126:11 - straightforward handling the error
126:13 - and yep that's pretty much it that was
126:16 - the back-end side
126:17 - now the back-end is going to be
126:19 - real-time nice
126:20 - now what we need to do uh at this moment
126:25 - is going to feed.js
126:29 - because that's where we will oops that's
126:31 - where we will be
126:32 - uh sorry
126:37 - feed.js yep this is where we will be
126:39 - literally like
126:40 - subscribing to the pusher
126:43 - thing so let's go back here and let's
126:47 - see what we will be doing
126:48 - so of course we create an instance oops
126:50 - yeah that's the
126:51 - instance that we will create and if i
126:53 - have a fancy point then why am i not
126:54 - using it
126:55 - so this is creating an a pusher instance
126:59 - on the front end and then we will be
127:02 - subscribing to it
127:03 - uh to the channel that we created and we
127:06 - will be calling
127:07 - like what we called posts and then on
127:10 - the even that inside it that we
127:12 - will be adding inside of there we will
127:14 - be going ahead and fire up the sync
127:16 - data okay so
127:19 - let's create this thing
127:22 - and let's go up here
127:27 - and let's actually create the
127:30 - instance up here get rid of the war
127:33 - immediately and let's go with the const
127:36 - and guys if uh i saw a couple of
127:40 - comments
127:41 - uh asking whether you
127:44 - should be using war const or lat um
127:49 - my advice don't ever use war you there
127:52 - is no situation you want to use var
127:54 - um and for
127:58 - constant lab use always const until you
128:01 - need to use lat
128:02 - so it's like declare everything with
128:06 - cons
128:06 - and whenever something is breaking and
128:09 - react will actually show you
128:11 - uh and javascript is actually going to
128:14 - be showing you
128:15 - why it's not working um then you can
128:18 - change it to lat
128:19 - if it's the problem okay um
128:23 - yeah i'm learning this at 2 a.m okay i
128:27 - said i can't um
128:31 - hold on i would i want to highlight that
128:34 - okay boom okay
128:37 - so alex limpy uh says
128:41 - i'm listening this at 2am nice job bro
128:44 - massive appreciation for you and you got
128:46 - an air horn
128:49 - thank you so much for being here and and
128:51 - being with us
128:52 - uh this early in the morning
128:56 - and let me just run through quickly the
128:58 - comment section and guys
129:00 - stick with me we are very close to the
129:03 - end
129:05 - okay okay
129:08 - uh yeah so the other thing we would need
129:11 - to do
129:12 - is copy this part of the code
129:16 - and let's go back and create a new
129:19 - use effect up here uh
129:22 - is a that's the thing that i want
129:25 - to have
129:26 - yeah nice and remove this because
129:28 - otherwise it's going to be refreshing
129:30 - all the time and it's gonna
129:31 - like burst out your um
129:35 - limits and pusher and then let's pass it
129:37 - in here
129:38 - let's change it to const because that's
129:40 - just
129:41 - because we're not using war and let's
129:44 - so this essentially creates a channel
129:46 - that subscribes to not
129:48 - my channel instead we are going to be
129:50 - passing in posts
129:52 - yeah and the event is going to be
129:54 - inserted
129:58 - and then there is a function okay we'll
130:00 - get we're getting rid of the
130:02 - alert thing and we're just going to go
130:04 - ahead and say
130:05 - sync feed and guys
130:08 - that should be pretty much it so
130:12 - let's actually sign in oh no i
130:15 - actually refreshed it a couple of times
130:17 - so everything is working perfectly
130:19 - uh yeah let's sign in here
130:24 - okay ah everything is loading yo
130:28 - real time test let's add another image
130:34 - another quasi image that's actually a
130:36 - good idea
130:37 - and let's hit return and let's wait
130:40 - until it
130:42 - okay okay here we go
130:46 - and there we go guys we literally made
130:50 - the whole thing
130:51 - real time so real time
130:56 - and some fire and then a rocket
131:00 - boom without an image it works
131:03 - again now this is a little bit of bug
131:07 - it's actually not a bug it's just how it
131:10 - works
131:10 - so whenever you're resyncing the feed
131:13 - the images are gonna load
131:14 - again but uh we could make it like super
131:17 - optimal
131:18 - but that's gonna take a lot of time and
131:20 - we are already uh
131:22 - more than two hours into this stream so
131:26 - with that said we are
131:29 - guys we are finished
131:33 - we literally have finished the full
131:35 - build
131:36 - um yeah so that's pretty much
131:40 - it now one more thing to do before we go
131:43 - home and before uh we go ahead and do
131:47 - whatever we want to
131:49 - um let's actually deploy the whole thing
131:53 - who is pumped and who's ready to deploy
131:57 - the application up to the cloud so that
132:00 - we will so that everybody is going to be
132:02 - able to
132:03 - uh check it out let me know in the
132:07 - comments drop
132:08 - some fire drop some fire if you know
132:10 - what's gonna happen
132:12 - and yep let's let's
132:15 - do it okay can you add this in
132:18 - repo yeah um definitely
132:21 - message me afterwards um
132:25 - my my my instagram should be here yeah
132:28 - this is it okay
132:30 - so guys let me know if you are
132:33 - ready to deploy this app austin
132:36 - says let's go uh carry i mean uh
132:40 - carrie minati says i use mongodb compass
132:43 - that's a great tool to use so guys
132:45 - literally mongodb compass is nothing
132:47 - super fancy
132:48 - it's uh it's it's literally a desktop
132:53 - app
132:53 - of mango db firebase deploy
132:56 - exactly alexandros uh okay
133:00 - um so kevin asked what asks
133:03 - what are the advantages of using mongodb
133:06 - instead of firebase
133:09 - there's not a lot i mean so
133:12 - whenever you're trying to um build a
133:14 - project
133:16 - we always say that go with firebase okay
133:20 - and then why are we teaching this that
133:22 - would that probably is your next
133:24 - question
133:25 - well um this is what is in demand uh on
133:28 - the
133:28 - job market and this is actually a better
133:31 - way
133:32 - to store data than in a sql database
133:34 - because that's just like a
133:35 - pain in the butt and uh with
133:39 - with working with a nosql database it's
133:41 - like super easy to map through
133:42 - everything and then render out and then
133:44 - just work with that because it's
133:45 - essentially it's more like a json file
133:48 - now um that's part that's part of the
133:51 - other reason
133:52 - why we're teaching it and because mern
133:55 - stack
133:55 - is like a it's like
133:58 - 10x as popular and like 100x more
134:02 - in demand than firebase because it's
134:05 - kind of like unknown for now
134:09 - um but yeah i hope this answered your
134:12 - question
134:14 - um yeah
134:20 - hassan says let's deploy yes let's go
134:24 - and okay now uh
134:27 - let's actually go back to
134:31 - the view where you can see my screen
134:34 - nice perfect and what we will be doing
134:37 - is essentially going to uh the front end
134:42 - and then opening up a terminal oh and
134:46 - yeah this is the
134:47 - change that happens so on the back end
134:49 - side
134:50 - what we want to do is first um okay
134:54 - let's actually create a new terminal
134:56 - let's do an alas let's go in here and
134:59 - what you want to go ahead and do
135:01 - is go to heroku.com
135:04 - because we will be using roku to host
135:07 - this
135:08 - uh application back end online
135:11 - one two three four okay new create new
135:14 - app
135:15 - and we will be creating a facebook mirn
135:18 - oops
135:18 - facebook mern uh live
135:22 - yep there we go and what we will be
135:25 - doing is essentially
135:27 - uh so guys if you don't have heroku cli
135:30 - go ahead and install it using that
135:32 - tutorial up top
135:33 - then what you will need to do is login
135:36 - to the cli
135:37 - um yeah and yeah afterwards
135:40 - you can like resume this video and then
135:42 - go ahead so we just see it into the
135:44 - project we have the get version control
135:46 - done
135:47 - what we want to do is set the uh remote
135:50 - repo to your heroku repo okay
135:54 - wrong wrong direction just paste it
135:56 - inside of there
135:58 - it's gonna do its thing super fast then
136:01 - you wanna literally create add the
136:04 - comment and then push it to herakum
136:06 - master
136:07 - okay uh let's see what's going on in the
136:10 - chat
136:10 - because i for some reason i can't see it
136:14 - just
136:14 - when i go there okay um
136:19 - let's go ahead and say git add dot
136:22 - then kit commit dash am
136:25 - and app done
136:29 - don't do these kind of commits always
136:31 - commit every single thing that you do
136:33 - because then you can go ahead and roll
136:34 - back okay
136:37 - there we go uh because we added a nice
136:39 - little
136:40 - um git ignore
136:44 - we just have the necessary stuff
136:48 - and what we will be typing in here is
136:50 - essentially
136:51 - get push heroku master
136:54 - poof there we go um and what i like to
136:57 - do
136:58 - is add a new terminal and say
137:01 - heroku logs dash dash tail
137:04 - and then i will see the heroku logs
137:06 - going on all the way so that i will know
137:09 - what is happening inside of here
137:13 - okay uh so yeah it's launching release
137:16 - version three
137:17 - i don't even know why it's version three
137:19 - but don't matter
137:20 - uh so on the right hand side it's
137:22 - starting everything is working and it
137:24 - says stage stay
137:25 - uh state changed from starting to up
137:28 - that means
137:28 - we probably have a working
137:32 - backend guys deployed let's test it
137:36 - out if it says hello world hey
137:39 - there we go huge air horn guys
137:44 - we have it working nice
137:47 - okay and get exactly
137:51 - yeah uh uh sunny is using mango for
137:55 - tick-tock
137:56 - and since then sunny hadn't been using
137:58 - fireworks but
137:59 - you use mongodb uh sunny was always
138:01 - using firebase
138:03 - we just had a we just had two or three
138:06 - four or five couple of builds together
138:10 - and um whenever i'm on uh whenever i'm
138:13 - going live
138:14 - with him we are making a burn full stack
138:17 - build
138:17 - from bottom to the top um
138:22 - yeah because he's just so much faster in
138:24 - teaching react
138:26 - but yeah okay um
138:29 - yeah so we have a working backhand now
138:33 - what you want to go ahead and do is like
138:34 - copy this co
138:35 - this link and then go back to axios.js
138:40 - right and then
138:44 - you just want to go ahead and actually
138:46 - you can go and comment this line out
138:48 - and add a base url and
138:51 - that will be this code now uh make sure
138:54 - that you don't have the slash
138:56 - and the end because it's gonna like blow
138:58 - up the whole thing
139:01 - and yep there we go okay
139:04 - now uh what with that said it's pretty
139:07 - much set up to the
139:09 - uh working um back-end
139:12 - thing and i'm just gonna need to find
139:14 - okay here we go
139:15 - now uh let's sign in it's still the
139:17 - local uh
139:18 - front-end but they deploy the back end
139:21 - and let's see if it is working yes
139:23 - there we go everything should be
139:26 - working we're
139:30 - king boom there we go
139:35 - king we can say
139:39 - we're king very funny
139:42 - uh now what we need to do is
139:46 - go ahead and deploy the front end and
139:48 - that's
139:49 - pretty much today's build guys
139:52 - so um let's actually go here
139:56 - create a new tab and what we will be
139:59 - doing
140:00 - is we need to initialize firebase right
140:03 - so let's go ahead and type in firebase
140:06 - init
140:07 - boom there we go
140:10 - what you want to do is hosting then
140:13 - use an existing project then what you
140:16 - need to do
140:17 - is i think this is the project oh no
140:20 - uh it's fb mirn okay i need to check it
140:24 - real quick yeah it is fb mir9ac
140:28 - 4d yeah that's the project okay so you
140:32 - want to make sure that you're selecting
140:33 - the correct project here otherwise
140:35 - it's going to blow up uh so yeah
140:37 - facebook mirror
140:38 - there we go uh and this is an other part
140:41 - you need to
140:42 - take uh make sure you're doing it right
140:46 - and for some reason the streaming is
140:47 - cutting
140:48 - off the bottom of my screen
140:53 - so you need to type in here uh
140:58 - build instead of public
141:02 - oh my god and then now i'm blocking the
141:04 - screen okay
141:05 - i move myself here okay
141:09 - so you need to type in here build
141:12 - whenever it's
141:13 - asking for the public directory you want
141:14 - to go ahead and say build
141:17 - okay and what you need to do is like
141:20 - type in a why
141:21 - because you want this to be a single
141:24 - page app
141:25 - now this is some
141:29 - cli trick that didn't work out as
141:32 - planned
141:33 - oh yeah because i'm using a different
141:36 - resolution
141:38 - don't matter okay
141:41 - and now what you want to do is npm run
141:44 - build down here and that will actually
141:48 - create the build folder and create the
141:50 - whole
141:51 - production ready uh project
141:55 - so it's going to strip out a lot of
141:56 - stuff like
141:58 - hot reloading and all those kind of
142:00 - stuff that you need while you're working
142:02 - in the development environment
142:04 - but then you will not need it anymore so
142:07 - npm rom build
142:08 - there we go it's working
142:11 - nicely and it's gonna
142:14 - do and create an optimized production
142:17 - build
142:17 - um so yeah that's uh that's pretty much
142:21 - what is happening
142:22 - over here so
142:25 - let's wait until it finishes it's going
142:28 - to do its thing
142:29 - it's going to take a little bit of while
142:32 - in the meantime let me check wow this is
142:35 - amazing
142:36 - calvin says thank you um
142:41 - okay what is your i'm going to be
142:44 - instead of firebase
142:46 - um yeah
142:49 - and now we are guys we are ready
142:53 - to deploy guys i see
142:56 - there is still uh 94 people
142:59 - on the youtube if you haven't smashed
143:02 - that like button
143:03 - now is the time to do it hit that like
143:06 - button
143:06 - get that number up to 400
143:09 - i think we can do it let's everybody go
143:12 - ahead and
143:14 - hit that like button we are at 378.
143:17 - let's go let's hit that
143:22 - okay we are at 381 nice
143:25 - 382 let's go
143:29 - let's go everybody let's smash that like
143:32 - button like literally go ahead and
143:33 - destroy that
143:35 - okay 386. nice
143:39 - okay we are just 14 away from 400
143:43 - guys let's go and let's reach that
143:45 - number
143:47 - okay if you guys found this video
143:50 - valuable drop a comment let me know
143:52 - uh what you liked and in the meantime
143:56 - hit the like button so that we can get
143:59 - this video out to as many people out
144:01 - there as possible
144:03 - and that is all we ask for
144:06 - okay we are sitting at uh 389
144:09 - okay let's go ahead and deploy
144:14 - the app and let's see
144:17 - how we did let's go ahead and say
144:20 - firebase deploy
144:24 - and wait for the magic
144:28 - okay we're deploying we're deploying
144:32 - and we should be good to go
144:35 - now follow the link command click
144:38 - open and of course it opened in the
144:42 - wrong screen
144:44 - and let's see what we built oh my god
144:48 - my mac is bugging out nice
144:52 - sign in let's see how we did
144:57 - and here we go and
145:00 - there we go it is working let's
145:04 - try this out
145:07 - okay with an
145:10 - image and guys you can literally go
145:12 - ahead and copy that link and just
145:15 - come in here have some fun but guys
145:18 - make it make sure that you uh
145:21 - you guys are keeping it clean because
145:23 - otherwise i will need to
145:26 - um delete this and put it down
145:30 - so i'm gonna go ahead and drop it in the
145:32 - comment section
145:33 - or or in the chat let's come in here
145:37 - and let's actually everybody uh
145:40 - drop some positive vibes inside of here
145:44 - let's have some fun before we uh
145:47 - shut this stream down um
145:51 - so yeah i want to see everybody coming
145:53 - in here
145:54 - dropping some positive vibes let's
145:58 - go uh a friend says
146:01 - gracias amigo david amazing lives muchas
146:04 - gracias
146:04 - miamigo thank you for sticking here
146:09 - and being here with me okay we just got
146:12 - our first
146:13 - person inside of here okay nice
146:16 - there we go okay awesome
146:20 - so can we get the final code virus
146:24 - if you're a virus nope uh yeah they will
146:28 - give a massive way thank you so much bro
146:31 - that's why we are here
146:33 - awesome stuff so uh yeah the image is
146:36 - working
146:37 - hey hello what's up alexandros
146:40 - okay so guys if you guys
146:44 - like this build um
146:47 - make sure to hit this
146:50 - smash the like button hit the subscribe
146:53 - so that and click the bell so that you
146:56 - will not uh miss any of these videos
147:00 - and if you found this valuable make sure
147:02 - to share it with your friends
147:04 - and everybody out there and
147:07 - guys thank you so much for staying here
147:10 - with me uh i appreciate you a lot
147:14 - uh thank you so much for uh being here
147:16 - dropping the positive vibes
147:18 - and staying here uh
147:21 - and if you guys are interested down in
147:24 - the uh
147:25 - down below in the um
147:28 - description there is a webinar
147:32 - uh which is uh teaching you step by step
147:35 - how to build a netflix clone so if you
147:37 - guys want to go ahead and dive
147:39 - into this deeper i highly recommend
147:42 - going ahead
147:44 - and testing and then just uh attending
147:47 - to that webinar
147:49 - um because it's just um crazy amount of
147:52 - value and it's gonna
147:53 - take you and it's gonna 10x
147:56 - all your skills with that said thank you
148:00 - so much for being here with me
148:02 - this is david from coverprogrammer.com
148:05 - and
148:05 - i'll see you in the next video
148:09 - peace guys

Cleaned transcript:

everybody um let's start dropping in uh where you guys are coming in from welcome everybody by the way uh this is going to be the second act of the mern facebook clone um last time it was a bit long but this time we will be only focusing on the uh backhand uh and actually i gave you the front end just like last time with the messenger build it should be down below this description um so i'm just gonna go ahead and share my screen and let's see how we go about it so i go to youtube of course here is uh the stream oh oh yep there we go and the uh github link is down here guys who is excited let's drop it in the comments who is excited i want to know who is excited i want to know who is ready to build the facebook mirn clone with me today and who is ready uh to have this awesome build on their portfolio hey okay i see uh christina dropped some fire nice we got lots of people we got oh tommy kelly hey yo uh he actually won the kobe tracker challenge nice to have you in the house bro um whoa we got we got so many people who who can't wait to uh to build nice awesome okay friday john says i'm ready uh love from bangladesh and whoa we are at 181 concurrent viewers nice job guys guys if you're excited if you're pumped to have this facebook build on your portfolio smash the like and thumbs up button uh hit the subscribe to this video and let's get this video out there to everybody else and if you guys guys find this uh even the whole thing a whole channel uh like um informative and you got value out of what we are doing here with qazi sunny nas aaron and all the guys at team cp drop a drop some nice comments and and smash the like button so that this video and all the others can go ahead get out to everybody and we can provide everybody as much value as possible because i don't know if you know it but for 2020 we are planning to help 5 000 people to get jobs as developers guys who is excited who is pumped to have job as a developer punch it in the comment section let me know if you want to start working and earn your income as a developer uh starting in 2020 and if you want to be one of the 5 000 people who who get a jobs as developers buy clever programmers help okay nice yeah we got some crazy amount of fire and yes and whoa and me okay yeah i see lots of people want to become developers that's great okay um with that i think i'm just gonna go ahead and start helping you guys uh yup okay so now uh this should be the description that you are seeing at the moment and this is the link that you want to go ahead and click now what i will be doing is uh here it is i think this should be um public let me know guys if you if you can open this link or if i need to set something uh up hey dr mirn thank you guys thank you so much uh yeah okay so guys go to this github link and let me know if it's working perfectly if it's working good um and let's actually clone this app by going here uh smashing that green button just like the like button so literally go ahead hit that green button and there is the link that you want to go ahead and grab now i'm gonna go ahead and try to select all this and copy now i'm going back to this folder that i created for today's session and there is a project coming for pwj by the way i'm going to create a new folder i'm going to call it fb which is like facebook uh mern shantan who says nice hair dude thank you so much took me two years to grow um yeah so facebook mirn uh and back end of course and i'm gonna go ahead open up a terminal at this folder and guys if you don't know why this is colorful uh it's because i'm using all my zsh now all my zsh is a super awesome tool super awesome uh tool to upgrade your terminal it basically gives you a bunch of features but most importantly it helps you understand how to use terminal so much easier that um yeah so before using all my zetta sage i was like oh no way no terminal at all but ever since i started using it i'm like oh this is a good stuff okay now uh what i will be doing is just basically type in here get in it which initializes the git version control and now you can already see that i'm on the master branch okay now what i will be typing in here is essentially a git clone and paste the link that i got out from here oh that's a wrong color let's use this one uh so that link is essentially pasted right right over there sorry guys okay um yeah and now it is actually yeah so that was pretty much cloning the whole git project and now uh it actually created another folder so i don't know why i created that folder doesn't matter oh and i will be just uh seeding into that folder so let's go ahead and copy and just cd and boom there we go and now what i will be doing is essentially just typing in mpm i which stands for mpm install hey rookie uh hey uh atari wa we are not doing firebase um we kind of will because the front end is i mean it's it's already probably um up on firebase for you guys if you have done the uh original react uh build with sunny oh by the way let me know in the comment section below uh or actually on the right side or the left side i don't know uh let me know in the chat if you have built the original uh version with sunny uh i'm super pumped to see uh if you guys have built it uh because this actually this starter project is a little bit modified so it's not the exact same one but it's very close so like there is like one or two line that is not not the exact same it's just uh saving us a little bit of time because i am planning to finish this up um under two hours or under two and a half hours max okay uh so if you haven't done that not a problem it's not a requirement as it is down below and you can use that project to uh go ahead and work with this um work through today's session but i highly recommend so so that you will actually get the whole mirn thing done and you will have like more experience in react and stuff like that i highly recommend you go ahead and literally like uh and and finish up the build with sunny as well um you can just find it on on clever programmers youtube channel it's um oh and by the way we hit uh 800k subscribers thank you so much everybody whoever uh subscribed to uh our youtube there we go 800 thousand nice so uh the original facebook build with sunny should be somewhere around here down there okay now with that said who is ready to start building the mern facebook clone with me today let me know in the comment section uh drop some fire let me know if you uh if you're getting value out of this channel and because that's what literally gets us moving forward uh let me let me move the comments a bit yeah okay i'm ready um okay uh now it says me nice um guys please do not use caps lock because our nightbot is gonna ban you um uh anamika says i'm excited david let's go nice uh dave kumar you bro go ahead thank you bro okay yeah miles says people who don't say me are missing limbs yeah right mustafa goes uh ready let's go rukia goes me and lots of fire hey there we go guys okay let's jump straight into building uh the mern facebook clone and i think it's yeah there we go so now we have the front end project um cloned yep that's the word i was looking for and i think i just gonna go ahead and open up this uh folder in my wii s code um yup it should be it nice and i will zoom in in just a little bit let me just get everything uh working okay source and i will just open up app.js and let's actually go ahead and zoom in okay guys you should be seeing it now pretty uh decently let me know if you need a bit more zoom and hey dave kumar just dropped a nice little donation thank you so much bro i i actually remember you and and you're always showing up awesome stuff thank you so much we really appreciate you uh yeah let's continue for a great start yeah thank you so much bro okay um yeah so essentially we have this starter project right here so what i want you to notice guys is um we have this feed uh we are actually pulling in data from the firebase which is firebase.js yeah this is where your firebase config goes we will uh not worry about that okay yeah we will uh we will be doing that in a bit when we set up the authentication um let's actually do it right now so i'm just gonna i don't know if do i have no i don't uh let me quickly open up a new safari over here and let's actually open up firebase uh so now what we will be working on is essentially get this uh this project working and like have something have like an idea of what is going on because if we uh go ahead and open up the terminal and say ls and let's just go in here boom ls again because we are two folders deep okay oops okay there we go and now if i go ahead and say hey we got an other donation by sh uh sneha right i hope i pronounced your name correctly thank you so much bro uh we appreciate you a lot uh yeah uh on mo says please zoom boom uh so thank you so much for this lovely donation um yeah we really appreciate you uh and we love love you guys hey priyanshu what's up okay um let's go so if i go ahead and type in npm start uh it's gonna essentially start up the project i hope so because i've run npm install yeah there we go we are starting development server nice and we should soon be able to see it on local host 3000 now let's wait until this opens up yeah okay let's see what we got local host why didn't popup by the way yeah so it's um we can say it's not really working uh it's because we don't have the firebase hooked up um yeah so with that said let's actually work this out uh i will be creating a new project just because you guys um might need so if somebody is a super beginner with firebase it's actually a suite of tools provided by google i will be creating a new project uh just so you can you know um how to set it up but it's essentially it's oh i'm two projects away from the project limit i gotta do something about that uh yep so guys actually um watch out for this thing because once it runs out it's gonna give you a hard time for a month uh so yeah it's a suite of tools it's like nice uh nice stuff all you need to have to have firebase is a google account i'm sure most of you have a gmail account so yeah okay um let's type in here uh facebook mern that's good uh i don't need no google analytics and let's go ahead and create today's project let's see if i have any questions in here in the comment section by the time hey mustafa says yo keep supporting guys yeah you know okay uh will you show it on heroku as well yeah i can i can deploy it to heroku yep there we go uh so we are in the project that we just created and i will go to this uh this icon over there that's essentially adding a web application that's what we are doing at the moment uh let's go ahead and add the web app here you have to uh what you need to um make sure is that you check that box i forgot it last time it gave me a hard time okay if you see this that's good and now let's go ahead and type in here facebook mirn and just go ahead and register the app don't worry about uh firebase sdk and all these type of stuff we are not not gonna uh worry about that what you need to do is go to and now uh announcements authentication and go ahead and hit setup sign in method um coyote ask did i catch this live yes you did yes you did my man and what we will be doing is google uh authentication that's the one let's just hit it enable and the support email is gonna be whatever email you have yep uh david i made my first box with code tutoring uh during people let me okay and i kid you not go check one of the males cause he wrote hey priyanshu great job bro nice job okay um i think i'm gonna turn a bit up the air horn and yeah okay uh awesome now uh we are still we have 200 people in the house let's go guys drop some fire if you're uh if you're ready for today's build smash the like button if you like it and if you got a value out of any um videos by clever programmer let's go okay so yeah google authentication is already done nice and what we need to do is go to that icon hit project settings over there scroll down all the way to the bottom uh hit that config that will pull this thing up and you only need this stuff inside of the object yo uh doing react tutorial i would love to but i have exams at the moment not a problem pranav you will be able to watch this back after uh later on it's uh it's all good and firebase probably costs money right no it doesn't it's completely free uh you don't have to worry about it we guys will let you know in advance if something is going to cost you money but we haven't haven't done anything that literally costed money we are trying to focus on teaching you guys stuff that is essentially free and provides you a lot of value okay so we we don't want to break your bank okay uh now what you need to do is like essentially copy this uh snippet of code go to firebase.js delete this commented line and just uh paste it and i think we should be good to go very soon okay here we go nice um bruce bane asks whoa uh hey david will you be building the front end as well or just the backhand uh today we will focus on the back end hardly because a full moon build would it's actually a two session or two day thing um so yeah now not gonna build the front end today uh you can go ahead and search up sunny's video on that and um and then you will be you will have a stepbystep video guide on how to build this very front end all right let's hit sign in and it's gonna drop me over to that yep i'm gonna go ahead and sign in here and here we go so because at the moment um this is not we don't have a running server or something that it is attached to uh and that's why it's not showing anything but we can see that we are live over there which is nice uh so the widget is working uh the use what was that react context api is working because actually essentially these are uh these are using react connects api there we go and you can already notice the only difference uh between sony's build and this build is i changed the input form so in originally in sunny's build there is an other uh link oh no no a text box uh where you put the uh image link and then that was the thing you uploaded now we are gonna be using uh mongodb grid file system i think i think grid fs is grid file system i'm not sure by the way so we will be using mongodb grid fs to upload files so that we will actually be uploading files to mongodb it was a highly requested thing uh from us and we want to let you know guys that we hear you we are here for you and we are providing the value that you request and yeah so you guys ask we deliver that's that's how it works okay um real mobile app using javascript frank asks yeah we we are actually planning on launching a couple of uh react native uh sessions as well okay uh yeah let's go ahead and start working on the back end so out here i will be creating a new folder which i will essentially call oh that's the facebook mirror backhand oh my god okay sorry um i i i gave it the wrong name okay don't worry about the facebook mirroring backhand folder um that was my mistake okay so here is where the facebook backend project will go uh orif says you're so nice looking thanks bro uh okay so what i will be doing is opening up a new terminal and list out whatever we got i'm gonna go into facebook backend boom and clear out the whole terminal i think i'll just close these because we will worry about those later and what i want to do is essentially oh um start get version control and i can do that by typing in get in it nice there we go and i think i pulled it up yep and what we will be doing too is is pretty much just um initializing the mpm package okay so npm init there we go it's going to throw a bunch of questions and some stuff that you will never read at you so package name is actually good for facebook backend version uh it's one description um learn facebook backend project okay uh what you need to know is that we are not going to be doing the index.js entry point we will actually uh do server.js and whoa we have 222 people watching this live two to two awesome guys thank you so much for uh being here with me and smash the like button if you got uh any value out of this live or any other for that purpose um yeah okay so what i will be doing is uh type in here dot server.js nice there we go test command don't worry about it git repository leave it empty keywords author it's gonna be me cozy nice license okay is this okay yes it is and what we will be doing is installing all the dependencies at once i don't want to worry about uh any of those later and yes uh sri bassam asks if this is the package.json file yes my man this is the package.json we just have it uh ready so before we go any further let's close it up uh so it doesn't mess everything up i will um clear out the terminal so you guys can see it nicely and what i will be typing in here is npm install or mpmi and we will uh use express mongoose uh cores motor motor grid fs storage okay there is already a lot of stuff that we don't know so express is actually the server side javascript that we will be using today it's a framework uh which is running on the node.js runtime so if you guys don't know what the mern stack is uh oops wrong button uh sonny mer yeah so the murn is actually standing for mongol db express js oops can't speak while i'm typing react js and node.js so node.js is actually a javascript runtime it's a nice little stuff mongodb is the database that we will be using to store not just our posts and text and stuff like that that we did earlier we will actually store images inside of there um and we will be using something called the grid fs to store images and we will also use mongoose to connect to our database and express.js will be running on our server react is our front end nice so yep that's pretty much it okay hold on uh boom okay oh okay hold on a moment yeah there we go okay so what we will be doing sachin says david rox thank you so much bro thank you so much okay what we will be doing is type in npm install express bungles course motor motor grid fs storage so motor is basically just accepting the image motor grid fs storage is going to be the actual storage where we uh store uh our images uh grid stream is gonna grid fs stream is gonna be uh responsible for uh reading out and rendering out stuff to the user's screen uh we will also have body parser we will also have path and pusher because this app is going to be a real time okay um yep i think that's pretty much it let's go ahead and install everything and while it's doing its stuff let's actually go ahead and set up our mongodb database why is my hair coming all the way yeah okay mongodb.com now guys who has worked who worked with mongodb let me know in the chat i want to know if you know mongodb if you know this awesome nosql database let me know guys in the comment section down below because this is some awesome stuff that is highly in demand in the job market right now along with the other three stuff inside the mirror preanswer says it's the first time nice awesome so mongodb priyanshu priyanshu mongodb hey um yeah uh rukia says me um it's me because you're you have used it the first time or if you have oh no i asked if you have yeah okay i see a lot of people already have used it nice awesome okay um yeah i see a couple of firsttimers and i also see a couple of people who have already used it i work with a lot of jason says kebab it's uh pretty much the same stuff i mean we're literally gonna be storing stuff in a json format pratham says yes i used mongodb mustafa says me too i used it nice guys is it the beginning um almost the beginning you're not not too late okay so what we will be doing is so it's it's actually a freezer for those of you who are uh new to mongodb this is a completely free i mean it you you can also upgrade of course upgrade to uh paid version but yeah we will be doing using the free uh completely free stuff um and this is going this is a nosql database and this is going to allow us to store in our images and post since every single detail okay if you haven't used mongodb uh visit fail this is your button to click if you already have like me sign in is the button you want to go for um essentially it's super easy to uh set up you need an email address a password of course and then you will be guided through now because i already have it i will just sign in and yep let's go ahead and we are signing into mongodb are we using mongodb or firebase we are going to be using both but we are not going to be using the firebase database we will be using mongodb instead so firebase today is only going to be used for authentication and hosting i just came in what's he doing uh asks kion pillai um i'm doing the facebook clone um tell marks i said hi and i will be doing it in the mern stack okay so what i will be doing here so those of you who are using mongodb for the first time let's just go ahead and build a cluster it's going to be inside in the middle uh let's just go with that and you will be able to follow uh the follow up once we have the screen again i just need to go ahead and create a new project alongside with those who have already used mango db so i'm going to click new project right there um i will give it a name i will call it facebook mern clone okay nice i will click yes this is the place where you can add other members i'm not working with anybody so create new project uh radu mihai says i love learning things nice that's that's the mindset bro so anybody who is new to mango db uh was on this screen so let's go ahead and build a cluster with them uh we will be using javascript of course and this is where you want to go ahead and create a cluster now you can go with the paid version if you want to pay but we will be using it free because it's completely enough don't worry about any of the stuff going on around here yeah just pretty much leave everything just the way it is and click that create cluster button down below uh nice and this is essentially going to take a couple of minutes it says it's uh one to three minutes well it's not um it's a little longer usually but in the meantime we will be setting up network access um let's actually do it a bit later because okay let's actually do it a bit later let's see how our uh yeah so everything let's go back to the code everything is installed and what we want to do is let's first deal with the okay so if you guys can yeah so there is like 2k in the version control stash um we don't want that to happen that's because uh there is node modules and there is a meme i usually show so node modules github meme so what happens if you're not doing this step with me is where we ah there it is um that's pretty much what's gonna happen to your github whenever you push this code up uh so there is this node modules it's a couple of hundred megabytes already because we have uh we installed lots of dependencies going on here uh these are all added here and if you're not following me this tab it's gonna blow the whole thing over okay guys get the energy up let's get started coding what we will be doing first is add a dot git ignore file uh we're just gonna type in node module oops modules in here and let's save it and now that version control just went back to three that's what we want to see okay nice stuff that is uh so get ignore that was it let's go back to package.json two things that we need to do here uh one of them being is set the type to module and enable es6 uh coding in node.js now you want you might if you were here for the first time and you haven't seen any of these marine videos you might be surprised because es6 is still in experimental um in experimental state but we know and you know that ex es6 is the way uh is the is in demand right now in the job market so we will be doing es6 stuff therefore we need to type in type and select the module that will allow us to do the exact same stuff that you you yeah that you do with uh sunny so we will be importing a package from the other package um no importing a module from the package yeah that's the way and yes he makes a aliens in area 51 es6's experiment yes es6 is experimental okay jokes aside um so yeah and we will be importing a module from a package that's going to be the terminology that we will be using instead of requiring it that's it the other thing we need to do is type start in here and we will just say node server.js and add the comma at the end of the previous line nice there we go with that said uh package.json is ready um and we we actually if you you guys might be interested in why we added this stuff over here it uh it will be needed for heroku to be able to start the application by itself nice uh with the cover let's close this file as well and create a new uh file inside of the back end project which we will call uh server.js and we just got a nice lovely donation by anupam uh he goes uh oh it's just um okay it's without tax thank you so much bro um we massively appreciate you uh and stick around and be with us and get the most value out of it and get a job with us okay thank you so much by the way and yeah we love the we love you guys okay um can you make your face come a little bigger um at the moment i can't uh later on i will upgrade it's essentially it's just a builtin uh webcam but i uh new one is on the way okay let's put it that way okay now i will be closing the terminal so i can free up some space uh yeah okay um what we will be doing is essentially just uh sketching up the out the app so that we will know what to uh what we will be working with okay uh type in this is where we will be importing stuff this is where we will be configuring the application so this is the app config part then we will have a couple of middlewares then we will have some db config going on um once i learn how to type we will also have a couple of api routes nice and we will i think that's that's no no we we will have a listener nice okay okay there is a listen okay so this is how the structure of this application is going to be it's completely unnecessary to write in here if you don't want to but it just helps you a lot to see what you're working with and separate all the stuff that we will be working with okay now i have a bit of a snippet of code that i'm just gonna paste in here it's essentially just importing oh it's essentially uh importing everything uh every module from its uh package okay uh let us do yeah now i'm kind of missing that yeah priyanja i know i know guys get the energy up let's drop in the comments if you like it uh let's stop here for a moment and so let me know guys if you are finding this uh interesting if you are hyped about it if you are ready to put this application on your portfolio and if you want to have a killer project that will get you a job guys let me know who is excited who is ready to build this application with me today um and yeah on that i think um we can go ahead uh nico says story concentrating on the it's all good bro okay yeah there we go so with that said uh okay what another thing we will be doing is this this is essentially just uh setting up the all the gridifs and mango stuff this is just a nice way to doing that yeah clever programmer you are doing great job thank you so much bro uh sherry i i hope i said your name correctly thank you so much we appreciate you brother um preacher when do you sleep man he doesn't sleep uh yeah pumped up uh let's go you guys are amazing thank you so much yeah what's the use of pusher though great question uh that's a thing which we will be using to make the whole application real time uh i hope you're excited for that so mongodb is normally not a realtime database um and firestore if you remember sun is built it actually is and whenever you're like submitting something and just hit uh hit the return and and it's actually getting added to the database at the same time and it rerenders just that part that's what we will be um that's what pusher is for okay um yep i'll remove this overlay nice and push it pretty much just a little bit between front and back and right yes that is correct and it can actually transmit data but we will not worry about that just now uh we are not going to do it the efficient way later on we will uh i will actually drop a session where i'll make the application crazy efficient when it just gonna add the new stuff on top of everything but for now um we're just going to be focusing on getting the things working and we will just resync whenever something happens so pusher is actually able to push the data that was just added to mongodb to uh to the front end so yeah um okay which has a low number of concurrent collections limit it's actually a hundred uh concurrent connections for free but we will not reach that okay let's create our application and let's actually uh create our very first api route today what we will be doing is essentially just typing in uh so let's just create an application instance so const app equals express oh express boom and the other thing we want to do is const port oops uh port and normally if we just wanted it on our local server we could just literally just type in 9000 but that boring way to go about it we definitely want to go ahead and upload it to and then deploy it to heroku so we will type in process dot in the wireman dot port and two of these standing lines i don't know these names um and that's where the 9000 will go okay so it's lit it's pretty much the setting up uh so if there is a process a m file which is added by heroku by default we will use that but if there is if that's not nonexistent we will use 9000 that's pretty much it and one thing which i always forget so i will add that right now is the middlewares um if you guys have watched the messenger clone build with me i think on saturday uh yeah you can you can watch how how i uh forget about it okay so what we will be using uh what we will be doing and pasting here is uh app.use body parser json it's essentially making the app being able to read write and and work with json files the other one is just setting up the course headers okay um hey kelvin thank you so much for this lovely five dollar canadian donation massive appreciation and thank you so much for uh thank you so much for it and for being for you being here um i will make it a little smaller so i can read it out loud you guys keep giving us massive value and i can't help but share my appreciation to whole cp team thank you david keep it going thank you so much bro for being here with us we are delivering this for you and and we are happy that you guys like it so much okay nice to have you in a family by the way okay uh yeah so let's actually create our very first api endpoint uh let's forget about dbconfig just for now uh and what we will be doing is basically it's just gonna be a health check and a nice little thing uh that we create so that we know that our application is up and running so what we will be typing in is app.get a slash between these single quotes and we will have a request a response and what we will be doing is set the response status to 200 and send a hello world now guys um probably there is a couple of you who don't even know what i've done here and that's completely okay because i'm just gonna go ahead and explain everything so app remember uh this app the instance that we just created so whenever this applique app uh receives a request so we we are creating apis which is essentially um request and response and in between some logical stuff uh but yeah so whenever the app gets a request with a get method so if you don't know what get is it's basically downloading data from the database not the database from the server and there is like post put delete a lot of other stuff i didn't even know all of these just like that so get is downloading data from the server or post is uploading delete it's of course it's deleting put is essentially it's a delete and a post so it's pretty much like um it's more like uh changing something so whenever you okay let's let's put it that way so when you were um uploading a image to facebook you are using a post request that will be uploading everything to the server then to actually show it to you you will need to make a get request so that you will be able to download it onto your screen and if you are changing your profile picture um you are you you are doing a put request right i i hope it actually uh made it clear okay uh whoa we are still ha we still have 895 people with us awesome stuff guys uh let's go okay so while we will be yeah uh and and whenever we receive this kind of request on the slash so basically the root it will fire off a uh callback function which has a request and a response parameter and there is we will set the response parameter to 200 status which essentially uh says okay and we will send back hello world um kian says mine says 19169 yeah because you're just watching youtube but we are live on twitch we are live on facebook on i think two different places so yeah all in all it's 200 now stick with me guys and if you guys uh got some value out of this video hit the like button okay uh yeah there we go and we will actually make this application listen to our requests and what we will be doing is basically typing apple app.listen on the port we defined up here and whenever so so it's basically when when we start listening with the application we will go ahead and console.log that we are listening on localhost and the port which we have and i am here actually using a string interpolation or the other thing is string concatenation i think uh so i'm using backticks over here instead of normal single quotes okay um let's go guys who's who is pumped about having their own first api route let me know in the comment section down below and yeah let's go ahead and fire this server up i will be opening up my terminal clear out everything so you guys can actually see what i'm doing and i will type in nodemon just simply just like that and this is actually starting up my server and as you can see there is the listening on local host 9000 which i've defined up here okay uh nice let's go to our postman oops i need to zoom in a bit uh yep and i think i already have all the api uh stuff going on here uh yeah and just just type in localhost 9000 and because it says hello world we know this app is up and running great job guys you just created your very first own api route this this deserves two air horns actually okay with that said let's go back and let's actually jump into the middle and upload an image to mongodb guys who knows how to upload an image to mongodb drop it in the comment section drop it in the chat let me know if you're excited let me know if you know what will what we will be doing right now um and yeah with that said let's actually stretch a little because guys this is gonna be the build this is gonna be the new thing rookia goes let's go yes play says i like your hairstyle thank you uh yeah and a thoroughball asks if it's binary nope um i mean it could be binary i don't actually know how the grid fs works but yeah i i i it could be binary it um so the way it it works is essentially cutting up to 255 uh kilobyte chunks uh our uh image and it will be like cut up into small little uh pieces and then we will have everything um set up uh and it will map together the stuff whenever we are retrieving those okay now with that said uh imat goes let's do it you think let's do a tree let's do it awesome yeah let's go so what we will be doing is let's actually connect to our mongodb database by the time this should have finished and what we will be doing first is set up a database access and a network access so let's start with the network one so we will be adding an ip address where we will be able to access to this database and we will hit this allow access from anywhere and guys a huge huge disclaimer let me actually write it out okay this disclaimer do not do this in a production environment you don't want to allow access from anywhere um this is just for uh teaching purposes or educational purposes we are not we don't want to allow access from anywhere okay let's hit confirm let's go ahead yeah and it's going to do its stuff uh exactly only on testing screwed if on production that is right a thoroughbar that is exactly what is it okay nice uh let's go and set up the database access what you want to do is just type in here in the uh user field admin and then auto generate a secure password and then you want to save it somewhere very very safe where you will be able to uh return retrieve it because this is the last time you're gonna see this password and then let's go ahead and oh um let's go ahead and hit add user this is the only thing you need to worry about right now uh don't have to worry about all these rules and stuff okay and we just got another lovely donation five pound lovely donation which is a massive amount thank you so much lux and she goes i just finished react facebook clone frontend tutorial this is the place where you want to be uh there is a tiny little bit of money uh modification between the starter project down below and the sun is built um we will be covering that okay nice stuff by the way stick around and you will have a full moon facebook clone that's the way to go about it okay um okay and let's go back to our clusters it's actually deploying uh our changes which is nice and what we will be doing is essentially just connecting to our database with that button let's go ahead and hit connect your application and that is the string you want to copy okay let's hit copy and guys actually notice that there is two little uh parameters that we will need to pass in one is password and one is db name okay um we will hard code the db name and we would this is where your password will go okay let's go back to our code and what you want to do is type in here create a new const which will uh be a uri and you wanna just paste your um uri in here i will close everything out so that you guys can actually see everything perfectly and in the database is going to be the facebook database which we will be just go uh fbdb uh hi the best from stream we have crazy people um i mean i can't really hide it from for now i'll just uh yeah i just go go go this way guys don't spam the facebook clone my facebook loan okay okay yeah so this is uh this is the full uri that we will be doing and we just received an other lovely donation from south africa uh 35 zar and marius thank you so much first of all we really appreciate you brother thank you very much and he goes uh the eye is called a pipe usually ii means or exactly oh yeah it's called a pipe okay thank you so much for yeah so the name of that character is pipe okay thank you so much and yeah uh two of them means or that that is right and cheers from south africa cheers bro for staying here with us um yeah i i think it's pretty late over there i think it's around like 10 p.m or something okay uh yeah let's go ahead and now we will need two different kind of connections to our mongodb uh i'm just gonna pass them inside of here and so notice that there is a tiny bit of a difference so we will be using the first one um i can do it a much nicer way so we will be using this connection uh hold on a moment so we will be using this uh whenever we are uploading an image and it's basically going it's gonna go ahead create a connection it's going to save it to a variable we will be able to work with that and then it's going to be like delete the whole thing and drop everything now on the other hand we will have another one mongoose connect which is like a general connection and it's um it's essentially just a pool of connection and it will be used whenever uh you want to use it okay uh with that said let's actually set up our db connections okay okay i just did okay um but one thing we want to definitely do is log when both connections whenever they are up and running so we will do con uh yeah con because we defined it as quan so we will say con once and yeah once open uh we want to fire off a callback function and we were just going to go ahead and console.log uh db connected nice and the other one is gonna be um yeah uh i usually ask didn't get how how this copy is pasted suddenly without copying i actually did copy it from my other screen um yeah i'm just trying to save a lot of time and energy for you guys and i'm more like um i'm just some some snippets i just uh copy paste and some of them i type it out as it is and which whenever i'm copy pasting i am making sure that we are actually understanding what is going on behind the scenes okay with that said let's go and let's go with the other um connection so uh we will say oh mongoose.connection connection yes and again once and open we will fire off and other uh callback function which will do the exact same thing so console log vb connected and that's kind of like kind of what we want to do um yeah and if you guys see 2db connected that is awesome hey we just received that other donation by ayush gupta thank you so much bro we really appreciate it thank you so much and yep and he says congrats uh congrats team for 800k subs thank you so much please drop a react crash course more inclined covering specific topics like hooks props rotor uh redux etc we are actually gonna do that very soon stay tuned brother we hear you guys we will be doing that very very soon okay um there is some kind of russian text going on as well in the chat anybody who is russian let's respond to him please him or her okay um yep so with that said uh we pretty much have our db connection done and now what we want to do is essentially set up everything so that we for the image saving stuff okay so what we will be doing is pretty much set up the grid fs which okay actually let's create the grid fs so we will be using a lat gfs and that's going to be our grid fs and what we will be saying is grid fs equals um there's some thing going on on my keyboard okay i'm back uh so grid fs is going to be grid con dot db and mongoose this is pretty much setting uh sending the target of this gridifs so the connection database inside of mongodb uh yep and the other thing we will be doing inside of here is define the actual collection where we will save all these images so gfs.connect collection okay it's a collection um and we will say images in here so we just pretty much just creating a collection to store all our images uh inside of there hassan asks uh is mongodb supporting realtime db like the uh firebase no uh originally it doesn't but we will make it work uh real time e real timey i don't know if it makes sense uh so yeah we will be doing there some kind of real time stuff uh it needs a little bit of extra work but other than that um it doesn't support it okay so inside of connect con once there is nothing else for us to do what we will be doing is create our actual storage where we will be store all our images um okay and we will be typing in so we will create our storage and this is going to be a new grid fs storage of course and inside of there we will have the url which is going to be uri so if you guys uh just added it inside of here um i think it's a lot better to have it like in a separate um separate um variable so that you can access it a lot of a lot of other times hassan asks uh i should add extra mpm packages bro it's all up here uh these are the packages that we imported and if i i think you were the one who asked about the realtime stuff pusher is responsible for making mongodb real time okay nice let's go back and let's get to work so we will have a url and we also wanna oh not there there and we will also have a uh have a little bit of file inside of here because we're actually adding a file um and we will have this is going to be in the request we and the in the function that we want to fire off we have the request and the file uh parameters and let's go ahead and return a new promise right written new promise which will either resolve or reject uh yep and let's actually define the file name uh domain says awesome love you guys thank you so much bro we really appreciate you stick around till the very end because this is going to be some juicy stuff all righty uh so const file name is gonna be so this is where you get to uh add whatever um uh file name you ever want otherwise by bro make sure to watch it later uh and i will be creating a file name which will say image a dash and the um and and the date now in in some kind of programmatic form okay so let's go and type in image dash and this is where um the date dot now will go oh oops okay here we go and we also want the extension to display because that's part of the uh part part of the file of course so we will be passing in the path.extension name and it's going to be the file the or from from the file the original name so this is essentially just wrapping out the extension from the original file name and just chuck it in there okay with that said uh we also need to add a file info which is not gonna be um something crazy fancy so the file name is gonna be uh file name and we will have a bucket name which is gonna be and guys make sure that you know what you're doing because we are typing in images again but please notice that we are saying images here as well as here so these two literally have to be the same otherwise it's gonna be um it's not gonna work out well uh biff okay um parth says i need help with cyber security class i mean we are actually planning on dropping some security content okay uh let's go ahead and let's resolve everything boom resolve and we will say file info awesome with that said we pretty much have our storage uh done but we need to set it uh so that this is gonna be used as the default storage so const upload and this is going to be the method that we will be using to upload the file and we will say uh motor and motor is essentially a package in node.js that you can use to upload images and files and whatnot and we will just pass in this storage right so that's pretty much setting up the storage and we should now be able to upload a file so who is excited to upload a file to mongodb who has done that who hasn't let me know in the comments because let's just try to make this um lectureish thing uh transformed to a conversation where you guys are like communicating with me and i'm answering like literally i'm answering a lot of comments inside of here so guys let me know if you have done this before if you know what's happening if you're completely new let's make this a conversation let's build a relationship um yeah and i need to drink because okay so sriracha says i didn't all good bro we are focusing on beginnerfriendly stuff so i'll be explaining everything james says i did it bro yeah nice awesome oops and let's actually go ahead and build that um endpoint so what we will be doing here is i okay um yeah i haven't but i'm excited that's the way to go about it nice awesome okay uh so we will say add the post and we will say uh nude as well i'm your backhand hair fun lovely bro thank you okay so we will say upload uh image so notice that we have like two parts of this endpoint uh the first one is gonna be upload uh patrick says i'm new to node.js welcome to the family bro uh so upload we are gonna be using upload for uploading post as well but now we are just uploading the image okay so and we will be passing in the upload dot single which will enable uploading only a single file and we will be looking for this file in the file field right so let's type in file in there and we will also fire up a callback which will have the usual request response and we will set the response status to 201 which means actually created so that's the equivalent of it's kind of like okay when you're successfully uploaded something that's a 201 right okay uh yep and let's go ahead and send back the request dot file in there so that we can make sure that we um we did everything correctly let's go and check everything out let's okay so my server is restarting db connected twice yeah you can see it guys nice and let's actually check this out so what i will be doing here is copy this um boom boom okay and okay so upload image what i will be doing is have a body going on here a file like body you gotta select form data and here this essentially gonna turn to become a file so you can add in a text and you can also add in a file so i will go ahead and select a file and yeah let's go with a cozy picture boom okay so i'm ending this image and i'm gonna go ahead and hit send guys who is ready to save our first image into mongodb let me know guys in the chat i will not press this until you let me know if you're excited about it or if i'm just being alone all over here just coding and talking let me know guys if you're with me if you're at this point and if you are ready to save your images into mongodb okay who is ready to do that excited do it okay yes lots of hands by kelvin okay super excited says rukia awesome okay let's go ahead yes we are with you nice okay okay uh let's go ahead and send it let's see what is happening and guys we just have it okay i'm gonna unzoom a bit so we have it working so whenever you see the stuff that means we have everything in our mangodb so that's the file name we just defined yeah so jpeg jpg actually yeah let's go man good vibes awesome so jpg is the extension um and this is the new date that we did over there yup no it's in date that now sorry and this is the image from the beginning okay now uh what i want you to show you guys is actually let's go to collections it's just um now everybody can sit back for a couple of minutes i'm just going to talk a little and you will be able to see how it's actually uh saved into mango db so because this image is pretty low resolution the image that chunks is gonna be just a one document thing so the collection size is one two two kilobytes which is not a huge it's because the image is not like a crazy high uh hd 2080p something but if i were to upload a 4k file it would accept it but it would like divide like crazy amount of little chunks and this is the images dot files and this is where all the details for the file is gonna be saved with that said okay this was the um this was the part when you didn't have to uh code anything let's go back to the code let's get ready to retrieve this image so that we will actually be able to see what we just did okay so let's stretch a little because that's important and if you guys have some water have some water get your coffee ready get your water ready because we are gonna get into the juicy part real soon okay yeah uh let's go ahead and retrieve this exact file that we just uh saved in there so what we will do is say app oops app.gap yeah and we will just say um the endpoint is gonna be uh retrieve yeah retrieve last time somebody i think it was rukia who uh spotted then i made a typo please check it if it's correct um yep and i will say image and single and what i will be doing is fire off another request response parameter callback function and oops and inside of there we will be starting to look stuff inside of grid fs okay guys who's excited to retrieve that image that we just saved into mongodb let me know guys let's start engaging uh the comments are not popping as they did before um let's actually have a conversation let's let's go let's go guys let's start typing in whatever you're thinking whatever your question is let's drop it in the comments and with that said let's go so what we will be saying here is grid fs dot uh file oops files fire laser no nice and find one and inside of there we will be adding the file name and this is pretty much like filtering whatever we have now uh we're gonna be passing in something a query on top of the uh link i'll show you i'll show every i'll show you guys everything so request.query the name so we will be passing in with every single request a name and and that's going to be the file name that we want to retrieve okay and once that's done let's actually uh do the error handling um we are taking it in cause this is the juicy stuff that is correct calvin that's right my man okay yeah uh so let's do a little bit of error handling this is where the error or the data goes it's actually going to be the file and this is where we will be starting to use the grid fs stream okay so inside of there uh it's going to be almost the usual thing but we are gonna so if there is an error we will of course set the response status to 500 and send the error back so we can go ahead and debug it the other thing we will be doing so if if it's successful nice uh but we need to make sure that if it's either a file first or if the length of the file is not zero so if that that's the case then we're just gonna say file not found and send it back as an error message uh but if if that's okay uh it's actually nested if gate uh so if that's okay we will be creating a read stream which will um which is like a grid fest great read stream and that's uh this is where we pass in which file do we want to find uh shuri says very valuable live thank you so much bro bro i really appreciate you and i'm seeing you you are actually one of the actives massive thank you bro and let's go let's go guys and smash the thumbs up if you guys like this build okay so um and the other thing uh the next row is pretty much just gonna set up a pipe and that's where we will be uh so that's where we wanna uh pass in the file that we just created right does it make sense guys let me know in the comment section down below if it makes sense and whoa we are at 290 likes guys hit the uh smash the like button if you like this and let's get this video up to 300 likes let's give it a go let's actually do it we are at 291 i'm not gonna go any further and i'm not gonna show you if this is working until we reach 300 likes let's go let's smash it let's actually go ahead and hit that button we are 295 let's go guys i'm waiting here i'm gonna wait until we go up to 300 let's go 298 two more two more let's go okay 303 nice thank you so much guys thank you so much really appreciate it okay let's uh on that let's actually go ahead and retrieve the image so uh notice that this is the image we want to go ahead and retrieve and i'm gonna go ahead and oh okay yeah rim retrieve image i think this is how i yeah retrieve image single okay nice uh and the name what i will be passing in is actually called a param that's what you want to do and this is where you want to go ahead and add the name and the file name is going to go over here um yeah rookie ask fi file length zero file shouldn't be empty right exactly that's what's happening exactly and this is where um i'll pass in the image name and notice that this uh actually the parameter is gonna go up here up top which is gonna be useful in a bit okay let's hit it and let's see if it is working hey there we go nice okay we just retrieved qazi okay and actually what i want to do is copy this whole link and paste it to my browser hey that's so it saw a couple of people asking where cause is on my screen bro that's literally cozy okay um we will be using this in just a bit on the front end and we are at one hour and third almost 30 minutes so we gotta speed up a bit okay i'm kidding um okay now what we want to do cause a retrieve to life finally that's right okay so what we want to do i am it's going to be a bit uh hard to understand so i'm going to go ahead and type it out or like show you guys so what we will be doing is first uh so fur whoops so first uh let's make that bigger actually uh yeah that's the way yeah okay so first damn we will save the image okay we will save the image then from the response that's where we will know the file name right because that's how we retrieve this image so we will grab that file name and then save it with the post right so that we know which image goes to which post right and then when we retrieve it first we retrieve the post first post and then we're gonna second we're gonna retrieve the image okay this is gonna be the process so first we save the image then get the file name that we just created save it with the post then when we are actually rendering it out we're gonna render out the post first and then at the same exact moment we're gonna go ahead and make the uh request to the image as well hope you guys it actually made sense let me know in the comment section down below if it did make sense and let's remove the gray board um so guys if it made sense let me know in the comment section so i know if i'm explaining uh in a way that you guys understand it so with that we're gonna definitely need two more endpoints one of them is going to be saving the image or the whole post sorry and the other one is gonna be for retrieving okay now um what i will be doing is create a post model as we usually do it's going to be just a structure for this um for the database how we will be saving the whole post okay muhammad says yes great work thank you so much bro really appreciate it and let's go and type in here so the file name i'm gonna i'm gonna just gonna name it uh posts so that we know it's gonna be a mongodb uh schema yep and inside of here uh let's import mangoes from uh oops mongoose and let's create a post model oops post actually post model yup that's it and it's going to be mongoose the schema nice and i always make this mistake i always import it accidentally so and inside of there i'm just gonna pass in all the stuff that we wanna uh save so we definitely wanna save the user the image name which i was just talking about the text which the user uh just type in here but the file is uh it tells me file not found oh the file is not saved um drop me a message and we can debug it we definitely want to save the avatar uh which is gonna be which we will get with the uh login and we wanna save a timestamp so that we will be able to order it in the nice uh in the nice way so the newest is going to be up top and what we want to do is export default the mongoose model that we just created and this is where you guys are gonna be uh give a name for the uh for the um what you call it the collection where you will be uh saving your posts right now notice that it is in a plural you need to make sure that it's gonna be plural plural otherwise um mongoose is going to be renaming it anyways so don't worry about it it's going to do its job but when we are setting up uh pusher and realtime stuff you will be like why is it not working and that's probably because like most of the times uh it's because we didn't um you didn't add the plural version in here and you're trying to subscribe to the singular version so if you want to see that that thing happening i recommend going ahead and watching the mern whatsapp build as well because that's where i i made that mistake and that's how i learned it okay let's go back and oh and of course we are passing in the uh post model okay with that said let's save this file and close it because we're not going to be doing it we're not going to be needing it anymore but what we definitely need to do is import that and for that we gonna be go up here what is this um and this is where we will be importing it so we will be importing it as posts so that we know what is going on in here and i have it with the wrong name so i will be name yeah mango post js nice great work guys says uh yazid thank you so much um collection of the data we are passing post that is correct rukia that's right okay um yeah with that said let's actually create the two more endpoints that we will be uh working with today one of them is gonna be uh i'll so i i like to group these uh requests and uh and uh the image upload so all the uploads should be like in one place and all the retrievers gonna be you know in another place uh we need type as date um you can do it that way but i'm not gonna do it so i will be passing in a string instead of a date you can you can definitely do that like literally do that um yeah psycho coder okay um yeah let's see if there is like a good question so guys if you are uh asking like real awesome questions i'm gonna be popping it out on the screen okay with that said let's go ahead and upload the post so what we will be doing is essentially uh receiving a request on the upload slash post right uh so that that is upload as well and that is uploaded as well but it's image and that's post it's just kind of like a naming convention thing because i i want you guys to have a project under your buckle which um no under your butt sorry uh under no i actually buckle me makes sense as well so um on your github that is actually like a nice nice way nice to look at your code uh project so what you want to do is definitely make other developers who you're working with you you want to make their jobs as easy as possible in the meantime i'm going to while you are copying it i'm going to like add a nice little frame so you know what to um what to copy i'm gonna explain it a little uh in just a bit but i wanna do uh i wanna help you guys in the naming convention stuff so that it's going to be super easy to read and understand your code because code is for human instead of machine so it will be translated into a machine language all right now what we will be doing is so inside of here we will create a db post um const a variable and this is where we will save the request body right and we want to go ahead and in the mango pose that we just created right uh we want to use that schema to create a new post inside of our database using the db post so essentially the request body and we just want to go ahead and save it and this is where the error handling is going to happen so the usual if there is an error send back 500 send back the error and if there if everything is working perfectly let's go ahead and set the response status to 201 and send the data back that we just saved nice that's gonna be uploading the post and we will need to make sure on the frontend side that we are actually passing in the image name because otherwise this whole thing is going to blow up and not going to work so down here we are going to be retrieving um the posts so what we want to do is go with the user naming convention so what we want to do is uh whenever we receive a get request on the retrieve posts fire of this function then posts this thing yeah mango posts find and you could literally go ahead and like filter out some stuff and and just pass it with pass back that but we're not gonna do that we are gonna omit the whole thing and then we will move forward with the error handling so if there is an error 500 and if there is not this is where the sorting thing will go so this is why i'm using the timestamp uh data model that or the data type that i'm actually using i'm going to be passing in high big only by the way i'm going to be passing in strings which are going to be like numbers which are going to be exactly like this is the um date time oh wrong wrong annotation so this is gonna be the date uh datetime format that i'm gonna be passing in and i'm gonna be saving it as a string because that's literally the easiest way to work with data okay and based on how so data sort b and a and based on what is the timestamp i'm gonna be sorting the whole thing it's literally a snippet of code that i found on the internet um and this is how i'm sorting everything um from uh inside of the database and once that's done let's go ahead and set the response status to 200 and send that data back nice i think with that said this should be good now uh to test it out we we are not gonna be worried uh we're not gonna be testing it out for now uh because we are actually gonna be hooking it up on our front end which for those of you who joined late uh you might be wondering why do i have the front and inside of a backhand folder i made a mistake that was literally it okay um so that's essentially our back end now let's go ahead and oops there's this fireball okay let's go ahead and i think i'm gonna be removing all these firebase stuff because uh this might be some old stuff guys literally uh if you guys have this firebase going on uh i highly recommend doing the same thing okay uh yeah so inside of source i have the components right around here and i have the app.js i'm just gonna go ahead and shut down the server.js file for now and what we will fir what we first need to do yeah we have the node modules so that's done and let's actually take a look at how this application is actually built up so on the header we are importing lots of a bunch of stuff so this is the exact same that sonic built with the react context api everything is working and functioning so we are just passing in uh the facebook logo this is search icon uh search the input field for searching uh all the icons that are going on and the other set of icons on the right hand side and this is where the uh user name and the photo url uh are happening that part yeah that's the middle part and yep so let's literally uh the part we are uh looking at so the part we are looking at on in vs code is essentially this part nothing uh super uh fancy going on in here okay now let's close the header we're not gonna be worrying about that sidebar uh hmm why do i have this comment here okay so we are literally like passing in the sidebar row which is uh which is made up of a of an avatar and an icon yep so this so this is the avatar this is what happens when when when we pass in the avatar and this is what happens when we pass in the icon so we are literally like oops passing in everything well that's actually a nice way to show it so guys i hope you guys can uh see it in a good yeah okay so that we are literally just passing in some stuff and we are reusing the exact same component because why would we want to go ahead and build it again doesn't make sense okay let's close it again uh and widgets um this is literally just a facebook embed nothing super crazy going on in here and the login this is where we set the um set everything up inside of the react context api um yeah that's pretty much login page nothing super hard going on i'm not gonna go deep i'm not gonna dive deep into react context api um it's working okay so one thing feed that's uh hola que talestan mr jose that was pretty much all my spanish knowledge by the way yeah okay i already imported in axios and the other so from the instance that i've already created i've installed pusher um so what we definitely want to go ahead and do is check out the uh axios so in here we have the localhost 9000 set up already um yeah superhero hahaha uh mangustan lost videos mainspring um i really appreciate you bro i cannot respond to that in spanish i'm sorry uh yep so buena espanol oh my god swedish clicks swedish clicks in faster okay so in axios we have the instance ready nice so what we are doing inside of here is essentially uh checking in the um firebase database that sunny um can you answer at instagram after of course um so inside of the collection posts on snapshot this is more like so yeah uh we're creating a snapshot and we are sending the post data to that thing now this is the part where things are gonna get a bit different so this is what we're gonna be deleting and then create our stuff sorry guys i need to drink a bit yeah yeah um but i love swedish okay um yeah so uh this is the firebase stuff don't worry about it for now uh we're gonna be deleting that let's see what's inside of story real it's pretty much just creating the stories like passing in all these uh stuff don't worry about that avatar that's all good psycho coder if you don't know much about react check out one of sony's videos on that super informative and super super awesome and it's very very on demand okay let's go to message center this is the other file that we will need to worry about because inside of here yeah i already had the axios and the form data uh good morning from australia yo what's up australia in a house that deserves an air horn okay and we still have 144 people live guys stick with me this is gonna be like very soon uh we're gonna be finishing uh we got like 15 to 20 minutes back to the end make it uh till the end with me guys so yeah uh let's carry on so inside of here we are pretty much uh like this is the uh save subma handle mid stuff uh this is the firebase thing that we will be replacing with our uh content multilingual have been built of course why not okay uh yep message sender and let's check out the post what's going on in here and it's basically just accepting uh all these props that we are passing on and then based on that we are um we are we are just rendering out everything one thing though that we need to worry about is this part this is a bit of a different way of going about how sony built it because this is where the link will go um hold on a moment uh this is where this link will go right these kind of links so this is how we will be rendering oops rendering out all these images hey quasi okay um let's actually start with the feed so what we will be doing inside of here is uh we will literally like create a new uh function that is gonna okay let's get rid of this use effect for now uh we're not gonna be using that sorry sonny um so sync feed is gonna be the function that we will be firing off to sing the whole uh feed and to grab all the um posts that we had uh naming convention hello so retrieve posts and then we will yeah you can go ahead and console.log it and then what we want to do is set the post data to response.data okay now uh what then what we want to do is whenever this application when whenever the application loads uh we want to have a use effect to sync the whole thing and then essentially everything is gonna be the exact same we're gonna be returning here it's not done just yet now another thing we will be doing is going into message sender and this is going to be a juicy part because first we have to decide whether this uh post has an image attached or not and because if we are trying to save like you can literally post uh without or with an image on facebook of course and we are building the clone so we need to handle that situation so whenever um there is an image we want to go about it in a different way and when there is no image we just want to save the post and that's it so inside of handle submit uh let's so you need to have this row ah that row stays there and these stuff stay here i pretty much made it separate so that you can go ahead and just delete the lines that you need to delete now uh what we what we will be doing is let's actually create an if gate boom so if there is an image um and how do we know if there is an image okay that's a good question i forgot okay yeah how do we know if there is an image this is how we will know if there is an image so if we actually go ahead and click that upload image button and then select an image that's going to be stored inside of this uh u state or of this state and then if it is happening then we will be uh creating an image form or um yeah creating an image form which is pretty much uh form data it's just animate image form and then we will open that file that image and this was so okay so how does this whole thing work so we are appending something to the uh image form form data now the field name where we want to append it is going to be the file the data that we actually so the thing that we actually want to be i want to like put in there is going to be the image and then how uh and then we want to refer it to as then as the name of that image guys let me know in the comments because the comments are stopped again let me know guys if you're enjoying this if you're finding this valuable and you always know that you can smash that like button and show me that you literally like this video okay let me know guys if if it's clear if we can move on and we can go ahead and save everything inside of our mongodb database i really want to know and i really want to see it coming inside of the comments so let me know guys um yeah so actually let's go ahead and save the image so naming convention so we're going to be uploading the image and oops it's freaking out because i haven't closed everything so what we will be doing is uh making a post request guys that don't like don't don't see if you if you guys are understanding it uh let me know in the comments so we will be making a post request to the upload image um upload image endpoint and we will be passing in the image form and then we are adding a couple of headers which we definitely which we need to work with now uh accept is going to be application json because we are gonna we want to save it as a json and accept language i'm i'm using english so yeah there we go uh and then we want to add the content type which is going to be a multipart form data and we want to pass in the boundary of that form data just like that all right with that said one more thing we need to do because we then remember guys we then want to go ahead and save the post with the data retrieved from this request okay so what we want to be doing is uh then create a post data it's just going to be a post data for now uh we're going to be console logging it it's actually not necessary but it's nice to see how everything goes so let's create a post data thing and let's add the text that the person the user typed inside of the text form or or the input field then add the image name which we will be retrieving from the response data as the file name and then add the user's display name and then as an avatar add the user photo url and also the timestamp which will be a date dot now let's console log it to see how it actually looks like and then use and then call this function which we haven't created just yet um but before we do that uh we need to have an else uh thing going on right yeah there we go so if there is no image like remember uh this only happens if we got an image so if there is no image we just want to create we we're going to create the exact same form data without the image name right you see that there is no image name text image name user and then text and user okay that's pretty much what happens here and then we want to go ahead and create a new uh function outside of this whole thing and that's essentially gonna uh like upload the whole uh post there we go so with that said we pretty much should be able to upload stuff to our mongodb using our front end now what we definitely want to go ahead and do is inside of here let's remove this s because i didn't do it that way so we are now able to save stuff to our mongodb database and we are able to retrieve those and now i'm just going to add in http local host 9000 so that the image source is going to be set to this um this uh url okay um why is mark okay now we literally should be able to have a working application with us guys let me know in the uh chat section if you guys are with me if you guys are following me and if you are in here with me oh okay so just the comments are not coming through i actually see uh see them coming in okay okay yeah yeah perfect okay um i think i'm gonna stay here then and i don't know why the comments are not coming through don't worry okay now um let's actually test this app out let's uh reload it a couple of times but let me know guys if you are with me uh except language in spanish too yeah that's right um yeah following nice okay uh stuck retrieving the image uh retrieving the image is just gonna be a link which we which you will be building up okay present dr mern yes let's go okay i'm not gonna be able to highlight any more images because for some reason the streaming app is not working as it should okay let's go back to the presentation and let's actually go ahead and sign in let's use this account awesome and now what i will be doing is say hey guys and the fire emoji and i'm going to choose a new choose a file and let's actually i will be covering this for a little bit yes i'm stuck okay so inside of here i'm just gonna put a couple of html css on javascript logos so that we know what this um whole thing is about boom let's save it and right now we're not seeing anything because this is not real time but let's actually check our mongodb how things are going on uh in here so in files we see a second one and it says it's the gmt time is 12 uh yeah not 12 20 58 which actually matches um yeah so it's 2 p.m pacific so yeah it's actually pretty good now let's actually refresh the whole thing let's sign in again and let's see if it is working okay now there we go that's it guys literally we have a fully functional um facebook clone and let's actually test out if it works without that uh ima um without an image yep that's it like say yo who's pumped and let's add a rocket emoji boom and let's sign in again and refresh because it's still not real time and here we go everything is working the order is correct uh we see this timestamp going on so guys let me know in the chat who is pumped and who has this project at this state where it's fully functioning we just need to make it real time uh teddy asks can i be your friend of course bro text me on instagram it's actually um you can see it right here yeah text me over here okay there we go so how you make this work real time that's what we will be doing back down nice question thank you uh okay and yeah so now i'm introducing pusher that's how we will make this whole thing real time we will need a little bit of modification on the front end and the back end as well but this is gonna be working perfectly so let's go ahead and go to pusher.com and what we will be doing is oops not not printing the uh page definitely um so what we will be doing is if you guys haven't used for sure this is essentially a service that we will be using to watch our mongodb and do and whenever something happens which is going to fire off a function that's going to refresh the whole page and there we go so if you haven't used it you can go ahead and sign up this is completely free for the use what we will be doing and i'm just going to go ahead and sign in with my github because that's just one click and here we go so all the way here uh let's just go to manage yeah just like that and if it's the first time you're using it you're gonna see it get started uh over here on channels and make sure to use channels okay let's go to manage let's go to create app oops uh let's see what's up yep okay so create and i'm gonna say facebook learn live because we are live okay eu i'm gonna set it to us west okay for the front end i'm using react and for the backend i'm using node.js let's create the app and they are super nice because they are kind of like give you a bunch of code that you can start working with reaction auto update because state has changed um the state is that doesn't change so the thing that is happening okay so let me let me put myself up so what is happening uh with react and firebase so react would change automatically whenever the state is changed but you need to stay change the state first and that's why you are using this on snapshot thing so whenever something is happening that snapshot is going to be fired off because firebase has a realtime database but because mongodb by default is not uh realtime the on snapshot is not getting fired that means the state it doesn't change and then react doesn't refresh okay so it's not there is no problem with react uh react is working just fine um it's the matter of the database okay i just wanted to clear that out i saw that uh awesome comment by psycho coder okay so does pusher have rate limit of course it does it's actually pretty low but it's gonna be just enough for us today um okay and yeah we okay let's go back here nice so we have all these code with us let's go actually and set up our back end so we will need these two stuff but let's actually grab this one first and i'm just gonna open up my uh server.js file which is essentially in the backend and what i will be doing so or okay oh my god okay resolve let's remove this because we don't need that path okay so uh pusher is already imported nice and and what we will be doing is going to app config and just paste it here now there's two little modification that we will need to make in here one of them is getting rid of var because that's just a no go whenever you're uh developing in javascript you don't want wanna um you don't wanna don't ever want to use voir you're literally gonna be kicked out of an interview just for that and the other thing you wanna change is encrypted and because it's for some reason it's uh duplicating and you want to go ahead and use tls instead of encrypted and it's not going to be uh messing around yeah okay um okay yep that's uh mongoose stuff and they be connected perfect so next thing we want to go ahead and do is going into the first mongos connection once open so the other one is just for grid fs and saving file don't worry about that don't don't change anything on that what you do what you need to do inside of here is create a new change stream and then if you guys don't know what that is that's basically just watching your database and whenever something happens it fires off simple so you want to create a change stream um it's actually it's a nice thing by uh mongodb i'm just gonna paste it in here uh so you want to create a chain stream which is a which is literally just a mongoose connection collection watching thing so the manga's connection the collection the post collection of the mongoose collection you want to watch that so you want to watch the mongoose connection post collection i hope it's actually clear what i'm trying to say drop it in the comments if you know how to say it correctly and what you want to do is when the change stream is fired off so on change right you're going to fire off a callback function which will have a parameter the change which actually happens on the back end which is the actual change right so it's it could be a inserted data it could be a deleted data it could be a change data something you're just gonna just want to have it inside of a variable uh you can go ahead and console.log it and then what you definitely need to do is if the uh change changes operation type right there's gonna be a bunch of parameters inside of there one of them is going to be operation type and if it is insert then what you want to do is uh first like you can go ahead and console like so that you can like debug it and you can go ahead and say uh triggering pusher that's that's nice and then uh what you want to do is literally just say pusher dot trigger and then uh you want to create a channel inside of pusher which the best way to go about it is uh say the um say the collection's name okay so posts and you want to go ahead and create an event which will be inserted in this case and then and that's pretty much it i mean we can definitely pass in whatever changed okay so change equals change and you just pass it on you will be able to watch it on the pushers server that's pretty much it okay now uh what happens if if it's not insert well um then else you're gonna go ahead and console.log uh error triggering pusher that's that's pretty straightforward handling the error and yep that's pretty much it that was the backend side now the backend is going to be realtime nice now what we need to do uh at this moment is going to feed.js because that's where we will oops that's where we will be uh sorry feed.js yep this is where we will be literally like subscribing to the pusher thing so let's go back here and let's see what we will be doing so of course we create an instance oops yeah that's the instance that we will create and if i have a fancy point then why am i not using it so this is creating an a pusher instance on the front end and then we will be subscribing to it uh to the channel that we created and we will be calling like what we called posts and then on the even that inside it that we will be adding inside of there we will be going ahead and fire up the sync data okay so let's create this thing and let's go up here and let's actually create the instance up here get rid of the war immediately and let's go with the const and guys if uh i saw a couple of comments uh asking whether you should be using war const or lat um my advice don't ever use war you there is no situation you want to use var um and for constant lab use always const until you need to use lat so it's like declare everything with cons and whenever something is breaking and react will actually show you uh and javascript is actually going to be showing you why it's not working um then you can change it to lat if it's the problem okay um yeah i'm learning this at 2 a.m okay i said i can't um hold on i would i want to highlight that okay boom okay so alex limpy uh says i'm listening this at 2am nice job bro massive appreciation for you and you got an air horn thank you so much for being here and and being with us uh this early in the morning and let me just run through quickly the comment section and guys stick with me we are very close to the end okay okay uh yeah so the other thing we would need to do is copy this part of the code and let's go back and create a new use effect up here uh is a that's the thing that i want to have yeah nice and remove this because otherwise it's going to be refreshing all the time and it's gonna like burst out your um limits and pusher and then let's pass it in here let's change it to const because that's just because we're not using war and let's so this essentially creates a channel that subscribes to not my channel instead we are going to be passing in posts yeah and the event is going to be inserted and then there is a function okay we'll get we're getting rid of the alert thing and we're just going to go ahead and say sync feed and guys that should be pretty much it so let's actually sign in oh no i actually refreshed it a couple of times so everything is working perfectly uh yeah let's sign in here okay ah everything is loading yo real time test let's add another image another quasi image that's actually a good idea and let's hit return and let's wait until it okay okay here we go and there we go guys we literally made the whole thing real time so real time and some fire and then a rocket boom without an image it works again now this is a little bit of bug it's actually not a bug it's just how it works so whenever you're resyncing the feed the images are gonna load again but uh we could make it like super optimal but that's gonna take a lot of time and we are already uh more than two hours into this stream so with that said we are guys we are finished we literally have finished the full build um yeah so that's pretty much it now one more thing to do before we go home and before uh we go ahead and do whatever we want to um let's actually deploy the whole thing who is pumped and who's ready to deploy the application up to the cloud so that we will so that everybody is going to be able to uh check it out let me know in the comments drop some fire drop some fire if you know what's gonna happen and yep let's let's do it okay can you add this in repo yeah um definitely message me afterwards um my my my instagram should be here yeah this is it okay so guys let me know if you are ready to deploy this app austin says let's go uh carry i mean uh carrie minati says i use mongodb compass that's a great tool to use so guys literally mongodb compass is nothing super fancy it's uh it's it's literally a desktop app of mango db firebase deploy exactly alexandros uh okay um so kevin asked what asks what are the advantages of using mongodb instead of firebase there's not a lot i mean so whenever you're trying to um build a project we always say that go with firebase okay and then why are we teaching this that would that probably is your next question well um this is what is in demand uh on the job market and this is actually a better way to store data than in a sql database because that's just like a pain in the butt and uh with with working with a nosql database it's like super easy to map through everything and then render out and then just work with that because it's essentially it's more like a json file now um that's part that's part of the other reason why we're teaching it and because mern stack is like a it's like 10x as popular and like 100x more in demand than firebase because it's kind of like unknown for now um but yeah i hope this answered your question um yeah hassan says let's deploy yes let's go and okay now uh let's actually go back to the view where you can see my screen nice perfect and what we will be doing is essentially going to uh the front end and then opening up a terminal oh and yeah this is the change that happens so on the back end side what we want to do is first um okay let's actually create a new terminal let's do an alas let's go in here and what you want to go ahead and do is go to heroku.com because we will be using roku to host this uh application back end online one two three four okay new create new app and we will be creating a facebook mirn oops facebook mern uh live yep there we go and what we will be doing is essentially uh so guys if you don't have heroku cli go ahead and install it using that tutorial up top then what you will need to do is login to the cli um yeah and yeah afterwards you can like resume this video and then go ahead so we just see it into the project we have the get version control done what we want to do is set the uh remote repo to your heroku repo okay wrong wrong direction just paste it inside of there it's gonna do its thing super fast then you wanna literally create add the comment and then push it to herakum master okay uh let's see what's going on in the chat because i for some reason i can't see it just when i go there okay um let's go ahead and say git add dot then kit commit dash am and app done don't do these kind of commits always commit every single thing that you do because then you can go ahead and roll back okay there we go uh because we added a nice little um git ignore we just have the necessary stuff and what we will be typing in here is essentially get push heroku master poof there we go um and what i like to do is add a new terminal and say heroku logs dash dash tail and then i will see the heroku logs going on all the way so that i will know what is happening inside of here okay uh so yeah it's launching release version three i don't even know why it's version three but don't matter uh so on the right hand side it's starting everything is working and it says stage stay uh state changed from starting to up that means we probably have a working backend guys deployed let's test it out if it says hello world hey there we go huge air horn guys we have it working nice okay and get exactly yeah uh uh sunny is using mango for ticktock and since then sunny hadn't been using fireworks but you use mongodb uh sunny was always using firebase we just had a we just had two or three four or five couple of builds together and um whenever i'm on uh whenever i'm going live with him we are making a burn full stack build from bottom to the top um yeah because he's just so much faster in teaching react but yeah okay um yeah so we have a working backhand now what you want to go ahead and do is like copy this co this link and then go back to axios.js right and then you just want to go ahead and actually you can go and comment this line out and add a base url and that will be this code now uh make sure that you don't have the slash and the end because it's gonna like blow up the whole thing and yep there we go okay now uh what with that said it's pretty much set up to the uh working um backend thing and i'm just gonna need to find okay here we go now uh let's sign in it's still the local uh frontend but they deploy the back end and let's see if it is working yes there we go everything should be working we're king boom there we go king we can say we're king very funny uh now what we need to do is go ahead and deploy the front end and that's pretty much today's build guys so um let's actually go here create a new tab and what we will be doing is we need to initialize firebase right so let's go ahead and type in firebase init boom there we go what you want to do is hosting then use an existing project then what you need to do is i think this is the project oh no uh it's fb mirn okay i need to check it real quick yeah it is fb mir9ac 4d yeah that's the project okay so you want to make sure that you're selecting the correct project here otherwise it's going to blow up uh so yeah facebook mirror there we go uh and this is an other part you need to take uh make sure you're doing it right and for some reason the streaming is cutting off the bottom of my screen so you need to type in here uh build instead of public oh my god and then now i'm blocking the screen okay i move myself here okay so you need to type in here build whenever it's asking for the public directory you want to go ahead and say build okay and what you need to do is like type in a why because you want this to be a single page app now this is some cli trick that didn't work out as planned oh yeah because i'm using a different resolution don't matter okay and now what you want to do is npm run build down here and that will actually create the build folder and create the whole production ready uh project so it's going to strip out a lot of stuff like hot reloading and all those kind of stuff that you need while you're working in the development environment but then you will not need it anymore so npm rom build there we go it's working nicely and it's gonna do and create an optimized production build um so yeah that's uh that's pretty much what is happening over here so let's wait until it finishes it's going to do its thing it's going to take a little bit of while in the meantime let me check wow this is amazing calvin says thank you um okay what is your i'm going to be instead of firebase um yeah and now we are guys we are ready to deploy guys i see there is still uh 94 people on the youtube if you haven't smashed that like button now is the time to do it hit that like button get that number up to 400 i think we can do it let's everybody go ahead and hit that like button we are at 378. let's go let's hit that okay we are at 381 nice 382 let's go let's go everybody let's smash that like button like literally go ahead and destroy that okay 386. nice okay we are just 14 away from 400 guys let's go and let's reach that number okay if you guys found this video valuable drop a comment let me know uh what you liked and in the meantime hit the like button so that we can get this video out to as many people out there as possible and that is all we ask for okay we are sitting at uh 389 okay let's go ahead and deploy the app and let's see how we did let's go ahead and say firebase deploy and wait for the magic okay we're deploying we're deploying and we should be good to go now follow the link command click open and of course it opened in the wrong screen and let's see what we built oh my god my mac is bugging out nice sign in let's see how we did and here we go and there we go it is working let's try this out okay with an image and guys you can literally go ahead and copy that link and just come in here have some fun but guys make it make sure that you uh you guys are keeping it clean because otherwise i will need to um delete this and put it down so i'm gonna go ahead and drop it in the comment section or or in the chat let's come in here and let's actually everybody uh drop some positive vibes inside of here let's have some fun before we uh shut this stream down um so yeah i want to see everybody coming in here dropping some positive vibes let's go uh a friend says gracias amigo david amazing lives muchas gracias miamigo thank you for sticking here and being here with me okay we just got our first person inside of here okay nice there we go okay awesome so can we get the final code virus if you're a virus nope uh yeah they will give a massive way thank you so much bro that's why we are here awesome stuff so uh yeah the image is working hey hello what's up alexandros okay so guys if you guys like this build um make sure to hit this smash the like button hit the subscribe so that and click the bell so that you will not uh miss any of these videos and if you found this valuable make sure to share it with your friends and everybody out there and guys thank you so much for staying here with me uh i appreciate you a lot uh thank you so much for uh being here dropping the positive vibes and staying here uh and if you guys are interested down in the uh down below in the um description there is a webinar uh which is uh teaching you step by step how to build a netflix clone so if you guys want to go ahead and dive into this deeper i highly recommend going ahead and testing and then just uh attending to that webinar um because it's just um crazy amount of value and it's gonna take you and it's gonna 10x all your skills with that said thank you so much for being here with me this is david from coverprogrammer.com and i'll see you in the next video peace guys
