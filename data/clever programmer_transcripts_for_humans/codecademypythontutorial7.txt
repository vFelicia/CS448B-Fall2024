With timestamps:

00:00 - hey guys what is up this is Kazi from
00:03 - clever programmer calm and you're
00:05 - watching code Kadim e part 7 okay let's
00:11 - get started
00:13 - so we are at in unit 5 this means we
00:18 - have done more than 33% you guys 33%
00:22 - that's like the definition of 1/3
00:26 - alright so we're almost there umm lists
00:31 - and dictionaries so we are going to be
00:34 - covering like I said in the last video
00:36 - some really powerful constructs in
00:38 - Python lists and dictionaries alright
00:40 - they are easy to understand
00:45 - ok they're easy they're fairly easy but
00:48 - they're really powerful so let's get
00:50 - straight to it great job for making it
00:53 - this far okay
00:57 - introduction to lists so they're just
00:59 - giving us an introduction to lists how I
01:02 - like to think of lists is like a bucket
01:07 - right actually I just made that up I
01:10 - don't actually think of it like that but
01:11 - now that I'm thinking about it it's good
01:13 - to think of it like a bucket where you
01:15 - can put multiple things in there and
01:17 - that bucket could hold it okay so for
01:21 - instance imagine I told you create a
01:24 - variable called zoo animals and store
01:29 - bunch of zoo animals in there well you
01:32 - could say penguin and just a string
01:35 - right without using actually any fancy
01:37 - list so you could say penguin seal
01:43 - elephants running out of animal names
01:47 - here lion I keep wanting the red banana
01:51 - but okay penguins steal elephant and
01:54 - lion alright you could say well that's a
01:57 - perfectly fine way to do it okay but
02:01 - what if you want to pull out seal you're
02:04 - going to have hard time doing that right
02:06 - what if you want to pull out the second
02:07 - what if I told you what's the second
02:09 - animal pull out the second animal from
02:12 - zoo animals so let's just take it to
02:15 - repel IT and paste it there actually you
02:20 - should I share this okay so i've what
02:25 - i've just done effectively is I've
02:27 - shared this if you go to this link here
02:30 - you can see all of this code that I
02:32 - typed okay so if you actually go to this
02:36 - link you can see that code that we
02:40 - worked on in the last video all right so
02:43 - I'm gonna um call it clever programmer
02:53 - function right cool
02:59 - save yeah I think the link is not that
03:03 - one D i/o and okay great now let's open
03:10 - up on new page languages Python 3 and
03:16 - let's delete all
03:25 - okay
03:27 - so I'm gonna take that oops
03:30 - and I'm going to paste that right here
03:33 - all right this one so check it out if I
03:38 - said print if I want to get the second
03:41 - element that's going to be kind of oh
03:43 - and there's gonna be an ugly way to get
03:46 - it I'm going to zoom animals and then I
03:49 - have to like count so this is 0 1 2 3 4
03:54 - 5 6 7 8 so I'm going to say start from
03:59 - the 8th position and go to 9 10 11
04:06 - okay so start from 8 position and go up
04:10 - to the 11th position the first one means
04:15 - start the last one means stop but
04:20 - generally it's stop and then stop one
04:22 - element short okay so it's in up to but
04:27 - not including the last one so if I print
04:30 - it out you're gonna see sealed but this
04:32 - was a very cumbersome way to figure it
04:35 - out right second element I can't just do
04:38 - it without looking I can't just look
04:39 - away and say one and then or two and
04:43 - then it gives me seal I have to do this
04:46 - what I have to eyeball it and look at it
04:49 - and see how much now what if there were
04:50 - a hundred thousand animals and I wanted
04:52 - you know the 35th thousand one you're
04:55 - going to have a lot of trouble figuring
04:56 - that out
04:57 - however if it's a list right like a
05:02 - bucket
05:08 - let's put this here boom boom let's go
05:13 - there now in this scenario if I all I
05:19 - have to do is that goes ooh animals and
05:22 - if I want to get penguin I can go zero
05:24 - or if I want seal I can just go one and
05:28 - when I run it look at how beautiful that
05:31 - is
05:32 - none of that string slicing and going
05:35 - from eight to twelve and you know doing
05:37 - something like ninjas would do and
05:39 - jujitsu you're being very precise none
05:42 - of that stuff right we're not here to do
05:44 - surgery we're really here to do
05:46 - programming so let's keep it simple
05:48 - right keep it simple stupid kiss we're
05:51 - going to follow that so lists are great
05:54 - to keep a bunch of things together right
05:57 - otherwise we just create regular
05:59 - variable name and store a string for one
06:02 - animal right if you want it only one
06:04 - animal I would just say something like
06:06 - penguin but if you want to do multiple
06:10 - animals then it's much better to create
06:12 - a list okay okay so you see they have a
06:20 - list at the top if I call Len on a
06:25 - dysfunction Len on a list it works very
06:30 - similarly so I'm going to say print Len
06:35 - go at the end and I'm going to do this
06:37 - right and I'm not gonna say zoo animals
06:41 - of one I'm gonna say just call it on
06:44 - this entire thing so what do you think
06:47 - it's going to return to me do you think
06:50 - is going to return to me the letters in
06:53 - penguin sloths the letters number of
06:56 - letters and sealed plus the number of
06:57 - letters and elephant plus the number of
06:59 - letters in Lion sum it up and then
07:03 - return it or do you think is going to
07:06 - return to be four because there are four
07:07 - items in the bucket it's going to return
07:10 - to me
07:11 - four okay you see that little four right
07:14 - there that's why it's actually returning
07:17 - that
07:17 - because there are four items so here you
07:21 - see if the length of zoo animals is
07:23 - greater than three well is it greater
07:25 - than three you have one two three
07:28 - animals and obviously you separate it
07:33 - with a comma with a comma right here
07:36 - okay so we have three animals so this
07:40 - part is going to evaluate three is three
07:42 - greater than three false so it's not
07:46 - going to print any of this but if that
07:50 - was the case if this was somehow four
07:52 - and this whole thing evaluated to true
07:56 - then you would go down here and you
07:59 - would say the first animal at the zoo is
08:01 - plus zoo animal of zero right so what
08:06 - that would look like is if I rent that
08:13 - print statement guess I'm up my gosh
08:23 - okay if if I read this print statement
08:28 - right boom and ran it you'll see it says
08:36 - the first animal of the zoo is the and
08:38 - we use the indexing this is called
08:41 - indexing whenever you put a number in
08:43 - these brackets and get that element at
08:47 - that particular index what's called
08:49 - indexing so here we get the zeros item
08:53 - from the list which is really the first
08:55 - item if you think if you're if you think
08:58 - in how you're used to thinking in math
08:59 - and in human language this is going to
09:04 - get you the first element and if I go
09:07 - one now it's going to get you the second
09:09 - element which is the seal okay so we're
09:14 - concatenating this string with the
09:17 - zeroth element so here we're
09:20 - concatenating strings okay that's why
09:23 - you see this little plus sign here and
09:26 - then it's the same thing here second
09:28 - atom animal
09:29 - zoo is zoo animal of one-third animal at
09:34 - the zoo is animal of two and you get the
09:37 - idea I'm assuming they want us to add
09:40 - another animal here oh it actually says
09:42 - one animal is missing
09:44 - alright so let's just see what their
09:47 - explanation is Lister a data type you
09:49 - can use to store a collection of
09:50 - different pieces of information as a
09:52 - sequence under a single variable name
09:54 - look at how boring that sounds um yeah
10:01 - just put me to sleep reading it I don't
10:02 - want to read it again but essentially
10:04 - it's just a list of things in one place
10:07 - right that's why it's called the list
10:08 - it's like a bucket it's a list of things
10:10 - you just put it all in there in one
10:12 - place you can also have an empty list so
10:17 - right here you see it's just an open
10:18 - closed bracket that's just an empty list
10:20 - and if you call the function Len
10:23 - le n on that empty list it's going to
10:28 - give you back off it's going to give you
10:31 - back a zero right cool
10:33 - the list do animals has three items
10:35 - check them out inline one go ahead and
10:37 - add a fourth just enter the name of your
10:39 - favorite animal as a string online after
10:41 - the final comma before closing so here
10:46 - hmm what is my favorite animal I would
10:54 - have to go with koala bear I really I
10:57 - really love koala bears are really cute
10:59 - but I don't know if I want to hold one
11:02 - because they're dangerous and this
11:03 - sleeper I think 20 plus hours so um okay
11:11 - so this is great let's run it oh this
11:17 - part actually should not be true it
11:19 - should be if Len of zoo animals is
11:23 - greater than three okay so let's run it
11:27 - again because that's what it actually
11:28 - was before I changed it let's run it
11:30 - okay so I passed it anyways right I
11:34 - hacked my way through it okay so access
11:38 - by index you see now they're talking
11:40 - about the concept of
11:41 - index which is what I alluded to earlier
11:46 - so let's talk about this okay all right
11:53 - you can access an individual item on the
11:56 - list by its index so simple how I was
11:59 - showing you earlier if you want to get
12:01 - the first number here you do numbers of
12:04 - 0 and if you want to get the second
12:06 - number here you do numbers too yeah so
12:15 - this is actually the third number so we
12:17 - that's why we put 2 because we start
12:19 - from 0 and here we're adding basically
12:25 - this whole thing will turn to 5 and this
12:29 - whole thing will turn to 7 right so
12:33 - that's really the main part behind it
12:38 - listen this is begin with 0 not 1 so
12:40 - they're saying that an exclamation mark
12:42 - computer scientists love to start
12:44 - counting from 0 and there are good
12:47 - reasons for it which I might talk about
12:50 - later like not a not in Coke Adam E
12:53 - series in one of other videos because
12:58 - yeah it's it's a tangent so we don't
13:01 - need to discuss it right now write a
13:04 - statement that prints the result of
13:06 - adding the second and fourth items of
13:08 - the list make sure to access the list by
13:10 - index so we just have to write writing
13:18 - the prints the result of adding the
13:21 - second and fourth items of the lip so
13:23 - what they mean when deafening second and
13:25 - fourth is six and eight so second and
13:27 - fourth so we're actually going to say
13:30 - here numbers of 1 plus numbers of three
13:37 - okay so yeah so give that a try and see
13:44 - what happens maybe give it a shot and
13:46 - run it in rebel
13:52 - okay so yeah that person really wouldn't
13:56 - leave me alone okay new neighbors
14:03 - alright new neighbors
14:06 - write an assignment similar place the
14:09 - item that currently holds the value type
14:11 - great so now they're talking about how
14:13 - you can change things in lists which is
14:15 - so awesome
14:16 - okay you can't do that if you had a
14:19 - string I'll show you what I'm talking
14:21 - about
14:21 - so let me comment this bad boy
14:24 - and this one's well delete this guy try
14:28 - to Princeton now let's say I wanted to
14:31 - make the first element or the second
14:36 - element I wanted to make it Tiger right
14:43 - what I would do is I would sue animals
14:47 - get the seal right this would give me
14:50 - the seal and say make that equal to
14:55 - tiger
14:57 - simple as that now if I do print zoo
15:00 - animals look at that right and if I put
15:07 - a print statement before changing
15:10 - everything to tiger and run it you can
15:13 - see that of a seal and then when I did
15:16 - that whole thing with zoo animals one
15:17 - equal Tiger now it changed the seal to
15:21 - the tiger right now imagine if we had it
15:26 - as a string zoo animals animals is equal
15:34 - to penguin and seal right how I did it
15:40 - before and I found out that if I pulled
15:43 - from eight to twelve I would get that
15:45 - seal right if I did print zoo animals
15:50 - two from eight to twelve I will Dow pull
15:56 - out the seal portion of it and if I say
15:59 - change that to tighter
16:03 - whoops I have to take out the print
16:05 - statement you get an error because
16:09 - string object does not support item
16:12 - assignment okay what that means is that
16:15 - you can't change string items this is
16:18 - going to allude to a really tough
16:20 - concept later on called immutable data
16:23 - types but what that really means is
16:26 - something you can't change okay it's not
16:29 - that card so they're going to make it
16:31 - sound like mutable objects versus
16:33 - immutable objects when it's it gets in
16:35 - depth but at the very base of it at
16:38 - surface level is pretty simple
16:39 - so yeah string datatype
16:44 - right you can't change it versus list
16:48 - data type which makes it very easy to
16:51 - find the items and then change them and
16:53 - then string datatype it's hard to find
16:56 - the items and change them okay hard to
17:00 - find the item and impossible to change
17:02 - it cool so leave that there and leave
17:09 - this part here right all right let's go
17:11 - back so item that currently holds a
17:15 - value Tiger with another animal so what
17:18 - they're showing us as you can see here
17:20 - tiger is a third element and we need to
17:24 - change it with another element okay so
17:26 - we're going to add we're going to do zoo
17:28 - animals of three right that's how I get
17:34 - my tiger the third element and I'm going
17:36 - to say koala bear yeah the decided is
17:41 - how to change it we're going to change
17:43 - it right back okay congratulations you
17:47 - finish this section list capabilities
17:50 - and functions beautiful so we have
17:53 - finished this section um and let's go on
18:00 - to list capabilities and functions you
18:03 - guys later rivals and list length okay
18:11 - so this is going to be a really nice
18:13 - section because it has to do
18:15 - with lists and lists or such a common
18:20 - thing you're going to be doing
18:21 - programming like the last 30 or 40
18:25 - programs I wrote none of them I wrote
18:29 - without a list so lists were useful and
18:33 - also the current job place that I'm
18:36 - working for and I'm doing a software
18:38 - development work for them I'm using
18:40 - lists like over and over and over again
18:44 - so it's a really powerful tool at your
18:48 - disposal
18:49 - so it's good to learn it well a list
18:52 - doesn't have to have a fixed length you
18:53 - can add items to the end of a list so
18:55 - basically they're saying like let's say
19:00 - we have a list here right like letters
19:02 - ABC now we can add more things to this
19:06 - and in a much easier way like you don't
19:10 - have to redefine this list and go a
19:13 - comma B comma C and then you go comedy
19:18 - right you don't have to do it like that
19:20 - there's a way to automate that process
19:22 - so one thing that we can use is called
19:25 - append a pen means to put something at
19:30 - the end okay so what that would mean is
19:34 - we put something right here got it not
19:40 - prepend
19:41 - which would mean put something right
19:43 - here but I'll pen right over here so I'm
19:48 - going to go letters dot a pen and I'm
19:54 - going to say D and now if I print out
19:57 - letters you're going to see that it has
20:00 - a D at the end cool so it's a method
20:05 - that we use called a pen which is very
20:07 - common one of the most commonly used
20:10 - methods okay
20:12 - so print Len letters done and then if
20:15 - you print the Len of letters the length
20:18 - obviously is going to be four because a
20:20 - b c d and yeah alright so we print out
20:25 - for the lengths of the letters
20:27 - now instructions on lines 5 6 & 7 append
20:32 - three more items to the suitcase list
20:34 - just like the second line of the example
20:37 - above maybe bring a bathing suit haha ok
20:41 - so we're going to say suitcase data pen
20:43 - I don't know sunscreen sounds like we're
20:46 - going outside suitcase that app and
20:50 - bathing suit and suitcase dot a pad on
20:59 - towels right because we might be lying
21:02 - down on the beach and chilling and
21:04 - having a jolly ol time then setlist
21:09 - length equal to the length of the
21:11 - suitcase so I'm going to go right here
21:15 - and I'm gonna say Len of suitcase and
21:18 - without even running this code I can
21:21 - let's figure out and see what the length
21:23 - of the suitcase is going to be well we
21:26 - have an empty list here we start off
21:28 - with the empty suitcase we throw in
21:30 - sunglasses then we throw in sunscreen
21:33 - then we throw in bathing suit then we
21:34 - throw in towels hmm sounds like if you
21:39 - know how to count you'll probably know
21:41 - what Len of suitcase is right this part
21:43 - should evaluate to 4 okay
21:48 - there are % D don't get thrown off with
21:51 - this % D all this means is it's a
21:53 - placeholder for this variable in
21:56 - parentheses right here list length so
21:59 - this part will eventually turn into list
22:02 - length which will eventually turn into 4
22:07 - because we have 4 right here and then
22:12 - this will turn to 4 which will make this
22:15 - % d here turn into 4 okay so it's just a
22:20 - placeholder and they use % D here okay
22:25 - print the reason I didn't put 4 here is
22:28 - because what if you put sex 6 items what
22:31 - if you put 10 items so it needs to be
22:34 - able to change that number of items
22:35 - every time print suitcase
22:39 - cool we did it okay let's move on all
22:44 - right we have a suitcase with sunglasses
22:47 - hat passport laptop suit and shoes one
22:51 - two three four five six items now if we
22:55 - go from the 0th item to the second item
22:57 - we should get sunglasses and hat okay so
23:03 - let's give it a try I'm going to take
23:05 - this and copy it go to ruffled i.t paste
23:07 - it here and anytime you're confused just
23:11 - come here and run it okay don't let your
23:15 - ego get in the way of you learning like
23:17 - oh I'm too smart to try this and run it
23:20 - I just got it in my head everything even
23:23 - if sometimes you think you know it just
23:24 - go and try it anyways because it's good
23:26 - to build that muscle memory and it's
23:29 - just you know it gives you practice and
23:32 - you'll learn you really learn these
23:34 - things that way okay if I run this you
23:39 - see sus sunglasses and hat again it
23:42 - starts from the number you give it so
23:45 - start and then it stops at the number
23:48 - you give it except it's like stop -1 it
23:51 - stops right before the number you give
23:53 - it ok so if you give it the address of
23:57 - passport which is that location 2 is
23:59 - going to stop right before passport is
24:02 - going to stop up to the Hat so I was
24:03 - going to give you the first two elements
24:06 - all right
24:15 - now get the third and fourth items so
24:19 - how are we going to get the third and
24:21 - fourth items suitcase of two and four
24:28 - okay because this is really the third
24:33 - item and this is the fourth item that's
24:38 - another reason why we start with zero
24:40 - and stop before the other number so you
24:44 - can see we do zero to two and then here
24:46 - we just do two if we have to do zero to
24:49 - three right we would have to do or I'm
24:54 - sorry yeah we did zero to three now it's
24:58 - going to be a little bit trickier I
25:00 - don't know what I'm kind of set I lost
25:03 - my train of thought let's keep moving on
25:04 - let's pretend that never happen for okay
25:11 - cool
25:12 - let's keep on rolling now last one I
25:19 - mean and but one one point I would like
25:22 - to make is because of how we stopped
25:28 - before that last element and we start
25:30 - from zero to get the length of how many
25:32 - things you're getting all you have to do
25:34 - is the last the stop you give it - the
25:38 - start so stop - start will equal the
25:42 - length okay so in this case you have or
25:46 - let's just stick with how Python does it
25:49 - so stop - start so in our case the
25:55 - length will be equal to four minus two
25:58 - right and that will give you two so that
26:05 - is one reason why it's useful so see I
26:07 - do know I'm talking about
26:08 - all right let's go down here on line
26:13 - four create a list called middle only
26:16 - the - blah blah create a last made up of
26:19 - the last two items so what I'm gonna say
26:21 - is suitcase and start from four
26:30 - right
26:34 - whoops oh the point I was trying to make
26:38 - was if let's say you wanted to get if
26:43 - you wanted to go to this item this item
26:45 - right and you instead of wanting to say
26:50 - this for hat you said um like instead of
26:55 - saying this to go from sunglasses to hat
26:58 - you wanted to say one well the problem
27:02 - now is that if you do one here you're
27:06 - going to start from hat right so to make
27:10 - it easier for you instead of always
27:12 - having to do one plus one here so
27:16 - basically starting from two it's much
27:19 - simpler to just go to okay that's where
27:22 - I'm going to start off from because
27:23 - that's where I left off okay that was
27:25 - the point I was trying to make earlier
27:26 - now in suitcase
27:30 - we start from four again without even
27:33 - thinking because I see four is where I
27:35 - three is really rest off that all right
27:38 - um and so I'm going to start from the
27:43 - fourth element because we went up to but
27:47 - not including that and then I'm going to
27:50 - go five which is really the sixth
27:53 - element shoes so if I hit save and
27:56 - submit what's the problem here or sorry
28:01 - okay I should really be doing this right
28:11 - okay or another way to do it is just not
28:19 - put anything or just leave it okay start
28:23 - next lesson slicing lists and strings so
28:28 - we wanna I showed you guys a little bit
28:31 - of slicing strings so here we
28:35 - effectively go slice up to cat slice dog
28:39 - and then frog and then we can create a
28:42 - list based on those three guys all right
28:49 - so if I put this guy here and if I want
28:52 - to get cat well how will I do it
28:54 - animals from zero or blank to three zero
29:02 - one two three is the D part but remember
29:07 - we stopped right before it so that will
29:09 - pull out cat so cat is equal to that
29:13 - pounded dog I can say animals of three
29:17 - remember that trick um
29:21 - now dog is three letters so I can
29:24 - effectively go and say you know three
29:28 - plus three because three is where I'm at
29:30 - and I want to go three letters more from
29:33 - it but let's keep it consistent and go
29:40 - to go step by step so this is three four
29:43 - five six right so we can also do six now
29:49 - let's print out cat and dog and let's
29:54 - see if it's actually what we expect
29:57 - right so we got cat and dog just like we
30:01 - expected or if we did that trick of
30:03 - three plus three without really thinking
30:05 - about it cuz we know it's a three-letter
30:07 - guy we have there and we're sort of in
30:10 - the third position and then we can go
30:14 - for frog the trick we can do is well we
30:19 - left off at six we'll start from six we
30:21 - left off at
30:22 - gee and so now if I put six here that
30:26 - starts me off from that F and just :
30:30 - so that means keep going until the thing
30:33 - ends so if I print that frog here as
30:37 - well you'll see that it says cat dog and
30:39 - frog just like we expected or I can
30:42 - count so zero one two three four five
30:47 - six seven eight nine and I can put nine
30:51 - here or sorry ten here and all right we
31:00 - have to go one after that and they'll
31:02 - give us frog so it's just better to
31:06 - leave it as blank if you want to go all
31:08 - the way to the last one cool another
31:12 - trick is that thing you can you should
31:14 - be able to do negative one and a lot of
31:16 - the times that should work but not in
31:18 - this case so let's go run and here's
31:21 - what we get but to get the last element
31:24 - a lot of the times if you want that you
31:26 - can do negative one like this that'll
31:30 - give you the last element okay so if I
31:32 - go BOOM BOOM
31:35 - you can see that I get the last letter
31:37 - in this case so I get the Jeep cool
31:41 - let's go back so what we did we can just
31:45 - literally incop copy and paste that
31:47 - right because that's what they're
31:48 - effectively trying to do okay save and
31:58 - submit
31:58 - boom done okay so this video is getting
32:02 - pretty long I'm gonna cut it off right
32:04 - here and I will see you guys in
32:08 - maintaining order section right after
32:11 - this video so thanks for watching great
32:14 - job keeping up to this point and I would
32:17 - like to just ask you if you can please
32:19 - subscribe that would help the channel
32:21 - out greatly leave a comment if you got
32:23 - any questions other than that I will see
32:25 - you in the next video

Cleaned transcript:

hey guys what is up this is Kazi from clever programmer calm and you're watching code Kadim e part 7 okay let's get started so we are at in unit 5 this means we have done more than 33% you guys 33% that's like the definition of 1/3 alright so we're almost there umm lists and dictionaries so we are going to be covering like I said in the last video some really powerful constructs in Python lists and dictionaries alright they are easy to understand ok they're easy they're fairly easy but they're really powerful so let's get straight to it great job for making it this far okay introduction to lists so they're just giving us an introduction to lists how I like to think of lists is like a bucket right actually I just made that up I don't actually think of it like that but now that I'm thinking about it it's good to think of it like a bucket where you can put multiple things in there and that bucket could hold it okay so for instance imagine I told you create a variable called zoo animals and store bunch of zoo animals in there well you could say penguin and just a string right without using actually any fancy list so you could say penguin seal elephants running out of animal names here lion I keep wanting the red banana but okay penguins steal elephant and lion alright you could say well that's a perfectly fine way to do it okay but what if you want to pull out seal you're going to have hard time doing that right what if you want to pull out the second what if I told you what's the second animal pull out the second animal from zoo animals so let's just take it to repel IT and paste it there actually you should I share this okay so i've what i've just done effectively is I've shared this if you go to this link here you can see all of this code that I typed okay so if you actually go to this link you can see that code that we worked on in the last video all right so I'm gonna um call it clever programmer function right cool save yeah I think the link is not that one D i/o and okay great now let's open up on new page languages Python 3 and let's delete all okay so I'm gonna take that oops and I'm going to paste that right here all right this one so check it out if I said print if I want to get the second element that's going to be kind of oh and there's gonna be an ugly way to get it I'm going to zoom animals and then I have to like count so this is 0 1 2 3 4 5 6 7 8 so I'm going to say start from the 8th position and go to 9 10 11 okay so start from 8 position and go up to the 11th position the first one means start the last one means stop but generally it's stop and then stop one element short okay so it's in up to but not including the last one so if I print it out you're gonna see sealed but this was a very cumbersome way to figure it out right second element I can't just do it without looking I can't just look away and say one and then or two and then it gives me seal I have to do this what I have to eyeball it and look at it and see how much now what if there were a hundred thousand animals and I wanted you know the 35th thousand one you're going to have a lot of trouble figuring that out however if it's a list right like a bucket let's put this here boom boom let's go there now in this scenario if I all I have to do is that goes ooh animals and if I want to get penguin I can go zero or if I want seal I can just go one and when I run it look at how beautiful that is none of that string slicing and going from eight to twelve and you know doing something like ninjas would do and jujitsu you're being very precise none of that stuff right we're not here to do surgery we're really here to do programming so let's keep it simple right keep it simple stupid kiss we're going to follow that so lists are great to keep a bunch of things together right otherwise we just create regular variable name and store a string for one animal right if you want it only one animal I would just say something like penguin but if you want to do multiple animals then it's much better to create a list okay okay so you see they have a list at the top if I call Len on a dysfunction Len on a list it works very similarly so I'm going to say print Len go at the end and I'm going to do this right and I'm not gonna say zoo animals of one I'm gonna say just call it on this entire thing so what do you think it's going to return to me do you think is going to return to me the letters in penguin sloths the letters number of letters and sealed plus the number of letters and elephant plus the number of letters in Lion sum it up and then return it or do you think is going to return to be four because there are four items in the bucket it's going to return to me four okay you see that little four right there that's why it's actually returning that because there are four items so here you see if the length of zoo animals is greater than three well is it greater than three you have one two three animals and obviously you separate it with a comma with a comma right here okay so we have three animals so this part is going to evaluate three is three greater than three false so it's not going to print any of this but if that was the case if this was somehow four and this whole thing evaluated to true then you would go down here and you would say the first animal at the zoo is plus zoo animal of zero right so what that would look like is if I rent that print statement guess I'm up my gosh okay if if I read this print statement right boom and ran it you'll see it says the first animal of the zoo is the and we use the indexing this is called indexing whenever you put a number in these brackets and get that element at that particular index what's called indexing so here we get the zeros item from the list which is really the first item if you think if you're if you think in how you're used to thinking in math and in human language this is going to get you the first element and if I go one now it's going to get you the second element which is the seal okay so we're concatenating this string with the zeroth element so here we're concatenating strings okay that's why you see this little plus sign here and then it's the same thing here second atom animal zoo is zoo animal of onethird animal at the zoo is animal of two and you get the idea I'm assuming they want us to add another animal here oh it actually says one animal is missing alright so let's just see what their explanation is Lister a data type you can use to store a collection of different pieces of information as a sequence under a single variable name look at how boring that sounds um yeah just put me to sleep reading it I don't want to read it again but essentially it's just a list of things in one place right that's why it's called the list it's like a bucket it's a list of things you just put it all in there in one place you can also have an empty list so right here you see it's just an open closed bracket that's just an empty list and if you call the function Len le n on that empty list it's going to give you back off it's going to give you back a zero right cool the list do animals has three items check them out inline one go ahead and add a fourth just enter the name of your favorite animal as a string online after the final comma before closing so here hmm what is my favorite animal I would have to go with koala bear I really I really love koala bears are really cute but I don't know if I want to hold one because they're dangerous and this sleeper I think 20 plus hours so um okay so this is great let's run it oh this part actually should not be true it should be if Len of zoo animals is greater than three okay so let's run it again because that's what it actually was before I changed it let's run it okay so I passed it anyways right I hacked my way through it okay so access by index you see now they're talking about the concept of index which is what I alluded to earlier so let's talk about this okay all right you can access an individual item on the list by its index so simple how I was showing you earlier if you want to get the first number here you do numbers of 0 and if you want to get the second number here you do numbers too yeah so this is actually the third number so we that's why we put 2 because we start from 0 and here we're adding basically this whole thing will turn to 5 and this whole thing will turn to 7 right so that's really the main part behind it listen this is begin with 0 not 1 so they're saying that an exclamation mark computer scientists love to start counting from 0 and there are good reasons for it which I might talk about later like not a not in Coke Adam E series in one of other videos because yeah it's it's a tangent so we don't need to discuss it right now write a statement that prints the result of adding the second and fourth items of the list make sure to access the list by index so we just have to write writing the prints the result of adding the second and fourth items of the lip so what they mean when deafening second and fourth is six and eight so second and fourth so we're actually going to say here numbers of 1 plus numbers of three okay so yeah so give that a try and see what happens maybe give it a shot and run it in rebel okay so yeah that person really wouldn't leave me alone okay new neighbors alright new neighbors write an assignment similar place the item that currently holds the value type great so now they're talking about how you can change things in lists which is so awesome okay you can't do that if you had a string I'll show you what I'm talking about so let me comment this bad boy and this one's well delete this guy try to Princeton now let's say I wanted to make the first element or the second element I wanted to make it Tiger right what I would do is I would sue animals get the seal right this would give me the seal and say make that equal to tiger simple as that now if I do print zoo animals look at that right and if I put a print statement before changing everything to tiger and run it you can see that of a seal and then when I did that whole thing with zoo animals one equal Tiger now it changed the seal to the tiger right now imagine if we had it as a string zoo animals animals is equal to penguin and seal right how I did it before and I found out that if I pulled from eight to twelve I would get that seal right if I did print zoo animals two from eight to twelve I will Dow pull out the seal portion of it and if I say change that to tighter whoops I have to take out the print statement you get an error because string object does not support item assignment okay what that means is that you can't change string items this is going to allude to a really tough concept later on called immutable data types but what that really means is something you can't change okay it's not that card so they're going to make it sound like mutable objects versus immutable objects when it's it gets in depth but at the very base of it at surface level is pretty simple so yeah string datatype right you can't change it versus list data type which makes it very easy to find the items and then change them and then string datatype it's hard to find the items and change them okay hard to find the item and impossible to change it cool so leave that there and leave this part here right all right let's go back so item that currently holds a value Tiger with another animal so what they're showing us as you can see here tiger is a third element and we need to change it with another element okay so we're going to add we're going to do zoo animals of three right that's how I get my tiger the third element and I'm going to say koala bear yeah the decided is how to change it we're going to change it right back okay congratulations you finish this section list capabilities and functions beautiful so we have finished this section um and let's go on to list capabilities and functions you guys later rivals and list length okay so this is going to be a really nice section because it has to do with lists and lists or such a common thing you're going to be doing programming like the last 30 or 40 programs I wrote none of them I wrote without a list so lists were useful and also the current job place that I'm working for and I'm doing a software development work for them I'm using lists like over and over and over again so it's a really powerful tool at your disposal so it's good to learn it well a list doesn't have to have a fixed length you can add items to the end of a list so basically they're saying like let's say we have a list here right like letters ABC now we can add more things to this and in a much easier way like you don't have to redefine this list and go a comma B comma C and then you go comedy right you don't have to do it like that there's a way to automate that process so one thing that we can use is called append a pen means to put something at the end okay so what that would mean is we put something right here got it not prepend which would mean put something right here but I'll pen right over here so I'm going to go letters dot a pen and I'm going to say D and now if I print out letters you're going to see that it has a D at the end cool so it's a method that we use called a pen which is very common one of the most commonly used methods okay so print Len letters done and then if you print the Len of letters the length obviously is going to be four because a b c d and yeah alright so we print out for the lengths of the letters now instructions on lines 5 6 & 7 append three more items to the suitcase list just like the second line of the example above maybe bring a bathing suit haha ok so we're going to say suitcase data pen I don't know sunscreen sounds like we're going outside suitcase that app and bathing suit and suitcase dot a pad on towels right because we might be lying down on the beach and chilling and having a jolly ol time then setlist length equal to the length of the suitcase so I'm going to go right here and I'm gonna say Len of suitcase and without even running this code I can let's figure out and see what the length of the suitcase is going to be well we have an empty list here we start off with the empty suitcase we throw in sunglasses then we throw in sunscreen then we throw in bathing suit then we throw in towels hmm sounds like if you know how to count you'll probably know what Len of suitcase is right this part should evaluate to 4 okay there are % D don't get thrown off with this % D all this means is it's a placeholder for this variable in parentheses right here list length so this part will eventually turn into list length which will eventually turn into 4 because we have 4 right here and then this will turn to 4 which will make this % d here turn into 4 okay so it's just a placeholder and they use % D here okay print the reason I didn't put 4 here is because what if you put sex 6 items what if you put 10 items so it needs to be able to change that number of items every time print suitcase cool we did it okay let's move on all right we have a suitcase with sunglasses hat passport laptop suit and shoes one two three four five six items now if we go from the 0th item to the second item we should get sunglasses and hat okay so let's give it a try I'm going to take this and copy it go to ruffled i.t paste it here and anytime you're confused just come here and run it okay don't let your ego get in the way of you learning like oh I'm too smart to try this and run it I just got it in my head everything even if sometimes you think you know it just go and try it anyways because it's good to build that muscle memory and it's just you know it gives you practice and you'll learn you really learn these things that way okay if I run this you see sus sunglasses and hat again it starts from the number you give it so start and then it stops at the number you give it except it's like stop 1 it stops right before the number you give it ok so if you give it the address of passport which is that location 2 is going to stop right before passport is going to stop up to the Hat so I was going to give you the first two elements all right now get the third and fourth items so how are we going to get the third and fourth items suitcase of two and four okay because this is really the third item and this is the fourth item that's another reason why we start with zero and stop before the other number so you can see we do zero to two and then here we just do two if we have to do zero to three right we would have to do or I'm sorry yeah we did zero to three now it's going to be a little bit trickier I don't know what I'm kind of set I lost my train of thought let's keep moving on let's pretend that never happen for okay cool let's keep on rolling now last one I mean and but one one point I would like to make is because of how we stopped before that last element and we start from zero to get the length of how many things you're getting all you have to do is the last the stop you give it the start so stop start will equal the length okay so in this case you have or let's just stick with how Python does it so stop start so in our case the length will be equal to four minus two right and that will give you two so that is one reason why it's useful so see I do know I'm talking about all right let's go down here on line four create a list called middle only the blah blah create a last made up of the last two items so what I'm gonna say is suitcase and start from four right whoops oh the point I was trying to make was if let's say you wanted to get if you wanted to go to this item this item right and you instead of wanting to say this for hat you said um like instead of saying this to go from sunglasses to hat you wanted to say one well the problem now is that if you do one here you're going to start from hat right so to make it easier for you instead of always having to do one plus one here so basically starting from two it's much simpler to just go to okay that's where I'm going to start off from because that's where I left off okay that was the point I was trying to make earlier now in suitcase we start from four again without even thinking because I see four is where I three is really rest off that all right um and so I'm going to start from the fourth element because we went up to but not including that and then I'm going to go five which is really the sixth element shoes so if I hit save and submit what's the problem here or sorry okay I should really be doing this right okay or another way to do it is just not put anything or just leave it okay start next lesson slicing lists and strings so we wanna I showed you guys a little bit of slicing strings so here we effectively go slice up to cat slice dog and then frog and then we can create a list based on those three guys all right so if I put this guy here and if I want to get cat well how will I do it animals from zero or blank to three zero one two three is the D part but remember we stopped right before it so that will pull out cat so cat is equal to that pounded dog I can say animals of three remember that trick um now dog is three letters so I can effectively go and say you know three plus three because three is where I'm at and I want to go three letters more from it but let's keep it consistent and go to go step by step so this is three four five six right so we can also do six now let's print out cat and dog and let's see if it's actually what we expect right so we got cat and dog just like we expected or if we did that trick of three plus three without really thinking about it cuz we know it's a threeletter guy we have there and we're sort of in the third position and then we can go for frog the trick we can do is well we left off at six we'll start from six we left off at gee and so now if I put six here that starts me off from that F and just so that means keep going until the thing ends so if I print that frog here as well you'll see that it says cat dog and frog just like we expected or I can count so zero one two three four five six seven eight nine and I can put nine here or sorry ten here and all right we have to go one after that and they'll give us frog so it's just better to leave it as blank if you want to go all the way to the last one cool another trick is that thing you can you should be able to do negative one and a lot of the times that should work but not in this case so let's go run and here's what we get but to get the last element a lot of the times if you want that you can do negative one like this that'll give you the last element okay so if I go BOOM BOOM you can see that I get the last letter in this case so I get the Jeep cool let's go back so what we did we can just literally incop copy and paste that right because that's what they're effectively trying to do okay save and submit boom done okay so this video is getting pretty long I'm gonna cut it off right here and I will see you guys in maintaining order section right after this video so thanks for watching great job keeping up to this point and I would like to just ask you if you can please subscribe that would help the channel out greatly leave a comment if you got any questions other than that I will see you in the next video
