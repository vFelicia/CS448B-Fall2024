00:00 - or like whatever you wanna name it and
00:02 - then we're going to
00:03 - double click and then
00:07 - delete everything
00:16 - so as you remember to like type coding
00:20 - you need this statement
00:26 - like this
00:42 - and basically in in java to make
00:45 - an if statement you just do if
00:50 - and then these parentheses and
00:53 - inside the parentheses this is where
00:56 - this is our condition so this is
00:58 - basically
00:59 - like what the program checks to be
01:03 - true or false so
01:07 - um let's first make
01:10 - like a boolean so you can do like
01:14 - um boolean happy
01:19 - is equal to true so in
01:22 - these parentheses we want to
01:26 - put a boolean in here so we can put like
01:30 - if happy so
01:33 - happy is what the program checks
01:36 - so like in this case i set it equal
01:40 - to true and then in here
01:43 - like at like inside the if statement
01:47 - this is where our decision will be made
01:50 - so we can like do system dot
01:54 - out dot print
01:57 - ln parentheses
02:00 - like yay
02:04 - because you're happy so that's how you
02:08 - make an
02:09 - if statement and just to reiterate
02:14 - whatever you put inside the parentheses
02:18 - is what the code checks so in this case
02:21 - happy is true
02:23 - so because this condition is true then
02:26 - this
02:27 - decision will be made which will be like
02:31 - yay so if you compile
02:35 - click compile and you go here
02:40 - and you right click you click board main
02:43 - stream blah blah blah click ok
02:47 - and so it prints this
02:50 - statement out because we taught it to
02:55 - but if we make this false
03:00 - then happy will be false and this
03:04 - won't run basically like nothing will
03:07 - run
03:08 - so if we click compile nothing is
03:13 - could compile and click this nothing is
03:17 - going to
03:19 - pop up
03:22 - see like like
03:25 - oh
03:28 - yeah so oops
03:33 - okay yep so i'll remind you that boolean
03:37 - is the last type of variable we were
03:40 - talking about last week
03:41 - um so it stores either true or false so
03:45 - that's
03:46 - mostly what's going to be inside the
03:48 - parentheses of your statement
03:52 - yeah and i forgot to do example
03:56 - but based like an else statement is
04:00 - like if this statement isn't true
04:03 - then the else statement will run
04:06 - so like if we're not hungry then well
04:09 - instead we'll just play animal crossing
04:17 - okay so there are even more layers you
04:21 - can add to your if statement
04:23 - so uh if we look at this example it's a
04:26 - lot like before
04:28 - so like if hungary is true
04:31 - then you're going to eat pizza but then
04:34 - remember
04:34 - how we talked about else statements so
04:39 - if the first statement is not true
04:42 - then else you're going to do
04:46 - another action so we can there's a
04:49 - slight variation of that we can use
04:51 - so if you're hungry then you eat pizza
04:56 - but if you're not hungry else
04:59 - if you're tired then you take a nap so
05:03 - basically if the first statement and
05:06 - if your first if statement isn't true
05:08 - it's going to move on to the next
05:12 - statement which here is marked by else
05:16 - um then it's going to check if that's
05:18 - true
05:19 - and if that's true then it's going to do
05:21 - the action
05:22 - that's inside of the second statement so
05:26 - take a nap
05:28 - um and then if neither of those
05:31 - are true then it's just going to go to
05:34 - the catch all else statement
05:36 - and it's going to uh run play animal
05:39 - crossing
05:40 - so an else if statement is
05:44 - basically just like an if statement but
05:47 - only but the compiler only looks at it
05:50 - if the first statement that comes before
05:52 - is not true
05:54 - and then you can add like
05:59 - a ton of other else if statements all in
06:02 - a row
06:03 - for different conditions and there are
06:05 - lots of different ways you can play
06:06 - around with this
06:09 - yeah so
06:12 - yeah okay
06:17 - okay so before we give um
06:20 - an example for all of that there are
06:23 - also
06:24 - a lot of operator symbols or operations
06:28 - that you can use
06:29 - inside your if statement so instead of
06:31 - just
06:32 - having a boolean value that's either
06:35 - true or
06:36 - false then instead you can put like a
06:39 - statement
06:40 - inside of your if statement
06:43 - a statement inside of your parentheses
06:45 - so
06:46 - for example if if
06:49 - 7 is greater than 6 that's true
06:53 - so then the if statement is going to run
06:57 - um so there are lots of different
07:00 - like sentences or statements or claims
07:03 - that you can put
07:04 - inside the parentheses of your if
07:06 - statement and
07:07 - they're going to use um at least one of
07:10 - these operators
07:12 - so the first one is a greater than sign
07:15 - and the second one's a less than sign
07:17 - and you can use this just as you used
07:20 - them in math class they're pretty
07:22 - self-explanatory um same thing for the
07:25 - third and fourth one
07:26 - it's a greater than or equal to sign and
07:29 - a less than
07:30 - or equal to sign so you're going to use
07:32 - these for numbers
07:34 - um basically exactly the same way that
07:36 - you learned in math
07:38 - and then uh i think it would be easier
07:42 - to go to the
07:44 - sixth one which is the double equals
07:46 - sign
07:47 - so that's going to be basically if
07:50 - two numbers are equal to each other so
07:53 - if
07:54 - six equals six then the statement is
07:57 - going to run
07:58 - um that might not make very much sense
08:01 - but
08:01 - um for example if there are two
08:05 - variables that are storing different
08:07 - values and those values are always
08:09 - changing
08:10 - then the if statement is going to happen
08:14 - what if those two
08:17 - variables hold the same value
08:20 - and you're going to check that with the
08:22 - double equal sign
08:25 - um and that's going to be yeah
08:29 - sorry just to give an example like if x
08:32 - is equal
08:33 - to zero or like if right
08:37 - five is equal to five like what alex
08:40 - said
08:42 - so yep
08:45 - so yeah you could also just do it with
08:47 - one variable so like if
08:48 - x equals five then the if statement is
08:51 - going to happen um
08:54 - so it's really important to remember to
08:56 - use a double equal sign here
08:58 - instead of an equal sign because
09:01 - in java just one equal sign always means
09:04 - that
09:04 - you're creating a variable you're
09:06 - assigning a value to
09:09 - um a variable so you don't want to do
09:12 - that
09:12 - to compare things you always use two
09:14 - equal signs
09:16 - and then the exclamation point
09:20 - basically just means not
09:23 - opposite it's not equal to each other
09:27 - so you can put an equal sign you can put
09:30 - an exclamation point
09:31 - before an equal sign and that basically
09:33 - just means
09:35 - if 5 is not equal to 6 then the if
09:38 - statement runs
09:40 - something like that um
09:43 - do you just want to do examples for that
09:46 - right now for the numbers
09:48 - okay we can do an example with
09:53 - if analysis found statements
09:57 - so i'm going to create
10:00 - two variables and
10:04 - x equals three
10:08 - and into y is equal to
10:12 - six 66 sure okay
10:17 - and i want to compare if x
10:22 - if x is greater than
10:26 - y let's say
10:31 - oops and then like parentheses
10:35 - and then these brackets and inside here
10:38 - we're going to
10:39 - indent
10:42 - indent and say our statement like
10:47 - system.out.printline
10:49 - x is greater than
10:58 - y
11:00 - um we can also have this else statement
11:05 - like else
11:12 - else um
11:16 - well first we can check if
11:19 - like else if
11:25 - okay sorry so first we can check if
11:28 - x is greater than y and then we can also
11:31 - use an
11:31 - else statement let's just like assume
11:34 - that
11:35 - x is less than y so we can do
11:38 - system dot out dot print line
11:42 - x is less than
11:45 - y so what the else statement does
11:50 - is if this is not true
11:53 - then it else it will do this
11:58 - so if we compile it
12:03 - and go back to our box
12:07 - and right click second
12:10 - option
12:16 - oh and then
12:20 - you go to our this theme
12:24 - it will say x is less than y
12:28 - because 3 is less than 66
12:32 - but um what if like for example
12:36 - x is equal to y
12:40 - so let's say y is equal to
12:43 - three then in here we also need
12:47 - an else if statement
12:50 - else if x is
12:54 - equal to y
13:00 - because x is not
13:03 - greater than y so this is false but x
13:07 - is also not less than y they're equal to
13:09 - each other
13:10 - so we need like another option to
13:13 - account
13:14 - for when x is equal to y so we can do
13:18 - system
13:22 - x is equal to
13:27 - y and so
13:30 - now if we run it
13:40 - it will say x is equal to
13:43 - y
13:46 - um and for the not symbol
13:51 - not means like negate so
13:56 - like we can also add change this
14:00 - if x is not equal to
14:04 - y then
14:07 - we can say x is not equal
14:12 - to y so the knot is like a negates
14:16 - something
14:16 - so if something is true
14:20 - if you do not true it will give you
14:24 - false and if something is not false
14:28 - it will give you true um
14:31 - yeah and not equals just means not
14:33 - equals
14:36 - so if we
14:39 - compile it
14:43 - it'll like give us x is equal to y
14:47 - because you can't change it
14:51 - um yeah and there are also
14:55 - more operators
15:03 - alex oh sorry
15:06 - okay so
15:10 - um sometimes encoding you don't want to
15:13 - just compare
15:14 - two numbers instead you want to
15:17 - compare two sentences or two words and
15:21 - so you're going to use strings to store
15:23 - those values
15:25 - so um we can't just
15:28 - do two equal signs to compare two
15:31 - strings and tell if they're
15:32 - exactly equal to each other instead
15:34 - we're going to use the
15:35 - dot equals parentheses um operation
15:41 - so um
15:45 - i guess that'll be easier to show you
15:47 - later exactly
15:49 - syntax for that but just remember that
15:51 - when you're comparing two strings um
15:54 - you're going to use the dot eagle
15:55 - statement and basically it's going to
15:59 - when you use that it's going to check
16:01 - that your two strings
16:03 - are exactly equal to each other so
16:06 - the same capital letters um this
16:10 - exactly the same letter is in the same
16:11 - order um
16:14 - all the spaces are exactly where they
16:17 - are
16:18 - in the other one and like it basically
16:20 - has to be exactly the same
16:23 - um and then there
16:26 - what if you want to get even more
16:28 - specific with your if statement
16:31 - and you want to
16:34 - you want something to happen only if
16:38 - two conditions are happening at the same
16:40 - time
16:41 - so there you're going to use a double
16:44 - and symbol i don't know exactly what you
16:47 - call this
16:48 - but it's the ant symbol um
16:52 - you're going to use two of them and then
16:54 - basically
16:55 - uh as you can see on the right over here
16:58 - um you can basically have
17:01 - two statements inside
17:04 - if parentheses and
17:09 - um compile find them with two a symbol
17:13 - your if statement is only going to run
17:15 - if both of those are true
17:18 - not if only one is true not if they're
17:20 - false
17:21 - only if both of the statements are true
17:26 - and then um maybe you want to do
17:29 - something else
17:30 - maybe you want your if statement to be
17:32 - kind of broad
17:33 - if this happens or if this happens so
17:37 - one of two conditions happens so in that
17:40 - case you're going to use these two
17:42 - lines um on my keyboard
17:47 - above fifth and then above the enter
17:51 - keyword yeah on my keyboard
17:56 - it's the key the low backspace and above
18:00 - enter
18:01 - and you shift yeah
18:04 - i also don't know what these are called
18:06 - i just call them lines
18:08 - so basically if you put two of them in
18:10 - between
18:11 - two statements in your if parentheses
18:14 - it's go
18:14 - it basically acts as the word or so
18:17 - your if statement is going to
18:21 - uh take place if
18:25 - one or the other of the statements is
18:29 - true if that makes sense so
18:32 - like if x is equal to
18:36 - 15 then x
18:39 - this statement is true but the statement
18:42 - x is greater than 40 is false but it'll
18:46 - still run
18:47 - and likewise if x is like
18:50 - 60 this statement will be true
18:53 - but this will be false and it'll still
18:56 - run
18:57 - but if oh
19:00 - what like both of these are like not
19:03 - true
19:04 - which i don't think is it possible
19:09 - but like if both of these statements are
19:12 - not true then this won't run
19:14 - but for the and then both of these
19:18 - need to be true
19:23 - yeah so with the or um it'll be okay
19:26 - if only one of the statements is true
19:29 - but with and
19:30 - both of them have to be true like andre
19:33 - i said
19:34 - just reiterating yeah also alex said
19:39 - but um i think that's it
19:42 - for slides
19:45 - so um we can do like another example
19:53 - so like in here i
19:56 - have two integers right x and y
20:01 - and we can change our if statement to be
20:04 - like
20:06 - if let's do an n
20:09 - symbol so we can do if x
20:12 - is less than y
20:16 - and x is greater than zero
20:20 - so like both of these need to be
20:23 - true in order for this to run
20:27 - so we can say in here um
20:30 - x is less than y
20:35 - and is
20:38 - a positive number
20:47 - so yeah that's what this
20:52 - condition like it needs to be true
20:56 - and in or we can
21:00 - if we want to do like an r statement
21:03 - we can do else if
21:06 - x is less than zero
21:11 - um or
21:14 - x is less than
21:17 - y so we can say
21:21 - x is either a
21:25 - negative number or
21:28 - x is less than y
21:32 - so only one of these need to be true and
21:35 - this will run
21:37 - does someone want to tell us if the
21:39 - first if statement is true or false
21:42 - if it's going to run
21:48 - michelle do you have a guess it doesn't
21:51 - have to be right but like just
21:53 - look at it and tell us if you think it's
21:55 - going to run
22:02 - so here we have x is equal to 3 and
22:05 - y is equal to 3 so
22:17 - so for the first if statement
22:20 - x is not less than y since both of
22:23 - them are three and so since
22:26 - the first part of the if statement is
22:30 - false already then that if statement's
22:32 - just not going to
22:34 - yeah exactly like you said in the chat
22:41 - and will
22:44 - this statement be run
22:54 - if 3 is less than 0
22:58 - which is not true so this part is false
23:03 - and if 3 is less than 3
23:06 - that's also false so
23:09 - this part won't run and neither will
23:12 - this part
23:13 - so will resort to the else statement
23:17 - with like both of these if and else if
23:20 - are false so then it just defaults to
23:23 - the else statement
23:25 - which we can say x is
23:29 - equal to y
23:35 - and so we compile it
23:41 - and go back to our box here
23:44 - and then you right click
23:48 - the second option
23:52 - and then it will pop out
23:55 - the answer which says x is equal to y
24:01 - um do you guys have any questions
24:06 - are you confused do you want us to
24:09 - clarify anything
24:16 - just to reiterate you need to be extra
24:19 - careful with the
24:20 - second statement here the else if
24:22 - statement because it's using an
24:24 - or so just because the first part of the
24:27 - if statement
24:28 - is false doesn't mean the whole thing is
24:30 - false because
24:32 - if the second part was true um
24:35 - that's an or so that
24:38 - is true so the whole thing is just going
24:40 - to be true and it's going to run
24:42 - so just be careful about that
24:51 - so yeah if no one has any questions do
24:54 - you want to maybe do an example with a
24:55 - string
24:57 - oh yeah okay so
25:02 - we can create like a string variable
25:06 - so we can do string
25:10 - um object
25:15 - equals to pencil
25:19 - and then we can have string
25:21 - [Music]
25:22 - object 2 equals to
25:25 - [Music]
25:26 - pencil and we can compare these
25:31 - i'm just going actually i'll
25:35 - just leave this here if you guys
25:38 - like want to copy it down but
25:42 - to compare strains we would just do
25:46 - so first you want to compare
25:50 - two things right so we put like the
25:52 - first
25:53 - thing we need to compare and then dot
25:57 - equals and then in these parentheses
26:02 - the second thing you want to compare so
26:05 - in this case it's
26:06 - object two so in here we
26:10 - have equal sign and we also need an
26:12 - ending parentheses
26:15 - for our if statement and then you have
26:18 - these brackets
26:24 - and in here we can just say
26:30 - system the auto print
26:34 - they are equal
26:37 - to each other
26:43 - so if you want to compile it to test it
26:46 - out
26:47 - you go back to our box
26:52 - and you right click click ok
26:58 - and it'll say they are
27:02 - equal to each other
27:05 - but java is also case sensitive
27:08 - so what that means is if we change this
27:11 - to like
27:12 - capital p and we
27:15 - try to run it
27:22 - right click
27:29 - it well
27:33 - oh wait yeah okay
27:36 - then this part is from
27:40 - this but you guys can see that
27:43 - because pencil is not
27:47 - equal to pencil with a capital p
27:50 - then this statement was it didn't run
27:54 - so you have to be careful with uh
27:57 - strains because like
28:01 - it has to be exactly the same as alex
28:04 - said
28:06 - and yeah so you for strains you can
28:09 - compare
28:10 - variables but you can also do like
28:14 - if object dot equals
28:19 - like yes so what that does is it
28:23 - compares
28:24 - this which is pencil and it sees if
28:27 - pencil is
28:28 - equal to yes so you can also
28:32 - instead of a variable you can also put
28:34 - like an
28:35 - actual stream and if we compile it
28:45 - it will okay
28:49 - wait first let me clear it and then i'll
28:52 - compile it
28:56 - oh yeah and it didn't
28:59 - print this statement but
29:03 - this is from this if statement
29:08 - so yeah so that's comparing
29:13 - uh strings and
29:17 - remember if you want to see if
29:20 - numbers are equal to each other you have
29:22 - to use
29:23 - these double equal signs and you can do
29:26 - these for
29:27 - ins or doubles and double is for
29:31 - decimals and
29:38 - do you guys have any questions
29:44 - please feel free to ask questions like
29:46 - at all even if you think they're
29:48 - dumb like that's over here for to answer
29:50 - your questions
29:53 - yeah um i don't know if i lost you guys
29:56 - like if like this entire thing is
29:59 - confusing
30:00 - or like if you don't understand one
30:03 - thing
30:04 - so can you guys please speak up like
30:06 - even if you
30:07 - understand everything please tell us
30:10 - or if you don't understand something
30:13 - then you can also tell us
30:34 - [Music]
30:48 - left
30:53 - oh uh andrea do you want to go over how
30:56 - to compile the code again
30:59 - yes okay thank you for having me
31:04 - this compile thing up here
31:13 - oh um if you get red dots that's
31:16 - probably because you have an
31:18 - error in your code somewhere
31:21 - so that would be something
31:24 - with a syntax maybe um
31:28 - when you go in your code do you want
31:32 - to see if there are any red lines
31:35 - anywhere and
31:36 - if there are you like you can tell us
31:39 - where they are and maybe we can try to
31:40 - help you
31:43 - um like troubleshoot
31:47 - yes like getting yours
31:58 - what
32:01 - am i pronouncing that right uh
32:05 - i really hope i am so if you have an
32:08 - error like
32:08 - andrea is showing you um like it'll tell
32:12 - you this
32:13 - or if it's like this logic arrow would
32:15 - be like a bunch of confusing words that
32:17 - you don't know what it means
32:21 - um do you think okay i really hope i'm
32:24 - not butching you guys names if i am like
32:26 - please tell me but um so
32:31 - um once you compile your code so like
32:34 - you right click on the brown box and
32:36 - then you click the second
32:37 - option um there should be a window that
32:40 - shows
32:40 - up that yeah i got your name right so
32:43 - there should be a window that pops up
32:45 - that gives you the output but if
32:48 - it doesn't pop up automatically um kind
32:51 - of like
32:52 - hover over you blue jay icon on the
32:54 - bottom and like see
32:56 - if it popped up but it's just hidden
33:00 - and you need to try um
33:04 - looking for it it should pop
33:07 - up even if it doesn't if even if it is
33:10 - right in front of your face yeah it's
33:11 - like
33:12 - you have to go here and like something
33:15 - will pop up
33:22 - okay
33:28 - is everyone good now oh oh i'm not so
33:31 - stupid
33:35 - i closed my blue jay program
33:44 - [Music]
33:47 - okay okay so after you click compile
33:52 - in order to run your code you're going
33:53 - to go back to your bluej window
33:56 - um that has all of your classes from
33:59 - before
34:00 - if you didn't delete them so like they
34:02 - should all be brown boxes
34:04 - yeah like the one on android screen
34:07 - right click
34:08 - and then you click this thing
34:12 - it says and void made
34:16 - yeah and if it says compile you also
34:18 - click that
34:20 - just keep always click always
34:23 - right click your box and click the
34:25 - second option
34:29 - um rika did you uh
34:32 - type in like all of the
34:36 - like the base code at the very beginning
34:39 - of your
34:40 - program so andre do you want to like
34:42 - highlight the
34:43 - code at the top this
34:47 - thing e
34:53 - wait so you could compile does it give
34:56 - you any
35:00 - errors
35:07 - you want to make sure that you have the
35:09 - public class line
35:11 - and also the yellow line that andrea is
35:15 - that's just gonna like set up your code
35:18 - yep
35:20 - yeah you need this to like
35:23 - actually run your code like if you don't
35:26 - have this
35:28 - it'll like we'll just
35:31 - mess everything up and we'll probably
35:33 - have these
35:35 - red lines so you need this
35:39 - all this jumbo
35:44 - it can be hard to remember in the
35:45 - beginning especially since you don't
35:47 - really know what it means yet
35:49 - but um as you get a little more advanced
35:52 - then you'll like
35:53 - learn exactly why it's there and why
35:56 - you type everything yeah i get it's
35:59 - really annoying not
36:01 - knowing exactly but
36:04 - yeah that is something important
36:38 - so
36:40 - if you guys are all good no questions no
36:43 - errors um
36:46 - then we're going to move on to usher
36:49 - activity for today
36:52 - yeah wait first do you guys like
36:55 - do you guys not understand something
36:59 - or is it just like new to you and you
37:03 - kind of got
37:03 - you get used to it or is there like
37:06 - something that you don't understand
37:30 - or if you ever just need time to catch
37:32 - up just let us know
38:02 - okay
38:26 - okay
38:31 - i think we're going to do
38:34 - like a short mini activity but we might
38:38 - not finish it
38:39 - but i'll like try to like
38:42 - at least describe it to you
38:46 - so we're going to we're going to make
38:49 - this 8 ball program
38:50 - and if you guys don't know an 8 ball
38:54 - is
38:57 - just like
39:00 - um eight ball is well we're gonna make a
39:03 - modified april
39:05 - so yeah andrea magic april
39:16 - um magic eight
39:21 - oh yeah no spaces magic ball i'm just
39:24 - convenient
39:26 - so we're basically going to make a
39:28 - program that simulates
39:29 - a magic eight ball and like that's
39:33 - a pretty popular toy so basically you
39:36 - shake it um and it just gives you
39:40 - a random fortune or piece of advice
39:44 - and so we're going to try to do that
39:46 - with this statement here
39:48 - yeah so click new class and then
39:52 - name it whatever you want click
39:55 - ok and now you should have
39:59 - this brown box does everyone have it
40:14 - cool seems like you guys have it
40:18 - okay and then you right click
40:22 - sorry you double click it
40:25 - you double click it and then
40:34 - you delete everything just like
40:37 - everything
40:38 - and then you have to type public static
40:43 - void name and then parentheses
40:47 - and then the string with a capital s
40:57 - in like this
41:07 - and well
41:11 - we also need something what we learned
41:13 - last time
41:14 - we did scanner right so
41:18 - remember we have to import
41:21 - scanner
41:24 - so import space java.util.scanner with
41:29 - the capital s
41:31 - remember that enter is the thing that
41:33 - lets us get
41:34 - a user's input so it's kind of like a
41:37 - game
41:39 - yeah so after we need to create
41:43 - our scanner tool so you do scare
41:46 - and then i'm going to name my input
41:50 - and then equals new scanner
41:53 - and then parentheses system thought
42:01 - andrea maybe we just want to like uh set
42:03 - up really quickly because christina
42:05 - wants us to
42:06 - get off the zoom account in a couple
42:08 - minutes
42:09 - oh okay so okay
42:12 - we can do so first we want to like
42:17 - ask our user to enter a
42:21 - number so like enter a number
42:24 - [Music]
42:26 - from 1 to
42:30 - 4
42:34 - and then we want to store our user's
42:37 - response
42:38 - so it's going to be a number so i'm
42:41 - going to store it in an
42:42 - int variable like int
42:46 - response equals to input
42:50 - which is our scanner input top
42:53 - next it
42:57 - because we're getting an integer
43:01 - response and then
43:05 - really quickly we're just going to use
43:08 - an if statement
43:09 - and check if response is equal to
43:13 - one so you have to use double equal sign
43:21 - to check if response if the user entered
43:24 - one
43:24 - so if the user entered one then we
43:28 - would like say something
43:31 - like um
43:34 - you are awesome
43:38 - and then else if
43:42 - the response is equal to 2
43:49 - then you can say
43:56 - um roll the
44:00 - ball again
44:03 - and you can put like whatever response
44:05 - you want in here
44:07 - and then we would also do another elsa
44:09 - statement
44:11 - which checks if response is equal to
44:14 - three and we would put
44:17 - like another statement here
44:23 - so that's like the basic format of it um
44:25 - if you guys want to go
44:26 - home and play around with it and add
44:30 - um different else if statements and
44:33 - lots of things in here um
44:37 - that would be great if you just want to
44:38 - play with it but
44:40 - unfortunately we're gonna have to end
44:42 - class a little early today
44:44 - um one more thing to mention
44:48 - um you also need an else statement or
44:50 - else it's going to give you an
44:52 - error so if you have an if statement
44:55 - and an elsa statement then you need an
44:57 - else statement
44:59 - which will basically catch all your
45:02 - errors
45:02 - but in this case because we need an else
45:05 - statement
45:06 - this is just when the user picks the
45:09 - number four
45:13 - so yeah you guys um
45:16 - we recorded this lesson so if you guys
45:20 - can like like file back on it because i
45:23 - know i typed really fast and i spoke
45:25 - really fast
45:26 - but you guys can watch this video in
45:28 - your own time
45:29 - and yeah or you can screenshot it now
45:33 - and um so you don't have to watch the
45:36 - whole thing but yeah
45:40 - so i'm gonna stop recording