00:02 - okay
00:03 - so we're gonna go ahead and get started
00:06 - um
00:06 - so first of all thank you all so much
00:08 - for joining this drama session we're
00:10 - super super
00:10 - excited to have all of you here um
00:14 - my name is candace uh i'm an incoming
00:16 - junior
00:17 - um and i will be one of your java
00:19 - instructors
00:20 - for this session hey guys my name is
00:23 - alex
00:24 - i'm also an incoming junior and i'll
00:26 - also be one of your
00:27 - java teachers for the session
00:30 - hello my name is andrea and
00:34 - i'm also an incoming junior and
00:38 - um also we're also going to be your
00:42 - java instructors cool
00:45 - um so i don't know if you saw what was
00:48 - written in
00:49 - the chat um but if any of you do not
00:53 - have a coding software like bluej
00:56 - or um repo online compiler
01:00 - uh please type it in the chat so we can
01:03 - make sure that everyone has that
01:05 - um and another thing which i think all
01:08 - of you
01:08 - do but if you aren't um talking please
01:12 - keep your mics off just because we do
01:13 - have a lot of people
01:15 - um so it would be great if whoever's
01:17 - talking has their mics on but if you're
01:19 - not if you could have your mics off that
01:20 - would be
01:21 - great okay
01:25 - cool so
01:28 - i'm gonna go ahead
01:31 - and go ahead and share my screen
01:39 - okay can y'all see my screen
01:46 - okay so um right now
01:50 - um we're just going to be focusing on
01:52 - the powerpoint over here and we'll get
01:54 - to the
01:55 - blue jay coding stuff in a little bit
01:58 - all right um
02:01 - alexandria
02:06 - i think it's alex or like whatever
02:09 - okay so the first lesson in this java
02:12 - session
02:12 - is going to be about variables uh
02:14 - variables are something you use in
02:16 - pretty much every single coding language
02:18 - and it's a really important
02:20 - concept for you guys too
02:23 - um
02:27 - so actually before we can start talking
02:29 - about variables
02:30 - um it's really important for you guys to
02:34 - know how to
02:35 - just print something in java that means
02:37 - that you
02:39 - um code it so that the computer type
02:41 - something out
02:42 - to the user such as like hi
02:46 - hello world um or anything like that
02:49 - so um in order to print
02:52 - something out to the computer you're
02:54 - going to want to use one of these two
02:56 - phrases you see in the slideshow um the
03:00 - first one is
03:02 - system.out.println and then in
03:04 - parentheses
03:06 - and then inside the parentheses you type
03:08 - whatever you want to be printed out
03:10 - so in this case it's hello and also if
03:14 - you're just typing like a word or a
03:17 - sentence
03:18 - you're going to want to put quotations
03:19 - around that um
03:21 - the bottom phrase for printing something
03:23 - out is
03:24 - basically the same thing but the
03:26 - difference is that the first phrase
03:29 - um puts in an enter after whatever
03:33 - you typed out and then the second one is
03:36 - just gonna keep going on so
03:38 - the first one moves on to a new line
03:40 - after you
03:42 - after it prints out the thing that's in
03:44 - the parentheses
03:45 - and the second one doesn't and
03:48 - it depends on what you want to do and
03:51 - you can choose whichever one
03:53 - all right so we're going to go ahead and
03:55 - just do a quick example of that again
03:56 - like alex said before we get
03:58 - into variables um so first of all if you
04:01 - guys could get
04:02 - bluej open um
04:05 - that would be great and again if you
04:07 - don't have bluej or don't have a way
04:09 - of coding on your computer please type
04:12 - it in the chat so we can help you
04:15 - but if you guys can get bluej open
04:22 - and then once you have blue jay open the
04:23 - first thing we're going to
04:25 - do is we're going to create
04:28 - a project so to create a project
04:31 - um i already have one open but to create
04:33 - one you're going to go to the top left
04:34 - corner where it says project
04:37 - click new project so project
04:41 - new project and um name it
04:45 - whatever you want to name it um you can
04:48 - call it like girls coded
04:49 - coding anything like that and then just
04:52 - choose the place where you want it to be
04:54 - saved and then click ok
05:00 - so again project in the top left corner
05:04 - new project name it something
05:07 - choose where you want to save it and
05:08 - press ok
05:11 - and then you should see something like i
05:13 - have here except you probably won't have
05:15 - these
05:16 - brown boxes
05:21 - so i'll give you guys a minute to do
05:23 - that and if you guys have any questions
05:25 - um throughout um if you feel comfortable
05:29 - turning on your mic and saying something
05:30 - uh feel free to do that if not then you
05:32 - can go ahead and just type it in the
05:36 - chat
05:38 - can you repeat that yeah so
05:41 - if you have bluej open um what you're
05:44 - going to do is go to the top left corner
05:46 - where it says project
05:48 - click that and then click new project
05:54 - yes and then do you see where it says
05:57 - right here like new project name
05:58 - location
05:59 - yes okay so then type in uh whatever you
06:02 - want to name it you can name it like i
06:03 - named mine
06:04 - girls coded you can name it whatever you
06:06 - want
06:07 - um and then location is just where on
06:10 - your computer is going to be saved
06:12 - and then click ok and then you should
06:14 - get something
06:15 - basically it'll look like the same thing
06:18 - um
06:32 - yes
06:34 - okay does anyone need more time on them
06:39 - all right cool so now what we're going
06:41 - to do now that we all have a
06:43 - project is we're going to create a class
06:46 - um so to create a class you're going to
06:49 - go over to the left
06:52 - right under where it says project there
06:53 - should be a button that says new class
06:57 - so click that um in your class name
07:00 - again you can name it anything you can't
07:02 - have spaces
07:03 - but other than that you could pretty
07:06 - much name it anything
07:08 - i'm going to call mine
07:11 - variable because that's what we're
07:14 - talking about today but again you could
07:16 - call it anything you want you call it
07:17 - lesson one
07:19 - meeting one anything you like um after
07:22 - you call it that then just go ahead and
07:23 - click
07:24 - ok and you should see a brown box
07:27 - show up uh like this where it has the
07:30 - name that you just put in right at the
07:32 - top
07:32 - so again at the left um you're gonna
07:35 - click
07:36 - new class type in the name
07:40 - uh whatever you want to name it and then
07:42 - click okay
07:47 - got it
07:53 - okay anyone need more time on that
08:10 - okay
08:13 - so um then we're going to just open that
08:16 - so just double click on that brown box
08:17 - that showed up
08:19 - and you're gonna see something
08:22 - that looks
08:30 - also reminded you guys if you aren't
08:32 - talking it would be really great if you
08:34 - could
08:34 - meet so that uh any noise you have
08:37 - doesn't like interview yeah
08:43 - okay so
08:48 - now you should see something that looks
08:49 - like this a bunch of writing
08:51 - just like this so you can just go ahead
08:53 - and delete
08:54 - everything
08:57 - so just go ahead and delete everything
09:08 - [Music]
09:13 - okay so just go ahead and delete
09:15 - everything um
09:17 - and then at the top we're going to write
09:23 - public class and then whatever you named
09:25 - it so in my case
09:26 - i named it uh variable but
09:31 - let's say you named it hello then you
09:32 - would write public class hello
09:34 - um so everyone's going to write public
09:36 - class
09:37 - and then um after that write whatever
09:40 - you named your
09:42 - class and java is a case sensitive
09:45 - language meaning that
09:47 - you see how i have a capital v if i were
09:49 - to do a lowercase v
09:51 - um it wouldn't work so you have to do
09:53 - have the same case
09:54 - as you did in um as your name
09:59 - and then we're going to do two curly
10:03 - brackets just like
10:04 - that
10:08 - and then um everyone is going to write
10:11 - public static
10:15 - void
10:23 - i will put all of this in
10:29 - the chat if
10:32 - i can find the chat
10:36 - this might take a second to open but um
10:44 - why isn't the church right now
10:55 - i think the chat is lagging um but if
11:00 - you guys just want to go ahead and copy
11:01 - this down so we have
11:02 - public static void main
11:05 - parentheses uh string and then the
11:08 - brackets
11:09 - um rx parenthesis and then um
11:12 - brackets just like that
11:22 - okay so this is what um you're going to
11:25 - write at the top
11:26 - of every
11:30 - class whenever you want to
11:33 - code so does anyone need time to copy
11:37 - that down
11:44 - okay cool so once we have that down then
11:47 - we can go
11:48 - back to printing something so like how
11:50 - alex has said before
11:52 - um we're going to use something called
11:54 - system.out.print
11:55 - so let's just go ahead and type that so
11:58 - system
12:00 - dot out dot
12:03 - print and again you could do print ln or
12:05 - just print
12:06 - at this point don't really worry about
12:08 - which one should i use it doesn't really
12:10 - matter at this point
12:11 - i'm just going to do ln parentheses and
12:15 - your whatever you want to write you're
12:17 - going to put in quotations
12:21 - and in your quotations um you could
12:24 - write anything
12:25 - you like i just wrote hello
12:29 - um just whatever again whatever you
12:31 - write it needs to be in those quotations
12:33 - um and then that needs to be within
12:35 - parentheses and at the end you are
12:38 - almost
12:39 - on almost every line of code you're
12:41 - going to have
12:43 - a semicolon
12:49 - anyone have any questions about this so
12:51 - far or anything like that
12:56 - um i have a question so my first
12:59 - question is
12:59 - is java like sensitive to indents as
13:02 - well
13:04 - um no so you mean like how to indent it
13:08 - here
13:09 - no so you could um have it like this
13:13 - the only thing is um it indents at least
13:16 - in blue jay automatically
13:17 - because it it just helps you to stay
13:20 - more
13:22 - stay organized because like you see um
13:24 - this
13:25 - every open bracket has to have a close
13:27 - bracket um select this open
13:29 - closes here this open closes here so the
13:32 - indents
13:33 - they're not necessary um but they're
13:35 - very helpful for
13:37 - helping you stay organized because if
13:38 - you just have like a big block it can
13:40 - get really confusing
13:41 - as to like where the brackets go and
13:43 - when we get into some other stuff later
13:45 - um the indents really come in handy so
13:48 - no they're not necessary but they are
13:50 - very very
13:51 - helpful in helping you stay organized
13:53 - and keep track of everything
13:55 - okay um and then my other question is
13:58 - like
13:58 - why are we typing like the public static
14:01 - void main like what does that do
14:03 - or what does it mean um so the public
14:05 - static void main i'm not going to get
14:07 - into like every little thing of it but
14:09 - basically we just write that at the top
14:10 - of our code and that's how it
14:12 - um knows where to start our code um
14:16 - so this is what we write because if we
14:18 - didn't have it we wouldn't be
14:20 - it wouldn't know like i guess where
14:23 - to start running slash printing our code
14:27 - alexandria if you guys want to add
14:29 - anything to that
14:32 - yeah it can be really confusing to
14:35 - understand exactly why we do it um when
14:37 - we first start coding but
14:39 - if you keep learning java it you'll
14:41 - learn it eventually and it'll make sense
14:43 - sorry about that
14:44 - yeah all right anyone have any other
14:48 - questions
14:52 - okay so now that we have
14:54 - system.out.prinelin and then whatever we
14:56 - want to
14:57 - have printed out we are going to
15:00 - compile it so if you look in the top
15:03 - left corner
15:04 - where it says compile it's right here
15:07 - versus compile
15:08 - just go ahead and click compile um so
15:11 - what compile does it basically goes
15:13 - and checks through your code for any um
15:16 - any errors
15:18 - in your code so for example let's say i
15:19 - had forgotten my
15:21 - semicolon at the end of my line of code
15:24 - and i press compile
15:26 - then it would give me an error right
15:27 - there um so
15:29 - if you get that then you can just look
15:30 - back see where it is and try to find
15:33 - your mistake
15:34 - and my mistake was i didn't put the
15:35 - semicolon
15:38 - and then if i were to compile again
15:41 - um then there's no mistakes so now i
15:43 - know that i'm good to go
15:45 - um good to go to run it
15:49 - all right so again compile right up
15:51 - there
15:53 - does anyone have any errors that you
15:55 - need us to help you
15:57 - work out or fix anything like that
16:05 - all right so now that it's compiled
16:09 - and ready to run we're going to go back
16:12 - over
16:12 - to sorry it's kind of confusing go back
16:15 - over to this page
16:16 - and um the block the brown box where you
16:20 - are writing in your code you're going to
16:23 - go ahead and
16:24 - right click
16:28 - and do the second option the void main
16:30 - string bracket marks
16:32 - so right click second option
16:36 - go ahead and click that and then just
16:38 - click
16:39 - okay okay
16:45 - so i could repeat that yes please
16:49 - oh do you want me okay so you go to the
16:52 - whichever um go to the box that you had
16:55 - created before
16:56 - go ahead and write oops sorry um right
16:59 - click
17:01 - and the second option so the void main
17:04 - string
17:05 - args
17:09 - click that and then just click
17:16 - okay
17:18 - and you should see um something that
17:21 - looks like this
17:23 - something that looks like this and
17:24 - whatever you put inside
17:26 - of your quotations like i wrote hello
17:29 - explanation
17:30 - um that should show up right there
17:37 - all right anyone have any trouble with
17:39 - that or any questions about that
17:42 - yeah once i hit compile i'm not uh
17:45 - able to get to the variable box
17:49 - um once you hit oh so
17:53 - did you name your class variable
17:56 - i named it variable one okay so then
17:59 - on your variable one box um does it have
18:02 - any lines over it
18:04 - other than these two in the corner yes
18:06 - it has the checkered lines
18:08 - okay red that means that there's an
18:10 - error somewhere in the code
18:12 - so if you open back up to this page
18:14 - where you have your code
18:16 - um do you see any spots like on
18:19 - right here like on the left side where
18:20 - it has um
18:22 - a red box yes it does
18:26 - um okay so some errors that
18:29 - um common errors that we could make one
18:33 - is um did you have
18:36 - a semicolon at the end of the line of
18:39 - code
18:41 - uh yes i do okay and then
18:44 - did you have um two parentheses
18:48 - and inside the parentheses be quotations
18:52 - yes the error it's saying is um but
18:56 - it's print one n is that print
18:59 - uh this is an l l sorry so the letter
19:03 - l okay yes
19:06 - yes now it's gone yes perfect cool um
19:09 - anyone else have any trouble
19:14 - so the lines on my variable one have now
19:17 - gone black
19:19 - uh perfect yes so now you can press
19:22 - compile
19:24 - um so in the top left if you press
19:28 - compile
19:31 - and then did the lines go away one
19:33 - second
19:36 - compile yes the lines went away
19:39 - yes okay and then now on your variable
19:41 - one box you can right click
19:45 - and then the second option so the void
19:47 - main string args
19:50 - click that and then you don't have to
19:52 - type in anything here just click
19:54 - ok having
19:58 - trouble um clicking the the right
20:01 - the right click on the wearable one box
20:06 - um on my mac computer do you know
20:11 - right clicking yes um
20:18 - i don't um
20:22 - i think you um put both fingers on it
20:24 - and click at the same time
20:26 - with both fingers and then um it's the
20:29 - same as the right click with them
20:30 - and then i click on compile uh
20:33 - if you compile first so if in your code
20:36 - if you click on compile
20:38 - yes and then um on your variable one box
20:42 - did the lines go away
20:43 - yes okay then you can go ahead and right
20:46 - click
20:47 - so try the two finger are you using like
20:50 - your
20:51 - touch the touch box on your computer
20:54 - okay so then try um two finger right
20:56 - click
20:58 - okay and then did the show up
21:01 - yes so then the second option right here
21:03 - void mainstream args
21:05 - got it go ahead and just regular click
21:07 - on that and then click ok
21:09 - and you should get a box that looks like
21:11 - this with whatever you put inside your
21:13 - quotations it should be printed out
21:15 - right here
21:22 - all right does it look good or do you
21:23 - have any other questions about that
21:25 - that's good
21:25 - yes perfect um does anyone else have any
21:29 - trouble with that
21:31 - or are we all looking good
21:35 - cool okay so now um
21:39 - that we know how to print things now we
21:42 - can move on to
21:44 - the main topic of today which is
21:46 - variables
21:48 - all right
21:51 - yeah so variables what is a variable
21:53 - right
21:54 - a variable is used to
21:57 - store information so what that means is
22:01 - like in this example
22:03 - we have h is equal to 6
22:06 - and h is the name of the variable
22:10 - and six is the value
22:14 - that's stored in h so like in math
22:18 - when we have like x is equal to one
22:21 - one refers to uh to x so
22:26 - yeah variables are used to
22:29 - store information
22:40 - alex
22:44 - so there are different types of
22:46 - variables
22:47 - in java and other languages so the first
22:50 - type of variable
22:51 - is an it variable um that is basically
22:55 - that basically contains a whole number
22:57 - so any number without
22:59 - decimals so like negative 10 4 256.
23:04 - um any simple number like that um
23:07 - the second type of variable is a double
23:09 - variable so
23:10 - that's going to contain a decimal number
23:14 - so that's like a fraction well not a
23:17 - fraction but
23:18 - um it has a point and then numbers after
23:20 - that so it's not
23:22 - a whole number um you probably should
23:25 - have learned that in math class
23:26 - so a double is going to store any
23:28 - decimal number like
23:30 - negative 7.56 1.2
23:33 - 3.1415 something like that
23:36 - um but not pi because it goes on forever
23:41 - um and then the third type of variable
23:44 - which is
23:44 - um a really common type is string so
23:48 - string is going to be
23:49 - text like um for example
23:53 - anything in quotations is going to be a
23:55 - string
23:56 - anything you want to be a string has to
23:58 - go in quotations so that would be
24:00 - like a sentence of or a word like
24:03 - i have three apples or hello
24:06 - or i'm a programmer um
24:10 - anything that that uses words like that
24:14 - and a boolean value um is an interesting
24:17 - type of variable because it can have
24:19 - only
24:19 - two types of values either true or false
24:23 - um it's kind of a strange type of
24:26 - variable so we won't go into
24:28 - a ton of depth with it today but that's
24:32 - just the other type of variable
24:35 - yeah so real quick booleans we're going
24:37 - to be talking about um
24:39 - in a couple lessons when we talk about a
24:43 - actually is that tomorrow um but yeah i
24:46 - think it's tomorrow when we talk about
24:48 - another
24:49 - topic in java it relates to that a lot
24:51 - more so we'll go to a little bit more
24:53 - detail then
24:55 - um i have a question about the varial 12
24:57 - types
24:59 - so if you were to take a fraction like
25:01 - three sevenths for example would that be
25:03 - represented as an integer or
25:04 - um a double cause like any decimal is
25:08 - going to be an approximate
25:11 - yeah so if for example you do like a
25:13 - division problem like three
25:16 - um three divided by seven in java is
25:18 - going to convert it into a double i
25:20 - believe
25:20 - since it's not a whole number okay
25:24 - yeah so let's say you like created a
25:27 - double variable
25:28 - that was three over seven and then yeah
25:30 - like alex said it would be a decimal if
25:32 - we created
25:33 - an int variable that was three over
25:35 - seven and then it would
25:36 - get rounded i believe
25:42 - me if i'm wrong please yeah i think so
25:45 - yeah um
25:48 - cool okay
25:52 - yeah so like i said variables
25:56 - are useful because they allow you to
25:59 - store information but they also allow
26:02 - you to
26:03 - change it so yeah
26:07 - and this is useful because if we have
26:10 - like
26:11 - a story such as like once upon a time
26:15 - there was a person named sam
26:19 - and sam is 18 years old
26:23 - sam likes ice cream and we keep using
26:26 - sam sam sam
26:28 - if the user wants to change
26:31 - like the name which in this case is spam
26:35 - um instead of like going back
26:39 - and one by one like changing sam
26:43 - to like another name if we just have a
26:46 - variable
26:47 - like in like a name variable
26:50 - we can just change it to another name
26:54 - instead of like one by one changing
26:57 - that name
27:01 - okay okay so
27:05 - uh you got should remember the int
27:07 - variable the first type of variable we
27:09 - talked about
27:10 - so that's going to be the whole number
27:11 - one um
27:13 - so we're going to talk about how to make
27:15 - variables now
27:17 - so um the formula for making
27:22 - a variable is basically the same for
27:24 - every type
27:25 - but um specifically for int
27:29 - to make an int variable you're going to
27:30 - type out int
27:32 - and then the name of your int variables
27:35 - so in this case we're going to call it
27:37 - number but you can call it anything like
27:39 - elephant age name whatever you want
27:43 - and then an equal sign and then what
27:46 - value you want
27:47 - that variable to store and then as
27:50 - always
27:50 - your semicolon and you can do a lot of
27:54 - different
27:54 - like math operations within like adding
27:57 - subtracting multiplying and dividing
28:00 - okay so if you guys want to hop back
28:02 - over to bluej
28:04 - you can open up that same one that we
28:06 - were working with before
28:08 - um so in my case it was variable um
28:11 - i'm just going to go ahead and delete
28:13 - this feel free to keep it if you want
28:15 - i'm just going to delete it so we don't
28:16 - get confused with other things
28:19 - all right so like alex said we are going
28:21 - to create
28:22 - an int variable so we do that by saying
28:25 - int
28:26 - and again it has to be a lowercase i
28:29 - because java
28:30 - is case sensitive um
28:33 - whatever you want to call it i'll call
28:35 - it num
28:36 - short for number and whatever
28:40 - number you want to store in it so i'll
28:42 - just do
28:44 - six and then as always your semicolon
28:51 - okay um and i'm just going to create one
28:53 - more
28:54 - um int num2
28:58 - equals 2.
29:02 - again you guys can put in any number you
29:05 - like there
29:07 - as long as it doesn't have any decimals
29:11 - okay so do we need to put a space after
29:15 - like your name and a space after the
29:17 - equal sign or is it
29:19 - like just to like read well yeah so you
29:22 - don't have to
29:23 - um you could do it like that um you
29:26 - could do it like that
29:27 - it doesn't really matter i just always
29:30 - put a space there because i think it's a
29:32 - little bit easier to read
29:33 - but if you don't want to you do not have
29:35 - to
29:37 - but you do need a space between int and
29:40 - the name of your variable
29:43 - all right all right so now we're going
29:46 - to use what we learned
29:47 - about 15 minutes ago with the
29:49 - system.out.print
29:51 - so let's just go ahead and type that
29:53 - again
29:55 - [Music]
29:59 - system dot out dot
30:02 - print owen and then um
30:06 - in this case we are not going to use
30:10 - quotations um i know last time we used
30:13 - quotations to print out
30:14 - like hello um in this case we are not
30:18 - going oh my gosh sorry we are not going
30:20 - to use quotations
30:22 - so the reason why we're not using
30:25 - quotations is because
30:26 - i want to print out the number 6 meaning
30:29 - that i want to print
30:30 - out the num variable if i were to put
30:34 - quotations right there rather than
30:35 - printing out six
30:37 - um it would print out num
30:40 - because that's what's in the quotation
30:42 - so if you ever want to print out
30:44 - just a variable by the name then you're
30:46 - not going to put it in quotations um
30:50 - because again if we put the quotations
30:52 - it would print out
30:53 - num rather than printing out the number
30:55 - that is stored
30:56 - in that variable okay so let's go ahead
31:00 - and
31:01 - do that so put in the name of your
31:04 - variable you can do either one
31:06 - i'm just doing num and again we're going
31:08 - to go up to the top
31:10 - press compile yeah how do you write
31:13 - comments in java i just want to
31:14 - like write the note that you don't put
31:17 - put it in quotation
31:18 - marks so okay um good question so
31:21 - comments in java for those of you who
31:23 - don't know what comments are
31:25 - um it's basically something that you can
31:27 - write in java that it's not going to
31:31 - be part of your code so you could use it
31:33 - to
31:34 - um maybe explain what this part of the
31:37 - code does or something like that
31:39 - but it's not going to be run so it does
31:40 - not have to be in like proper java
31:43 - language i guess um so we're going to do
31:46 - two slashes
31:48 - like that and then you can write
31:49 - whatever you want so let's say you
31:51 - wanted to write
31:52 - um for a variable
31:55 - do not use quotations
31:59 - something like that so as you can see
32:03 - it's like
32:03 - a lighter gray kind of um so this means
32:07 - that it's not going to be
32:10 - run as part of our code
32:14 - so two smashes and then whatever you
32:16 - want to say
32:17 - good question these are really useful if
32:20 - you want to leave like a note to your
32:22 - future self
32:23 - if you're running through your code and
32:25 - you want to be reminded about something
32:29 - yeah so it's super helpful when you get
32:31 - to longer codes and you might be
32:33 - a little bit confused about what this
32:35 - part of your code
32:37 - does or something like that all right
32:40 - so we are going to go again to the top
32:43 - left
32:43 - compile
32:48 - and then over here again so after
32:51 - compiling
32:52 - um the line should go away we're going
32:55 - to right click
32:59 - second one void mainstream args
33:02 - click that
33:05 - and click ok and as we can see
33:09 - here um we have the number six that got
33:13 - printed out
33:15 - as we expected because the
33:18 - number that is held in the variable num
33:21 - is
33:22 - six
33:31 - for some reason i did not get the six
33:35 - okay um did you
33:38 - what shows up on your screen um
33:42 - still whatever that we had typed
33:47 - i did enter the comment first
33:50 - and then it's int space
33:53 - num um equals six
33:56 - column end num2 equals
34:00 - two uh colon and then system
34:04 - dot out dot
34:07 - in brackets num colon okay did you use
34:11 - parentheses or did you use brackets
34:14 - i use brackets so
34:17 - try with parentheses and let me know if
34:20 - it still doesn't work
34:22 - sure
34:25 - mine isn't working um because when i
34:28 - press compile
34:29 - it has that red block showing me that i
34:32 - have
34:33 - something wrong but i made sure i got
34:35 - everything
34:36 - you have on your page so i'm not sure
34:38 - what i'm doing wrong
34:39 - okay um where do you see where it has
34:42 - like
34:42 - a uh a red box or maybe like a little
34:45 - red squiggle or you have an error
34:48 - yes okay so where is that squiggle
34:50 - located
34:52 - so it's um between
34:57 - the parentheses like it's on the left of
34:59 - the parentheses
35:01 - uh the beginning and to the right at the
35:03 - end
35:05 - okay um so like around right here
35:09 - yes okay um
35:12 - so do you have system capital s system
35:15 - dot
35:15 - out dot print ln um
35:18 - and then parenthesis and inside the
35:20 - parenthesis the name
35:21 - of your variable yes
35:24 - okay if you hold your
35:28 - dress on okay if you hold
35:32 - um
35:35 - actually what i have it says identifier
35:38 - expected
35:40 - identifier expected okay at the top um
35:44 - where you made your variable did you
35:46 - write int
35:48 - yes so you said int space
35:51 - and then whatever the name equals um
35:55 - the number yes
36:02 - um
36:10 - alexandria any of you know
36:14 - did you put a semicolon at the end
36:19 - yes
36:23 - do you have a like bracket like
36:28 - um you know like expected
36:32 - that's what it says
36:39 - sorry could you repeat that i didn't
36:40 - catch that
36:43 - um it's the apostrophe the uh the
36:46 - apostrophes around colon and says
36:49 - expected
36:52 - oh yeah so if you have that then it just
36:54 - means that you need to put
36:56 - your semicolon at the end of the line of
36:57 - the code
37:01 - so like right here um if i didn't have
37:04 - that
37:05 - and i try to compile do you see
37:06 - something um
37:09 - do you see something like this
37:18 - yes it was like yeah then all you're
37:21 - gonna need to do is right there at the
37:23 - end
37:23 - you're just gonna need to put your
37:24 - semicolon and that should solve the
37:26 - problem
37:27 - okay okay um back to
37:30 - amaya is that your name amaya okay
37:34 - um i'm not sure what could be
37:38 - what could be the issue
37:42 - um
37:45 - could it have to do something with the
37:47 - hello like the system system.out.println
37:50 - hello
37:52 - since i didn't take that out um
37:55 - as long as it's the correct did the
37:58 - hello work
37:59 - uh when we ran it with just the hello
38:01 - yeah
38:02 - okay then that should be fine i don't
38:04 - think that should be the issue
38:06 - um you have this on a completely
38:10 - different line from your hello statement
38:12 - right
38:13 - yes i do
38:17 - okay um i'm not 100
38:20 - sure um after the class maybe
38:24 - um if you want to stay maybe a little
38:26 - bit after we can have you share your
38:28 - screen and we could try to figure it out
38:29 - for now um
38:34 - um yeah so if you want to stay
38:36 - afterwards sorry i just don't want to
38:37 - run out of time
38:39 - um but we'll definitely try to help you
38:41 - out
38:42 - um after the class if you could stay a
38:44 - couple of minutes that'll be great
38:46 - okay thank you cool okay
38:49 - so um did anyone else have any other
38:53 - questions about this anything like that
38:57 - yeah so once they put in the brackets
38:59 - back around num
39:01 - my variable is again showing lines
39:07 - so you shouldn't have brackets around
39:09 - them you should always use parentheses
39:12 - okay when you say brackets um do you
39:14 - mean something like this
39:17 - no just as what you have okay so
39:20 - parentheses
39:21 - um like just like that yeah a
39:23 - parenthesis yes
39:24 - okay do you have quotation actually no
39:26 - that shouldn't make a difference um
39:32 - okay yeah again um i'm really sorry but
39:34 - if you want to maybe stay
39:36 - a couple minutes after no we could try
39:39 - to help you out then
39:40 - yeah okay absolutely absolutely thank
39:42 - you okay
39:44 - great then um one more thing that we're
39:46 - going to do with it
39:47 - um we're just gonna i'm just gonna do a
39:49 - quick example of one of the operations
39:51 - you could do
39:52 - so like adding subtracting multiplying
39:54 - dividing
39:55 - um i'm just doing it here so we're going
39:57 - to do
39:59 - let's try multiplying them so to
40:01 - multiply them
40:03 - um we're going to use an asterisk
40:06 - so none num times num
40:10 - two um if you wanted to divide
40:13 - it would be a slash
40:16 - so that would be dividing six by two if
40:20 - we wanted to subtract
40:21 - just the minus and add just the plus
40:24 - let's try multiplying so the multiplying
40:26 - is going to be the asterisk so
40:27 - shift um shift and then eight must be
40:31 - after
40:33 - this again what it's going to print out
40:46 - all right that's fine okay so now that
40:49 - we have that
40:50 - again like always we're going to go up
40:52 - to the top left
40:53 - let's compile
40:59 - and if there are no errors we can go
41:01 - ahead and right
41:02 - click second option
41:06 - okay and where's my screen
41:13 - um here we go
41:16 - and it shows all 12 shows 12 like we
41:20 - expected because we're doing
41:21 - essentially 6 times 2
41:25 - which is 12.
41:28 - so that's just a way that you can use
41:30 - your variables rather than saying 6
41:32 - times 2 we could use
41:34 - num times num2 because 6 is stored in
41:37 - num
41:37 - and 2 is stored in num2
41:41 - all right anyone have any questions
41:43 - about that
41:49 - okay cool so let's move on to our
41:53 - next variable
41:58 - another type of variable is something
42:02 - called a double and double basically
42:05 - means
42:05 - like decimals so
42:09 - like 1.5 3.33
42:12 - like that and so in java to
42:15 - create a double variable it's like the
42:17 - same thing
42:18 - you do double which is the type
42:22 - and the variable name which is in this
42:25 - case
42:25 - x and then equals whatever value
42:29 - so in this case it's 7.5
42:32 - and then a semicolon and for doubles
42:36 - you can add subtract multiply and
42:39 - divide as well
42:44 - okay so again let's just hop
42:48 - on over to here um if you want to keep
42:51 - this you can
42:53 - uh again i'm just going to delete it
42:55 - just so we don't get confused
42:57 - um so doubles and ins pretty much
43:00 - work the same way because they're both
43:02 - numbers the only difference again is
43:04 - that doubles are going to have a decimal
43:06 - so let's go ahead and make it so double
43:09 - and again it has to be a lowercase d
43:12 - uh whatever you want to call it i'll
43:14 - just call it um
43:17 - number very creative
43:20 - double number and maybe
43:24 - like 8.714
43:31 - semicolon
43:39 - and then um
43:44 - just because i don't want to run out of
43:46 - time i'm not going to do
43:48 - like show the printing or
43:51 - operations because like i said they're
43:53 - going to be the same as int
43:55 - um so if you do system.out.print
43:59 - and then put a number there it should
44:00 - print out 8.714
44:02 - um if you made another one like double
44:06 - number two we did like two point
44:10 - one five and if you
44:14 - like multiplied it again um you should
44:16 - get like
44:18 - i don't know what that is like sixteen
44:19 - point something seventeen point
44:21 - something
44:21 - something like that you can't do math
44:23 - but um
44:25 - again it works the same way as an
44:26 - instance
44:29 - okay so now the last one that we're
44:32 - going to get into some detail
44:34 - too okay
44:37 - so another really important type of
44:39 - variable as we said before
44:40 - is string so this is going to be
44:43 - anything with
44:44 - actual words in it and what's very
44:46 - important about
44:47 - string is um you if you want to define
44:51 - something as a string you're going to
44:53 - need to put quotations
44:54 - around everything in it
44:58 - so um i'm just going to talk about how
45:02 - you make a string which is basically
45:04 - the same as the others inch and double
45:06 - so
45:07 - capital s string and then space and then
45:10 - the name of your variable
45:12 - which we're going to say sentence for
45:14 - now and then equals
45:16 - and then in quotations um
45:19 - what you want this string variable to
45:22 - call
45:23 - so anything inside the quotations is
45:25 - going to be what this string variable is
45:27 - equal to
45:28 - and then as always you end your line
45:30 - with a semicolon
45:33 - okay so again hopping back over to bluej
45:36 - again i'm just going to delete this
45:39 - um so string
45:42 - capital s string whatever you want to
45:45 - call it
45:45 - what's called sentence equals and
45:48 - um again like alex said you need quotes
45:52 - and also i just want to say like let's
45:53 - say you had quotes and like the number
45:56 - three
45:56 - um even though this is a three is
45:59 - obviously
46:00 - a number and we might be like wait why
46:02 - isn't this an
46:03 - int um so the reason is because it's
46:06 - in those quotations so
46:10 - if you printed out sentence it would
46:12 - print out a three and you might
46:14 - think it's an int um but because it's in
46:16 - those quotes and it's considered a
46:18 - string
46:18 - you wouldn't be able to like multiply it
46:22 - with other numbers so let's say you try
46:24 - to multiply
46:27 - the variable sentence with
46:30 - a variable that holds the number
46:33 - 2 as an int then it will give you an
46:35 - error because you can't multiply
46:37 - a string by that number so again because
46:41 - it has those quotes is considered a
46:43 - string even though it looks like a
46:44 - number
46:45 - um so let's just do like
46:50 - coding is cool
46:58 - and again i'm just going to make another
47:00 - one um
47:02 - just to show you one thing after this um
47:10 - so again anything you want um they just
47:13 - have to be
47:14 - in quotes and again make sure you have
47:16 - your semicolons
47:18 - at the end of each one
47:22 - all right so just like how we did for
47:23 - the ins example we're going to do
47:25 - our
47:29 - system dot out
47:33 - dot print ln and again
47:37 - no um quotations let's just print out
47:41 - sentence
47:44 - just like that
47:53 - okay so once we have that um again top
47:56 - left corner
47:57 - we're going to compile um
48:00 - and if you have errors um first of all
48:03 - errors are super
48:05 - common thing in java so don't worry
48:06 - about it
48:08 - the most common mistakes probably are
48:11 - forgetting your
48:12 - semicolon so first thing if you have an
48:14 - error make sure to check for that
48:16 - um capitalizing string um
48:22 - see what else could you have a lot of
48:24 - times
48:25 - at least for me like i might forget my
48:27 - ending parentheses
48:28 - or my ending quotation so that's another
48:31 - thing to check for
48:32 - us anything like that so again compile
48:36 - go back over to our box
48:40 - um right click
48:45 - second option okay
48:50 - and here we have coding
48:53 - is cool
48:58 - all right um anyone have any trouble
49:01 - with that
49:08 - no actually everything worked everything
49:11 - you taught
49:12 - perfect cool glad to hear that
49:16 - okay so then if everything looks good um
49:18 - one more thing i want to show with
49:20 - string
49:20 - is um even though
49:24 - obviously we can't like
49:27 - add these two strings together like how
49:30 - we can add numbers
49:31 - um we can use this plus sign
49:34 - um just like this so then like you'd be
49:37 - like adding
49:38 - your first string to the second string
49:40 - and so what this does it basically just
49:42 - prints
49:42 - out um both of
49:46 - your strings right next to each other so
49:48 - it would print out
49:49 - coding is cool exclamation hooray
49:53 - exclamation um no space in the middle
49:55 - because i don't have any spaces there
49:58 - so just coding is cool hooray
50:01 - so that's what this um
50:05 - addition sign i guess does uh when
50:08 - you're working with strings so it
50:09 - basically combines
50:11 - the strings together it's another way to
50:12 - think about it so if you want to just go
50:15 - ahead and add that plus sign
50:17 - and then the name of your second string
50:20 - and again we're going to compile
50:23 - hopefully everything looks good um
50:27 - back over here right click
50:31 - second button and okay
50:34 - and right here so as you can see
50:38 - it printed out our first string right
50:41 - here up until
50:41 - the exclamation and then immediately
50:44 - after it printed out
50:47 - hooray
50:53 - so um knowing how to combine strings
50:55 - like that is really really important in
50:57 - java
50:58 - um but let's say you're like okay well i
51:01 - want a space right there
51:03 - um there are a couple things you could
51:06 - do one is you could add a space at the
51:07 - end
51:08 - of this at the end of your first one or
51:11 - you could
51:12 - add a space at the beginning of this one
51:15 - but let's say you didn't want to do that
51:17 - um
51:18 - what you can also do when you're doing
51:22 - using system.println
51:24 - um is you can add something in
51:26 - parentheses in the middle
51:28 - so if i want to add a space i could do
51:30 - something like this
51:32 - so basically um
51:35 - if you remember how in our very first
51:37 - system.out.print example we had
51:39 - system.out.println
51:41 - parentheses in quotations hello so
51:44 - just how like how that was in
51:45 - parentheses and i printed out hello
51:47 - if you have these quotes here whatever
51:51 - is in there is also going to get printed
51:52 - out so this is going to print out
51:55 - whatever is held in sentence which is
51:57 - right up here
51:59 - whatever is held within these quotes
52:00 - which is just a simple space
52:03 - and then whatever is held in sentence
52:05 - one which
52:07 - which again is going to be hooray so
52:12 - that's a way that you can kind of like
52:13 - combine um
52:16 - both your variables and just anything
52:18 - else you want to add in
52:19 - so you don't only have to be using your
52:22 - variables if that kind of makes sense
52:24 - so if i were to compile
52:29 - and then print this
52:34 - then it's the same thing it just added
52:36 - that space
52:38 - which again came from here because
52:40 - inside those quotations
52:41 - was my space so printed that as well in
52:44 - the same order that it shows
52:46 - up there all right anyone have any
52:49 - questions or any trouble with this
52:58 - okay perfect um so again boolean we're
53:00 - gonna be talking about a little bit more
53:03 - um tomorrow i believe
53:06 - okay so i think that is pretty much
53:09 - it um i'm gonna go ahead and stop
53:12 - sharing
53:14 - um
53:19 - thank you so much yeah no problem does
53:22 - anyone have any final
53:26 - questions
53:31 - okay um yeah so there are eight
53:34 - classes uh the next one will be tomorrow
53:38 - at 3 p.m um i think
53:42 - the same link will work but i'll send
53:44 - out another email tomorrow to all of you
53:47 - um and again it was amaya
53:50 - and um
53:54 - i'm sorry the if you had any questions
53:57 - that you wanted to stay after and help
53:58 - uh have us help you figure it out
54:00 - um please do that and we'll try to help
54:03 - you out
54:05 - thank you thank you so much for coming
54:08 - you guys i hope you learned
54:10 - a little bit about java um
54:13 - tomorrow have you guys had some fun and
54:16 - you can practice
54:17 - if you want uh tonight or you don't have
54:20 - to
54:20 - whatever you like play around with it
54:22 - thank you so much
54:25 - of course the teachers okay
54:29 - um chantelle
54:32 - um did you chantelle did you get the
54:35 - email um last night
54:39 - about with the um what's it called
54:42 - the link to today's zoom yes
54:45 - okay my understanding was that i was
54:49 - signing up
54:49 - like one class and i wasn't sure like
54:53 - just
54:55 - you know how things worked all together
55:00 - um i think
55:04 - i i think you are on the
55:07 - list of people who want to um
55:11 - do the whole session at least you were
55:12 - on the list that was given to me
55:14 - um so you'll definitely be included in
55:17 - the
55:18 - email tomorrow um
55:22 - yeah after uh yes i think you should
55:25 - be fine okay all right
55:28 - thank you all right no problem
55:33 - okay so i was working on the
55:37 - variable a little bit and i ended up
55:40 - deleting that string like of
55:42 - coding and like trying to start over on
55:45 - something else
55:47 - um like doing what you guys were doing
55:48 - right now and it actually ended up
55:51 - being okay so there's no mistakes
55:52 - anymore oh
55:54 - perfect cool