00:01 - okay guys hello
00:03 - welcome to java second class
00:06 - um well the second class in the session
00:08 - um
00:10 - uh we're really glad to have you here
00:12 - and hopefully more people will join
00:13 - later but we're just gonna get started
00:15 - now
00:16 - um i'm alex one of your java teachers as
00:19 - you remember
00:19 - from yesterday i'm andre doing it
00:23 - i want to introduce myself hi
00:27 - i'm andrea and i'm
00:30 - also one of your drama instructors
00:36 - um and i'm candace and i'm your other
00:38 - java instructor
00:42 - hey okay so we're gonna get started with
00:44 - our lesson
00:45 - um just let me share a screen
00:51 - okay so today we'll be talking about
00:54 - scanner
00:57 - yeah and so okay
01:00 - we're gonna be learning about scanner
01:02 - today and scanner
01:03 - is like this useful tool that allows you
01:07 - to
01:07 - get user input so what that means
01:10 - is like for example if we
01:14 - have like a website like gmail or
01:17 - facebook or something
01:19 - and it asks you for like your username
01:23 - then the user can enter their username
01:26 - and stuff
01:27 - so or like in their password so it's
01:30 - kind of like
01:31 - interacting with your computer
01:36 - like yeah with computer and the user
01:40 - so um
01:52 - candace
01:59 - andrea could you do i'm sending them
02:01 - sending the link really quick
02:06 - okay
02:15 - andrea
02:19 - yeah wait what wait are you doing the
02:22 - second slide
02:24 - oh um i thought i was gonna send like
02:27 - the link again i'm sending the link
02:30 - could you do it
02:32 - oh can i do the second slide yeah okay
02:34 - sure
02:37 - okay so to use scanner first
02:41 - you want to import it like
02:44 - right here it says
02:47 - to import scanner
02:50 - so what that does is it just gives you
02:53 - like the ability
02:54 - to use the scanner and
02:58 - um yeah
03:01 - uh we're going to go over an example in
03:03 - the next slide
03:04 - but basically you import it like right
03:07 - above the
03:08 - class stain which um alex will show
03:11 - later
03:12 - so first you need to import it and then
03:16 - we also need to create a scanner tool
03:20 - so to do that we just use
03:23 - this keyword scanner and then this thing
03:27 - is like the name of your scanner so you
03:30 - can name it like
03:31 - input keyboard user
03:34 - whatever you want and then you use this
03:37 - equal sign
03:38 - and then this new which just means
03:41 - you're creating
03:42 - like a new scanner and new scanner and
03:46 - then
03:46 - parentheses system dot in
03:49 - and parentheses and as always
03:53 - your semicolon so
03:56 - yeah next um this
04:00 - we have a system.out.printline
04:04 - so this part enter a number is just
04:07 - something that
04:08 - like prompts or like asks the user
04:12 - to enter something like a number
04:17 - and then to use that to like get user
04:20 - input
04:21 - sorry we have to do something called
04:24 - input which
04:24 - is the uh what we named
04:28 - our scanner and then something called
04:30 - dot next
04:31 - int and dot next and just gives you
04:35 - like an integer or um stores an integer
04:39 - value
04:40 - so um and then we have to store this
04:45 - in a end variable
04:49 - because um just so that we can use
04:53 - what the user inputted and yeah
04:59 - okay so this can be a lot of steps all
05:02 - in a row that seem kind of random
05:04 - but once you do it a few times you'll
05:06 - get used to
05:08 - um using all of them so now we're going
05:11 - to do an example of how to use a scanner
05:14 - so you all want to open your bluej or
05:17 - whatever code compiler you're using
05:21 - and then you're going to want to create
05:22 - a new class for today
05:25 - so the new class button in the top left
05:28 - and then just
05:29 - name it whatever i'm just talking
05:35 - and then double click on the new brown
05:37 - box and you should get a screen with all
05:40 - of this
05:41 - code that looks complicated and
05:44 - confusing
05:45 - and we're just gonna delete all of them
05:49 - and start new class um
05:53 - you can follow along with me in typing
05:56 - all this
05:57 - out or i can copy paste it into the chat
06:00 - once i'm done with all of the
06:02 - like foundation code
06:07 - problematic void main string
06:18 - arcs
06:29 - okay so i put it in the chat
06:32 - what did i do
06:44 - um okay
06:47 - so if you guys have that
06:50 - typed out we're going to start
06:54 - like andrea said before um the first
06:57 - thing we need to do
06:59 - is import the ability for the class to
07:01 - use the scanner tool
07:04 - um it's going to be all the way up here
07:06 - above your
07:07 - class name um you're going to type
07:10 - import java youtube
07:15 - dot scanner
07:18 - um and again you can name a class
07:20 - anything you want
07:21 - up here
07:25 - so we have to type that step up there
07:32 - and then the second thing we need to is
07:34 - to make your scanner tool
07:36 - like andrea said before um and also like
07:39 - you can see
07:40 - a powerpoint over on the right here
07:43 - we're going to
07:44 - type scanner you can name this anything
07:48 - i'll just go with input equal
07:52 - new inner system
07:56 - in and that is how you make your
07:59 - center tool um
08:04 - okay and so now you're free to start
08:08 - using your scanner
08:10 - i'm just going to ask the user for a
08:12 - random number
08:13 - uh so that they know that they can put
08:16 - something in
08:17 - uh so to do that we're going to print a
08:20 - statement like we taught yesterday
08:22 - um and just go enter
08:26 - an integer really let's make
08:30 - enter a whole number
08:38 - so like we yesterday this um
08:42 - this is now going to be printed out
08:45 - to the user and see that
08:49 - and then when they see that they're
08:50 - going to go oh
08:52 - okay so i'm going to type a number into
08:54 - the computer and press
08:55 - enter so a third to
08:59 - um that number that they typed in uh
09:02 - we're going to do
09:03 - as it says in this slide and create an
09:06 - integer value
09:07 - and enter your variable to hold that
09:09 - number
09:10 - so let's say this yesterday we're making
09:14 - an
09:14 - integer variable so we go in
09:18 - and then any random name so
09:22 - i'm just going to call it
09:25 - user answer and then
09:28 - it equals and then to use a scanner
09:32 - here we're going to type input
09:36 - because it's the same thing this word
09:40 - and this word dot
09:44 - and then next it to get the integer
09:47 - variable that the user typed in
09:51 - so
09:56 - that should be the basics of how to use
09:58 - a scanner
09:59 - and that this program should
10:03 - ask the user for a whole number and then
10:06 - store that number
10:07 - in an int variable i'm just going to
10:11 - compile
10:11 - and run it just to check that it works
10:14 - so the compile button as you remember is
10:16 - up here
10:18 - and then down here you right click on
10:21 - the brown box
10:23 - then click the second option okay
10:28 - and so it's going to ask to enter a
10:30 - whole number
10:32 - um chantal why don't you give us a
10:33 - random whole number
10:36 - honey sure see like
10:40 - since it like opens the ability to type
10:44 - into this box
10:46 - i realize that i make it
10:50 - like the answer actually
10:53 - we're gonna do that now then i'm just
10:56 - gonna print out their answer back to
10:58 - them
11:01 - you typed
11:04 - and then just going to print out the
11:07 - variable
11:08 - that we stored that value in
11:11 - compile it again oh shoot
11:19 - run the code it asks for a whole number
11:23 - we put in a whole number and it grabbed
11:26 - our variable and
11:28 - used it so yeah
11:32 - um yeah so like this thing might be kind
11:36 - of like
11:37 - awesome to you guys
11:40 - but i think after more practice and
11:43 - just more exercises you can like
11:47 - quickly get the hang of it and so yeah
11:50 - like right now it might be really
11:52 - like a lot of stuff like thrown at you
11:55 - but like with more practice
11:57 - i'm sure you guys can like get used to
12:00 - it
12:02 - but um if any of you guys have any
12:05 - questions
12:06 - then feel free to tell us
12:10 - or you can type in a chat or like yeah
12:16 - all right so um as you can see on the
12:20 - powerpoint it says reading other data
12:22 - types so right now in the example that
12:24 - alex just did
12:26 - we did an int variable um
12:29 - by using input.nextint but
12:32 - we can also use other data types and if
12:35 - you remember from
12:36 - yesterday when we talked about the
12:37 - different variables we also had
12:40 - double which is a number just with a
12:42 - decimal
12:43 - and we had a string which is like any
12:45 - text or anything like that
12:47 - so we can also read those data types
12:51 - using the different uh different things
12:55 - that we see
12:55 - on the powerpoint so it's pretty much
12:58 - gonna work
12:59 - it works the same way as the instance um
13:01 - where you do
13:02 - dot next except for double if you want
13:05 - to do a double then you do dot next
13:07 - double
13:08 - if you want to do a string you could do
13:10 - dot next
13:11 - line or yeah so dot next line
13:14 - if you want to do a boolean which i know
13:16 - we didn't talk a lot about but that's
13:18 - where you just have a true or false
13:20 - then you could do dot next boolean um
13:22 - and dot next
13:24 - is just going to so the last one which
13:26 - is just dot next
13:28 - and that's going to pick up anything but
13:31 - it'll only pick up the first thing that
13:33 - shows up so for example if you typed in
13:34 - like
13:36 - orange juice um it would only pick up
13:38 - the orange because you have that space
13:39 - separating it
13:40 - so in the case of two word inputs like
13:43 - orange juice then you would want to do
13:45 - um dot next line in order to pick up
13:47 - everything
13:49 - but yeah so it works the same way you
13:50 - would do the name of your scanner in
13:52 - this case the name is input and then dot
13:54 - next
13:55 - and then whatever data type you want to
13:57 - pick up
14:02 - we're just going to try um some examples
14:05 - for
14:06 - all of these methods um in your coder
14:09 - in your compiler um so the first one
14:12 - we're going to do
14:13 - is double so remember double as a
14:15 - decimal note
14:16 - though i'm just going to ask to enter
14:19 - a decimal number and basically the only
14:22 - thing that's
14:23 - different is this statement instead of
14:27 - next int um we're going to go
14:31 - next double so the computer knows
14:35 - and then we need to change our variable
14:38 - type
14:39 - yep you're right um
14:44 - because yeah it's a different type of
14:47 - variable
14:48 - um i guess i'll run it
14:56 - and
14:58 - here's the window oh well this is still
15:02 - from last time but
15:03 - enter a decimal number uh does someone
15:05 - want to just give us a random decimal
15:16 - okay whatever um i'm going to
15:20 - take three that's a decimal
15:23 - and it works here because
15:26 - uh it's a double and we changed it to
15:30 - reflect that um
15:34 - now one of the more common ones is you
15:37 - want
15:37 - to get a string a sentence or a word
15:41 - from your user so we're going to use
15:43 - next line
15:44 - for string uh notice that it's not
15:47 - dotnet
15:48 - it's done um
15:51 - just something you have a chat for and
15:56 - so we change that to dot next line and
16:00 - maybe enter a sentence
16:06 - and of course we have to change this to
16:09 - a string variable
16:13 - um we're going to run that really quick
16:16 - just
16:17 - so you can see that it works
16:20 - um
16:25 - does anyone have a random sentence we
16:27 - want to put in
16:31 - coding is cool okay
16:37 - is cool
16:40 - we're gonna put that in and if
16:44 - it back out to us um
16:47 - so you see here it took the sentence
16:50 - coding is cool a string
16:52 - stored it in a string variable and then
16:54 - printed it back out to us
16:56 - alex just to show them why don't you try
16:58 - doing just dot next
17:00 - and don't do the dot next point sure
17:08 - um so dot next is slightly different
17:13 - from the other ones
17:18 - uh it should only take in the first
17:21 - like word um in the string so
17:24 - we're gonna go with coding is cool again
17:28 - and so since we use dot next it only
17:32 - grabbed the first word and stored that
17:35 - and printed back up
17:40 - do you guys have any questions about
17:41 - this before so far
17:43 - want us to go slower or want to repeat
17:46 - anything like that
17:54 - all right
18:02 - okay so a little
18:07 - okay a little okay so just to
18:11 - recap scanner is um
18:14 - this tool that allows you to get
18:17 - like user input so the user can enter
18:20 - something
18:21 - and the computer can store it in a
18:24 - variable
18:26 - to like whatever they want to do with it
18:31 - so to use scanner we have to import it
18:35 - and um import java.util.scanner
18:40 - semicolon and we also have to
18:44 - create a new scanner and then
18:48 - afterwards we import it and create a new
18:52 - scanner
18:53 - then we can use it and
18:56 - we use it by just calling the
18:59 - scanner like what we named our scanner
19:03 - so in this example i need
19:06 - my scanner input so to just
19:09 - use scanner you just call it by
19:13 - the scanner name and then dot next
19:17 - whatever um whatever like
19:21 - type it is so like if it's a strain
19:25 - or if it's an integer or a double
19:29 - which is like a decimal so
19:33 - yeah you would do dot next line or dot
19:36 - next it
19:41 - um before we get into this madness game
19:44 - let's let's try something um we can kind
19:47 - of combine what we learned yesterday
19:49 - with the like in variables or decimals
19:52 - uh doubles so alex why don't we try
19:55 - something where like
19:56 - we um have the user
20:00 - enter in like dimensions
20:03 - of like a box or a cube or a triangle
20:06 - and then it could print out
20:08 - you know multiply uh whatever you're
20:10 - trying to do and then you could find
20:12 - like the volume or the area or something
20:14 - like that so we could kind of combine
20:15 - scanner with stuff that we did yesterday
20:20 - sure okay so you guys know that
20:23 - coding is really useful and it can be
20:25 - used uh
20:26 - to help us do a lot of
20:29 - rudimentary functions um
20:34 - so now we're going to
20:39 - find the volume of a rectangular prism
20:42 - given the length width and height
20:44 - um you've probably learned how to do do
20:46 - this in school
20:48 - but basically to find the volume of like
20:51 - a box
20:51 - you just need its dimensions so we're
20:54 - going to write a program
20:56 - that asks the user for the length width
20:59 - and height of a box
21:00 - and then it should spit out the volume
21:02 - of that
21:04 - so okay so first we're going to need to
21:07 - ask the user for those
21:12 - we're going to do that separately um
21:17 - what is the length of the box
21:23 - um as always we end with a semicolon and
21:25 - then we're going to
21:27 - make a double
21:31 - variable that is going to store the
21:33 - length
21:35 - um
21:38 - so that's going to be input.next
21:43 - double
21:46 - you can also use int but i'm just going
21:49 - to go with double because
21:51 - they might want to um
21:54 - and we're going to need to do the exact
21:56 - same thing for the width and the height
22:10 - so
22:13 - and if you wanted to try this with any
22:15 - other shape or
22:17 - anything like that um it's the exact
22:20 - same concept
22:22 - um like if you want to do triangle you
22:23 - just ask for the base and then the
22:25 - height and just
22:26 - you know do a formula for that um
22:29 - so if you want to try something
22:30 - different please feel free to do that as
22:33 - well
22:33 - it's fun to experiment
22:38 - yep okay so
22:41 - once you have this all typed out
22:43 - actually i'm going to give you a minute
22:44 - to do that
22:48 - like candace said like feel free to do
22:50 - any shape you want
22:52 - or just i'm just gonna go with a box but
22:55 - you can do anything
23:14 - [Music]
23:17 - okay so there are a few ways you can do
23:21 - this but i
23:22 - always feel like the easiest way is
23:25 - just to make a different variable to
23:28 - store the volume
23:29 - and then we can print that out to the
23:31 - user so that they can see it
23:34 - um so we're going to make a variable
23:41 - a double variable called volume that's
23:44 - going to
23:46 - where we're going to calculate and store
23:47 - the actual volume
23:50 - of the box and
23:53 - to get the volume we'd multiply the
23:56 - length the width and the height together
24:00 - again like this is something you
24:01 - probably learn in math class but
24:03 - if you haven't yet it's okay it's a
24:05 - really simple formula
24:08 - so as we said yesterday to multiply it
24:12 - in java
24:12 - we're just going to use an asterisk
24:16 - a star
24:23 - and that should give us our volume
24:26 - um and then finally we're going to want
24:29 - to print
24:30 - this volume out to the user so this
24:34 - is going to use another print statement
24:36 - like we used above
24:38 - and like we talked about yesterday um
24:42 - system dot out dot print line
24:48 - and we're going to tell the user
24:51 - volume
24:55 - box is
24:58 - and then we're combining um
25:01 - different things to print out in this
25:03 - single statement
25:05 - and we're just going to print out
25:08 - the variable volume
25:11 - um i remind you that it's really
25:14 - important we don't put
25:15 - quotations around this variable
25:19 - um because if we did this it would just
25:22 - print out
25:22 - the volume of this box is volume but we
25:26 - don't want to print out the word volume
25:27 - we want to print out the variable volume
25:30 - because that's going to give us the
25:31 - actual number
25:33 - so that's what i'm going to type
25:36 - out
25:41 - i'll give you another minute to like up
25:44 - if you haven't already
25:46 - and like how alex has said before about
25:48 - how there's multiple ways to
25:50 - do this um what she might is that
25:54 - like right here we created a variable
25:56 - called volume which multiplies length
25:58 - width and height um you could skip that
26:02 - all together and directly print out
26:04 - so in your system.print ln line
26:08 - um instead of writing plus volume you
26:11 - could do just directly
26:12 - length times width times height um
26:16 - it would print out the same thing it's
26:17 - just a matter of preference
26:20 - um so yeah you could do it any way you
26:24 - want
26:24 - you like uh we're just doing it where
26:26 - you create the
26:28 - variable first and then you print out
26:30 - the variable
26:32 - yeah like candice was saying instead of
26:35 - doing what
26:36 - i did you can
26:40 - do it like this and it should give you
26:42 - the same output
26:45 - but i personally just like to create a
26:47 - variable because
26:50 - oops this is a good idea when you
26:54 - uh code like longer codes so
26:57 - maybe you want to use the volume again
26:59 - later and then you don't have to type it
27:01 - out again
27:02 - but yep
27:15 - okay so i'm going to run it um
27:19 - if you're falling behind or you think
27:21 - we're moving too fast
27:22 - please just let us know and we'll like
27:25 - wait
27:25 - and pause for you uh like never feel
27:29 - afraid to speak up or anything so we're
27:32 - going to compile this code
27:36 - go to the round box right click second
27:39 - option okay
27:42 - so does someone want to give me a random
27:46 - length a double var example
27:49 - double value that is
27:54 - caitlyn do you want to give us a random
27:56 - double
27:58 - 10 okay sounds
28:01 - good um nikki how about a width
28:10 - five okay
28:16 - and then why don't we do it um like a
28:19 - decimal one for the next one
28:21 - sure
28:25 - ellie do you want to give us a decimal
28:29 - uh 7.5 okay
28:32 - sounds great so now we have
28:35 - three double values
28:39 - and then it gave us the volume of the
28:40 - box is
28:42 - 375. i don't know if that's actually
28:45 - right
28:46 - um i think it is yeah
28:53 - right doesn't have questions or did
28:54 - anyone have errors in their code that
28:56 - you want us
28:57 - to help you work out or anything like
28:59 - that
29:10 - nope no everyone's good to go
29:16 - don't ever be afraid to ask for help
29:18 - that's what we're here for
29:39 - all right should we move on to the last
29:42 - activity thing yep
29:46 - sounds good so
29:50 - i'm just going to delete all of this
29:52 - code but you can comment it out
29:54 - or save it in another class
29:58 - um so we're going to move on to our
30:02 - final activity which
30:03 - is basically mad libs um
30:07 - this is like you might have played mad
30:11 - libs before with your friends
30:13 - it's like a game where we have a
30:16 - pre-written story
30:17 - with like certain words that are just
30:21 - blank and then the players
30:24 - come up with the random words to put
30:27 - into that story when they
30:29 - don't exactly know what the story is so
30:32 - anyway it should come out to be funny
30:34 - and
30:36 - um it's a great way to practice using
30:38 - scanner
30:39 - um okay
30:42 - so we're going to make up a story you
30:46 - guys can do it however you want but
30:48 - i'm just going to um give
30:52 - the example up here um
30:56 - so the first thing we're going to need
30:58 - in our story
30:59 - is the name of our character
31:02 - so i'm going to type code that
31:06 - asks the user to give a name
31:10 - i'm so like um
31:20 - and then like before we're going to
31:24 - want to make a string variable not like
31:27 - before we like
31:28 - we're going to want to make a variable
31:30 - to store the user's answer
31:32 - in and since this is a name a word
31:35 - we're going to use a string variable to
31:37 - store that
31:45 - and then like you remember
31:49 - input dot next line for strings
31:55 - um actually that is really awkward
31:59 - wording so
32:00 - what is the character's name
32:04 - um
32:09 - we're going to do
32:13 - an adjective now um
32:20 - um type in an adjective
32:24 - a description word
32:29 - and then
32:35 - i think we're able to store that
32:40 - um
32:44 - we're going to do just for the sake of
32:47 - an integer variable we're going to do an
32:49 - age so
32:59 - type a whole number
33:06 - oh typo
33:14 - this is not a string um this is an
33:19 - h and we're going to
33:25 - get in it um
33:29 - one more for now we're going to do type
33:32 - of pet
33:36 - um
33:51 - and then store that nash
34:05 - okay so
34:08 - i'll just give you a couple of minutes
34:10 - to like
34:12 - finish your own maybe you want to do
34:15 - different
34:16 - types of variables and i did or like
34:19 - different
34:21 - questions um give you a couple minutes
34:24 - for that
34:25 - and then we'll move on
34:46 - so
35:00 - uh
35:14 - yes
35:28 - okay
35:42 - um
35:50 - okay so now that we have our variables
35:54 - we're going to start writing our story
35:59 - um this is going to
36:04 - um print the story out to the user so
36:06 - we're just going to use a print
36:07 - statement
36:10 - um
36:29 - okay we're going to start our story by
36:32 - going
36:33 - the character's name
36:37 - went for a walk um
36:41 - and to get the character's name we're
36:44 - just going to use the name variable that
36:46 - we made earlier
36:48 - um so name plus because name
36:52 - remember we're not going to put that in
36:54 - the quotations because
36:56 - we're going to call the actual variable
36:58 - and not just type
36:59 - the word name um
37:03 - actually we're going to say how old the
37:07 - character
37:08 - is um
37:11 - we could say like when you're walking
37:13 - this many
37:14 - objects something like that you're not
37:16 - gonna use the number for me
37:20 - okay um
37:24 - oops okay name went for a walk
37:28 - oh also notice i'm putting all these
37:31 - spaces
37:32 - like at the beginning and end of the
37:34 - quotations because
37:36 - if we didn't it would just the computer
37:39 - is not going to recognize that we need a
37:41 - space between words
37:43 - and it's just going to go alicia went
37:46 - instead of alicia space woman
37:50 - so that's something that people get
37:53 - tripped up on all the time but it's a
37:54 - really easy fix
37:57 - um
38:01 - he could be a he
38:04 - saw
38:08 - and then it's time to use
38:11 - our okay i guess it's not an age anymore
38:16 - number
38:23 - and then we can do enter
38:27 - if we think it like looks better or just
38:30 - for organization
38:32 - um so it the a single line of code
38:34 - doesn't just
38:35 - run all the coffee page but like there
38:38 - are very specific
38:39 - places where you can do that um
38:43 - on number
38:51 - i don't even know um
38:54 - butterflies
38:58 - uh she went okay
39:01 - i remember why i wanted to do pets
39:05 - so she went on a walk
39:10 - with her pet
39:18 - um
39:21 - is it we asked for that earlier um
39:25 - and we stored it in the variable pet
39:30 - so right now i'm going to read i'm just
39:32 - going to put in random things right now
39:33 - alicia went for a walk with her pet
39:36 - jaguar
39:37 - she saw
39:40 - 12 twelve butterflies and we have an
39:43 - adjective
39:44 - so we're just gonna use that to describe
39:46 - butterflies
39:48 - um
39:53 - oh but notice we need a space between
39:56 - the number and the adjective
39:57 - because well the computer is not going
40:00 - to recognize that there are two
40:01 - different words
40:03 - so
40:06 - space and there we go
40:12 - um
40:15 - i think that should be good so i'm going
40:17 - to run this
40:18 - code does that have any more time to
40:21 - write
40:22 - your own um sentence or copy down
40:24 - whatever
40:25 - it says can you scroll back like
40:28 - sideways
40:29 - oh alex do you wanna maybe just extend
40:30 - your screen there you go yeah
40:32 - just full screen
40:40 - i'll give y'all a few minutes to
40:43 - finish typing or like to make up your
40:45 - own story
41:04 - so
41:46 - okay
42:45 - all right does anyone need more time or
42:47 - are we good to try to run it
42:58 - okay so i'm just going to compile it up
43:02 - here
43:04 - and then run it
43:10 - so yeah it asks us for a random name
43:14 - um does someone want to give us
43:18 - a random name
43:35 - um ellie do you want to give us just a
43:38 - name
43:42 - um alex
43:46 - great okay
43:50 - um an adjective so like
43:54 - this can be pretty much anything
43:57 - don't think about like what it's what
44:00 - would make sense just like
44:02 - any adjective to make it funny um nikki
44:12 - silly
44:13 - [Music]
44:20 - um a whole number
44:28 - caitlyn do you want to give a random
44:30 - whole number
44:32 - 11 sure
44:36 - sounds great oh
44:39 - well all right let's
44:43 - fix that error okay so basically if you
44:46 - guys see how
44:48 - um after says type in an animal right we
44:50 - should have been able to type in like
44:52 - dog cat giraffe camel whatever we wanted
44:56 - um but i skipped over it and directly
44:58 - went to the next thing which was to
45:00 - print out
45:00 - our whole um
45:04 - it's called whole sentence i guess
45:07 - um so the way the reason that happens
45:10 - basically i'll see if i can try to
45:11 - explain this is
45:13 - um if you see uh back to the code
45:16 - um this happened after
45:19 - our int number software says type in a
45:22 - whole number
45:23 - so basically what happens is if you
45:26 - think about kind of you have like a
45:27 - curse on your computer
45:29 - and it picks up whatever is next to it
45:31 - so after the int
45:32 - it it stays at the end of that line um
45:36 - and we need it to go to the next line in
45:38 - order to pick up what we
45:39 - are going to write there so because the
45:42 - int it stays there and it doesn't
45:43 - move to the next line that's why it
45:45 - skips over
45:47 - the type in an animal so the way you
45:49 - could fix that is to kind of
45:52 - think about like consuming that
45:55 - extra space and then so then you can
45:58 - move
45:58 - over to the next line so the way you do
46:00 - that is after
46:02 - um where it says number equals
46:05 - input.nextint
46:06 - after that and before the the next one
46:09 - that you want to
46:10 - get before the string pad equals input
46:12 - on next line and what you're just going
46:14 - to do
46:15 - is input dot next
46:20 - and i think um i think that should fix
46:23 - it
46:23 - if not so yes what this is going to do
46:27 - it's going to get rid of that
46:28 - it's going to move the cursor from the
46:30 - end where there's nothing after
46:31 - to the next line where you can then type
46:34 - something in and then it'll gather that
46:35 - and put it into
46:37 - your next variable so hopefully this
46:40 - works
46:42 - okay we'll see and so much of coding is
46:47 - about troubleshooting so
46:49 - this should be common um
46:54 - okay we're not going to go through
46:55 - asking again
46:57 - just do what we had before um
47:01 - hello yes
47:05 - okay that didn't okay try pressing enter
47:09 - uh
47:10 - [Music]
47:12 - okay that did not work
47:16 - so let's stop next line
47:21 - next oh yeah you might have to do that
47:23 - next one
47:25 - i feel so as you guys could see errors
47:27 - are very very common in java
47:30 - um
47:30 - [Music]
47:33 - as you do more and more errors will
47:35 - hopefully decrease
47:37 - but um
47:41 - do you put it here
47:49 - um do you want me to try dot next one
47:51 - dude dot next line where we had it
47:53 - before
47:54 - try that okay
48:18 - hmm
48:24 - yay uh
48:28 - i'm just gonna go for
48:33 - yay okay so that worked
48:36 - um so i mean this is a pretty that's a
48:39 - pretty common error when working with
48:41 - scanner
48:42 - um so the reason why next line
48:47 - worked and just dot next didn't was
48:49 - because
48:50 - dot next line that's why it moves to the
48:52 - next line it was my bad
48:54 - i'm sorry about that but next it
48:56 - wouldn't move it so you need that next
48:58 - line in order to move from the end back
49:00 - to the next line where you can then
49:02 - input your next variable
49:10 - so yeah there's our little uh fun little
49:13 - mad loves game
49:15 - um again you can do anything you want
49:18 - make it longer shorter
49:20 - different kinds of variables different
49:22 - kind of story
49:23 - that's just a little simple thing to um
49:26 - i guess incorporate all the things that
49:28 - we learned from
49:30 - today and yesterday as well so
49:38 - so we have five minutes um
49:41 - you can use time to like
49:44 - maybe make even more labels up here
49:48 - that um we ask for
49:51 - so that we can make a more complicated
49:53 - story
49:54 - or if you want you are free to go
49:58 - uh does anyone have any final questions
50:00 - about anything
50:06 - all right cool so i think our next
50:11 - um next lesson is next
50:14 - saturday i think um
50:18 - wednesday isn't it oh yeah i think it's
50:20 - next saturday
50:23 - yeah it's saturday yeah
50:26 - um i have a question actually um about
50:29 - the
50:29 - tutoring that i saw in the email is that
50:33 - you know something we can use to
50:35 - communicate
50:37 - with you about questions um
50:41 - um
50:46 - did i send you the email yesterday or
50:48 - was it a different email
50:49 - um i've just seen at least maybe in a
50:52 - few emails that there's some kind of
50:54 - tutoring component on you know your
50:57 - website
50:58 - and i'm wondering if it's like you can
51:01 - just
51:02 - yeah like go there not during class
51:06 - times with yeah so the tutoring thing
51:09 - um i believe it's if you sign up then
51:12 - you could sign up for like a 30 minute
51:14 - um like one on one with one of the
51:17 - girls coded volunteers um as for just
51:20 - quick questions
51:24 - i think i don't think there's currently
51:26 - a function on the
51:28 - on the site where you can just type in a
51:30 - quick question
51:31 - um i'm not sure really alex
51:35 - you know andrea if i think they said
51:37 - they're trying to work on it but i don't
51:39 - think
51:39 - that we have a function like that yet um
51:42 - but the tutoring yeah so if you sign up
51:44 - for that um you could sign up for a
51:46 - 30-minute session
51:47 - and then um you and whoever
51:51 - like whichever volunteer you're dealing
51:53 - with would work out a time together
51:55 - um through like zoom or google meets or
51:57 - something like that and then
51:59 - i'll work on something there does that
52:01 - kind of make sense to your question
52:04 - um yeah i think so um
52:08 - yeah thank you yeah no problem yes as
52:11 - for just quick questions
52:12 - i don't think we have anything on the
52:14 - site yet
52:16 - i think they might be working on it i'm
52:17 - not a hundred percent sure
52:19 - um hopefully we can get something like
52:22 - that soon that'll be pretty cool
52:24 - yeah yeah right now
52:28 - sorry but you might just want to try
52:29 - googling it or saving it
52:31 - the next class when you can ask us okay
52:34 - that's
52:34 - true also thank you yeah thank you all
52:38 - so much for
52:39 - coming i hope you enjoyed it and
52:42 - learn something new
52:47 - yeah um from now on you can always
52:50 - practice
52:50 - or go back and try to code your own
52:54 - little something
52:55 - and we just hope you have fun
53:00 - you