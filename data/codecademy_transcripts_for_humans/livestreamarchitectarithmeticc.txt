With timestamps:

00:00 - all right we are screaming doing it live
00:04 - yeah hi everyone I'm Zoey I'm Nick and
00:09 - we are two curriculum developers here at
00:11 - code Khadem II and today we are going to
00:14 - be doing a live stream about our latest
00:16 - c-sharp content conditionals and methods
00:20 - yeah so to give you a little context on
00:22 - what's been going on with c-sharp
00:24 - Academy we have just produced four
00:27 - modules and they cover data types and
00:30 - variables operators how to read and
00:33 - write to the console conditionals and
00:35 - methods so that's all out there if you
00:38 - want to take that we're focusing on
00:40 - conditionals and methods that were
00:41 - released this week yeah and we're gonna
00:43 - do one of the projects from those
00:45 - modules so the project that we're doing
00:47 - is called architecture arithmetic and
00:50 - the idea behind it is that you get a
00:53 - blueprint and you break the blueprint
00:56 - into different primitive shapes like
00:58 - rectangles circles triangles and then
01:03 - you create formulas for calculating the
01:05 - areas of each of those shapes that may
01:07 - be familiar from math class but don't
01:09 - worry we also provide you with the
01:10 - formulas and then you use methods to put
01:15 - those formulas into use right so the way
01:19 - it's gonna work we're gonna be coding
01:21 - along which you should be able to see
01:22 - behind us and we're working on the code
01:26 - Academy site if you want to watch the
01:28 - video that's in YouTube and you can chat
01:31 - also in video on YouTube so go in there
01:34 - introduce yourself if you have any
01:36 - questions about c-sharp or you want to
01:38 - share why you're here
01:39 - we love to hear about that and it can
01:42 - help us develop what's coming next and
01:44 - what else yeah we'll be asking questions
01:47 - we want this to be an interactive
01:48 - process we want this to help you and be
01:52 - useful to you so let us know if you have
01:53 - questions and the project exists also
01:58 - available to you in the links below the
02:01 - YouTube video absolutely yes
02:05 - so before you get started just want to
02:07 - give you quick few shout outs to
02:09 - everyone who's here with us today
02:10 - thank you so much for joining us it's
02:12 - been a little while since we've done a
02:14 - livestream because we've been releasing
02:15 - a lot of different content on codecademy
02:18 - our skill paths just came out so you
02:20 - should check them out but this is the
02:22 - first time in a little while that we've
02:24 - released a real new set of lessons a new
02:26 - set of projects so it's awesome to see
02:28 - everyone here let's see we got amo
02:33 - Victor Emma do-or-die
02:37 - Wow okay slay your princess that's a
02:46 - really good one that's all my gamer tags
02:48 - for the rest of time that slay your
02:50 - princess me fight you for that that's
02:52 - true this team like they've got that guy
02:54 - probably have it all over absolutely
02:57 - Laurens hello Tetsu and Tim Arturo hello
03:03 - seeing some questions already in the
03:05 - group chat which is awesome so we'll be
03:08 - answering those as we go along we also
03:11 - have the ever wonderful Alex Koontz
03:13 - behind the screens can't see a man
03:16 - behind the curtain and he will also be
03:19 - responding to your comments in the chat
03:21 - under the code Academy name so cool
03:24 - hello Monica
03:27 - sparks cool what is sparks cool I don't
03:30 - know yeah if you can explain a little
03:33 - bit more we'd love to hear why why they
03:36 - sent you here but also what you want to
03:39 - get out of it there's a question from
03:41 - Tim is c-sharp used for mobile app
03:43 - development yes c-sharp is really cool
03:45 - it's like a really good investment and
03:47 - learning I was talking to someone
03:48 - earlier today about like while in
03:50 - c-sharp and why is it why is it hard for
03:52 - some people to start it is one of those
03:55 - languages that has like a high ramp up
03:56 - and it's a high cost but high reward
03:58 - first for me at least in my experience
04:01 - there's a lot you need to learn to get
04:03 - good at c-sharp but once you do it's a
04:05 - really powerful language it works really
04:07 - well for large application there's a lot
04:08 - of jobs for it and you can do pretty
04:10 - much anything yeah so not only can you
04:12 - do web development but you can also make
04:14 - desktop applications web applications or
04:18 - mobile apps my favorite one to always
04:20 - shout out is you can
04:22 - games and virtual reality applications
04:24 - using unity and c-sharp yeah
04:27 - Internet of Things Internet of Things
04:29 - yeah it's one of my favorite
04:32 - technologies you can do Internet of
04:34 - Things so yes we are developing c-sharp
04:44 - and Mac or PC came a question from FA JC
04:47 - we are actually both using Macintoshes
04:50 - right now you can develop c-sharp on a
04:52 - Macintosh on a PC you can even do it on
04:56 - a Linux based operating system now all
04:59 - of that comes from well we're using the
05:03 - Visual Studio IDE and there are
05:06 - different software downloads based off
05:09 - of your operating system we actually
05:11 - included information on the c-sharp
05:14 - course in an article about downloading
05:17 - Visual Studio for c-sharp development so
05:19 - all that information is there so I guess
05:23 - we're ready to get started with the
05:24 - project awesome yeah let's talk about
05:28 - why we wanted to do this project on the
05:29 - live stream yeah so the project we're
05:31 - gonna run through the project and then
05:33 - we're gonna extend it by adding some
05:35 - some making interactive essentially so
05:38 - this project is a good example of how to
05:40 - use methods so methods and conditionals
05:43 - are something really important to all
05:45 - programming languages but allows us to
05:47 - for conditionals allows us to make
05:49 - decisions with our program so it may do
05:51 - different behavior based on different
05:53 - based on our input for example methods
05:56 - are how you make your code reusable and
05:58 - organized and modular so rather than
06:00 - having one huge page of code there's one
06:04 - bug you have to search through the whole
06:06 - thing you can break it up into parts
06:07 - that make sense so you come back to it
06:09 - later you can say like I understand that
06:11 - this deals with one concept this deals
06:13 - with another concept and you can use
06:14 - those like building blocks absolutely
06:16 - what else some of the outcomes from this
06:20 - project we're looking at a process that
06:23 - is very repetitive you know having to
06:26 - calculate areas you know
06:29 - different floor plans so one great thing
06:31 - about programming is you can write a
06:32 - program to automate different work that
06:34 - you have so imagine that you actually
06:36 - were in a I don't know construction
06:38 - contracting business and you're
06:40 - regularly you know calculating the
06:43 - amount of tiles let's say that you need
06:45 - to use for a house and it would be great
06:49 - if you could write a program something
06:51 - like this I would say okay no matter
06:53 - what the size of the house is I can
06:55 - break it up into these different shapes
06:57 - and to put my numbers in and then come
07:00 - out with the exact dollar amount that I
07:02 - wouldn't need to have in order to
07:05 - purchase my tiles so it's cool about
07:08 - this is that in addition to automating
07:10 - repetitive work we've actually are going
07:11 - to show you how to turn this into a
07:13 - interactive console application so it's
07:16 - not just a program that's gonna print
07:18 - information to the console but it's
07:20 - actually going to be a program that
07:21 - another user could make use of so most
07:24 - of the time when we're interacting with
07:25 - technology you know we don't see all the
07:28 - code behind it in the program we're not
07:30 - just writing programs that we can run
07:31 - for ourselves usually there's some kind
07:33 - of user experience so we're gonna show
07:35 - you how you can start adding user
07:36 - experience to your projects yeah and if
07:40 - you're wondering if this is the light
07:41 - right livestream for you if you're just
07:44 - beginning c-sharp or don't know it this
07:46 - is still a great chance to talk to us
07:48 - about it but also learn what it can do
07:50 - if you are already familiar with c-sharp
07:51 - we're gonna do be doing some refactoring
07:53 - and thinking about how we write our code
07:55 - so that's gonna be useful to anyone who
07:58 - already has experience on how to write
07:59 - better code okay pretty much it we're
08:03 - gonna assume that you have a basic
08:05 - knowledge of data types whether that's
08:07 - in c-sharp or maybe another programming
08:09 - language so again boolean's integers
08:12 - strings and also basic operators so you
08:17 - know addition subtraction I don't think
08:20 - we were doing anything with logical
08:21 - operators are we no okay so pretty
08:25 - straightforward but again we're gonna be
08:27 - walking you through it so if you have
08:29 - any questions please put them in the
08:30 - chat I see Alex start answering some
08:33 - thank you Alex and we'll take time to
08:36 - stop periodically and make sure that we
08:38 - answer
08:38 - as well yeah a c-sharp primarily a
08:43 - front-end or a back-end language so like
08:49 - we said c-sharp can be used for
08:50 - everything it's sometimes called the
08:54 - backend language though I wouldn't
08:55 - consider it just back end but it's
08:58 - considered back in because you can't
09:00 - write out like what a web page looks
09:03 - like listen you need to use something
09:04 - like HTML and CSS and when it comes to
09:08 - writing like with xamarin when you're
09:10 - writing mobile applications you have to
09:12 - use another markup language like HTML
09:14 - and call XAML so it's primarily back-end
09:18 - but if you're building anything useful
09:21 - you're gonna need a phone in it back end
09:23 - so c-sharp is still gonna play in there
09:24 - yep
09:26 - is c-sharp the same as c-sharp from
09:30 - Nadia yes that kind of sounds weird when
09:33 - I'm saying it out but yeah so funny
09:38 - story for those who don't know the
09:40 - origin of the name c-sharp
09:42 - you may notice if you're familiar with
09:45 - music it looks like a musical note and
09:47 - that's because that's where it comes
09:48 - from so there is the original language C
09:52 - and if you're familiar with the language
09:54 - C++ and the idea of what plus plus means
09:58 - and programming it means one more than
10:00 - the previous amount right so C++ is one
10:04 - version better than the previous C in
10:07 - music you have a particular note like C
10:10 - and then a sharp is one up from C so
10:14 - similar to C++ being one more than C C
10:17 - sharp is also one more than C mm-hmm so
10:19 - you can write it as C sharp but
10:21 - typically you see it with like the
10:22 - actual sharp symbol which we use the
10:26 - pound sign or a hashtag sign technically
10:29 - there's a specific symbol for it right
10:31 - it's kind of hard to find so yeah and
10:33 - the last thing about languages Java is
10:36 - very similar when I look at it they look
10:39 - very same on paper at first yeah they
10:42 - are slightly different and they do have
10:44 - different communities and different
10:46 - frameworks c-sharp is supported by
10:49 - Microsoft so a lot of all the
10:51 - documentation
10:52 - supported there and I personally like it
10:56 - for all of like kind of the tools and
10:57 - frameworks around it
10:59 - we could get into like design of the
11:02 - specific language but starting out it's
11:03 - not too much different and I actually
11:05 - another fun background story in c-sharp
11:08 - was that Microsoft basically wanted Java
11:10 - and Oracle was like no and so the
11:15 - developers were like fine we'll build
11:16 - Java but better so that's why there are
11:19 - a lot of similarities between Java and
11:21 - c-sharp because they were designed to do
11:23 - very similar things yeah okay cool let's
11:27 - hop into it so yeah so just a quick
11:29 - rundown of how this lesson is going to
11:32 - go we're first going to run through the
11:35 - project as it exists on the code academy
11:38 - website so again that's linked below the
11:41 - YouTube video you know if you need to
11:43 - find it after we go through the version
11:47 - that's on code Academy and through all
11:49 - of the steps that you see there we're
11:51 - gonna bring in some of the extensions
11:52 - that are actually in the last step so
11:55 - we'll go over those extensions and then
11:58 - you'll start to see how we're actually
11:59 - going to bring in conditional statements
12:01 - into this project cuz this project is
12:03 - primarily just methods at first so
12:08 - architect arithmetic the idea behind
12:12 - this one is that were given a floor plan
12:14 - and the example here on the left is the
12:16 - pantheon of some monument and we need to
12:19 - calculate the area and then calculate
12:22 - the cost of like flooring that area if
12:24 - we imagine like the Pantheon it would be
12:26 - all tile so if we know these like
12:28 - general shapes that looks like there's
12:30 - sort of a square at the bottom and then
12:32 - sort of a circle we can estimate by
12:34 - breaking those down and those calculate
12:36 - the area of those things is very easy we
12:39 - could do that for all kinds of different
12:41 - floor plans and we're gonna use c-sharp
12:42 - to automate that process so we can say
12:45 - we want like one rectangle one square of
12:47 - this size and this is what the area is
12:50 - gonna be calculating so you can see like
12:51 - for example how it's broken down for the
12:53 - Pantheon yes circle and rectangle
12:56 - exactly and don't worry if you don't
12:59 - know those area methods we're gonna be
13:00 - giving you those absolutely cool so
13:03 - let's get started
13:06 - first we're gonna need to define these
13:08 - methods so I am going to make this a
13:11 - little bigger for everyone to see okay
13:13 - and come over here yes so the first is
13:18 - rectangles just area equals length times
13:21 - width so we want a method that takes in
13:26 - those two values and outputs an area so
13:30 - one one do in my program that CS come
13:33 - down here and define a new method and we
13:36 - would love to hear from you about how
13:37 - you think you could turn that specific
13:39 - formula into c-sharp syntax as a method
13:43 - so do you want to start by writing the
13:46 - method signature and then we can look in
13:48 - the chat and see how you think you could
13:50 - term area equals length times width into
13:53 - c-sharp syntax for a method and shout
14:01 - out to Slayer princess by heart
14:03 - thank you for repping c-sharp and
14:05 - providing some really great information
14:07 - about why it's such an awesome language
14:09 - to learn first really appreciate that
14:16 - hello Foster thank you for joining us
14:19 - today
14:25 - and we know there's a slight delays yeah
14:30 - I'm just feeling the baby time
14:34 - basically we're asking given that in
14:37 - Formula on the left area equals length
14:38 - times width how do we translate that
14:40 - into a method mm-hmm what what what
14:42 - should I be writing to do that give
14:46 - people a minute
14:47 - mm-hmm so fun fact I guess typically we
14:52 - do our live streams on Mondays but we
14:55 - are doing it on a Wednesday because Nick
14:58 - and I are basically ships passing in the
15:01 - middle of the night this week I just
15:04 - came back from a wonderful vacation and
15:07 - Nick is about to leave for a equally
15:10 - wonderful vacation yes so it's a special
15:14 - Wednesday for us to do a livestream yeah
15:19 - it's hard to get us in the same room so
15:30 - as to return length times width gotcha
15:34 - okay so length times width would that be
15:38 - a variable to find outside of the method
15:41 - would it be arguments the method like
15:45 - where am I getting those so I can I can
15:47 - start with that yeah let's do that so
15:50 - again when we use the keyword return in
15:53 - a method we're saying that we are
15:55 - actually returning a value from that
15:57 - method that we can use outside of that
15:59 - once we initialize it yeah give people a
16:05 - little bit longer to answer that so fa
16:09 - JC says does that mean rectangle returns
16:12 - a double yes you are correct in that as
16:16 - we see in the method signature we're
16:18 - gonna skip the static part for now be on
16:21 - the lookout in later lessons to learn
16:23 - about those but double is the return
16:26 - value and so we state that in the method
16:28 - signature good job
16:35 - so Monica is correct once we create the
16:37 - method we can use the value that comes
16:39 - out of it with the return statement when
16:42 - we call the method so Tetsu says length
16:45 - and width would be arguments Nadia's
16:49 - response is double rectangle rectangle
16:54 - equals length times width okay so it
16:57 - looks like there we're defining
16:59 - specifically a variable named rectangle
17:02 - that would be a double equals times
17:06 - width
17:07 - yeah so I'm gonna run with sets of two's
17:10 - answer and we're gonna test it out and
17:11 - see all right thank you all for offering
17:14 - your ideas in the chat we're gonna
17:15 - periodically stop and ask for more
17:17 - though so be on the lookout yes so yes
17:21 - and Daniel you write arguments to the
17:23 - method so what I have here now is this
17:26 - static double rectangle mm-hmm so
17:28 - rectangles method name takes two
17:30 - arguments which are just the inputs
17:31 - length and width and both of those
17:34 - arguments are type double which means
17:37 - like a decimal number like 10.5 and then
17:41 - it just returns the product of those two
17:43 - length times width so if I went into my
17:46 - main method I could test this out okay
17:51 - so I'm just console writing to the
17:53 - console and I'm doing a rectangle and
17:56 - let's just come up with some numbers 30
17:58 - and 5 so I expect rectangle to take 30
18:04 - and 5 30 would be the length this would
18:06 - be the width returned 30 times 5 which
18:09 - is 150 so let me say that I don't know I
18:13 - was impressed by how Nick takes care of
18:23 - all of them ok so now I'll put in
18:27 - another screen down here in the projects
18:30 - window you have all these the top is the
18:32 - text editor bottom is a terminal or a
18:34 - console to run all the code that we're
18:38 - writing we just do dotnet run we're
18:40 - press ENTER here and then it writes 150
18:44 - like we expected
18:44 - so now we know rectangle was that method
18:47 - is working like we wanted to and we can
18:48 - call rectangle again and again to
18:50 - calculate all sorts of areas of
18:52 - rectangles awesome so here we are we've
18:54 - got our first method working yeah let's
18:57 - keep going okay yes you're right
19:04 - okay so to write further confuse
19:08 - everyone let's just do this I'm adding a
19:11 - point zero to each of these really make
19:13 - sure we're using that decimal that a
19:15 - double gives us dot in that run it's the
19:19 - same so C sharp is doing two things here
19:23 - one of them it's assuming when we say 30
19:26 - that it's gonna interpret it like a
19:27 - double so like 30 is really 30 point-0
19:30 - and then it's multiplying those together
19:32 - and returning 150 point zero zero
19:36 - then when it's passed the consul's
19:38 - outright line to write to the console
19:40 - c-sharp again is saying like we know you
19:42 - don't need those zeros we're just gonna
19:44 - take them off for you 150 s there yeah
19:47 - so yeah the whole time it's doubles
19:48 - c-sharp is just taking care of that for
19:50 - you how nice I know really great okay
19:55 - circles circles right so now again the
19:59 - formula for this one area equals pi
20:01 - times raised mm-hmm
20:03 - so now you have a bit of experience with
20:06 - this let's see how you think we could
20:09 - create a method for defining the area of
20:12 - a circle
20:19 - I'm gonna start off again with this
20:23 - double circle why do we use the static
20:31 - keyword I tried my hand waviness of it I
20:35 - ignore this - hey
20:37 - but that's fair yeah so I don't I can
20:42 - explain it to you you may not be like
20:43 - prepared based on what we've taught so
20:45 - far in c-sharp which is okay and in the
20:47 - next set of modules it's all gonna make
20:49 - sense but the short answer is that we
20:53 - are running all of this within the
20:55 - program class and circle is a method of
20:58 - the program class because you can see
21:00 - it's like within the class program there
21:02 - normally we'd have to create an instance
21:04 - of that class to call any of those
21:06 - methods because their instance methods
21:09 - by default but we want static we just
21:12 - want to call it just by its name
21:13 - rectangle you don't want to say like
21:14 - program dot rectangle so we put that
21:17 - static there that allows us to do that
21:19 - for now when we're learning methods it's
21:21 - just kind of easier to put everything
21:22 - static and then you just use the method
21:24 - names and then we get into more advanced
21:26 - things you'll see why why we would want
21:28 - to do static or not do static absolutely
21:31 - yeah
21:33 - okay so still looking for some answers
21:38 - in the chat the radius of the circle as
21:44 - argument and return pi times R times x
21:49 - okay any other ideas
21:58 - I'm learning things from Slayer princess
22:00 - right now mm-hmm
22:02 - mrs. flavors from both Java other C
22:04 - languages yes for sure I agree with all
22:08 - those things yeah I guess we should go
22:15 - with Abby
22:15 - all right we're gonna go with you okay
22:18 - so PI times R squared which is yeah like
22:23 - kind of what the formula looks like
22:24 - makes sense
22:26 - the trick with this is that pi we have
22:30 - to access we can't just do 3.14159
22:32 - because it's not quite PI but C sharp
22:37 - gives us a constant math dot pi which I
22:40 - can just say like math like this mm-hmm
22:43 - yes Monica right on yeah so that's we're
22:49 - gonna go forward with my say-so math dot
22:51 - pi times radius yes and this looks like
22:57 - we're doing our I'm gonna spell it out
22:59 - just for clarity radius and we're doing
23:02 - x times so yes so x times works in some
23:10 - cases but it's safer to use math dot pow
23:13 - mm-hmm
23:14 - I forget why at the moment it has to do
23:17 - with backwards compatibility okay
23:19 - oh you know what I know I'm thinking of
23:21 - JavaScript Oh
23:23 - [Laughter]
23:27 - but again so these are both methods that
23:29 - are part of the math class that you can
23:32 - look up in the Microsoft c-sharp
23:34 - documentation I believe are they linked
23:37 - in the hint there okay and so again we
23:47 - can use math dot high to represent the
23:49 - number pi and rather than using another
23:54 - form of you know operators you can just
23:57 - use math pow
23:58 - so how do we use math again right so
24:01 - matha powell is a method and we just
24:05 - read I'm gonna have spacing so we write
24:08 - it just like math
24:09 - how we see in text then within there we
24:14 - put radius because radius is what we
24:17 - want to like square put to some power
24:19 - and then a second argument we need the
24:23 - number of times to multiply the exponent
24:25 - power that we're gonna raise it to we
24:27 - want radius to the power of two mm-hmm
24:29 - also known as square yes okay and there
24:35 - it is right we're not gonna test this
24:40 - one because we're gonna be able to test
24:41 - it in a little bit so let's move on to
24:43 - triangles cool I think for the sake of
24:48 - time I just I'm gonna write this one out
24:50 - okay that's okay so pretty similarly
24:53 - area equals 1/2 times bottom times
24:57 - height it was just another formula so
25:00 - it's gonna look pretty similar static
25:02 - double triangle again I'm gonna need two
25:05 - arguments the bottom and the height
25:07 - mm-hmm everything is a double for now
25:10 - okay then we're gonna return half times
25:16 - bottom times height so now we have our
25:28 - three methods and now we can test them
25:33 - like because we've written a bunch of
25:35 - code now we don't want to get lost in
25:36 - bugs later on so we're just gonna try it
25:38 - out exactly always good to test your
25:41 - code and what's great about methods is
25:43 - that they provide a really simple way
25:46 - for quickly testing your code because
25:48 - you can isolate different aspects of
25:50 - your code and then run them each one at
25:52 - a time with different test cases right
25:54 - so what we're gonna do is just a few
25:56 - test cases we're gonna give each of
25:58 - these methods an input and we know what
26:00 - that expected output is so we'll just
26:02 - check that that's log to the console
26:04 - absolutely so and yes Monica is really
26:10 - good to know what math class functions
26:11 - you can use definitely recommend
26:13 - checking out the documentation again and
26:15 - seeing what sorts of things are
26:16 - available to you like square roots for
26:20 - example there's no real
26:21 - operator that we can use in our program
26:23 - so while we could simulate raising a
26:25 - number to a certain power it's much you
26:28 - can't really do that with the square
26:29 - root so yeah that's a different
26:31 - functionality so cool let's do each of
26:38 - these examples on the left so it says a
26:40 - rectangle with a length of 4 and a width
26:42 - of 5 has an area of 20 because 4 times 5
26:44 - is 20 so let's just text I'm gonna say
26:48 - 20 question mark actually yeah let's
26:54 - just do rect area okay then we'll call
26:59 - that mat yes rectangle 4 and 5 okay
27:05 - and then we'll repeat this for the next
27:08 - two mm-hmm
27:09 - so double circ area equals circle 4 and
27:19 - area with a base of 10 okay so we're
27:29 - calling three methods and we have an
27:31 - idea of what those values should be so
27:33 - let's just print them out and make sure
27:37 - should be this one well Nick is
27:49 - finishing that up I saw a question from
27:51 - Nadia who asked if this live stream is
27:53 - being recorded and will it be available
27:54 - in the c-sharp class for viewing yes so
27:57 - all the live streams are recorded and
28:01 - there's actually a separate part of the
28:04 - catalog that you can go to that just
28:06 - says live streams on it maybe Alex you
28:09 - could link to that in the chat and it
28:11 - has all of our past live streams on
28:13 - there so other c-sharp live streams but
28:15 - also ones for other domains like R and
28:18 - Java and C++ so you can find them there
28:26 - there's also a YouTube playlist so if
28:29 - you subscribe to our code Academy
28:30 - Channel
28:32 - check out our playlists you can find
28:40 - we're live streams that was just like
28:42 - the most I've ever come to becoming like
28:43 - a youtuber I think so we're gonna save
28:56 - ourselves from embarrassment we're gonna
29:02 - test these three methods what I've done
29:04 - is I've called them and then print it
29:06 - out the values so I'm just gonna run the
29:10 - program lets out that run again uh-huh
29:12 - should be 20/20 should be fifty fifty
29:16 - point two six five four eight one should
29:17 - be 45 45 mm-hmm okay so here's a good
29:20 - question
29:22 - it looks like 20 and 45 are integers hmm
29:26 - no decimal it looks like 50 is a decimal
29:29 - mm-hmm and see trap we call that a
29:32 - double why why is that I'm asking all of
29:36 - you let me know what you think that that
29:38 - reason is every time that we ask these
29:43 - questions the Jeopardy song plays invite
29:48 - yeah yeah yeah we should have it your
29:52 - own version should get you to do
29:55 - something he's like an electronic
29:57 - experimental okay right let me be more
30:02 - clear so why does 50 point to 65 this
30:07 - middle value why does that look
30:09 - different than 20 and 45 I thought
30:13 - rectangle circle and triangle all
30:15 - returned double values yet I'm seeing an
30:18 - INT a double and an int so what's going
30:20 - on there is it because pi is a decimal
30:24 - that is part of it yes and double is
30:28 - floating yeah double is a floating point
30:30 - number
30:41 - did you hear about how this guy had been
30:43 - on a streak on Jeopardy and he was
30:46 - trying to beat the previous person who
30:48 - had big wins yeah and he got like really
30:51 - close to breaking his record I think the
30:53 - previous person's record was 5.45
30:55 - million and he was like five point two
30:57 - five or two six or something and this
31:01 - red 27 year old librarian Wow and she
31:09 - wrote her master's thesis on Jeopardy
31:12 - whoa has been like trying to get on
31:15 - Jeopardy for years and she didn't know
31:17 - because the way they filmed Jeopardy
31:19 - they do like multiple shows in a day so
31:21 - she didn't
31:22 - really she wasn't super familiar with
31:23 - that this guy was going on a long streak
31:25 - because I guess maybe when she recorded
31:27 - it was before all the press had come out
31:30 - so she didn't realize that first that
31:33 - she was gonna yeah be the one who took
31:35 - up down Wow she's also from outside of
31:37 - Pennsylvania too and outside of
31:39 - Philadelphia Oh super yeah
31:44 - librarian in the Philadelphia area when
31:49 - we talk about Jeopardy Alex you can see
31:51 - but Alex is like yeah I know okay
31:57 - so we're getting some answers could it
32:01 - be because you used a function for math
32:03 - class which returns value with more
32:04 - accuracy so it looks like POW function
32:07 - or the other one yeah I can pull that
32:09 - back up right so I think you're thinking
32:16 - map that pie or math that Powell yeah so
32:19 - you're both onto something with this
32:21 - math and like what it returns and
32:23 - because pi is a decimal so like we said
32:27 - before c-sharp is gonna print out any
32:30 - decimal if it's a decimal without sorry
32:33 - a double with just point zero zero zero
32:35 - it's gonna reprint it as a reformatted
32:39 - it as an integer which is why we saw 20
32:41 - and 45 but with circle which is that
32:47 - middle one
32:47 - you're right math dot pi is not a point
32:50 - zero zero number
32:51 - so circle returns something like fifty
32:54 - point two five whatever c-sharp isn't
32:57 - going to reformat that because it knows
32:59 - that those values are important yeah so
33:02 - it's not going to cut those off so
33:04 - what's happened in the background
33:05 - they're all doubles all the methods
33:07 - mattify matha powell double circle
33:10 - rectangle circle rectangle triangle all
33:13 - returned doubles it's just a matter of
33:14 - how they're formatted in screen cool
33:17 - let's keep going yes let's get into
33:21 - actually applying these methods yeah so
33:25 - I saw someone before mentioned that they
33:29 - started to see how this could all come
33:30 - together
33:32 - mentioned something I think that uh
33:34 - Monica said for finding surface area
33:35 - would just add all three areas cool yeah
33:40 - that's it so now that we've combined all
33:43 - these shapes together or now that we've
33:45 - calculated all of these shapes I should
33:47 - say now you could combine them together
33:48 - to find the total surface area yeah so
33:52 - we're gonna do the ancient city of
33:55 - Teotihuacan which is in Mexico City and
34:00 - it's it's very big it kind of looks like
34:03 - this shape that we have on the right
34:04 - here and we're gonna break that down
34:08 - into triangle circles and rectangles to
34:12 - use these formulas so our next question
34:15 - to you what do you see in this shape how
34:19 - many triangles how many rectangles how
34:21 - many circles do you see in the floor
34:22 - plan on the right exactly and sidenote
34:26 - I'm really excited because I'm going to
34:29 - Mexico City next week I did just get
34:31 - back from vacation away again and
34:35 - hopefully going to see Teotihuacan in
34:37 - person yes
34:38 - which is very cool yes I already told
34:43 - you about the sunscreen yeah Nick went
34:46 - to Mexico City earlier this year so he's
34:47 - been giving me some tips saying gotta
34:49 - bring plenty of water sunscreen because
34:52 - I guess what's a little so we talked
34:54 - about this as a blueprint Teotihuacan is
34:56 - technically a city plan
34:58 - but it's I'll take the blame for that
35:00 - one
35:02 - and so in our imaginary idea we are
35:06 - totally you know tighly which hopefully
35:11 - will never happen well they'll be were
35:13 - reading about it on Wikipedia and
35:14 - apparently they built a Walmart like
35:17 - nearby were you there for I think that
35:19 - they had those had the rights to fill
35:21 - them all know what happened they said
35:22 - that when they were digging stuff up
35:24 - they found pottery so I don't know if
35:25 - they stopped develop No yeah interesting
35:28 - any case yes so if you also want to
35:32 - throw any Mexico City willing to hear
35:36 - them I've literally been just been
35:38 - getting recommendations from every
35:39 - single person yeah I know I'm there's so
35:41 - many eating tacos are drinking mezcal
35:43 - yes yes okay I think that's a great idea
35:46 - totally fine by me
35:48 - thanks Monica yeah catch us on the video
35:51 - later yeah thank you
35:52 - yeah okay so that's a one rectangle one
35:57 - triangle and half a circle yes that's
36:01 - what I see yeah if anyone else have
36:04 - anything else let us know if you think
36:07 - that and we can also try it Casa Azul
36:11 - that's um that's the critical thing
36:14 - right yes yes the blue house yes yes Tim
36:17 - hey Tim what's up today I'm actually
36:20 - staying in Quail con which is the
36:23 - neighborhood where the blue house is so
36:26 - very excited to check that out yeah
36:31 - let's run with Ted Stokes if anyone else
36:34 - has like different breakdown of this
36:37 - floor plan let us know I'm happy to try
36:39 - it we're gonna try
36:41 - Tesla's so I'm just gonna get rid of
36:43 - this cuz we know everything works mm-hmm
36:44 - we're gonna say double total area so the
36:50 - total area of this floor plan is one
36:53 - rectangle plus what we say one triangle
36:58 - mm-hmm plus half a circle so I'm gonna
37:02 - multiply the circle the result of the
37:07 - circle method with my five and then I'm
37:11 - just gonna look up
37:12 - forgot what the values are mm-hmm so
37:15 - right this rectangle you can see two
37:18 - hundred two thousand five hundred and
37:19 - one thousand five hundred so this this
37:23 - are the arguments for the first but in
37:26 - the Triangle up on the left is 750 by
37:29 - five hundred and then the radius of the
37:35 - circle 375 yep all right so let's save
37:41 - that so now we can calculate the area if
37:46 - I were to run this code again mm-hmm
37:49 - hopefully I'll see the value no I didn't
37:52 - because I'm just gonna let me crash on
37:59 - that one else once in a while once in a
38:04 - while okay so now I'm gonna see council
38:05 - write it wait wait oh I didn't say gotta
38:13 - say it again it's better work yeah okay
38:19 - yeah so it turns out it's like full 412
38:25 - no 4 million yep 120 that wasn't 893
38:30 - square meters square meters cool so now
38:36 - we've calculated total area mm-hmm
38:39 - by the way if you want to see kind of
38:41 - like what chessick was kind of like
38:44 - breaking down in his head his or her
38:45 - head and my head as well there's a
38:48 - little diagram in the hint so it's there
38:53 - if you want to look through that
38:53 - calculate the area now we won't need to
38:56 - multiply it by the cost of like say like
38:59 - each square meter of fluorine if we were
39:01 - we're gonna floor the entire city say
39:04 - each one cost 180 pesos so all we need
39:07 - to do is multiply the total area by the
39:10 - like cost per meter square mm-hm
39:14 - so we're gonna do that down here we're
39:17 - gonna say I'm gonna store that in total
39:19 - costs
39:21 - double total costs equals the total area
39:26 - times 180 and now I'm going to check
39:30 - that
39:45 - okay so we don't have commas but the
39:50 - four million square meters if it's a
39:54 - hundred 80 pesos per meter squared then
39:58 - it costs 748 million pesos hundred
40:03 - forty-one pieces yes right - 742
40:06 - corundum yep yeah - to floor the whole
40:09 - place yeah if you could do some currency
40:15 - conversion for wherever you live and
40:18 - it's big and it costs a lot
40:20 - there you go okay moving on there's one
40:25 - last thing
40:26 - mmm-hmm with this format so if I'm a
40:29 - user and I get this information like
40:31 - again I'm reading it as 741 million
40:35 - something something something point zero
40:38 - two one nine nine six pesos it doesn't
40:40 - really make sense
40:41 - mm-hmm so we're we want to round that
40:44 - value just to two decimals are like Oh
40:47 - point zero two this will probably be we
40:50 - have another man utility for that called
40:53 - math that round so we're just gonna
40:55 - round I'm laughing it to round the total
41:05 - cost using math that round and it's just
41:08 - another method like using methods all
41:10 - days on methods on methods and we're
41:13 - just gonna pass it total costs okay
41:15 - so up here we're doing math round and
41:22 - putting total cost in that parentheses I
41:28 - needs one more argument which is how far
41:32 - to round it down mmm-hmm I think yeah
41:34 - and you need a two so round it down to
41:37 - two decimal places let's check that that
41:39 - worked
41:44 - awesome alright there we go
41:46 - it worked so that completes the first
41:50 - part of the project which is what exists
41:53 - again here on the code CAD amis site
41:55 - we'll pause for a second see if anyone
41:58 - has any questions and then after we
42:00 - answer your questions we're going to
42:01 - move on to some of the extensions that
42:03 - again are in the last exercise below so
42:07 - feel free to put any questions into the
42:09 - chat and we'll take some time to answer
42:11 - them yeah I've seen a few things about
42:14 - audio will remember to speak up and if
42:17 - there's still issues try to refresh the
42:19 - page yes we'll try to do that yeah and
42:24 - again we super appreciate each of you
42:26 - not only talking to us in the chat but
42:28 - talking to each other in the chat it's
42:30 - really great to see people go in there
42:32 - and answer each other's questions and
42:35 - celebrate and support one another
42:37 - there's a huge part of the learning
42:39 - journey it's not simply about the
42:40 - teachers and the students but it's also
42:42 - working together with each other yeah
42:44 - absolutely
42:45 - oh yeah yeah great plug time for our
42:50 - communities on that note thank you Alex
42:53 - so code Kadim e in addition to having a
42:56 - great wonderful learning platform also
42:58 - has some really amazing communities and
43:01 - we have our forums which are on platform
43:04 - and everyone can take part in the forums
43:08 - and ask questions and answer questions
43:09 - look for support there we also have a
43:11 - Facebook channel that is again open to
43:14 - everyone so you can find our Facebook
43:17 - community group and then we also have
43:20 - our community
43:21 - code Academy lifelong learners slack
43:24 - channel which is available to our pro
43:27 - users and it's full of discussions about
43:30 - people looking for jobs looking for help
43:33 - on coding questions we do weekly chats
43:37 - that are all slack based chats so kind
43:40 - of similar to what you're doing right
43:41 - now on YouTube we also offer free first
43:46 - previews of our content and like a beta
43:48 - capacity so people can give the feedback
43:51 - lots of different ways to engage with
43:53 - the code Academy Kim
43:54 - so we hope that you join them on join us
43:56 - on top of them mm-hmm let's see if we
44:00 - have any other questions thanks Joel for
44:05 - the vote of support we appreciate it
44:09 - [Music]
44:10 - cool Laurens here awesome so what are
44:14 - the basics for this if it's the basics
44:16 - for this project we'd recommend going
44:18 - through the first four modules of
44:20 - c-sharp which are currently on the
44:22 - catalogue now so that will give you an
44:24 - introduction to c-sharp working with
44:26 - different data types and variables along
44:28 - with now conditionals and methods I
44:38 - think we're ready to move on to the
44:40 - additional yeah I think so thanks I do
44:44 - appreciate it yeah thanks for joining us
44:46 - today and appreciating it okay so we're
44:49 - now going to move into the extension so
44:52 - if we scroll down it sort of got one
44:56 - these days it's like moving between
44:58 - laptops you can see that in our step 10
45:03 - that we have extra challenge extensions
45:06 - so the first one of these is to make the
45:09 - entire program a method so that you can
45:12 - execute it in your main method with one
45:14 - line such as calling it as calculate
45:17 - total cost which is one we're gonna skip
45:23 - work so ignore that would you could do
45:27 - that one on your own that's all for you
45:31 - but we are gonna do is determine the
45:35 - total cost for was it two other yeah
45:39 - two other blueprints that you can see
45:41 - right here so the Taj Mahal and the
45:44 - Great Mosque of Mecca so similar to
45:47 - Teotihuacan we have provided you with
45:49 - blueprints and the measurements for
45:53 - different parts of the building which
45:55 - you can then use in your formulas so
45:58 - what we're gonna do now is we are going
46:02 - to also calculate the total costs for
46:04 - these two other buildings
46:06 - and then we are going to show you how to
46:11 - refactor this code and also how to make
46:14 - it interactive so another user could run
46:16 - it from their console cool okay so for
46:21 - the sake of time I'm just gonna pump out
46:22 - the two more areas alright just to
46:26 - calculate those pump them out yes so one
46:31 - quick way of doing it is we could just
46:33 - copy them right yeah exactly
46:36 - cool so do this and I don't need the
46:39 - total area here now I have three
46:51 - versions I'm gonna call this total area
46:53 - TM mm-hmm yeah so I'm just making these
46:58 - new variable names
47:00 - so for TM the Taj Mahal is I look at
47:04 - this it's one rectangle with little
47:07 - triangles cut out in the corners hmm so
47:09 - I'm gonna say I'm going to eat all of
47:11 - this here so the Taj Mahal is really a
47:14 - rectangle of 90.5 by 90.5 uh-huh - four
47:20 - little rectangle triangle so four times
47:22 - triangle huh and it's 24 by 24
47:26 - okay so then multiply hundred eighty
47:31 - around it cool next Great Mosque of
47:35 - Mecca so I'm gonna add make these new
47:37 - variable names GMM
47:46 - okay this next one looks to me like let
47:53 - me pull this out like a rectangle on top
47:56 - mm-hmm and then a bigger rectangle below
47:58 - it with a triangle cut out okay okay so
48:01 - first rectangle is 180 by 106 the next
48:06 - one is a rectangle of 284 by 264 - that
48:14 - little triangle over there and that is
48:17 - 264 by 84 okay
48:23 - save that
48:32 - all right okay there we go so now we
48:34 - have our values and those are the costs
48:36 - for teotihuacan Taj Mahal and Great
48:39 - Mosque of Mecca mm-hmm
48:41 - right now we're doing this all on the
48:43 - main method I'm gonna pull that up so
48:44 - you can see it all in here and it looks
48:51 - a little repetitive it's looking a lot
48:53 - repetitive yeah I just just a lot of the
48:57 - same I mean granted it's cuz we've
48:58 - copied it but yeah I think there's
49:01 - probably a way that we can reduce the
49:04 - amount of repetition that we have right
49:06 - now yes anytime I see repetition it just
49:10 - screams - me either loops or methods
49:13 - mm-hmm loops we're not gonna cover right
49:15 - now because we haven't covered that in
49:16 - the courses yet no but we are working on
49:18 - it we'll come on soon yes this one's a
49:21 - good case for methods which means we can
49:24 - bunch all of this code that's duplicated
49:27 - mmm throw it in a method and then just
49:29 - call that method multiple times yeah
49:31 - okay cool does anyone have an idea of
49:36 - what we should take out and put into a
49:38 - method mm-hmm so given these nine lines
49:42 - of code which ones should we adapt to a
49:45 - method and what should we leave in May
49:55 - love letters now I think you're making
50:09 - friends with Joel Alex you can go to the
50:22 - Help Center I'm blanking on the URL but
50:26 - yeah it's help duck code CAD me calm yes
50:31 - and then you can ask a question there
50:33 - mm-hmm well you can it's like a fact
50:35 - basically like sending us an email yep
50:39 - from that you able to find help helped
50:43 - Codecademy dot-com mm-hmm Slayer
50:46 - princess total area could be a method
50:49 - and total cost to be a method perhaps
50:51 - yeah mmm-hmm that makes sense
50:54 - sounds good to me so total area would be
50:57 - you put in I guess I don't know what the
51:02 - input would be but it would be output
51:04 - the total area of one floor plan I think
51:09 - and same with total costs I guess total
51:11 - cost the input would be area and the
51:13 - output would be costs
51:20 - and you also want to add to that I'll
51:22 - explain maybe a different option right
51:30 - so right now in Maine
51:33 - to answer my own question in Maine
51:36 - there's nine lines three for each floor
51:40 - plan because we're calculating an area
51:42 - of three floor plans the code looks very
51:45 - repetitive so you can see that like in
51:48 - the second line double total cost equals
51:50 - total area for example that's everywhere
51:52 - in this one in this and this one and
51:55 - this one so one way that we could change
51:59 - that is pull that out into a method and
52:01 - create a method that takes in area and
52:03 - returns costs and then just call that
52:05 - method three times we could do something
52:08 - similar with area that would be a little
52:10 - trickier now we're gonna focus on now
52:13 - could also put calculating total cost
52:15 - and printing out in the method together
52:17 - yes
52:18 - right so again console without right
52:20 - line is another line that's being kind
52:22 - of duplicating huh
52:24 - and I was tempted to do that too when I
52:27 - first designed this project so I never
52:30 - talked about this a little earlier we
52:31 - actually prefer to keep all of the
52:34 - consul's outright line all the console
52:36 - methods in Maine yes and that's kind of
52:40 - a separation of concerns concerns right
52:43 - so that way you're only returning values
52:45 - from your method so you could
52:49 - console.writeline those values or you
52:52 - could save them to a variable and use
52:53 - them in some other way but if you put
52:55 - the console dot write line into the
52:57 - actual method itself and then that's the
52:59 - only thing that that method will be able
53:00 - to do yes if you think about it like if
53:04 - something to go wrong something were to
53:06 - go wrong in printing things to the
53:07 - console you only want to look at one
53:09 - method that's dealing with all the
53:10 - console stuff rather than having to
53:12 - search through all your methods which is
53:14 - why we like to keep it all in one place
53:15 - and that's like the concern totally
53:19 - what's gonna do a little time my first
53:21 - second if you wanted to do this part
53:23 - first because then that might make sense
53:27 - for the refactoring but if you want to
53:29 - do the refactoring first and then go
53:31 - into the interactive I see I see okay so
53:37 - you're saying like instead of doing this
53:39 - putting in doing it all up there first
53:42 - like doing this part up there yeah yes
53:46 - okay yeah more sense unless we'd have to
53:50 - then adjust what would happen in that
53:51 - particular method right but I think
53:54 - you're right okay so we're gonna go
53:58 - through with something similar to what
54:00 - Slayer princess is describing like
54:02 - separating the total area calculation
54:04 - out the total cost calculation out and
54:09 - we'll do that after we do some little
54:12 - interactive like behavior with this app
54:15 - essentially we want to be able to type
54:16 - in Taj Mahal and you'll calculate Taj
54:19 - Mahal
54:20 - exactly so like we mentioned I'm sort of
54:22 - very very early on typically when you're
54:25 - writing a program it's not necessarily
54:26 - for just yourself to run but also for
54:28 - another user to run so we want to do
54:31 - with this program is package it in a way
54:33 - that there's an actual user experience
54:36 - so that if someone were to type dot run
54:39 - into the console instead of just giving
54:42 - a value with no context it would
54:44 - actually ask you hey which building of
54:47 - these three buildings do you want the
54:50 - total area and cost of flooring four and
54:53 - then your user can choose and then the
54:55 - program will output an answer user
54:58 - interaction yes so if we want to make
55:03 - this program interactive what are we
55:06 - going to need to add to our program to
55:09 - both ask the user for a value and then
55:13 - determine what that answer is what that
55:17 - value is and give them the appropriate
55:19 - output so that's a question to y'all you
55:24 - could write in the chat what are some of
55:26 - the things that we may need to add to
55:28 - our program in order to make it
55:31 - interactive for another user to
55:33 - experience yes he said read line
55:39 - definitely yes so again as a little
55:42 - refresher we have seen console dot write
55:44 - line but we can use console dot readline
55:46 - to read in information that someone
55:49 - types to the console so whatever they
55:50 - type in and then press an enter so
55:52 - that's great
55:55 - which yes FF JC that's gonna ask the
55:58 - user for input so what we could do is
56:00 - even before a read line could put
56:02 - another write line that says you know
56:06 - hello welcome to our area calculated for
56:09 - program computer which area would you
56:16 - like to calculate today or which
56:18 - building would you like to calculate the
56:20 - area for today and then we can list them
56:22 - out and then like Junie said then we're
56:26 - gonna read line we're gonna capture that
56:28 - information but then what so how is it
56:34 - basically what NICs asking is how is our
56:36 - program going to respond how is it going
56:39 - to know if Nick types in oh I want the
56:42 - area for Taj Mahal you know right now we
56:45 - just have three different ways that were
56:48 - you know calculating area how does it
56:51 - know how to choose which one of these
56:53 - outputs to put out because we don't want
56:55 - to print out all three of them how do we
56:56 - select just one of these outputs so Judy
57:03 - is saying that we're storing as a
57:05 - variable so yes we're gonna want to
57:07 - somehow capture what our user response
57:10 - is and in a variable S format so Tetsu
57:20 - says a method per shaped so we we do
57:22 - have methods already for calculating
57:24 - each shape FA asked what if the user
57:27 - types a string so actually everything
57:32 - that gets returned from a
57:33 - console.readline is technically a string
57:35 - if you look at some of our earlier
57:36 - lessons we talked about if you need an
57:39 - integer output from a red line how to
57:41 - convert that but we're I think gonna ask
57:43 - them to type out a string anyways yeah
57:46 - and Ted so - I think we
57:49 - method per shape we already have methods
57:50 - for a rectangle triangle circle you
57:52 - might might be talking about like a
57:54 - method per floor plan mm-hmm which is
57:56 - also something we could do mm-hmm which
58:00 - could help but again it doesn't solve
58:02 - the problem of choosing one yeah so how
58:06 - do programs make decisions delays yeah
58:20 - okay yeah all right all right here we go
58:25 - here we go so we had a junior a a if
58:29 - statement and slayer princess right in
58:31 - if-else loop so we're starting to talk
58:33 - about conditional statements you got it
58:37 - guys that's exactly what we're looking
58:39 - for so we do want to use some type of
58:43 - conditional statement to help our
58:46 - program decide what output there should
58:49 - be so if statements are one option using
58:54 - if else if we really have kind of four
58:58 - choices that we're looking at right now
59:00 - right so we have three buildings so they
59:04 - can choose between one of those
59:05 - buildings but we also want an option in
59:07 - case whatever response we get from the
59:09 - user doesn't make any sense right we
59:12 - want to start thinking about the user
59:13 - experience we want the program to
59:15 - continue even if they don't have you
59:19 - know a correct answer so Junie says
59:23 - switch case default yeah that's exactly
59:26 - what we were thinking because you know
59:28 - once you start from me once you start
59:30 - getting beyond three options in terms of
59:32 - making a decision writing those if
59:34 - else--if blah blah blah statement starts
59:37 - to get just too verbose and there's a
59:40 - lot of room for potential error whereas
59:41 - a switch case is really nice
59:43 - particularly in this case because we
59:45 - aren't you we don't need any logic right
59:47 - we're not checking a specific condition
59:48 - necessarily we just want to know one
59:50 - answer and that's our case and then we
59:53 - switch on different cases yeah so so
59:57 - right
59:58 - Junius and Slayer princess both of those
60:01 - work in and
60:02 - cows loops and switch-case those those
60:06 - work we're gonna prefer switch and we
60:10 - can talk about that once we we type it
60:12 - out I think would make more sense yeah
60:13 - sure so why don't we go ahead with that
60:16 - yes yes so above this I'm gonna say
60:20 - we're gonna like we said ask for user
60:22 - input mm-hmm console.writeline which
60:27 - monument would you like to produce would
60:30 - you like to work with okay and then
60:37 - we're gonna and that and then we're
60:40 - gonna capture the input whatever they
60:42 - say using a console dot readline yep so
60:46 - thanks for to the folks who said console
60:50 - dot refine so I also said store it Junie
60:53 - said store it as a variable uh-huh so
60:55 - it'll be a string like we talked about
60:57 - so string let's call it choice okay and
61:04 - then somehow we do an if switch on that
61:08 - mm-hmm
61:09 - okay so I'm imagining that what they're
61:13 - gonna put in is teal to work on Taj
61:16 - Mahal or Great Mosque in Mecca those are
61:19 - like the three choices we could do an
61:21 - if-else
61:22 - so if choice equals this then do that
61:25 - else if choice equals this do that
61:28 - because it's not really like a condition
61:32 - it's just a value or just it just
61:34 - depends on the different values switch
61:36 - is a little easier to read for that kind
61:38 - of like statement absolutely let me let
61:40 - me show you what that looks like so
61:42 - switch statement uses that switch with
61:46 - font choice mm-hmm and then in here
61:50 - we're gonna put our different cases case
61:54 - 1 if choice equals tayo tu con then
62:00 - we're gonna do some stuff and what we're
62:03 - gonna do is calculate total area let me
62:07 - copy this
62:10 - and let's just use that for now okay and
62:15 - then break because we want to in that
62:17 - case then we'll do it two more times so
62:21 - case for Taj Mahal mm-hmm well Nick is
62:28 - writing out our switch statements yeah
62:30 - Alex we're at this in the the chat but
62:32 - another good use of if statements would
62:34 - be to check to make sure that shapes
62:35 - aren't negative numbers so if for
62:39 - example we were again asking for a user
62:41 - input and you know making sure that we
62:46 - can validate whatever our values are you
62:48 - are going to be that's a really good use
62:51 - of those statements conditions in
62:55 - general okay and then we need to default
63:02 - because there's a chance that the user
63:03 - doesn't pick any one of these three
63:05 - choices mm-hmm so let's just say that
63:08 - the area equals zero
63:17 - so I need to change up my code a little
63:20 - bit now that we've put it all together
63:23 - in a switch statement mm-hmm we want to
63:25 - go back from from a three variable kind
63:27 - of world to a single variable kind of
63:29 - world because we're only doing what at
63:30 - the time yeah so I'm gonna define what I
63:34 - need here which is a double total area
63:36 - and then just set it equal in all of
63:39 - these cases very good so instead of
63:42 - defining like a new TM breach against
63:45 - are already starting to refactor a code
64:04 - okay so let's read through what we have
64:06 - here which money would you like to work
64:07 - with ask the user then we capture the
64:10 - choice then we define a double which is
64:13 - a total area and then depending on the
64:15 - choice we set total area to a different
64:16 - value yep and then yep yet if none of
64:21 - them are right then it's zero and then
64:23 - we calculate the cost and print out the
64:25 - cost so let's see how we're doing let's
64:29 - take a little pit stop again if you have
64:32 - any questions a great time to to ask
64:35 - them in the chat yes so J TV that is a
64:41 - good question it's always good when
64:43 - you're designing these programs to think
64:44 - about what could go wrong and think
64:47 - about the user exactly different edge
64:49 - cases so we can't always assume that a
64:51 - user is going to type it in the exact
64:52 - way that we expect them to yeah we love
64:56 - our users but sometimes they make
64:57 - mistakes user errors or real thing so we
65:00 - got to prepare for all of those lower
65:01 - case is yes a big one right now there's
65:05 - another issue that I'm running into this
65:07 - question which one you would you like to
65:08 - work with I don't know what my options
65:11 - are if I'm a user and I didn't build
65:12 - this program how much I feel tower yeah
65:15 - and then what happens there good zero
65:18 - that's not helpful so let's explain the
65:23 - options to them yeah I think so so what
65:25 - we can do is that in our original
65:27 - console don't write line statement
65:28 - can actually tell them what their
65:29 - options are so they know what to choose
65:35 - because also come without actually
65:39 - seeing it in front of me I'm very
65:41 - impressed that Nick has gotten very good
65:43 - at it I'm also okay so now we have those
65:52 - options great and if I were to do the
65:54 - right one like Tod walk on I would get
65:58 - the value yes so that code in the switch
66:02 - statement is being evaluated just this
66:04 - first one cuz it's just that one case
66:07 - okay lower case lower case yeah so now
66:13 - we're saying if it was lower case T Tod
66:15 - wakhan obviously that wouldn't match any
66:18 - of the cases yeah because none of those
66:19 - exist here computers are extremely
66:22 - literal and while we would be able to
66:24 - tell the difference between tio tio con
66:26 - in title case or upper case or lower
66:28 - case a computer wouldn't be able to so I
66:30 - think what's always good to do is just
66:32 - take whatever it is and then change it
66:34 - to the case that we want to check on yes
66:36 - and we can do that with a method to
66:41 - lower mm-hmm
66:43 - and that's just a string method so
66:45 - choice is a string you can use that
66:47 - method so in here instead of Patchett
66:49 - passing switch choice I want to pass it
66:52 - choice dot to lower okay so if I were
66:56 - gonna if I said like Taj Mahal capital
66:58 - case it would send Taj Mahal lowercase
67:04 - oh so you know semicolon you right
67:07 - parenthesis and then now we're matching
67:13 - on lower case yeah great
67:22 - you could also do again the opposite you
67:24 - could switch everything to uppercase
67:25 - let's say run this one more time dot net
67:30 - run mhm and yeah what's trying to break
67:32 - it
67:33 - lowercase Taj Mahal so where's can't
67:36 - break me let's try what did they call
67:46 - that again random case so you're saying
67:51 - like alex is suggesting try to do like
67:54 - Tosh like we're back in middle right yes
67:58 - which I guess is technically Taj Mahal
68:00 - yeah it works
68:01 - BAM yes cool um great don't see any
68:08 - other questions so I think let's return
68:10 - to our previous conversation about
68:12 - refactoring using methods yes and we're
68:16 - a little low on time so I think maybe we
68:19 - should talk about it we won't actually
68:21 - run through it but we'll talk about it a
68:22 - little bit yeah so right we've done a
68:27 - lot so far we have done we got to the
68:30 - conditionals yes which was important
68:32 - which was important we define three
68:34 - methods to calculate rectangle circle
68:36 - and triangle so we learned how to do
68:37 - some basic methods we talked about
68:39 - returning the double we technically
68:41 - talked about static but we're Naurang
68:42 - that for now we use math dot pi and math
68:45 - dot pow mm-hmm
68:47 - and then in main we asked for user input
68:50 - with read line or with write line we
68:52 - captured it with read line and then use
68:54 - a switch statement to do different
68:56 - things depending on a user input and we
68:57 - considered some edge cases for what user
69:00 - input could be and took care of that
69:01 - with two lower as method yes and this
69:04 - next part that we're not going to do but
69:06 - we're going to talk about is refactoring
69:08 - this into a method mhm
69:09 - so instead of putting all this code in
69:12 - main we can break some of it out into a
69:14 - method mhm so that we can easily test it
69:16 - and keep it separate if anything were to
69:19 - go wrong and so I guess the question is
69:26 - what is the input and output of this
69:28 - method if it's gonna be a method
69:31 - obviously we want to get the total area
69:33 - out
69:34 - so this method is gonna return area but
69:38 - it's gonna take in what should be the
69:44 - choice should be the choice right so
69:47 - this method will take in a string that
69:50 - says table to become Taj Mahal agree mas
69:52 - Mecca and then return a number that
69:55 - equals the area of that place returning
69:57 - a double yes again and what it would
70:01 - look like sort of is kind of wrapping
70:03 - this switch in a method and then just
70:08 - calling that method from me so I think
70:10 - we're gonna leave that up to you to try
70:13 - some another good extension yes another
70:18 - if you come up with some cool ideas on
70:22 - how to do that making this more
70:23 - interactive handling different edge
70:25 - cases maybe be more clear with what all
70:27 - this output means maybe selecting a
70:30 - different
70:33 - currency different currency thank you
70:35 - yeah all those things you can do now we
70:38 - talked about absolutely we even said it
70:40 - could be really interesting if you could
70:42 - figure out a way of doing it where you
70:43 - could like ask for shapes calculate a
70:47 - floor plan based off of what shapes
70:49 - there are in it these ones but you've
70:54 - got a lot of things at your disposal now
70:56 - and we're really excited to see the
70:58 - other things that you built yeah if you
71:01 - wanna aapko academy on twitter we'll see
71:04 - those there yeah and then in facebook
71:08 - and CLL you can send those there if you
71:11 - want to share some stuff and if you have
71:13 - questions or ever get stuck those are
71:14 - great places to go as well yeah
71:16 - absolutely yeah so sounds like we're
71:26 - getting back into the jive of live
71:28 - stream so our folks from our ena Natalia
71:32 - are going to be doing a live stream next
71:34 - week on Monday at 1:30 so you should
71:36 - definitely check that out our our
71:38 - content is awesome yeah and we really
71:42 - appreciate everyone
71:43 - been working with us super rewarding for
71:46 - us to like start to teach the content
71:48 - that we have just been writing our tasks
71:49 - for a while it's really fun we talk
71:54 - about that sometimes but like a lot of
71:55 - us are former teachers or have been in
71:57 - the classroom before and we really love
71:59 - the opportunity to put our content in
72:02 - front of y'all and interact with you and
72:04 - see how brilliant you are and have you
72:05 - answer our questions so thank you for
72:08 - joining us today on the live stream we
72:10 - can't wait to see you again
72:11 - be on the look out in a couple of months
72:14 - for even more c-sharp content we're
72:17 - starting to get into some more
72:18 - intermediate concepts like classes and
72:22 - objects and of course we're still got a
72:25 - cover raised and loops so don't worry
72:26 - about those they'll be coming your way
72:28 - soon as well mm-hmm any last questions I
72:35 - think our friend Alex Koons can answer
72:38 - some of the ones that are in there now
72:40 - but otherwise yeah thanks that's it
72:45 - thank you so much and again live stream
72:49 - is gonna be recorded and up on YouTube
72:51 - for you to watch later yes any of it if
72:53 - you have any good feedback or bad
72:56 - feedback Alex posted in the chat from Co
73:03 - Academy you'll see a chat with a link to
73:06 - that doc exactly all right
73:08 - okay everyone thanks

Cleaned transcript:

all right we are screaming doing it live yeah hi everyone I'm Zoey I'm Nick and we are two curriculum developers here at code Khadem II and today we are going to be doing a live stream about our latest csharp content conditionals and methods yeah so to give you a little context on what's been going on with csharp Academy we have just produced four modules and they cover data types and variables operators how to read and write to the console conditionals and methods so that's all out there if you want to take that we're focusing on conditionals and methods that were released this week yeah and we're gonna do one of the projects from those modules so the project that we're doing is called architecture arithmetic and the idea behind it is that you get a blueprint and you break the blueprint into different primitive shapes like rectangles circles triangles and then you create formulas for calculating the areas of each of those shapes that may be familiar from math class but don't worry we also provide you with the formulas and then you use methods to put those formulas into use right so the way it's gonna work we're gonna be coding along which you should be able to see behind us and we're working on the code Academy site if you want to watch the video that's in YouTube and you can chat also in video on YouTube so go in there introduce yourself if you have any questions about csharp or you want to share why you're here we love to hear about that and it can help us develop what's coming next and what else yeah we'll be asking questions we want this to be an interactive process we want this to help you and be useful to you so let us know if you have questions and the project exists also available to you in the links below the YouTube video absolutely yes so before you get started just want to give you quick few shout outs to everyone who's here with us today thank you so much for joining us it's been a little while since we've done a livestream because we've been releasing a lot of different content on codecademy our skill paths just came out so you should check them out but this is the first time in a little while that we've released a real new set of lessons a new set of projects so it's awesome to see everyone here let's see we got amo Victor Emma doordie Wow okay slay your princess that's a really good one that's all my gamer tags for the rest of time that slay your princess me fight you for that that's true this team like they've got that guy probably have it all over absolutely Laurens hello Tetsu and Tim Arturo hello seeing some questions already in the group chat which is awesome so we'll be answering those as we go along we also have the ever wonderful Alex Koontz behind the screens can't see a man behind the curtain and he will also be responding to your comments in the chat under the code Academy name so cool hello Monica sparks cool what is sparks cool I don't know yeah if you can explain a little bit more we'd love to hear why why they sent you here but also what you want to get out of it there's a question from Tim is csharp used for mobile app development yes csharp is really cool it's like a really good investment and learning I was talking to someone earlier today about like while in csharp and why is it why is it hard for some people to start it is one of those languages that has like a high ramp up and it's a high cost but high reward first for me at least in my experience there's a lot you need to learn to get good at csharp but once you do it's a really powerful language it works really well for large application there's a lot of jobs for it and you can do pretty much anything yeah so not only can you do web development but you can also make desktop applications web applications or mobile apps my favorite one to always shout out is you can games and virtual reality applications using unity and csharp yeah Internet of Things Internet of Things yeah it's one of my favorite technologies you can do Internet of Things so yes we are developing csharp and Mac or PC came a question from FA JC we are actually both using Macintoshes right now you can develop csharp on a Macintosh on a PC you can even do it on a Linux based operating system now all of that comes from well we're using the Visual Studio IDE and there are different software downloads based off of your operating system we actually included information on the csharp course in an article about downloading Visual Studio for csharp development so all that information is there so I guess we're ready to get started with the project awesome yeah let's talk about why we wanted to do this project on the live stream yeah so the project we're gonna run through the project and then we're gonna extend it by adding some some making interactive essentially so this project is a good example of how to use methods so methods and conditionals are something really important to all programming languages but allows us to for conditionals allows us to make decisions with our program so it may do different behavior based on different based on our input for example methods are how you make your code reusable and organized and modular so rather than having one huge page of code there's one bug you have to search through the whole thing you can break it up into parts that make sense so you come back to it later you can say like I understand that this deals with one concept this deals with another concept and you can use those like building blocks absolutely what else some of the outcomes from this project we're looking at a process that is very repetitive you know having to calculate areas you know different floor plans so one great thing about programming is you can write a program to automate different work that you have so imagine that you actually were in a I don't know construction contracting business and you're regularly you know calculating the amount of tiles let's say that you need to use for a house and it would be great if you could write a program something like this I would say okay no matter what the size of the house is I can break it up into these different shapes and to put my numbers in and then come out with the exact dollar amount that I wouldn't need to have in order to purchase my tiles so it's cool about this is that in addition to automating repetitive work we've actually are going to show you how to turn this into a interactive console application so it's not just a program that's gonna print information to the console but it's actually going to be a program that another user could make use of so most of the time when we're interacting with technology you know we don't see all the code behind it in the program we're not just writing programs that we can run for ourselves usually there's some kind of user experience so we're gonna show you how you can start adding user experience to your projects yeah and if you're wondering if this is the light right livestream for you if you're just beginning csharp or don't know it this is still a great chance to talk to us about it but also learn what it can do if you are already familiar with csharp we're gonna do be doing some refactoring and thinking about how we write our code so that's gonna be useful to anyone who already has experience on how to write better code okay pretty much it we're gonna assume that you have a basic knowledge of data types whether that's in csharp or maybe another programming language so again boolean's integers strings and also basic operators so you know addition subtraction I don't think we were doing anything with logical operators are we no okay so pretty straightforward but again we're gonna be walking you through it so if you have any questions please put them in the chat I see Alex start answering some thank you Alex and we'll take time to stop periodically and make sure that we answer as well yeah a csharp primarily a frontend or a backend language so like we said csharp can be used for everything it's sometimes called the backend language though I wouldn't consider it just back end but it's considered back in because you can't write out like what a web page looks like listen you need to use something like HTML and CSS and when it comes to writing like with xamarin when you're writing mobile applications you have to use another markup language like HTML and call XAML so it's primarily backend but if you're building anything useful you're gonna need a phone in it back end so csharp is still gonna play in there yep is csharp the same as csharp from Nadia yes that kind of sounds weird when I'm saying it out but yeah so funny story for those who don't know the origin of the name csharp you may notice if you're familiar with music it looks like a musical note and that's because that's where it comes from so there is the original language C and if you're familiar with the language C++ and the idea of what plus plus means and programming it means one more than the previous amount right so C++ is one version better than the previous C in music you have a particular note like C and then a sharp is one up from C so similar to C++ being one more than C C sharp is also one more than C mmhmm so you can write it as C sharp but typically you see it with like the actual sharp symbol which we use the pound sign or a hashtag sign technically there's a specific symbol for it right it's kind of hard to find so yeah and the last thing about languages Java is very similar when I look at it they look very same on paper at first yeah they are slightly different and they do have different communities and different frameworks csharp is supported by Microsoft so a lot of all the documentation supported there and I personally like it for all of like kind of the tools and frameworks around it we could get into like design of the specific language but starting out it's not too much different and I actually another fun background story in csharp was that Microsoft basically wanted Java and Oracle was like no and so the developers were like fine we'll build Java but better so that's why there are a lot of similarities between Java and csharp because they were designed to do very similar things yeah okay cool let's hop into it so yeah so just a quick rundown of how this lesson is going to go we're first going to run through the project as it exists on the code academy website so again that's linked below the YouTube video you know if you need to find it after we go through the version that's on code Academy and through all of the steps that you see there we're gonna bring in some of the extensions that are actually in the last step so we'll go over those extensions and then you'll start to see how we're actually going to bring in conditional statements into this project cuz this project is primarily just methods at first so architect arithmetic the idea behind this one is that were given a floor plan and the example here on the left is the pantheon of some monument and we need to calculate the area and then calculate the cost of like flooring that area if we imagine like the Pantheon it would be all tile so if we know these like general shapes that looks like there's sort of a square at the bottom and then sort of a circle we can estimate by breaking those down and those calculate the area of those things is very easy we could do that for all kinds of different floor plans and we're gonna use csharp to automate that process so we can say we want like one rectangle one square of this size and this is what the area is gonna be calculating so you can see like for example how it's broken down for the Pantheon yes circle and rectangle exactly and don't worry if you don't know those area methods we're gonna be giving you those absolutely cool so let's get started first we're gonna need to define these methods so I am going to make this a little bigger for everyone to see okay and come over here yes so the first is rectangles just area equals length times width so we want a method that takes in those two values and outputs an area so one one do in my program that CS come down here and define a new method and we would love to hear from you about how you think you could turn that specific formula into csharp syntax as a method so do you want to start by writing the method signature and then we can look in the chat and see how you think you could term area equals length times width into csharp syntax for a method and shout out to Slayer princess by heart thank you for repping csharp and providing some really great information about why it's such an awesome language to learn first really appreciate that hello Foster thank you for joining us today and we know there's a slight delays yeah I'm just feeling the baby time basically we're asking given that in Formula on the left area equals length times width how do we translate that into a method mmhmm what what what should I be writing to do that give people a minute mmhmm so fun fact I guess typically we do our live streams on Mondays but we are doing it on a Wednesday because Nick and I are basically ships passing in the middle of the night this week I just came back from a wonderful vacation and Nick is about to leave for a equally wonderful vacation yes so it's a special Wednesday for us to do a livestream yeah it's hard to get us in the same room so as to return length times width gotcha okay so length times width would that be a variable to find outside of the method would it be arguments the method like where am I getting those so I can I can start with that yeah let's do that so again when we use the keyword return in a method we're saying that we are actually returning a value from that method that we can use outside of that once we initialize it yeah give people a little bit longer to answer that so fa JC says does that mean rectangle returns a double yes you are correct in that as we see in the method signature we're gonna skip the static part for now be on the lookout in later lessons to learn about those but double is the return value and so we state that in the method signature good job so Monica is correct once we create the method we can use the value that comes out of it with the return statement when we call the method so Tetsu says length and width would be arguments Nadia's response is double rectangle rectangle equals length times width okay so it looks like there we're defining specifically a variable named rectangle that would be a double equals times width yeah so I'm gonna run with sets of two's answer and we're gonna test it out and see all right thank you all for offering your ideas in the chat we're gonna periodically stop and ask for more though so be on the lookout yes so yes and Daniel you write arguments to the method so what I have here now is this static double rectangle mmhmm so rectangles method name takes two arguments which are just the inputs length and width and both of those arguments are type double which means like a decimal number like 10.5 and then it just returns the product of those two length times width so if I went into my main method I could test this out okay so I'm just console writing to the console and I'm doing a rectangle and let's just come up with some numbers 30 and 5 so I expect rectangle to take 30 and 5 30 would be the length this would be the width returned 30 times 5 which is 150 so let me say that I don't know I was impressed by how Nick takes care of all of them ok so now I'll put in another screen down here in the projects window you have all these the top is the text editor bottom is a terminal or a console to run all the code that we're writing we just do dotnet run we're press ENTER here and then it writes 150 like we expected so now we know rectangle was that method is working like we wanted to and we can call rectangle again and again to calculate all sorts of areas of rectangles awesome so here we are we've got our first method working yeah let's keep going okay yes you're right okay so to write further confuse everyone let's just do this I'm adding a point zero to each of these really make sure we're using that decimal that a double gives us dot in that run it's the same so C sharp is doing two things here one of them it's assuming when we say 30 that it's gonna interpret it like a double so like 30 is really 30 point0 and then it's multiplying those together and returning 150 point zero zero then when it's passed the consul's outright line to write to the console csharp again is saying like we know you don't need those zeros we're just gonna take them off for you 150 s there yeah so yeah the whole time it's doubles csharp is just taking care of that for you how nice I know really great okay circles circles right so now again the formula for this one area equals pi times raised mmhmm so now you have a bit of experience with this let's see how you think we could create a method for defining the area of a circle I'm gonna start off again with this double circle why do we use the static keyword I tried my hand waviness of it I ignore this hey but that's fair yeah so I don't I can explain it to you you may not be like prepared based on what we've taught so far in csharp which is okay and in the next set of modules it's all gonna make sense but the short answer is that we are running all of this within the program class and circle is a method of the program class because you can see it's like within the class program there normally we'd have to create an instance of that class to call any of those methods because their instance methods by default but we want static we just want to call it just by its name rectangle you don't want to say like program dot rectangle so we put that static there that allows us to do that for now when we're learning methods it's just kind of easier to put everything static and then you just use the method names and then we get into more advanced things you'll see why why we would want to do static or not do static absolutely yeah okay so still looking for some answers in the chat the radius of the circle as argument and return pi times R times x okay any other ideas I'm learning things from Slayer princess right now mmhmm mrs. flavors from both Java other C languages yes for sure I agree with all those things yeah I guess we should go with Abby all right we're gonna go with you okay so PI times R squared which is yeah like kind of what the formula looks like makes sense the trick with this is that pi we have to access we can't just do 3.14159 because it's not quite PI but C sharp gives us a constant math dot pi which I can just say like math like this mmhmm yes Monica right on yeah so that's we're gonna go forward with my sayso math dot pi times radius yes and this looks like we're doing our I'm gonna spell it out just for clarity radius and we're doing x times so yes so x times works in some cases but it's safer to use math dot pow mmhmm I forget why at the moment it has to do with backwards compatibility okay oh you know what I know I'm thinking of JavaScript Oh [Laughter] but again so these are both methods that are part of the math class that you can look up in the Microsoft csharp documentation I believe are they linked in the hint there okay and so again we can use math dot high to represent the number pi and rather than using another form of you know operators you can just use math pow so how do we use math again right so matha powell is a method and we just read I'm gonna have spacing so we write it just like math how we see in text then within there we put radius because radius is what we want to like square put to some power and then a second argument we need the number of times to multiply the exponent power that we're gonna raise it to we want radius to the power of two mmhmm also known as square yes okay and there it is right we're not gonna test this one because we're gonna be able to test it in a little bit so let's move on to triangles cool I think for the sake of time I just I'm gonna write this one out okay that's okay so pretty similarly area equals 1/2 times bottom times height it was just another formula so it's gonna look pretty similar static double triangle again I'm gonna need two arguments the bottom and the height mmhmm everything is a double for now okay then we're gonna return half times bottom times height so now we have our three methods and now we can test them like because we've written a bunch of code now we don't want to get lost in bugs later on so we're just gonna try it out exactly always good to test your code and what's great about methods is that they provide a really simple way for quickly testing your code because you can isolate different aspects of your code and then run them each one at a time with different test cases right so what we're gonna do is just a few test cases we're gonna give each of these methods an input and we know what that expected output is so we'll just check that that's log to the console absolutely so and yes Monica is really good to know what math class functions you can use definitely recommend checking out the documentation again and seeing what sorts of things are available to you like square roots for example there's no real operator that we can use in our program so while we could simulate raising a number to a certain power it's much you can't really do that with the square root so yeah that's a different functionality so cool let's do each of these examples on the left so it says a rectangle with a length of 4 and a width of 5 has an area of 20 because 4 times 5 is 20 so let's just text I'm gonna say 20 question mark actually yeah let's just do rect area okay then we'll call that mat yes rectangle 4 and 5 okay and then we'll repeat this for the next two mmhmm so double circ area equals circle 4 and area with a base of 10 okay so we're calling three methods and we have an idea of what those values should be so let's just print them out and make sure should be this one well Nick is finishing that up I saw a question from Nadia who asked if this live stream is being recorded and will it be available in the csharp class for viewing yes so all the live streams are recorded and there's actually a separate part of the catalog that you can go to that just says live streams on it maybe Alex you could link to that in the chat and it has all of our past live streams on there so other csharp live streams but also ones for other domains like R and Java and C++ so you can find them there there's also a YouTube playlist so if you subscribe to our code Academy Channel check out our playlists you can find we're live streams that was just like the most I've ever come to becoming like a youtuber I think so we're gonna save ourselves from embarrassment we're gonna test these three methods what I've done is I've called them and then print it out the values so I'm just gonna run the program lets out that run again uhhuh should be 20/20 should be fifty fifty point two six five four eight one should be 45 45 mmhmm okay so here's a good question it looks like 20 and 45 are integers hmm no decimal it looks like 50 is a decimal mmhmm and see trap we call that a double why why is that I'm asking all of you let me know what you think that that reason is every time that we ask these questions the Jeopardy song plays invite yeah yeah yeah we should have it your own version should get you to do something he's like an electronic experimental okay right let me be more clear so why does 50 point to 65 this middle value why does that look different than 20 and 45 I thought rectangle circle and triangle all returned double values yet I'm seeing an INT a double and an int so what's going on there is it because pi is a decimal that is part of it yes and double is floating yeah double is a floating point number did you hear about how this guy had been on a streak on Jeopardy and he was trying to beat the previous person who had big wins yeah and he got like really close to breaking his record I think the previous person's record was 5.45 million and he was like five point two five or two six or something and this red 27 year old librarian Wow and she wrote her master's thesis on Jeopardy whoa has been like trying to get on Jeopardy for years and she didn't know because the way they filmed Jeopardy they do like multiple shows in a day so she didn't really she wasn't super familiar with that this guy was going on a long streak because I guess maybe when she recorded it was before all the press had come out so she didn't realize that first that she was gonna yeah be the one who took up down Wow she's also from outside of Pennsylvania too and outside of Philadelphia Oh super yeah librarian in the Philadelphia area when we talk about Jeopardy Alex you can see but Alex is like yeah I know okay so we're getting some answers could it be because you used a function for math class which returns value with more accuracy so it looks like POW function or the other one yeah I can pull that back up right so I think you're thinking map that pie or math that Powell yeah so you're both onto something with this math and like what it returns and because pi is a decimal so like we said before csharp is gonna print out any decimal if it's a decimal without sorry a double with just point zero zero zero it's gonna reprint it as a reformatted it as an integer which is why we saw 20 and 45 but with circle which is that middle one you're right math dot pi is not a point zero zero number so circle returns something like fifty point two five whatever csharp isn't going to reformat that because it knows that those values are important yeah so it's not going to cut those off so what's happened in the background they're all doubles all the methods mattify matha powell double circle rectangle circle rectangle triangle all returned doubles it's just a matter of how they're formatted in screen cool let's keep going yes let's get into actually applying these methods yeah so I saw someone before mentioned that they started to see how this could all come together mentioned something I think that uh Monica said for finding surface area would just add all three areas cool yeah that's it so now that we've combined all these shapes together or now that we've calculated all of these shapes I should say now you could combine them together to find the total surface area yeah so we're gonna do the ancient city of Teotihuacan which is in Mexico City and it's it's very big it kind of looks like this shape that we have on the right here and we're gonna break that down into triangle circles and rectangles to use these formulas so our next question to you what do you see in this shape how many triangles how many rectangles how many circles do you see in the floor plan on the right exactly and sidenote I'm really excited because I'm going to Mexico City next week I did just get back from vacation away again and hopefully going to see Teotihuacan in person yes which is very cool yes I already told you about the sunscreen yeah Nick went to Mexico City earlier this year so he's been giving me some tips saying gotta bring plenty of water sunscreen because I guess what's a little so we talked about this as a blueprint Teotihuacan is technically a city plan but it's I'll take the blame for that one and so in our imaginary idea we are totally you know tighly which hopefully will never happen well they'll be were reading about it on Wikipedia and apparently they built a Walmart like nearby were you there for I think that they had those had the rights to fill them all know what happened they said that when they were digging stuff up they found pottery so I don't know if they stopped develop No yeah interesting any case yes so if you also want to throw any Mexico City willing to hear them I've literally been just been getting recommendations from every single person yeah I know I'm there's so many eating tacos are drinking mezcal yes yes okay I think that's a great idea totally fine by me thanks Monica yeah catch us on the video later yeah thank you yeah okay so that's a one rectangle one triangle and half a circle yes that's what I see yeah if anyone else have anything else let us know if you think that and we can also try it Casa Azul that's um that's the critical thing right yes yes the blue house yes yes Tim hey Tim what's up today I'm actually staying in Quail con which is the neighborhood where the blue house is so very excited to check that out yeah let's run with Ted Stokes if anyone else has like different breakdown of this floor plan let us know I'm happy to try it we're gonna try Tesla's so I'm just gonna get rid of this cuz we know everything works mmhmm we're gonna say double total area so the total area of this floor plan is one rectangle plus what we say one triangle mmhmm plus half a circle so I'm gonna multiply the circle the result of the circle method with my five and then I'm just gonna look up forgot what the values are mmhmm so right this rectangle you can see two hundred two thousand five hundred and one thousand five hundred so this this are the arguments for the first but in the Triangle up on the left is 750 by five hundred and then the radius of the circle 375 yep all right so let's save that so now we can calculate the area if I were to run this code again mmhmm hopefully I'll see the value no I didn't because I'm just gonna let me crash on that one else once in a while once in a while okay so now I'm gonna see council write it wait wait oh I didn't say gotta say it again it's better work yeah okay yeah so it turns out it's like full 412 no 4 million yep 120 that wasn't 893 square meters square meters cool so now we've calculated total area mmhmm by the way if you want to see kind of like what chessick was kind of like breaking down in his head his or her head and my head as well there's a little diagram in the hint so it's there if you want to look through that calculate the area now we won't need to multiply it by the cost of like say like each square meter of fluorine if we were we're gonna floor the entire city say each one cost 180 pesos so all we need to do is multiply the total area by the like cost per meter square mmhm so we're gonna do that down here we're gonna say I'm gonna store that in total costs double total costs equals the total area times 180 and now I'm going to check that okay so we don't have commas but the four million square meters if it's a hundred 80 pesos per meter squared then it costs 748 million pesos hundred fortyone pieces yes right 742 corundum yep yeah to floor the whole place yeah if you could do some currency conversion for wherever you live and it's big and it costs a lot there you go okay moving on there's one last thing mmmhmm with this format so if I'm a user and I get this information like again I'm reading it as 741 million something something something point zero two one nine nine six pesos it doesn't really make sense mmhmm so we're we want to round that value just to two decimals are like Oh point zero two this will probably be we have another man utility for that called math that round so we're just gonna round I'm laughing it to round the total cost using math that round and it's just another method like using methods all days on methods on methods and we're just gonna pass it total costs okay so up here we're doing math round and putting total cost in that parentheses I needs one more argument which is how far to round it down mmmhmm I think yeah and you need a two so round it down to two decimal places let's check that that worked awesome alright there we go it worked so that completes the first part of the project which is what exists again here on the code CAD amis site we'll pause for a second see if anyone has any questions and then after we answer your questions we're going to move on to some of the extensions that again are in the last exercise below so feel free to put any questions into the chat and we'll take some time to answer them yeah I've seen a few things about audio will remember to speak up and if there's still issues try to refresh the page yes we'll try to do that yeah and again we super appreciate each of you not only talking to us in the chat but talking to each other in the chat it's really great to see people go in there and answer each other's questions and celebrate and support one another there's a huge part of the learning journey it's not simply about the teachers and the students but it's also working together with each other yeah absolutely oh yeah yeah great plug time for our communities on that note thank you Alex so code Kadim e in addition to having a great wonderful learning platform also has some really amazing communities and we have our forums which are on platform and everyone can take part in the forums and ask questions and answer questions look for support there we also have a Facebook channel that is again open to everyone so you can find our Facebook community group and then we also have our community code Academy lifelong learners slack channel which is available to our pro users and it's full of discussions about people looking for jobs looking for help on coding questions we do weekly chats that are all slack based chats so kind of similar to what you're doing right now on YouTube we also offer free first previews of our content and like a beta capacity so people can give the feedback lots of different ways to engage with the code Academy Kim so we hope that you join them on join us on top of them mmhmm let's see if we have any other questions thanks Joel for the vote of support we appreciate it cool Laurens here awesome so what are the basics for this if it's the basics for this project we'd recommend going through the first four modules of csharp which are currently on the catalogue now so that will give you an introduction to csharp working with different data types and variables along with now conditionals and methods I think we're ready to move on to the additional yeah I think so thanks I do appreciate it yeah thanks for joining us today and appreciating it okay so we're now going to move into the extension so if we scroll down it sort of got one these days it's like moving between laptops you can see that in our step 10 that we have extra challenge extensions so the first one of these is to make the entire program a method so that you can execute it in your main method with one line such as calling it as calculate total cost which is one we're gonna skip work so ignore that would you could do that one on your own that's all for you but we are gonna do is determine the total cost for was it two other yeah two other blueprints that you can see right here so the Taj Mahal and the Great Mosque of Mecca so similar to Teotihuacan we have provided you with blueprints and the measurements for different parts of the building which you can then use in your formulas so what we're gonna do now is we are going to also calculate the total costs for these two other buildings and then we are going to show you how to refactor this code and also how to make it interactive so another user could run it from their console cool okay so for the sake of time I'm just gonna pump out the two more areas alright just to calculate those pump them out yes so one quick way of doing it is we could just copy them right yeah exactly cool so do this and I don't need the total area here now I have three versions I'm gonna call this total area TM mmhmm yeah so I'm just making these new variable names so for TM the Taj Mahal is I look at this it's one rectangle with little triangles cut out in the corners hmm so I'm gonna say I'm going to eat all of this here so the Taj Mahal is really a rectangle of 90.5 by 90.5 uhhuh four little rectangle triangle so four times triangle huh and it's 24 by 24 okay so then multiply hundred eighty around it cool next Great Mosque of Mecca so I'm gonna add make these new variable names GMM okay this next one looks to me like let me pull this out like a rectangle on top mmhmm and then a bigger rectangle below it with a triangle cut out okay okay so first rectangle is 180 by 106 the next one is a rectangle of 284 by 264 that little triangle over there and that is 264 by 84 okay save that all right okay there we go so now we have our values and those are the costs for teotihuacan Taj Mahal and Great Mosque of Mecca mmhmm right now we're doing this all on the main method I'm gonna pull that up so you can see it all in here and it looks a little repetitive it's looking a lot repetitive yeah I just just a lot of the same I mean granted it's cuz we've copied it but yeah I think there's probably a way that we can reduce the amount of repetition that we have right now yes anytime I see repetition it just screams me either loops or methods mmhmm loops we're not gonna cover right now because we haven't covered that in the courses yet no but we are working on it we'll come on soon yes this one's a good case for methods which means we can bunch all of this code that's duplicated mmm throw it in a method and then just call that method multiple times yeah okay cool does anyone have an idea of what we should take out and put into a method mmhmm so given these nine lines of code which ones should we adapt to a method and what should we leave in May love letters now I think you're making friends with Joel Alex you can go to the Help Center I'm blanking on the URL but yeah it's help duck code CAD me calm yes and then you can ask a question there mmhmm well you can it's like a fact basically like sending us an email yep from that you able to find help helped Codecademy dotcom mmhmm Slayer princess total area could be a method and total cost to be a method perhaps yeah mmmhmm that makes sense sounds good to me so total area would be you put in I guess I don't know what the input would be but it would be output the total area of one floor plan I think and same with total costs I guess total cost the input would be area and the output would be costs and you also want to add to that I'll explain maybe a different option right so right now in Maine to answer my own question in Maine there's nine lines three for each floor plan because we're calculating an area of three floor plans the code looks very repetitive so you can see that like in the second line double total cost equals total area for example that's everywhere in this one in this and this one and this one so one way that we could change that is pull that out into a method and create a method that takes in area and returns costs and then just call that method three times we could do something similar with area that would be a little trickier now we're gonna focus on now could also put calculating total cost and printing out in the method together yes right so again console without right line is another line that's being kind of duplicating huh and I was tempted to do that too when I first designed this project so I never talked about this a little earlier we actually prefer to keep all of the consul's outright line all the console methods in Maine yes and that's kind of a separation of concerns concerns right so that way you're only returning values from your method so you could console.writeline those values or you could save them to a variable and use them in some other way but if you put the console dot write line into the actual method itself and then that's the only thing that that method will be able to do yes if you think about it like if something to go wrong something were to go wrong in printing things to the console you only want to look at one method that's dealing with all the console stuff rather than having to search through all your methods which is why we like to keep it all in one place and that's like the concern totally what's gonna do a little time my first second if you wanted to do this part first because then that might make sense for the refactoring but if you want to do the refactoring first and then go into the interactive I see I see okay so you're saying like instead of doing this putting in doing it all up there first like doing this part up there yeah yes okay yeah more sense unless we'd have to then adjust what would happen in that particular method right but I think you're right okay so we're gonna go through with something similar to what Slayer princess is describing like separating the total area calculation out the total cost calculation out and we'll do that after we do some little interactive like behavior with this app essentially we want to be able to type in Taj Mahal and you'll calculate Taj Mahal exactly so like we mentioned I'm sort of very very early on typically when you're writing a program it's not necessarily for just yourself to run but also for another user to run so we want to do with this program is package it in a way that there's an actual user experience so that if someone were to type dot run into the console instead of just giving a value with no context it would actually ask you hey which building of these three buildings do you want the total area and cost of flooring four and then your user can choose and then the program will output an answer user interaction yes so if we want to make this program interactive what are we going to need to add to our program to both ask the user for a value and then determine what that answer is what that value is and give them the appropriate output so that's a question to y'all you could write in the chat what are some of the things that we may need to add to our program in order to make it interactive for another user to experience yes he said read line definitely yes so again as a little refresher we have seen console dot write line but we can use console dot readline to read in information that someone types to the console so whatever they type in and then press an enter so that's great which yes FF JC that's gonna ask the user for input so what we could do is even before a read line could put another write line that says you know hello welcome to our area calculated for program computer which area would you like to calculate today or which building would you like to calculate the area for today and then we can list them out and then like Junie said then we're gonna read line we're gonna capture that information but then what so how is it basically what NICs asking is how is our program going to respond how is it going to know if Nick types in oh I want the area for Taj Mahal you know right now we just have three different ways that were you know calculating area how does it know how to choose which one of these outputs to put out because we don't want to print out all three of them how do we select just one of these outputs so Judy is saying that we're storing as a variable so yes we're gonna want to somehow capture what our user response is and in a variable S format so Tetsu says a method per shaped so we we do have methods already for calculating each shape FA asked what if the user types a string so actually everything that gets returned from a console.readline is technically a string if you look at some of our earlier lessons we talked about if you need an integer output from a red line how to convert that but we're I think gonna ask them to type out a string anyways yeah and Ted so I think we method per shape we already have methods for a rectangle triangle circle you might might be talking about like a method per floor plan mmhmm which is also something we could do mmhmm which could help but again it doesn't solve the problem of choosing one yeah so how do programs make decisions delays yeah okay yeah all right all right here we go here we go so we had a junior a a if statement and slayer princess right in ifelse loop so we're starting to talk about conditional statements you got it guys that's exactly what we're looking for so we do want to use some type of conditional statement to help our program decide what output there should be so if statements are one option using if else if we really have kind of four choices that we're looking at right now right so we have three buildings so they can choose between one of those buildings but we also want an option in case whatever response we get from the user doesn't make any sense right we want to start thinking about the user experience we want the program to continue even if they don't have you know a correct answer so Junie says switch case default yeah that's exactly what we were thinking because you know once you start from me once you start getting beyond three options in terms of making a decision writing those if elseif blah blah blah statement starts to get just too verbose and there's a lot of room for potential error whereas a switch case is really nice particularly in this case because we aren't you we don't need any logic right we're not checking a specific condition necessarily we just want to know one answer and that's our case and then we switch on different cases yeah so so right Junius and Slayer princess both of those work in and cows loops and switchcase those those work we're gonna prefer switch and we can talk about that once we we type it out I think would make more sense yeah sure so why don't we go ahead with that yes yes so above this I'm gonna say we're gonna like we said ask for user input mmhmm console.writeline which monument would you like to produce would you like to work with okay and then we're gonna and that and then we're gonna capture the input whatever they say using a console dot readline yep so thanks for to the folks who said console dot refine so I also said store it Junie said store it as a variable uhhuh so it'll be a string like we talked about so string let's call it choice okay and then somehow we do an if switch on that mmhmm okay so I'm imagining that what they're gonna put in is teal to work on Taj Mahal or Great Mosque in Mecca those are like the three choices we could do an ifelse so if choice equals this then do that else if choice equals this do that because it's not really like a condition it's just a value or just it just depends on the different values switch is a little easier to read for that kind of like statement absolutely let me let me show you what that looks like so switch statement uses that switch with font choice mmhmm and then in here we're gonna put our different cases case 1 if choice equals tayo tu con then we're gonna do some stuff and what we're gonna do is calculate total area let me copy this and let's just use that for now okay and then break because we want to in that case then we'll do it two more times so case for Taj Mahal mmhmm well Nick is writing out our switch statements yeah Alex we're at this in the the chat but another good use of if statements would be to check to make sure that shapes aren't negative numbers so if for example we were again asking for a user input and you know making sure that we can validate whatever our values are you are going to be that's a really good use of those statements conditions in general okay and then we need to default because there's a chance that the user doesn't pick any one of these three choices mmhmm so let's just say that the area equals zero so I need to change up my code a little bit now that we've put it all together in a switch statement mmhmm we want to go back from from a three variable kind of world to a single variable kind of world because we're only doing what at the time yeah so I'm gonna define what I need here which is a double total area and then just set it equal in all of these cases very good so instead of defining like a new TM breach against are already starting to refactor a code okay so let's read through what we have here which money would you like to work with ask the user then we capture the choice then we define a double which is a total area and then depending on the choice we set total area to a different value yep and then yep yet if none of them are right then it's zero and then we calculate the cost and print out the cost so let's see how we're doing let's take a little pit stop again if you have any questions a great time to to ask them in the chat yes so J TV that is a good question it's always good when you're designing these programs to think about what could go wrong and think about the user exactly different edge cases so we can't always assume that a user is going to type it in the exact way that we expect them to yeah we love our users but sometimes they make mistakes user errors or real thing so we got to prepare for all of those lower case is yes a big one right now there's another issue that I'm running into this question which one you would you like to work with I don't know what my options are if I'm a user and I didn't build this program how much I feel tower yeah and then what happens there good zero that's not helpful so let's explain the options to them yeah I think so so what we can do is that in our original console don't write line statement can actually tell them what their options are so they know what to choose because also come without actually seeing it in front of me I'm very impressed that Nick has gotten very good at it I'm also okay so now we have those options great and if I were to do the right one like Tod walk on I would get the value yes so that code in the switch statement is being evaluated just this first one cuz it's just that one case okay lower case lower case yeah so now we're saying if it was lower case T Tod wakhan obviously that wouldn't match any of the cases yeah because none of those exist here computers are extremely literal and while we would be able to tell the difference between tio tio con in title case or upper case or lower case a computer wouldn't be able to so I think what's always good to do is just take whatever it is and then change it to the case that we want to check on yes and we can do that with a method to lower mmhmm and that's just a string method so choice is a string you can use that method so in here instead of Patchett passing switch choice I want to pass it choice dot to lower okay so if I were gonna if I said like Taj Mahal capital case it would send Taj Mahal lowercase oh so you know semicolon you right parenthesis and then now we're matching on lower case yeah great you could also do again the opposite you could switch everything to uppercase let's say run this one more time dot net run mhm and yeah what's trying to break it lowercase Taj Mahal so where's can't break me let's try what did they call that again random case so you're saying like alex is suggesting try to do like Tosh like we're back in middle right yes which I guess is technically Taj Mahal yeah it works BAM yes cool um great don't see any other questions so I think let's return to our previous conversation about refactoring using methods yes and we're a little low on time so I think maybe we should talk about it we won't actually run through it but we'll talk about it a little bit yeah so right we've done a lot so far we have done we got to the conditionals yes which was important which was important we define three methods to calculate rectangle circle and triangle so we learned how to do some basic methods we talked about returning the double we technically talked about static but we're Naurang that for now we use math dot pi and math dot pow mmhmm and then in main we asked for user input with read line or with write line we captured it with read line and then use a switch statement to do different things depending on a user input and we considered some edge cases for what user input could be and took care of that with two lower as method yes and this next part that we're not going to do but we're going to talk about is refactoring this into a method mhm so instead of putting all this code in main we can break some of it out into a method mhm so that we can easily test it and keep it separate if anything were to go wrong and so I guess the question is what is the input and output of this method if it's gonna be a method obviously we want to get the total area out so this method is gonna return area but it's gonna take in what should be the choice should be the choice right so this method will take in a string that says table to become Taj Mahal agree mas Mecca and then return a number that equals the area of that place returning a double yes again and what it would look like sort of is kind of wrapping this switch in a method and then just calling that method from me so I think we're gonna leave that up to you to try some another good extension yes another if you come up with some cool ideas on how to do that making this more interactive handling different edge cases maybe be more clear with what all this output means maybe selecting a different currency different currency thank you yeah all those things you can do now we talked about absolutely we even said it could be really interesting if you could figure out a way of doing it where you could like ask for shapes calculate a floor plan based off of what shapes there are in it these ones but you've got a lot of things at your disposal now and we're really excited to see the other things that you built yeah if you wanna aapko academy on twitter we'll see those there yeah and then in facebook and CLL you can send those there if you want to share some stuff and if you have questions or ever get stuck those are great places to go as well yeah absolutely yeah so sounds like we're getting back into the jive of live stream so our folks from our ena Natalia are going to be doing a live stream next week on Monday at 130 so you should definitely check that out our our content is awesome yeah and we really appreciate everyone been working with us super rewarding for us to like start to teach the content that we have just been writing our tasks for a while it's really fun we talk about that sometimes but like a lot of us are former teachers or have been in the classroom before and we really love the opportunity to put our content in front of y'all and interact with you and see how brilliant you are and have you answer our questions so thank you for joining us today on the live stream we can't wait to see you again be on the look out in a couple of months for even more csharp content we're starting to get into some more intermediate concepts like classes and objects and of course we're still got a cover raised and loops so don't worry about those they'll be coming your way soon as well mmhmm any last questions I think our friend Alex Koons can answer some of the ones that are in there now but otherwise yeah thanks that's it thank you so much and again live stream is gonna be recorded and up on YouTube for you to watch later yes any of it if you have any good feedback or bad feedback Alex posted in the chat from Co Academy you'll see a chat with a link to that doc exactly all right okay everyone thanks
