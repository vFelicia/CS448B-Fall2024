With timestamps:

00:00 - hi my name's doug i am a senior back-end
00:02 - software engineer at codecademy
00:05 - in the context of web development you
00:07 - have code that
00:08 - runs either on the client side so the
00:10 - user's web browser
00:12 - or on the server side so the computers
00:14 - at the company that
00:15 - are creating the website and a backend
00:17 - engineer writes all the code that
00:19 - happens on
00:20 - the server side so it does things like
00:23 - looking up data
00:25 - doing calculations all kinds of things
00:27 - basically
00:28 - preparing the information that needs to
00:30 - be sent over to your web browser in
00:32 - order for that to be shown to you
00:33 - in a nice way so
00:36 - one of the nice things but also the
00:38 - downsides of working on the back end
00:41 - is you don't have to worry about making
00:42 - things pretty and showing them to the
00:44 - user
00:45 - but the flip side of that is you don't
00:46 - always get to see your
00:48 - work visually so if you like
00:51 - just solving problems and getting to
00:54 - that like aha moment
00:55 - of figuring out something tricky and
00:57 - logical then
00:58 - that can work is great and especially if
01:01 - you don't care about having to
01:04 - have an artistic eye and and make that
01:06 - look good
01:07 - but if you're looking for more of the i
01:09 - want to be able to make things flash and
01:11 - appear
01:12 - and look pretty on the page and have a
01:13 - really engaging beautiful user
01:15 - experience then you should look more at
01:17 - front end or full stack
01:20 - i think the best way is always to learn
01:22 - by doing and even though
01:24 - back in engineering has maybe a
01:26 - reputation of being
01:28 - tough or complex it definitely doesn't
01:29 - have to be you can
01:31 - just on your own time on your own
01:33 - computer set up a simple website
01:35 - and use a backend framework like ruby on
01:37 - rails
01:38 - it doesn't have to do anything too
01:40 - complicated maybe just
01:41 - create some simple data and save it and
01:43 - look it up but once you have your own
01:45 - first
01:46 - web page up and running then you're
01:48 - basically halfway there
01:52 - if you want to be a successful back-end
01:53 - engineer the
01:55 - number one thing is just to be a good
01:58 - problem solver
01:59 - being able to think through a problem uh
02:02 - really break it down understand what's
02:04 - the goal what's the input what does the
02:05 - output need to be
02:07 - understanding algorithms and a little
02:10 - bit of math
02:11 - is very helpful there's really no limit
02:13 - to
02:14 - what you can make a computer do the
02:17 - anything that you can figure out
02:19 - logically and encode it into a set of
02:21 - instructions you can
02:22 - accomplish and we've seen just
02:25 - absolutely how transformational that
02:27 - technology can be
02:28 - and the only limit is really your
02:30 - imagination and your creativity

Cleaned transcript:

hi my name's doug i am a senior backend software engineer at codecademy in the context of web development you have code that runs either on the client side so the user's web browser or on the server side so the computers at the company that are creating the website and a backend engineer writes all the code that happens on the server side so it does things like looking up data doing calculations all kinds of things basically preparing the information that needs to be sent over to your web browser in order for that to be shown to you in a nice way so one of the nice things but also the downsides of working on the back end is you don't have to worry about making things pretty and showing them to the user but the flip side of that is you don't always get to see your work visually so if you like just solving problems and getting to that like aha moment of figuring out something tricky and logical then that can work is great and especially if you don't care about having to have an artistic eye and and make that look good but if you're looking for more of the i want to be able to make things flash and appear and look pretty on the page and have a really engaging beautiful user experience then you should look more at front end or full stack i think the best way is always to learn by doing and even though back in engineering has maybe a reputation of being tough or complex it definitely doesn't have to be you can just on your own time on your own computer set up a simple website and use a backend framework like ruby on rails it doesn't have to do anything too complicated maybe just create some simple data and save it and look it up but once you have your own first web page up and running then you're basically halfway there if you want to be a successful backend engineer the number one thing is just to be a good problem solver being able to think through a problem uh really break it down understand what's the goal what's the input what does the output need to be understanding algorithms and a little bit of math is very helpful there's really no limit to what you can make a computer do the anything that you can figure out logically and encode it into a set of instructions you can accomplish and we've seen just absolutely how transformational that technology can be and the only limit is really your imagination and your creativity
