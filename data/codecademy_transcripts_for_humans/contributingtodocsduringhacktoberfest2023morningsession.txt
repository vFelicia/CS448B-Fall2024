With timestamps:

00:04 - okay and we are live again thank you
00:07 - everybody for attending we are Co
00:10 - Academy and I'm joined today I'm fed for
00:12 - the community team and I'm joined today
00:14 - by two of our content contributors from
00:16 - the curriculum team Kara and Christine
00:19 - we are going to be walking you through
00:21 - hober Fest Co Academy dogs and
00:23 - contributing to co Academy docs with Git
00:26 - and GitHub um this is part two of or two
00:31 - sessions this week trying to help users
00:33 - discover cademy docs and how to
00:35 - contribute to it thank you for stopping
00:37 - by if you saw the presentation on Monday
00:40 - this is basically the same information
00:43 - but if you didn't attend Monday this is
00:46 - going to be all new information for you
00:47 - so thank you for stopping by hello Cara
00:50 - hi FR how you doing how's everyone doing
00:53 - today um nice we're GNA be basically
00:56 - doing what we did on Monday is going to
00:58 - be an overview on how to contribute to
01:01 - codemy docs we're talk about a little
01:03 - bit about what Cod Academy docs is and
01:06 - then also what hober festes and then
01:09 - we're going to follow with a workshop
01:11 - with a live example of how to contribute
01:13 - to docks so first um what is kemi docs
01:19 - so docs is an online reference for
01:22 - coding Concepts in terms we rely on the
01:26 - community to contribute to this
01:28 - documentation so So today we're going to
01:31 - show you how you yourself can contribute
01:34 - and have entries live from you so first
01:40 - we could talk about um hober Fest
01:44 - first so um October Fest is an annual
01:47 - month-long
01:49 - celebration hosted by digital ocean
01:51 - during the month of October it
01:54 - encourages contributors and contribute
01:55 - to open source projects and as award
01:59 - reward contributors can get digital
02:02 - rewards from completing poll requests so
02:05 - to participate in hober Fest individuals
02:08 - need to First register on the official
02:10 - hober Fest website which we're showing
02:13 - right now and then afterwards you can
02:16 - contribute to public repositories on
02:18 - GitHub so the first 50,000 to get their
02:22 - first PR merg during October Fest we get
02:24 - a tree planted in their name and then
02:27 - there's also other digital rewards
02:29 - available a you can go to hober fest.com
02:32 - to learn more about what rewards are
02:35 - available and further about hober
02:38 - Fest so why is this a great time to
02:42 - contribute to Coy docs um it's always a
02:45 - great time to contribute but since it's
02:48 - October you can reap the benefits of
02:51 - October Fest at the same time so um at
02:55 - Co cam doc we have the good first issues
02:58 - label which are we're going to show you
03:01 - later but they're issues geared towards
03:03 - firsttime contributors so these issues
03:06 - are typically meant to be relatively
03:08 - simple or well defined making them a
03:11 - good entry point for individuals who are
03:13 - new to the project or open- Source
03:15 - development in
03:17 - general um so we're going to actually
03:20 - show that to you now because we're GNA
03:22 - start going into how to contribute so
03:26 - this process that we're going to show
03:28 - you is based off the contribution guide
03:31 - which is on the cemy do website on the
03:34 - side um it's also linked in the
03:37 - description of this live stream so
03:40 - before contributing we always recommend
03:42 - you go through the guide first um we
03:45 - also recommend having some basic
03:47 - understanding of get and GitHub markdown
03:49 - in the command line and resources for
03:52 - all those are in the description too so
03:55 - just make sure you can go through
03:57 - everything make sure you understand and
03:59 - then you can get started on making your
04:01 - own
04:03 - contributions
04:04 - so um let's get started
04:07 - on finding an issue to work on so if you
04:12 - go to the K dox repo you can go to the
04:15 - issues tab which is located at the top
04:18 - you press on issues and then you're
04:20 - going to find a list of
04:22 - issues under docs so your task would be
04:26 - to find an issue that you're both
04:28 - comfortable with and also that is not
04:31 - assigned to anyone um issues marked with
04:34 - the good first issue label which is in
04:38 - the purple and hober Fest have been
04:41 - deemed good issues for firsttime
04:43 - contributors to work on so you can
04:46 - filter the search to actually find
04:49 - unassigned issues too and good first
04:53 - issue so if you go to label you can just
04:57 - type in good first issue
05:00 - and then it will come up all the good
05:01 - first issues once you click on it so
05:03 - it's filtered by good first issue and
05:05 - then you can also filter by a signing to
05:08 - make sure it's not assigned to
05:11 - anybody so these are all the issues not
05:14 - assigned yet and then those are the ones
05:17 - that you will be looking for in general
05:18 - so once you find an issue that you like
05:21 - and that you want to work on you press
05:23 - on issue redo the description make sure
05:27 - you understand everything in the
05:29 - description what's the issue asking you
05:31 - to do um if there's anything that is
05:34 - unclear or that you think that um could
05:38 - be more clarified more then you can just
05:40 - write a comment asking um the thread
05:44 - like hey I need some clarification on
05:47 - this can you please clarify if there
05:50 - isn't any clarification needed then you
05:53 - can go ahead and write a comment asking
05:56 - to be assigned to the
05:58 - issue um once you make the comment
06:01 - asking to be assigned just please um
06:03 - wait patiently for a maintainer to
06:06 - assign you um we ask you to do this so
06:09 - that to ensure no one else is working on
06:12 - the same issue as you um there's been
06:15 - times where two people were working at
06:17 - an issue at the same time so to clarify
06:20 - this we just ask you to please wait to
06:22 - be assigned first before working on it
06:25 - so once you do get the okay that you're
06:28 - assigned
06:30 - um we'll send you a comment say you're
06:32 - assigned to the issue and then you can
06:33 - start beginning
06:35 - work so um the first thing that we
06:39 - recommend you doing is to have your
06:41 - computer set
06:43 - up um so to do this you're going to have
06:46 - to have a fork of the doc repo so to do
06:50 - that you go to the main repo you press
06:52 - on Fork at the top of the page once it's
06:56 - forked you can go to your profile page
06:59 - and then press on your repos so once you
07:03 - get to your repositories you're going to
07:04 - see a fork of the cam doc repo you press
07:08 - on that and then there's um the URL
07:11 - you're going to have to get from this
07:14 - this is what you're going to have to use
07:15 - to clone the repository on your logal
07:17 - machine so you press on the code button
07:22 - you copy the URL in from the
07:25 - box and then you're going to have to
07:28 - switch over to to your terminal or
07:31 - command line depending on your operating
07:34 - system and then first you're going to
07:37 - change
07:38 - directories into the file path that you
07:41 - want your repository to live in we're
07:43 - going to do desktop in this case and
07:46 - then we're going to do get
07:48 - clone followed by the URL we just copied
07:51 - and this is going to clone the
07:53 - repository on your
07:54 - machine so after that is done then we're
07:57 - going to change directory series into
08:00 - the
08:03 - repository um we changed into the doc
08:05 - repository now and then now we're ready
08:07 - to start a new Branch so that we can
08:10 - make changes so we're going to change
08:12 - the branch over to Hob
08:20 - Fest then we're going to check out into
08:22 - the
08:24 - branch and then now we're ready to have
08:27 - our um
08:30 - our entry put in once we switched over
08:33 - to our Branch so for all entries are
08:38 - going to be in markdown files so
08:42 - um we ask that you also follow like all
08:46 - the
08:47 - documentation that is in the issue that
08:50 - you're assigned to you're going to see a
08:53 - list of documentation with
08:55 - standards and we ask that your markdown
08:58 - file f follows these standards this
09:01 - helps a lot with the review
09:03 - process um if everything is up to par
09:06 - you can please do the review process a
09:09 - little bit faster um so just please make
09:11 - sure you review those documentations as
09:14 - well and our so our markdown file right
09:18 - now for this example we have made up
09:21 - already so we have everything we have
09:25 - our metadata at the top we have um our
09:28 - information
09:30 - with title and also we have
09:34 - subheadings so um now we can since we
09:38 - already have our file we can take this
09:40 - file and place it in the file path that
09:43 - was mentioned in the
09:46 - issue which is the we highlight right
09:49 - here yeah so in our local repository
09:52 - we're going to create that file path in
09:55 - this case we're going to be using visual
09:57 - studio to show the file path
09:59 - more
10:05 - clearly So within our repo we're going
10:09 - to go down to Content we're going to go
10:13 - to
10:14 - General then
10:17 - Concepts and then we're going to make a
10:19 - new folder called hober
10:23 - Fest and then within that folder we're
10:25 - going to put our markdown file into that
10:34 - okay great so now our markdown file is
10:37 - in the correct location so now we can go
10:41 - back to our terminal and start pushing
10:44 - up these changes so first we're going to
10:46 - do get status to ensure that we have
10:48 - changes we do so now we're going to get
10:52 - add the file so we can stage it for
10:55 - commit copy the file path and get add
11:00 - then get status again we see that is
11:03 - ready to be committed so then we're
11:06 - going to use the get commit command
11:08 - followed by a
11:10 - message we could say October Fest entry
11:13 - as the
11:16 - message and then now we see get status
11:20 - we see we committed it and then now we
11:23 - can um push our
11:27 - changes setting it to Upstream which is
11:30 - where we're going to push to our local
11:33 - fork and then we're going to name the
11:38 - branch and then now we have pushed up
11:41 - our file so now we can start with making
11:45 - our poll request so we're going to go
11:47 - back to our
11:49 - profile um and then wait for it to
11:57 - refresh
12:15 - s you give us one minute we're trying to
12:17 - wait
12:18 - [Music]
12:19 - for
12:27 - branch
12:43 - sorry Christine can you um maybe copy
12:45 - and paste the the link that was given in
12:48 - the
12:57 - terminal
13:01 - see okay so in this case um usually
13:04 - there's like at the top of the screen it
13:05 - will say you can make a poll request but
13:08 - in this case since it didn't work for
13:10 - some reason we just copied and paste the
13:13 - link from the terminal that was given to
13:16 - us and then paste it into the browser
13:19 - and then it comes up the screen for our
13:21 - entry so this is the same entry that we
13:24 - pushed up um this is our description
13:29 - right here that you see in the little
13:31 - box um we suggest that you go through it
13:35 - carefully make sure you write a
13:37 - description in the description area so
13:41 - we're going to just write add October
13:42 - Fest entry um delete anything that's not
13:46 - relevant to your PR so in this case
13:47 - we're just adding a new entry and then
13:50 - we also recommend you check off all the
13:53 - boxes that pertain to your entry so just
13:56 - making sure that you reviewed it make
13:57 - sure there was no grammar mistakes no
14:00 - warnings were given Etc so after that's
14:04 - all done and you're feel good with your
14:06 - description then you can look scroll
14:09 - down look at your file make sure
14:12 - everything looks good in this case
14:14 - everything does look fine then we can go
14:17 - ahead and create our
14:22 - polyquest so the pull request is now
14:26 - created and um we have everything right
14:29 - we got good so the one thing about um if
14:32 - you're new and you just started out
14:34 - there's going to be a a
14:38 - CLA which we can probably show you real
14:40 - quick it's going to be a CLA um message
14:44 - asking you to sign the
14:46 - CLA um we ask that you sign this just so
14:50 - that we can get started on a review
14:53 - process quicker we ask that you sign
14:54 - this first um it's going to look like
14:57 - this so all you're going to do is you
14:59 - can read through it Go step by step it
15:02 - will let you know everything that you
15:03 - need to do and then once you're done
15:06 - signing then it was going to approve on
15:09 - screen it's going to have a little check
15:11 - mark as you can see there and then
15:14 - you're good to go so then after that is
15:17 - done all you have to do is um wait now
15:21 - for a maintainer that can review your um
15:26 - file so after the first view you're
15:29 - going to make the changes that is
15:31 - requested and then uh the maintainer is
15:33 - going to come back make sure everything
15:36 - is um everything is good with the
15:39 - changes and then you're going to wait
15:41 - for a second review after that so we
15:45 - typically do two sets of reviews in rare
15:49 - cases there's three sets of reviews but
15:52 - that's for long longer entries so don't
15:56 - worry about that but usually it's two
15:59 - and um after the second one is approved
16:02 - then we can go through with the merging
16:04 - process and this is the example right
16:07 - now of one that had two reviews and then
16:11 - it was merged afterwards and then you're
16:14 - going to get a little message at the
16:16 - bottom um after it's merged to links to
16:20 - your live
16:22 - entries yeah and then so um if you're
16:25 - know if you click on your live entry and
16:29 - you notice that you're anonymous on the
16:32 - screen so in this case the author is um
16:35 - displayed but you might come up as
16:38 - Anonymous if you haven't um linked your
16:41 - GitHub to your Co Academy profile so we
16:45 - just ask that you um in the same merge
16:49 - message that the link for the entry is
16:52 - in there will also be a link um showing
16:55 - you how to add your GitHub profile to
16:58 - your Cod
17:00 - Academy so that link right here
17:05 - there and then this is just step by step
17:07 - showing you how to add your um GitHub
17:10 - username to your Co Academy profile and
17:13 - then after you do all this just wait a
17:15 - little bit of time and then you should
17:18 - be
17:19 - visible so you can check back on it
17:23 - later so yeah um I think that's pretty
17:28 - much it
17:30 - um also one thing just um so that they
17:34 - can see like um if you go to files
17:37 - changed at the top um you can always
17:40 - view your file this way so that is
17:43 - always there and then you can also make
17:46 - changes and you will see the review
17:48 - comments from maintainers too on the
17:52 - screen and then you can also view the
17:55 - yeah this is a maintainer right here
17:57 - that made a review comment so you can
17:59 - always see that there and you could
18:01 - always message back to a maintainer if
18:04 - need
18:05 - be um so
18:09 - yeah so I think that has covered um
18:15 - everything if anyone has questions they
18:19 - can put it um in the
18:22 - [Music]
18:27 - chat
18:54 - Kyra while we wait for questions from
18:57 - the chat could you you share some of the
18:59 - typical tips or advice that you would
19:02 - give people that are contributing to
19:03 - code academy dogs for the first
19:06 - time yeah so um some tips is if you're
19:11 - stuck on anything just for your entry in
19:14 - particular you can just reach out to us
19:17 - in the thread so you can comment under
19:20 - your poll requests if you made one
19:23 - already or if you're assigned to an
19:25 - issue then you can comment there instead
19:29 - um for general questions I would say go
19:33 - to the discussions
19:35 - tab um which is we're pressing on it now
19:39 - the discussion's thread is open for
19:42 - anyone to share ideas and you can also
19:45 - get um our questions answered by
19:48 - maintainers so like in this particular
19:51 - case this um user wanted to know about
19:54 - um adding sorting algorithms so they
19:57 - asked about like what's the
19:58 - good way of going about that um so then
20:03 - we went along and answered those you can
20:06 - you can hop on to a discussion that's
20:08 - already made or you can make your new
20:11 - discussion using the um under whichever
20:16 - tab that is for if it's for ideas you
20:18 - can go on that um also if you want to
20:24 - contribute outside of Camy Docs then I
20:29 - would also recommend using good first
20:32 - issue um in the search if you search
20:35 - good first issue um without the coam DX
20:39 - repo it will come up other repos that
20:42 - are using good first issue too and then
20:45 - you can also look up by hober Fest
20:49 - because um there are other repos using
20:51 - the hober Fest label so just whichever
20:55 - repo comes up you'll go onto that rep
20:58 - and then press on their issues and then
21:01 - you can scroll through to see if there's
21:03 - anything that you want to work on from
21:07 - there nice I feel like you already
21:09 - answered this question in the chat about
21:11 - how to find other repos to contribute to
21:16 - um there was a question here about how
21:18 - long does it the code review take asking
21:21 - for
21:21 - newbies yeah it's it's a um it's
21:25 - dependent on the time frame so right now
21:28 - during the month of October Fest we're
21:30 - expecting like a a huge volume of intake
21:34 - right now so we just ask that you be
21:37 - patient um we're going to try to get
21:39 - everything done so that you can get your
21:41 - credits especially for October Fest we
21:43 - want everyone to have um basically the
21:47 - time and we also want everyone to get
21:50 - rewards from October Fest so we're g try
21:52 - to get everything in before it ends and
21:56 - yeah um
21:59 - is it is it possible to get assigned
22:00 - more than one isue when you're a user
22:03 - yes so you can be assigned to up to
22:06 - three at a time we ask for um you to
22:09 - submit pull requests first before um
22:13 - asking to be assigned to another issue
22:16 - um just so that everyone has a chance to
22:17 - get issues and um more than three might
22:20 - just get a little bit too much
22:21 - especially if you're a new time um
22:24 - contributor so yeah three at a time and
22:27 - then we ask that to uh submit poll
22:29 - request before um asking to be assigned
22:31 - to another
22:33 - issue
22:35 - nice um okay so I just wanted to chime
22:38 - in and remind the chat that we have a
22:41 - few minutes left in the event so if you
22:43 - have any questions for Kyra today please
22:46 - drop them in the chat and she'll be more
22:49 - than happy to answer them um what we
22:51 - wait for other questions in the chat to
22:53 - come in maybe another question that
22:55 - people might have is when they
22:57 - contributing to dogs um some people
23:00 - might be worried about the that what
23:03 - they are you know what they submitted
23:04 - might be wrong they might be tyos or
23:06 - something so could you talk a a bit
23:08 - about the review process and the back
23:11 - and forth that happens when you submit a
23:13 - PR yes so um once a contributor starts
23:16 - submit a PR um we go through everything
23:19 - looking for any grammar issues we also
23:22 - look for any technical issues um we will
23:26 - submit to you changes if we've come
23:29 - across any of that um we also ask that
23:33 - um please make sure everything is in
23:35 - your wording we do not um accept any
23:38 - type of plagiarism any type of
23:40 - plagiarism would be flagged immediately
23:43 - so just please stem away from that make
23:47 - sure that everything is in your own
23:48 - writing and also if there's anything
23:51 - that you need help like help with just
23:53 - let us know and we can respond to that
23:57 - if you need like um resources for
24:00 - writing your entry then we suggest um
24:04 - going to you can go to like out resource
24:08 - by like finding documentation on the
24:10 - actual language so um almost every
24:14 - language has documentation online so you
24:17 - can look for that to ensure that your
24:19 - entry is technically right before
24:22 - submitting and also test your code
24:25 - please test if you have examples please
24:28 - test the
24:30 - code fantastic oh I see that we are
24:34 - showing the
24:36 - workspaces test code yeah you can test
24:38 - the um your code in cam. workspace this
24:42 - is on the website on cam and um we have
24:46 - these languages available so whichever
24:48 - language you're in you're just pressing
24:50 - the language and then you can create a
24:52 - new file and then add your your example
24:57 - and then test it out right there to make
24:59 - sure it works
25:01 - first great uh we have one last question
25:04 - in the chat that I think it's a pretty
25:05 - cool question from Maria about is this
25:09 - similar to the style of working on a
25:11 - project uh when you're in teams you a
25:14 - workplace volunteering this sort of
25:16 - thing so how does uh submitting you know
25:20 - um your contributions to cademy docs I
25:22 - guess reflect on the typical work that
25:25 - somebody that is learning at code
25:26 - academy could expect
25:28 - yeah I think it's a great way for you to
25:30 - like collaborate with other
25:33 - contributors um if um we also have like
25:36 - contributors right now that collaborate
25:39 - with other contributors like giving them
25:40 - advice so we ask that you just be as
25:44 - open as
25:45 - possible um we're going to be talking
25:48 - with you constantly trying to get you um
25:51 - to get the changes do so that we can get
25:52 - through the process of reviewing quickly
25:55 - so it's almost like a team effort there
25:58 - in the sense that we want everyone to
26:00 - work together to get these issues out
26:02 - and entries
26:04 - out nice I think it's um it's true that
26:07 - a lot of people especially in hybrid or
26:10 - remote environments um and even when
26:12 - they are in the office I mean GitHub is
26:14 - used as pretty much it's a wild you know
26:16 - worldwide used tool for uh organizing
26:19 - your code and uh what's it called
26:22 - um the word is something about code
26:27 - maintenance or like
26:29 - the the I forget the code there's like
26:32 - this this thing that people call it when
26:34 - you're organizing your code I guess for
26:35 - for submissions of versions like
26:36 - versioning I guess oh versioning yeah so
26:40 - it's um it's this is this is kind of
26:43 - similar in that way that if you if you
26:44 - were part of a team engineering team you
26:46 - might find yourself pushing your code
26:48 - into the repository of do workplace and
26:51 - all the people will review the work that
26:52 - you submitted go back back to you with
26:55 - any issues asking you to fix your PR so
26:58 - in that way it does simulate a little
27:00 - bit what you could expect going into
27:02 - your first job in
27:07 - tag okay well with that we are going to
27:11 - close off the event thank you everybody
27:13 - for stopping by uh this was a fun 30
27:16 - minutes walking you through cademy docs
27:18 - and walking you through what it's like
27:20 - to use git and GitHub to contribute to
27:22 - co Academy docs has final remarks don't
27:24 - forget to follow Co Academy on our
27:26 - social media and YouTube channel
27:28 - subscribe all that good stuff to see
27:30 - more of these events next month in
27:32 - November we're having somebody walk us
27:35 - through a practical introduction to llms
27:38 - a really hot topic right now so hope to
27:40 - see you all there in November uh thank
27:43 - you Kyra and Christine for hosting the
27:45 - event today thank you for sharing all
27:47 - that you know it's amazing um that
27:49 - you're helping so many people with
27:51 - GitHub and in know Co Academy docks with
27:53 - their PRS and I'll see you all next time
27:57 - in our life events have a great day bye
28:01 - everyone
28:03 - byebye

Cleaned transcript:

okay and we are live again thank you everybody for attending we are Co Academy and I'm joined today I'm fed for the community team and I'm joined today by two of our content contributors from the curriculum team Kara and Christine we are going to be walking you through hober Fest Co Academy dogs and contributing to co Academy docs with Git and GitHub um this is part two of or two sessions this week trying to help users discover cademy docs and how to contribute to it thank you for stopping by if you saw the presentation on Monday this is basically the same information but if you didn't attend Monday this is going to be all new information for you so thank you for stopping by hello Cara hi FR how you doing how's everyone doing today um nice we're GNA be basically doing what we did on Monday is going to be an overview on how to contribute to codemy docs we're talk about a little bit about what Cod Academy docs is and then also what hober festes and then we're going to follow with a workshop with a live example of how to contribute to docks so first um what is kemi docs so docs is an online reference for coding Concepts in terms we rely on the community to contribute to this documentation so So today we're going to show you how you yourself can contribute and have entries live from you so first we could talk about um hober Fest first so um October Fest is an annual monthlong celebration hosted by digital ocean during the month of October it encourages contributors and contribute to open source projects and as award reward contributors can get digital rewards from completing poll requests so to participate in hober Fest individuals need to First register on the official hober Fest website which we're showing right now and then afterwards you can contribute to public repositories on GitHub so the first 50,000 to get their first PR merg during October Fest we get a tree planted in their name and then there's also other digital rewards available a you can go to hober fest.com to learn more about what rewards are available and further about hober Fest so why is this a great time to contribute to Coy docs um it's always a great time to contribute but since it's October you can reap the benefits of October Fest at the same time so um at Co cam doc we have the good first issues label which are we're going to show you later but they're issues geared towards firsttime contributors so these issues are typically meant to be relatively simple or well defined making them a good entry point for individuals who are new to the project or open Source development in general um so we're going to actually show that to you now because we're GNA start going into how to contribute so this process that we're going to show you is based off the contribution guide which is on the cemy do website on the side um it's also linked in the description of this live stream so before contributing we always recommend you go through the guide first um we also recommend having some basic understanding of get and GitHub markdown in the command line and resources for all those are in the description too so just make sure you can go through everything make sure you understand and then you can get started on making your own contributions so um let's get started on finding an issue to work on so if you go to the K dox repo you can go to the issues tab which is located at the top you press on issues and then you're going to find a list of issues under docs so your task would be to find an issue that you're both comfortable with and also that is not assigned to anyone um issues marked with the good first issue label which is in the purple and hober Fest have been deemed good issues for firsttime contributors to work on so you can filter the search to actually find unassigned issues too and good first issue so if you go to label you can just type in good first issue and then it will come up all the good first issues once you click on it so it's filtered by good first issue and then you can also filter by a signing to make sure it's not assigned to anybody so these are all the issues not assigned yet and then those are the ones that you will be looking for in general so once you find an issue that you like and that you want to work on you press on issue redo the description make sure you understand everything in the description what's the issue asking you to do um if there's anything that is unclear or that you think that um could be more clarified more then you can just write a comment asking um the thread like hey I need some clarification on this can you please clarify if there isn't any clarification needed then you can go ahead and write a comment asking to be assigned to the issue um once you make the comment asking to be assigned just please um wait patiently for a maintainer to assign you um we ask you to do this so that to ensure no one else is working on the same issue as you um there's been times where two people were working at an issue at the same time so to clarify this we just ask you to please wait to be assigned first before working on it so once you do get the okay that you're assigned um we'll send you a comment say you're assigned to the issue and then you can start beginning work so um the first thing that we recommend you doing is to have your computer set up um so to do this you're going to have to have a fork of the doc repo so to do that you go to the main repo you press on Fork at the top of the page once it's forked you can go to your profile page and then press on your repos so once you get to your repositories you're going to see a fork of the cam doc repo you press on that and then there's um the URL you're going to have to get from this this is what you're going to have to use to clone the repository on your logal machine so you press on the code button you copy the URL in from the box and then you're going to have to switch over to to your terminal or command line depending on your operating system and then first you're going to change directories into the file path that you want your repository to live in we're going to do desktop in this case and then we're going to do get clone followed by the URL we just copied and this is going to clone the repository on your machine so after that is done then we're going to change directory series into the repository um we changed into the doc repository now and then now we're ready to start a new Branch so that we can make changes so we're going to change the branch over to Hob Fest then we're going to check out into the branch and then now we're ready to have our um our entry put in once we switched over to our Branch so for all entries are going to be in markdown files so um we ask that you also follow like all the documentation that is in the issue that you're assigned to you're going to see a list of documentation with standards and we ask that your markdown file f follows these standards this helps a lot with the review process um if everything is up to par you can please do the review process a little bit faster um so just please make sure you review those documentations as well and our so our markdown file right now for this example we have made up already so we have everything we have our metadata at the top we have um our information with title and also we have subheadings so um now we can since we already have our file we can take this file and place it in the file path that was mentioned in the issue which is the we highlight right here yeah so in our local repository we're going to create that file path in this case we're going to be using visual studio to show the file path more clearly So within our repo we're going to go down to Content we're going to go to General then Concepts and then we're going to make a new folder called hober Fest and then within that folder we're going to put our markdown file into that okay great so now our markdown file is in the correct location so now we can go back to our terminal and start pushing up these changes so first we're going to do get status to ensure that we have changes we do so now we're going to get add the file so we can stage it for commit copy the file path and get add then get status again we see that is ready to be committed so then we're going to use the get commit command followed by a message we could say October Fest entry as the message and then now we see get status we see we committed it and then now we can um push our changes setting it to Upstream which is where we're going to push to our local fork and then we're going to name the branch and then now we have pushed up our file so now we can start with making our poll request so we're going to go back to our profile um and then wait for it to refresh s you give us one minute we're trying to wait for branch sorry Christine can you um maybe copy and paste the the link that was given in the terminal see okay so in this case um usually there's like at the top of the screen it will say you can make a poll request but in this case since it didn't work for some reason we just copied and paste the link from the terminal that was given to us and then paste it into the browser and then it comes up the screen for our entry so this is the same entry that we pushed up um this is our description right here that you see in the little box um we suggest that you go through it carefully make sure you write a description in the description area so we're going to just write add October Fest entry um delete anything that's not relevant to your PR so in this case we're just adding a new entry and then we also recommend you check off all the boxes that pertain to your entry so just making sure that you reviewed it make sure there was no grammar mistakes no warnings were given Etc so after that's all done and you're feel good with your description then you can look scroll down look at your file make sure everything looks good in this case everything does look fine then we can go ahead and create our polyquest so the pull request is now created and um we have everything right we got good so the one thing about um if you're new and you just started out there's going to be a a CLA which we can probably show you real quick it's going to be a CLA um message asking you to sign the CLA um we ask that you sign this just so that we can get started on a review process quicker we ask that you sign this first um it's going to look like this so all you're going to do is you can read through it Go step by step it will let you know everything that you need to do and then once you're done signing then it was going to approve on screen it's going to have a little check mark as you can see there and then you're good to go so then after that is done all you have to do is um wait now for a maintainer that can review your um file so after the first view you're going to make the changes that is requested and then uh the maintainer is going to come back make sure everything is um everything is good with the changes and then you're going to wait for a second review after that so we typically do two sets of reviews in rare cases there's three sets of reviews but that's for long longer entries so don't worry about that but usually it's two and um after the second one is approved then we can go through with the merging process and this is the example right now of one that had two reviews and then it was merged afterwards and then you're going to get a little message at the bottom um after it's merged to links to your live entries yeah and then so um if you're know if you click on your live entry and you notice that you're anonymous on the screen so in this case the author is um displayed but you might come up as Anonymous if you haven't um linked your GitHub to your Co Academy profile so we just ask that you um in the same merge message that the link for the entry is in there will also be a link um showing you how to add your GitHub profile to your Cod Academy so that link right here there and then this is just step by step showing you how to add your um GitHub username to your Co Academy profile and then after you do all this just wait a little bit of time and then you should be visible so you can check back on it later so yeah um I think that's pretty much it um also one thing just um so that they can see like um if you go to files changed at the top um you can always view your file this way so that is always there and then you can also make changes and you will see the review comments from maintainers too on the screen and then you can also view the yeah this is a maintainer right here that made a review comment so you can always see that there and you could always message back to a maintainer if need be um so yeah so I think that has covered um everything if anyone has questions they can put it um in the chat Kyra while we wait for questions from the chat could you you share some of the typical tips or advice that you would give people that are contributing to code academy dogs for the first time yeah so um some tips is if you're stuck on anything just for your entry in particular you can just reach out to us in the thread so you can comment under your poll requests if you made one already or if you're assigned to an issue then you can comment there instead um for general questions I would say go to the discussions tab um which is we're pressing on it now the discussion's thread is open for anyone to share ideas and you can also get um our questions answered by maintainers so like in this particular case this um user wanted to know about um adding sorting algorithms so they asked about like what's the good way of going about that um so then we went along and answered those you can you can hop on to a discussion that's already made or you can make your new discussion using the um under whichever tab that is for if it's for ideas you can go on that um also if you want to contribute outside of Camy Docs then I would also recommend using good first issue um in the search if you search good first issue um without the coam DX repo it will come up other repos that are using good first issue too and then you can also look up by hober Fest because um there are other repos using the hober Fest label so just whichever repo comes up you'll go onto that rep and then press on their issues and then you can scroll through to see if there's anything that you want to work on from there nice I feel like you already answered this question in the chat about how to find other repos to contribute to um there was a question here about how long does it the code review take asking for newbies yeah it's it's a um it's dependent on the time frame so right now during the month of October Fest we're expecting like a a huge volume of intake right now so we just ask that you be patient um we're going to try to get everything done so that you can get your credits especially for October Fest we want everyone to have um basically the time and we also want everyone to get rewards from October Fest so we're g try to get everything in before it ends and yeah um is it is it possible to get assigned more than one isue when you're a user yes so you can be assigned to up to three at a time we ask for um you to submit pull requests first before um asking to be assigned to another issue um just so that everyone has a chance to get issues and um more than three might just get a little bit too much especially if you're a new time um contributor so yeah three at a time and then we ask that to uh submit poll request before um asking to be assigned to another issue nice um okay so I just wanted to chime in and remind the chat that we have a few minutes left in the event so if you have any questions for Kyra today please drop them in the chat and she'll be more than happy to answer them um what we wait for other questions in the chat to come in maybe another question that people might have is when they contributing to dogs um some people might be worried about the that what they are you know what they submitted might be wrong they might be tyos or something so could you talk a a bit about the review process and the back and forth that happens when you submit a PR yes so um once a contributor starts submit a PR um we go through everything looking for any grammar issues we also look for any technical issues um we will submit to you changes if we've come across any of that um we also ask that um please make sure everything is in your wording we do not um accept any type of plagiarism any type of plagiarism would be flagged immediately so just please stem away from that make sure that everything is in your own writing and also if there's anything that you need help like help with just let us know and we can respond to that if you need like um resources for writing your entry then we suggest um going to you can go to like out resource by like finding documentation on the actual language so um almost every language has documentation online so you can look for that to ensure that your entry is technically right before submitting and also test your code please test if you have examples please test the code fantastic oh I see that we are showing the workspaces test code yeah you can test the um your code in cam. workspace this is on the website on cam and um we have these languages available so whichever language you're in you're just pressing the language and then you can create a new file and then add your your example and then test it out right there to make sure it works first great uh we have one last question in the chat that I think it's a pretty cool question from Maria about is this similar to the style of working on a project uh when you're in teams you a workplace volunteering this sort of thing so how does uh submitting you know um your contributions to cademy docs I guess reflect on the typical work that somebody that is learning at code academy could expect yeah I think it's a great way for you to like collaborate with other contributors um if um we also have like contributors right now that collaborate with other contributors like giving them advice so we ask that you just be as open as possible um we're going to be talking with you constantly trying to get you um to get the changes do so that we can get through the process of reviewing quickly so it's almost like a team effort there in the sense that we want everyone to work together to get these issues out and entries out nice I think it's um it's true that a lot of people especially in hybrid or remote environments um and even when they are in the office I mean GitHub is used as pretty much it's a wild you know worldwide used tool for uh organizing your code and uh what's it called um the word is something about code maintenance or like the the I forget the code there's like this this thing that people call it when you're organizing your code I guess for for submissions of versions like versioning I guess oh versioning yeah so it's um it's this is this is kind of similar in that way that if you if you were part of a team engineering team you might find yourself pushing your code into the repository of do workplace and all the people will review the work that you submitted go back back to you with any issues asking you to fix your PR so in that way it does simulate a little bit what you could expect going into your first job in tag okay well with that we are going to close off the event thank you everybody for stopping by uh this was a fun 30 minutes walking you through cademy docs and walking you through what it's like to use git and GitHub to contribute to co Academy docs has final remarks don't forget to follow Co Academy on our social media and YouTube channel subscribe all that good stuff to see more of these events next month in November we're having somebody walk us through a practical introduction to llms a really hot topic right now so hope to see you all there in November uh thank you Kyra and Christine for hosting the event today thank you for sharing all that you know it's amazing um that you're helping so many people with GitHub and in know Co Academy docks with their PRS and I'll see you all next time in our life events have a great day bye everyone byebye
