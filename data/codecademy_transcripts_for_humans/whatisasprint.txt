With timestamps:

00:00 - hi my name is Stephanie I am a software
00:02 - developer based in Baltimore and today
00:04 - we're gonna go over a sprints simply put
00:07 - a sprint is a period of time that a team
00:09 - has to complete a set amount of work in
00:11 - the case here the development cycle is
00:14 - two weeks generally that amount of time
00:16 - can vary from team to team and it could
00:18 - be as long as a month or as short as a
00:20 - week you can think of development
00:23 - sprints like a running sprint
00:25 - they're both completed in a short amount
00:26 - of time and you have definitive end
00:28 - goals you're trying to achieve at the
00:30 - end for a running sprint your goal is to
00:33 - cover the distance you've committed to
00:34 - running in a set amount of time and for
00:36 - a development sprint your goal is to
00:38 - push out code you're committed to
00:40 - writing in a set amount of time now that
00:42 - we've defined what a sprint is these are
00:45 - some key takeaways that make Sprint's
00:47 - unique to other software development
00:48 - cycles and how Sprint's can accelerate
00:50 - the development process spurt planning
00:53 - happens at the beginning of the sprint
00:55 - in this meeting the team outlines the
00:57 - goals that will be completed by the end
00:59 - of the sprint the product owner who is
01:01 - responsible for the products growth will
01:03 - work with the developers to outline a
01:05 - list of goals to be completed the
01:07 - product owner determines the priority of
01:09 - the business needs and maintains his
01:11 - product backlog which contains all the
01:14 - requests that aim to deliver value to
01:16 - clients and so the practice from the
01:20 - product backlog into the sprint backlog
01:22 - which is a list of tasks that the team
01:25 - is committed to completing in the
01:26 - duration of the sprint meanwhile the
01:29 - developers will bring the technical
01:30 - perspective and make sure that the
01:32 - sprinkles can be completed sprints can
01:35 - last anywhere between a week to a month
01:37 - I've typically seen them occur within
01:39 - two weeks by limiting the timeframe it
01:42 - forces the planners to stick to small
01:44 - iterative changes so that you don't have
01:46 - a lot of massive features or too many
01:48 - changes going out at once plus this
01:51 - allows clients to get a more seamless
01:52 - experience as they're transitioning to
01:54 - newer versions of the product
01:56 - it also helps expedite releases on the
01:59 - right you can see that when you push out
02:00 - really large features in one go there's
02:03 - a lot of time being spent with little
02:04 - progress being made this is because you
02:07 - spend more time going through more code
02:09 - to debug and test than if you were to
02:11 - make smaller changes
02:13 - so when you limit the size and quantity
02:15 - of the features going out like in the
02:17 - graph on the left bugs are a lot easier
02:19 - to catch you can isolate the issue more
02:22 - easily when there's less code to go
02:24 - through it's like when you're playing
02:25 - Where's Waldo with Waldo being your bug
02:28 - and the rest of the picture being your
02:29 - code it's a lot easier to play when the
02:32 - picture is smaller isn't it there may
02:34 - also be times when your business needs
02:36 - change in the middle of your sprint and
02:38 - make your sprinkles obsolete it might
02:40 - throw off the time estimates for the
02:42 - rest of the sprint but that's okay
02:44 - Sprint's are just a way to shape and
02:46 - organize development work depending on
02:48 - how the new business needs change the
02:50 - goals of the sprint the product owner
02:52 - can meet with the developers to create
02:54 - new tasks to complete or developers can
02:57 - pull tasks from their own backlog and
02:59 - work on reducing technical debt but at
03:02 - the end of the day your products needs
03:04 - should drive development for example say
03:07 - you opened up a lemonade stand and your
03:09 - sprinkle is to make lemonade now you're
03:12 - in the middle of your sprint making the
03:14 - lemonade but because you live on the
03:16 - East Coast the weather forecast says
03:18 - that the weather is going to go from a
03:20 - heatwave to snow by the end of your
03:22 - sprint surely your clients are going to
03:24 - want lemonade anymore so you change your
03:26 - sprinkle to make hot chocolate and now
03:29 - when the Sprint is complete you made it
03:30 - you have a new and functional iteration
03:33 - of your lemonade stand all the features
03:35 - that you've worked on are completely
03:36 - functional and fully tested and you're
03:39 - ready for the whole cycle to start over
03:41 - again
03:41 - so remember a sprint is a development
03:44 - cycle where your team will be completing
03:47 - a list of goals during that time frame
03:48 - it may be useful to organize your team
03:51 - in a particular way but at the end of
03:53 - the day you're trying to deliver value
03:55 - to your clients and so your business
03:57 - needs will always be driving your
03:59 - development goals thanks so much for
04:01 - watching I hope you enjoyed this video
04:03 - please join the conversation by dropping
04:05 - a comment below and subscribing to this
04:07 - channel and if you're ready to take your
04:09 - skills to the next level you can start
04:11 - learning on coke atom II today

Cleaned transcript:

hi my name is Stephanie I am a software developer based in Baltimore and today we're gonna go over a sprints simply put a sprint is a period of time that a team has to complete a set amount of work in the case here the development cycle is two weeks generally that amount of time can vary from team to team and it could be as long as a month or as short as a week you can think of development sprints like a running sprint they're both completed in a short amount of time and you have definitive end goals you're trying to achieve at the end for a running sprint your goal is to cover the distance you've committed to running in a set amount of time and for a development sprint your goal is to push out code you're committed to writing in a set amount of time now that we've defined what a sprint is these are some key takeaways that make Sprint's unique to other software development cycles and how Sprint's can accelerate the development process spurt planning happens at the beginning of the sprint in this meeting the team outlines the goals that will be completed by the end of the sprint the product owner who is responsible for the products growth will work with the developers to outline a list of goals to be completed the product owner determines the priority of the business needs and maintains his product backlog which contains all the requests that aim to deliver value to clients and so the practice from the product backlog into the sprint backlog which is a list of tasks that the team is committed to completing in the duration of the sprint meanwhile the developers will bring the technical perspective and make sure that the sprinkles can be completed sprints can last anywhere between a week to a month I've typically seen them occur within two weeks by limiting the timeframe it forces the planners to stick to small iterative changes so that you don't have a lot of massive features or too many changes going out at once plus this allows clients to get a more seamless experience as they're transitioning to newer versions of the product it also helps expedite releases on the right you can see that when you push out really large features in one go there's a lot of time being spent with little progress being made this is because you spend more time going through more code to debug and test than if you were to make smaller changes so when you limit the size and quantity of the features going out like in the graph on the left bugs are a lot easier to catch you can isolate the issue more easily when there's less code to go through it's like when you're playing Where's Waldo with Waldo being your bug and the rest of the picture being your code it's a lot easier to play when the picture is smaller isn't it there may also be times when your business needs change in the middle of your sprint and make your sprinkles obsolete it might throw off the time estimates for the rest of the sprint but that's okay Sprint's are just a way to shape and organize development work depending on how the new business needs change the goals of the sprint the product owner can meet with the developers to create new tasks to complete or developers can pull tasks from their own backlog and work on reducing technical debt but at the end of the day your products needs should drive development for example say you opened up a lemonade stand and your sprinkle is to make lemonade now you're in the middle of your sprint making the lemonade but because you live on the East Coast the weather forecast says that the weather is going to go from a heatwave to snow by the end of your sprint surely your clients are going to want lemonade anymore so you change your sprinkle to make hot chocolate and now when the Sprint is complete you made it you have a new and functional iteration of your lemonade stand all the features that you've worked on are completely functional and fully tested and you're ready for the whole cycle to start over again so remember a sprint is a development cycle where your team will be completing a list of goals during that time frame it may be useful to organize your team in a particular way but at the end of the day you're trying to deliver value to your clients and so your business needs will always be driving your development goals thanks so much for watching I hope you enjoyed this video please join the conversation by dropping a comment below and subscribing to this channel and if you're ready to take your skills to the next level you can start learning on coke atom II today
