With timestamps:

00:05 - yay hey everybody let's see if everyone
00:12 - could just hop in the chat and tell us
00:14 - what your name is and where you're
00:16 - coming from that would be great
00:19 - the by default the zoom session it looks
00:23 - like when you're taking a message it's
00:25 - only to all panelists but if you put all
00:27 - attendees everyone can see your
00:29 - responses and we can all awesome share
00:31 - you saw that the UK and Seattle in
00:39 - Orlando and Russia and Brooklyn and so
00:42 - happy Africa Vegas is awesome Columbia
00:46 - Canada this is great
00:48 - welcome everybody we're gonna take a few
00:52 - minutes just to let people will trickle
00:55 - in we know some people are still getting
00:57 - coffee from the previous session or
00:59 - taking a little break so we're gonna
01:01 - wait for people to do that if in the
01:03 - meanwhile you guys are joined in and you
01:05 - also need to get something to situate
01:08 - yourself for our webinar please do so I
01:12 - T I'm ready to go guys I got my heart
01:18 - coke Adam a mug on the ready which I
01:21 - took that from me you're like
01:27 - representing so Valerie now my classes
01:34 - can be sure - would you guys get those
01:39 - the backgrounds again is it on Twitter
01:41 - or something oh and Anthony just got my
01:44 - question that's not oh yeah cool
01:47 - background so some people on our team
01:49 - made them for us so if you're in zoom
01:53 - you can always change your video I'm
01:55 - time a virtual ground and you can make
01:57 - it any picture you want I think they
01:59 - have some default pictures if you're
02:00 - feeling fancy today also it's like some
02:08 - ground rules we're just introducing
02:10 - ourselves right now which is fine the
02:12 - chat flows like crazy
02:13 - so I can't even read the first like ten
02:15 - messages by this point if you guys have
02:17 - questions along the way feel free to go
02:20 - into that that's Q & A panel that
02:23 - section and the bottom of the screen
02:24 - looks like to text bubbles next to each
02:26 - other and ask your questions there well
02:29 - we'll have like dedicated time to look
02:32 - into it Alijah taking advantage I love
02:34 - that is the CSS yeah we'll be focusing
02:37 - on CSS today and Tyler's gonna walk us
02:39 - through our very much coke adolescence
02:47 - all over the world this is awesome
02:49 - I love it maybe one extra minute or 30
02:54 - seconds we can get started a few more
02:57 - seconds and we'll operate in yeah in the
03:01 - meanwhile kind of do you want to
03:03 - introduce yourself hello everybody
03:07 - thanks for loving my background my name
03:12 - is Kyla I work at Ko Academy I'm a
03:15 - project manager I've also written some
03:18 - courses on our website as well so I kind
03:21 - of know what I'm doing Oh people love my
03:23 - hair thank you
03:27 - I am well I live in New York City but
03:30 - right now I am coming from you live from
03:33 - upstate New York which is a winter
03:35 - wonderland right now so I don't know I
03:38 - saw somebody else said they were from
03:40 - Buffalo and if you're upstate whoa yeah
03:43 - you know it's it's like complete snow
03:46 - covering it just snowed oh it's like
03:51 - full-on snow covering the ground the
03:55 - cars everything like straight out of
03:58 - winter it was 60 degrees like two days
04:00 - ago yeah
04:06 - so that's me I'm gonna be teaching you
04:08 - guys some CSS today along with Kenny hey
04:11 - guys so I'm getting some I see some
04:14 - people seeing me from the previous
04:16 - webinar already so hi George
04:19 - specifically I saw that I'm a curriculum
04:21 - developer here at code Kadim II and I've
04:24 - worked on a lot of different projects
04:27 - I've worked a little bit on our CSS
04:30 - course I've done a lot of JavaScript the
04:34 - latest courses that I've worked on is
04:35 - learned go which is a go is a
04:38 - programming language to Google and learn
04:41 - Swift apples programming language so a
04:44 - little well-rounded here CSS isn't my
04:46 - forte either but we'll see what we can
04:48 - do today I'm very excited to have you
04:50 - guys all here and it's a few thoughts if
04:56 - I could just have a quick thing before
04:58 - we get started I know we'll get a lot of
05:00 - questions about recording so we are
05:03 - recording this and we will be sharing
05:06 - the recorded links we'll post them on
05:08 - YouTube they might not come out until
05:11 - Tuesday we just need a few days to like
05:13 - get everything together and make sure
05:14 - it's um it looks good but then we will
05:16 - email everybody who's here so you will
05:18 - get recordings and I'm like by the way
05:21 - I'm gonna go off camera in a minute but
05:23 - I'll be here to answer some some QA and
05:26 - help out think it's busy but uh Kenny
05:29 - and Kyla are gonna do the the real work
05:31 - here and your teachers for the next 90
05:33 - minutes so enjoy where you animate
05:35 - thanks Mike oh yeah I mean I'm in
05:38 - Maryland uh a little bit kind of in
05:39 - between Baltimore and DC so yeah so the
05:46 - cool thing about you guys joining in
05:48 - today and following along like Mike said
05:50 - this will be recorded but today and some
05:53 - of you may know this already we've
05:54 - created free projects for us to jump
05:57 - into for the learn from home conference
06:00 - so the project that we're we've made
06:03 - available for you guys will be free
06:04 - today and today only so enjoy that okay
06:12 - I'm gonna share my screen now let's do
06:15 - this Stewart's so Kylie can you show
06:20 - them how to navigate to our course our
06:24 - material for today I'll also post the
06:26 - link directly in the chat for learners
06:29 - who wants to jump straight there but we
06:31 - have a learn from home conference course
06:33 - set up just for today for you guys to
06:36 - make things a little easier
06:40 - so okay so can you guys see my screen
06:52 - okay so the plugs up yes is this is a
07:00 - good find me just fix myself so I can't
07:04 - see alright so today we're doing the
07:11 - learn from home as you enter the home
07:15 - screen and log in make sure you're
07:17 - logged in so you can see everything
07:18 - perfectly you will see up at the top by
07:22 - our catalog we have a beautiful learn
07:24 - from home button as you click here you
07:32 - should be able to let me make sure I'm
07:34 - doing this right you should be able to
07:35 - go to so go to catalog yes sorry guys
07:53 - so go from your home screen to catalog
07:56 - when you enter catalog you should see
07:58 - learn from home conference and in here
08:00 - you'll see the courses go right in there
08:04 - and we're gonna be working on learn CSS
08:08 - today so let's go alright so we have a
08:19 - few few lessons in here in a project in
08:22 - here we were kind of curious what your
08:26 - experience with CSS is that would kind
08:30 - of help us figure out which one to jump
08:35 - into so let's
08:47 - with a pool can we get a pool we do the
08:52 - pole a little later later yeah let's
08:57 - jump into the lesson let's get started
08:59 - let's talk a little bit and then we can
09:00 - get the so first lesson here is on CSS
09:08 - selectors and setup so when you jump in
09:12 - you should see the very first exercise
09:14 - and I'll give everyone a chance to get
09:18 - in and get settled in before we hop into
09:20 - the actual lesson I also want to mention
09:29 - that for this lesson in particular our
09:33 - course we cover a lot more things but
09:35 - for our learn from home course today we
09:37 - gave we kind of took those lessons and
09:40 - place them here and these are like very
09:42 - short intros but if you want to continue
09:44 - your journey and learn more about CSS
09:46 - afterwards we can we definitely have
09:49 - more material at code Cadenet and just
09:51 - browse through our catalog you can use
09:53 - the search option there's a lot of
09:54 - things to further your knowledge after
09:56 - this webinar as well but here's a poll
10:08 - for everybody alright so go ahead and
10:13 - let us know how experienced you are with
10:15 - CSS and that way we can get a feel for
10:17 - what we should review what things you
10:20 - guys may already know oh we have a few
10:26 - CSS masters mm-hmm
10:28 - you also have some beginners which makes
10:30 - me really excited great question because
10:40 - yeah can you guys see the results of the
10:45 - polls give me a yes or no in the chat no
10:49 - you can't see them yet okay that's fine
10:51 - and normal thank you so much
10:52 - um as soon as we end the poll so if as
10:55 - soon as everybody has responded that's
10:57 - when we'll share out the responses
10:59 - you'll see him soon I see somebody's
11:02 - asking about how to navigate to the
11:05 - course again so I'm gonna go through it
11:07 - one more time because I understand that
11:08 - was a bit confusing so you're going to
11:10 - and go to click add me calm and login
11:13 - once you log in you should be at your
11:15 - dashboard once you get to your dashboard
11:18 - you want to go up to our navigation and
11:20 - go to catalog and then select learn from
11:25 - home conference go to that course and
11:33 - you will see the overview and the
11:37 - syllabus make sure you're under syllabus
11:39 - and we are doing build websites learn
11:42 - CSS so you want to hop in there and
11:45 - we're gonna go straight into the first
11:47 - act well we'll go straight into the
11:49 - first lesson which is CSS setup and
11:51 - selectors cool make sure you're on one
12:01 - out of 17 the very first exercise that's
12:03 - intro to CSS okay
12:08 - I'm about to take off before I do I want
12:11 - to say that we see your your post in the
12:16 - chat I see some that are like don't go
12:19 - too fast and some that are like don't go
12:20 - too slow I think just say I mean Kyle
12:23 - and Kenny are pros just let him know
12:25 - like hey that was really - faster yeah
12:28 - we got it and they'll be responsive all
12:33 - right you guys are awesome I'm gonna go
12:35 - back into Swift now right that's all you
12:37 - needed just simple yeah might get you in
12:41 - for another just to see how the audience
12:42 - how the chats doing yeah just come you
12:45 - know me I got thanks ELISA thank you
12:50 - alright so I'm gonna give everyone just
12:53 - a few more seconds I hope and I'll slow
12:56 - it down so I'm not too fast cuz I can't
12:59 - kind of faster but um in the meanwhile
13:03 - can you zoom in a little bit make the
13:06 - make your text a little bit bigger yes I
13:09 - can we do a little bit more because I
13:20 - think the code editor might be a little
13:21 - hard to see it I think that's good for
13:23 - me and then if we're if we're too small
13:27 - I'm sure the chats gonna let us know but
13:30 - I'm seeing something that's good seeing
13:31 - one bigger so yeah some of the content
13:37 - here is the material that we've used for
13:39 - the beginning of our CSS and if you've
13:42 - taken some CSS material already you
13:44 - might be landing on a different a
13:46 - different section of this course so Kyla
13:50 - can you show them how to navigate using
13:51 - the hamburger menu on the bottom box of
13:54 - course
13:55 - so as you're on this course to be camera
13:58 - over you can move through our exercises
14:03 - here so as you complete the exercises
14:07 - you know the next one will be made
14:09 - available to you but we're starting off
14:10 - with the intro to CSS exercise inside of
14:13 - CSS set up in selectors after that is
14:15 - inside I'm in line styles and will kind
14:18 - of move through just the basics of how
14:20 - to get yourself set up with CSS so that
14:24 - you can actually style a web page and
14:27 - then from there we'll keep going to CSS
14:32 - in a more advanced way I guess you could
14:34 - say with the actual styling all right is
14:43 - everybody ready are we feeling good okay
14:52 - all right so here's how we're gonna kind
14:55 - of do this let me know what you guys
14:57 - think but we're gonna go over the
15:00 - narrative together and just kind of get
15:01 - it understanding for what we're of
15:03 - learning and then from there we're going
15:06 - to review the instructions together
15:08 - after we reviewed the instructions I
15:10 - want to give you guys a few minutes to
15:12 - test it out yourself and then we'll do
15:14 - it all together I'll probably give you
15:16 - like two to five minutes to depending on
15:18 - how many instructions there are too
15:20 - watch yourself and then we'll do it as a
15:21 - group and move on to the next exercise
15:23 - as we continue to do this eventually
15:26 - we'll just check in with you guys to see
15:28 - how you guys feel feel like if you have
15:30 - a grasp on things and we could
15:32 - potentially move on to another lesson or
15:34 - even move on to a big project that we
15:37 - could do all together cool so let's
15:42 - start off with intro to CSS the very
15:44 - first exercise the basic structure of
15:47 - every webpage hmm HTML is very plain on
15:51 - its own the beautiful websites that you
15:53 - see across the internet are styled with
15:54 - various tools including CSS CSS or
15:58 - cascading style sheets is a language
16:00 - that the web developers use to style
16:02 - HTML content on web site or web page
16:05 - sorry if you're interested in modifying
16:07 - colors fonts font sizes shadows images
16:11 - element positioning and more CSS is a
16:13 - tool for the job in this lesson you will
16:16 - learn how to select which HTML elements
16:18 - you wish to style and set up for your
16:20 - CSS file structure cool so let's kind of
16:26 - break this down um in our code editor we
16:30 - have an HTML file and a CSS file this is
16:35 - what we're going to kind of play around
16:36 - with today to connect our CSS to our
16:38 - HTML and style the HTML file what you're
16:41 - seeing in our small browser here is an
16:45 - HTML file being ready to but does not
16:48 - have any styling with CSS yet so that's
16:52 - what we're gonna work on today this is
16:55 - like a super basic website that kind of
16:58 - gives me a throwback to like 1990
16:59 - something it doesn't have like all the
17:03 - really cool features or like just styles
17:06 - that were used to in 2020 so we're gonna
17:10 - kind of play around with it and make it
17:12 - look better so I'm gonna move on to the
17:15 - instructions
17:16 - um and then give you guys the
17:18 - opportunity to do this yourself so take
17:22 - a look at the code and the browser to
17:24 - the right the code is plain HTML without
17:27 - any styling let's take a quick look at
17:30 - the power of CSS copy the line of code
17:32 - and paste it
17:33 - on line five then run your code so that
17:37 - code within this box right here is what
17:40 - you're going to copy paste into your
17:41 - HTML file in line five so once you copy
17:47 - and pasted it run your code and see what
17:50 - happens take some time to explore and
17:52 - experiment with the code in style dot
17:55 - CSS so I'll give you a few moments to
17:59 - copy and paste that line of code it
18:01 - should be pretty quick I think some
18:15 - people already did it alright so alright
18:19 - boys I'm going to try it out okay and
18:26 - now I am going to run my code let's go
18:37 - run my code now completely different
18:41 - website this so this shows you the power
18:46 - of CSS it really takes that basic HTML
18:49 - page and turns it into something
18:51 - completely different by styling it we've
18:54 - changed the images we've changed the
18:57 - colors we've changed the font we even
18:59 - have like a fun button now so we're
19:01 - going to kind of go over like how that
19:03 - actually happens with CSS today
19:05 - personally CSS is one my favorites I
19:08 - just love being able to take like
19:10 - something that looked really basic and
19:12 - make it fun especially when you show
19:14 - your friends that you just did something
19:15 - like that you look like a coding genius
19:17 - honestly so um anybody have any
19:22 - questions based off of this or you guys
19:24 - ready to move to the next exercise okay
19:30 - cool um and right before we move to the
19:33 - next exercise I just want to go over
19:34 - some other things after the instructions
19:36 - you have concept review and the forums
19:40 - um the concept review here you'll always
19:42 - find our cheat sheets here where where
19:47 - it
19:48 - our cheat sheets are a really cool
19:50 - feature that allow you to kind of like
19:54 - go in and review content that you're
19:56 - gonna learn in a lesson it's really
19:58 - awesome really great reason to join I'm
20:01 - coach Adam II pro after that you'll see
20:05 - the forums and the forum is a great
20:07 - place to go and ask any questions so
20:09 - we're gonna kind of move through a lot
20:11 - today here if anybody has any questions
20:13 - that didn't get answered a great place
20:15 - to go is the forum to either see if
20:17 - somebody else asked that question and
20:18 - find the answer or to ask that question
20:20 - and wait for somebody to give you an
20:22 - answer alright question panel I guess
20:29 - asking are we supposed to watch too long
20:31 - or on the code Academy website work code
20:34 - along so I think we can I mean it's up
20:37 - to you guys we're gonna allow for both
20:39 - to happen where Kyle is going to write
20:42 - the code and do all the things necessary
20:44 - to get the passing solution but if you
20:46 - want to just sit back and relax and
20:48 - watch her do it go for it if you want to
20:49 - code it long join it okay yeah so so the
20:57 - next exercise I actually would love if
21:00 - you guys code along with me so let's do
21:04 - that alright so now we're in the inline
21:07 - Styles exercise although CSS is a
21:11 - different language in HTML it's possible
21:13 - to write CSS code directly within HTML
21:15 - using inline styles to style an HTML
21:18 - element you can add style attributes
21:20 - directly to the opening tag after you've
21:23 - added the attribute you can set it equal
21:26 - to a CSS style or styles you'd like to
21:29 - you'd like apply to the element so a lot
21:32 - of you guys were in the previous
21:36 - livestream where we went to where they
21:38 - went over HTML and how that works
21:40 - so a lot of you are familiar with a tag
21:44 - but if you're not our tags are things
21:47 - like the head tag or the body tag we're
21:50 - gonna focus on the tags inside of the
21:52 - body tag and those are elements like
21:56 - image tags h1 tags and paragraph tags
21:59 - and you can add
22:01 - right inside of that element for example
22:06 - here we have like a paragraph tag with
22:09 - the style added we've added color to the
22:12 - font and that color is red here in this
22:14 - example the color in the example above
22:19 - oh well I kind of explained that see
22:21 - freak eyes I'll hop over to the next
22:23 - paragraph you might wonder you might be
22:25 - wondering um you might be wondering
22:28 - about the syntax of the following
22:29 - snippet of code color red at the moment
22:33 - these details of the syntax are not
22:34 - important you'll learn more about CSS
22:37 - syntax and other exercises for now it's
22:39 - important to know that the inline styles
22:42 - are a quick way of directing directly
22:45 - styling an HTML element if you'd like to
22:47 - add more style more than one style
22:49 - within with inline Styles simply keep
22:53 - adding the style attribute adding to the
22:56 - style attribute make sure to end the
22:58 - styles with a semicolon
23:00 - so in inline Styles you can add multiple
23:04 - things so in this case we added a red
23:07 - font color but we can also change the
23:10 - font size it's really important for your
23:12 - code to work that you have that
23:14 - semicolon following each style attribute
23:17 - as well as a colon following the
23:20 - property in the kiss case color is a
23:24 - property red is the value font size is a
23:26 - property 20 points or 20 pixels sorry
23:30 - it's a value so I'm going to give you
23:34 - guys the chance to try this out yourself
23:36 - the instructions say in index.html use
23:41 - the inline style to set the font family
23:43 - of the first paragraph to Arial I'm
23:48 - going to give you guys a hint here font
23:50 - family is the property and Arial is the
23:54 - value so I'll give you guys a chance to
23:56 - try that out I'll give you two minutes
23:58 - or maybe 60 seconds and after you're
24:04 - done with that we'll go over together
24:31 - Ross that asked a great question about
24:34 - cheat sheets so Kyla in the concept
24:38 - review panel there on the left
24:41 - do you mind talking about that - just a
24:43 - quick second yeah yeah
24:45 - so in concept review you'll find cheat
24:47 - sheets and here with cheat sheets this
24:53 - is a feature that allows us to like
24:57 - review what was inside of that lesson
25:00 - and some way if you were saying you're
25:03 - having a hard time seeing it I believe
25:06 - it's a pro feature so you may need to
25:09 - have a pro account in order to see it um
25:11 - if you want to try them out I would
25:14 - suggest I'm trying out our free trial
25:16 - just to like check out what Pro is like
25:18 - and you'll be able to see really cool
25:20 - features like cheat sheets as well as
25:23 - actual projects and all sorts of other
25:28 - really great stuff you also will have
25:29 - access to things like a really cool
25:32 - video content articles things of that
25:35 - sort
25:35 - um how do you download the pretty cheat
25:39 - there is the print cheat sheet section
25:41 - here I would select that and if you just
25:44 - want to download it so it's on your
25:46 - computer save it as a PDF and you'll
25:49 - have this with you or you could print it
25:51 - and take it with you wherever you want
25:53 - um yeah
25:56 - so that's a really cool feature I'm
25:58 - shout out to one of our curriculum
26:00 - developers sunny and the rest of the
26:03 - code academy team who like helped him
26:04 - make that make that possible
26:06 - sunny some people are coming in from the
26:08 - live stream previously for HTML so they
26:11 - know sunny yeah okay cool
26:18 - so set the font family we want to set
26:22 - family of the first paragraph to Ariel
26:24 - so the first thing I want to do here is
26:25 - find our first paragraph that's the
26:27 - first P tag here now I want to come in I
26:31 - want to make sure that I'm creating my
26:34 - style attribute and setting that equal
26:38 - to it always makes sure it's inside of
26:42 - quotations guys it's whenever you forget
26:44 - a quotation things get wonky I want to
26:47 - set that equal that font family property
26:51 - equals the area of the bunch and I want
26:54 - to follow that up with the semicolon so
26:56 - now when I run my code it changed you'll
27:00 - see the change here in the very first
27:02 - paragraph so it's the only the first
27:10 - paragraph that changed with Arial right
27:13 - yes so it's only my first paragraph
27:15 - because I simply applied it directly to
27:18 - this tag there are other ways to make it
27:21 - a pull on to apply things to all the
27:24 - tags all the P tags but we'll get into
27:26 - that a little later but for now I'm just
27:29 - focusing on that one paragraph because
27:31 - say I just want one paragraph to look
27:33 - different than the rest of them do
27:34 - that's one way I can make that happen
27:37 - okay so now I'm gonna move on to the
27:41 - next one I'm gonna take a sip of tea
27:48 - okay this is exercise number three the
27:52 - style tag inline styles are a fast way
27:56 - of styling HTML but they also have
27:58 - limitations if you want to style for
28:00 - example multiple h1 elements you would
28:04 - have to add inline styling to each
28:06 - element manually in addition you would
28:08 - also have to maintain the HTML code when
28:11 - additional h1 elements are added so if I
28:14 - create a website and I have to come back
28:17 - in to that website and I want to make
28:18 - some changes I would have to manually
28:20 - change everything every single time so I
28:23 - can have a consistent consistent style
28:25 - and that is not realistic it's not
28:28 - scalable and that's definitely not what
28:30 - companies actually do with their
28:31 - websites so we're going to get into how
28:35 - to make
28:35 - things work for multiple elements
28:38 - fortunately HTML allows you to write CSS
28:41 - code in its own dedicated section with
28:43 - this style element CSS can be written
28:46 - down written between opening and closing
28:49 - style tags use the style tag element to
28:52 - use the style tag element sorry the
28:54 - style element sorry guys it must be
28:58 - placed inside of the head out so our
29:01 - head element is here after adding a
29:05 - style tag in the head section you can
29:07 - begin writing CSS code so this right
29:11 - here is what CSS code actually looks
29:14 - like when it's not in line we're going
29:16 - to practice making that the CSS code in
29:20 - the example above is changing the color
29:22 - of all paragraph text to read and also
29:25 - changing the size of the size of the
29:26 - text to 20 pixels know how this seen the
29:29 - syntax of the CSS code matches for the
29:32 - most part the syntax you you are you
29:34 - used in inline styling sorry the main
29:39 - difference is that you can specify which
29:41 - elements to apply to the styling to
29:43 - again the details of the CSS syntax in
29:46 - the example above aren't important at
29:48 - the moment you will learn about the
29:50 - details of CSS syntax later in this
29:52 - lesson so in later lessons sorry so the
29:56 - key here is that we've now applied this
29:58 - to all the paragraph tags instead of
30:01 - just one I noticed someone said what's
30:04 - font family meeting so earlier I'm in
30:08 - the last exercise we added the font
30:11 - family the font family with Arial so
30:13 - that changed this to being Arial font
30:15 - types instead of the Times New Roman
30:17 - that it's like the default text um
30:21 - the default font so in this situation
30:30 - what we want to do is start applying the
30:32 - applying styles to more tags so let's
30:35 - hop into these instructions on the first
30:39 - instruction first add a style element
30:41 - inside of the index.html file then make
30:46 - sure to delete the inline style you
30:49 - to the paragraph so I'm gonna give you
30:51 - guys a few minutes to a few seconds to
30:53 - do that while I do that too so I want to
30:59 - find my head element that's here
31:01 - and I want to add style to it the key is
31:07 - making sure I have both my head tag and
31:11 - my close tag I've not added that style
31:17 - tag and I want to get rid of what I had
31:19 - before because we don't really need that
31:21 - for the rest of this lesson so get rid
31:24 - of that inline Styles that changed the
31:27 - font family and we're gonna run that
31:29 - code and then in our next set of
31:44 - instructions it says add the in the
31:46 - inline Styles you removed from the P tag
31:49 - element to the style element in the head
31:51 - so just in case you guys didn't remember
31:54 - we changed the font family to Arial I'll
31:57 - give you guys a few minutes to do that I
31:59 - suggest as a hint to yourself for the
32:02 - formatting checking out the syntax in
32:04 - the example here so I want to give you
32:06 - guys the check chance to recreate that
32:09 - by making the paragraph tags have a font
32:12 - family of Arial and give you guys 60
32:15 - seconds to look that up to try that out
32:16 - and then we'll do it together um
32:22 - Fiona asked how do I get into the next
32:25 - lesson ie the style tag lesson so this
32:28 - is this is we're all within the same
32:30 - lesson this is the next exercise the way
32:33 - you want to do that is making sure that
32:35 - you're you've gone through the
32:37 - instructions and completed that once
32:39 - you've completed that you can hit the
32:42 - next fine it'll highlight once you've
32:46 - completed your instructions and then you
32:48 - can move on to the next exercise okay so
32:54 - I'm going to make I'm going to change
32:57 - that font family inside of the style tag
32:59 - now so I want to
33:03 - let my HTML and CSS know that I'm
33:06 - addressing all my P tags all my P
33:09 - elements ah and then I want to create
33:13 - the actual CSS code so I need curly
33:16 - brackets to do that inside of my curly
33:20 - brackets I want to change the font
33:22 - family to Arial right and have a
33:28 - semicolon after this I know that this is
33:31 - incorrect and I'm going to show you I
33:33 - actually may not be incorrect it just
33:35 - depends on the browser you use but I'm
33:37 - gonna run this and it actually did
33:40 - change this because I am using a pretty
33:42 - new version of Chrome but some of you
33:44 - may need to do this to make it run if
33:47 - you like feel like you're running into
33:49 - any weird things it might be your
33:52 - browser but yeah the value should be
33:58 - Arial my property is font family my
34:03 - value is Arial cool so now that both of
34:12 - my instructions have been addressed the
34:14 - yellow button here the next button I can
34:18 - hit that now and move on to the next
34:20 - exercise
34:25 - someone asked how would this work at the
34:30 - CSS is on a different file and not on a
34:32 - style tag we're gonna get to that you're
34:35 - ahead of the game so you CSS and Manson
34:38 - masters are like popping up at it but
34:41 - I'm we're gonna get to that there is a
34:43 - way to have CSS on a different file okay
34:51 - you're
34:52 - someone is following along on iPad and
34:56 - they're having some trouble so I would
35:00 - suggest I'm not exactly sure what this
35:04 - what zoom is looks like on an iPad to be
35:07 - very honest with you um I suggest coming
35:12 - back to this when it's recorded and
35:14 - uploaded on Tuesday and that'll give you
35:18 - the chance to kind of check out what we
35:20 - did and possibly follow along on a
35:22 - desktop or a laptop um can I go full
35:26 - screen please yes is that better
35:30 - lint yeah um okay why do the brackets
35:36 - have to be on separate lines this is a
35:38 - great question
35:40 - no Blonsky is still having a hard time
35:41 - seeing um I'm gonna address Andrews
35:46 - question in just a second on Valencia I
35:48 - am in full screen and I've like zoomed
35:52 - in some hopefully that helps you see if
35:56 - you're still having trouble viewing um
35:58 - I'm really sorry about that we might
36:01 - have to we you might have to wait for
36:04 - the recorded version of this we see your
36:07 - picture is my screen not sure your fine
36:13 - color your screen you sure I'm seeing it
36:14 - but you people also have the option of
36:16 - clicking on different panels and seeing
36:19 - which ones they choose to have as their
36:21 - main screen so maybe that's the that's
36:24 - what's going on there all right so I
36:27 - went address Andrews question um back in
36:30 - exercise 3 so Andrew asked about like
36:33 - just the the formatting of this syntax
36:35 - we have these curly brackets on
36:38 - different lines and the reason being I
36:40 - mean you could technically do this and
36:43 - it could work like sometimes let's run
36:47 - that because really it yeah so you could
36:50 - do it like this but when you code like
36:53 - this and you're format is really like
36:55 - dense after a while having lines and
36:58 - lines and lines of code it can get
37:00 - really difficult to read your code for
37:04 - and if you're doing this out in the Y
37:06 - often times you're coding with a partner
37:07 - and when you hand off your code to
37:09 - another person you want to make sure
37:10 - it's clean and easy to read so the
37:13 - default setting this is kind of just
37:15 - like you know globally accepted is to
37:19 - have your CSS um formatted this way
37:23 - where your brackets open up and all of
37:27 - your properties and values fall inside
37:29 - of it it just makes it a lot simpler to
37:32 - read it's really easy to say okay where
37:35 - are the pieced out of the stylings for
37:37 - all P elements you can easily find P and
37:39 - find out how they're being styled so
37:41 - that's why we have it like this
37:43 - um it's not going to necessarily be
37:45 - incorrect if you don't have your CSS
37:49 - formatted like this but it's technically
37:51 - not the professional way to code a lot
37:55 - and most languages have like funny
37:59 - little formatting and like ways to
38:02 - create your syntax that are kind of just
38:06 - widely accepted if you're ever curious
38:09 - about that I would suggest checking out
38:11 - like MD n um they have like they kind of
38:15 - have the documentation for things like
38:17 - CSS HTML even Python JavaScript and
38:19 - things like that um why is only one
38:24 - paragraph affected let's see if I run
38:27 - this such not be the case oh you're
38:29 - right
38:31 - awesome scope oh yeah question
38:34 - oh well here's the reason why when I
38:37 - look at my HTML code this is the only P
38:39 - tag these while we can visually see this
38:42 - as a paragraph it's not actually a
38:45 - paragraph it's a div tag so if I wanted
38:48 - to change this right to P I would have
38:52 - to make sure I change both my opening
38:54 - and my closing and I ran this code it
38:57 - would now be a P element and it would
39:00 - also take on the style that I created
39:04 - above
39:09 - um if you want to stop the pole from
39:11 - popping up you can you should be able to
39:14 - close it yeah
39:17 - and that should be I start sharing now I
39:21 - wonder if that was maybe the issue where
39:23 - we just kept sharing before hopefully
39:26 - that takes care of it sorry about that
39:28 - guys someone asked why only one
39:33 - paragraph active yeah so I went over why
39:36 - only one was affected hopefully that's
39:39 - clear now but someone also asked why is
39:41 - it called index.html that's just I
39:44 - really don't I don't know who decided
39:46 - that like landing pages are like the the
39:49 - first page of your HTML will be called
39:52 - index.html that's also like a that's a
39:57 - question which worth googling that's
39:58 - also like kind of when those widely
40:00 - accepted things where if you have a
40:02 - single on HTML page or you have like a
40:06 - home page for a HTML page it's often
40:08 - called index.html I guess it's just your
40:11 - starting pages your index is work in the
40:16 - editor visual studio yes I love using
40:21 - visual studio for CSS is it okay that we
40:25 - put it on less than three not the same
40:27 - color as Kyle is yeah absolutely you can
40:29 - make it um unless so you want to make
40:32 - sure you're following the instructions
40:33 - so that your code passes but if you want
40:37 - to add color or something like that be
40:42 - my guest
40:43 - you actually love to see you guys do
40:45 - stuff like that so have fun with it you
40:47 - can follow follow along with me but if
40:49 - you want to do something a little like a
40:51 - little different or you want to try
40:53 - something new
40:54 - feel free to do that just know that if
40:56 - you're having a trouble moving on to the
40:58 - next exercise it might be because it's
41:01 - still waiting for you to say like
41:03 - font-family:arial so that it knows that
41:05 - you did what you're supposed to do okay
41:08 - so we're gonna move on to exercise for
41:12 - how are things going we have 352 people
41:16 - great we're all here exercise for the
41:22 - CSS file
41:23 - or the dot CSS file developers avoid
41:27 - mixing code by storing HTML and CSS CSS
41:31 - code in separate files HTML files
41:34 - contain only HTML code and CSS files
41:37 - contain only CSS code you can create a
41:40 - CSS file by using the dot CSS file name
41:43 - extension like CSS like style dot CSS so
41:47 - we do have a style dot CSS file here
41:50 - we're gonna have fun with that with a
41:53 - CSS file you can write the CSS code
41:55 - needed to style a page without
41:57 - sacrificing the readability and
41:59 - maintainability of your HTML file so
42:02 - like we talked about a little bit
42:04 - earlier um you know we could style every
42:08 - single element on this page we can style
42:10 - the title the image we could just we
42:13 - could have a heyday the bullet points
42:14 - everything um
42:16 - this would become a very very big heavy
42:19 - file if we did that and it would also
42:21 - become really really difficult to read
42:23 - so we're going to take our style and put
42:27 - it inside of style dot CSS instead this
42:30 - is the final way that you can add CSS to
42:33 - an HTML file and honestly in my opinion
42:36 - it's one of the best ways if you have a
42:38 - lot of styling that you want to do um so
42:44 - here I'm gonna give you guys a chance to
42:46 - take a whack at the instructions while I
42:47 - answer some questions take a look at the
42:50 - HTML file the index.html file cut the
42:53 - CSS code in between the opening and
42:55 - closing style tags and paste directly in
42:59 - the new file called CSS style dot CSS
43:02 - make sure to delete the remaining style
43:04 - element which is now empty from
43:08 - index.html so I'll give you guys a few
43:12 - minutes to play around and do that while
43:14 - I answer some questions uh Ali asks why
43:17 - is the text blue zoned out all good
43:19 - we've all been in a classroom before I
43:22 - just somebody asked earlier like what
43:25 - other things you can do with HTM what's
43:27 - the SS so I just showed them as an
43:29 - example that you can make the color blue
43:32 - it's not necessary I just was having
43:35 - some fun
43:36 - um so we answered that um can you do a
43:42 - CSS stylesheet and use inline - you
43:47 - can't Donald um you can but I wouldn't
43:50 - suggest it well I guess there might be
43:53 - use cases where it's completely
43:54 - necessary but unless it's completely
43:56 - necessary I wouldn't suggest that it's
43:59 - best to have all your code in one place
44:01 - like I mentioned before a lot of times
44:03 - when you're coding in the wild you'll
44:05 - create something put it out there into
44:07 - the world and then come back to it maybe
44:09 - months later or you'll work alongside
44:11 - somebody else and have to share code
44:13 - with them and it's just easier to read
44:16 - and maintain when your code is organized
44:19 - and it's kind of difficult to keep track
44:23 - of your styling if you have it in both a
44:24 - CSS file and inside of your HTML um down
44:32 - last wish do I prefer I personally
44:34 - prefer having it inside of a file inside
44:38 - of its own CSS file but that's just
44:40 - because I like keeping being super
44:41 - organized
44:44 - I removed the Style section from the
44:47 - HTML doc and the code this cue keep
44:51 - getting an error message okay let's go
44:52 - over this so yeah I have that same thing
44:57 - coming up but that's because I haven't
44:59 - actually done what it asked me to do so
45:01 - let's break down these instructions I'm
45:05 - having the same issue as you Samantha so
45:06 - let's go through this together
45:08 - we want to remove the code that's within
45:12 - our style tag first right and add that
45:15 - to our CSS style so I'm gonna do that
45:17 - when I paste it in it it got funny and
45:19 - like I said I like to keep things
45:21 - organized so let's just fix the way that
45:22 - looks so yeah we could do that so I've
45:31 - now taken that on the actual style out
45:34 - of HTML and added it to our style dot
45:36 - CSS file so now that I've done that I'm
45:39 - gonna go back to my HTML and I want to
45:42 - delete this element the style tag here
45:45 - we're gonna delete that just because we
45:48 - don't want to have any link
45:49 - empty tags we don't want that that's
45:53 - just not a very good way to practice
45:55 - coding so now that I've done that I want
45:57 - to run this again
45:58 - and I've not finished that checkpoint or
46:03 - instruction sorry
46:04 - cool so Samantha I hope that answered
46:08 - your question
46:11 - someone said I still can't set my vs
46:13 - code to the code Khadem e theme ooh that
46:17 - is something I would suggest putting
46:18 - that in the forum so we can address that
46:21 - here address that there but yeah there
46:24 - there is a code Khadem e-beam for BS
46:27 - code which is really awesome but I don't
46:30 - want to get into that because I want to
46:32 - make sure that everybody is on the same
46:34 - page with CSS I would suggest that for
46:36 - now you follow along with us inside of
46:38 - the Ellie or just go without the theme
46:42 - for now cool let's move on to the next
46:47 - exercise
46:50 - awesome so now we're going to link our
46:54 - CSS file so you'll notice that even
46:57 - though if I go back to exercise 4 and
47:00 - run this again even though I put the
47:03 - style inside of the CSS file it did not
47:06 - change our ptex
47:08 - like it didn't change our PT I got here
47:10 - so the reason being our HTML file and
47:14 - doesn't know our CSS file exists yet so
47:16 - that's what we're gonna do an exercise 5
47:21 - linking the CSS file perfect we've set
47:25 - as we successfully separated the
47:27 - structure HTML from the styling CSS but
47:30 - the websites web page still looks bland
47:32 - why these HTML and CSS code are in
47:36 - separate files the files must be linked
47:39 - otherwise the HTML file won't be able to
47:41 - locate the CSS code and the styling will
47:44 - not be applied you can use the link
47:46 - element in to link HTML and CSS files
47:49 - together the link element must be placed
47:51 - within the head of the HTML file it is a
47:55 - self closing tag and requires the
47:57 - following three attributes href
48:02 - like the anchor element the value like
48:06 - the anchor element the value of this
48:08 - attribute must be to the address or path
48:10 - to the CSS file type this attribute
48:14 - describes a type of document that you
48:16 - are linking to in this in this case a
48:18 - CSS file the value of this attribute
48:22 - should be set to text slash CSS well
48:26 - this this attribute describes a
48:29 - relationship between HTML the HTML file
48:32 - and the CSS file because you are linking
48:35 - to a stylesheet the value should be sent
48:37 - to stylesheet when linking an HTML file
48:42 - and a CSS file CSS file together the
48:45 - link element should look like the
48:46 - following so in this example here in the
48:49 - narrative we have our link element we
48:54 - have our href attribute our type
48:56 - attribute and our rel attribute so we're
48:59 - going to recreate that to connect our
49:01 - index.html file to our style CSS file
49:06 - note that in the example above the path
49:10 - to the stylesheet is a URL so we
49:14 - actually use like HTML com I mean I mean
49:17 - HTTP as like a whole link in this
49:22 - example but that's not always gonna be
49:24 - the case it just depends on the actual
49:26 - path to your CSS file specifying the
49:31 - path to the stylesheet using a URL is
49:33 - one of the way one way of linking a
49:35 - stylesheet if the CSS file is stored in
49:38 - the same directory as your HTML file
49:40 - then you can specify the relative path
49:42 - instead of a URL like so and here you
49:46 - can see the difference we have that href
49:49 - attribute with a value of dot slash
49:53 - style dot CSS because that's a different
49:56 - path it's a relative path and that's
49:59 - pretty much staying like in our file
50:01 - directory go into that file directory
50:03 - and find the file called CST on CSS and
50:08 - connect that to this HTML document
50:14 - using a relative path it's a very common
50:15 - way of linking a stylesheet so I want to
50:18 - give you guys a chance to go through
50:21 - these instructions and try to link your
50:25 - CSS file to your index.html file yeah go
50:34 - ahead I'll give you guys a chance and
50:35 - I'll answer some questions somebody
50:40 - asked about our YouTube channel yeah you
50:41 - can find us weird we're code Khadem e on
50:43 - youtube so if you go to youtube.com
50:45 - slash code Khadem e you'll find our
50:47 - channel and there you'll see lots of fun
50:50 - videos that were created by developers
50:53 - all across the world who've used code
50:56 - Academy in the past and they're teaching
50:59 - teaching things all sorts of really fun
51:03 - like tech and code related subjects so
51:06 - you guys can find that on our YouTube
51:08 - page whenever you have some free time
51:10 - you all have a lot of free time right
51:12 - now so okay Renaud I hope I'm
51:16 - pronouncing that right asked why was
51:18 - that era popping up was it a specific
51:22 - question or was it CSS or was it syntax
51:25 - related I don't have an error yet but if
51:29 - you are seeing any errors on your screen
51:31 - it's probably related to the kind of the
51:36 - question and the syntax um
51:38 - making sure that you're answering the
51:40 - question that was like asked so you're
51:42 - doing exactly what that question asked
51:44 - with the correct syntax we'll make sure
51:46 - that your errors don't pop up if you're
51:50 - seeing any weird errors still I would
51:54 - suggest just resetting the code in that
51:56 - exercise and starting from the beginning
51:59 - segi asks can you so show the CSS file
52:03 - again yes I can yes this is what your
52:08 - CSS style should look like here can you
52:14 - also quickly walk through how to get the
52:16 - solution in case learners keep trying to
52:19 - trying to trying it but not getting so
52:21 - if you're ever super stuck and you've
52:24 - you're banging your head against the
52:26 - wall
52:27 - our get help section here or get help
52:30 - button sorry and there there is a
52:33 - section called solution where you can
52:35 - get your solution code I suggest using
52:38 - this as a last resort i i'm personally
52:41 - one of those people who like don't tell
52:43 - me i could figure this out so i would i
52:45 - would try to wait if you can but if
52:48 - you're stuck at any point you can use
52:50 - that and if you feel like you like fell
52:53 - a few steps behind us here and you're
52:55 - trying to catch up feel free to use that
52:57 - as well okay
53:01 - kofi asked and sorry i hope everybody is
53:05 - able to get that CSS file here i'm gonna
53:10 - go back to it to show you guys but I
53:11 - want to answer Kofi's question um he
53:13 - asked about he asked about the relative
53:17 - path in the editor um so well let's just
53:21 - happen to these instructions um you
53:24 - could adhere in this code editor we are
53:27 - going to use a relative path I believe
53:30 - wait am I am I being crazy yeah and also
53:35 - if you're doing this outside of coke
53:38 - Adam e-comm and like the s code or
53:40 - something you're gonna use a relative
53:41 - path but let's just go over this um
53:46 - let's link the stylesheet um style dot
53:49 - CSS to the HTML file index.html first
53:53 - add a link tag or the link element
53:56 - within the head tag so again we want to
53:59 - focus on the head element and here we're
54:03 - going to add a link like we mentioned
54:06 - before link is a self closing element so
54:10 - it doesn't need we're not if you don't
54:13 - need to do this there shouldn't be any
54:15 - closed element this isn't necessary
54:18 - that's why I'm getting a bit of an error
54:20 - here it's a self closing tag so now that
54:24 - I've done that I want to run my first
54:26 - step run the code for the first step the
54:28 - second step is next add H the href
54:32 - attribute to the link element and set it
54:34 - equal to style dot CSS so
54:39 - here I don't need to use like a URL we
54:43 - are our file is right here if you ever
54:46 - click on this icon here you can see the
54:48 - file directory it's already within our
54:51 - directory so I can use a relative path
54:54 - and I'm gonna set that to style dot CSS
55:00 - let's run it cool now I'm going to add
55:11 - I'm gonna add the type attribute so that
55:16 - should be stylesheet because that is the
55:19 - type of file that we're linking to OOP I
55:26 - did that wrong even so this is where I
55:30 - made a mistake the type is not
55:31 - stylesheet stylesheet would be the rel
55:34 - attribute the test type is text slash
55:37 - CSS so I'm gonna go back and change that
55:40 - to text slash CSS that is the type of
55:43 - file that we're linking to and I'm gonna
55:45 - run that and now my code is correct so
55:47 - if you're ever getting an error just
55:50 - make sure your and your syntax is
55:53 - correct make sure you're actually
55:54 - answering the question and then run it
55:56 - again and the error should go away
55:59 - so now that I've done this I'm seeing a
56:02 - bit of a problem here because I my P
56:04 - Tech has not changed in my stylesheet I
56:09 - asked for any P tag to have a font
56:11 - family of Arial so I'm gonna run that to
56:15 - run that also ah my issue is that I
56:22 - haven't addressed the fourth and final
56:25 - step which is adding the rel attribute
56:26 - so I want to give my rel attribute the
56:33 - value of stylesheet and once I run that
56:38 - my CSS is completely linked to my HTML
56:40 - file now so as you can see here my first
56:45 - P tag is it has the front family of
56:51 - Arial
56:52 - so yeah um cool I'm gonna ask answer
56:57 - some more questions and let's see here
57:02 - Manuel why does the link need three
57:05 - attributes feels like type and RAL
57:07 - should give the same info this is what
57:10 - HTML needs in order to actually read
57:13 - what it needs to do so the type just
57:16 - tells you what type of file that the CSS
57:19 - is but the rel it shows what the actual
57:22 - relationship between the HTML file and
57:25 - the CSS is going to be and this is us
57:27 - letting the HTML know that your
57:30 - relationship with CSS is for CSS sister
57:33 - serve as your stylesheet um honestly I'm
57:37 - I'm not sure what other use cases you
57:39 - actually have as a relationship between
57:42 - HTML and CSS I've never tried that
57:44 - before but I'm assuming that there might
57:47 - be other relationships you could
57:49 - possibly have that saying like okay even
57:52 - though this is a cascading style sheet
57:54 - you're not using this as a style sheet
57:56 - right now so we're just letting it know
57:59 - not only what type of file it is but
58:01 - what the relationship to that file
58:02 - should be aundrea asks what about having
58:10 - a closing slash to a link tag so that
58:13 - would actually cause an error because
58:18 - there's no it's not really necessary
58:21 - when you kind of look at our use case
58:23 - here to even have a closing tag but
58:25 - links don't expect to have a closing tag
58:28 - if you have a closing tag there you may
58:30 - pull an herb because it should not be
58:32 - there the link is all about linking to
58:35 - files and all the information we need
58:37 - are from the attributes there's nothing
58:39 - that would fall in between a Imaginary
58:42 - closing tag and opening time for links
58:44 - and nothing goes here so this closing
58:47 - tag isn't necessary I think Andreea loss
58:54 - means like what do we have the forward
58:56 - slash of the very end of the opening
58:59 - link tag wait we do for image yes
59:04 - that is a great question honestly so if
59:07 - you do that I don't think it would run
59:09 - an error at all and to be really honest
59:14 - with you I don't know why that doesn't
59:16 - have a there's a slash at the end I
59:21 - think you can do that but I it's not
59:24 - necessary to run um and I understand
59:27 - because with element like the image
59:29 - element you do need to have that because
59:31 - if we don't that could run an error um
59:33 - Kenny do you know yeah I think there so
59:36 - I posted in the chat a little forum
59:39 - discussion that people are having about
59:40 - break the BR element needing a forward
59:44 - slash and some meeting not I think this
59:46 - goes back to the styling and what you
59:49 - prefer largely it's optional in both
59:52 - these cases as we've seen it's worked in
59:54 - both cases so depending on how you want
59:56 - to keep this consistent styling
59:58 - throughout your projects and how your
60:00 - team members prefer this that is
60:02 - probably the thing that you're gonna
60:03 - adhere to throughout Thanks yeah we
60:06 - really like that you said that too
60:07 - because we are using it at the end of
60:10 - image tag so if I want to be consistent
60:11 - organized I would add that too
60:16 - awesome cool and what um Kenny might be
60:19 - referring to for those who don't know is
60:21 - that VR tag so that's like a break it
60:24 - just creates like an extra space so now
60:27 - we have more space between the line with
60:30 - Florence Italy and the quote above yeah
60:37 - so let's see what other questions we
60:39 - have um Scott asks are tight and rel
60:45 - attributes just a descriptor or does it
60:47 - the value we put in matter it doesn't
60:50 - matter so if you guys recall before I
60:52 - accidentally put style sheet here that
60:57 - is not a value that's that type is
61:00 - prepared to handle so if we add that as
61:03 - a value for that attribute hTML is going
61:06 - to be like it doesn't compute it doesn't
61:08 - compute because that is not that's not
61:12 - an accepted value for that attribute so
61:15 - it is important that
61:17 - you have a value here and that is the
61:19 - correct value Jonathan asks what does
61:24 - rel stand for it stands for a
61:25 - relationship so the relationship between
61:28 - the two files
61:30 - Elijah asks if we can't tell the
61:33 - difference between the fonts is there
61:35 - another way to see if the code is
61:37 - working yes so if your code is acting a
61:40 - little funny and you can't see the
61:41 - difference um you can say sans-serif
61:45 - here sans-serif is it's a another way of
61:55 - just pulling up a different type of font
61:57 - so our font here this is sans-serif if
62:02 - you're in if you're a typography nerd
62:04 - like me sans-serif is kind of more
62:07 - simple like block text whereas there is
62:11 - a little fancier it has like the wise
62:14 - look a little fun and they have like fun
62:16 - little tails on the ends of them and the
62:19 - t's look more sophisticated that would
62:21 - be a serif font but if you don't want it
62:26 - to have us there would be censor stands
62:30 - and asserts in women this might be a
62:36 - good time to look up some documentation
62:38 - too it would yes it surely would so
62:41 - let's check out mdn CSS so if you ever
62:44 - want to you could actually google this
62:46 - to mdn CSS this is a really cool talk
62:48 - invitation that like goes over CSS the
62:53 - ins and outs of it it's awesome we love
62:56 - to see it um and you know it's it
63:00 - there's a lot of information here like
63:02 - on everything related to CSS if you ever
63:06 - feel like this is a little too um a
63:08 - little too overwhelming for you to go
63:10 - into this we would suggest checking out
63:13 - our cheat sheet as well where you can
63:15 - also find information about CSS but
63:18 - specifically with questions about like
63:20 - fonts and things like that we can look
63:23 - up different font families suffice sirs
63:27 - like font family here
63:30 - um yeah I give me some rundown on
63:36 - different types of fonts um
63:38 - I we've all probably seen like Times New
63:43 - Roman before or like open sans before
63:45 - Georgia is a type of font Georgia is a
63:48 - serif font so if you ever are using a
63:51 - serif or sans serif font and the browser
63:54 - isn't accepting that font name I
63:57 - mentioned earlier that sometimes you
63:58 - need to put it inside of quotations but
64:00 - it's also really helpful to add serif or
64:03 - sans serif afterwards so when going
64:07 - through the cascading style sheet it
64:09 - reads it like font family Gill sans sans
64:13 - serif so if it doesn't know what Gill
64:16 - sans is it's gonna look for another
64:18 - value here that it can replace Gill sans
64:20 - with just in case and that is why you'd
64:23 - want to add sans serif here if you're
64:27 - not seeing Arial it might just mean that
64:29 - your browser is kind of confused as to
64:31 - what Arial is it doesn't know so adding
64:34 - Sancerre should change your font and it
64:38 - could possibly look like this like if I
64:40 - didn't have Arial here and I ran it it
64:44 - will still give me an area looking font
64:49 - okay
64:51 - is this helpful is everyone learning
64:54 - something um Perry asked is the oh is
65:00 - the dot slash optional for the relative
65:02 - path so great question Perry Perry's
65:06 - referring to here in the narrative we
65:08 - have dot slash CSS style dot CSS here we
65:12 - don't have that dot slash we don't need
65:15 - it
65:15 - here um let's get into directories so we
65:20 - have our HTML file we have our CSS file
65:23 - if I had let's see can I do that here
65:27 - how would I do that if I had a new
65:29 - folder and let's say I had a folder and
65:32 - I decided to call it CSS and I put all
65:35 - my CSS sheets inside of this so say had
65:41 - style
65:41 - - that's
65:43 - why not and I had that inside of that
65:48 - CSS folder in order to access that one I
65:51 - would need to do here let me move this
65:56 - so it's easier to read I would need to
65:59 - do dot slash CS style to CSS to access
66:06 - the stylesheet reason being I'm in my
66:09 - index file I need to tell it to go into
66:12 - or actually let's see did I do that
66:16 - right
66:16 - yes I would need to tell it to go into
66:19 - no I did not do that right sorry
66:21 - I would actually need to do CSS slash um
66:26 - style to dot CSS in order to access this
66:31 - CSS file it's empty so let's change this
66:36 - to color red
66:41 - and run it now I don't have my Arial
66:47 - font anymore am i see that my text has
66:50 - turned red
66:51 - um because I accessed it by saying okay
66:55 - we're in our HTML file from there go
66:57 - into the CSS file and when you're in
66:59 - there look for style - dot CSS and use
67:02 - that as your style she instead can we
67:05 - take a pause for a quick second there -
67:06 - if we take a look at style that CSS
67:09 - style - that's CSS um even though we had
67:13 - an error
67:13 - notice that red dot to the left because
67:16 - we have an extra bracket our browser
67:18 - still kind of understood what we were
67:20 - talking about and still translated that
67:22 - code to make sense for itself
67:24 - so there is some funky behavior like
67:26 - that it's a little forgiving in times
67:28 - like this but it could also make it a
67:30 - real big page narrow down and like Conan
67:32 - on what the specific error is yeah I
67:36 - create if I added more code to this
67:40 - style - dot CSS file if this was like a
67:43 - hundred lines of code this would be that
67:45 - moment where I'm like what is wrong what
67:48 - is wrong certain browsers might be
67:51 - forgiving and say like I understand what
67:54 - you mean especially if they're newer or
67:55 - smarter
67:56 - but some browsers it may not work at all
68:00 - so when I get rid of that because I
68:01 - wanted to work on all browsers
68:03 - regardless of any issues and so I hope
68:08 - that like kind of explains if I also the
68:10 - dot CSS what that would mean is if HTML
68:14 - was inside of a folder leave your folder
68:17 - and go find a new folder um that dot is
68:22 - the root the root in the file directory
68:25 - so it's saying start from start from the
68:28 - very beginning of this file directory
68:29 - and go look for this so if I had it as
68:34 - dot style dot slash style.css and I ran
68:40 - it it would actually use this CSS file
68:43 - because it's saying hey start from the
68:45 - root which is just the files file and
68:48 - find style dot CSS if I did that with
68:56 - style - it wouldn't work because style -
69:01 - is hidden inside of another folder I
69:05 - hope that answered that question for you
69:10 - guys
69:11 - file directories can be funky that's
69:13 - another one of those things that you
69:15 - want to keep nice and organized
69:16 - um because if you don't you may not you
69:20 - may be doing absolutely nothing wrong
69:22 - except for forgetting to call the right
69:26 - file um someone asked if you write HTML
69:32 - first and then CSS next you don't - it
69:36 - just depends on your workflow really um
69:38 - I I like to personally start with my
69:41 - HTML and uh my CSS but sometimes as when
69:45 - you're actually working on a project
69:46 - you'll create your HTML work on your CSS
69:49 - and realize there's some things you need
69:50 - to change in your HTML so you there's no
69:53 - order to it but the CSS will only be
69:57 - able to call what has been created in
70:01 - the HTML so you kind of want to make
70:03 - sure your basic structure is down before
70:06 - you start styling it
70:09 - all right let's move on to the next one
70:11 - these are great questions guys um I'm
70:16 - now on exercise six tag name CSS can
70:22 - select HTML elements by using an
70:24 - elements tag name a tag name is the word
70:28 - or character between HTML angle brackets
70:31 - for example in HTML the tag for a
70:34 - paragraph element is P R P inside of our
70:39 - little alligators the CSS syntax for
70:44 - selecting P elements is P with the curly
70:47 - brackets here we went over that earlier
70:49 - and the example above all paragraph
70:52 - elements will be selected using the CSS
70:54 - selector the selector and the example
70:57 - above is the P we're selecting all P
70:59 - tags
71:00 - note that the CSS selector matches the
71:03 - HTML tag for that element but without
71:06 - the angle brackets so when we're
71:09 - creating a selector for anything if I
71:11 - want to create a selector for an image
71:13 - tag I am just grabbing the actual text
71:19 - from that selector not the this would be
71:25 - incorrect in additional - in addition to
71:33 - curly braces followed immediately after
71:36 - the selector an opening and closing
71:38 - brace respectively any CSS properties
71:41 - will go inside of the curly braces to
71:43 - style the selected elements so let's hop
71:47 - into these instructions again guys and
71:49 - in style dot CSS add a selector for the
71:53 - h1 elements go ahead and do that so here
72:01 - you wanna have your selector I like to
72:06 - keep Mike you can't you don't need to
72:08 - have a space but personally I like to
72:09 - have a space just to make it easy to
72:12 - read I want to follow up the h1 tag or
72:19 - selector sorry with the curly braces
72:22 - let's run that code awesome now inside
72:28 - of the curly brace of the curly braces
72:30 - of the h1 selector you just declared
72:32 - right color maroon this cut this code
72:35 - will make will make the text color of
72:38 - all hg h1 tags maroon so let's run it it
72:50 - ran correctly so now we can identify
72:52 - where it which ones were h1 tags we have
72:55 - our h1 tag as the title top vacation
72:57 - spots if you wanted to you can make this
73:02 - blue you can make this any color there's
73:04 - also like hexadecimals
73:07 - and plenty of other ways to identify
73:10 - color but just to make it easier we're
73:13 - going to actually type out the color
73:16 - name if you go ever go back to mdn you
73:21 - can look up like color for CSS here and
73:25 - find all the different ways to color
73:31 - your CSS one of which would give you a
73:34 - list it's in here somewhere I don't
73:37 - wanna I don't want to waste everyone's
73:38 - time with that too much but you can
73:41 - there's all sorts of colors that CSS
73:44 - identifies and knows um so but there's
73:49 - you know there's just certain things
73:51 - that it may not if I said periwinkle
73:55 - blue I don't know I spell that right I
73:58 - think so
74:00 - yeah it doesn't know periwinkle it knows
74:03 - like blue so there's certain colors that
74:07 - will accept in certain colors as well
74:13 - alright ok some people asked what is
74:19 - hexadecimal so a hexadecimal is when you
74:24 - use like six hex when you use six values
74:31 - to decide what a color is so there we
74:35 - have complete like lessons on this and
74:37 - it like like how are exercises on this
74:39 - and other lessons there's all there's
74:43 - all sorts of combinations you can use to
74:45 - create a color in this situation I just
74:47 - created red there's all sorts of types
74:51 - of red well that's kind of what you read
74:56 - try that there's different versions of
74:59 - red by this let's say I did can't see
75:08 - what color this makes it's like a funny
75:16 - blue um I can make it more blue or make
75:20 - it a different color by playing around
75:23 - with that in order to know like exactly
75:27 - how to make different colors I would
75:29 - suggest checking out that lesson and it
75:31 - kind of gives you a bit of more of a
75:35 - rundown of how to read hexadecimals how
75:38 - to create them how to make fun colors
75:42 - like orange I believe this would make
75:47 - orange no yellow see it's kind of hard
75:51 - to just tell which is why we're just
75:53 - using titles right now why did we add
75:58 - the h1 on tag so if we go back to our
76:01 - index here if you look at your HTML
76:04 - index.html um we already have an h1 tag
76:07 - here in CSS we are calling on that we're
76:12 - selecting with our selector h1 and we're
76:16 - giving them the color of maroon Rachel
76:20 - oh my god your last name so fun for
76:22 - Rachel both
76:24 - the next sessions are interesting to me
76:27 - by can I attend oh yes so Rachel's
76:29 - asking about like the sessions and how
76:32 - she can view them we're recording all of
76:33 - our sessions they'll be available around
76:36 - Tuesday next week so you can pick
76:39 - whichever one interest you most right
76:41 - now and check out the one that you
76:43 - missed next week yes thank you say I'm
76:50 - Sam Sam you're awesome
76:52 - Sam shared the color value on the MDM
76:59 - file so they have all sorts of fun
77:04 - colors that you can use and they're all
77:08 - here so these are the colors that CSS
77:10 - automatically knows there was a time
77:14 - like the earliest versions of CSS where
77:16 - you couldn't really do that but now with
77:18 - newer CSS with um smarter browsers this
77:23 - is why it's really important to update
77:25 - your browsers guys you can now just give
77:28 - a keyword instead of having to do the
77:30 - hex value so for example beige this is
77:35 - the hex value I honestly there's just no
77:37 - way I'm gonna memorize that so now
77:39 - instead of having to go figure out what
77:41 - the hex value is I can just say beige
77:43 - and same with maroon I think they have
77:47 - here we're not that's okay but yeah
77:54 - maroon is one of those colors too
77:55 - magenta is one of those colors well you
77:57 - know um being Sam thanks for sharing
78:02 - that okay so let's move on to the next
78:05 - one how are we doing how are we feeling
78:07 - about this we good I think we're running
78:11 - into the last five six minutes though
78:13 - okay oh boy
78:15 - well before we go cuz I know there was
78:18 - also a question about like posting the
78:20 - question-and-answer session that we had
78:21 - here um but you guys can also access the
78:25 - forum and there will be a section for
78:29 - learn CSS and we can also ask and answer
78:31 - questions there and that's not just us
78:34 - but the entire community as well so
78:36 - tally would you mind showing
78:39 - to like navigate to the forms actually
78:42 - so you're inside the lesson we have
78:47 - community forums here and you can go in
78:50 - here now this this link here is going to
78:53 - take you to the forum for the specific
78:56 - course that is one way to enter the
79:01 - forum and you'll be directly linked to
79:03 - the forum related to that lesson but you
79:06 - can also go to the actual home page the
79:11 - forums and you can see like the latest
79:14 - stuff that people have created we have
79:17 - forums on anything from Python chatbots
79:19 - to C++ functions the hashes you can
79:23 - start your own forum you can search
79:25 - through the forum and try to find
79:27 - something related to what you have a
79:28 - question about it's a really really
79:30 - really awesome tool I believe that this
79:34 - is only available for people who have
79:36 - Pro so if you're using a free account
79:39 - right now correct no it's free okay so I
79:44 - will okay so I believe that this is
79:47 - available if you have a free account
79:51 - with us you should be able to go in and
79:52 - ask questions yeah it's all right here
79:57 - and since we have to wrap up we have to
80:00 - go soon if you have any related
80:02 - questions related to this course that
80:03 - weren't answered today or you decide to
80:06 - move through the rest of this and you
80:07 - have any questions pop up for you
80:09 - go ahead into our forum and ask some
80:11 - questions there you could get a response
80:13 - from me from Kenny from another learner
80:16 - halfway across the world it's really
80:18 - awesome it's a great place to just you
80:21 - know in touch with community so yeah do
80:25 - you mind if I grab the questions from
80:28 - Melinda these lessons being available
80:31 - for free or today are only so the
80:36 - lessons themselves we took from our CSS
80:38 - course our learn CSS course and if you
80:41 - want to continue them on your own I know
80:43 - a lot of people are showing that
80:44 - interest in doing that in the chat so
80:46 - don't free to pursue that we've only
80:48 - taken the beginning sessions and the
80:50 - less
80:51 - and overall our fries hollingers whether
80:53 - he have a free or pro account um we've
80:55 - included a project we kind of teased at
80:57 - the beginning that we might do it but
80:58 - based on your all your questions that we
81:00 - had and everything that we wanted to
81:02 - answer we just didn't have time for it
81:03 - um but for the duration of today they're
81:06 - gonna be free
81:07 - okay the project's will be free for
81:08 - today for learn CSS after today though
81:12 - they'll go back to being pro only okay
81:15 - so take advantage of it while you can
81:18 - and I hope that answers
81:21 - Rachel's question as well just a quick
81:26 - thing about the community so the the
81:28 - community forum is definitely all free
81:30 - for like all aspects of it I also in the
81:34 - chat I posted a link to a discord
81:36 - chatroom which is connected to our forum
81:39 - and that's also free so just scroll up a
81:43 - little bit and you'll see a discord link
81:45 - feel free to jump in there and chat with
81:47 - our with other people in the community
81:49 - our moderators there's a lot of activity
81:52 - in there and I see one other question
81:55 - about um the like accessing this I'm
81:58 - just one more time if you go to our code
82:01 - Academy homepage and make sure you're
82:04 - logged in and signed in you will find to
82:08 - learn from our sorry at the catalogue
82:09 - sorry go back the catalog and in the
82:13 - catalog inside of the catalog we have to
82:17 - learn from home conference and there you
82:20 - can see all the lessons projects and
82:25 - everything that people are covering
82:26 - today we did learn CSS so if you go in
82:29 - there you'll find the lesson that we
82:31 - covered today and the project that's
82:34 - related to that lesson cool so Mike
82:41 - while you're here can you answer
82:42 - Christy's question about how long the
82:43 - pro scholarships last oh yeah yeah just
82:48 - typed up the response but we don't we
82:51 - don't yet know you know we don't really
82:54 - know how long this pandemic is gonna go
82:56 - on so all I can tell you is that it's
82:58 - going to be up for a bit we have no
83:00 - plans to take it down so there's no
83:02 - definitive date where it's going to come
83:03 - down so consider it up and active for
83:06 - the time being and um you know we that's
83:09 - about what we know right now right Wow
83:14 - okay guys so now that we answered all
83:17 - those questions I just want to see like
83:19 - I'm gonna stop sharing now but I would
83:21 - love to see just like by a raise of
83:23 - hands who learned something today
83:24 - feel free to blurt raise your hand in
83:26 - the chat and let us know if you learned
83:28 - something feel free to share in the chat
83:30 - what you learned I hope that this was
83:33 - helpful for you guys um I hope I got to
83:37 - as many questions as possible I really
83:39 - appreciate you guys participating asking
83:43 - questions and following along because
83:44 - you know it just it's just really
83:47 - awesome to get to see people like all
83:49 - over the world coding together at one
83:51 - time it's really fun so I'm glad you
83:54 - guys learned something yay you're
83:56 - welcome you're welcome thank you guys
83:58 - thanks everyone thank you awesome
84:03 - all right and please like please don't
84:05 - just stop coding today you know a lot of
84:08 - us are you know self isolating or
84:11 - quarantined at home like take this time
84:14 - to learn some something new learn some
84:17 - CSS learn some HTML learn some
84:19 - JavaScript
84:20 - um you know create a webpage just for
84:23 - the heck of it it's fun and it's really
84:26 - awesome way to like build your skills
84:27 - and take this time and have something
84:30 - productive come out of it so you know
84:33 - like somebody asked earlier we do have
84:35 - some scholarships that are going out so
84:37 - um if you have one of those scholarships
84:39 - please take advantage of it and enjoy
84:42 - getting to learn for it to code for free
84:44 - um Lou someone has a twenty nine day run
84:48 - streak we loved us and we loved it all
84:51 - of it thank you
84:52 - that is awesome keep going yeah build
84:55 - your streak stuff honestly I would love
84:58 - to see you like who can have the highest
85:01 - streak
85:01 - I don't I wonder if we had that
85:04 - information ever like what was a higher
85:05 - streak uncle Kennedy ever I I think we
85:08 - do like an interview with that person
85:10 - but I don't know off the top of my head
85:11 - I'm very
85:14 - twenty forty days yes that's great
85:19 - eighty Wow we also have one someone said
85:22 - one and that is great start somewhere
85:25 - you have to start somewhere make
85:27 - tomorrow - um first day yet so it's
85:32 - awesome awesome yeah take it take a
85:42 - five-minute breather we'll start the
85:44 - next webinar sessions at 1:30 so if
85:47 - you're gonna be there for JavaScript -
85:49 - introduction the JavaScript I'll see you
85:50 - there just to continue on with this
85:53 - building websites check we also have two
85:57 - data scientists from Koch Adam II who
86:00 - are working on a livestream to show you
86:02 - how to forecast Google Trends using a
86:06 - programming language a statistics
86:07 - language called learn are so I just
86:12 - posted little things to the others in
86:13 - the chat though I there's a typo there
86:15 - now starting in twenty minutes they're
86:17 - starting in a few minutes so but but the
86:19 - links are good so just follow those two
86:20 - go to the next sessions okay guys this
86:26 - is where I leave you it was great
86:28 - teaching there CSS was great working
86:29 - along with you guys so bye please please
86:33 - please like follow coming along to
86:35 - JavaScript or if you're really
86:36 - interested in analyzing like Google
86:40 - transits also sounds really awesome so
86:42 - check that out too
86:44 - yeah alright let you guys go it's
86:50 - prosper

Cleaned transcript:

yay hey everybody let's see if everyone could just hop in the chat and tell us what your name is and where you're coming from that would be great the by default the zoom session it looks like when you're taking a message it's only to all panelists but if you put all attendees everyone can see your responses and we can all awesome share you saw that the UK and Seattle in Orlando and Russia and Brooklyn and so happy Africa Vegas is awesome Columbia Canada this is great welcome everybody we're gonna take a few minutes just to let people will trickle in we know some people are still getting coffee from the previous session or taking a little break so we're gonna wait for people to do that if in the meanwhile you guys are joined in and you also need to get something to situate yourself for our webinar please do so I T I'm ready to go guys I got my heart coke Adam a mug on the ready which I took that from me you're like representing so Valerie now my classes can be sure would you guys get those the backgrounds again is it on Twitter or something oh and Anthony just got my question that's not oh yeah cool background so some people on our team made them for us so if you're in zoom you can always change your video I'm time a virtual ground and you can make it any picture you want I think they have some default pictures if you're feeling fancy today also it's like some ground rules we're just introducing ourselves right now which is fine the chat flows like crazy so I can't even read the first like ten messages by this point if you guys have questions along the way feel free to go into that that's Q & A panel that section and the bottom of the screen looks like to text bubbles next to each other and ask your questions there well we'll have like dedicated time to look into it Alijah taking advantage I love that is the CSS yeah we'll be focusing on CSS today and Tyler's gonna walk us through our very much coke adolescence all over the world this is awesome I love it maybe one extra minute or 30 seconds we can get started a few more seconds and we'll operate in yeah in the meanwhile kind of do you want to introduce yourself hello everybody thanks for loving my background my name is Kyla I work at Ko Academy I'm a project manager I've also written some courses on our website as well so I kind of know what I'm doing Oh people love my hair thank you I am well I live in New York City but right now I am coming from you live from upstate New York which is a winter wonderland right now so I don't know I saw somebody else said they were from Buffalo and if you're upstate whoa yeah you know it's it's like complete snow covering it just snowed oh it's like fullon snow covering the ground the cars everything like straight out of winter it was 60 degrees like two days ago yeah so that's me I'm gonna be teaching you guys some CSS today along with Kenny hey guys so I'm getting some I see some people seeing me from the previous webinar already so hi George specifically I saw that I'm a curriculum developer here at code Kadim II and I've worked on a lot of different projects I've worked a little bit on our CSS course I've done a lot of JavaScript the latest courses that I've worked on is learned go which is a go is a programming language to Google and learn Swift apples programming language so a little wellrounded here CSS isn't my forte either but we'll see what we can do today I'm very excited to have you guys all here and it's a few thoughts if I could just have a quick thing before we get started I know we'll get a lot of questions about recording so we are recording this and we will be sharing the recorded links we'll post them on YouTube they might not come out until Tuesday we just need a few days to like get everything together and make sure it's um it looks good but then we will email everybody who's here so you will get recordings and I'm like by the way I'm gonna go off camera in a minute but I'll be here to answer some some QA and help out think it's busy but uh Kenny and Kyla are gonna do the the real work here and your teachers for the next 90 minutes so enjoy where you animate thanks Mike oh yeah I mean I'm in Maryland uh a little bit kind of in between Baltimore and DC so yeah so the cool thing about you guys joining in today and following along like Mike said this will be recorded but today and some of you may know this already we've created free projects for us to jump into for the learn from home conference so the project that we're we've made available for you guys will be free today and today only so enjoy that okay I'm gonna share my screen now let's do this Stewart's so Kylie can you show them how to navigate to our course our material for today I'll also post the link directly in the chat for learners who wants to jump straight there but we have a learn from home conference course set up just for today for you guys to make things a little easier so okay so can you guys see my screen okay so the plugs up yes is this is a good find me just fix myself so I can't see alright so today we're doing the learn from home as you enter the home screen and log in make sure you're logged in so you can see everything perfectly you will see up at the top by our catalog we have a beautiful learn from home button as you click here you should be able to let me make sure I'm doing this right you should be able to go to so go to catalog yes sorry guys so go from your home screen to catalog when you enter catalog you should see learn from home conference and in here you'll see the courses go right in there and we're gonna be working on learn CSS today so let's go alright so we have a few few lessons in here in a project in here we were kind of curious what your experience with CSS is that would kind of help us figure out which one to jump into so let's with a pool can we get a pool we do the pole a little later later yeah let's jump into the lesson let's get started let's talk a little bit and then we can get the so first lesson here is on CSS selectors and setup so when you jump in you should see the very first exercise and I'll give everyone a chance to get in and get settled in before we hop into the actual lesson I also want to mention that for this lesson in particular our course we cover a lot more things but for our learn from home course today we gave we kind of took those lessons and place them here and these are like very short intros but if you want to continue your journey and learn more about CSS afterwards we can we definitely have more material at code Cadenet and just browse through our catalog you can use the search option there's a lot of things to further your knowledge after this webinar as well but here's a poll for everybody alright so go ahead and let us know how experienced you are with CSS and that way we can get a feel for what we should review what things you guys may already know oh we have a few CSS masters mmhmm you also have some beginners which makes me really excited great question because yeah can you guys see the results of the polls give me a yes or no in the chat no you can't see them yet okay that's fine and normal thank you so much um as soon as we end the poll so if as soon as everybody has responded that's when we'll share out the responses you'll see him soon I see somebody's asking about how to navigate to the course again so I'm gonna go through it one more time because I understand that was a bit confusing so you're going to and go to click add me calm and login once you log in you should be at your dashboard once you get to your dashboard you want to go up to our navigation and go to catalog and then select learn from home conference go to that course and you will see the overview and the syllabus make sure you're under syllabus and we are doing build websites learn CSS so you want to hop in there and we're gonna go straight into the first act well we'll go straight into the first lesson which is CSS setup and selectors cool make sure you're on one out of 17 the very first exercise that's intro to CSS okay I'm about to take off before I do I want to say that we see your your post in the chat I see some that are like don't go too fast and some that are like don't go too slow I think just say I mean Kyle and Kenny are pros just let him know like hey that was really faster yeah we got it and they'll be responsive all right you guys are awesome I'm gonna go back into Swift now right that's all you needed just simple yeah might get you in for another just to see how the audience how the chats doing yeah just come you know me I got thanks ELISA thank you alright so I'm gonna give everyone just a few more seconds I hope and I'll slow it down so I'm not too fast cuz I can't kind of faster but um in the meanwhile can you zoom in a little bit make the make your text a little bit bigger yes I can we do a little bit more because I think the code editor might be a little hard to see it I think that's good for me and then if we're if we're too small I'm sure the chats gonna let us know but I'm seeing something that's good seeing one bigger so yeah some of the content here is the material that we've used for the beginning of our CSS and if you've taken some CSS material already you might be landing on a different a different section of this course so Kyla can you show them how to navigate using the hamburger menu on the bottom box of course so as you're on this course to be camera over you can move through our exercises here so as you complete the exercises you know the next one will be made available to you but we're starting off with the intro to CSS exercise inside of CSS set up in selectors after that is inside I'm in line styles and will kind of move through just the basics of how to get yourself set up with CSS so that you can actually style a web page and then from there we'll keep going to CSS in a more advanced way I guess you could say with the actual styling all right is everybody ready are we feeling good okay all right so here's how we're gonna kind of do this let me know what you guys think but we're gonna go over the narrative together and just kind of get it understanding for what we're of learning and then from there we're going to review the instructions together after we reviewed the instructions I want to give you guys a few minutes to test it out yourself and then we'll do it all together I'll probably give you like two to five minutes to depending on how many instructions there are too watch yourself and then we'll do it as a group and move on to the next exercise as we continue to do this eventually we'll just check in with you guys to see how you guys feel feel like if you have a grasp on things and we could potentially move on to another lesson or even move on to a big project that we could do all together cool so let's start off with intro to CSS the very first exercise the basic structure of every webpage hmm HTML is very plain on its own the beautiful websites that you see across the internet are styled with various tools including CSS CSS or cascading style sheets is a language that the web developers use to style HTML content on web site or web page sorry if you're interested in modifying colors fonts font sizes shadows images element positioning and more CSS is a tool for the job in this lesson you will learn how to select which HTML elements you wish to style and set up for your CSS file structure cool so let's kind of break this down um in our code editor we have an HTML file and a CSS file this is what we're going to kind of play around with today to connect our CSS to our HTML and style the HTML file what you're seeing in our small browser here is an HTML file being ready to but does not have any styling with CSS yet so that's what we're gonna work on today this is like a super basic website that kind of gives me a throwback to like 1990 something it doesn't have like all the really cool features or like just styles that were used to in 2020 so we're gonna kind of play around with it and make it look better so I'm gonna move on to the instructions um and then give you guys the opportunity to do this yourself so take a look at the code and the browser to the right the code is plain HTML without any styling let's take a quick look at the power of CSS copy the line of code and paste it on line five then run your code so that code within this box right here is what you're going to copy paste into your HTML file in line five so once you copy and pasted it run your code and see what happens take some time to explore and experiment with the code in style dot CSS so I'll give you a few moments to copy and paste that line of code it should be pretty quick I think some people already did it alright so alright boys I'm going to try it out okay and now I am going to run my code let's go run my code now completely different website this so this shows you the power of CSS it really takes that basic HTML page and turns it into something completely different by styling it we've changed the images we've changed the colors we've changed the font we even have like a fun button now so we're going to kind of go over like how that actually happens with CSS today personally CSS is one my favorites I just love being able to take like something that looked really basic and make it fun especially when you show your friends that you just did something like that you look like a coding genius honestly so um anybody have any questions based off of this or you guys ready to move to the next exercise okay cool um and right before we move to the next exercise I just want to go over some other things after the instructions you have concept review and the forums um the concept review here you'll always find our cheat sheets here where where it our cheat sheets are a really cool feature that allow you to kind of like go in and review content that you're gonna learn in a lesson it's really awesome really great reason to join I'm coach Adam II pro after that you'll see the forums and the forum is a great place to go and ask any questions so we're gonna kind of move through a lot today here if anybody has any questions that didn't get answered a great place to go is the forum to either see if somebody else asked that question and find the answer or to ask that question and wait for somebody to give you an answer alright question panel I guess asking are we supposed to watch too long or on the code Academy website work code along so I think we can I mean it's up to you guys we're gonna allow for both to happen where Kyle is going to write the code and do all the things necessary to get the passing solution but if you want to just sit back and relax and watch her do it go for it if you want to code it long join it okay yeah so so the next exercise I actually would love if you guys code along with me so let's do that alright so now we're in the inline Styles exercise although CSS is a different language in HTML it's possible to write CSS code directly within HTML using inline styles to style an HTML element you can add style attributes directly to the opening tag after you've added the attribute you can set it equal to a CSS style or styles you'd like to you'd like apply to the element so a lot of you guys were in the previous livestream where we went to where they went over HTML and how that works so a lot of you are familiar with a tag but if you're not our tags are things like the head tag or the body tag we're gonna focus on the tags inside of the body tag and those are elements like image tags h1 tags and paragraph tags and you can add right inside of that element for example here we have like a paragraph tag with the style added we've added color to the font and that color is red here in this example the color in the example above oh well I kind of explained that see freak eyes I'll hop over to the next paragraph you might wonder you might be wondering um you might be wondering about the syntax of the following snippet of code color red at the moment these details of the syntax are not important you'll learn more about CSS syntax and other exercises for now it's important to know that the inline styles are a quick way of directing directly styling an HTML element if you'd like to add more style more than one style within with inline Styles simply keep adding the style attribute adding to the style attribute make sure to end the styles with a semicolon so in inline Styles you can add multiple things so in this case we added a red font color but we can also change the font size it's really important for your code to work that you have that semicolon following each style attribute as well as a colon following the property in the kiss case color is a property red is the value font size is a property 20 points or 20 pixels sorry it's a value so I'm going to give you guys the chance to try this out yourself the instructions say in index.html use the inline style to set the font family of the first paragraph to Arial I'm going to give you guys a hint here font family is the property and Arial is the value so I'll give you guys a chance to try that out I'll give you two minutes or maybe 60 seconds and after you're done with that we'll go over together Ross that asked a great question about cheat sheets so Kyla in the concept review panel there on the left do you mind talking about that just a quick second yeah yeah so in concept review you'll find cheat sheets and here with cheat sheets this is a feature that allows us to like review what was inside of that lesson and some way if you were saying you're having a hard time seeing it I believe it's a pro feature so you may need to have a pro account in order to see it um if you want to try them out I would suggest I'm trying out our free trial just to like check out what Pro is like and you'll be able to see really cool features like cheat sheets as well as actual projects and all sorts of other really great stuff you also will have access to things like a really cool video content articles things of that sort um how do you download the pretty cheat there is the print cheat sheet section here I would select that and if you just want to download it so it's on your computer save it as a PDF and you'll have this with you or you could print it and take it with you wherever you want um yeah so that's a really cool feature I'm shout out to one of our curriculum developers sunny and the rest of the code academy team who like helped him make that make that possible sunny some people are coming in from the live stream previously for HTML so they know sunny yeah okay cool so set the font family we want to set family of the first paragraph to Ariel so the first thing I want to do here is find our first paragraph that's the first P tag here now I want to come in I want to make sure that I'm creating my style attribute and setting that equal to it always makes sure it's inside of quotations guys it's whenever you forget a quotation things get wonky I want to set that equal that font family property equals the area of the bunch and I want to follow that up with the semicolon so now when I run my code it changed you'll see the change here in the very first paragraph so it's the only the first paragraph that changed with Arial right yes so it's only my first paragraph because I simply applied it directly to this tag there are other ways to make it a pull on to apply things to all the tags all the P tags but we'll get into that a little later but for now I'm just focusing on that one paragraph because say I just want one paragraph to look different than the rest of them do that's one way I can make that happen okay so now I'm gonna move on to the next one I'm gonna take a sip of tea okay this is exercise number three the style tag inline styles are a fast way of styling HTML but they also have limitations if you want to style for example multiple h1 elements you would have to add inline styling to each element manually in addition you would also have to maintain the HTML code when additional h1 elements are added so if I create a website and I have to come back in to that website and I want to make some changes I would have to manually change everything every single time so I can have a consistent consistent style and that is not realistic it's not scalable and that's definitely not what companies actually do with their websites so we're going to get into how to make things work for multiple elements fortunately HTML allows you to write CSS code in its own dedicated section with this style element CSS can be written down written between opening and closing style tags use the style tag element to use the style tag element sorry the style element sorry guys it must be placed inside of the head out so our head element is here after adding a style tag in the head section you can begin writing CSS code so this right here is what CSS code actually looks like when it's not in line we're going to practice making that the CSS code in the example above is changing the color of all paragraph text to read and also changing the size of the size of the text to 20 pixels know how this seen the syntax of the CSS code matches for the most part the syntax you you are you used in inline styling sorry the main difference is that you can specify which elements to apply to the styling to again the details of the CSS syntax in the example above aren't important at the moment you will learn about the details of CSS syntax later in this lesson so in later lessons sorry so the key here is that we've now applied this to all the paragraph tags instead of just one I noticed someone said what's font family meeting so earlier I'm in the last exercise we added the font family the font family with Arial so that changed this to being Arial font types instead of the Times New Roman that it's like the default text um the default font so in this situation what we want to do is start applying the applying styles to more tags so let's hop into these instructions on the first instruction first add a style element inside of the index.html file then make sure to delete the inline style you to the paragraph so I'm gonna give you guys a few minutes to a few seconds to do that while I do that too so I want to find my head element that's here and I want to add style to it the key is making sure I have both my head tag and my close tag I've not added that style tag and I want to get rid of what I had before because we don't really need that for the rest of this lesson so get rid of that inline Styles that changed the font family and we're gonna run that code and then in our next set of instructions it says add the in the inline Styles you removed from the P tag element to the style element in the head so just in case you guys didn't remember we changed the font family to Arial I'll give you guys a few minutes to do that I suggest as a hint to yourself for the formatting checking out the syntax in the example here so I want to give you guys the check chance to recreate that by making the paragraph tags have a font family of Arial and give you guys 60 seconds to look that up to try that out and then we'll do it together um Fiona asked how do I get into the next lesson ie the style tag lesson so this is this is we're all within the same lesson this is the next exercise the way you want to do that is making sure that you're you've gone through the instructions and completed that once you've completed that you can hit the next fine it'll highlight once you've completed your instructions and then you can move on to the next exercise okay so I'm going to make I'm going to change that font family inside of the style tag now so I want to let my HTML and CSS know that I'm addressing all my P tags all my P elements ah and then I want to create the actual CSS code so I need curly brackets to do that inside of my curly brackets I want to change the font family to Arial right and have a semicolon after this I know that this is incorrect and I'm going to show you I actually may not be incorrect it just depends on the browser you use but I'm gonna run this and it actually did change this because I am using a pretty new version of Chrome but some of you may need to do this to make it run if you like feel like you're running into any weird things it might be your browser but yeah the value should be Arial my property is font family my value is Arial cool so now that both of my instructions have been addressed the yellow button here the next button I can hit that now and move on to the next exercise someone asked how would this work at the CSS is on a different file and not on a style tag we're gonna get to that you're ahead of the game so you CSS and Manson masters are like popping up at it but I'm we're gonna get to that there is a way to have CSS on a different file okay you're someone is following along on iPad and they're having some trouble so I would suggest I'm not exactly sure what this what zoom is looks like on an iPad to be very honest with you um I suggest coming back to this when it's recorded and uploaded on Tuesday and that'll give you the chance to kind of check out what we did and possibly follow along on a desktop or a laptop um can I go full screen please yes is that better lint yeah um okay why do the brackets have to be on separate lines this is a great question no Blonsky is still having a hard time seeing um I'm gonna address Andrews question in just a second on Valencia I am in full screen and I've like zoomed in some hopefully that helps you see if you're still having trouble viewing um I'm really sorry about that we might have to we you might have to wait for the recorded version of this we see your picture is my screen not sure your fine color your screen you sure I'm seeing it but you people also have the option of clicking on different panels and seeing which ones they choose to have as their main screen so maybe that's the that's what's going on there all right so I went address Andrews question um back in exercise 3 so Andrew asked about like just the the formatting of this syntax we have these curly brackets on different lines and the reason being I mean you could technically do this and it could work like sometimes let's run that because really it yeah so you could do it like this but when you code like this and you're format is really like dense after a while having lines and lines and lines of code it can get really difficult to read your code for and if you're doing this out in the Y often times you're coding with a partner and when you hand off your code to another person you want to make sure it's clean and easy to read so the default setting this is kind of just like you know globally accepted is to have your CSS um formatted this way where your brackets open up and all of your properties and values fall inside of it it just makes it a lot simpler to read it's really easy to say okay where are the pieced out of the stylings for all P elements you can easily find P and find out how they're being styled so that's why we have it like this um it's not going to necessarily be incorrect if you don't have your CSS formatted like this but it's technically not the professional way to code a lot and most languages have like funny little formatting and like ways to create your syntax that are kind of just widely accepted if you're ever curious about that I would suggest checking out like MD n um they have like they kind of have the documentation for things like CSS HTML even Python JavaScript and things like that um why is only one paragraph affected let's see if I run this such not be the case oh you're right awesome scope oh yeah question oh well here's the reason why when I look at my HTML code this is the only P tag these while we can visually see this as a paragraph it's not actually a paragraph it's a div tag so if I wanted to change this right to P I would have to make sure I change both my opening and my closing and I ran this code it would now be a P element and it would also take on the style that I created above um if you want to stop the pole from popping up you can you should be able to close it yeah and that should be I start sharing now I wonder if that was maybe the issue where we just kept sharing before hopefully that takes care of it sorry about that guys someone asked why only one paragraph active yeah so I went over why only one was affected hopefully that's clear now but someone also asked why is it called index.html that's just I really don't I don't know who decided that like landing pages are like the the first page of your HTML will be called index.html that's also like a that's a question which worth googling that's also like kind of when those widely accepted things where if you have a single on HTML page or you have like a home page for a HTML page it's often called index.html I guess it's just your starting pages your index is work in the editor visual studio yes I love using visual studio for CSS is it okay that we put it on less than three not the same color as Kyle is yeah absolutely you can make it um unless so you want to make sure you're following the instructions so that your code passes but if you want to add color or something like that be my guest you actually love to see you guys do stuff like that so have fun with it you can follow follow along with me but if you want to do something a little like a little different or you want to try something new feel free to do that just know that if you're having a trouble moving on to the next exercise it might be because it's still waiting for you to say like fontfamilyarial so that it knows that you did what you're supposed to do okay so we're gonna move on to exercise for how are things going we have 352 people great we're all here exercise for the CSS file or the dot CSS file developers avoid mixing code by storing HTML and CSS CSS code in separate files HTML files contain only HTML code and CSS files contain only CSS code you can create a CSS file by using the dot CSS file name extension like CSS like style dot CSS so we do have a style dot CSS file here we're gonna have fun with that with a CSS file you can write the CSS code needed to style a page without sacrificing the readability and maintainability of your HTML file so like we talked about a little bit earlier um you know we could style every single element on this page we can style the title the image we could just we could have a heyday the bullet points everything um this would become a very very big heavy file if we did that and it would also become really really difficult to read so we're going to take our style and put it inside of style dot CSS instead this is the final way that you can add CSS to an HTML file and honestly in my opinion it's one of the best ways if you have a lot of styling that you want to do um so here I'm gonna give you guys a chance to take a whack at the instructions while I answer some questions take a look at the HTML file the index.html file cut the CSS code in between the opening and closing style tags and paste directly in the new file called CSS style dot CSS make sure to delete the remaining style element which is now empty from index.html so I'll give you guys a few minutes to play around and do that while I answer some questions uh Ali asks why is the text blue zoned out all good we've all been in a classroom before I just somebody asked earlier like what other things you can do with HTM what's the SS so I just showed them as an example that you can make the color blue it's not necessary I just was having some fun um so we answered that um can you do a CSS stylesheet and use inline you can't Donald um you can but I wouldn't suggest it well I guess there might be use cases where it's completely necessary but unless it's completely necessary I wouldn't suggest that it's best to have all your code in one place like I mentioned before a lot of times when you're coding in the wild you'll create something put it out there into the world and then come back to it maybe months later or you'll work alongside somebody else and have to share code with them and it's just easier to read and maintain when your code is organized and it's kind of difficult to keep track of your styling if you have it in both a CSS file and inside of your HTML um down last wish do I prefer I personally prefer having it inside of a file inside of its own CSS file but that's just because I like keeping being super organized I removed the Style section from the HTML doc and the code this cue keep getting an error message okay let's go over this so yeah I have that same thing coming up but that's because I haven't actually done what it asked me to do so let's break down these instructions I'm having the same issue as you Samantha so let's go through this together we want to remove the code that's within our style tag first right and add that to our CSS style so I'm gonna do that when I paste it in it it got funny and like I said I like to keep things organized so let's just fix the way that looks so yeah we could do that so I've now taken that on the actual style out of HTML and added it to our style dot CSS file so now that I've done that I'm gonna go back to my HTML and I want to delete this element the style tag here we're gonna delete that just because we don't want to have any link empty tags we don't want that that's just not a very good way to practice coding so now that I've done that I want to run this again and I've not finished that checkpoint or instruction sorry cool so Samantha I hope that answered your question someone said I still can't set my vs code to the code Khadem e theme ooh that is something I would suggest putting that in the forum so we can address that here address that there but yeah there there is a code Khadem ebeam for BS code which is really awesome but I don't want to get into that because I want to make sure that everybody is on the same page with CSS I would suggest that for now you follow along with us inside of the Ellie or just go without the theme for now cool let's move on to the next exercise awesome so now we're going to link our CSS file so you'll notice that even though if I go back to exercise 4 and run this again even though I put the style inside of the CSS file it did not change our ptex like it didn't change our PT I got here so the reason being our HTML file and doesn't know our CSS file exists yet so that's what we're gonna do an exercise 5 linking the CSS file perfect we've set as we successfully separated the structure HTML from the styling CSS but the websites web page still looks bland why these HTML and CSS code are in separate files the files must be linked otherwise the HTML file won't be able to locate the CSS code and the styling will not be applied you can use the link element in to link HTML and CSS files together the link element must be placed within the head of the HTML file it is a self closing tag and requires the following three attributes href like the anchor element the value like the anchor element the value of this attribute must be to the address or path to the CSS file type this attribute describes a type of document that you are linking to in this in this case a CSS file the value of this attribute should be set to text slash CSS well this this attribute describes a relationship between HTML the HTML file and the CSS file because you are linking to a stylesheet the value should be sent to stylesheet when linking an HTML file and a CSS file CSS file together the link element should look like the following so in this example here in the narrative we have our link element we have our href attribute our type attribute and our rel attribute so we're going to recreate that to connect our index.html file to our style CSS file note that in the example above the path to the stylesheet is a URL so we actually use like HTML com I mean I mean HTTP as like a whole link in this example but that's not always gonna be the case it just depends on the actual path to your CSS file specifying the path to the stylesheet using a URL is one of the way one way of linking a stylesheet if the CSS file is stored in the same directory as your HTML file then you can specify the relative path instead of a URL like so and here you can see the difference we have that href attribute with a value of dot slash style dot CSS because that's a different path it's a relative path and that's pretty much staying like in our file directory go into that file directory and find the file called CST on CSS and connect that to this HTML document using a relative path it's a very common way of linking a stylesheet so I want to give you guys a chance to go through these instructions and try to link your CSS file to your index.html file yeah go ahead I'll give you guys a chance and I'll answer some questions somebody asked about our YouTube channel yeah you can find us weird we're code Khadem e on youtube so if you go to youtube.com slash code Khadem e you'll find our channel and there you'll see lots of fun videos that were created by developers all across the world who've used code Academy in the past and they're teaching teaching things all sorts of really fun like tech and code related subjects so you guys can find that on our YouTube page whenever you have some free time you all have a lot of free time right now so okay Renaud I hope I'm pronouncing that right asked why was that era popping up was it a specific question or was it CSS or was it syntax related I don't have an error yet but if you are seeing any errors on your screen it's probably related to the kind of the question and the syntax um making sure that you're answering the question that was like asked so you're doing exactly what that question asked with the correct syntax we'll make sure that your errors don't pop up if you're seeing any weird errors still I would suggest just resetting the code in that exercise and starting from the beginning segi asks can you so show the CSS file again yes I can yes this is what your CSS style should look like here can you also quickly walk through how to get the solution in case learners keep trying to trying to trying it but not getting so if you're ever super stuck and you've you're banging your head against the wall our get help section here or get help button sorry and there there is a section called solution where you can get your solution code I suggest using this as a last resort i i'm personally one of those people who like don't tell me i could figure this out so i would i would try to wait if you can but if you're stuck at any point you can use that and if you feel like you like fell a few steps behind us here and you're trying to catch up feel free to use that as well okay kofi asked and sorry i hope everybody is able to get that CSS file here i'm gonna go back to it to show you guys but I want to answer Kofi's question um he asked about he asked about the relative path in the editor um so well let's just happen to these instructions um you could adhere in this code editor we are going to use a relative path I believe wait am I am I being crazy yeah and also if you're doing this outside of coke Adam ecomm and like the s code or something you're gonna use a relative path but let's just go over this um let's link the stylesheet um style dot CSS to the HTML file index.html first add a link tag or the link element within the head tag so again we want to focus on the head element and here we're going to add a link like we mentioned before link is a self closing element so it doesn't need we're not if you don't need to do this there shouldn't be any closed element this isn't necessary that's why I'm getting a bit of an error here it's a self closing tag so now that I've done that I want to run my first step run the code for the first step the second step is next add H the href attribute to the link element and set it equal to style dot CSS so here I don't need to use like a URL we are our file is right here if you ever click on this icon here you can see the file directory it's already within our directory so I can use a relative path and I'm gonna set that to style dot CSS let's run it cool now I'm going to add I'm gonna add the type attribute so that should be stylesheet because that is the type of file that we're linking to OOP I did that wrong even so this is where I made a mistake the type is not stylesheet stylesheet would be the rel attribute the test type is text slash CSS so I'm gonna go back and change that to text slash CSS that is the type of file that we're linking to and I'm gonna run that and now my code is correct so if you're ever getting an error just make sure your and your syntax is correct make sure you're actually answering the question and then run it again and the error should go away so now that I've done this I'm seeing a bit of a problem here because I my P Tech has not changed in my stylesheet I asked for any P tag to have a font family of Arial so I'm gonna run that to run that also ah my issue is that I haven't addressed the fourth and final step which is adding the rel attribute so I want to give my rel attribute the value of stylesheet and once I run that my CSS is completely linked to my HTML file now so as you can see here my first P tag is it has the front family of Arial so yeah um cool I'm gonna ask answer some more questions and let's see here Manuel why does the link need three attributes feels like type and RAL should give the same info this is what HTML needs in order to actually read what it needs to do so the type just tells you what type of file that the CSS is but the rel it shows what the actual relationship between the HTML file and the CSS is going to be and this is us letting the HTML know that your relationship with CSS is for CSS sister serve as your stylesheet um honestly I'm I'm not sure what other use cases you actually have as a relationship between HTML and CSS I've never tried that before but I'm assuming that there might be other relationships you could possibly have that saying like okay even though this is a cascading style sheet you're not using this as a style sheet right now so we're just letting it know not only what type of file it is but what the relationship to that file should be aundrea asks what about having a closing slash to a link tag so that would actually cause an error because there's no it's not really necessary when you kind of look at our use case here to even have a closing tag but links don't expect to have a closing tag if you have a closing tag there you may pull an herb because it should not be there the link is all about linking to files and all the information we need are from the attributes there's nothing that would fall in between a Imaginary closing tag and opening time for links and nothing goes here so this closing tag isn't necessary I think Andreea loss means like what do we have the forward slash of the very end of the opening link tag wait we do for image yes that is a great question honestly so if you do that I don't think it would run an error at all and to be really honest with you I don't know why that doesn't have a there's a slash at the end I think you can do that but I it's not necessary to run um and I understand because with element like the image element you do need to have that because if we don't that could run an error um Kenny do you know yeah I think there so I posted in the chat a little forum discussion that people are having about break the BR element needing a forward slash and some meeting not I think this goes back to the styling and what you prefer largely it's optional in both these cases as we've seen it's worked in both cases so depending on how you want to keep this consistent styling throughout your projects and how your team members prefer this that is probably the thing that you're gonna adhere to throughout Thanks yeah we really like that you said that too because we are using it at the end of image tag so if I want to be consistent organized I would add that too awesome cool and what um Kenny might be referring to for those who don't know is that VR tag so that's like a break it just creates like an extra space so now we have more space between the line with Florence Italy and the quote above yeah so let's see what other questions we have um Scott asks are tight and rel attributes just a descriptor or does it the value we put in matter it doesn't matter so if you guys recall before I accidentally put style sheet here that is not a value that's that type is prepared to handle so if we add that as a value for that attribute hTML is going to be like it doesn't compute it doesn't compute because that is not that's not an accepted value for that attribute so it is important that you have a value here and that is the correct value Jonathan asks what does rel stand for it stands for a relationship so the relationship between the two files Elijah asks if we can't tell the difference between the fonts is there another way to see if the code is working yes so if your code is acting a little funny and you can't see the difference um you can say sansserif here sansserif is it's a another way of just pulling up a different type of font so our font here this is sansserif if you're in if you're a typography nerd like me sansserif is kind of more simple like block text whereas there is a little fancier it has like the wise look a little fun and they have like fun little tails on the ends of them and the t's look more sophisticated that would be a serif font but if you don't want it to have us there would be censor stands and asserts in women this might be a good time to look up some documentation too it would yes it surely would so let's check out mdn CSS so if you ever want to you could actually google this to mdn CSS this is a really cool talk invitation that like goes over CSS the ins and outs of it it's awesome we love to see it um and you know it's it there's a lot of information here like on everything related to CSS if you ever feel like this is a little too um a little too overwhelming for you to go into this we would suggest checking out our cheat sheet as well where you can also find information about CSS but specifically with questions about like fonts and things like that we can look up different font families suffice sirs like font family here um yeah I give me some rundown on different types of fonts um I we've all probably seen like Times New Roman before or like open sans before Georgia is a type of font Georgia is a serif font so if you ever are using a serif or sans serif font and the browser isn't accepting that font name I mentioned earlier that sometimes you need to put it inside of quotations but it's also really helpful to add serif or sans serif afterwards so when going through the cascading style sheet it reads it like font family Gill sans sans serif so if it doesn't know what Gill sans is it's gonna look for another value here that it can replace Gill sans with just in case and that is why you'd want to add sans serif here if you're not seeing Arial it might just mean that your browser is kind of confused as to what Arial is it doesn't know so adding Sancerre should change your font and it could possibly look like this like if I didn't have Arial here and I ran it it will still give me an area looking font okay is this helpful is everyone learning something um Perry asked is the oh is the dot slash optional for the relative path so great question Perry Perry's referring to here in the narrative we have dot slash CSS style dot CSS here we don't have that dot slash we don't need it here um let's get into directories so we have our HTML file we have our CSS file if I had let's see can I do that here how would I do that if I had a new folder and let's say I had a folder and I decided to call it CSS and I put all my CSS sheets inside of this so say had style that's why not and I had that inside of that CSS folder in order to access that one I would need to do here let me move this so it's easier to read I would need to do dot slash CS style to CSS to access the stylesheet reason being I'm in my index file I need to tell it to go into or actually let's see did I do that right yes I would need to tell it to go into no I did not do that right sorry I would actually need to do CSS slash um style to dot CSS in order to access this CSS file it's empty so let's change this to color red and run it now I don't have my Arial font anymore am i see that my text has turned red um because I accessed it by saying okay we're in our HTML file from there go into the CSS file and when you're in there look for style dot CSS and use that as your style she instead can we take a pause for a quick second there if we take a look at style that CSS style that's CSS um even though we had an error notice that red dot to the left because we have an extra bracket our browser still kind of understood what we were talking about and still translated that code to make sense for itself so there is some funky behavior like that it's a little forgiving in times like this but it could also make it a real big page narrow down and like Conan on what the specific error is yeah I create if I added more code to this style dot CSS file if this was like a hundred lines of code this would be that moment where I'm like what is wrong what is wrong certain browsers might be forgiving and say like I understand what you mean especially if they're newer or smarter but some browsers it may not work at all so when I get rid of that because I wanted to work on all browsers regardless of any issues and so I hope that like kind of explains if I also the dot CSS what that would mean is if HTML was inside of a folder leave your folder and go find a new folder um that dot is the root the root in the file directory so it's saying start from start from the very beginning of this file directory and go look for this so if I had it as dot style dot slash style.css and I ran it it would actually use this CSS file because it's saying hey start from the root which is just the files file and find style dot CSS if I did that with style it wouldn't work because style is hidden inside of another folder I hope that answered that question for you guys file directories can be funky that's another one of those things that you want to keep nice and organized um because if you don't you may not you may be doing absolutely nothing wrong except for forgetting to call the right file um someone asked if you write HTML first and then CSS next you don't it just depends on your workflow really um I I like to personally start with my HTML and uh my CSS but sometimes as when you're actually working on a project you'll create your HTML work on your CSS and realize there's some things you need to change in your HTML so you there's no order to it but the CSS will only be able to call what has been created in the HTML so you kind of want to make sure your basic structure is down before you start styling it all right let's move on to the next one these are great questions guys um I'm now on exercise six tag name CSS can select HTML elements by using an elements tag name a tag name is the word or character between HTML angle brackets for example in HTML the tag for a paragraph element is P R P inside of our little alligators the CSS syntax for selecting P elements is P with the curly brackets here we went over that earlier and the example above all paragraph elements will be selected using the CSS selector the selector and the example above is the P we're selecting all P tags note that the CSS selector matches the HTML tag for that element but without the angle brackets so when we're creating a selector for anything if I want to create a selector for an image tag I am just grabbing the actual text from that selector not the this would be incorrect in additional in addition to curly braces followed immediately after the selector an opening and closing brace respectively any CSS properties will go inside of the curly braces to style the selected elements so let's hop into these instructions again guys and in style dot CSS add a selector for the h1 elements go ahead and do that so here you wanna have your selector I like to keep Mike you can't you don't need to have a space but personally I like to have a space just to make it easy to read I want to follow up the h1 tag or selector sorry with the curly braces let's run that code awesome now inside of the curly brace of the curly braces of the h1 selector you just declared right color maroon this cut this code will make will make the text color of all hg h1 tags maroon so let's run it it ran correctly so now we can identify where it which ones were h1 tags we have our h1 tag as the title top vacation spots if you wanted to you can make this blue you can make this any color there's also like hexadecimals and plenty of other ways to identify color but just to make it easier we're going to actually type out the color name if you go ever go back to mdn you can look up like color for CSS here and find all the different ways to color your CSS one of which would give you a list it's in here somewhere I don't wanna I don't want to waste everyone's time with that too much but you can there's all sorts of colors that CSS identifies and knows um so but there's you know there's just certain things that it may not if I said periwinkle blue I don't know I spell that right I think so yeah it doesn't know periwinkle it knows like blue so there's certain colors that will accept in certain colors as well alright ok some people asked what is hexadecimal so a hexadecimal is when you use like six hex when you use six values to decide what a color is so there we have complete like lessons on this and it like like how are exercises on this and other lessons there's all there's all sorts of combinations you can use to create a color in this situation I just created red there's all sorts of types of red well that's kind of what you read try that there's different versions of red by this let's say I did can't see what color this makes it's like a funny blue um I can make it more blue or make it a different color by playing around with that in order to know like exactly how to make different colors I would suggest checking out that lesson and it kind of gives you a bit of more of a rundown of how to read hexadecimals how to create them how to make fun colors like orange I believe this would make orange no yellow see it's kind of hard to just tell which is why we're just using titles right now why did we add the h1 on tag so if we go back to our index here if you look at your HTML index.html um we already have an h1 tag here in CSS we are calling on that we're selecting with our selector h1 and we're giving them the color of maroon Rachel oh my god your last name so fun for Rachel both the next sessions are interesting to me by can I attend oh yes so Rachel's asking about like the sessions and how she can view them we're recording all of our sessions they'll be available around Tuesday next week so you can pick whichever one interest you most right now and check out the one that you missed next week yes thank you say I'm Sam Sam you're awesome Sam shared the color value on the MDM file so they have all sorts of fun colors that you can use and they're all here so these are the colors that CSS automatically knows there was a time like the earliest versions of CSS where you couldn't really do that but now with newer CSS with um smarter browsers this is why it's really important to update your browsers guys you can now just give a keyword instead of having to do the hex value so for example beige this is the hex value I honestly there's just no way I'm gonna memorize that so now instead of having to go figure out what the hex value is I can just say beige and same with maroon I think they have here we're not that's okay but yeah maroon is one of those colors too magenta is one of those colors well you know um being Sam thanks for sharing that okay so let's move on to the next one how are we doing how are we feeling about this we good I think we're running into the last five six minutes though okay oh boy well before we go cuz I know there was also a question about like posting the questionandanswer session that we had here um but you guys can also access the forum and there will be a section for learn CSS and we can also ask and answer questions there and that's not just us but the entire community as well so tally would you mind showing to like navigate to the forms actually so you're inside the lesson we have community forums here and you can go in here now this this link here is going to take you to the forum for the specific course that is one way to enter the forum and you'll be directly linked to the forum related to that lesson but you can also go to the actual home page the forums and you can see like the latest stuff that people have created we have forums on anything from Python chatbots to C++ functions the hashes you can start your own forum you can search through the forum and try to find something related to what you have a question about it's a really really really awesome tool I believe that this is only available for people who have Pro so if you're using a free account right now correct no it's free okay so I will okay so I believe that this is available if you have a free account with us you should be able to go in and ask questions yeah it's all right here and since we have to wrap up we have to go soon if you have any related questions related to this course that weren't answered today or you decide to move through the rest of this and you have any questions pop up for you go ahead into our forum and ask some questions there you could get a response from me from Kenny from another learner halfway across the world it's really awesome it's a great place to just you know in touch with community so yeah do you mind if I grab the questions from Melinda these lessons being available for free or today are only so the lessons themselves we took from our CSS course our learn CSS course and if you want to continue them on your own I know a lot of people are showing that interest in doing that in the chat so don't free to pursue that we've only taken the beginning sessions and the less and overall our fries hollingers whether he have a free or pro account um we've included a project we kind of teased at the beginning that we might do it but based on your all your questions that we had and everything that we wanted to answer we just didn't have time for it um but for the duration of today they're gonna be free okay the project's will be free for today for learn CSS after today though they'll go back to being pro only okay so take advantage of it while you can and I hope that answers Rachel's question as well just a quick thing about the community so the the community forum is definitely all free for like all aspects of it I also in the chat I posted a link to a discord chatroom which is connected to our forum and that's also free so just scroll up a little bit and you'll see a discord link feel free to jump in there and chat with our with other people in the community our moderators there's a lot of activity in there and I see one other question about um the like accessing this I'm just one more time if you go to our code Academy homepage and make sure you're logged in and signed in you will find to learn from our sorry at the catalogue sorry go back the catalog and in the catalog inside of the catalog we have to learn from home conference and there you can see all the lessons projects and everything that people are covering today we did learn CSS so if you go in there you'll find the lesson that we covered today and the project that's related to that lesson cool so Mike while you're here can you answer Christy's question about how long the pro scholarships last oh yeah yeah just typed up the response but we don't we don't yet know you know we don't really know how long this pandemic is gonna go on so all I can tell you is that it's going to be up for a bit we have no plans to take it down so there's no definitive date where it's going to come down so consider it up and active for the time being and um you know we that's about what we know right now right Wow okay guys so now that we answered all those questions I just want to see like I'm gonna stop sharing now but I would love to see just like by a raise of hands who learned something today feel free to blurt raise your hand in the chat and let us know if you learned something feel free to share in the chat what you learned I hope that this was helpful for you guys um I hope I got to as many questions as possible I really appreciate you guys participating asking questions and following along because you know it just it's just really awesome to get to see people like all over the world coding together at one time it's really fun so I'm glad you guys learned something yay you're welcome you're welcome thank you guys thanks everyone thank you awesome all right and please like please don't just stop coding today you know a lot of us are you know self isolating or quarantined at home like take this time to learn some something new learn some CSS learn some HTML learn some JavaScript um you know create a webpage just for the heck of it it's fun and it's really awesome way to like build your skills and take this time and have something productive come out of it so you know like somebody asked earlier we do have some scholarships that are going out so um if you have one of those scholarships please take advantage of it and enjoy getting to learn for it to code for free um Lou someone has a twenty nine day run streak we loved us and we loved it all of it thank you that is awesome keep going yeah build your streak stuff honestly I would love to see you like who can have the highest streak I don't I wonder if we had that information ever like what was a higher streak uncle Kennedy ever I I think we do like an interview with that person but I don't know off the top of my head I'm very twenty forty days yes that's great eighty Wow we also have one someone said one and that is great start somewhere you have to start somewhere make tomorrow um first day yet so it's awesome awesome yeah take it take a fiveminute breather we'll start the next webinar sessions at 130 so if you're gonna be there for JavaScript introduction the JavaScript I'll see you there just to continue on with this building websites check we also have two data scientists from Koch Adam II who are working on a livestream to show you how to forecast Google Trends using a programming language a statistics language called learn are so I just posted little things to the others in the chat though I there's a typo there now starting in twenty minutes they're starting in a few minutes so but but the links are good so just follow those two go to the next sessions okay guys this is where I leave you it was great teaching there CSS was great working along with you guys so bye please please please like follow coming along to JavaScript or if you're really interested in analyzing like Google transits also sounds really awesome so check that out too yeah alright let you guys go it's prosper
