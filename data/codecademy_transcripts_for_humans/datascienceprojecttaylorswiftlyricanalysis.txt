With timestamps:

00:00 - okay we are live
00:03 - hi everyone welcome welcome to our live
00:07 - stream we are so excited to walk you
00:10 - through this new code academy case study
00:13 - analyze Taylor Swift lyrics with python
00:16 - it's me hi I'm Corey Stieg a proud
00:21 - Swifty and code Academy's content
00:22 - marketing manager I'm joined by Michelle
00:25 - McSweeney code Academy's data science
00:27 - domain manager who created this case
00:29 - study and Eva savinga a code academy
00:32 - curriculum developer in data science who
00:34 - will be answering all of your questions
00:36 - in the chat
00:37 - so Michelle is going to walk us through
00:39 - step by step how to use Python and
00:42 - Jupiter notebooks to analyze the lyrics
00:43 - to every Taylor Swift song including the
00:47 - new album midnights that just came out
00:49 - now if you're a Taylor Swift fan you
00:52 - know all too well that she intentionally
00:54 - leaves Clues and Easter eggs in her
00:56 - lyrics which is why we're focusing on
00:58 - Taylor Swift's music today
01:00 - she also made history this week becoming
01:02 - the first ever artist to claim all top
01:04 - 10 spots of the Billboard Hot 100 charts
01:07 - probably thanks to the 1 billion times
01:10 - that I personally have streamed
01:12 - midnights in the past couple of weeks
01:13 - but it's pretty iconic
01:15 - and if you're not a hardcore Swifty
01:18 - that's totally fine this is a data
01:19 - science project that you can do with any
01:21 - of your favorite musical artists
01:23 - as a reminder you can practice this case
01:26 - study on your own whenever you want it's
01:28 - free on codecademy and all you need is a
01:30 - free account to try it
01:32 - you can find the link for the case study
01:34 - in the YouTube description below and
01:36 - this live stream will be available to
01:38 - replay so if you get stuck or need hints
01:40 - we got you
01:41 - let me tell you more about Michelle
01:44 - Michelle McSweeney is a linguist data
01:47 - scientist and educator she is the data
01:49 - science domain manager at codecademy and
01:52 - teaches data analysis and visualization
01:54 - at the CUNY Graduate Center
01:56 - she has a PHD in linguistics and is the
02:00 - author of a book about the word okay
02:02 - coming out this January with Bloomsbury
02:04 - and another book on the word data
02:07 - releasing in 2024 with Oxford University
02:09 - press
02:10 - she has been teaching text analysis for
02:13 - over 10 years and has written
02:15 - extensively on how we communicate trust
02:18 - and intimacy on text-based platforms
02:21 - before we jump in Michelle where do you
02:24 - recommend people start learning if
02:25 - they're totally new to data science
02:27 - totally if you are like I'm just getting
02:30 - into data science we've curated the
02:33 - foundations for it in our data science
02:35 - foundations and it gives you a really
02:37 - great overview of everything that you
02:39 - need to know in order to start breaking
02:42 - into the world of data science
02:45 - perfect well I'm gonna pass it over to
02:48 - you and and take it away awesome thank
02:51 - you so much I am going to start by
02:53 - sharing my screen
02:55 - um so we are going to look at the Taylor
02:57 - Swift song lyrics today but as quite
03:01 - mentioned
03:02 - um you can really do this with
03:04 - absolutely anything and not just song
03:07 - lyrics so I've done this with peace
03:10 - treaties I've done this with books
03:13 - um it's really anything that you can get
03:15 - into a text based format you can do the
03:18 - same exact process on so we're going to
03:21 - start off
03:22 - um in our new Jupiter notebooks
03:24 - workspace so you may have seen this
03:27 - locally before but this might be the
03:28 - first time that you're seeing it on
03:29 - codecademy something really cool about
03:31 - this workspace is if you click on this
03:33 - Jupiter button up here it'll take you
03:36 - back to the file tree what we're looking
03:38 - at in the file tree is all of the csvs
03:41 - and all of the files that have Taylor
03:43 - Swift's lyrics in them I am going to
03:45 - work from the solutions notebook because
03:48 - you do not want to see my typos as I
03:51 - like write this code
03:53 - um on the Fly
03:55 - so the data set has all of the albums in
03:58 - it we did some data cleaning the code
04:00 - for the data cleaning is behind here in
04:02 - the file tree first thing that we got to
04:04 - do is load all of these packages Pro tip
04:06 - when you're working in a Jupiter
04:08 - notebook and you want to see your plots
04:09 - you add this little like magic code up
04:12 - here so we're going to be using pandas
04:13 - we're going to be using the natural
04:15 - language toolkit and some other plotting
04:18 - and string manipulation techniques let
04:20 - me talk a little bit about the natural
04:21 - language toolkit so this is a whole
04:25 - bunch of this is a library that has a
04:27 - whole bunch of functions that allow you
04:29 - to analyze text more efficiently and
04:31 - more easily a lot of things come out of
04:33 - the box so if you're just getting
04:35 - started you want to start with nltk
04:37 - right so the first thing we're going to
04:39 - do is we're going to load this data set
04:40 - and as Corey mentioned we've added the
04:45 - midnights data set
04:46 - oh wait oh duh okay
04:50 - so how did I know that I didn't run the
04:53 - first one this told me that the name PD
04:55 - is not defined I thought that I had
04:57 - already defined it up here so
04:59 - didn't expect to teach you how to debug
05:01 - these error messages but uh Jupiter
05:04 - notebooks are really helpful so now that
05:06 - my program knows what the pan does is
05:09 - it's loading in these data this data
05:11 - frame and we're going to look at the
05:12 - very beginning of it we're going to
05:14 - inspect this a little bit we see we have
05:16 - album name track title track number and
05:18 - then the lyrics
05:20 - um and then we have what line that is
05:22 - within the song
05:24 - I'm going to get a little bit of
05:25 - information about it just to like
05:27 - inspect what's going on here and this is
05:30 - my first task I have numbers on the
05:34 - track and numbers on the line but
05:36 - everything else is this object data type
05:38 - I know that it's a string um just
05:40 - because like I know what's in this data
05:43 - set
05:43 - but I noticed that I don't really have
05:47 - the gear in this so I'm going to add the
05:51 - gear into this data frame which I
05:54 - consider to be essential information
05:56 - okay so first thing I'm going to do is
05:58 - get a list of all the albums that are
06:01 - here and I notice immediately I'm like
06:03 - oh my goodness midnight is in here in
06:05 - two different formats thank you Taylor
06:07 - Swift for launching it you know a little
06:10 - bit earlier
06:11 - so for most of these I'm going to Define
06:15 - this function that says if the if the
06:18 - album name is Taylor Swift I know it was
06:20 - released in 2006 right I'm going to get
06:24 - a little bit more creative down here
06:27 - um I know that folklore was released in
06:28 - 2020 but we're going to give it 2021
06:30 - because it makes our visualizations a
06:32 - little bit cleaner if you were creating
06:34 - this for your portfolio in the future
06:37 - um you would probably clean this up just
06:39 - a little bit and handle this in a
06:42 - slightly different way
06:44 - um which you can learn more about in our
06:46 - pyth in our pandas course on codecademy
06:50 - um same thing here I've used a little
06:51 - bit of trickery here so I know that I
06:53 - have midnights written two ways so I say
06:56 - if the word midnights appears in album
06:58 - name at all return 2022. I've also given
07:02 - myself a little bit of a helper here
07:03 - that if it's not in there just return no
07:05 - date and we'll worry about it later okay
07:07 - so I'm going to apply this function and
07:11 - I'm applying I'm saying album year I'm
07:16 - applying the function I just wrote to
07:18 - every row
07:20 - of the album release
07:23 - um
07:23 - the
07:26 - um the album release function to every
07:28 - row of my data frame sorry
07:31 - um and then I'll inspect this here make
07:33 - sure it looks like what I expect and I
07:35 - have album year there okay
07:37 - so I've added my Essential data next
07:39 - thing I'm going to do is clean my lyric
07:41 - text so this is kind of the first thing
07:44 - that you always do when you're working
07:46 - with any kind of text based data is to
07:50 - you make sure that everything is
07:52 - lowercased because Taylor Swift is
07:55 - obviously so good about like putting
07:58 - clues in how she capitalizes things and
08:00 - how she writes things because some of
08:02 - her albums are written all lower case
08:04 - and we can read something into that
08:06 - um
08:07 - so here computers are not quite as smart
08:11 - as humans so you know ever more written
08:13 - lowercase is different from Evermore in
08:16 - uppercase but we don't want to treat it
08:18 - that way we want to make sure that
08:19 - everything is lowercase together
08:21 - you could also make it everything
08:23 - uppercase but I read that as being
08:25 - yelling you might also so
08:28 - um the other thing that I'm going to do
08:30 - here is I'm going to replace punctuation
08:34 - um I don't want to be analyzing this
08:36 - data with commas and with
08:39 - um periods or things like that I don't
08:41 - know how this how the lyrics were input
08:43 - into the file but I'm going to assume
08:45 - that those are not going to help me in
08:47 - my analysis
08:48 - last thing I want to do is I'm going to
08:50 - remove stop words now you don't always
08:53 - remove stop words but it's a good
08:55 - practice to get into if you're going to
08:57 - try to figure out topics or things like
09:00 - that that said I personally go both ways
09:03 - depending on the goals of the project
09:04 - but for us this time because we're first
09:08 - trying to understand like how often she
09:11 - uses words and we're trying to
09:13 - understand like what her most common
09:15 - words are the a this that those aren't
09:19 - that useful to me so we call them stop
09:21 - words we're going to take them out okay
09:23 - so I'm going to apply this kind of
09:29 - complicated function that I'm going to
09:30 - break down in just a second
09:32 - but what I've done is I've made a clean
09:33 - lyric column that everything was
09:35 - lowercased all of the like extraneous
09:38 - punctuation has been replaced with just
09:40 - nothing that's what this says and I've
09:43 - made a list of stop words that I've
09:44 - removed as well right so what I get is
09:48 - this cleaned lyrics note that I've kept
09:50 - the original lyrics in case I ever want
09:52 - to go back but I have these clean lyrics
09:54 - that are all lowercase you know the word
09:56 - u is the same at the beginning of the
09:58 - sentence as the middle of the sentence
09:59 - right okay these are just for
10:03 - illustration to show you how we split up
10:05 - the words
10:08 - um see what applying this join function
10:10 - does remove the and then I'm removing
10:13 - those columns so I'm actually going to
10:15 - skip that completely
10:17 - there's lots of built-in stop words if
10:20 - you get really deep into text analysis
10:21 - you can learn so much more about those I
10:24 - encourage you to check out our NLP
10:25 - content if you want to get um
10:28 - go a little bit deeper okay so now we're
10:31 - going to actually start asking questions
10:33 - right I've done the preliminary cleaning
10:34 - of my data set now I'm going to ask some
10:37 - questions my first question is how many
10:41 - times does the word Midnight appear
10:43 - right so it looks like across her entire
10:48 - discography it appears 20 times that is
10:51 - way less than I expected I was expecting
10:54 - midnight to appear way more often let's
10:56 - explore that a little bit more okay so
10:59 - maybe I'm like okay maybe she hasn't
11:01 - been hinting to me about midnight
11:03 - exactly but maybe she's been talking
11:05 - about night or maybe she has a really
11:07 - strong focus on day or maybe she has a
11:10 - like really strong Focus just on time
11:11 - words in general
11:13 - I've kept the time words intentionally
11:15 - short here because I expect that you
11:19 - would add some more words to that maybe
11:21 - you know Taylor Swift's music way better
11:23 - than I do and you're like oh I shouldn't
11:26 - just talk about today tomorrow yesterday
11:28 - maybe I should add the word future and
11:30 - see how often she tracks the word future
11:31 - you could do that a couple of different
11:33 - ways you could add to the time list here
11:36 - or you could say I want to make a whole
11:39 - new list about the word future and then
11:41 - use this code to make a new future
11:44 - column and you can pretty easily see
11:47 - from that how you would go about
11:49 - applying this to other artists right so
11:52 - if you had the lyrics of other artists
11:54 - and you were like I'm not actually
11:55 - interested in time at all maybe you're
11:58 - analyzing David Bowie which I have
11:59 - definitely done and you're like I want
12:02 - to analyze dance like how often does he
12:04 - talk about dancing right you can use
12:06 - this exact same technique okay so I'm
12:09 - going to run this I've made a list here
12:11 - of my knight words I've made a list of
12:13 - my day words my time words
12:15 - and here I'm creating a regular
12:18 - expression string for each list of words
12:22 - um the reason that we're doing that is
12:23 - so that we can go through and search for
12:25 - them within our cleaned lyrics and I'm
12:29 - going to create a new column to say
12:32 - um
12:33 - how many does it appear in the cleaned
12:36 - lyrics so I make a new column of saying
12:39 - yes it appears no it doesn't appear
12:42 - this is probably the most important step
12:45 - in text analysis because generally what
12:48 - we're doing here is we're turning
12:50 - unstructured words into numeric outputs
12:53 - this time it's just true and false but
12:56 - whenever you're transforming this like
12:59 - unstructured text into something
13:01 - quantitative you've hit this level of
13:04 - abstraction that is really the
13:05 - underpinning of all text analysis so
13:08 - this is a really cool step right because
13:10 - we're saying if it contains it give it a
13:12 - true or false and then I'm adding up
13:15 - here how many instances of night are
13:18 - true how many instances of day are true
13:20 - and how many instances of time are true
13:23 - we could with a little bit more code
13:25 - count the number of times that night or
13:28 - day appeared in each lyric I did that
13:31 - preliminarily to see if it would like
13:32 - make any sort of difference I found
13:34 - literally zero instances when the word
13:37 - Knight appeared or a night word appeared
13:40 - two times in one given lyric so rather
13:44 - than exposing all of that code
13:46 - um we've just said is it going to be
13:48 - true or false
13:49 - this is another totally valid data
13:52 - science technique is you know you're not
13:54 - necessarily solving every problem but
13:57 - you're solving the problem that you're
13:58 - presented with right so the problem that
14:00 - I'm presented with is counting how many
14:02 - times day and night up here
14:04 - a different problem would be counting
14:07 - how many times day or night appear in
14:08 - every lyric
14:09 - we found out it was one so we can use a
14:11 - simple true and false which gives us
14:13 - some like programmatic shortcuts okay
14:15 - one of those programmatic shortcuts is
14:18 - creating this count right so I'm going
14:22 - to make a night count which is just the
14:24 - sum of the Night lyrics column right so
14:27 - I have this column I have true and false
14:29 - true and false for if the word if a
14:31 - knight word appears in the lyric
14:33 - and then I can just add up the number of
14:36 - times that a night word appears the
14:38 - number of truths I do the same for days
14:40 - do the same for counts and I'm going to
14:42 - print them here okay so it looks like
14:46 - Knight appears 287 times day appears 387
14:51 - and time only appears 35. we're not
14:54 - going to worry about time too much more
14:55 - that was really just for illustration
14:57 - but it seems like she hasn't actually
14:59 - been focusing on night throughout her
15:01 - discography she hasn't been telling us
15:04 - that she's going to be talking about
15:05 - night
15:06 - but our next question might be yeah
15:09 - that's true for entire discography but
15:11 - what about the past few years I mean
15:13 - she's been producing albums since 2006.
15:16 - that's a long time so let's let's
15:19 - inspect this a little bit further
15:22 - okay so we are going to
15:27 - um
15:28 - visualize how Taylor Swift's mentions
15:31 - have changed over time has she been
15:33 - talking about night more has she been
15:35 - talking about night less right
15:37 - so I'm going to create a new data frame
15:41 - for yearly mentions the group
15:43 - submissions by Year let me break that
15:45 - down because it's super confusing okay
15:47 - so I'm using the group by
15:50 - function which breaks it down I could
15:53 - have used album album name or album year
15:56 - I'm choosing to use year because it
15:58 - gives me some benefits later on
16:00 - okay so I'm grouping by every year and
16:04 - for every year I want to add up the
16:07 - number of mentions of Knight the number
16:09 - of mentions of day the number of
16:10 - mentions of time
16:12 - we're not going to care about time but
16:14 - so that's what the sum is saying it's
16:17 - saying take every numeric column every
16:20 - numeric variable and add it up and give
16:23 - me that group by output
16:25 - that's going to return a whole new data
16:28 - frame right so if you think of a data
16:30 - frame as a table with rows and columns
16:33 - or rows and columns that's going to give
16:36 - me a whole new data frame to work with
16:39 - and I'm going to say on that data frame
16:41 - reset the index just because it makes
16:44 - our data frame a little bit clearer okay
16:46 - let's take a look at what we get out so
16:48 - here is our new data frame so for this
16:51 - album here I see how many tracks it
16:54 - added up the number of tracks that means
16:55 - nothing it
16:57 - computers are not very smart that's not
17:00 - the right kind of variable completely
17:01 - ignore the track column completely
17:03 - ignore the line column but pay attention
17:05 - to the midnight day
17:07 - and night and time columns right so here
17:11 - I see that oh the word midnight is so
17:15 - much more popular in her Midnight's
17:17 - album this should not be surprising
17:20 - um but interestingly Knight is a night
17:23 - words are actually not more prominent
17:24 - there than in her 2012 album
17:28 - right so let's visualize that because
17:30 - it's actually really hard to understand
17:31 - all of this data just looking at a table
17:33 - okay so I want to plot the yearly
17:37 - mentions of night
17:39 - or just like any kind of night word and
17:42 - what I see here is that her most recent
17:46 - album is off the charts more but
17:49 - compared to previous but not that much
17:52 - more than her 2012 album that's
17:54 - interesting
17:55 - so my Swifty
17:59 - um code catamite co-cadamites my fellows
18:02 - with Taylor Swift fans told me that it
18:06 - is rumored that Taylor Swift plans
18:08 - everything about three years out and we
18:11 - see a really interesting result here
18:13 - then if we view it in that context we
18:15 - see that starting in 2014 she's been
18:18 - saving those mentions of night you have
18:21 - to wonder if she started planning this
18:24 - album you know around this time period
18:26 - and it has just been holding on to all
18:29 - of her music and all of her lyrics that
18:31 - are going to reference night
18:33 - that would kind of make sense looking at
18:34 - this chart and looking at her
18:36 - progression
18:37 - okay
18:38 - so the next thing that we are going to
18:40 - do is we want to know what albums are
18:44 - the most night focused what albums are
18:46 - the most day focused
18:48 - um and really understand like how that
18:52 - has changed over time not just focusing
18:54 - on magnets okay so the first thing that
18:57 - I'm going to do is you know I showed you
18:59 - that function before mostly because
19:00 - there's some instructional content in
19:02 - here about like creating functions and
19:05 - things like that but
19:08 - there's an album year name file in the
19:12 - file tree because it's a little bit
19:14 - easier to just join it rather than like
19:16 - going back and forth so I'm going to
19:18 - reinstate the album name into that new
19:20 - yearly mentions data frame that we made
19:22 - right so I'm going to read in the CSV
19:25 - file that has all the albums and the
19:27 - years together and I'm going to call it
19:30 - your name
19:31 - and then I'm going to make a new column
19:36 - here
19:37 - for the album name this should go above
19:40 - here
19:43 - I will fix that in the solution later
19:45 - today okay
19:46 - um so I have my yearly mentions data
19:49 - frame I'm giving it a new column called
19:51 - album name and I'm using the year name
19:53 - and giving it album name
19:55 - and then I'm going to sort both of my
19:58 - data frames by year oh that's why I did
20:02 - that never mind
20:05 - I'm going to sort my yearly mentions
20:07 - data frame by year and I'm going to sort
20:10 - my year name data frame by year just to
20:13 - make the join a little bit more logical
20:16 - okay and now I have my yearly mentions
20:19 - data frame that has the album name in it
20:22 - and I'm going to sort by the night
20:25 - values to see which has the highest
20:27 - night value
20:29 - and it turns out its reputation
20:33 - right it's not even midnight it's
20:35 - reputation what why what was going on
20:39 - all of my Taylor Swift fans I'm sure
20:41 - that you know why I don't know her
20:43 - discography that deeply so like what's
20:46 - going on tell us in the chat
20:49 - um or in the comments there right okay
20:52 - so we can do this with a whole lot more
20:54 - things you can probably already see the
20:56 - like possibilities here you might want
20:58 - to increase the words in my nights list
21:00 - or in my days list
21:03 - cool though
21:04 - um okay so we know what her most night
21:06 - focused album was what's her most day
21:09 - focused album let's find out we're going
21:11 - to do the same thing we're going to take
21:13 - our yearly mentions data frame we're
21:14 - going to sort it by values we're going
21:16 - to say hey started by the day column and
21:19 - we're going to make it descending
21:21 - right so her most day focused album is
21:24 - red
21:25 - um where it's you know quite a bit more
21:28 - than any of her others
21:30 - and you can inspect This and like make
21:33 - some assumptions what I find really
21:36 - interesting about this is that if we
21:37 - sorted by time as well
21:40 - then it's also her most time focused
21:43 - album
21:44 - and it's not it's not not night focused
21:48 - um and this was 2008 right so this was
21:51 - almost 15 years ago she is talking about
21:54 - time talking about the past talking
21:55 - about the future talking about like the
21:57 - passage of time what was going on in her
21:59 - life I don't know I hope that our like
22:02 - most Taylor Swift fans do know
22:05 - um but it's really interesting just to
22:07 - watch this moment and like what that can
22:11 - mean about her as an artist but also
22:13 - what it means about the like moment that
22:15 - she's speaking to right and the culture
22:17 - that she's reflecting so like I said
22:20 - doing this with all kinds of different
22:21 - artists can like Lead You In some really
22:23 - interesting directions to start asking
22:26 - these questions okay so that's great but
22:30 - really we want to know the relationship
22:31 - between day and night mentions so we're
22:34 - going to create another line chart with
22:36 - both the day and the night mentions and
22:38 - that's going to let us see this
22:39 - progression a little bit easier where so
22:42 - we have one we're using one plot so when
22:46 - you're working with matplotlib if you
22:49 - everything that comes above your Plot
22:50 - show ends up on one plot right so we're
22:54 - gonna plot yearly mentions and night
22:58 - yearly mentions on album mirror on the
23:00 - x-axis and day on the y-axis if we give
23:04 - it our labels then we can create a
23:06 - legend
23:07 - and we're going to give it a title all
23:09 - right let's take a look at this
23:11 - so
23:12 - interestingly this 2019 album
23:16 - right was way more day
23:19 - and if we think about the fact that we
23:23 - there is a rumor that I've heard down
23:25 - the Grapevine that she plans things
23:28 - three years out then three years out
23:31 - she's really talking about day which we
23:33 - could argue is the exact opposite of
23:35 - midnight
23:36 - and that gives us something really
23:38 - interesting to think about as we see
23:40 - this like big peak in night as well as
23:43 - Midnight's mentions so there might be
23:46 - something too this like three years out
23:48 - planning but I leave it to you guys to
23:49 - start to figure that out okay so now
23:53 - we're like okay maybe it's not just
23:55 - about years but maybe she's telling us
23:58 - like a bigger story just within the
24:00 - albums themselves right so like maybe
24:03 - there's a progression of day to night in
24:05 - the albums or like some sort of ebb and
24:07 - flow like that
24:09 - um
24:10 - based on the fact that like we know that
24:13 - she hides some Easter eggs so let's go
24:15 - and see if that hypothesis is going to
24:17 - pan out
24:18 - so here we have our lyrics position
24:21 - which we're going to do something kind
24:24 - of cool and kind of interesting we
24:26 - really included this to like get you
24:28 - thinking about how to like
24:30 - get these things out of different albums
24:33 - Taylor Swift might not be known for this
24:35 - progression but you know you might want
24:38 - to look at other artists in this way
24:41 - um so we're going to create a new column
24:43 - called position
24:45 - it's going to be the track number is
24:48 - going to be a whole number and we're
24:49 - going to add it to 1 1000th of the line
24:53 - number and this gives us a decimal value
24:55 - that is an ordered representation of
25:00 - each album that we can then line up
25:02 - across all of the albums right so we're
25:05 - going to do that same group Phi function
25:07 - again but this time rather than grouping
25:09 - by album year we're going to group by
25:11 - position within the album so like the
25:14 - first the first track the first lyric of
25:18 - every single album is going to be added
25:20 - together right so the number of night
25:22 - mentions for the first track the first
25:24 - lyric the second track the first lyric
25:27 - the third track the first lyrics so on
25:29 - and so forth okay
25:31 - um we'll do the same thing we'll add
25:33 - them up and then we'll reset our index
25:36 - I'm going to increase the size of this
25:38 - plot
25:39 - basically because it's just it gets way
25:42 - too squished if you don't increase the
25:44 - size of that plot it's not something
25:46 - that you always have to do it's just
25:47 - something to make it a little bit easier
25:49 - to read okay so I'm going to do the same
25:52 - thing I'm going to create a plot that
25:54 - has two
25:56 - um lines on it and the bottom is going
25:59 - to be the position because rather than
26:00 - talking about progression through a year
26:02 - we're talking about progression through
26:04 - an album and lining all of those up and
26:07 - then we'll compare night and day
26:09 - mentions okay so let's go ahead and run
26:11 - this and see what we get
26:14 - and we see no Trends whatsoever
26:18 - right okay so yes maybe we could have
26:22 - cut this out because like it really
26:23 - doesn't have any kind of an interesting
26:26 - Trend going on here
26:28 - um but it's also a really valid practice
26:30 - for everything that you do to check out
26:34 - directions that do turn into something
26:36 - and explore directions that don't and
26:39 - don't erase your work the benefit of
26:42 - working in something like a Jupiter
26:43 - notebook is that you're basically
26:45 - keeping lab notes and a failed
26:47 - experiment is just as valuable as a
26:51 - successful experiment and maybe I
26:52 - shouldn't use failure or success but
26:55 - this led us to a dead end let's back up
26:57 - okay
26:58 - so we've investigated day and night and
27:02 - that's interesting but we also want to
27:05 - do some sentiment analysis and just some
27:07 - more General text analysis of Taylor
27:10 - Swift's
27:11 - um lyrics
27:12 - the first question to ask of any artist
27:14 - or really any document that you're
27:16 - looking at is what are the most common
27:19 - words what are the most frequently used
27:22 - words what is the author or the artist
27:25 - really focusing on here
27:27 - this is the first step towards doing
27:30 - something called topic modeling which is
27:32 - an unsupervised approach to just cluster
27:35 - topics together the first part of that
27:37 - is getting just frequency of mentions so
27:40 - what is Taylor Swift talking about the
27:44 - way to figure that out is to line up all
27:47 - of or to like just figure out how many
27:49 - times she said individual words we're
27:52 - going to do this a kind of like shortcut
27:54 - way mostly because we know that when
27:57 - you're interacting with a learning
27:59 - environment and you're on different
28:00 - speeds of web browsers you don't want
28:02 - something that's super heavy so we
28:04 - wanted to use the lightest way possible
28:06 - to break up these words that is to split
28:10 - them on the space
28:12 - you can read here about like more
28:14 - sophisticated ways to do that but the
28:16 - lightest way to break up your words is
28:18 - just split them on the space it doesn't
28:20 - give you the most accurate result but it
28:21 - does get you a result quickly okay so
28:25 - let's take a look at what that looks
28:26 - like so if I've split all of my cleaned
28:29 - lyrics on the space
28:31 - then I come over here and I have a list
28:34 - of all of the words in each lyric
28:38 - right so this is just a list of all of
28:42 - the words for each one what this is
28:45 - called is a tokenized
28:47 - list so this process is called
28:49 - tokenizing
28:51 - um and it's absolutely an essential
28:53 - process for any time that you're working
28:55 - with text tokenizing your words is
28:58 - essential
28:59 - um read more hear about different ways
29:01 - to tokenize okay
29:03 - so now I want to know what are the most
29:07 - frequent words I have this pretty
29:10 - complicated list comprehension here that
29:14 - is basically just saying like for each
29:18 - word in the tokenized lyrics
29:20 - count them up add them up okay then I'm
29:25 - going to use this counter function
29:28 - um
29:29 - and add them all up and then I'm going
29:32 - to sort them by the frequency okay let's
29:36 - take a look at what this looks like and
29:38 - then we'll break it down a little bit
29:39 - so I have this word frequency variable
29:42 - that is the sorted
29:45 - list of key value pairs right so turn my
29:49 - dictionary into a list that my key value
29:52 - pairs my key is U so I have this word
29:55 - you and you occurred over three thousand
29:58 - times I occurred almost three thousand
30:01 - times if you look at this a little bit
30:03 - more closely you see me and my your
30:07 - there's some more down here
30:10 - um you're this type of your
30:13 - right tokenizing would reconcile more
30:16 - sophisticated tokens tokenizing would
30:18 - reconcile all of those so like you your
30:21 - your yours would all become the same
30:24 - word
30:25 - um but here just splitting it on those
30:28 - on the spaces shows us really clearly
30:32 - that Taylor Swift is talking about
30:34 - relationships she is talking about you
30:36 - and me she's talking about two people
30:39 - and how they're in relationship with
30:41 - each other and we can tell that just by
30:43 - the words that she's using okay cool now
30:48 - we're going to go down and we're going
30:49 - to look at sentiment so we're going to
30:52 - use a pre-built lexicon
30:55 - um called the Vader lexicon which comes
30:58 - with nltk so nltk has out of the box a
31:02 - lot of techniques to make sentiment
31:04 - analysis and other types of analysis
31:06 - more efficient and a little bit easier
31:08 - to work with
31:10 - a lot of things in the mltk
31:14 - library have to be initiated like this
31:18 - so I create a variable that is this
31:20 - function and then I apply this variable
31:23 - to a
31:26 - to a piece of text right so sentiment
31:30 - intensity analyzer has a function
31:32 - polarity scores within it
31:34 - right so just like pandas has a read CSV
31:38 - the sentiment intensity analyzer has a
31:41 - polarity scores
31:42 - I pass it a string and it tells me how
31:46 - positive or negative it is okay so let's
31:48 - run this and see what we get all right I
31:50 - love Taylor Swift exclamation point
31:53 - so it has not at all negative it's a
31:56 - little bit neutral but it's very very
31:59 - positive the compound is the normalized
32:04 - average
32:05 - or the normalized sum of neutral and
32:08 - positive compound takes intensity into
32:11 - effect
32:13 - um and therefore it's not the linear sum
32:15 - but rather the normalized some of them
32:17 - okay so I'm going to apply this
32:21 - sentiment analyzer to the cleaned lyrics
32:24 - column note that I am not applying it to
32:28 - the tokenized lyrics column I'm applying
32:30 - it to the entire string column
32:33 - that I know to do that based on reading
32:36 - the documentation for this particular
32:38 - sentiment analyzer I went to the
32:40 - documentation and I said okay this one
32:43 - is taking in the entire string and it
32:47 - has its own tokenization process behind
32:49 - the scenes right so I don't need to
32:51 - worry about any of that
32:52 - so I'm going to apply polarity scores
32:56 - from the package to everything
33:00 - in this column okay and if you are
33:03 - curious about Lambda Expressions check
33:06 - out our pandas content which goes over
33:08 - Lambda expressions in a lot of detail
33:10 - okay so let's see what we got
33:13 - all right so I have this new column that
33:16 - is a dictionary so every everything in
33:19 - this column is a dictionary so it's a
33:21 - series of dictionaries where negative is
33:24 - zero neutral is one and positive is zero
33:27 - I'm like wait a minute wait a minute
33:28 - wait a minute neutral it's only neutral
33:31 - but yeah when we analyze there's
33:34 - something about the way that is just a
33:36 - neutral statement it's not positive it's
33:38 - not negative what comes after it might
33:41 - be positive or negative but it's not
33:44 - overtly positive or negative in and of
33:45 - itself
33:46 - same thing Street looks when it's just
33:49 - rained I'm showing you oh no come back
33:53 - um I'm showing you some of the downfalls
33:55 - of working with sentiment analysis
33:57 - because even though that might be very
33:59 - emotionally evocative right like we
34:01 - might associate some sort of feeling to
34:04 - how the street looks when it rains that
34:07 - might not necessarily be happy a
34:09 - sentiment analyzer is not going to be
34:11 - able to capture that especially in out
34:13 - of the box sentiment analyzer
34:16 - um so there we go much better
34:21 - um
34:23 - ah
34:24 - okay so if you ever get disconnected let
34:27 - me show you what to do so it my code
34:30 - gets saved but
34:34 - um where I was does not get saved so
34:39 - um
34:40 - when you are actually no oh it did it
34:43 - ran everything cool
34:45 - let's make sure that that worked if it
34:47 - doesn't work I'll show you the like tip
34:48 - to make things work um you can just go
34:50 - sell run all
34:52 - or sell run all above or below
34:55 - okay
34:56 - um down here we were talking about
34:57 - sentiment analysis
35:00 - [Music]
35:01 - okay
35:03 - um
35:06 - I'm
35:08 - going to run this run this run this run
35:10 - this nope
35:12 - cell run all
35:14 - right okay so when we're looking at
35:17 - sentiment analysis it's really like how
35:19 - a computer would view sentiment rather
35:21 - than how a person would okay so here we
35:26 - are we have our dictionary of sentiment
35:28 - analysis is a sentiment analyzes but
35:31 - that's not actually that easy to work
35:33 - with I'm going to need to transform that
35:35 - transforming a dictionary into a bunch
35:39 - of new columns is way easier than you
35:42 - might think
35:43 - um so in Excel this would be something
35:46 - like a pivot here we are applying
35:49 - polarity to the
35:52 - we're making a series out of the
35:55 - polarity column and pandas knows how to
35:58 - work with that and then we're going to
36:00 - drop the polarity column entirely and
36:03 - what we get
36:04 - is
36:06 - a
36:09 - well
36:10 - what we get is here
36:14 - um so now rather than having this all in
36:17 - a dictionary we have each one of these
36:20 - as their own
36:22 - um as their own column which is a lot
36:23 - easier to work with
36:24 - we are going to focus a lot on the
36:27 - compound when we do our analysis okay so
36:30 - here we're going to sum the positive
36:34 - sentiment we're going to sum the
36:35 - negative sentiment and we're going to
36:36 - sum the compound and what we find is
36:38 - that Taylor Swift is overall extremely
36:42 - positive
36:44 - um the compound is the average and it
36:46 - comes out to 485 you will note that this
36:50 - is just a simple sum this is not
36:52 - normalized for anything
36:54 - there's a few reasons for that if you
36:56 - normalize it by the number of lyrics it
36:58 - actually just tells you the overall
37:00 - positivity of each lyric rather than the
37:03 - overall positivity of her discography
37:05 - right so we're thinking of her
37:07 - discography as one entire unit that
37:09 - spans her entire career
37:11 - okay
37:13 - so let's break that up again using the
37:15 - group by function by albemir
37:18 - so the same thing that we were doing
37:19 - before we are going to look at her
37:22 - overall sentiment per year and we see
37:26 - that this 2020 album
37:28 - was
37:31 - so sad compared to the rest of her
37:34 - discography from 2019 to 2020 it really
37:37 - just like fell off and completely
37:39 - plummeted
37:40 - and one might assume that mendites was
37:45 - just as negative or just as sad as the
37:47 - rest of them as it turns out according
37:50 - to our sentiment analyzer it's not right
37:54 - um It's actually kind of on par with the
37:57 - rest of her discography that like it's
38:00 - not overwhelmingly sad and that's an
38:03 - interesting finding in and of itself
38:04 - because you know if we're thinking about
38:07 - sleepless nights we might assume it to
38:09 - be sadder than other things but it's not
38:11 - right finally we want to know is day
38:15 - more positive or is night more positive
38:17 - I'm going to do something kind of tricky
38:19 - here so hold on tight okay so I'm going
38:22 - to create a new data frame of just those
38:26 - lyrics that mention the word night
38:29 - okay
38:31 - um so what I do is I take this data
38:33 - frame and I say
38:35 - give me return back to me the data frame
38:37 - where night is true right so it's only
38:41 - those lyrics that have night I'm not
38:44 - worrying about anything else I'm just
38:45 - worrying about the lyrics that
38:46 - brenference Knight I'm going to do the
38:48 - same for the lyrics to reference day
38:51 - and I want to make sure that it is
38:54 - um the numbers that I expect so take a
38:57 - look there too
38:58 - okay and now I'm going to sum that
39:02 - compound column that weighted average
39:05 - and see what the overall night sentiment
39:07 - was and what the overall Day sentiment
39:09 - was so I'm going to take that data frame
39:12 - that's been filtered for night or day
39:14 - and I'm going to sum the compound column
39:18 - this will give me an overall sum of her
39:21 - discography but again it's not
39:24 - normalized we know going in that there's
39:26 - way more Dimensions than there are night
39:28 - mentions so it's going to be biased in
39:30 - that direction
39:31 - that makes sense in this case because
39:34 - I'm not trying to understand the overall
39:37 - like positivity of her of each lyric I'm
39:42 - trying to understand the overall
39:44 - positivity of the discography or the
39:47 - overall negativity of the discography
39:50 - not any individual lyric or individual
39:53 - song
39:54 - if you are like oh I actually want to
39:56 - know the like
39:58 - average positive or negative sentiment
40:00 - per this unit then you could divide by
40:02 - that unit but that's not what we're
40:04 - trying to do here the question that
40:05 - we're answering is about her entire
40:06 - discography
40:08 - and in the end what we find is that she
40:12 - is overall
40:13 - far more positive than negative even
40:16 - after this most recent album
40:19 - so
40:20 - um I kind of quit going through these
40:21 - but all of these steps are laid out
40:24 - um over here as well
40:26 - and what we can take away from this is
40:30 - no matter what Taylor Swift's entire
40:33 - discography
40:34 - it's it is a little bit more on the
40:36 - positive side I'm going to assume that's
40:38 - a little bit more hopeful a little bit
40:40 - later and that's it thank you
40:45 - thank you thank you so much Michelle
40:47 - that was fascinating for me as a Swifty
40:50 - personally and we hope that everyone
40:52 - watching this live stream had fun taking
40:55 - a deep dive into Taylor Swift's
40:57 - discography and that you're feeling
40:59 - inspired by all of the cruel creative
41:02 - ways you can apply data science to your
41:04 - own interests and life
41:06 - if you want to learn the technical
41:08 - skills that we use today on this project
41:10 - we have lots of beginner friendly data
41:12 - science courses and paths for you to
41:14 - explore the best place to start if
41:16 - you're brand new to coding is the
41:18 - skillpath data science foundations or
41:21 - our popular course learn python3 if you
41:24 - already know Python and you want to
41:25 - level up your skills you might want to
41:27 - try the path build a machine learning
41:29 - model with python or apply natural
41:31 - language processing with python
41:34 - and if you're considering having a
41:36 - career in data science you can take the
41:38 - career path data scientist natural
41:40 - language processing specialist where
41:42 - you'll learn how to build out the skills
41:44 - you need to land a job and you can find
41:46 - links for all of these courses that we
41:47 - mentioned today in the YouTube
41:49 - description below and if you want even
41:52 - more practice projects to try on your
41:54 - own sign up for a free code academy
41:56 - account today we recently released
41:58 - another free data science case study
42:00 - analyze NFL stats with python where
42:03 - you'll build a machine learning model
42:04 - that predicts the winner of NFL football
42:06 - games may be useful for your fantasy
42:09 - team who knows let us know if there's a
42:12 - topic you want to see covered with data
42:13 - science in the future be sure to check
42:15 - out all of codeacademy's free online
42:17 - courses and tutorials and please
42:20 - subscribe and follow codecademy on
42:22 - social media to stay in the loop about
42:24 - more interactive coding and data science
42:26 - content
42:29 - thank you thank you everybody

Cleaned transcript:

okay we are live hi everyone welcome welcome to our live stream we are so excited to walk you through this new code academy case study analyze Taylor Swift lyrics with python it's me hi I'm Corey Stieg a proud Swifty and code Academy's content marketing manager I'm joined by Michelle McSweeney code Academy's data science domain manager who created this case study and Eva savinga a code academy curriculum developer in data science who will be answering all of your questions in the chat so Michelle is going to walk us through step by step how to use Python and Jupiter notebooks to analyze the lyrics to every Taylor Swift song including the new album midnights that just came out now if you're a Taylor Swift fan you know all too well that she intentionally leaves Clues and Easter eggs in her lyrics which is why we're focusing on Taylor Swift's music today she also made history this week becoming the first ever artist to claim all top 10 spots of the Billboard Hot 100 charts probably thanks to the 1 billion times that I personally have streamed midnights in the past couple of weeks but it's pretty iconic and if you're not a hardcore Swifty that's totally fine this is a data science project that you can do with any of your favorite musical artists as a reminder you can practice this case study on your own whenever you want it's free on codecademy and all you need is a free account to try it you can find the link for the case study in the YouTube description below and this live stream will be available to replay so if you get stuck or need hints we got you let me tell you more about Michelle Michelle McSweeney is a linguist data scientist and educator she is the data science domain manager at codecademy and teaches data analysis and visualization at the CUNY Graduate Center she has a PHD in linguistics and is the author of a book about the word okay coming out this January with Bloomsbury and another book on the word data releasing in 2024 with Oxford University press she has been teaching text analysis for over 10 years and has written extensively on how we communicate trust and intimacy on textbased platforms before we jump in Michelle where do you recommend people start learning if they're totally new to data science totally if you are like I'm just getting into data science we've curated the foundations for it in our data science foundations and it gives you a really great overview of everything that you need to know in order to start breaking into the world of data science perfect well I'm gonna pass it over to you and and take it away awesome thank you so much I am going to start by sharing my screen um so we are going to look at the Taylor Swift song lyrics today but as quite mentioned um you can really do this with absolutely anything and not just song lyrics so I've done this with peace treaties I've done this with books um it's really anything that you can get into a text based format you can do the same exact process on so we're going to start off um in our new Jupiter notebooks workspace so you may have seen this locally before but this might be the first time that you're seeing it on codecademy something really cool about this workspace is if you click on this Jupiter button up here it'll take you back to the file tree what we're looking at in the file tree is all of the csvs and all of the files that have Taylor Swift's lyrics in them I am going to work from the solutions notebook because you do not want to see my typos as I like write this code um on the Fly so the data set has all of the albums in it we did some data cleaning the code for the data cleaning is behind here in the file tree first thing that we got to do is load all of these packages Pro tip when you're working in a Jupiter notebook and you want to see your plots you add this little like magic code up here so we're going to be using pandas we're going to be using the natural language toolkit and some other plotting and string manipulation techniques let me talk a little bit about the natural language toolkit so this is a whole bunch of this is a library that has a whole bunch of functions that allow you to analyze text more efficiently and more easily a lot of things come out of the box so if you're just getting started you want to start with nltk right so the first thing we're going to do is we're going to load this data set and as Corey mentioned we've added the midnights data set oh wait oh duh okay so how did I know that I didn't run the first one this told me that the name PD is not defined I thought that I had already defined it up here so didn't expect to teach you how to debug these error messages but uh Jupiter notebooks are really helpful so now that my program knows what the pan does is it's loading in these data this data frame and we're going to look at the very beginning of it we're going to inspect this a little bit we see we have album name track title track number and then the lyrics um and then we have what line that is within the song I'm going to get a little bit of information about it just to like inspect what's going on here and this is my first task I have numbers on the track and numbers on the line but everything else is this object data type I know that it's a string um just because like I know what's in this data set but I noticed that I don't really have the gear in this so I'm going to add the gear into this data frame which I consider to be essential information okay so first thing I'm going to do is get a list of all the albums that are here and I notice immediately I'm like oh my goodness midnight is in here in two different formats thank you Taylor Swift for launching it you know a little bit earlier so for most of these I'm going to Define this function that says if the if the album name is Taylor Swift I know it was released in 2006 right I'm going to get a little bit more creative down here um I know that folklore was released in 2020 but we're going to give it 2021 because it makes our visualizations a little bit cleaner if you were creating this for your portfolio in the future um you would probably clean this up just a little bit and handle this in a slightly different way um which you can learn more about in our pyth in our pandas course on codecademy um same thing here I've used a little bit of trickery here so I know that I have midnights written two ways so I say if the word midnights appears in album name at all return 2022. I've also given myself a little bit of a helper here that if it's not in there just return no date and we'll worry about it later okay so I'm going to apply this function and I'm applying I'm saying album year I'm applying the function I just wrote to every row of the album release um the um the album release function to every row of my data frame sorry um and then I'll inspect this here make sure it looks like what I expect and I have album year there okay so I've added my Essential data next thing I'm going to do is clean my lyric text so this is kind of the first thing that you always do when you're working with any kind of text based data is to you make sure that everything is lowercased because Taylor Swift is obviously so good about like putting clues in how she capitalizes things and how she writes things because some of her albums are written all lower case and we can read something into that um so here computers are not quite as smart as humans so you know ever more written lowercase is different from Evermore in uppercase but we don't want to treat it that way we want to make sure that everything is lowercase together you could also make it everything uppercase but I read that as being yelling you might also so um the other thing that I'm going to do here is I'm going to replace punctuation um I don't want to be analyzing this data with commas and with um periods or things like that I don't know how this how the lyrics were input into the file but I'm going to assume that those are not going to help me in my analysis last thing I want to do is I'm going to remove stop words now you don't always remove stop words but it's a good practice to get into if you're going to try to figure out topics or things like that that said I personally go both ways depending on the goals of the project but for us this time because we're first trying to understand like how often she uses words and we're trying to understand like what her most common words are the a this that those aren't that useful to me so we call them stop words we're going to take them out okay so I'm going to apply this kind of complicated function that I'm going to break down in just a second but what I've done is I've made a clean lyric column that everything was lowercased all of the like extraneous punctuation has been replaced with just nothing that's what this says and I've made a list of stop words that I've removed as well right so what I get is this cleaned lyrics note that I've kept the original lyrics in case I ever want to go back but I have these clean lyrics that are all lowercase you know the word u is the same at the beginning of the sentence as the middle of the sentence right okay these are just for illustration to show you how we split up the words um see what applying this join function does remove the and then I'm removing those columns so I'm actually going to skip that completely there's lots of builtin stop words if you get really deep into text analysis you can learn so much more about those I encourage you to check out our NLP content if you want to get um go a little bit deeper okay so now we're going to actually start asking questions right I've done the preliminary cleaning of my data set now I'm going to ask some questions my first question is how many times does the word Midnight appear right so it looks like across her entire discography it appears 20 times that is way less than I expected I was expecting midnight to appear way more often let's explore that a little bit more okay so maybe I'm like okay maybe she hasn't been hinting to me about midnight exactly but maybe she's been talking about night or maybe she has a really strong focus on day or maybe she has a like really strong Focus just on time words in general I've kept the time words intentionally short here because I expect that you would add some more words to that maybe you know Taylor Swift's music way better than I do and you're like oh I shouldn't just talk about today tomorrow yesterday maybe I should add the word future and see how often she tracks the word future you could do that a couple of different ways you could add to the time list here or you could say I want to make a whole new list about the word future and then use this code to make a new future column and you can pretty easily see from that how you would go about applying this to other artists right so if you had the lyrics of other artists and you were like I'm not actually interested in time at all maybe you're analyzing David Bowie which I have definitely done and you're like I want to analyze dance like how often does he talk about dancing right you can use this exact same technique okay so I'm going to run this I've made a list here of my knight words I've made a list of my day words my time words and here I'm creating a regular expression string for each list of words um the reason that we're doing that is so that we can go through and search for them within our cleaned lyrics and I'm going to create a new column to say um how many does it appear in the cleaned lyrics so I make a new column of saying yes it appears no it doesn't appear this is probably the most important step in text analysis because generally what we're doing here is we're turning unstructured words into numeric outputs this time it's just true and false but whenever you're transforming this like unstructured text into something quantitative you've hit this level of abstraction that is really the underpinning of all text analysis so this is a really cool step right because we're saying if it contains it give it a true or false and then I'm adding up here how many instances of night are true how many instances of day are true and how many instances of time are true we could with a little bit more code count the number of times that night or day appeared in each lyric I did that preliminarily to see if it would like make any sort of difference I found literally zero instances when the word Knight appeared or a night word appeared two times in one given lyric so rather than exposing all of that code um we've just said is it going to be true or false this is another totally valid data science technique is you know you're not necessarily solving every problem but you're solving the problem that you're presented with right so the problem that I'm presented with is counting how many times day and night up here a different problem would be counting how many times day or night appear in every lyric we found out it was one so we can use a simple true and false which gives us some like programmatic shortcuts okay one of those programmatic shortcuts is creating this count right so I'm going to make a night count which is just the sum of the Night lyrics column right so I have this column I have true and false true and false for if the word if a knight word appears in the lyric and then I can just add up the number of times that a night word appears the number of truths I do the same for days do the same for counts and I'm going to print them here okay so it looks like Knight appears 287 times day appears 387 and time only appears 35. we're not going to worry about time too much more that was really just for illustration but it seems like she hasn't actually been focusing on night throughout her discography she hasn't been telling us that she's going to be talking about night but our next question might be yeah that's true for entire discography but what about the past few years I mean she's been producing albums since 2006. that's a long time so let's let's inspect this a little bit further okay so we are going to um visualize how Taylor Swift's mentions have changed over time has she been talking about night more has she been talking about night less right so I'm going to create a new data frame for yearly mentions the group submissions by Year let me break that down because it's super confusing okay so I'm using the group by function which breaks it down I could have used album album name or album year I'm choosing to use year because it gives me some benefits later on okay so I'm grouping by every year and for every year I want to add up the number of mentions of Knight the number of mentions of day the number of mentions of time we're not going to care about time but so that's what the sum is saying it's saying take every numeric column every numeric variable and add it up and give me that group by output that's going to return a whole new data frame right so if you think of a data frame as a table with rows and columns or rows and columns that's going to give me a whole new data frame to work with and I'm going to say on that data frame reset the index just because it makes our data frame a little bit clearer okay let's take a look at what we get out so here is our new data frame so for this album here I see how many tracks it added up the number of tracks that means nothing it computers are not very smart that's not the right kind of variable completely ignore the track column completely ignore the line column but pay attention to the midnight day and night and time columns right so here I see that oh the word midnight is so much more popular in her Midnight's album this should not be surprising um but interestingly Knight is a night words are actually not more prominent there than in her 2012 album right so let's visualize that because it's actually really hard to understand all of this data just looking at a table okay so I want to plot the yearly mentions of night or just like any kind of night word and what I see here is that her most recent album is off the charts more but compared to previous but not that much more than her 2012 album that's interesting so my Swifty um code catamite cocadamites my fellows with Taylor Swift fans told me that it is rumored that Taylor Swift plans everything about three years out and we see a really interesting result here then if we view it in that context we see that starting in 2014 she's been saving those mentions of night you have to wonder if she started planning this album you know around this time period and it has just been holding on to all of her music and all of her lyrics that are going to reference night that would kind of make sense looking at this chart and looking at her progression okay so the next thing that we are going to do is we want to know what albums are the most night focused what albums are the most day focused um and really understand like how that has changed over time not just focusing on magnets okay so the first thing that I'm going to do is you know I showed you that function before mostly because there's some instructional content in here about like creating functions and things like that but there's an album year name file in the file tree because it's a little bit easier to just join it rather than like going back and forth so I'm going to reinstate the album name into that new yearly mentions data frame that we made right so I'm going to read in the CSV file that has all the albums and the years together and I'm going to call it your name and then I'm going to make a new column here for the album name this should go above here I will fix that in the solution later today okay um so I have my yearly mentions data frame I'm giving it a new column called album name and I'm using the year name and giving it album name and then I'm going to sort both of my data frames by year oh that's why I did that never mind I'm going to sort my yearly mentions data frame by year and I'm going to sort my year name data frame by year just to make the join a little bit more logical okay and now I have my yearly mentions data frame that has the album name in it and I'm going to sort by the night values to see which has the highest night value and it turns out its reputation right it's not even midnight it's reputation what why what was going on all of my Taylor Swift fans I'm sure that you know why I don't know her discography that deeply so like what's going on tell us in the chat um or in the comments there right okay so we can do this with a whole lot more things you can probably already see the like possibilities here you might want to increase the words in my nights list or in my days list cool though um okay so we know what her most night focused album was what's her most day focused album let's find out we're going to do the same thing we're going to take our yearly mentions data frame we're going to sort it by values we're going to say hey started by the day column and we're going to make it descending right so her most day focused album is red um where it's you know quite a bit more than any of her others and you can inspect This and like make some assumptions what I find really interesting about this is that if we sorted by time as well then it's also her most time focused album and it's not it's not not night focused um and this was 2008 right so this was almost 15 years ago she is talking about time talking about the past talking about the future talking about like the passage of time what was going on in her life I don't know I hope that our like most Taylor Swift fans do know um but it's really interesting just to watch this moment and like what that can mean about her as an artist but also what it means about the like moment that she's speaking to right and the culture that she's reflecting so like I said doing this with all kinds of different artists can like Lead You In some really interesting directions to start asking these questions okay so that's great but really we want to know the relationship between day and night mentions so we're going to create another line chart with both the day and the night mentions and that's going to let us see this progression a little bit easier where so we have one we're using one plot so when you're working with matplotlib if you everything that comes above your Plot show ends up on one plot right so we're gonna plot yearly mentions and night yearly mentions on album mirror on the xaxis and day on the yaxis if we give it our labels then we can create a legend and we're going to give it a title all right let's take a look at this so interestingly this 2019 album right was way more day and if we think about the fact that we there is a rumor that I've heard down the Grapevine that she plans things three years out then three years out she's really talking about day which we could argue is the exact opposite of midnight and that gives us something really interesting to think about as we see this like big peak in night as well as Midnight's mentions so there might be something too this like three years out planning but I leave it to you guys to start to figure that out okay so now we're like okay maybe it's not just about years but maybe she's telling us like a bigger story just within the albums themselves right so like maybe there's a progression of day to night in the albums or like some sort of ebb and flow like that um based on the fact that like we know that she hides some Easter eggs so let's go and see if that hypothesis is going to pan out so here we have our lyrics position which we're going to do something kind of cool and kind of interesting we really included this to like get you thinking about how to like get these things out of different albums Taylor Swift might not be known for this progression but you know you might want to look at other artists in this way um so we're going to create a new column called position it's going to be the track number is going to be a whole number and we're going to add it to 1 1000th of the line number and this gives us a decimal value that is an ordered representation of each album that we can then line up across all of the albums right so we're going to do that same group Phi function again but this time rather than grouping by album year we're going to group by position within the album so like the first the first track the first lyric of every single album is going to be added together right so the number of night mentions for the first track the first lyric the second track the first lyric the third track the first lyrics so on and so forth okay um we'll do the same thing we'll add them up and then we'll reset our index I'm going to increase the size of this plot basically because it's just it gets way too squished if you don't increase the size of that plot it's not something that you always have to do it's just something to make it a little bit easier to read okay so I'm going to do the same thing I'm going to create a plot that has two um lines on it and the bottom is going to be the position because rather than talking about progression through a year we're talking about progression through an album and lining all of those up and then we'll compare night and day mentions okay so let's go ahead and run this and see what we get and we see no Trends whatsoever right okay so yes maybe we could have cut this out because like it really doesn't have any kind of an interesting Trend going on here um but it's also a really valid practice for everything that you do to check out directions that do turn into something and explore directions that don't and don't erase your work the benefit of working in something like a Jupiter notebook is that you're basically keeping lab notes and a failed experiment is just as valuable as a successful experiment and maybe I shouldn't use failure or success but this led us to a dead end let's back up okay so we've investigated day and night and that's interesting but we also want to do some sentiment analysis and just some more General text analysis of Taylor Swift's um lyrics the first question to ask of any artist or really any document that you're looking at is what are the most common words what are the most frequently used words what is the author or the artist really focusing on here this is the first step towards doing something called topic modeling which is an unsupervised approach to just cluster topics together the first part of that is getting just frequency of mentions so what is Taylor Swift talking about the way to figure that out is to line up all of or to like just figure out how many times she said individual words we're going to do this a kind of like shortcut way mostly because we know that when you're interacting with a learning environment and you're on different speeds of web browsers you don't want something that's super heavy so we wanted to use the lightest way possible to break up these words that is to split them on the space you can read here about like more sophisticated ways to do that but the lightest way to break up your words is just split them on the space it doesn't give you the most accurate result but it does get you a result quickly okay so let's take a look at what that looks like so if I've split all of my cleaned lyrics on the space then I come over here and I have a list of all of the words in each lyric right so this is just a list of all of the words for each one what this is called is a tokenized list so this process is called tokenizing um and it's absolutely an essential process for any time that you're working with text tokenizing your words is essential um read more hear about different ways to tokenize okay so now I want to know what are the most frequent words I have this pretty complicated list comprehension here that is basically just saying like for each word in the tokenized lyrics count them up add them up okay then I'm going to use this counter function um and add them all up and then I'm going to sort them by the frequency okay let's take a look at what this looks like and then we'll break it down a little bit so I have this word frequency variable that is the sorted list of key value pairs right so turn my dictionary into a list that my key value pairs my key is U so I have this word you and you occurred over three thousand times I occurred almost three thousand times if you look at this a little bit more closely you see me and my your there's some more down here um you're this type of your right tokenizing would reconcile more sophisticated tokens tokenizing would reconcile all of those so like you your your yours would all become the same word um but here just splitting it on those on the spaces shows us really clearly that Taylor Swift is talking about relationships she is talking about you and me she's talking about two people and how they're in relationship with each other and we can tell that just by the words that she's using okay cool now we're going to go down and we're going to look at sentiment so we're going to use a prebuilt lexicon um called the Vader lexicon which comes with nltk so nltk has out of the box a lot of techniques to make sentiment analysis and other types of analysis more efficient and a little bit easier to work with a lot of things in the mltk library have to be initiated like this so I create a variable that is this function and then I apply this variable to a to a piece of text right so sentiment intensity analyzer has a function polarity scores within it right so just like pandas has a read CSV the sentiment intensity analyzer has a polarity scores I pass it a string and it tells me how positive or negative it is okay so let's run this and see what we get all right I love Taylor Swift exclamation point so it has not at all negative it's a little bit neutral but it's very very positive the compound is the normalized average or the normalized sum of neutral and positive compound takes intensity into effect um and therefore it's not the linear sum but rather the normalized some of them okay so I'm going to apply this sentiment analyzer to the cleaned lyrics column note that I am not applying it to the tokenized lyrics column I'm applying it to the entire string column that I know to do that based on reading the documentation for this particular sentiment analyzer I went to the documentation and I said okay this one is taking in the entire string and it has its own tokenization process behind the scenes right so I don't need to worry about any of that so I'm going to apply polarity scores from the package to everything in this column okay and if you are curious about Lambda Expressions check out our pandas content which goes over Lambda expressions in a lot of detail okay so let's see what we got all right so I have this new column that is a dictionary so every everything in this column is a dictionary so it's a series of dictionaries where negative is zero neutral is one and positive is zero I'm like wait a minute wait a minute wait a minute neutral it's only neutral but yeah when we analyze there's something about the way that is just a neutral statement it's not positive it's not negative what comes after it might be positive or negative but it's not overtly positive or negative in and of itself same thing Street looks when it's just rained I'm showing you oh no come back um I'm showing you some of the downfalls of working with sentiment analysis because even though that might be very emotionally evocative right like we might associate some sort of feeling to how the street looks when it rains that might not necessarily be happy a sentiment analyzer is not going to be able to capture that especially in out of the box sentiment analyzer um so there we go much better um ah okay so if you ever get disconnected let me show you what to do so it my code gets saved but um where I was does not get saved so um when you are actually no oh it did it ran everything cool let's make sure that that worked if it doesn't work I'll show you the like tip to make things work um you can just go sell run all or sell run all above or below okay um down here we were talking about sentiment analysis okay um I'm going to run this run this run this run this nope cell run all right okay so when we're looking at sentiment analysis it's really like how a computer would view sentiment rather than how a person would okay so here we are we have our dictionary of sentiment analysis is a sentiment analyzes but that's not actually that easy to work with I'm going to need to transform that transforming a dictionary into a bunch of new columns is way easier than you might think um so in Excel this would be something like a pivot here we are applying polarity to the we're making a series out of the polarity column and pandas knows how to work with that and then we're going to drop the polarity column entirely and what we get is a well what we get is here um so now rather than having this all in a dictionary we have each one of these as their own um as their own column which is a lot easier to work with we are going to focus a lot on the compound when we do our analysis okay so here we're going to sum the positive sentiment we're going to sum the negative sentiment and we're going to sum the compound and what we find is that Taylor Swift is overall extremely positive um the compound is the average and it comes out to 485 you will note that this is just a simple sum this is not normalized for anything there's a few reasons for that if you normalize it by the number of lyrics it actually just tells you the overall positivity of each lyric rather than the overall positivity of her discography right so we're thinking of her discography as one entire unit that spans her entire career okay so let's break that up again using the group by function by albemir so the same thing that we were doing before we are going to look at her overall sentiment per year and we see that this 2020 album was so sad compared to the rest of her discography from 2019 to 2020 it really just like fell off and completely plummeted and one might assume that mendites was just as negative or just as sad as the rest of them as it turns out according to our sentiment analyzer it's not right um It's actually kind of on par with the rest of her discography that like it's not overwhelmingly sad and that's an interesting finding in and of itself because you know if we're thinking about sleepless nights we might assume it to be sadder than other things but it's not right finally we want to know is day more positive or is night more positive I'm going to do something kind of tricky here so hold on tight okay so I'm going to create a new data frame of just those lyrics that mention the word night okay um so what I do is I take this data frame and I say give me return back to me the data frame where night is true right so it's only those lyrics that have night I'm not worrying about anything else I'm just worrying about the lyrics that brenference Knight I'm going to do the same for the lyrics to reference day and I want to make sure that it is um the numbers that I expect so take a look there too okay and now I'm going to sum that compound column that weighted average and see what the overall night sentiment was and what the overall Day sentiment was so I'm going to take that data frame that's been filtered for night or day and I'm going to sum the compound column this will give me an overall sum of her discography but again it's not normalized we know going in that there's way more Dimensions than there are night mentions so it's going to be biased in that direction that makes sense in this case because I'm not trying to understand the overall like positivity of her of each lyric I'm trying to understand the overall positivity of the discography or the overall negativity of the discography not any individual lyric or individual song if you are like oh I actually want to know the like average positive or negative sentiment per this unit then you could divide by that unit but that's not what we're trying to do here the question that we're answering is about her entire discography and in the end what we find is that she is overall far more positive than negative even after this most recent album so um I kind of quit going through these but all of these steps are laid out um over here as well and what we can take away from this is no matter what Taylor Swift's entire discography it's it is a little bit more on the positive side I'm going to assume that's a little bit more hopeful a little bit later and that's it thank you thank you thank you so much Michelle that was fascinating for me as a Swifty personally and we hope that everyone watching this live stream had fun taking a deep dive into Taylor Swift's discography and that you're feeling inspired by all of the cruel creative ways you can apply data science to your own interests and life if you want to learn the technical skills that we use today on this project we have lots of beginner friendly data science courses and paths for you to explore the best place to start if you're brand new to coding is the skillpath data science foundations or our popular course learn python3 if you already know Python and you want to level up your skills you might want to try the path build a machine learning model with python or apply natural language processing with python and if you're considering having a career in data science you can take the career path data scientist natural language processing specialist where you'll learn how to build out the skills you need to land a job and you can find links for all of these courses that we mentioned today in the YouTube description below and if you want even more practice projects to try on your own sign up for a free code academy account today we recently released another free data science case study analyze NFL stats with python where you'll build a machine learning model that predicts the winner of NFL football games may be useful for your fantasy team who knows let us know if there's a topic you want to see covered with data science in the future be sure to check out all of codeacademy's free online courses and tutorials and please subscribe and follow codecademy on social media to stay in the loop about more interactive coding and data science content thank you thank you everybody
