With timestamps:

00:00 - hello my name is Farish I'm not Micallef
00:03 - or Nia bass developer and over the last
00:06 - few years
00:06 - api s-- have become increasingly
00:08 - commonplace so in this video we're going
00:11 - to talk about what our api is and what
00:14 - are some of the reasons why API SAR
00:17 - being used
00:18 - to start things off let's go for what
00:21 - API stands for and it stands for
00:25 - application programming interface and
00:28 - you can think of this as a contract for
00:32 - software to communicate with each other
00:33 - well what do I mean by this statement
00:37 - like a real contract there's a set of
00:40 - rules that as a developer you have to
00:42 - follow as long as you follow the rules
00:45 - the API will talk to your software
00:48 - usually in the case of returning some
00:51 - data if you don't follow the rules
00:54 - the API won't send you back what you
00:57 - expected and in most cases will break
00:59 - your application now this allows your
01:02 - software components to communicate with
01:04 - the API components now you may be
01:08 - wondering where does this contract come
01:10 - from well the API developers created the
01:14 - contract when they made the API and
01:17 - these roles are the instructions given
01:20 - on how to use the API in the API
01:24 - documentation and the one thing that
01:27 - really isn't mention is that in most
01:29 - cases this is a one-sided contract you
01:33 - have to follow the rules given you can't
01:36 - make your own so how does this API
01:40 - communication process work well out
01:43 - there there's a server and on the server
01:46 - is a database ain't connected to that
01:50 - database is an API and you can kind of
01:52 - think of the API like a gateway you as a
01:56 - developer and through your client
01:59 - communicate through the API the Gateway
02:03 - sentient requests to the server the
02:06 - server that connects to the database and
02:08 - returns to the data you request it back
02:10 - to your client you can also think of
02:13 - this like
02:13 - being at a restaurant the menu is your
02:16 - contract it gives you what you can order
02:19 - specifically from the API and then you
02:21 - see your requests through your API
02:23 - gateway which in this case you can think
02:25 - of as your waiter and the waiter goes to
02:28 - the chef which you can think of as the
02:32 - server and the database is the
02:35 - ingredients that he has access to and
02:37 - the chef will take out certain
02:40 - ingredients makes your meal which you
02:44 - can think of as your API requests and
02:46 - give it back to your waiter the waiter
02:48 - then heads to your table and delivers it
02:51 - to you and at that point you have to
02:53 - decide how to consume it and what I mean
02:56 - by how to consume it is you have to take
02:59 - this data and manipulate it and present
03:03 - it or do something with it now we're
03:06 - gonna go over a real-world example by
03:08 - looking at yelps API we're gonna go
03:11 - through the documentation and do a
03:12 - simple request but maybe that'll give
03:15 - you idea of what's going on here and how
03:18 - you would interact with a API in general
03:22 - now I'm over here at yelps documentation
03:25 - page and to get started I'm gonna click
03:27 - on get started and it's gonna bring you
03:30 - to the manage app page and what you see
03:33 - here is there's some Florida of items
03:35 - for security reasons so the main one
03:37 - that's poured out is my API key now if I
03:40 - didn't have a app here it would give you
03:43 - option to create an app and I just
03:45 - wanted to let you know that but you
03:46 - should always protect your API key and I
03:49 - want to emphasize that if you give out
03:51 - your API key and it's a paid service
03:55 - malicious actors might use it on their
03:57 - own behalf and rig up thousands of
04:00 - thousands of dollars in charges and I've
04:02 - heard of these stories before on the
04:03 - internet so it's pretty crucial to avoid
04:07 - giving out your API key now there's a
04:10 - lot of information here at the
04:12 - documentation and you can see that all
04:13 - on the Left menu plus different guides
04:15 - and a platform and everything but we're
04:18 - going to do a basic API request and all
04:21 - we need to do is go through the
04:22 - introduction page so I'm gonna click on
04:24 - that
04:27 - what you see here is a list of different
04:29 - end points so there's a business search
04:31 - a phone search a transaction search and
04:34 - others but what we're gonna start with
04:36 - this the basics so let's go with the
04:38 - first search item which is a business
04:40 - search and there's a lot of information
04:45 - here but let's start from the top what
04:48 - we want to focus on is the request and
04:50 - if you see it says get and it gives you
04:53 - this long URL that's your URL to make
04:57 - your API requests and right below that
05:00 - is your parameters and I want to focus
05:03 - on the first two so the first one is
05:06 - term and if you notice on the right side
05:08 - there's a description and it tells you
05:11 - that this is optional but it also gives
05:13 - you examples on how to use this which is
05:16 - pretty crucial here then the second one
05:19 - is location and it will emphasize that
05:22 - it's required but you could use
05:25 - longitude or latitude instead and that's
05:29 - not something most normal people do so
05:31 - we're gonna stick with location and
05:33 - we're just gonna use like a city named
05:35 - specifically Los Angeles believe her or
05:39 - not with the API key we have enough
05:42 - information to run our first API
05:44 - requests so I want to move into an
05:47 - interactive coding environment into that
05:49 - so you could see what the results look
05:51 - like so I'm over here in repple and what
05:55 - I've done is I've written a JavaScript
05:58 - fetch requests and what I want to
06:01 - emphasize here is that you could use any
06:03 - language you like this is what I'm
06:05 - comfortable with
06:06 - but because you may be programming into
06:08 - Python Ruby or other languages I'm not
06:11 - gonna go into the nitty-gritty of
06:12 - exactly how this works but I did want to
06:15 - point out that over here in this fetch
06:18 - request I do have the base URL that's
06:21 - listed I also included term and location
06:25 - as it was mentioned in the documentation
06:28 - I'm also passing over my API key and
06:31 - without these four items this wouldn't
06:36 - work so what I'm gonna do is I'm gonna
06:39 - go ahead and he
06:40 - run and what I'm searching for here is
06:43 - Mexican and Los Angeles some looking for
06:46 - Mexican food in Los Angeles I'm gonna
06:48 - hit run and it's gonna take a second and
06:51 - also now I have this information over
06:54 - here and this is all the results given
06:57 - to me from Yelp for Mexican restaurants
07:00 - in Los Angeles and if you notice it's
07:05 - coming back as a JSON object and there's
07:07 - a lot of information here addresses
07:09 - names phone numbers whether they deliver
07:13 - but the most important thing here is
07:15 - something I mentioned earlier in the
07:16 - video that you need to take this data
07:19 - and consume it you have to manipulate it
07:22 - in any format you need to in order to
07:25 - have this be presented on your website
07:28 - and this is where API could be handy
07:30 - because it adds extra functionality to
07:33 - your website that you didn't have the
07:35 - program for outside of the API request
07:38 - I've talked a lot about what our API is
07:41 - and how do they work but I haven't
07:44 - brought up why companies like Yelp would
07:46 - offer one so let's take a few minutes to
07:49 - discuss that now many companies that you
07:53 - use behind the scenes have an API there
07:56 - runs their system some of them like Yelp
08:00 - offer their API so the public well why
08:05 - is that every company has different
08:09 - reasons but in yelps case it's to expand
08:12 - their reach they offer advertisements
08:15 - services to restaurants the more
08:18 - websites that use their data the higher
08:20 - advertisement rates take in charge now
08:24 - other companies offer api's as a
08:26 - software as a service you pay for the
08:29 - API because they believe what they offer
08:32 - will be cheaper than what you or your
08:35 - company will pay to develop it on their
08:38 - own Twilio is a great example of this
08:41 - scenario they offer voice over IP SMS
08:45 - and other communication services and
08:48 - unlike many other api providers that
08:52 - only charge a monthly
08:53 - Phee Twilio charges each time their API
08:58 - service issues every phone call every
09:01 - text every communication through to
09:04 - Leo's API results in a fee and you may
09:08 - be wondering how they can get away with
09:10 - this pricing structure and be successful
09:12 - well in this scenario the infrastructure
09:16 - costs of building a communication
09:18 - network is very high so instead of you
09:22 - or your company having to build this
09:24 - whole network and maintain it you're
09:27 - reducing your cost by using Julio's API
09:30 - and if you think about it with
09:32 - technology having so many startups costs
09:36 - is a major factor when you're looking
09:39 - for funds from investors the last reason
09:42 - why companies use API s-- is because it
09:45 - offers a easy path for expansion and
09:48 - what I mean by that is that api's are
09:52 - designed to deliver data regardless of
09:55 - the platform so if you're working for a
09:57 - company and they start off with a
10:00 - website as long as it was built with the
10:03 - API behind the scenes you can easily
10:06 - transfer that data to mobile simply by
10:09 - calling the API that code that I had
10:13 - showed earlier to make the API request
10:15 - will work on a webpage or on a react
10:20 - native app I don't have to reinvent the
10:22 - wheel just so I can have seamless data
10:26 - integration between my web platform and
10:28 - my mobile platform so these are just a
10:32 - few of the reasons why API sar use so
10:36 - let's do a quick recap and move on to
10:38 - the end of the video now first I went
10:42 - over what is API and I called it a
10:45 - contract for data second I talked about
10:49 - why companies use api's but the overall
10:53 - theme is that they reduce costs lastly I
10:57 - just like to remind you that learning
10:59 - about api's is a good thing to add to
11:02 - your developers toolbox thanks for
11:06 - watching
11:07 - now if you want to take your API skills
11:09 - to the next level head on over to code
11:11 - Academy now if you like to join the
11:13 - conversation leave a comment below and
11:16 - don't forget to hit subscribe for future
11:18 - videos happy coding

Cleaned transcript:

hello my name is Farish I'm not Micallef or Nia bass developer and over the last few years api s have become increasingly commonplace so in this video we're going to talk about what our api is and what are some of the reasons why API SAR being used to start things off let's go for what API stands for and it stands for application programming interface and you can think of this as a contract for software to communicate with each other well what do I mean by this statement like a real contract there's a set of rules that as a developer you have to follow as long as you follow the rules the API will talk to your software usually in the case of returning some data if you don't follow the rules the API won't send you back what you expected and in most cases will break your application now this allows your software components to communicate with the API components now you may be wondering where does this contract come from well the API developers created the contract when they made the API and these roles are the instructions given on how to use the API in the API documentation and the one thing that really isn't mention is that in most cases this is a onesided contract you have to follow the rules given you can't make your own so how does this API communication process work well out there there's a server and on the server is a database ain't connected to that database is an API and you can kind of think of the API like a gateway you as a developer and through your client communicate through the API the Gateway sentient requests to the server the server that connects to the database and returns to the data you request it back to your client you can also think of this like being at a restaurant the menu is your contract it gives you what you can order specifically from the API and then you see your requests through your API gateway which in this case you can think of as your waiter and the waiter goes to the chef which you can think of as the server and the database is the ingredients that he has access to and the chef will take out certain ingredients makes your meal which you can think of as your API requests and give it back to your waiter the waiter then heads to your table and delivers it to you and at that point you have to decide how to consume it and what I mean by how to consume it is you have to take this data and manipulate it and present it or do something with it now we're gonna go over a realworld example by looking at yelps API we're gonna go through the documentation and do a simple request but maybe that'll give you idea of what's going on here and how you would interact with a API in general now I'm over here at yelps documentation page and to get started I'm gonna click on get started and it's gonna bring you to the manage app page and what you see here is there's some Florida of items for security reasons so the main one that's poured out is my API key now if I didn't have a app here it would give you option to create an app and I just wanted to let you know that but you should always protect your API key and I want to emphasize that if you give out your API key and it's a paid service malicious actors might use it on their own behalf and rig up thousands of thousands of dollars in charges and I've heard of these stories before on the internet so it's pretty crucial to avoid giving out your API key now there's a lot of information here at the documentation and you can see that all on the Left menu plus different guides and a platform and everything but we're going to do a basic API request and all we need to do is go through the introduction page so I'm gonna click on that what you see here is a list of different end points so there's a business search a phone search a transaction search and others but what we're gonna start with this the basics so let's go with the first search item which is a business search and there's a lot of information here but let's start from the top what we want to focus on is the request and if you see it says get and it gives you this long URL that's your URL to make your API requests and right below that is your parameters and I want to focus on the first two so the first one is term and if you notice on the right side there's a description and it tells you that this is optional but it also gives you examples on how to use this which is pretty crucial here then the second one is location and it will emphasize that it's required but you could use longitude or latitude instead and that's not something most normal people do so we're gonna stick with location and we're just gonna use like a city named specifically Los Angeles believe her or not with the API key we have enough information to run our first API requests so I want to move into an interactive coding environment into that so you could see what the results look like so I'm over here in repple and what I've done is I've written a JavaScript fetch requests and what I want to emphasize here is that you could use any language you like this is what I'm comfortable with but because you may be programming into Python Ruby or other languages I'm not gonna go into the nittygritty of exactly how this works but I did want to point out that over here in this fetch request I do have the base URL that's listed I also included term and location as it was mentioned in the documentation I'm also passing over my API key and without these four items this wouldn't work so what I'm gonna do is I'm gonna go ahead and he run and what I'm searching for here is Mexican and Los Angeles some looking for Mexican food in Los Angeles I'm gonna hit run and it's gonna take a second and also now I have this information over here and this is all the results given to me from Yelp for Mexican restaurants in Los Angeles and if you notice it's coming back as a JSON object and there's a lot of information here addresses names phone numbers whether they deliver but the most important thing here is something I mentioned earlier in the video that you need to take this data and consume it you have to manipulate it in any format you need to in order to have this be presented on your website and this is where API could be handy because it adds extra functionality to your website that you didn't have the program for outside of the API request I've talked a lot about what our API is and how do they work but I haven't brought up why companies like Yelp would offer one so let's take a few minutes to discuss that now many companies that you use behind the scenes have an API there runs their system some of them like Yelp offer their API so the public well why is that every company has different reasons but in yelps case it's to expand their reach they offer advertisements services to restaurants the more websites that use their data the higher advertisement rates take in charge now other companies offer api's as a software as a service you pay for the API because they believe what they offer will be cheaper than what you or your company will pay to develop it on their own Twilio is a great example of this scenario they offer voice over IP SMS and other communication services and unlike many other api providers that only charge a monthly Phee Twilio charges each time their API service issues every phone call every text every communication through to Leo's API results in a fee and you may be wondering how they can get away with this pricing structure and be successful well in this scenario the infrastructure costs of building a communication network is very high so instead of you or your company having to build this whole network and maintain it you're reducing your cost by using Julio's API and if you think about it with technology having so many startups costs is a major factor when you're looking for funds from investors the last reason why companies use API s is because it offers a easy path for expansion and what I mean by that is that api's are designed to deliver data regardless of the platform so if you're working for a company and they start off with a website as long as it was built with the API behind the scenes you can easily transfer that data to mobile simply by calling the API that code that I had showed earlier to make the API request will work on a webpage or on a react native app I don't have to reinvent the wheel just so I can have seamless data integration between my web platform and my mobile platform so these are just a few of the reasons why API sar use so let's do a quick recap and move on to the end of the video now first I went over what is API and I called it a contract for data second I talked about why companies use api's but the overall theme is that they reduce costs lastly I just like to remind you that learning about api's is a good thing to add to your developers toolbox thanks for watching now if you want to take your API skills to the next level head on over to code Academy now if you like to join the conversation leave a comment below and don't forget to hit subscribe for future videos happy coding
