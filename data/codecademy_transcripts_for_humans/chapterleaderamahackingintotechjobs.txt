With timestamps:

00:00 - uh going live
00:04 - all right yeah we're live hello
00:06 - everybody and welcome to another live
00:09 - streaming event with some of our
00:11 - chapters
00:12 - today we're hosting two chapter leaders
00:15 - so do you mind introducing yourself guys
00:19 - yep
00:20 - so from my side i'm lorenzo
00:22 - i'm based in helsinki finland and i'm
00:25 - currently working as a software
00:26 - developer in a bank called nordia
00:32 - my name is christo mead and i'm a scrum
00:35 - master a contractor for raytheon
00:37 - technologies we're working for the air
00:39 - force's kessel run
00:42 - nice all right so seems like both of you
00:44 - know your stuff and that's cool
00:47 - hopefully we get to this is an ama so
00:49 - anyone feel free to ask any questions in
00:51 - the chat i have a few questions to get
00:53 - us started with um
00:56 - my first question to you is
00:58 - how do you end up in the role that
01:00 - you're in today
01:01 - uh was that something that you planned
01:02 - for or did you discover the role as you
01:05 - were doing other things
01:08 - okay so i guess i can start
01:11 - um so from my side i was working as a
01:13 - business analyst in another company and
01:15 - then at some point i decided to change
01:19 - job to change career
01:21 - um
01:23 - i was not
01:24 - looking for something specifically
01:27 - like what i'm doing now it was not very
01:29 - well defined in the beginning so um
01:32 - while i was transitioning to my to my
01:34 - current career i was exploring a bit of
01:37 - data science and then i moved towards
01:40 - web development
01:41 - and then when i started to go a bit
01:44 - deeper into web development i thought
01:46 - yeah this could be actually interesting
01:48 - and nice i really like the idea that you
01:49 - can create something from scratch
01:52 - um yeah so that's probably
01:54 - that's a that's the moment when i
01:56 - decided to yeah
01:58 - go deeper into it
02:00 - and now yes
02:02 - i would say now i'm in the role where i
02:04 - wanted to be yeah
02:05 - nice so you were a business analyst and
02:08 - kind of did a bit of a career switch
02:10 - uh was that
02:12 - was that influenced by uh your
02:14 - co-workers of people you knew that were
02:16 - on the software side and you saw their
02:17 - work and said you know i would like to
02:20 - be doing that instead
02:22 - um not really not really because in my
02:25 - previous company i didn't really
02:27 - i was not in touch with developers so i
02:30 - was my position was something like a
02:32 - consultant so i was traveling to other
02:35 - you know um
02:36 - to other places talking to customers and
02:39 - it was really really like
02:41 - uh
02:42 - customer facing uh rather than say
02:45 - developer facing a role um so that was
02:48 - nice
02:49 - but yeah i didn't i didn't have anything
02:51 - to do with developers
02:53 - but on the artist on the other side i
02:54 - was really frustrated that i couldn't
02:56 - create something on my own you know like
02:58 - if you have an idea and you want to try
03:00 - something you think okay this shouldn't
03:02 - be that difficult um so i think that was
03:05 - the moment where i started to think
03:07 - about it
03:08 - about moving towards towards development
03:11 - okay what about you crystal
03:14 - i probably started off farther afield
03:16 - because i started off i was a translator
03:18 - so i have a degree a master's in russian
03:22 - language and culture and i was living in
03:24 - russia at the time
03:25 - and doing translation work and then an
03:27 - opportunity came for me to go back to
03:29 - school
03:30 - and i did that to get into software
03:31 - engineering so i came out with a
03:32 - software engineering degree um but even
03:35 - then switching to
03:37 - getting more into tech was difficult
03:39 - because
03:41 - uh people would tend to use me for
03:43 - what the gaps that they needed to fill
03:45 - um since i had a background in other
03:47 - areas so they would use my english
03:48 - language background or they then what
03:50 - happened is because i'm a person that
03:51 - asked a lot of questions i got into
03:53 - quality assurance
03:54 - um because i was always prodding why are
03:57 - we doing it this way what could be
03:58 - better so that got me into tech but then
04:01 - to get where i am now where i'm much
04:02 - more
04:04 - back and closer to hands-on as a scrum
04:06 - master so i engage with the team that's
04:08 - actually doing development work and i'm
04:10 - helping coordinate that but the way i
04:11 - got there was
04:13 - not so much my plan which goes back to
04:15 - original question the role i'm in now i
04:18 - got there because of
04:20 - being open to take on new tasks and
04:23 - stretch myself and get out of my comfort
04:25 - zone because i didn't picture myself
04:26 - being a scrum master but because i'm
04:28 - very good at
04:30 - closing the loop and
04:32 - following up on things with people to
04:33 - make sure things get done and checking
04:36 - the quality of items that made me a good
04:38 - fit for this particular role so that's
04:39 - how i ended up where i am
04:41 - okay great well we have uh some
04:43 - questions for rain let's see uh chelsea
04:45 - has a question
04:47 - what was the most significant barrier
04:49 - you faced when transitioning to coding
04:52 - software engineer like i guess tech in
04:53 - general what was one of the biggest
04:55 - barriers that you find yourself having
04:57 - to deal with
05:02 - you can start okay i'll start
05:04 - all right yeah go ahead
05:06 - so my one of my biggest was i made the
05:09 - mistake in my resume that i showed the
05:11 - languages i spoke where i studied and
05:13 - that ended up being a distraction and
05:15 - and that's part of what in them ended up
05:17 - funneling me away from development and
05:19 - more into say the management side of
05:21 - things or the administrative side of
05:23 - things so that was one of the things
05:24 - that ended up being a barrier with and
05:25 - then when i would remove that from my
05:27 - resume then the responses i got and the
05:30 - interview questions would be more
05:31 - focused on specifically the task that i
05:33 - was looking for or the job i was looking
05:35 - for
05:36 - okay so basically your resume was
05:38 - holding you back a little bit based on
05:40 - the keywords and the language you were
05:41 - using like how you were portraying your
05:43 - skills i guess they thought this is this
05:45 - is a person for this bucket instead of
05:47 - that bucket i guess
05:49 - okay
05:49 - actually part of it was first literally
05:51 - i meant languages as in i i showed that
05:53 - i spoke russian a little bit of german a
05:55 - little bit of arabic and that just threw
05:57 - people off and would be a big
05:58 - distraction
06:00 - okay wow what about you lorenzo
06:03 - uh well
06:04 - that's a very good point actually i have
06:06 - to say that i agree with crystal um um
06:09 - yeah i've experienced something similar
06:11 - meaning that people could see my resume
06:14 - and then they were like okay but you
06:15 - know uh you've worked as a business
06:17 - analyst for a few years um so you could
06:19 - do something like that right and i was
06:21 - like no no no no i'm you know i want to
06:23 - change i'm doing something to change
06:26 - career and i want to be a web developer
06:29 - so at some point you have to be willing
06:31 - to turn down some offers for example if
06:34 - that's not what you want to do right
06:36 - so that was definitely 100 something
06:38 - like that and
06:40 - another point
06:42 - in my case was
06:44 - focusing on on a specific
06:47 - language or rather a specific direction
06:50 - meaning that you know as i said i
06:51 - started with something like data
06:53 - analysis
06:54 - um so i was using python there and i was
06:56 - going
06:57 - towards data data science basically that
07:00 - analysis um and then at some point i
07:02 - switched to web development so then you
07:04 - start again with html css javascript and
07:07 - of course you know um at the beginning
07:10 - you could you know if you go on the
07:11 - internet you'll find well you know you
07:13 - could program with python and you can
07:15 - create website with pythons and you can
07:17 - create you know the backend with but yes
07:20 - that's true
07:21 - um and you can do that with c c sharp
07:24 - there's a lot of stuff out there right
07:26 - um
07:28 - and i think it's very very important to
07:30 - find a way
07:32 - to follow a specific direction direction
07:35 - and don't get distracted
07:37 - so
07:38 - in my case this is one reason why i
07:40 - joined codecademy actually because at
07:42 - some point say you want to be a
07:43 - front-end developer right you go into
07:45 - the front-end developer parts and that's
07:47 - it you don't get distracted by python or
07:50 - by c-sharp or whatever else
07:53 - so that's
07:54 - extremely helpful in the beginning just
07:56 - focus on what you have there do that
07:59 - properly and then later on you'll have
08:02 - the skills to
08:03 - to change
08:05 - so it seems like you were a little
08:06 - dispersed in the topics you were
08:07 - covering and it was a little hard for
08:09 - you to market yourself as a i guess as
08:11 - your first job as a developer career
08:13 - switching it was a little bit difficult
08:15 - to to say this is the the skills i'm
08:18 - really kind of uh you know how
08:20 - you might be a mile wide an inch deep
08:23 - it's a it's a saying that they have of
08:25 - you know what are you focused on versus
08:26 - how many things you think you know right
08:28 - uh sounds like that you were dealing
08:29 - with that a little bit uh oh and by the
08:31 - way for the people joining the event
08:33 - that are not in the u.s uh a
08:35 - clarification that resumes uh it's
08:37 - sometimes referred to as cv or
08:39 - curriculum vitae in other parts of the
08:41 - world so when we say resume we're also
08:43 - talking about cvs this kind of
08:44 - interchangeably here in the us
08:47 - um
08:48 - i mean here in the us we use resume more
08:50 - often to talk about the skills and like
08:51 - the piece of paper that shows what you
08:52 - know um let's see another question
08:56 - you both self-taught or cs degree how
08:59 - long did it how long it took you to land
09:01 - a job okay so you both said that you
09:03 - were working on places and then you kind
09:06 - of transitioned to the roles you are you
09:08 - have now how long did it take you to for
09:10 - that transition to happen
09:14 - so um i can start um
09:17 - to some extent i have to say i was
09:18 - really really lucky just
09:20 - because um
09:23 - when i decided to to leave my previous
09:25 - job i i was basically i was unemployed
09:28 - right and then i was lucky enough to
09:30 - follow some unemployment courses and
09:32 - stuff like that that pretty much every
09:33 - country offers and in one of these
09:36 - let's say courses or like meetings um i
09:40 - met this guy who was supposed to be sort
09:42 - of a tutor for me someone who could kind
09:45 - of help me um and he put me in touch
09:48 - with another guy
09:49 - and eventually that guy was an
09:50 - entrepreneur and he hired me for an
09:53 - internship even though my skills at the
09:55 - time were extremely basics right
09:57 - extremely basic
09:59 - and by the way he hired me as a data
10:02 - analyst something like that so it was at
10:04 - the beginning it was more on the data
10:06 - side as i said
10:07 - but yeah i would say so how long do you
10:10 - say like six months a year
10:12 - between between learning like so your
10:14 - business is like you know i want to be a
10:16 - developer so between the learning of the
10:18 - skills and then finding someone that
10:20 - will give you a shot of using those
10:21 - skills in a professional setting how
10:23 - long did it take you
10:25 - so i'd say
10:26 - probably
10:28 - four to six months so a bit a bit of a
10:30 - disclaimer here while i was still
10:33 - working as a business analyst i started
10:35 - to study python and data science and i
10:37 - got a
10:39 - it was not an online degree but i was
10:41 - following one course on coursera and the
10:43 - course was something like
10:44 - data science with ibm something like
10:46 - that
10:47 - so by the time
10:50 - four to six months might be a little
10:51 - fast for some people was it how long
10:53 - were you like how many hours do you
10:54 - think you were put in every every week
10:56 - like were you every night after work
10:58 - dedicating yourself to this or
11:00 - how much of a focus was this for you
11:03 - i would say
11:05 - um
11:07 - maybe not every night i would like i
11:09 - would say that uh
11:10 - but
11:11 - i i would i was catching up during the
11:13 - weekend yeah you know like if you need
11:15 - to work then then the thing is that i
11:17 - sometimes i could use what i was
11:19 - learning into my daily tasks at work you
11:22 - know so instead of
11:23 - instead of doing some analysis with
11:25 - excel sheets i could use some python
11:29 - so that's a good thing if you can do it
11:32 - because you start to use it in a sort of
11:34 - professional way
11:36 - that that helps yeah
11:38 - okay what about your cursor how long did
11:40 - it take you more or less from the time
11:41 - you decided i mean i don't know if you
11:43 - actually decided you kind of like just
11:45 - got moved into the world slowly and
11:47 - discovered it so was there a point where
11:49 - you said well i'm gonna go in this
11:50 - direction maybe i should go take some
11:52 - classes maybe you should do some
11:54 - something to add in my resume like did
11:56 - it take you some time to train and then
11:57 - sometime to find someone that would give
11:59 - you that role
12:00 - um
12:01 - yeah definitely because as i said i i
12:03 - tend to get
12:05 - not this makes it sound like it was a
12:06 - bad thing but it was a good thing for me
12:08 - career-wise i tended to end up in
12:09 - manager roles in different capacities so
12:11 - for instance i was in quality assurance
12:13 - for a good long time which in my area
12:17 - you may be more familiar with the term
12:18 - as mission assurance because i wasn't a
12:20 - tester i was responsible for preventing
12:23 - defects and looking at the processes and
12:25 - the overall program execution
12:27 - from that aspect but getting back into
12:29 - tech or getting the ability to do it
12:31 - that required
12:33 - that took time so um
12:36 - and what had to happen was i had to
12:38 - switch from one company to another
12:40 - and even then it took a good
12:42 - eight months before i started getting
12:44 - more technical getting more technical
12:46 - opportunities
12:47 - um and again it came back to doing the
12:49 - job well but showing that i could do
12:51 - more and taking classes at the same time
12:53 - so i always whenever i was looking to do
12:56 - a transition
12:57 - to bolster my confidence i would take
12:59 - classes um and since they were talking
13:01 - technology there's always new stuff to
13:03 - learn and always things you need to do
13:04 - to keep up to date so that was never
13:06 - really the issue
13:07 - but yeah it probably took me
13:09 - i mean the shortened version would be
13:10 - say it would take it took me about a
13:12 - year once i set my goal to get to
13:13 - something more technical um this last
13:16 - one i was not particularly
13:18 - acting no that's not true the last one i
13:20 - was definitely looking to move more
13:21 - technical
13:22 - and once i set my mind to it it took me
13:24 - about six months
13:25 - and
13:27 - that
13:28 - actually once i got the transitions when
13:30 - i signed up for code academy because i
13:31 - realized for in my current role i wanted
13:33 - to do more uh with python specifically
13:36 - in data and that's what led me to
13:38 - academy and why i'm here okay to your
13:40 - point mine is more of a bumpy path than
13:42 - i think than lorenzo's because i would
13:44 - go into management and come back out a
13:45 - little bit
13:46 - but every time i wanted to get back more
13:48 - technical i would go back towards
13:49 - learning and make sure one thing we
13:51 - haven't touched on
13:53 - network so i was never burning my
13:55 - bridges always trying to show people
13:57 - that i could do more than they maybe
13:58 - expected from me and i would step up and
14:00 - do something that was maybe a little bit
14:03 - out of my comfort zone
14:04 - and always looking for a sponsor um you
14:08 - know somebody that could put in a good
14:09 - word for me somewhere because that's
14:11 - really how i found that i would base
14:13 - make my best moves in my career hmm so
14:16 - those last six months was that um when
14:19 - you were taking courses do you think
14:20 - that what were you doing like the
14:21 - weekends a few hours here and there did
14:24 - you have a set schedule did you say okay
14:26 - i'm going to make sure to put five hours
14:27 - a week whatever that is like do you put
14:30 - it in your in your calendar like 7 to 8
14:32 - p.m that's coding time like that's
14:34 - that's project time that's python time
14:37 - i wish i could do that um
14:39 - what i try to do is i try and set myself
14:41 - a goal of five hours a week um and stick
14:43 - to it okay it tends to be i tend to make
14:45 - up more of it i think like lorenzo said
14:46 - on the weekends and i'll usually end up
14:48 - getting a half hour an hour a couple
14:49 - days a week during the week
14:52 - okay you know when i was doing the uh i
14:54 - was doing the full stack path and got a
14:55 - code academy what i did is i went down
14:57 - the syllabus and i i wrote down the 43
15:00 - 46 45 chapters that he has
15:03 - and i basically said okay
15:05 - how fast can i get i did like the first
15:07 - two or three chapters and i timed myself
15:09 - like how many hours it took me to go
15:10 - through chapter and i tried to
15:12 - extrapolate that and say okay if my
15:14 - average time is you know an hour and a
15:16 - half per chapter then that's this is
15:18 - gonna probably take like 80 hours of
15:20 - work i'm going to assume that the later
15:22 - chapters are harder so i'm going to add
15:24 - a 20 margin on that so 100 hours of work
15:27 - like i and i tried to like map it out in
15:29 - a way that i liked
15:31 - how
15:32 - i could just say okay if i keep up this
15:34 - pace by december before christmas i'm
15:36 - gonna be done and that kind of motivated
15:38 - me because i could see
15:40 - that my
15:41 - daily work was you know driving me to
15:43 - that it was kind of like mini milestones
15:45 - in a way so a lot of different people
15:47 - get motivated different ways to get
15:49 - through coursework
15:51 - let's go back to the questions
15:53 - i have a question how to become a full
15:55 - stack engineer well sir uh there has a
15:57 - lot of answers to that uh do you both of
16:00 - you do you have any idea
16:01 - any answers for
16:03 - how would you go about becoming a full
16:04 - stack developer
16:08 - uh you want to go first
16:09 - i i'm not a full-stack developer so that
16:12 - that's a question for me
16:13 - uh yeah so um
16:16 - i think uh okay so um
16:19 - first of all like a full stack the
16:21 - developer is sort of a unicorn in my
16:23 - opinion you know like nowadays
16:25 - everyone's a full stack developer but no
16:26 - one is really
16:28 - like only only a few people are full
16:30 - stack developer okay you should i mean
16:33 - in my opinion
16:35 - now that i'm working in a professional
16:37 - environment and i see what i know and
16:39 - what i should know to be like
16:41 - comfortable let's say
16:43 - i think you would need at least maybe
16:45 - three years
16:47 - in the front end and then three years in
16:49 - the back end and then after six years
16:51 - maybe you can be a full stack developer
16:53 - okay that's the
16:55 - frank answer
16:56 - um having said that
16:59 - my advice would be to start from either
17:02 - front end or back end i don't really
17:04 - have a preference um
17:07 - do as you as you wish
17:09 - start
17:10 - either way
17:12 - find a job as a front end or back-end
17:14 - developer and then while you're working
17:16 - keep studying there's i mean full
17:19 - disclosure here i'm i keep studying
17:21 - every day almost every day uh or
17:24 - definitely definitely every week um
17:27 - other than so other than my job i go
17:29 - back to study material and i try to
17:31 - understand more of
17:32 - whatever i want to learn and definitely
17:36 - more about front-end and back-end
17:38 - but yeah study
17:41 - well you will never stop studying first
17:43 - of all um
17:45 - but yeah
17:47 - yeah
17:49 - yeah um well i'll step in i'll step in
17:51 - here since you said you're not from the
17:53 - developer of full stack developer um
17:57 - i've talked to developers here code
17:58 - academy and in their experience and
18:00 - obviously this changes from company to
18:02 - company and it changes from person to
18:03 - person
18:04 - but
18:06 - most boot camps and places that teach
18:08 - you how to be a developer they have a
18:10 - full stack they make you full stack
18:11 - aware now a full stack developer it's a
18:14 - difference of you know what the back end
18:16 - is and what the technologies generally
18:17 - are but usually at a company for example
18:19 - here at code academy you will join one
18:21 - of the teams engineering teams and they
18:23 - have focus areas so maybe you are in the
18:25 - engineering team working on the platform
18:27 - side and then you're going to be more
18:28 - back end heavy while maybe you join the
18:31 - team that is working with marketing on
18:33 - new pages and new things and you're more
18:35 - front than heavy and that sort of
18:38 - gets you moving in one direction and
18:40 - gives you more experience in front then
18:41 - or back end but here code academy true
18:44 - full stack it's only people that have
18:46 - been here for many many years and they
18:48 - become this kind of like staff engineers
18:50 - where there are these people that just
18:52 - know they just like everybody knows that
18:54 - they know and they know how everything
18:56 - connects and how everything works they
18:58 - have it all in their minds but that's a
19:00 - very unique role and usually at least
19:02 - here uh it's a lot more common for you
19:04 - to just you put in your resume a full
19:06 - stack but you will end up focusing in
19:08 - one area or another depending on the
19:10 - team that you're in and the projects i
19:12 - really like i really like how you
19:13 - phrased it like you become
19:16 - a full stack aware you know like it's
19:18 - not it's not that you know ever
19:20 - especially when you go out of a boot
19:21 - camp or maybe some courses and these
19:23 - kind of things you are aware of things
19:25 - it's not that you are a professional
19:27 - developer you know like
19:29 - i mean i can totally put up a website
19:32 - and use some google services or aws
19:34 - services to have a back end there
19:36 - but this doesn't make me
19:38 - a full stack developer okay i kind of
19:41 - know how to work my way around but
19:43 - yeah i think this is very common that a
19:45 - lot of people that get into tech
19:46 - especially the first job in tech um
19:48 - there is a before and an after like once
19:51 - you get in that professional setting and
19:53 - you start talking to the developers and
19:55 - you start realizing what is truly
19:57 - possible or how com the complexity level
19:59 - of projects i think there's like a like
20:02 - a realization of i thought i knew but i
20:05 - don't
20:07 - a lot of people like they feel like they
20:08 - know and then
20:10 - three months later like they six months
20:12 - after they got their first job you asked
20:14 - them and they changed their mind and say
20:15 - no actually i don't know anything i
20:16 - thought i knew um i have a lot to learn
20:19 - right
20:20 - yeah as a before and after
20:22 - okay more questions let's see
20:27 - do you have a coding portfolio to share
20:29 - with potential employers to show your
20:31 - skill set or completed projects okay yo
20:33 - so this applies to both of you did you
20:34 - have to build up some sort of portfolio
20:36 - to get that job or um i mean for example
20:39 - crystal in your space in your your case
20:41 - you were in management and you moved
20:43 - through management roles
20:44 - how does that how do you showcase the
20:47 - impact you had in those roles
20:49 - and
20:50 - how that was worthwhile in the next role
20:53 - like how that you know translated into
20:54 - natural
20:56 - that's a great question part of it comes
20:58 - back to sort of the resume aspect of it
21:00 - one of the things that i learned in my
21:02 - trip because for for me where i am
21:04 - because of the different programs we
21:06 - work on for instance i can't have
21:07 - the government contractor i can't take
21:09 - my code from one place or another and
21:10 - show that so it has to be in my resume
21:13 - so it's going to be describing with the
21:15 - work idea the impact i had
21:17 - talking about so if i were managing how
21:19 - many people are i was managing the value
21:21 - dollar value of the program or the
21:23 - impact of the program when we were done
21:26 - for me also what comes to it is that the
21:28 - people on the program i was working on
21:31 - when i say program that's
21:33 - a project that has a many year
21:36 - phase to it if you will in government
21:38 - contracting but it's not a computer
21:40 - program it's a project that has multiple
21:43 - years to it that it
21:45 - evolves over time that's a program and
21:48 - what's most important there for your
21:49 - next position is the people you work
21:51 - with that can then vouch and say this is
21:53 - what they did
21:54 - this is what they're good for yes i
21:56 - recommend this person because he really
21:58 - helped with this
21:59 - so that's how you you build your
22:00 - reputation and you use that to move
22:02 - forward
22:04 - okay so okay
22:06 - so both project management i mean not
22:08 - paramount project showcasing but you you
22:10 - also put a lot of emphasis on networking
22:12 - and people vouching for you i guess okay
22:14 - i know that that's a big one especially
22:16 - when you're trying to get into certain
22:17 - companies they usually have referral
22:19 - programs and it's not something that
22:20 - people utilize often enough i feel like
22:23 - a lot of people don't really
22:25 - they feel shy or they feel like it's not
22:27 - appropriate but it is totally
22:28 - appropriate like every company or most
22:30 - companies have some sort of referral
22:31 - system where people that work at that
22:33 - place can highlight potential
22:36 - uh candidates right for roles so
22:38 - i feel like that's probably a big plus
22:41 - and if i could talk into that
22:42 - specifically
22:44 - okay i won't name any companies but
22:46 - um
22:47 - often what i've seen is that the
22:49 - recruitment process and the system
22:51 - may not be the best system for
22:54 - recruiting particularly there might be
22:56 - some
22:57 - gaps in it for so if you have a referral
22:59 - if you have somebody on the inside that
23:01 - is helping you get the position as not
23:03 - in the sense of getting the job but
23:05 - they can monitor how your resume is
23:07 - being going through the system and help
23:09 - resolve any glitches in that area or
23:11 - speak up for you so it's a matter of
23:13 - also sort of overcoming a system that
23:15 - might not be ideal so having the person
23:17 - on the inside that you can use is really
23:20 - valuable and it's not saying that your
23:21 - skills are less it's just making sure
23:23 - that your skills are seen for what they
23:24 - are at a minimum
23:26 - yeah it's uh one of those cases where
23:28 - you apply for a job and five minutes
23:29 - later you could reject it and you know
23:31 - it wasn't a person it was the system
23:33 - automatically rejected it was the server
23:35 - right you just didn't have the right
23:36 - keywords in your resume i guess
23:38 - what about you lorenzo how do you did
23:40 - you have to build up any portfolio you
23:42 - said you found an entrepreneur that
23:44 - hired you for some basic skills uh were
23:46 - you at the same time building a
23:47 - portfolio for for your skills yeah so at
23:50 - the time as i said um i started to work
23:52 - on python and data analysis while i was
23:55 - still working in my previous company
23:57 - and
23:58 - basically before leaving the company so
24:01 - let's say we're speaking about may of
24:03 - that year
24:04 - by that time i had let's say
24:08 - some portfolio regarding some data
24:10 - analysis project that i
24:12 - that i that i did during the
24:14 - certification during the kind of course
24:16 - that i was following online so i was
24:18 - definitely able to show that and i was
24:20 - able to kind of explain why i did that
24:22 - and and what i was trying to get out of
24:24 - that and that surely
24:26 - built uh some
24:28 - some confidence in the other person
24:30 - other than that i'd say that
24:33 - after that while i was working for him
24:36 - um
24:37 - in my spare time i was also like coding
24:39 - and of course building some small
24:41 - projects on the side
24:42 - and i have to say that when recruiters
24:45 - called me a couple of times they
24:47 - mentioned yeah i've seen stuff on your
24:49 - github profile
24:51 - so
24:52 - it is someone is looking at that let's
24:54 - put it that way
24:56 - i'm not saying everyone is doing that
24:58 - but
24:59 - we actually had um i've been talking to
25:01 - recruiters in live streams here at the
25:04 - code academy youtube channel there's
25:05 - like six episodes of those and every
25:07 - recruiter will always say the same thing
25:09 - which is make sure you have a linkedin
25:11 - page and make sure you have a github
25:13 - repo
25:14 - if you are going to be uh getting a
25:15 - developer job because we look at those
25:17 - all the time they said we don't look at
25:19 - each one like
25:21 - we don't always look at them if you
25:23 - don't get through the initial screening
25:25 - of your resume like a lot of recruiters
25:27 - have to read through hundreds of resumes
25:28 - and but if they see something
25:30 - interesting in your resume their next
25:32 - step is most likely going to be
25:34 - finding more information about you as a
25:36 - candidate either on your linkedin or in
25:38 - any other online page that you might
25:40 - have your personal page you might have
25:41 - provided or your github repo
25:43 - um so i know that that's that tends to
25:46 - be the case that the recruiter is always
25:47 - looking at
25:49 - gotta make sure you have a good one set
25:51 - up um we actually have a moderator in
25:54 - discord that he didn't build any
25:56 - portfolio projects what he was doing is
25:58 - well not as specifically but he was
26:01 - uh helping a lot of open source projects
26:03 - online
26:04 - and he got to the point where people
26:06 - that he was collaborating with ask him
26:08 - where do you work and he said nowhere
26:10 - i'm just like self-teaching myself code
26:12 - and and people are like you you don't
26:14 - you don't work anywhere here's a link to
26:15 - my website here's the link to my jobs
26:17 - website here's a link to my company and
26:19 - they started inviting him to to apply
26:22 - for jobs he said look look you
26:23 - definitely have the skills you're
26:24 - collaborating these open source projects
26:26 - with us on github and
26:28 - you definitely you know like we know we
26:30 - would like if i could i will hire you so
26:32 - sometimes uh the power network i guess
26:34 - networking so it all comes together
26:36 - let's see more questions
26:39 - if you guys had to
26:41 - have a different job which one would it
26:43 - be if you could just pack it up and
26:45 - let's let's imagine that somebody drops
26:46 - 100 million in your bank you don't have
26:49 - to worry about money and you say well
26:50 - now i can do anything i would like to do
26:52 - what would you do an orchard beekeeper
26:55 - surfer
26:56 - i don't know
26:57 - what would you go for
27:01 - um
27:03 - to be honest i don't think i would
27:04 - change that much now because
27:07 - [Music]
27:09 - so first of all um
27:11 - a step back i was studying a react as as
27:14 - you can study on code academy and
27:16 - because it's very very popular and then
27:18 - they hired me to work as a front-end
27:21 - developer with angular so i kind of
27:23 - started from scratch angular seems super
27:26 - hard to me um
27:27 - so i'm learning a lot of a lot of things
27:30 - but
27:31 - but in the end i like it um
27:34 - if i would get say a hundred million
27:35 - dollars i would just probably
27:38 - focus on some
27:39 - bad projects you know like stuff that i
27:41 - would like to have
27:43 - in the world and that's it right uh
27:46 - nowadays i have to spend most of my time
27:48 - working which is also about learning of
27:50 - course but i cannot work that much on my
27:54 - personal projects
27:55 - but yeah i think i wouldn't change so is
27:57 - that uh if i'm understanding correctly
27:59 - it sounds a bit like you would still be
28:01 - a developer maybe an entrepreneur
28:03 - developer like you would start a company
28:05 - or do some personal projects on your own
28:07 - like if you could remove the risk of
28:09 - needing to pay your bills and your
28:10 - random things you might have like start
28:12 - working on your own personal price so
28:14 - that would make you an entrepreneur i
28:16 - guess
28:17 - i think so yeah i think so okay
28:20 - entrepreneur nice you know maybe yeah on
28:22 - your mobile apps yeah i mean
28:24 - right i mean look if you get a bunch of
28:27 - money um you can go on a beach and have
28:29 - some fun for a couple of weeks and
28:31 - months maybe and then after all i think
28:32 - it becomes you know money
28:35 - like they make you happier for a while
28:37 - but then you kind of revert back to your
28:40 - um
28:41 - to your status to your kind of sort of
28:43 - happiness status just be one of those
28:45 - influencers posting like little coding
28:47 - tics uh tick tocks you know five
28:49 - programming languages to learn like
28:51 - things like that just one of those
28:53 - exactly yeah
28:55 - three three portfolio projects you need
28:57 - like you know those people posted on
28:59 - instagram and now yeah you could be from
29:01 - the beach you know from the hotel uh
29:03 - what about you crystal uh if you could
29:05 - uh drop everything and do something else
29:07 - what would you do a ranch maybe cattle
29:09 - horses oh no no no
29:13 - no i i'm a city person pretty much so
29:15 - you'd see me in a big city somewhere um
29:17 - but actually what i know what i would do
29:19 - right now because it's been my my recent
29:21 - interest i would probably work primarily
29:23 - on developing my mobile app skills
29:25 - that's a
29:26 - but i'd be looking specifically at
29:28 - decentralized social apps um so
29:32 - blockchain has become something i've
29:34 - been interested in now and now there's
29:36 - now the dso i don't know if any of you
29:38 - are following that so it used to be
29:39 - called big cloud they rebranded at the
29:41 - beginning of september i think to do so
29:43 - decentralized social media
29:45 - okay and
29:46 - they're creating the based on the
29:48 - blockchain there's now an opportunity
29:50 - and there's a lot of projects that are
29:51 - doing i think there are 100 projects
29:53 - that are starting up to develop on this
29:55 - blockchain decentralized social media so
29:57 - it's really interesting and it's very
30:00 - open and since it's the beginning of
30:01 - this deck if i got that hundred million
30:02 - dollars now i could drop everything and
30:05 - start doing like startups on apps that i
30:07 - think would be great and do the
30:09 - user-centric feedback approach to make
30:11 - sure that it would actually work you
30:12 - know that way so it sounds like both of
30:13 - you are going to the entrepreneur's side
30:15 - both of you would just like drop
30:17 - everything and start your own companies
30:18 - i guess and run your own projects i
30:20 - guess uh in decentralized finance i feel
30:22 - like the uh blockchain technology now
30:24 - it's sort of like machine learning 10
30:26 - years ago like in 2010 after you know
30:28 - when the iphone 3 came out the first
30:30 - ipad uh everybody was talking machine
30:32 - learning and like the power machine
30:34 - learning like if you wanted to start a
30:35 - company and you wanted to have angel
30:37 - investments or any sort of uh vc fund
30:39 - investments you needed to have machine
30:40 - learning in your in your tag line right
30:42 - in your company like it had to be about
30:44 - that and i feel like uh blockchains did
30:46 - like that now in the 2020s where
30:48 - if you start any sort of company you
30:51 - have to say that you are working with a
30:53 - blockchain in one way or another
30:57 - talk about the nfts nfts we should start
31:00 - we could uh take a screenshot make an
31:01 - nfc of the this ama um
31:05 - sell it okay so let's see
31:08 - more questions
31:11 - there's an internet i want to be career
31:13 - switcher interesting
31:14 - [Music]
31:16 - okay so this person
31:18 - this person wants to be a career
31:20 - switcher uh focusing in front-end
31:22 - development but
31:23 - they get the feeling that they're not
31:25 - smart enough
31:27 - which areas is more value in the tech
31:29 - world okay so
31:30 - i guess this this kind of like a general
31:32 - question of like how smart you need to
31:34 - be or like how capable you need to be to
31:36 - break into tech
31:37 - and i'm assuming that the answer is
31:39 - going to be somewhere along the lines of
31:41 - anyone can do it but i want to hear your
31:42 - answers
31:45 - i can start i think on that one because
31:47 - one of the things that i think a lot of
31:49 - people
31:52 - and i'll talk from a us perspective
31:53 - because we tend to be uh
31:55 - more
31:56 - aggressive in our resumes if
31:58 - you will more assertive that how
31:59 - wonderful we are and all that
32:01 - but there's also the flip side of that
32:02 - when people look at the job requisitions
32:04 - they'll see all of these requirements in
32:07 - that requisition and that will scare
32:08 - people off
32:09 - if you in the united states if you have
32:11 - 80 of the requirements that you see in
32:13 - the resume you are overqualified for
32:14 - that position
32:16 - so if you have 50 i would say apply
32:20 - because there's always this wiggle room
32:22 - in a position
32:23 - where you may have some skill that's not
32:26 - in the requisition
32:28 - um from your current career for instance
32:30 - i think there's somebody on code academy
32:31 - that has a background in genetics well
32:33 - if i were working in a biotech company
32:37 - that could really play into helping get
32:38 - your your first position but it may not
32:41 - be on the requisition form so don't
32:43 - underestimate the value you have
32:46 - try and make sure that that's in your
32:48 - resume as you know aside something of
32:50 - interest that makes you stand out but
32:51 - not distraction
32:53 - and
32:54 - don't hesitate to apply for positions
32:57 - the worst they're going to do is reject
32:58 - you
32:59 - as long as it's not taking a long time
33:00 - to invest and again if you have somebody
33:02 - inside that can help you tweak your
33:04 - resume to fit the company's lingo that
33:07 - can help you get in also
33:09 - um you know again that's not doing
33:11 - anything
33:12 - unethical or legitimate that is really
33:15 - trying to show that you're doing your
33:16 - research on the company and aligning
33:17 - your resume and your application to that
33:19 - company and that will help you get the
33:20 - position
33:21 - because there's so much you can learn
33:23 - when we were hiring for at castle run we
33:25 - were hiring to do
33:27 - um
33:28 - a particular project
33:30 - i was actually not i was engaged in the
33:32 - hiring but i wasn't one of the hiring
33:33 - managers per se and one of the
33:34 - interesting things i did that might help
33:36 - this person is they forced the person
33:38 - during the interview to do paired
33:40 - programming in this case it was paired
33:41 - operations because it was more devops
33:44 - and i asked the person doing the
33:45 - interview what exactly are you looking
33:46 - for because there's no way this
33:48 - patient's going to know
33:49 - the ins and outs of our environment
33:51 - until they're in it so how are you
33:53 - gauging whether or not they're really
33:54 - qualified
33:55 - and the person said i'm really looking
33:57 - for curiosity more than anything
34:00 - because the person if they're smart is
34:02 - going to learn what i need them to learn
34:03 - to get the job done and we're working as
34:05 - a team so they're going to always have
34:07 - somebody that can help them with the
34:09 - areas they don't know
34:11 - but the curiosity was a key thing if the
34:13 - person is open to being told i think you
34:16 - could do it better if you follow this
34:17 - path
34:19 - and asking questions then i know that's
34:21 - a long-term very valuable employee that
34:23 - i want to have on my team because that's
34:24 - going to be a person that's going to
34:26 - help me solve problems
34:28 - so that's that's what i'd say to that
34:30 - person is don't sell yourself short
34:32 - and play to your strengths and allow for
34:34 - the fact that there are personality
34:36 - traits that can actually win the job for
34:38 - you
34:40 - what about you lorenzo
34:42 - yeah um well
34:44 - first of all i agree with christo um
34:48 - other than that i would add a few things
34:50 - um
34:52 - maybe i'm a contrarian here but i don't
34:54 - believe that programming is for everyone
34:57 - as everything i mean some people like it
34:59 - some people won't like it and it's
35:01 - simple like that right
35:02 - um so if you don't like programming but
35:04 - you want to do it for
35:05 - you know
35:06 - money
35:08 - it might work right uh
35:10 - but in the long term i don't think
35:12 - you'll be happy simple like that
35:14 - now if you are
35:16 - if you like programming or at least you
35:18 - think you like at the moment
35:20 - um that's fine
35:22 - and here i'm quoting a a person that was
35:24 - uh
35:25 - following i listened to to some of his
35:27 - conferences
35:29 - and he like he told us look uh you need
35:31 - three things to
35:33 - well to enter the world of programming
35:35 - become a software developer um
35:38 - isolation
35:39 - references and um
35:42 - perseverance okay so why those three
35:45 - because um
35:47 - first of all perseverance this is not a
35:49 - short-term term game right if you want
35:51 - to become a programmer you can start
35:53 - with maybe a couple of hours per week
35:55 - very very
35:56 - slow paced but you know that it will
35:59 - take more time and that's fine
36:02 - but you'll get there at some point the
36:04 - more time you invest in that the the
36:06 - easier you will get it so
36:09 - you should play for the long term first
36:11 - and this is for severance
36:12 - reference this is what i mentioned
36:15 - before
36:16 - uh find a specific path that tell you
36:18 - look at the end of this you'll have the
36:20 - basic skills to be a front-end developer
36:23 - so for example the path that we have in
36:24 - codecademy
36:26 - just find that path or a mentor whatever
36:29 - you prefer but then just focus on that
36:33 - don't
36:34 - spread yourself too thin
36:36 - and the third thing the third thing that
36:38 - i was mentioning is isolation because um
36:40 - you know everyone else around you
36:42 - has
36:43 - uh its own life right they are doing
36:46 - whatever they are doing and they don't
36:48 - really care if you will become a
36:49 - developer or not right um
36:52 - actually for them you know they probably
36:55 - your friends would like to have you
36:56 - there on a saturday evening and they
36:58 - would like to share a drink with you and
37:00 - so on and so forth but at some point if
37:02 - you want to become a developer you have
37:04 - to say no to a few things and focus on
37:07 - your learning
37:08 - until you get a job probably
37:10 - um
37:12 - and this is maybe a hard truth but it is
37:15 - something you probably
37:18 - should should be aware of yeah
37:20 - i would put it there i feel like um uh
37:22 - to nuance your answer i feel like some
37:26 - people there's many ways to learn and
37:28 - everybody's a little different some
37:30 - people like to take notes some people
37:31 - like to watch videos some people prefer
37:33 - audio and others prefer to read the
37:35 - lessons
37:36 - um
37:37 - i feel like uh that you need to
37:40 - be aware of
37:42 - yourself a little bit and how you learn
37:44 - and if you feel like you're not smart
37:46 - enough because you're going through a
37:47 - lessons too slow you should try out to
37:50 - find lessons in a different format or in
37:51 - a different way and see maybe try to
37:53 - study at a different time of the day
37:54 - maybe
37:55 - maybe you're trying to learn to be a
37:56 - developer after your hours of work well
37:59 - if you already put eight or nine hours
38:00 - at your daily job
38:02 - they make you work in the day because
38:03 - that's when you're productive right so
38:05 - at night you're already spent and you go
38:07 - home and maybe maybe you need to take
38:10 - some time off use your vacation days to
38:12 - see if you if you study better uh
38:14 - sometimes it's a matter of the platform
38:15 - you're using to learn it's not adequate
38:17 - to the style of learning you have so
38:19 - there's a few variables to take into
38:21 - consideration and if you if you try a
38:24 - few things
38:25 - and you still feel like you struggle
38:27 - with motivation or you still struggle
38:29 - with learning programming
38:30 - you can also try to find peers online or
38:32 - projects or things to collaborate with
38:34 - and i would say once you've gone through
38:37 - a few of those if you're still
38:39 - struggling then maybe you start you have
38:41 - to start considering like laurence said
38:42 - you know is your motivation the right
38:44 - place is this really what you were
38:46 - looking for or maybe you thought this
38:47 - was what you're looking for based on you
38:49 - know like a movie you've watched like
38:50 - sometimes someone telling you how much
38:52 - money they make as a developer um so i
38:55 - would say uh you need to try a few
38:57 - things first
38:58 - before you give up like completely
39:00 - because uh you know everybody's a little
39:01 - different and it might just be that
39:03 - nobody explained it to you like um
39:05 - this happens a lot with uh i have
39:07 - friends i would say i'm really bad at
39:08 - math i said well you probably are not
39:10 - bad at math it's just that never nobody
39:12 - ever tried took the time to explain it
39:14 - to you in a different in the way that
39:15 - you understand it because basic math
39:17 - right like oh i can't add you know like
39:19 - you're doing shopping and 13 plus seven
39:21 - is is too much it's like nobody should
39:24 - struggle at that at that level of math
39:26 - so this must be that just the learning
39:28 - you took was just not effective for you
39:30 - so
39:31 - be aware of yourself and your
39:32 - capabilities sometimes it's just a
39:34 - matter of uh looking at it from
39:36 - different angle
39:37 - uh but you also have to be realistic
39:39 - that yeah not everybody's gonna be able
39:40 - to program that's just fact but maybe
39:43 - it's kind of fun for you if i can just
39:45 - expand a bit on this um
39:47 - another very important thing that i
39:49 - would add is that you shouldn't compare
39:50 - yourself with other people right i mean
39:54 - if you look at other people learning
39:56 - let's say exactly
39:58 - whatever you're learning exactly the
39:59 - same thing right maybe they are
40:01 - students or maybe they are unemployed
40:04 - they can dedicate eight hours per day
40:06 - and they will progress faster than you
40:07 - and maybe you have a job and and you
40:09 - have to work
40:10 - after your your job
40:12 - and you can only dedicate a few hours
40:14 - per day or even less right so there's no
40:16 - way you can progress as fast as they are
40:18 - progressing
40:19 - so
40:21 - as a rule of thumb
40:22 - you especially when you're learning
40:24 - something like this and you're doing it
40:26 - because you want it
40:27 - don't don't compare yourself with other
40:29 - people just compare yourself with what
40:31 - you did yesterday okay and if today you
40:34 - can just do a few small things that's
40:36 - perfect that's fine
40:38 - that's um i follow this guy that uh he
40:40 - has a very similar principle he says you
40:42 - know if you could uh
40:44 - every day you should be able to look
40:45 - back at your clone from yesterday and
40:47 - like are you better than that person
40:49 - like you know kind of like just as long
40:51 - as you are improving personally um
40:53 - obviously there's nuances to this right
40:55 - like uh if you're trying to for a job or
40:57 - something where there's 15 candidates
40:59 - and you're one of 15 yes you're gonna
41:01 - have to somehow
41:03 - be better than them but if you're just
41:05 - learning just the learning aspect of it
41:07 - i guess it's not healthy to say well
41:09 - somebody went through this lesson in an
41:10 - hour and it took me two and a half i
41:12 - must not be good at this well yeah yes
41:14 - yes no
41:15 - the bets if you put the time
41:18 - uh
41:19 - other questions let's see somebody here
41:20 - says i'm 15 loving coding but i'm doing
41:23 - python c plus
41:25 - what is next okay so they're doing
41:28 - python simples plus
41:29 - uh what is next i guess
41:32 - my question is what are you trying to do
41:36 - learning to code like
41:39 - where you're trying to go are you trying
41:40 - to a web developer a game developer a
41:42 - mobile app developer you're learning
41:43 - python c plus
41:45 - uh it's a little hard to know what will
41:47 - be next like what do you think that is
41:48 - next so if you're learning python super
41:49 - suppose at a surface level what's next
41:51 - like data structures or
41:54 - algorithms or
41:56 - what would be the next logical step
42:00 - i would hope if they're doing c plus
42:01 - plus they probably already had some data
42:03 - algorithms and structures um but you're
42:05 - right that would be a great place to to
42:07 - back go back to to make sure that you've
42:09 - got that under your belt before you move
42:10 - forward but it sounds like maybe the
42:12 - next step i'm assuming they're saying
42:14 - they're starting with the programming
42:15 - languages then the next step i would
42:17 - think would be moving on to projects
42:18 - maybe moving on to projects where you're
42:20 - working with somebody else
42:22 - because
42:23 - and even i have this tendency i tend to
42:24 - do things on my own because my time is
42:26 - so varied when i can actually work
42:28 - but in the reality is when you get into
42:30 - business you're going to be working with
42:31 - somebody else
42:33 - so
42:33 - if you can get somebody to pair with on
42:35 - a project i think that would be a great
42:37 - move for you and pick something really
42:39 - small if it's your first project
42:41 - make sure you you understand what it is
42:43 - that when are you going to be done like
42:45 - what's going to be your first really
42:46 - simple iteration on whatever you're
42:47 - developing if it's a game
42:49 - you know make it really simple that just
42:52 - barely gets done what you want to do so
42:53 - you can test it and test your
42:55 - assumptions and see what works and then
42:57 - move on
42:58 - one of the things that i've learned
43:01 - from working in kessel ryan from the
43:02 - past couple of years
43:04 - you want to experiment and test your
43:06 - assumptions
43:07 - and you want to do it in iterative
43:09 - smaller cycles
43:10 - a is more interesting so you can get
43:12 - stuff out to people you can if you're
43:13 - developing a game you can have your
43:14 - friends try and say hey i'm developing
43:16 - this really simple game i want you to
43:17 - give a look at it and see what you think
43:18 - what do you like what don't you like
43:20 - what could be better
43:21 - and the feedback you get from them is
43:23 - invaluable for figuring out what to do
43:25 - your next steps could be and knowing how
43:27 - to adapt and seeing how you have to
43:30 - adapt what you're doing based on
43:31 - feedback is a really critical skill in
43:33 - today's world so i do recommend working
43:36 - with somebody else and trying to get
43:37 - feedback from another group of people
43:39 - potentially
43:41 - on whatever you're doing i think that'd
43:42 - be a great next move for you
43:47 - yeah very good point um
43:50 - if anything i would add maybe
43:55 - well like the way i see it now is that
43:56 - you have a hammer and a saw right you
43:58 - can do a lot of things with that and
44:00 - that's great but you don't know what you
44:03 - want to do right do you want to build a
44:05 - house do you want to build a
44:07 - boat do you want to build up fence maybe
44:10 - you know like an and as uh federico um
44:13 - and crystal were saying like
44:16 - yeah you can go
44:17 - pretty much everywhere with those two
44:18 - languages those are i mean they are very
44:20 - good good that you started from there um
44:23 - but you can expand
44:24 - pretty much everywhere so
44:27 - try to build some project and and see
44:30 - what you like more you know like maybe
44:32 - you don't like game development at all
44:34 - maybe you want to
44:35 - go deeper into some data analysis and
44:38 - then after a while you discover that you
44:39 - don't like that one either um so yeah
44:41 - just try a few projects and it is a bit
44:44 - like
44:45 - crystal was saying try small things
44:47 - uh and then get feedback from you from
44:50 - yourself right do you like it or or you
44:52 - don't like it fine um and then try again
44:54 - something else right
44:56 - and i would say um one thing to remember
44:59 - when you're learning to code at the
45:00 - beginning is that
45:02 - at companies in a professional setting
45:04 - you will not be doing all the things
45:06 - that you're doing when you're coding on
45:07 - your own so for example you might have a
45:09 - team lead you might have a product you
45:11 - might have a manager you might have a
45:13 - product manager you might have directors
45:15 - and like you know vps and there's a lot
45:18 - of people planning the steps ahead for
45:21 - you so that all you have to do is focus
45:23 - on the building aspect of it and this is
45:25 - something that i see a lot with
45:26 - beginners with coding where they will
45:28 - say hey
45:29 - i learned the basics of html css and
45:32 - javascript
45:33 - but
45:34 - once it comes to building something for
45:36 - my own i blank i'm totally blank like i
45:39 - know the tools and i don't know what to
45:41 - do right like lorenzo was saying you
45:43 - have a hammer and some nails and some
45:44 - wood but like once it comes down to like
45:46 - doing something on your own that is not
45:47 - the ikea pamphlet you don't know what to
45:49 - do with it with the tools and um and
45:51 - that's totally normal you have to accept
45:53 - that these project management skills and
45:55 - this kind of planning uh that that's a
45:58 - that's a different skill set learning
46:00 - javascript doesn't teach you
46:02 - the how you can plan a project on a
46:04 - sprint so that you can get it done and
46:06 - erase through it and improve it over
46:08 - time that's just it's it's separate
46:10 - things it's totally separate so it's
46:11 - totally normal if you're learning
46:13 - programming languages that you don't
46:14 - know what to do with the languages it's
46:16 - going to take some time for you to
46:17 - figure that out and then once you get a
46:19 - job in a few years
46:21 - you're 15. so once you get a job in a
46:23 - few years i guess
46:25 - you will have people telling you what to
46:26 - work on because uh because this is you
46:29 - know that's just not your area of focus
46:32 - your focus is using the hammer nah not
46:35 - planning which bed to make
46:37 - uh
46:38 - let's see another question here
46:40 - someone with a non-computer science
46:42 - degree
46:42 - trying to stand out by using portfolio
46:45 - to showcase my skills do you recommend
46:48 - any projects to work towards all right
46:50 - so
46:51 - is there any kind of project or type of
46:54 - project that might showcase your skill
46:56 - better than other projects
47:01 - um okay so if i can start here i'd say
47:04 - um
47:06 - so broadly speaking there are a few
47:07 - projects that are trivial like
47:10 - um a to-do list which like everyone has
47:14 - right but
47:15 - it's a good way to start just because
47:18 - anyway you need to use a few things in
47:20 - the language
47:21 - um or in the framework that you are
47:23 - using that
47:25 - um will be helpful right so if you can
47:27 - do a to-do list that's already something
47:30 - now of course you want to do something
47:31 - more
47:32 - than that so definitely um get some data
47:35 - from the internet there are a few
47:37 - websites where you can
47:39 - fetch data and and use a bit of
47:43 - [Music]
47:45 - calls to maybe change that as well one
47:48 - of them is called json placeholder so
47:51 - if you go there basically you can
47:53 - download some
47:54 - fake data regarding i think it's some
47:57 - website like facebook say right so
47:59 - there's like users there's pos there's
48:03 - albums whatever so try to get data from
48:05 - there and display it in your website as
48:09 - as you as you think uh it would fit best
48:13 - so that shows me that you are able to
48:15 - well get data from the internet and
48:17 - display it correctly and it shows me
48:19 - that you are able or you should be able
48:21 - to handle some errors in case uh data is
48:24 - not coming and so on and so forth so
48:27 - rather than specific projects i'd say
48:29 - i'd like to see how you handle these
48:31 - things
48:32 - error handling data from the internet
48:34 - these kind of things yeah
48:36 - cool
48:38 - i guess the only thing i'd add is if
48:40 - you're looking if you know the industry
48:41 - you want to go in or the type of company
48:42 - you want to work for try and make sure
48:44 - that your portfolio aligns with that
48:46 - because that will draw more of their
48:48 - interest
48:49 - and probably then they'll be able to ask
48:51 - more intelligent questions about your
48:52 - work specifically and you'll be able to
48:54 - respond to it i think that will get the
48:56 - engagement so and you might be able if
48:58 - you can do that as you're applying for
48:59 - positions
49:01 - indicate which of your projects they
49:03 - that you'd recommend they look at for
49:04 - that position i think that would
49:05 - probably be useful also and save them
49:06 - some time anything you can do to save a
49:08 - recruiter time is going to be value
49:11 - yeah
49:12 - yeah that's uh i think one of the
49:13 - recruiters that i talked to here at code
49:15 - academy they said the same thing that
49:18 - um when looking at portfolio projects uh
49:20 - they know the text that we use at code
49:22 - academy right like the the the text type
49:24 - being all the software and all the
49:26 - frameworks and all the languages that we
49:27 - use at code academy
49:31 - when they see
49:32 - candidates that have experience in those
49:34 - things first
49:35 - it that it it's not a make or break
49:38 - situation but it does give you an edge
49:39 - over other competitors that might not
49:41 - have knowledge in that kind of code base
49:43 - or that kind of frameworks that are used
49:45 - here because yeah if you know you know
49:48 - if you know django instead of another
49:50 - framework like react
49:51 - it is translatable and it is something
49:53 - that you can easily move from one to the
49:55 - other but still takes more time than
49:57 - somebody that's already a native
49:58 - developer and react right so it comes
50:01 - down to these situations where out of
50:03 - three really good candidates who has a
50:05 - slight edge because they can only hire
50:07 - one out of three so i think that's
50:09 - really good advice um to work on work on
50:12 - projects that will be meaningful to the
50:14 - company that you're applying for and
50:16 - like lorenzo said uh
50:18 - try not to make them trivial because you
50:20 - won't be you won't be hired for the
50:22 - project you did like oh we like you to
50:24 - implement this in our in our code base
50:26 - they probably gonna ask you questions
50:27 - like why did you do it this way what
50:29 - motivated you to make this choice what
50:31 - was the trade-off that you did when you
50:33 - chose node.js instead of this other
50:34 - thing why express right like they will
50:37 - ask you these questions and they're more
50:39 - interested in knowing your mindset and
50:40 - how you you work through problems than
50:43 - the problem itself because everything
50:45 - all everything else will come with
50:46 - experience and your mentors and working
50:48 - with people that have more years of
50:49 - experience than you
50:51 - so
50:52 - build projects that are not just copy
50:53 - and paste be mindful of the project
50:55 - you're building and make sure that you
50:56 - can explain why you you did it the way
50:59 - you did it
51:00 - that's probably a big one
51:03 - um
51:05 - how can we know okay how can we know
51:06 - that we're ready for a job or an
51:08 - internship
51:09 - how would you what is this is a really
51:11 - big question it comes up all the time in
51:13 - the community at code academy with all
51:14 - the beginners is i don't feel ready i've
51:17 - built three projects this is that enough
51:19 - should i do five should have spent a
51:20 - month just been three weeks
51:23 - there's this impostor syndrome of saying
51:25 - i've taught myself this so i'm not legit
51:27 - i'm not a phd in computer science so i
51:30 - probably don't know what i'm talking
51:31 - about um
51:33 - and it's really hard to break through
51:34 - that to say i feel comfortable i feel
51:36 - confident in my skills to to talk to
51:39 - recruiters about this or to apply for
51:41 - jobs so do you have any tips on how to
51:44 - get over that
51:45 - wall
51:48 - i think the first thing is if you have
51:49 - any friends that are software developers
51:50 - or in the area you're looking to get
51:51 - into
51:52 - ask them
51:53 - um because if they're your friends
51:57 - well backing up when we think about
51:59 - ourselves we tend to be more critical
52:00 - about ourselves
52:02 - because we know our faults we know our
52:03 - strength and maybe we know our strengths
52:05 - um but if you ask your friend
52:07 - you know do you think i'm ready for a
52:09 - position like this or a couple of
52:10 - friends is probably even better if you
52:12 - ask them um they may come back and say i
52:15 - think you're almost ready or yes i think
52:17 - you're ready or you're overqualified for
52:19 - it even right because your friend might
52:20 - know if they're looking at your
52:21 - portfolio see what you've done
52:23 - and they would have the context of
52:25 - understanding that position
52:27 - um then they could advise you on what
52:29 - you might still need to do or if you're
52:30 - ready to apply for it
52:32 - and they might bolster your your
52:34 - confidence also because the first job is
52:36 - always the hardest one to get
52:41 - yeah i'd say the first job is definitely
52:43 - the hardest one to get
52:46 - once you have the first one it's like
52:47 - okay oh this guy is actually a developer
52:49 - yeah
52:51 - totally like that
52:52 - [Music]
52:53 - regarding your question
52:56 - that's a tough one i
52:58 - i was probably i was in your shoes 100
53:02 - um
53:03 - what i could say is
53:06 - try to um
53:08 - [Music]
53:09 - well try to apply earlier than later
53:12 - earlier is better than later i would say
53:14 - that's that's something now how to
53:16 - define earlier um
53:18 - it's a tough nut
53:20 - i think yeah ask to some developers
53:24 - friends um
53:26 - but in the end maybe um
53:28 - get a list of companies that are
53:30 - interesting to you and then a list of
53:33 - like b companies where you are not very
53:35 - interested
53:36 - um
53:37 - and apply to the companies in the in
53:40 - your second list right so even if you
53:43 - fail
53:44 - uh
53:45 - you are like okay you know i tried and
53:47 - maybe they gave you some feedback as
53:49 - well
53:49 - and
53:50 - and you know what what they want you
53:52 - know how far you are from being startled
53:55 - already
53:56 - um
53:57 - yeah i would say i would say that you
53:59 - have to try you have to try some some
54:00 - interview
54:03 - um i think my advice would be
54:06 - the way i looked at it was okay who
54:08 - feels like they're ready to apply for
54:10 - jobs uh when they're learning to be
54:12 - developers
54:13 - and my first answer that came to mind
54:15 - was boot camp graduates you go through a
54:18 - boot camp three months 12 weeks
54:19 - something like that and you know at the
54:21 - end of the boot camp they get they are
54:23 - all told you're ready to apply for jobs
54:26 - so if you use that as a guiding
54:28 - principle of these people went from zero
54:30 - to developers in 12 weeks
54:32 - what did they learn to the point where
54:34 - the people that run these bootcamps feel
54:36 - confident that they can apply and if
54:37 - you're doing a full stacked uh kind of
54:39 - bootcamp you can look at the
54:41 - technologies you can you know find
54:42 - friends make friends online in
54:43 - communities online like the cod academy
54:45 - community or in the stack overflow any
54:47 - any other communities that too
54:49 - find people that have gone through boot
54:50 - camps and asked them what the syllabus
54:52 - was okay we learned html css javascript
54:55 - react node.js uh express.js bootstrap
54:59 - and we built like a back and front then
55:01 - we did a portfolio and then i got told
55:03 - to start sending resumes out if that's
55:05 - what they got told then that's the line
55:08 - that's what you that's the line you need
55:09 - to cross like whatever you learn in a
55:11 - bootcamp that is expensive or online on
55:12 - coursework that you found online learn
55:14 - those things and start applying because
55:17 - if they can do it you can do it too
55:18 - there's no difference between them and
55:19 - you if that's if that's what uh you know
55:21 - if bootcamps feels like that's the
55:23 - qualifications you need
55:24 - then don't stop doubting yourself that's
55:27 - it that's that's where you have to be
55:29 - don't worry about it
55:31 - like bootcamp graduates usually build
55:32 - like one big project at the end like a
55:34 - capstone project like then yeah how many
55:36 - projects you need one big one people get
55:39 - jobs with one big one like what else can
55:42 - i say yeah it's um
55:44 - that seems to be the the equation here
55:46 - the algorithm
55:47 - the winning strategy
55:49 - [Music]
55:53 - i'm doing the full stack course i'm
55:55 - going to get i mean
55:59 - okay yeah so i guess um
56:02 - okay so we got last two questions it's
56:04 - 11 59. okay so last two questions we'll
56:06 - go through them
56:08 - quickly
56:09 - number one is they're doing the full
56:10 - stack course on card academy will this
56:12 - prepare me for web dev jobs in the
56:14 - industry is it more as a supplement than
56:16 - primary course so either one of you that
56:19 - work with developers
56:21 - if you are familiar with what the full
56:23 - stack coursework is a code academy what
56:25 - it teaches more or less would you say
56:28 - that that is something that is preparing
56:29 - people to to be
56:31 - developers or do you see that more has a
56:34 - secondary source of knowledge that they
56:35 - should be looking for someplace else
56:37 - to learn to code i think that's kind of
56:39 - the question is is the full stack path
56:42 - uh you know is it deep enough yeah is it
56:46 - enough
56:48 - what do you think based on your
56:49 - experiences
56:52 - i'd say it is um
56:55 - so i
56:56 - i'm also in the full stack path by the
56:58 - way i didn't finish it yet but i'm
57:01 - working so that tells you something um
57:05 - i'm this is a personal preference i like
57:08 - to explore different resources as well
57:10 - so um when something was not clear from
57:13 - the from the full stack uh path that i
57:16 - was following in code academy i was
57:18 - checking the same information elsewhere
57:19 - that's mda and there's like a bunch of
57:21 - other resources online so definitely
57:24 - uh do as you wish
57:26 - it is well done though yeah
57:29 - yeah i have a degree i think the one
57:31 - thing if you if you really
57:32 - if you want to bolster it i'd pick
57:34 - probably one area in the full spec
57:35 - course and go deeper into that make sure
57:37 - you've got that so you have one thing
57:38 - you could say and within the full stack
57:40 - this is really what i what i like to
57:42 - focus on so that you've got one strength
57:44 - area that you can talk to because like
57:45 - what lorenzo was saying earlier i know a
57:47 - couple of people that officially have
57:48 - the titles of full stack developers and
57:50 - they both laugh and say there's no such
57:52 - thing as a full stack developer
57:55 - so no especially the funny thing is that
57:57 - developers working they are the first
57:59 - ones to say that like they think they're
58:01 - full stack developers they get a first
58:02 - job and like you can ask them like a
58:04 - week later and they go like no i'm not a
58:05 - full study i'm a front-end developer and
58:08 - they themselves will like retract
58:10 - attractive time
58:12 - but yeah i think the way that where that
58:14 - also plays into it this may play into
58:15 - the person's response also is that if
58:17 - you get into an agile team that's meant
58:19 - to be cross-functional with a lot of
58:20 - different capabilities and skills that
58:22 - whole team together is probably full
58:24 - stack developers right because they've
58:26 - got the knowledge all together and so
58:27 - you just have to be able to provide a
58:29 - slice of that knowledge to that team to
58:30 - be valuable
58:32 - okay
58:33 - and last question let's see
58:37 - [Music]
58:39 - somebody asked what are your opinions on
58:41 - internships are they worth the sacrifice
58:44 - of time and financial opportunity cost
58:46 - so i guess some internships are not paid
58:49 - some internships are you know they take
58:51 - you for three months or something like
58:52 - that and it's just experience but they
58:55 - don't pay you and it's just
58:56 - time-consuming obviously because you
58:57 - could have done something else with that
58:58 - time uh what are your opinions on on
59:01 - these kind of internships and
59:03 - is it a good way to get a job it's not
59:06 - should you do it should you just focus
59:08 - on getting a real like a full-time job
59:11 - i think internships can be can be very
59:13 - good but they should always be paid if
59:15 - the company's not going to pay you for
59:16 - an internship then i think that's
59:18 - already showing how they're going to
59:19 - value their employees and i don't think
59:21 - that's probably a company you're going
59:22 - to want to work for
59:24 - and i would expect that they probably
59:25 - will exploit you and it won't be a very
59:27 - good situation that's just from what
59:30 - i've heard from the industry i wouldn't
59:31 - recommend taking a non-paid internship
59:34 - you can get some real value from
59:35 - internships it's a great way for you to
59:37 - get your foot in the door in a company
59:39 - um see what they're doing
59:41 - they'll help you and bring you up to
59:42 - speed in their industry and their area
59:44 - of
59:44 - expertise and usually often that will
59:47 - lead to a job right after that so you
59:48 - may do your internship i guess i don't
59:50 - know if you're in college in your junior
59:51 - year or something like that after your
59:53 - senior year
59:54 - if things went well during your
59:55 - internship you will likely have a job
59:58 - offer from that company if they like to
59:59 - so that that makes the process much
60:01 - easier so i do recommend them in that
60:03 - aspect alright so
60:05 - yeah i can check on crystal totally um
60:08 - it's a put in the door and
60:11 - well in my case i took a pay cut right
60:13 - going from a full-time position to
60:17 - an internship i went through an
60:18 - internship um that was definitely a pay
60:20 - cut
60:21 - did i learn something yes
60:24 - uh more important to me it was um well i
60:28 - could write on my cv or resume uh i am a
60:31 - developer at this company right um and
60:34 - that says something to the market to the
60:36 - industry right you are a developer at
60:38 - that point you are working as a
60:40 - developer and someone is or maybe is not
60:42 - paying you but you are working as a
60:44 - software developer in a professional
60:46 - environment and that is kind of key in
60:48 - my opinion
60:50 - okay i think there's this uh these two
60:54 - main things with internships that you
60:56 - might want to think about because
60:57 - remember that when you're in when you're
60:59 - interviewing for a position you can
61:01 - interview them too you need to make sure
61:02 - that that it goes both ways it's not
61:04 - just you begging for a job you also have
61:06 - to make sure it's a good fit for you and
61:08 - for your goals i would say two things
61:09 - about the internships uh number one is
61:12 - when you are going through the process
61:15 - ask them if these internships are
61:17 - structured in a way that there's a
61:18 - chance for you to become a full-time
61:20 - employee of that company some companies
61:22 - look for internships and they have a
61:23 - very structure like internships and you
61:25 - go away and some other companies they do
61:27 - tell you if the internship goes well
61:30 - there's a there's a good chance that you
61:31 - will get a full-time offer at the end of
61:33 - your internship so figure out if the
61:35 - company that you're trying to intern for
61:37 - has this kind of a work opportunity and
61:39 - number two there's a difference between
61:41 - internships when you are a
61:43 - working professional and when you are in
61:45 - school if you are doing a let's say a
61:47 - four-year university degree and you are
61:49 - in the summer between your second and
61:51 - third year any internship is gonna be
61:53 - better than just going home to to enjoy
61:55 - summer like if you go home and all
61:57 - you're gonna do is just play video games
61:58 - and go and go with your friends it would
62:00 - have been a better use of your time to
62:02 - go that july and august somewhere to a
62:04 - company and i had an internship that
62:06 - would have been to uh to to just do
62:08 - nothing so that's a different setting if
62:10 - you're already a working professional
62:11 - and you're going to take a pay cut or
62:12 - you have to like quit your job to be
62:14 - this intelligent that's a big asking to
62:16 - do but it's totally different you're a
62:18 - student you're a student yeah
62:19 - internships are great
62:20 - that you might get a job afterwards
62:22 - they'd say hey we love you when you
62:23 - graduate let us know
62:25 - right
62:26 - uh okay well we are over time
62:29 - so we are going to
62:32 - call it a day we've been here for an
62:34 - hour guys can you believe that we'll be
62:35 - here for an hour
62:38 - it was a breeze it was a lot of fun
62:42 - it was nice talking to you all
62:44 - nice questions
62:46 - yeah all right anybody anybody on the
62:48 - channel uh you're a few in the could
62:50 - academy discord you know hit me up
62:52 - you'll find me there you can if you have
62:53 - any additional questions you want to ask
62:55 - um whether it's related to working for
62:58 - the government or whatnot feel free to
62:59 - hit me up
63:02 - all right well thank you both of you and
63:05 - i'll cut well lawrence or any final
63:07 - words
63:09 - no i was just saying same for me like
63:11 - feel free to get in touch on on discord
63:12 - that's quite a good channel i'm not
63:14 - super responsive lately because i need
63:16 - to learn a bunch of things with my new
63:19 - job so um yeah
63:21 - excuse me
63:22 - excuse me for that but yeah i'll try to
63:26 - try to answer yeah
63:27 - all right
63:28 - awesome well thank you everybody and
63:30 - we'll catch you on the next live stream
63:32 - we're always doing live streams here on
63:33 - the youtube channel on code academy so
63:35 - just keep an eye out subscribe all that
63:36 - good stuff
63:37 - and join our community and find the
63:39 - chapters i mean you both have a chapter
63:41 - right the helsinki chapter and also the
63:43 - scrum clock chapter so keep an eye out
63:45 - for the chapter events because they are
63:47 - awesome and they are hosted like every
63:49 - month so
63:51 - also go to our community.com dot go to
63:53 - academy.com and join our chapter page
63:56 - see you everybody bye bye
63:59 - bye
64:04 - yeah that's it

Cleaned transcript:

uh going live all right yeah we're live hello everybody and welcome to another live streaming event with some of our chapters today we're hosting two chapter leaders so do you mind introducing yourself guys yep so from my side i'm lorenzo i'm based in helsinki finland and i'm currently working as a software developer in a bank called nordia my name is christo mead and i'm a scrum master a contractor for raytheon technologies we're working for the air force's kessel run nice all right so seems like both of you know your stuff and that's cool hopefully we get to this is an ama so anyone feel free to ask any questions in the chat i have a few questions to get us started with um my first question to you is how do you end up in the role that you're in today uh was that something that you planned for or did you discover the role as you were doing other things okay so i guess i can start um so from my side i was working as a business analyst in another company and then at some point i decided to change job to change career um i was not looking for something specifically like what i'm doing now it was not very well defined in the beginning so um while i was transitioning to my to my current career i was exploring a bit of data science and then i moved towards web development and then when i started to go a bit deeper into web development i thought yeah this could be actually interesting and nice i really like the idea that you can create something from scratch um yeah so that's probably that's a that's the moment when i decided to yeah go deeper into it and now yes i would say now i'm in the role where i wanted to be yeah nice so you were a business analyst and kind of did a bit of a career switch uh was that was that influenced by uh your coworkers of people you knew that were on the software side and you saw their work and said you know i would like to be doing that instead um not really not really because in my previous company i didn't really i was not in touch with developers so i was my position was something like a consultant so i was traveling to other you know um to other places talking to customers and it was really really like uh customer facing uh rather than say developer facing a role um so that was nice but yeah i didn't i didn't have anything to do with developers but on the artist on the other side i was really frustrated that i couldn't create something on my own you know like if you have an idea and you want to try something you think okay this shouldn't be that difficult um so i think that was the moment where i started to think about it about moving towards towards development okay what about you crystal i probably started off farther afield because i started off i was a translator so i have a degree a master's in russian language and culture and i was living in russia at the time and doing translation work and then an opportunity came for me to go back to school and i did that to get into software engineering so i came out with a software engineering degree um but even then switching to getting more into tech was difficult because uh people would tend to use me for what the gaps that they needed to fill um since i had a background in other areas so they would use my english language background or they then what happened is because i'm a person that asked a lot of questions i got into quality assurance um because i was always prodding why are we doing it this way what could be better so that got me into tech but then to get where i am now where i'm much more back and closer to handson as a scrum master so i engage with the team that's actually doing development work and i'm helping coordinate that but the way i got there was not so much my plan which goes back to original question the role i'm in now i got there because of being open to take on new tasks and stretch myself and get out of my comfort zone because i didn't picture myself being a scrum master but because i'm very good at closing the loop and following up on things with people to make sure things get done and checking the quality of items that made me a good fit for this particular role so that's how i ended up where i am okay great well we have uh some questions for rain let's see uh chelsea has a question what was the most significant barrier you faced when transitioning to coding software engineer like i guess tech in general what was one of the biggest barriers that you find yourself having to deal with you can start okay i'll start all right yeah go ahead so my one of my biggest was i made the mistake in my resume that i showed the languages i spoke where i studied and that ended up being a distraction and and that's part of what in them ended up funneling me away from development and more into say the management side of things or the administrative side of things so that was one of the things that ended up being a barrier with and then when i would remove that from my resume then the responses i got and the interview questions would be more focused on specifically the task that i was looking for or the job i was looking for okay so basically your resume was holding you back a little bit based on the keywords and the language you were using like how you were portraying your skills i guess they thought this is this is a person for this bucket instead of that bucket i guess okay actually part of it was first literally i meant languages as in i i showed that i spoke russian a little bit of german a little bit of arabic and that just threw people off and would be a big distraction okay wow what about you lorenzo uh well that's a very good point actually i have to say that i agree with crystal um um yeah i've experienced something similar meaning that people could see my resume and then they were like okay but you know uh you've worked as a business analyst for a few years um so you could do something like that right and i was like no no no no i'm you know i want to change i'm doing something to change career and i want to be a web developer so at some point you have to be willing to turn down some offers for example if that's not what you want to do right so that was definitely 100 something like that and another point in my case was focusing on on a specific language or rather a specific direction meaning that you know as i said i started with something like data analysis um so i was using python there and i was going towards data data science basically that analysis um and then at some point i switched to web development so then you start again with html css javascript and of course you know um at the beginning you could you know if you go on the internet you'll find well you know you could program with python and you can create website with pythons and you can create you know the backend with but yes that's true um and you can do that with c c sharp there's a lot of stuff out there right um and i think it's very very important to find a way to follow a specific direction direction and don't get distracted so in my case this is one reason why i joined codecademy actually because at some point say you want to be a frontend developer right you go into the frontend developer parts and that's it you don't get distracted by python or by csharp or whatever else so that's extremely helpful in the beginning just focus on what you have there do that properly and then later on you'll have the skills to to change so it seems like you were a little dispersed in the topics you were covering and it was a little hard for you to market yourself as a i guess as your first job as a developer career switching it was a little bit difficult to to say this is the the skills i'm really kind of uh you know how you might be a mile wide an inch deep it's a it's a saying that they have of you know what are you focused on versus how many things you think you know right uh sounds like that you were dealing with that a little bit uh oh and by the way for the people joining the event that are not in the u.s uh a clarification that resumes uh it's sometimes referred to as cv or curriculum vitae in other parts of the world so when we say resume we're also talking about cvs this kind of interchangeably here in the us um i mean here in the us we use resume more often to talk about the skills and like the piece of paper that shows what you know um let's see another question you both selftaught or cs degree how long did it how long it took you to land a job okay so you both said that you were working on places and then you kind of transitioned to the roles you are you have now how long did it take you to for that transition to happen so um i can start um to some extent i have to say i was really really lucky just because um when i decided to to leave my previous job i i was basically i was unemployed right and then i was lucky enough to follow some unemployment courses and stuff like that that pretty much every country offers and in one of these let's say courses or like meetings um i met this guy who was supposed to be sort of a tutor for me someone who could kind of help me um and he put me in touch with another guy and eventually that guy was an entrepreneur and he hired me for an internship even though my skills at the time were extremely basics right extremely basic and by the way he hired me as a data analyst something like that so it was at the beginning it was more on the data side as i said but yeah i would say so how long do you say like six months a year between between learning like so your business is like you know i want to be a developer so between the learning of the skills and then finding someone that will give you a shot of using those skills in a professional setting how long did it take you so i'd say probably four to six months so a bit a bit of a disclaimer here while i was still working as a business analyst i started to study python and data science and i got a it was not an online degree but i was following one course on coursera and the course was something like data science with ibm something like that so by the time four to six months might be a little fast for some people was it how long were you like how many hours do you think you were put in every every week like were you every night after work dedicating yourself to this or how much of a focus was this for you i would say um maybe not every night i would like i would say that uh but i i would i was catching up during the weekend yeah you know like if you need to work then then the thing is that i sometimes i could use what i was learning into my daily tasks at work you know so instead of instead of doing some analysis with excel sheets i could use some python so that's a good thing if you can do it because you start to use it in a sort of professional way that that helps yeah okay what about your cursor how long did it take you more or less from the time you decided i mean i don't know if you actually decided you kind of like just got moved into the world slowly and discovered it so was there a point where you said well i'm gonna go in this direction maybe i should go take some classes maybe you should do some something to add in my resume like did it take you some time to train and then sometime to find someone that would give you that role um yeah definitely because as i said i i tend to get not this makes it sound like it was a bad thing but it was a good thing for me careerwise i tended to end up in manager roles in different capacities so for instance i was in quality assurance for a good long time which in my area you may be more familiar with the term as mission assurance because i wasn't a tester i was responsible for preventing defects and looking at the processes and the overall program execution from that aspect but getting back into tech or getting the ability to do it that required that took time so um and what had to happen was i had to switch from one company to another and even then it took a good eight months before i started getting more technical getting more technical opportunities um and again it came back to doing the job well but showing that i could do more and taking classes at the same time so i always whenever i was looking to do a transition to bolster my confidence i would take classes um and since they were talking technology there's always new stuff to learn and always things you need to do to keep up to date so that was never really the issue but yeah it probably took me i mean the shortened version would be say it would take it took me about a year once i set my goal to get to something more technical um this last one i was not particularly acting no that's not true the last one i was definitely looking to move more technical and once i set my mind to it it took me about six months and that actually once i got the transitions when i signed up for code academy because i realized for in my current role i wanted to do more uh with python specifically in data and that's what led me to academy and why i'm here okay to your point mine is more of a bumpy path than i think than lorenzo's because i would go into management and come back out a little bit but every time i wanted to get back more technical i would go back towards learning and make sure one thing we haven't touched on network so i was never burning my bridges always trying to show people that i could do more than they maybe expected from me and i would step up and do something that was maybe a little bit out of my comfort zone and always looking for a sponsor um you know somebody that could put in a good word for me somewhere because that's really how i found that i would base make my best moves in my career hmm so those last six months was that um when you were taking courses do you think that what were you doing like the weekends a few hours here and there did you have a set schedule did you say okay i'm going to make sure to put five hours a week whatever that is like do you put it in your in your calendar like 7 to 8 p.m that's coding time like that's that's project time that's python time i wish i could do that um what i try to do is i try and set myself a goal of five hours a week um and stick to it okay it tends to be i tend to make up more of it i think like lorenzo said on the weekends and i'll usually end up getting a half hour an hour a couple days a week during the week okay you know when i was doing the uh i was doing the full stack path and got a code academy what i did is i went down the syllabus and i i wrote down the 43 46 45 chapters that he has and i basically said okay how fast can i get i did like the first two or three chapters and i timed myself like how many hours it took me to go through chapter and i tried to extrapolate that and say okay if my average time is you know an hour and a half per chapter then that's this is gonna probably take like 80 hours of work i'm going to assume that the later chapters are harder so i'm going to add a 20 margin on that so 100 hours of work like i and i tried to like map it out in a way that i liked how i could just say okay if i keep up this pace by december before christmas i'm gonna be done and that kind of motivated me because i could see that my daily work was you know driving me to that it was kind of like mini milestones in a way so a lot of different people get motivated different ways to get through coursework let's go back to the questions i have a question how to become a full stack engineer well sir uh there has a lot of answers to that uh do you both of you do you have any idea any answers for how would you go about becoming a full stack developer uh you want to go first i i'm not a fullstack developer so that that's a question for me uh yeah so um i think uh okay so um first of all like a full stack the developer is sort of a unicorn in my opinion you know like nowadays everyone's a full stack developer but no one is really like only only a few people are full stack developer okay you should i mean in my opinion now that i'm working in a professional environment and i see what i know and what i should know to be like comfortable let's say i think you would need at least maybe three years in the front end and then three years in the back end and then after six years maybe you can be a full stack developer okay that's the frank answer um having said that my advice would be to start from either front end or back end i don't really have a preference um do as you as you wish start either way find a job as a front end or backend developer and then while you're working keep studying there's i mean full disclosure here i'm i keep studying every day almost every day uh or definitely definitely every week um other than so other than my job i go back to study material and i try to understand more of whatever i want to learn and definitely more about frontend and backend but yeah study well you will never stop studying first of all um but yeah yeah yeah um well i'll step in i'll step in here since you said you're not from the developer of full stack developer um i've talked to developers here code academy and in their experience and obviously this changes from company to company and it changes from person to person but most boot camps and places that teach you how to be a developer they have a full stack they make you full stack aware now a full stack developer it's a difference of you know what the back end is and what the technologies generally are but usually at a company for example here at code academy you will join one of the teams engineering teams and they have focus areas so maybe you are in the engineering team working on the platform side and then you're going to be more back end heavy while maybe you join the team that is working with marketing on new pages and new things and you're more front than heavy and that sort of gets you moving in one direction and gives you more experience in front then or back end but here code academy true full stack it's only people that have been here for many many years and they become this kind of like staff engineers where there are these people that just know they just like everybody knows that they know and they know how everything connects and how everything works they have it all in their minds but that's a very unique role and usually at least here uh it's a lot more common for you to just you put in your resume a full stack but you will end up focusing in one area or another depending on the team that you're in and the projects i really like i really like how you phrased it like you become a full stack aware you know like it's not it's not that you know ever especially when you go out of a boot camp or maybe some courses and these kind of things you are aware of things it's not that you are a professional developer you know like i mean i can totally put up a website and use some google services or aws services to have a back end there but this doesn't make me a full stack developer okay i kind of know how to work my way around but yeah i think this is very common that a lot of people that get into tech especially the first job in tech um there is a before and an after like once you get in that professional setting and you start talking to the developers and you start realizing what is truly possible or how com the complexity level of projects i think there's like a like a realization of i thought i knew but i don't a lot of people like they feel like they know and then three months later like they six months after they got their first job you asked them and they changed their mind and say no actually i don't know anything i thought i knew um i have a lot to learn right yeah as a before and after okay more questions let's see do you have a coding portfolio to share with potential employers to show your skill set or completed projects okay yo so this applies to both of you did you have to build up some sort of portfolio to get that job or um i mean for example crystal in your space in your your case you were in management and you moved through management roles how does that how do you showcase the impact you had in those roles and how that was worthwhile in the next role like how that you know translated into natural that's a great question part of it comes back to sort of the resume aspect of it one of the things that i learned in my trip because for for me where i am because of the different programs we work on for instance i can't have the government contractor i can't take my code from one place or another and show that so it has to be in my resume so it's going to be describing with the work idea the impact i had talking about so if i were managing how many people are i was managing the value dollar value of the program or the impact of the program when we were done for me also what comes to it is that the people on the program i was working on when i say program that's a project that has a many year phase to it if you will in government contracting but it's not a computer program it's a project that has multiple years to it that it evolves over time that's a program and what's most important there for your next position is the people you work with that can then vouch and say this is what they did this is what they're good for yes i recommend this person because he really helped with this so that's how you you build your reputation and you use that to move forward okay so okay so both project management i mean not paramount project showcasing but you you also put a lot of emphasis on networking and people vouching for you i guess okay i know that that's a big one especially when you're trying to get into certain companies they usually have referral programs and it's not something that people utilize often enough i feel like a lot of people don't really they feel shy or they feel like it's not appropriate but it is totally appropriate like every company or most companies have some sort of referral system where people that work at that place can highlight potential uh candidates right for roles so i feel like that's probably a big plus and if i could talk into that specifically okay i won't name any companies but um often what i've seen is that the recruitment process and the system may not be the best system for recruiting particularly there might be some gaps in it for so if you have a referral if you have somebody on the inside that is helping you get the position as not in the sense of getting the job but they can monitor how your resume is being going through the system and help resolve any glitches in that area or speak up for you so it's a matter of also sort of overcoming a system that might not be ideal so having the person on the inside that you can use is really valuable and it's not saying that your skills are less it's just making sure that your skills are seen for what they are at a minimum yeah it's uh one of those cases where you apply for a job and five minutes later you could reject it and you know it wasn't a person it was the system automatically rejected it was the server right you just didn't have the right keywords in your resume i guess what about you lorenzo how do you did you have to build up any portfolio you said you found an entrepreneur that hired you for some basic skills uh were you at the same time building a portfolio for for your skills yeah so at the time as i said um i started to work on python and data analysis while i was still working in my previous company and basically before leaving the company so let's say we're speaking about may of that year by that time i had let's say some portfolio regarding some data analysis project that i that i that i did during the certification during the kind of course that i was following online so i was definitely able to show that and i was able to kind of explain why i did that and and what i was trying to get out of that and that surely built uh some some confidence in the other person other than that i'd say that after that while i was working for him um in my spare time i was also like coding and of course building some small projects on the side and i have to say that when recruiters called me a couple of times they mentioned yeah i've seen stuff on your github profile so it is someone is looking at that let's put it that way i'm not saying everyone is doing that but we actually had um i've been talking to recruiters in live streams here at the code academy youtube channel there's like six episodes of those and every recruiter will always say the same thing which is make sure you have a linkedin page and make sure you have a github repo if you are going to be uh getting a developer job because we look at those all the time they said we don't look at each one like we don't always look at them if you don't get through the initial screening of your resume like a lot of recruiters have to read through hundreds of resumes and but if they see something interesting in your resume their next step is most likely going to be finding more information about you as a candidate either on your linkedin or in any other online page that you might have your personal page you might have provided or your github repo um so i know that that's that tends to be the case that the recruiter is always looking at gotta make sure you have a good one set up um we actually have a moderator in discord that he didn't build any portfolio projects what he was doing is well not as specifically but he was uh helping a lot of open source projects online and he got to the point where people that he was collaborating with ask him where do you work and he said nowhere i'm just like selfteaching myself code and and people are like you you don't you don't work anywhere here's a link to my website here's the link to my jobs website here's a link to my company and they started inviting him to to apply for jobs he said look look you definitely have the skills you're collaborating these open source projects with us on github and you definitely you know like we know we would like if i could i will hire you so sometimes uh the power network i guess networking so it all comes together let's see more questions if you guys had to have a different job which one would it be if you could just pack it up and let's let's imagine that somebody drops 100 million in your bank you don't have to worry about money and you say well now i can do anything i would like to do what would you do an orchard beekeeper surfer i don't know what would you go for um to be honest i don't think i would change that much now because so first of all um a step back i was studying a react as as you can study on code academy and because it's very very popular and then they hired me to work as a frontend developer with angular so i kind of started from scratch angular seems super hard to me um so i'm learning a lot of a lot of things but but in the end i like it um if i would get say a hundred million dollars i would just probably focus on some bad projects you know like stuff that i would like to have in the world and that's it right uh nowadays i have to spend most of my time working which is also about learning of course but i cannot work that much on my personal projects but yeah i think i wouldn't change so is that uh if i'm understanding correctly it sounds a bit like you would still be a developer maybe an entrepreneur developer like you would start a company or do some personal projects on your own like if you could remove the risk of needing to pay your bills and your random things you might have like start working on your own personal price so that would make you an entrepreneur i guess i think so yeah i think so okay entrepreneur nice you know maybe yeah on your mobile apps yeah i mean right i mean look if you get a bunch of money um you can go on a beach and have some fun for a couple of weeks and months maybe and then after all i think it becomes you know money like they make you happier for a while but then you kind of revert back to your um to your status to your kind of sort of happiness status just be one of those influencers posting like little coding tics uh tick tocks you know five programming languages to learn like things like that just one of those exactly yeah three three portfolio projects you need like you know those people posted on instagram and now yeah you could be from the beach you know from the hotel uh what about you crystal uh if you could uh drop everything and do something else what would you do a ranch maybe cattle horses oh no no no no i i'm a city person pretty much so you'd see me in a big city somewhere um but actually what i know what i would do right now because it's been my my recent interest i would probably work primarily on developing my mobile app skills that's a but i'd be looking specifically at decentralized social apps um so blockchain has become something i've been interested in now and now there's now the dso i don't know if any of you are following that so it used to be called big cloud they rebranded at the beginning of september i think to do so decentralized social media okay and they're creating the based on the blockchain there's now an opportunity and there's a lot of projects that are doing i think there are 100 projects that are starting up to develop on this blockchain decentralized social media so it's really interesting and it's very open and since it's the beginning of this deck if i got that hundred million dollars now i could drop everything and start doing like startups on apps that i think would be great and do the usercentric feedback approach to make sure that it would actually work you know that way so it sounds like both of you are going to the entrepreneur's side both of you would just like drop everything and start your own companies i guess and run your own projects i guess uh in decentralized finance i feel like the uh blockchain technology now it's sort of like machine learning 10 years ago like in 2010 after you know when the iphone 3 came out the first ipad uh everybody was talking machine learning and like the power machine learning like if you wanted to start a company and you wanted to have angel investments or any sort of uh vc fund investments you needed to have machine learning in your in your tag line right in your company like it had to be about that and i feel like uh blockchains did like that now in the 2020s where if you start any sort of company you have to say that you are working with a blockchain in one way or another talk about the nfts nfts we should start we could uh take a screenshot make an nfc of the this ama um sell it okay so let's see more questions there's an internet i want to be career switcher interesting okay so this person this person wants to be a career switcher uh focusing in frontend development but they get the feeling that they're not smart enough which areas is more value in the tech world okay so i guess this this kind of like a general question of like how smart you need to be or like how capable you need to be to break into tech and i'm assuming that the answer is going to be somewhere along the lines of anyone can do it but i want to hear your answers i can start i think on that one because one of the things that i think a lot of people and i'll talk from a us perspective because we tend to be uh more aggressive in our resumes if you will more assertive that how wonderful we are and all that but there's also the flip side of that when people look at the job requisitions they'll see all of these requirements in that requisition and that will scare people off if you in the united states if you have 80 of the requirements that you see in the resume you are overqualified for that position so if you have 50 i would say apply because there's always this wiggle room in a position where you may have some skill that's not in the requisition um from your current career for instance i think there's somebody on code academy that has a background in genetics well if i were working in a biotech company that could really play into helping get your your first position but it may not be on the requisition form so don't underestimate the value you have try and make sure that that's in your resume as you know aside something of interest that makes you stand out but not distraction and don't hesitate to apply for positions the worst they're going to do is reject you as long as it's not taking a long time to invest and again if you have somebody inside that can help you tweak your resume to fit the company's lingo that can help you get in also um you know again that's not doing anything unethical or legitimate that is really trying to show that you're doing your research on the company and aligning your resume and your application to that company and that will help you get the position because there's so much you can learn when we were hiring for at castle run we were hiring to do um a particular project i was actually not i was engaged in the hiring but i wasn't one of the hiring managers per se and one of the interesting things i did that might help this person is they forced the person during the interview to do paired programming in this case it was paired operations because it was more devops and i asked the person doing the interview what exactly are you looking for because there's no way this patient's going to know the ins and outs of our environment until they're in it so how are you gauging whether or not they're really qualified and the person said i'm really looking for curiosity more than anything because the person if they're smart is going to learn what i need them to learn to get the job done and we're working as a team so they're going to always have somebody that can help them with the areas they don't know but the curiosity was a key thing if the person is open to being told i think you could do it better if you follow this path and asking questions then i know that's a longterm very valuable employee that i want to have on my team because that's going to be a person that's going to help me solve problems so that's that's what i'd say to that person is don't sell yourself short and play to your strengths and allow for the fact that there are personality traits that can actually win the job for you what about you lorenzo yeah um well first of all i agree with christo um other than that i would add a few things um maybe i'm a contrarian here but i don't believe that programming is for everyone as everything i mean some people like it some people won't like it and it's simple like that right um so if you don't like programming but you want to do it for you know money it might work right uh but in the long term i don't think you'll be happy simple like that now if you are if you like programming or at least you think you like at the moment um that's fine and here i'm quoting a a person that was uh following i listened to to some of his conferences and he like he told us look uh you need three things to well to enter the world of programming become a software developer um isolation references and um perseverance okay so why those three because um first of all perseverance this is not a shortterm term game right if you want to become a programmer you can start with maybe a couple of hours per week very very slow paced but you know that it will take more time and that's fine but you'll get there at some point the more time you invest in that the the easier you will get it so you should play for the long term first and this is for severance reference this is what i mentioned before uh find a specific path that tell you look at the end of this you'll have the basic skills to be a frontend developer so for example the path that we have in codecademy just find that path or a mentor whatever you prefer but then just focus on that don't spread yourself too thin and the third thing the third thing that i was mentioning is isolation because um you know everyone else around you has uh its own life right they are doing whatever they are doing and they don't really care if you will become a developer or not right um actually for them you know they probably your friends would like to have you there on a saturday evening and they would like to share a drink with you and so on and so forth but at some point if you want to become a developer you have to say no to a few things and focus on your learning until you get a job probably um and this is maybe a hard truth but it is something you probably should should be aware of yeah i would put it there i feel like um uh to nuance your answer i feel like some people there's many ways to learn and everybody's a little different some people like to take notes some people like to watch videos some people prefer audio and others prefer to read the lessons um i feel like uh that you need to be aware of yourself a little bit and how you learn and if you feel like you're not smart enough because you're going through a lessons too slow you should try out to find lessons in a different format or in a different way and see maybe try to study at a different time of the day maybe maybe you're trying to learn to be a developer after your hours of work well if you already put eight or nine hours at your daily job they make you work in the day because that's when you're productive right so at night you're already spent and you go home and maybe maybe you need to take some time off use your vacation days to see if you if you study better uh sometimes it's a matter of the platform you're using to learn it's not adequate to the style of learning you have so there's a few variables to take into consideration and if you if you try a few things and you still feel like you struggle with motivation or you still struggle with learning programming you can also try to find peers online or projects or things to collaborate with and i would say once you've gone through a few of those if you're still struggling then maybe you start you have to start considering like laurence said you know is your motivation the right place is this really what you were looking for or maybe you thought this was what you're looking for based on you know like a movie you've watched like sometimes someone telling you how much money they make as a developer um so i would say uh you need to try a few things first before you give up like completely because uh you know everybody's a little different and it might just be that nobody explained it to you like um this happens a lot with uh i have friends i would say i'm really bad at math i said well you probably are not bad at math it's just that never nobody ever tried took the time to explain it to you in a different in the way that you understand it because basic math right like oh i can't add you know like you're doing shopping and 13 plus seven is is too much it's like nobody should struggle at that at that level of math so this must be that just the learning you took was just not effective for you so be aware of yourself and your capabilities sometimes it's just a matter of uh looking at it from different angle uh but you also have to be realistic that yeah not everybody's gonna be able to program that's just fact but maybe it's kind of fun for you if i can just expand a bit on this um another very important thing that i would add is that you shouldn't compare yourself with other people right i mean if you look at other people learning let's say exactly whatever you're learning exactly the same thing right maybe they are students or maybe they are unemployed they can dedicate eight hours per day and they will progress faster than you and maybe you have a job and and you have to work after your your job and you can only dedicate a few hours per day or even less right so there's no way you can progress as fast as they are progressing so as a rule of thumb you especially when you're learning something like this and you're doing it because you want it don't don't compare yourself with other people just compare yourself with what you did yesterday okay and if today you can just do a few small things that's perfect that's fine that's um i follow this guy that uh he has a very similar principle he says you know if you could uh every day you should be able to look back at your clone from yesterday and like are you better than that person like you know kind of like just as long as you are improving personally um obviously there's nuances to this right like uh if you're trying to for a job or something where there's 15 candidates and you're one of 15 yes you're gonna have to somehow be better than them but if you're just learning just the learning aspect of it i guess it's not healthy to say well somebody went through this lesson in an hour and it took me two and a half i must not be good at this well yeah yes yes no the bets if you put the time uh other questions let's see somebody here says i'm 15 loving coding but i'm doing python c plus what is next okay so they're doing python simples plus uh what is next i guess my question is what are you trying to do learning to code like where you're trying to go are you trying to a web developer a game developer a mobile app developer you're learning python c plus uh it's a little hard to know what will be next like what do you think that is next so if you're learning python super suppose at a surface level what's next like data structures or algorithms or what would be the next logical step i would hope if they're doing c plus plus they probably already had some data algorithms and structures um but you're right that would be a great place to to back go back to to make sure that you've got that under your belt before you move forward but it sounds like maybe the next step i'm assuming they're saying they're starting with the programming languages then the next step i would think would be moving on to projects maybe moving on to projects where you're working with somebody else because and even i have this tendency i tend to do things on my own because my time is so varied when i can actually work but in the reality is when you get into business you're going to be working with somebody else so if you can get somebody to pair with on a project i think that would be a great move for you and pick something really small if it's your first project make sure you you understand what it is that when are you going to be done like what's going to be your first really simple iteration on whatever you're developing if it's a game you know make it really simple that just barely gets done what you want to do so you can test it and test your assumptions and see what works and then move on one of the things that i've learned from working in kessel ryan from the past couple of years you want to experiment and test your assumptions and you want to do it in iterative smaller cycles a is more interesting so you can get stuff out to people you can if you're developing a game you can have your friends try and say hey i'm developing this really simple game i want you to give a look at it and see what you think what do you like what don't you like what could be better and the feedback you get from them is invaluable for figuring out what to do your next steps could be and knowing how to adapt and seeing how you have to adapt what you're doing based on feedback is a really critical skill in today's world so i do recommend working with somebody else and trying to get feedback from another group of people potentially on whatever you're doing i think that'd be a great next move for you yeah very good point um if anything i would add maybe well like the way i see it now is that you have a hammer and a saw right you can do a lot of things with that and that's great but you don't know what you want to do right do you want to build a house do you want to build a boat do you want to build up fence maybe you know like an and as uh federico um and crystal were saying like yeah you can go pretty much everywhere with those two languages those are i mean they are very good good that you started from there um but you can expand pretty much everywhere so try to build some project and and see what you like more you know like maybe you don't like game development at all maybe you want to go deeper into some data analysis and then after a while you discover that you don't like that one either um so yeah just try a few projects and it is a bit like crystal was saying try small things uh and then get feedback from you from yourself right do you like it or or you don't like it fine um and then try again something else right and i would say um one thing to remember when you're learning to code at the beginning is that at companies in a professional setting you will not be doing all the things that you're doing when you're coding on your own so for example you might have a team lead you might have a product you might have a manager you might have a product manager you might have directors and like you know vps and there's a lot of people planning the steps ahead for you so that all you have to do is focus on the building aspect of it and this is something that i see a lot with beginners with coding where they will say hey i learned the basics of html css and javascript but once it comes to building something for my own i blank i'm totally blank like i know the tools and i don't know what to do right like lorenzo was saying you have a hammer and some nails and some wood but like once it comes down to like doing something on your own that is not the ikea pamphlet you don't know what to do with it with the tools and um and that's totally normal you have to accept that these project management skills and this kind of planning uh that that's a that's a different skill set learning javascript doesn't teach you the how you can plan a project on a sprint so that you can get it done and erase through it and improve it over time that's just it's it's separate things it's totally separate so it's totally normal if you're learning programming languages that you don't know what to do with the languages it's going to take some time for you to figure that out and then once you get a job in a few years you're 15. so once you get a job in a few years i guess you will have people telling you what to work on because uh because this is you know that's just not your area of focus your focus is using the hammer nah not planning which bed to make uh let's see another question here someone with a noncomputer science degree trying to stand out by using portfolio to showcase my skills do you recommend any projects to work towards all right so is there any kind of project or type of project that might showcase your skill better than other projects um okay so if i can start here i'd say um so broadly speaking there are a few projects that are trivial like um a todo list which like everyone has right but it's a good way to start just because anyway you need to use a few things in the language um or in the framework that you are using that um will be helpful right so if you can do a todo list that's already something now of course you want to do something more than that so definitely um get some data from the internet there are a few websites where you can fetch data and and use a bit of calls to maybe change that as well one of them is called json placeholder so if you go there basically you can download some fake data regarding i think it's some website like facebook say right so there's like users there's pos there's albums whatever so try to get data from there and display it in your website as as you as you think uh it would fit best so that shows me that you are able to well get data from the internet and display it correctly and it shows me that you are able or you should be able to handle some errors in case uh data is not coming and so on and so forth so rather than specific projects i'd say i'd like to see how you handle these things error handling data from the internet these kind of things yeah cool i guess the only thing i'd add is if you're looking if you know the industry you want to go in or the type of company you want to work for try and make sure that your portfolio aligns with that because that will draw more of their interest and probably then they'll be able to ask more intelligent questions about your work specifically and you'll be able to respond to it i think that will get the engagement so and you might be able if you can do that as you're applying for positions indicate which of your projects they that you'd recommend they look at for that position i think that would probably be useful also and save them some time anything you can do to save a recruiter time is going to be value yeah yeah that's uh i think one of the recruiters that i talked to here at code academy they said the same thing that um when looking at portfolio projects uh they know the text that we use at code academy right like the the the text type being all the software and all the frameworks and all the languages that we use at code academy when they see candidates that have experience in those things first it that it it's not a make or break situation but it does give you an edge over other competitors that might not have knowledge in that kind of code base or that kind of frameworks that are used here because yeah if you know you know if you know django instead of another framework like react it is translatable and it is something that you can easily move from one to the other but still takes more time than somebody that's already a native developer and react right so it comes down to these situations where out of three really good candidates who has a slight edge because they can only hire one out of three so i think that's really good advice um to work on work on projects that will be meaningful to the company that you're applying for and like lorenzo said uh try not to make them trivial because you won't be you won't be hired for the project you did like oh we like you to implement this in our in our code base they probably gonna ask you questions like why did you do it this way what motivated you to make this choice what was the tradeoff that you did when you chose node.js instead of this other thing why express right like they will ask you these questions and they're more interested in knowing your mindset and how you you work through problems than the problem itself because everything all everything else will come with experience and your mentors and working with people that have more years of experience than you so build projects that are not just copy and paste be mindful of the project you're building and make sure that you can explain why you you did it the way you did it that's probably a big one um how can we know okay how can we know that we're ready for a job or an internship how would you what is this is a really big question it comes up all the time in the community at code academy with all the beginners is i don't feel ready i've built three projects this is that enough should i do five should have spent a month just been three weeks there's this impostor syndrome of saying i've taught myself this so i'm not legit i'm not a phd in computer science so i probably don't know what i'm talking about um and it's really hard to break through that to say i feel comfortable i feel confident in my skills to to talk to recruiters about this or to apply for jobs so do you have any tips on how to get over that wall i think the first thing is if you have any friends that are software developers or in the area you're looking to get into ask them um because if they're your friends well backing up when we think about ourselves we tend to be more critical about ourselves because we know our faults we know our strength and maybe we know our strengths um but if you ask your friend you know do you think i'm ready for a position like this or a couple of friends is probably even better if you ask them um they may come back and say i think you're almost ready or yes i think you're ready or you're overqualified for it even right because your friend might know if they're looking at your portfolio see what you've done and they would have the context of understanding that position um then they could advise you on what you might still need to do or if you're ready to apply for it and they might bolster your your confidence also because the first job is always the hardest one to get yeah i'd say the first job is definitely the hardest one to get once you have the first one it's like okay oh this guy is actually a developer yeah totally like that regarding your question that's a tough one i i was probably i was in your shoes 100 um what i could say is try to um well try to apply earlier than later earlier is better than later i would say that's that's something now how to define earlier um it's a tough nut i think yeah ask to some developers friends um but in the end maybe um get a list of companies that are interesting to you and then a list of like b companies where you are not very interested um and apply to the companies in the in your second list right so even if you fail uh you are like okay you know i tried and maybe they gave you some feedback as well and and you know what what they want you know how far you are from being startled already um yeah i would say i would say that you have to try you have to try some some interview um i think my advice would be the way i looked at it was okay who feels like they're ready to apply for jobs uh when they're learning to be developers and my first answer that came to mind was boot camp graduates you go through a boot camp three months 12 weeks something like that and you know at the end of the boot camp they get they are all told you're ready to apply for jobs so if you use that as a guiding principle of these people went from zero to developers in 12 weeks what did they learn to the point where the people that run these bootcamps feel confident that they can apply and if you're doing a full stacked uh kind of bootcamp you can look at the technologies you can you know find friends make friends online in communities online like the cod academy community or in the stack overflow any any other communities that too find people that have gone through boot camps and asked them what the syllabus was okay we learned html css javascript react node.js uh express.js bootstrap and we built like a back and front then we did a portfolio and then i got told to start sending resumes out if that's what they got told then that's the line that's what you that's the line you need to cross like whatever you learn in a bootcamp that is expensive or online on coursework that you found online learn those things and start applying because if they can do it you can do it too there's no difference between them and you if that's if that's what uh you know if bootcamps feels like that's the qualifications you need then don't stop doubting yourself that's it that's that's where you have to be don't worry about it like bootcamp graduates usually build like one big project at the end like a capstone project like then yeah how many projects you need one big one people get jobs with one big one like what else can i say yeah it's um that seems to be the the equation here the algorithm the winning strategy i'm doing the full stack course i'm going to get i mean okay yeah so i guess um okay so we got last two questions it's 11 59. okay so last two questions we'll go through them quickly number one is they're doing the full stack course on card academy will this prepare me for web dev jobs in the industry is it more as a supplement than primary course so either one of you that work with developers if you are familiar with what the full stack coursework is a code academy what it teaches more or less would you say that that is something that is preparing people to to be developers or do you see that more has a secondary source of knowledge that they should be looking for someplace else to learn to code i think that's kind of the question is is the full stack path uh you know is it deep enough yeah is it enough what do you think based on your experiences i'd say it is um so i i'm also in the full stack path by the way i didn't finish it yet but i'm working so that tells you something um i'm this is a personal preference i like to explore different resources as well so um when something was not clear from the from the full stack uh path that i was following in code academy i was checking the same information elsewhere that's mda and there's like a bunch of other resources online so definitely uh do as you wish it is well done though yeah yeah i have a degree i think the one thing if you if you really if you want to bolster it i'd pick probably one area in the full spec course and go deeper into that make sure you've got that so you have one thing you could say and within the full stack this is really what i what i like to focus on so that you've got one strength area that you can talk to because like what lorenzo was saying earlier i know a couple of people that officially have the titles of full stack developers and they both laugh and say there's no such thing as a full stack developer so no especially the funny thing is that developers working they are the first ones to say that like they think they're full stack developers they get a first job and like you can ask them like a week later and they go like no i'm not a full study i'm a frontend developer and they themselves will like retract attractive time but yeah i think the way that where that also plays into it this may play into the person's response also is that if you get into an agile team that's meant to be crossfunctional with a lot of different capabilities and skills that whole team together is probably full stack developers right because they've got the knowledge all together and so you just have to be able to provide a slice of that knowledge to that team to be valuable okay and last question let's see somebody asked what are your opinions on internships are they worth the sacrifice of time and financial opportunity cost so i guess some internships are not paid some internships are you know they take you for three months or something like that and it's just experience but they don't pay you and it's just timeconsuming obviously because you could have done something else with that time uh what are your opinions on on these kind of internships and is it a good way to get a job it's not should you do it should you just focus on getting a real like a fulltime job i think internships can be can be very good but they should always be paid if the company's not going to pay you for an internship then i think that's already showing how they're going to value their employees and i don't think that's probably a company you're going to want to work for and i would expect that they probably will exploit you and it won't be a very good situation that's just from what i've heard from the industry i wouldn't recommend taking a nonpaid internship you can get some real value from internships it's a great way for you to get your foot in the door in a company um see what they're doing they'll help you and bring you up to speed in their industry and their area of expertise and usually often that will lead to a job right after that so you may do your internship i guess i don't know if you're in college in your junior year or something like that after your senior year if things went well during your internship you will likely have a job offer from that company if they like to so that that makes the process much easier so i do recommend them in that aspect alright so yeah i can check on crystal totally um it's a put in the door and well in my case i took a pay cut right going from a fulltime position to an internship i went through an internship um that was definitely a pay cut did i learn something yes uh more important to me it was um well i could write on my cv or resume uh i am a developer at this company right um and that says something to the market to the industry right you are a developer at that point you are working as a developer and someone is or maybe is not paying you but you are working as a software developer in a professional environment and that is kind of key in my opinion okay i think there's this uh these two main things with internships that you might want to think about because remember that when you're in when you're interviewing for a position you can interview them too you need to make sure that that it goes both ways it's not just you begging for a job you also have to make sure it's a good fit for you and for your goals i would say two things about the internships uh number one is when you are going through the process ask them if these internships are structured in a way that there's a chance for you to become a fulltime employee of that company some companies look for internships and they have a very structure like internships and you go away and some other companies they do tell you if the internship goes well there's a there's a good chance that you will get a fulltime offer at the end of your internship so figure out if the company that you're trying to intern for has this kind of a work opportunity and number two there's a difference between internships when you are a working professional and when you are in school if you are doing a let's say a fouryear university degree and you are in the summer between your second and third year any internship is gonna be better than just going home to to enjoy summer like if you go home and all you're gonna do is just play video games and go and go with your friends it would have been a better use of your time to go that july and august somewhere to a company and i had an internship that would have been to uh to to just do nothing so that's a different setting if you're already a working professional and you're going to take a pay cut or you have to like quit your job to be this intelligent that's a big asking to do but it's totally different you're a student you're a student yeah internships are great that you might get a job afterwards they'd say hey we love you when you graduate let us know right uh okay well we are over time so we are going to call it a day we've been here for an hour guys can you believe that we'll be here for an hour it was a breeze it was a lot of fun it was nice talking to you all nice questions yeah all right anybody anybody on the channel uh you're a few in the could academy discord you know hit me up you'll find me there you can if you have any additional questions you want to ask um whether it's related to working for the government or whatnot feel free to hit me up all right well thank you both of you and i'll cut well lawrence or any final words no i was just saying same for me like feel free to get in touch on on discord that's quite a good channel i'm not super responsive lately because i need to learn a bunch of things with my new job so um yeah excuse me excuse me for that but yeah i'll try to try to answer yeah all right awesome well thank you everybody and we'll catch you on the next live stream we're always doing live streams here on the youtube channel on code academy so just keep an eye out subscribe all that good stuff and join our community and find the chapters i mean you both have a chapter right the helsinki chapter and also the scrum clock chapter so keep an eye out for the chapter events because they are awesome and they are hosted like every month so also go to our community.com dot go to academy.com and join our chapter page see you everybody bye bye bye yeah that's it
