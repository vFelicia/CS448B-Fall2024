With timestamps:

00:00 - hi this is Pat with code Kadim II I'm a
00:02 - developer based in Washington DC
00:03 - learner's ask me all the time what they
00:06 - should be learning if they want to get
00:07 - started in programming there's no easy
00:09 - answer but there are some common paths
00:11 - that programmers take usually it's in
00:12 - web development computer science or data
00:14 - science but if you're new all this can
00:17 - be really confusing and that's perfectly
00:18 - normal so don't worry we're gonna cover
00:20 - what each of the paths looks like what
00:22 - it takes to get started in them and
00:23 - where they lead and hopefully by at the
00:25 - end of this you'll feel a little bit
00:26 - more comfortable about which path might
00:28 - be right for you let's get started code
00:31 - Academy offers learner paths and
00:32 - computer science data science and web
00:34 - development all agree to options if you
00:36 - want to launch a new career but which is
00:38 - right for you to figure out which path
00:40 - is right I find it helpful to get a much
00:43 - higher level understanding of what
00:44 - problems are being solved rather than
00:47 - the coding languages and technologies
00:49 - being used now quick disclaimer while
00:52 - getting this bird's eye view is more
00:54 - helpful to determine the boundaries it's
00:56 - also a bit oversimplifying at the start
00:59 - here I want to state outright that for
01:01 - simplicity sake we're missing out on a
01:02 - lot of detail for example we could get
01:05 - into the weeds of which programming
01:07 - language has the upper hand but how
01:09 - would completely miss the points we're
01:11 - trying to understand what type of work
01:12 - these programming languages help people
01:14 - do not what the shortcomings and
01:17 - advantages are programming is about
01:19 - people
01:20 - it's the convergence of technology and
01:22 - an idea come to life so what's the
01:24 - difference between web development data
01:26 - science and computer science the truth
01:28 - is they all overlap in some places and
01:31 - at the core is programming let's take
01:34 - computer science first computer science
01:36 - is concern of the theoretical or
01:38 - academic side of computers but when it
01:40 - comes to how it works in the real world
01:41 - its primary application is exploring
01:44 - business problems and building the
01:45 - solutions that can address them whether
01:48 - that's using technology to address the
01:49 - needs of a customer base or digitizing
01:52 - an in-person experience computer science
01:54 - can span just about all programming
01:56 - languages frameworks and libraries but
01:58 - practitioners tend to focus on timeless
02:01 - foundational concepts in addition to the
02:03 - tools to get it done some of these
02:06 - concepts include computation and
02:08 - solution complexity probability theory
02:11 - informs
02:12 - data structures and algorithms software
02:16 - design patterns and principles some of
02:17 - them like functional programming and
02:19 - object-oriented programming databases
02:22 - and testing operating systems and
02:25 - scripting this is hardly all that
02:28 - computer science can do but
02:29 - practitioners tend to tackle bigger
02:31 - problems than minut details computer
02:33 - science is sometimes seen as the digital
02:35 - translator that turns high in the sky
02:37 - concepts into programming functionality
02:39 - for example say you're a car sharing
02:42 - startup you need to get a writer from
02:44 - where they are to where they want to go
02:46 - how do you determine what side of the
02:48 - street they're on what happens if that's
02:51 - a one-way street what happens if there's
02:53 - construction which route do you take to
02:55 - get the writer home with the least
02:57 - amount of traffic these are all problems
02:59 - a computer scientist solves using
03:01 - algorithms which is really just a fancy
03:03 - way of saying instructions for a
03:05 - computer next is data science the
03:08 - convergence of data statistical analysis
03:11 - and business it too seeks to explore
03:14 - business problems but it's also about
03:15 - making informed suggestions on how to
03:17 - solve them for instance maybe you
03:19 - already have customers but you don't
03:20 - understand their buying habits by
03:22 - analyzing data you can better understand
03:24 - why they make a purchase from you to
03:26 - give them a better buying experience
03:28 - some of the common languages concepts
03:30 - and syntaxes or data science can include
03:32 - Python or our machine learning model
03:36 - evaluation feature engineering data
03:40 - modeling processing and visualization
03:43 - algorithms logarithms probability
03:47 - statistics and mathematical solutions
03:49 - graphs plots and histograms again data
03:53 - science is a broad field with a wide set
03:56 - of tools to accomplish the goals so this
03:57 - is hardly an extensive list but data
03:59 - scientists use a combination of
04:01 - programming statistics and business
04:03 - acumen to make suggestions about how to
04:05 - solve business problems they work
04:07 - closely with their co-workers to
04:08 - determine problems they didn't know
04:10 - existed or clarify relationships that
04:12 - can be leveraged for better outcomes
04:14 - last there's web development this is
04:16 - usually where the rubber hits the road
04:17 - and we're building implementing the
04:19 - decisions made at the higher levels web
04:21 - developers creates integrate and deploy
04:24 - the features that were decided upon and
04:26 - by
04:26 - doing so solving the business problems
04:28 - there are typically two disciplines that
04:30 - many web developers focus on even though
04:32 - they may be proficient in the other
04:34 - front-end development and back-end
04:36 - development back in is concerned with
04:38 - getting storing and retrieving
04:39 - information a business needs whereas
04:42 - front-end is concerned with showing
04:43 - capturing and allowing users to submit
04:45 - that information web development uses a
04:49 - wide set of tools to accomplish the goal
04:50 - but a typical tech stack consists of
04:52 - HTML CSS and JavaScript for the front
04:55 - end these could include JavaScript
04:57 - libraries like react angular and view
04:59 - with any number of helper libraries for
05:01 - the HTML and CSS like post CSS and CSS
05:04 - components for the back end many common
05:06 - favorites are PHP Ruby and no J's with
05:10 - databases like my sequel MongoDB or
05:12 - Postgres so how do you know which path
05:15 - is right for you I think it's helpful to
05:17 - ask yourself two questions where do you
05:19 - want to work and what kind of work do
05:21 - you want to do why those two questions
05:23 - well different companies at different
05:25 - stages of growth may treat each of these
05:27 - disciplines differently a start-up may
05:29 - not have data for a data scientist to
05:31 - use a boutique design agency may not
05:34 - ever need one true computer scientist
05:35 - because they're making marketing
05:37 - websites a large consulting firm may
05:39 - specialize in big data for its clients
05:41 - and only need a handful of web
05:43 - developers but dozens of data scientists
05:45 - and computer scientists so it can be
05:47 - helpful to narrow down where you hope to
05:49 - end up moreover each business at each
05:51 - size has different needs and will
05:53 - require different solutions from
05:54 - different kinds of programmers so I like
05:56 - to tell learners to begin with the end
05:58 - in mind so you don't end up somewhere
05:59 - you don't mean to go it's normal to have
06:02 - your career evolve and change and the
06:04 - most successful programmers I know make
06:06 - adjustments to their careers rather than
06:07 - just have it all lined up at first you
06:10 - might start out on web development and
06:11 - realize you really like working with
06:12 - data visualizations instead it's just
06:15 - normal for your career to change as you
06:16 - both learn more about what kind of work
06:18 - you actually do and where your strengths
06:20 - are as a programmer next what kind of
06:22 - problems do you want solve this seems
06:24 - abstract but it's a helpful thought
06:26 - exercise to mull over when considering
06:28 - paths a web development can be very
06:30 - rewarding to see your features and
06:32 - interfaces come to life and it's a great
06:34 - choice if you love seeing your work on a
06:36 - friend screen in the wild
06:37 - a web developer could help a business by
06:40 - building their online presence and build
06:42 - the digital equivalent of the store as a
06:44 - data scientist it can be very
06:46 - challenging to explore high-level
06:48 - problems and ride the rapid of data
06:49 - mining you get to ask big questions and
06:52 - test your hypotheses which can have
06:53 - lasting impacts a data scientist would
06:55 - help a business with decisions like
06:57 - suggesting which products the store
06:59 - carries which ones are hits which ones
07:01 - are duds where are the best places to
07:03 - put those products and even how long a
07:04 - store should be open for lastly it can
07:07 - be very rewarding to help a business
07:08 - grow and scale as a computer scientists
07:11 - you get to trailblaze paths and solve
07:13 - mission critical problems blocking the
07:14 - business from growing to its true
07:16 - potential a computer scientist could
07:18 - help a business by creating a
07:19 - stress-free customer experience making
07:21 - sure there's the right inventory for the
07:23 - right season and even smoothing out
07:24 - purchases and returns without any hassle
07:26 - as a general rule of thumb I like to
07:28 - tell learners if you get a lot of
07:30 - enjoyment out of building things
07:31 - try web development if you like solving
07:33 - thought experiments give computer
07:35 - science ago and if you like science
07:37 - class growing up at doing your own
07:38 - research then maybe check out data
07:40 - science and see how it feels
07:41 - again successful programmers often go
07:44 - through phases and will change
07:45 - disciplines depending on where they work
07:47 - some see themselves as technologists
07:49 - first and grow to adapt to what kind of
07:52 - work they're doing don't feel like
07:53 - you're locking yourself in when you
07:55 - start down a path the basic principle is
07:57 - taught for each path are true across
07:59 - computer science data science and web
08:01 - development code Academy has the paths
08:03 - feature to make it super easy to learn
08:04 - the skills you need to do the work in
08:06 - various disciplines learning it in the
08:08 - right order combining skills in the
08:10 - right way and with lots of portfolio
08:12 - projects as you go if you want to choose
08:13 - your own adventure there's a ton of
08:15 - options including your own pick and mix
08:17 - of the free code Academy courses this is
08:20 - Pat with code Academy I really hope you
08:22 - felt this video was helpful but did I
08:23 - answer all your questions leave a
08:25 - comment below or subscribe to this
08:26 - channel I love responding to learners
08:28 - comments check out the description for
08:30 - some of the links that I mentioned here
08:31 - and if you want to get started in
08:33 - programming come on over to code Kadim e
08:34 - will help you get started

Cleaned transcript:

hi this is Pat with code Kadim II I'm a developer based in Washington DC learner's ask me all the time what they should be learning if they want to get started in programming there's no easy answer but there are some common paths that programmers take usually it's in web development computer science or data science but if you're new all this can be really confusing and that's perfectly normal so don't worry we're gonna cover what each of the paths looks like what it takes to get started in them and where they lead and hopefully by at the end of this you'll feel a little bit more comfortable about which path might be right for you let's get started code Academy offers learner paths and computer science data science and web development all agree to options if you want to launch a new career but which is right for you to figure out which path is right I find it helpful to get a much higher level understanding of what problems are being solved rather than the coding languages and technologies being used now quick disclaimer while getting this bird's eye view is more helpful to determine the boundaries it's also a bit oversimplifying at the start here I want to state outright that for simplicity sake we're missing out on a lot of detail for example we could get into the weeds of which programming language has the upper hand but how would completely miss the points we're trying to understand what type of work these programming languages help people do not what the shortcomings and advantages are programming is about people it's the convergence of technology and an idea come to life so what's the difference between web development data science and computer science the truth is they all overlap in some places and at the core is programming let's take computer science first computer science is concern of the theoretical or academic side of computers but when it comes to how it works in the real world its primary application is exploring business problems and building the solutions that can address them whether that's using technology to address the needs of a customer base or digitizing an inperson experience computer science can span just about all programming languages frameworks and libraries but practitioners tend to focus on timeless foundational concepts in addition to the tools to get it done some of these concepts include computation and solution complexity probability theory informs data structures and algorithms software design patterns and principles some of them like functional programming and objectoriented programming databases and testing operating systems and scripting this is hardly all that computer science can do but practitioners tend to tackle bigger problems than minut details computer science is sometimes seen as the digital translator that turns high in the sky concepts into programming functionality for example say you're a car sharing startup you need to get a writer from where they are to where they want to go how do you determine what side of the street they're on what happens if that's a oneway street what happens if there's construction which route do you take to get the writer home with the least amount of traffic these are all problems a computer scientist solves using algorithms which is really just a fancy way of saying instructions for a computer next is data science the convergence of data statistical analysis and business it too seeks to explore business problems but it's also about making informed suggestions on how to solve them for instance maybe you already have customers but you don't understand their buying habits by analyzing data you can better understand why they make a purchase from you to give them a better buying experience some of the common languages concepts and syntaxes or data science can include Python or our machine learning model evaluation feature engineering data modeling processing and visualization algorithms logarithms probability statistics and mathematical solutions graphs plots and histograms again data science is a broad field with a wide set of tools to accomplish the goals so this is hardly an extensive list but data scientists use a combination of programming statistics and business acumen to make suggestions about how to solve business problems they work closely with their coworkers to determine problems they didn't know existed or clarify relationships that can be leveraged for better outcomes last there's web development this is usually where the rubber hits the road and we're building implementing the decisions made at the higher levels web developers creates integrate and deploy the features that were decided upon and by doing so solving the business problems there are typically two disciplines that many web developers focus on even though they may be proficient in the other frontend development and backend development back in is concerned with getting storing and retrieving information a business needs whereas frontend is concerned with showing capturing and allowing users to submit that information web development uses a wide set of tools to accomplish the goal but a typical tech stack consists of HTML CSS and JavaScript for the front end these could include JavaScript libraries like react angular and view with any number of helper libraries for the HTML and CSS like post CSS and CSS components for the back end many common favorites are PHP Ruby and no J's with databases like my sequel MongoDB or Postgres so how do you know which path is right for you I think it's helpful to ask yourself two questions where do you want to work and what kind of work do you want to do why those two questions well different companies at different stages of growth may treat each of these disciplines differently a startup may not have data for a data scientist to use a boutique design agency may not ever need one true computer scientist because they're making marketing websites a large consulting firm may specialize in big data for its clients and only need a handful of web developers but dozens of data scientists and computer scientists so it can be helpful to narrow down where you hope to end up moreover each business at each size has different needs and will require different solutions from different kinds of programmers so I like to tell learners to begin with the end in mind so you don't end up somewhere you don't mean to go it's normal to have your career evolve and change and the most successful programmers I know make adjustments to their careers rather than just have it all lined up at first you might start out on web development and realize you really like working with data visualizations instead it's just normal for your career to change as you both learn more about what kind of work you actually do and where your strengths are as a programmer next what kind of problems do you want solve this seems abstract but it's a helpful thought exercise to mull over when considering paths a web development can be very rewarding to see your features and interfaces come to life and it's a great choice if you love seeing your work on a friend screen in the wild a web developer could help a business by building their online presence and build the digital equivalent of the store as a data scientist it can be very challenging to explore highlevel problems and ride the rapid of data mining you get to ask big questions and test your hypotheses which can have lasting impacts a data scientist would help a business with decisions like suggesting which products the store carries which ones are hits which ones are duds where are the best places to put those products and even how long a store should be open for lastly it can be very rewarding to help a business grow and scale as a computer scientists you get to trailblaze paths and solve mission critical problems blocking the business from growing to its true potential a computer scientist could help a business by creating a stressfree customer experience making sure there's the right inventory for the right season and even smoothing out purchases and returns without any hassle as a general rule of thumb I like to tell learners if you get a lot of enjoyment out of building things try web development if you like solving thought experiments give computer science ago and if you like science class growing up at doing your own research then maybe check out data science and see how it feels again successful programmers often go through phases and will change disciplines depending on where they work some see themselves as technologists first and grow to adapt to what kind of work they're doing don't feel like you're locking yourself in when you start down a path the basic principle is taught for each path are true across computer science data science and web development code Academy has the paths feature to make it super easy to learn the skills you need to do the work in various disciplines learning it in the right order combining skills in the right way and with lots of portfolio projects as you go if you want to choose your own adventure there's a ton of options including your own pick and mix of the free code Academy courses this is Pat with code Academy I really hope you felt this video was helpful but did I answer all your questions leave a comment below or subscribe to this channel I love responding to learners comments check out the description for some of the links that I mentioned here and if you want to get started in programming come on over to code Kadim e will help you get started
