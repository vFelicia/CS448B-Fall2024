With timestamps:

00:00 - all right hello everyone I think we are
00:02 - alive
00:03 - welcome to another session of coke atom
00:06 - II lives my name is Alex Koontz and I'm
00:08 - here with my coworker Sofie how's it
00:10 - going Sophie Sophie is a new curriculum
00:15 - developer so I'm a curriculum developer
00:17 - and one of the people that has written a
00:18 - bunch of the content for the data
00:21 - science path then all the data science
00:23 - content Sophie this is like what your
00:25 - third week at the company this is week
00:27 - number three okay nice well welcome this
00:31 - is kind of a series that we've been
00:35 - doing here on YouTube where we are
00:38 - walking through one of these skill paths
00:39 - that we have created so we're live right
00:44 - now on YouTube
00:45 - if you're watching in the in the YouTube
00:48 - videos not live we are doing these live
00:50 - videos every Tuesday at 1:00 p.m.
00:52 - Eastern Time we're also live on other
00:56 - places I think on facebook and twitter
00:58 - and twitch right now Sophie and I have
01:00 - the YouTube chat open so if you want to
01:02 - talk with us if you're watching live and
01:04 - come in and say hi we would love to chat
01:07 - with you so yeah people in the YouTube
01:11 - chat I see that we have some people
01:13 - watching some people I recognize
01:14 - actually we have someone from San
01:16 - Francisco chubs I've seen you before and
01:19 - here Gregory who wants a free account
01:21 - I'm sorry Gregory I don't know if we can
01:23 - do that with you but uh yeah welcome
01:27 - everyone and yeah if you're in the chat
01:29 - feel free to ask us questions as we go
01:31 - through this and yeah and chat along
01:36 - with us so I'm gonna go ahead and share
01:38 - my screen and we can start the lesson
01:40 - that we're doing today so all right
01:45 - Sophie can you see my screen I can see
01:48 - it okay cool hi everyone Lucia I
01:50 - recognize YouTube from Dublin nice to
01:53 - see you again all right
01:54 - so this series we've been walking
01:57 - through the visualize data with Python
01:59 - skill path and so far we are actually
02:03 - getting to matplotlib which is the cool
02:05 - Python graphing library so last week two
02:08 - of our co-workers Alex and Ian went
02:11 - through this lesson of learning how to
02:12 - do minecraft
02:13 - in matplotlib and this week Sophie and I
02:18 - are going to walk through the next
02:20 - lesson which is this different plot
02:22 - types in matplotlib so this lesson
02:26 - focuses a lot on how to make these
02:28 - different plot types so specifically the
02:31 - ones that we are going to go over our
02:33 - bar charts pie graphs or is it a pie
02:37 - chart what's the actual what's the
02:39 - actual definition Sophie what's the
02:41 - actual name hi chart I think hi chart
02:44 - works
02:45 - we've got histograms in here too which
02:48 - are another very similar to bar charts
02:51 - so we're gonna walk through how to do
02:53 - all of that in Python in prepping for
02:56 - this Sophie and I went through this
02:58 - lesson and we have thoughts on the ways
03:01 - that Python does this and math club mat
03:03 - plot live does this so if you I know
03:06 - you're kind of an AR expert right yeah I
03:10 - I come from more of an are background
03:13 - than Python so it's always interesting
03:15 - to kind of learn how to do things in
03:17 - another language and see the differences
03:19 - and similarities in this case we were we
03:23 - were talking just the other day about
03:24 - how some of this stuff is actually a
03:27 - little easier in our especially with
03:29 - respect to like bar charts but we'll
03:32 - talk about that when we get there yeah
03:33 - so we'll get to all of that I think this
03:35 - is maybe a good time to plug the thing
03:37 - that we do on Thursday as well where
03:38 - every Thursday if you're a co-captain
03:41 - ePro member we run a like private zoom
03:45 - call that you can call into and ask
03:47 - questions and so this Thursday coming up
03:50 - what does that the 9th Sophie and I are
03:51 - gonna run that call run that call and so
03:54 - one of the things that we're thinking
03:55 - about doing there was maybe taking a
03:57 - look at how these same concepts are done
03:59 - in our and kind of the differences and
04:01 - the advantages and disadvantages of that
04:03 - programming language so yeah so if
04:06 - you're interested we'd love to see you
04:07 - on Thursday Wow people all over the
04:11 - world
04:12 - Mordecai from Ghana welcome alright so
04:18 - let's go ahead and jump right into it
04:20 - so we'll probably do a little bit of
04:23 - like matplotlib review but math law
04:27 - lib is the kind of standard Python
04:31 - graphing library so it's the thing that
04:32 - you're going to use if you want to use
04:33 - Python and you want to make graphs and
04:35 - so you'll see on the start of all of our
04:38 - exercises we import matplotlib and we
04:42 - specifically import pie plot and we name
04:46 - it something else Sophie I don't know if
04:49 - you can answer this in Python or if this
04:51 - happens in art all up but like is this
04:53 - kind of naming convention of importing
04:56 - something and then renaming it yes do
04:58 - you see that in other languages or why
05:00 - do you think it's important for us to or
05:02 - why do people do it so often in Python
05:03 - well honestly so in our you don't have
05:07 - to use like a library name before before
05:13 - a function name to indicate which
05:16 - library that function is coming from but
05:19 - that's actually really problematic
05:20 - because a lot of people write our code
05:23 - where they use functions that exist in
05:26 - multiple libraries and they maybe have
05:28 - like a load library command at the top
05:31 - of their script but you don't know
05:33 - necessarily know which function is gonna
05:37 - be used part of their code so it can
05:41 - cause all sorts of reproducibility
05:43 - issues - if you don't indicate which
05:45 - library something's coming from then
05:47 - meet me somebody has a different library
05:48 - with that same function and then they
05:50 - actually are running a different
05:51 - function in their code than you have so
05:55 - best practice in are as well as to put
05:59 - the library name and I think the reason
06:02 - you're importing it as something else is
06:04 - just to make that a little easier like
06:06 - if you have to type pipe lot out every
06:08 - time would be kind of pain in the butt
06:10 - so yeah exactly so you'll see as we
06:13 - start to write matplotlib code you'll
06:16 - see that all of our matplotlib code he's
06:17 - gonna start with PLT dot bar and so
06:20 - that's saying we want to use the bar
06:23 - function that exists within matplotlib
06:25 - or it exists within this thing called
06:27 - PLT and rather than having to type pipe
06:32 - lot every time or matplotlib dot pipe
06:34 - lot every time we just abbreviate it to
06:36 - p LT just make it a little bit shorter
06:38 - we could always name the same thing else
06:39 - we can name it just p
06:41 - but kind of a convention or the standard
06:43 - is to name it PLT okay great so in this
06:49 - exercise we're gonna make a simple bar
06:51 - chart so let's go and look at kind of
06:53 - what we are looking for here this is a
06:57 - bar chart that is I'm applauding yeah
07:01 - let's see well one thing that we should
07:03 - note is that as we say here it's hard to
07:05 - tell what this represents because our
07:06 - graph is I'm labeling right we don't
07:08 - have an x axis or a y axis label or even
07:11 - a title of the graph so it's a little
07:14 - bit hard to tell what this is displaying
07:17 - we'll fix that in a later date but
07:20 - you'll see that in order for us to use
07:22 - the bar function we have to pass two
07:25 - lists of things the first that first
07:27 - thing is what goes on the x-axis and the
07:30 - second thing is what goes on the y-axis
07:32 - I think I think what this plot is if we
07:35 - were reading the narrative is that this
07:37 - is the days that it the days in the year
07:41 - of each planet so Earth the third planet
07:43 - has 365 days do we include pluto in this
07:47 - or is Pluto gone at this point it's
07:49 - Pluto even a planet anymore or Sophie
07:54 - well it looks like we have it looks like
07:57 - we have nine in there so I think Pluto
07:58 - is in there and so a year in Pluto must
08:01 - be 90 thousand days and so this this
08:07 - list is going to be our Y values for one
08:10 - the first thing to be 88 which you can
08:12 - hardly see the second thing to be 225
08:16 - the third thing to be 365 the very last
08:19 - one to be this 90,000 so that's that's
08:21 - relatively easy the question is what
08:25 - goes on the x-axis and this is where
08:28 - python is a little bit annoying I would
08:31 - say so Sophie what like what is this big
08:34 - ugly range length days and year why do
08:37 - we need it what what does that mean
08:39 - right so I think it's I always find it
08:43 - helpful to kind of type code into the
08:45 - console and just see what things are so
08:48 - if you want to just print length or Elia
08:53 - and
08:54 - here you can see right what that outputs
08:59 - yeah so I can do that let me actually I
09:04 - so that's a great point
09:06 - Sophie one thing that's a little bit
09:07 - interesting about these exercises that
09:09 - we don't show you the output terminal
09:12 - only showing you the results of this but
09:17 - we're gonna actually do this on a fly
09:18 - where I'm going to share my entire
09:21 - desktop now I'm but but keep going
09:25 - Sophie okay well I we can skip it for
09:29 - now we can come back this can be
09:31 - something that we talked about on
09:32 - Thursday maybe okay anyway so
09:38 - Elian len that's gonna give you the the
09:41 - length of that list
09:43 - so we said there are nine values in that
09:46 - days and year list so that's gonna tell
09:49 - you le n days in year is gonna tell you
09:53 - that there's nine values in the days in
09:55 - your list and then the range function is
09:57 - just gonna get you basically a list with
10:00 - the all of the indices from 0 to 8 so
10:05 - it's gonna give you nine values that are
10:09 - evenly spaced apart by one yeah so it's
10:12 - gonna give you 0 1 2 3 4 5 6 7 8 so give
10:16 - us 9 values total and the reason why
10:19 - this is a little bit silly is that we're
10:22 - giving you 9 values for the Y dimension
10:24 - right we're saying we want 9 bar plots
10:27 - and so I would kind of hope and I think
10:31 - our does this it's pretty well where it
10:34 - knows okay we're making a bar plot
10:36 - you've given me nine values
10:37 - let me just place those evenly
10:38 - unfortunately Python wants the actual
10:41 - number is 0 through 8 to be to be placed
10:44 - there as well so you can see that on
10:47 - that on that graph 2 you can see that on
10:50 - the x-axis each of the bars is kind of
10:53 - over the number is 0-3 yeah so there's 0
10:56 - there's one there's two and so on up
11:01 - coming in this lesson we'll go over like
11:02 - how to change these tick marks so
11:05 - because by default interest
11:08 - every other one so we'll go over how to
11:10 - you know label your graph appropriately
11:13 - all right let's see what they're asking
11:15 - it for us to do so we have a cafe that
11:18 - has some drinks and some sales for those
11:22 - drinks and so we want to use PLT bar to
11:25 - plot the number of drinks sold on the
11:27 - y-axis so let's go ahead and do the
11:29 - y-axis first since that's a bit easier
11:31 - so I'm gonna do PLT bar let me make my
11:35 - screen slightly bigger
11:42 - all right so there's PLT bar and let's
11:49 - do the y-axis first is that slightly
11:51 - easier so I'm leaving this place blank
11:53 - for the x-axis and the y-axis I just
11:56 - want to be number of drinks sold which
11:58 - we're stirring in sales and then for the
12:01 - x-axis I want 0 through 1 minus the
12:05 - total number of drinks and so like we
12:08 - saw in this example we can say okay I'm
12:11 - going to use the range function and the
12:13 - range function turn our list between
12:16 - zero and the number that I give it so I
12:18 - could like hard-code in one two three
12:21 - four five six so I could hard-code in
12:23 - six there and this would give me a list
12:26 - of 0 1 2 3 4 5 or be a little bit safer
12:31 - than hard-coding and I could say length
12:33 - of sales why why is it this slightly
12:40 - safer than hard-coding Sophia it is
12:43 - safer because imagine that you want to
12:46 - add something else to this later so you
12:50 - have another drink and you want to add a
12:53 - sales value for that one then you want
12:56 - to be able to update that value
12:59 - automatically instead of having to
13:02 - change it in the future especially if
13:04 - you have lots of spots that you're
13:06 - automatically making yeah exactly so
13:09 - maybe we can even do that in a second so
13:11 - let me let me run this and see hopefully
13:14 - I get the green checkmark which is great
13:16 - but my graph didn't show up and so this
13:18 - is kind of the last part that you'll do
13:20 - all the time in a MATLAB is kind of
13:24 - build up the graph that you're making
13:26 - and at the very end you call
13:28 - PLT dot show and that won't produce its
13:31 - graph here so yes let's demo really
13:35 - quickly adding like another value so if
13:37 - I add 100 so I add another type of drink
13:42 - here if I had hard-coded in 6 as the
13:46 - total number of drinks I don't even know
13:48 - what's gonna happen here in this this
13:49 - will be kind of funky because you know
13:51 - how it's 7 Y values but only
13:53 - six X values let's see what happens yeah
13:59 - so nothing it just didn't plot anything
14:00 - but if I change this back to point of
14:04 - sales there you go all right let's go on
14:14 - to the next one again in in the YouTube
14:16 - chat a few if you want us to slow down
14:19 - or have any questions or just want to
14:21 - chat with us feel free to say hi we'll
14:25 - keep moving on okay cool so we just made
14:30 - our graph and as you'll notice the you
14:37 - can't really understand what this graph
14:38 - is showing or what the point of this
14:40 - graph is because our labels aren't great
14:42 - so the first thing that we're gonna do
14:44 - is we are going to change these labels
14:47 - from 0 through 5 to actually represent
14:50 - the drink associated with the sales so
14:52 - we want the first one to be cappuccino
14:55 - and latte and chai and americano mocha
14:58 - espresso no I'm not a coffee drinker and
15:00 - also fee which one of these is your
15:02 - favorite ah I like a latte usually ok I
15:08 - really know yeah like could I couldn't
15:12 - give you the definition of what these
15:14 - things are I have no idea I think I
15:17 - could only tell you espresso and
15:23 - obviously like chai
15:25 - it wasn't obviously like shied is not
15:30 - you know it's not a tea that's a team
15:33 - yeah something ok cool but regardless we
15:38 - want to replace our replace our values
15:43 - here with the names of those those teas
15:49 - and so in order to do this there's a
15:51 - couple of steps that we need to do the
15:53 - first is that we just need to create an
15:55 - axis object and so this is the thing
15:58 - that we're going to be modifying we're
16:01 - right now we've just been creating a
16:03 - graph but we need to first create an axe
16:06 - on which to change information about it
16:09 - so I imagine this is the first step so
16:11 - first create an access object for the
16:13 - plot and store it in a variable called
16:15 - ax X equals I already forget the command
16:21 - yeah PLT thought subplot alright so that
16:27 - creates our access object so now what we
16:29 - can modify this access object to change
16:32 - the things that it's displaying we have
16:37 - kind of two two steps here and this
16:40 - first step isn't very intuitive the
16:43 - first thing that we need to do is we
16:45 - need to just tell the axis what ticks to
16:48 - show and so right what we're gonna end
16:52 - up wanting is we're gonna want one tick
16:54 - for each one of these we're gonna one
16:56 - two three four five six ticks and the
17:02 - way that we're going to set those ticks
17:03 - is just by passing it again a list of
17:05 - zero through five to get six total ticks
17:07 - the reason why this is important is
17:09 - because sometimes like we saw in the
17:12 - last example matplotlib will not show
17:15 - every tick that you want like it might
17:17 - skip the even ones or the odd ones and
17:19 - so by doing this we say we specifically
17:21 - want six ticks at zero one two three
17:24 - four five and five rather than just a
17:26 - ticket zero we'll just - ticket - which
17:28 - is the ticket for or something like that
17:31 - so let's go ahead and do that so we can
17:35 - do again forgotten the exact command so
17:39 - we can do it
17:40 - ax dot set X ticks oh thank you
17:51 - - range and then again that length of
17:57 - yeah and note that that's the same thing
18:00 - as kind of listing out those numbers 0
18:04 - through 5 like in the example the
18:08 - example I think just writes them all out
18:10 - 0 yeah exactly
18:13 - the exact same thing as this again we're
18:15 - just using that range function to do it
18:17 - automatically I think this might be
18:19 - might be interesting to demo
18:20 - if we just say let's say just give me
18:23 - the ticks one and four let's see what
18:26 - happens yeah so you'll see that it was
18:30 - tick marks then just show up that one
18:32 - and four yeah I highly encourage to
18:35 - encourage you to play with these things
18:38 - and just see what happens it's
18:39 - definitely something that I've done on
18:41 - these lessons as well it's always kind
18:43 - of fun yeah we have someone in chat a
18:46 - Herbert it's saying it's a little easier
18:48 - to read it and in our with ggplot2
18:51 - Herbert so can I were just saying that I
18:54 - actually think I actually think the are
18:56 - code it's a little bit easier I get kind
18:58 - of annoyed by having to always make
19:00 - these lists of like 0 through 9 0
19:02 - through 10 or whatever like I think it's
19:05 - silly that you have to add the X labels
19:08 - where R does that kind of automatically
19:09 - for you but maybe it's not to personal
19:12 - preference yeah I don't know I think
19:15 - ggplot2 is one of those things that
19:17 - where it's not always intuitive when you
19:20 - first see it but once you get used to
19:23 - syntax it is pretty clear and it can do
19:26 - a lot of things really quickly but I
19:29 - also love just besar ok big fan of base
19:33 - are plotting I know that's probably just
19:36 - because that's what I learned on but
19:38 - yeah yeah so for those of you that don't
19:41 - know our GD plot 2 is Oh what an R it's
19:45 - called a library or a package or does it
19:47 - have a it's a good question it's what's
19:52 - called a library yeah so much like
19:56 - matplotlib in Python is this library
19:59 - that we're importing to do graphing our
20:00 - has similar libraries where ggplot2 is
20:04 - the really popular our library for
20:06 - graphing that you have to import it but
20:08 - base are also has some graphing stuff
20:10 - and the syntax is just a little bit
20:12 - different ok cool so the last step with
20:16 - that is so we have our we have the
20:18 - number of ticks that we want we have 0
20:20 - through 5 but they're still just showing
20:21 - numbers rather than the names of the
20:24 - drinks and so now we can use this
20:26 - function set X tip tick labels to change
20:31 - the change the text displayed here
20:34 - so so we want to change it too we want
20:43 - to again pass in a list of things and
20:45 - the list that we want to pass in it's
20:46 - our list of drinks minutes pass drinks I
20:55 - know in the last lesson we in the in the
20:59 - previous lesson there was a lot of
21:01 - content about like these these labels
21:04 - might start to overlap or you might want
21:07 - to like angle them slightly to happen
21:10 - read a little bit better all these like
21:12 - small little gritty details in that law
21:14 - wave is one of the advantages of using a
21:16 - programming language do graphing where
21:18 - you can imagine if you're familiar with
21:21 - like Excel or Google sheets you can make
21:23 - graphs in those but it's a little bit
21:25 - harder to customize to that level of
21:27 - detail of like really you know changing
21:29 - the exact label is how you want all that
21:31 - sort of stuff so I think that's one of
21:33 - the advantages of using a programming
21:35 - language like Python or R to do to do
21:37 - your graphing the other big advantage is
21:40 - that if you're a lot of times if you're
21:42 - making those types of types of
21:44 - adjustments in Excel for example you
21:47 - have to do all that manually and if you
21:50 - want to make a new graph with slightly
21:51 - different data you have to redo that
21:54 - manual a lot of the time whereas if you
21:57 - write out commands to do that in code
22:01 - then it's really easy to pass in a
22:04 - slightly different data set right or you
22:07 - know um some other list drinks and then
22:11 - pass in that new information and still
22:13 - retain all of the formatting Thanks
22:18 - hey so it's something that I think we
22:19 - don't go over in this lesson is I think
22:22 - there are white ick labels as well so
22:27 - let's just test this out and see what
22:28 - happens I've not tested this before so
22:30 - let's just set the white X to let's see
22:32 - it looks like right now it's going
22:33 - between zero and eighty so let's just
22:35 - give it 20 and 40 there we go and then
22:41 - we can imagine we can even do set Y tick
22:45 - labels
22:47 - to be some nonsense this is bad
22:54 - oh man it didn't even work
23:00 - interesting did I screw it up I think I
23:02 - screwed it up I think there's an extra
23:07 - there we go yeah so this works with the
23:11 - why label as well where you can both set
23:14 - the number of labels you want to show
23:15 - and then the labels themselves you can
23:18 - set cool alright oh boy
23:26 - side by side bar plots this is the this
23:28 - is the one that Sophie and I are like I
23:29 - can't believe there's not an easier way
23:31 - to do this in math lab so if you want to
23:37 - set up like what we were trying to do in
23:39 - this lesson and kind of the solution
23:42 - that we walk you through beer sure so
23:45 - we're trying to get basically a side by
23:48 - side bar chart which could be useful
23:51 - whenever you're trying to compare kind
23:54 - of two bar charts because if you were if
23:56 - you imagine this bar chart that we have
23:58 - where we've got US and China what does
24:02 - it say percentage of population over age
24:04 - 65 and if you imagine having all the
24:06 - orange bars in one chart and all the
24:09 - blue bars in a separate chart it would
24:11 - be kind of difficult to directly compare
24:14 - China and the u.s. if that's the
24:17 - comparison that you want to make so
24:18 - sometimes it's useful to have the bars
24:21 - right next to each other or stacked on
24:23 - top of each other I will say people in
24:26 - the statistics and data science industry
24:29 - sometimes have strong opinions about
24:32 - backed bar charts why what's the what's
24:37 - the what's the debate ah that it can be
24:43 - difficult to visual there are certain
24:46 - things that are more difficult to
24:48 - visually compare if you have the sacked
24:51 - chart so like if you have the stacked
24:53 - chart where you're trying to compare the
24:55 - sizes of the top set of bars to each
24:58 - other
24:59 - then it's difficult because they're all
25:01 - at different heights so you can't really
25:03 - compare if you imagine the US and China
25:06 - bars were stacked on top of each other
25:08 - and said and you wanted to compare a
25:10 - year to year just for the US then those
25:15 - orange bars if those were the top bars
25:17 - it would be harder to compare those to
25:20 - each other across years yeah let me let
25:22 - me turn on my cheat mode here so I can
25:24 - jump ahead to show this the stacked bar
25:26 - like this is a stacked bar plot and
25:28 - you're saying like it's hard to compare
25:30 - the orange bars here because they all
25:31 - start at different heights yeah exactly
25:34 - so I guess that's really a more of a
25:38 - statement about make sure that you think
25:39 - when you're trying to design what kind
25:41 - of chart you want it's important to
25:43 - think about what kinds of conclusions
25:45 - you want people to be able to draw from
25:47 - your data so if you know if you're
25:50 - really trying to have them compare
25:52 - across dates here for an individual
25:57 - country maybe you might not want a
26:00 - stacked yeah thanks but if you don't
26:04 - care about that you know there there are
26:08 - reasons that I think stacked bar charts
26:10 - could be useful but I have seen people
26:12 - with strong opinions tangent this is
26:16 - like a tangent but our people so against
26:18 - them that they'll say never use them is
26:20 - it like that vitriolic yeah I yeah I
26:24 - it's always funny I have worked with a
26:26 - lot of different people and I've kind of
26:28 - discovered there are certain
26:29 - visualizations that people have very
26:32 - strong reactions to and I think it's
26:35 - always it's interesting to try to
26:37 - develop your own opinions Oh what you
26:39 - think makes a good visualization versus
26:41 - not I know people that are very against
26:44 - pie charts in general I know of people
26:49 - that hate things like word clouds but
26:52 - you know I think some of those things
26:54 - can be useful in the right setting so I
26:56 - don't know but yeah so back to the
27:00 - purpose of this exercise is so we want
27:04 - basically we're combining two bar charts
27:07 - in this case and and we want the
27:11 - the bars to be side-by-side so that we
27:14 - can make a comparison both between let's
27:17 - say in this case US and China and across
27:19 - years and so having those bars
27:21 - side-by-side makes us makes it easier to
27:24 - make those comparisons simultaneously
27:26 - the the thing that's a little tricky
27:28 - because you saw earlier that you have to
27:31 - kind of set the location of those X
27:34 - labels manually or semi manually is that
27:41 - uh yeah I was seeing the chat yeah
27:44 - really depends on your audience totally
27:48 - yeah so the so the problem is that uh as
27:52 - you set those first locations of the
27:55 - bars
27:55 - now you need to space them out a little
27:57 - bit further apart to make room for the
27:59 - second set of bars
28:01 - so those blue bars are farther apart now
28:04 - than they were in our original plot and
28:07 - then you also need to take into account
28:10 - that those orange bars have to have be
28:12 - given the location as well and that has
28:14 - to be offset the right distance so all
28:19 - of those things we need to kind of set
28:21 - up in our X values that we pass to the
28:26 - PLT dot bar function before we can we
28:30 - can get the plot and the reason that
28:32 - this is a little easier potentially in
28:34 - are is that you can kind of do all of
28:37 - this without setting the location of the
28:40 - bars on the x-axis and in ggplot yeah
28:43 - exactly so like kind of the plan that
28:46 - we're gonna do is we're gonna say let's
28:48 - graph all of the blue bars instead of
28:52 - let's forget about easier right now
28:55 - let's say that this this mark was one
28:56 - this one was two with this one was three
28:58 - it's from this war we're gonna say let's
29:00 - plot all the blue bars at like point
29:02 - eight one point eight two point eight
29:05 - three point eight and so on and let's
29:07 - plot all of the orange bars at one point
29:09 - one two point one three point one and
29:12 - then on top of that that let's then draw
29:16 - our tick marks exactly at one two three
29:19 - four or five so that's kind of the plan
29:21 - is that we're gonna have our blue bars
29:23 - shifted a little bit our or
29:24 - or shifted a little bit and then our
29:27 - labels to be like right in the middle
29:28 - and so all of this depends on a couple
29:32 - of things it depends on how many data
29:35 - sets you have where you can imagine that
29:38 - if you have three data sets if we wanted
29:40 - to graph a third bar here the math would
29:43 - be a little bit different we'd have to
29:44 - shift things differently we want to know
29:50 - how many bars total there are so if we
29:54 - had more bars here we would obviously
29:55 - have to keep doing the math to do the
29:58 - shifting four more bars not not for just
30:00 - six or seven of them and then finally
30:03 - the width of each bar where by default
30:05 - matplotlib makes the width of each bar
30:09 - 0.8 and so that's what we're using here
30:11 - but you can imagine if the width of this
30:13 - blue bar was bigger the placement of the
30:17 - orange bar would have to been change
30:18 - accordingly so basically all of this is
30:22 - like kind of annoying math that you have
30:25 - to figure out about like where to put
30:26 - all these bars for this exercise we've
30:29 - given you this equation which is a
30:36 - little bit complex and it uses list
30:39 - comprehension and we can go over this in
30:42 - more detail I wish we have like a
30:43 - terminal again to like to be able to
30:45 - play around with it but we don't but
30:47 - let's say we are going to do you so this
30:54 - is just saying we have two we have two
30:58 - values here we have sales wanted in
31:00 - sales - and what's gonna be get the X
31:02 - values for sales one sophiar yeah no no
31:09 - where is it
31:09 - trying to get the chat working again cuz
31:12 - I wasn't able to respond to anyone but
31:15 - no worries yeah and so fiat feel free to
31:18 - type in the chat as I'm like talking if
31:21 - you want to answer yeah I don't have
31:23 - this working quite yet so I'm gonna mute
31:27 - myself for a minute and okay um hello
31:31 - everyone in chat we see you so Pisa on
31:34 - our way
31:36 - all right so what we are going to do is
31:39 - we want to get these the X values for
31:43 - this first and I said and so we are
31:45 - going to copy this over again I don't
31:48 - love telling people to copy and paste
31:51 - and really what you should do here is
31:53 - like print out this x value stuff when
31:59 - if you had a terminal which you
32:01 - unfortunately don't but for now what
32:06 - we're gonna do is we're going to say
32:07 - okay this is the first thing in our data
32:11 - set there are two data sets total there
32:13 - are the number of sets of bars again we
32:17 - can just find that by doing the length
32:18 - of sales one that prevents us from
32:20 - hard-coding in you know this value of
32:23 - six things and the width of each bar
32:26 - again let's use 0.8 and I hope we run
32:30 - this what I do I'm supposed to store it
32:35 - in store 1x cool and in fact I'm gonna
32:44 - do yeah so that we now are going to use
32:50 - these x value it was in the graph itself
32:52 - so we're gonna say plot dot bar we're
32:56 - going to use the x values our store 1x
32:59 - the values that we've just created and
33:01 - the y values are going to be Salem's one
33:08 - and there we go so you'll see there are
33:10 - blue bars and they're slightly offset
33:13 - from the like one the exact values in
33:19 - fact let me add tick marks here so oh
33:24 - shoot what was X tick label yeah it
33:29 - sticks to be range length of sales so
33:36 - idea I'll just add all of the ticks I
33:39 - think you want to add xx at store one
33:43 - underscore X to see where those oh sure
33:47 - and then I didn't get the name right I
33:50 - don't think oh I need to create the axis
33:54 - so that's X is plot dot so plot and then
34:06 - and then it's not X ticks let me go back
34:09 - and see what it was set X ticks so I
34:18 - just did two things really quickly which
34:21 - let me explain that again remember in
34:24 - order to set the tick labels you need to
34:26 - create this axis object and then we use
34:29 - the axis object to set the x ticks and
34:34 - so there you go you'll see that here are
34:37 - our that's like where 1 2 3 4 & 5 are
34:43 - and why is that not what we expect so
34:47 - here's what's going on here what are you
34:49 - trying to do
34:50 - oh it's not the way thermistor x1 it's
34:52 - just yeah I was just trying to get the
35:01 - yeah so there there's our there's our
35:04 - tix where this blue bars at 0.8 this
35:06 - one's at 2.8 that one's at 4.8 cool so
35:11 - let's then do the same for the second
35:14 - second set of things so I'm going to
35:17 - grab this and I'm gonna say okay we are
35:23 - now graphing our second data set or two
35:26 - data sets total we have sales to length
35:31 - of sales - and we're gonna store it in
35:36 - store 2x and then we're going to again
35:41 - plug another bar part of the second set
35:44 - of bars and the y value is not going to
35:46 - be sales one anymore it's gonna be sales
35:48 - - basically it's the same thing it's
35:51 - just our second data set nice
35:56 - and now finally let's see what the
35:59 - instructions are here let's let me just
36:07 - delete this axis stuff for now we show
36:11 - our axes without modifying them you'll
36:14 - see there we go there they are side by
36:17 - side and yeah our x axis isn't super
36:19 - helpful right now
36:21 - yeah what's the question the chat
36:25 - Herbert says so it's offset because of
36:28 - the width of the bars yeah exactly we
36:30 - could even play around this and see what
36:32 - happens if we increase the width - to
36:34 - make these bars really wide well it's oh
36:41 - I think that actually as you are playing
36:45 - around with this before I think that the
36:47 - width of the bar is actually also an
36:50 - input - PLT bar so if you just really
36:54 - quickly in your two calls - PLT bar
36:58 - adding like a yeah it makes it
37:06 - I'm sorry I said it again Sophie I think
37:09 - it might just be with what I can so if
37:14 - we set width equals to two can Herbert
37:20 - says no emitter edit stack bars
37:21 - oh well that kind of that kind of works
37:28 - they're like on top of each other and
37:30 - they definitely have a width of two now
37:32 - but why did it not move them over
37:38 - properly is it because it surprises me
37:46 - that's also surprises me let's see what
37:52 - happens if we so I'm just gonna create a
37:55 - variable called a bar width because
37:59 - we're using the same variable everywhere
38:01 - so we just set this to bar width and
38:08 - then set this to bar width set this
38:15 - one's a bar with this one okay that's
38:24 - back to our original grass what if we
38:25 - make it small oh there we go
38:33 - yeah so interestingly but like the gap
38:37 - between them is bigger right so it's
38:40 - like and if we if we crank it up to two
38:43 - now the gap between them is you know
38:45 - thing so for some reason we're not
38:47 - getting that spacing correct I imagine
38:51 - it's in this formula that we've given
38:52 - you yeah you either go ahead tell me
38:59 - the other thing that I've seen so for
39:01 - anybody that has used our before one of
39:05 - the nice things about our is that when
39:08 - you're working with vectors when are so
39:10 - vectors are kind of similar to lists and
39:13 - that it's just a basically like a list
39:14 - of numbers that you could have in a back
39:16 - there so just like how you have
39:19 - the like store one underscore X those
39:24 - should be you know the values that you
39:27 - want along that x-axis you could store
39:29 - those in a vector and are and one of the
39:31 - nice things is that you can do in are
39:34 - automatically if you just said store one
39:37 - X plus two it would element wise add two
39:41 - to every value in that vector instead of
39:44 - needing kind of like a formula like this
39:47 - so you could just kind of offset
39:49 - automatically and in Python you can
39:54 - replicate that with numpy so if you are
39:58 - storing those X values as an umpire
40:01 - array which is just numpy is another
40:04 - library that has a new some other set
40:08 - types of data structures and this is
40:09 - probably too complicated to go into here
40:12 - but in this case we're storing our X
40:15 - values as a list which requires that we
40:18 - use this kind of complicated list
40:20 - comprehension thing but if we stored it
40:24 - in an umpire array it would be kind of
40:26 - more like our where we wouldn't have to
40:28 - use this list comprehension to figure
40:31 - out each of the to replicate each of the
40:33 - X values from a formula yeah so for
40:37 - example it's like if we had this list if
40:39 - we wanted to just add two to everyone -
40:42 - just like shift everything over by two
40:43 - in our Sophie you're saying we could do
40:46 - something like that where is this what
40:49 - if this is a vector in this learning
40:51 - environment can you like load numpy as
40:54 - MP yeah yeah and then if we say like
41:06 - store one underscore X yeah with that
41:11 - after after that line no leave it as is
41:14 - but then after that line if you write
41:16 - store one underscore X equals NP dot
41:21 - array store one underscore X
41:27 - and then try just saying store to
41:31 - underscore X equals store one underscore
41:37 - X plus whatever like - what - sure and
41:45 - then we get rid of this guy so basically
41:49 - what we're doing is we're defining our
41:51 - first set of X things and then we are
41:54 - transforming them into a numpy array
41:56 - which again numpy is this kind of often
41:59 - used math Matthew library I always
42:03 - called it numpy and people I don't know
42:06 - I don't know and then we are adding two
42:10 - to this array which will take every
42:12 - element in the array and add you to it
42:14 - hopefully you'll see if this works okay
42:17 - same thing let me do plus point eight
42:20 - and then change bar with two point eight
42:27 - yeah and so so say same thing and again
42:33 - we're not exactly sure why we would have
42:37 - to play around more with if we want to
42:38 - really thick bars what to do
42:40 - but the point of all of this is that
42:42 - we're able to really like change
42:44 - you know everything about this graph if
42:47 - we wanted to dive into more about why
42:49 - these are overlapping right now we could
42:52 - like really start printing out all these
42:53 - values and figuring out why they're fine
42:56 - they're overlapping a couple of
43:04 - questions in chat
43:06 - will this be recorded on YouTube yes
43:09 - this is all these YouTube recordings are
43:11 - going into a playlist this is the like
43:12 - seventh video in the series and you can
43:14 - catch up on all of them already they're
43:16 - all in a playlist on YouTube huh
43:19 - what does a recommended text editor for
43:21 - Python I use really basic text editors I
43:24 - used to blaim which is doesn't have very
43:27 - many fancy features but it works for my
43:32 - purposes so preview of a preferred text
43:34 - editor I usually when I work with Python
43:39 - I usually just use a Jew
43:41 - no book yeah that's a but yeah
43:45 - duper no clutter but yeah we have a lot
43:49 - of material about goober notebook on
43:51 - Codecademy and any any project on coke
43:54 - Adam II where he'd be asking to do
43:56 - something in Python off the website on
43:58 - your own machine we asked you to do it
44:00 - in dupe your notebooks and we have lots
44:02 - of information showing you haven't get
44:04 - that set up and numpy versus lumpy mike
44:08 - mcruiz i
44:09 - I think it's numpy I think as a in my
44:14 - before I knew better I was calling a
44:16 - dumpy but everyone correct me on it I'm
44:18 - like what the heck are you talking about
44:21 - Python yeah it makes a lot of sense
44:26 - numerical Python I think uh-huh make
44:30 - sense right let's do these cursed stack
44:34 - bar plots all right so similar to the
44:41 - side-by-side stack bar plots we're gonna
44:43 - do something similar where we are going
44:47 - to be able to say so a parameter of PLT
44:52 - bar is this a bottom parameter and
44:55 - basically what that is what this is is
44:58 - this little can be a list of places
45:00 - where you want the bar to start so in
45:03 - this example this bottom yeah you'll see
45:06 - it's video game Ares it's 1 2 2 1 2 and
45:09 - so we are plotting the orange bars start
45:14 - at the first one starts at 1 second one
45:16 - starts at 2 the third one starts at 2
45:18 - second one starts at one and the third
45:20 - one starts at two so basically this
45:23 - bottom parameter is saying give me a
45:25 - list and I'm gonna start your the y
45:27 - values at those numbers and go up from
45:29 - there so what we can do is we can say
45:31 - okay if I know my x values if I know how
45:34 - high these blue bars go I can start the
45:36 - orange bars at the top of the blue bars
45:41 - so let's go ahead and do that
45:46 - let's see instead of making it a stack
45:49 - bar plot you think you were bought on
45:50 - put sales 1 bars on the bottom and set
45:52 - sail two bars to were sterile
45:54 - sailes one bars end so let me get first
45:57 - you the bottom one so that is on the
46:01 - x-axis I'm going to have let's see again
46:06 - my range of length of sails one and then
46:12 - my y-axis is gonna be my y-values are
46:15 - just gonna be the values in sales one
46:17 - and then my second data set it's gonna
46:22 - be the same exact thing except for sales
46:23 - - technically I don't even need to
46:28 - change this because it's the same length
46:29 - but I might as well just to be safe so
46:33 - I'm gonna be using the sales - data as
46:35 - my Y values and the only difference is
46:37 - now I'm gonna say I want my second data
46:41 - set to start and the values of sales one
46:48 - let's see if I did this right sales
46:51 - alone is not defined
46:52 - oh no underscores come on there we go so
47:04 - if you have anything any comments on on
47:06 - this stuff or any any thoughts it's okay
47:09 - if you don't we kind of talked about all
47:13 - right let's do this a legend so this was
47:17 - something that we taught you in an
47:18 - earlier lesson so you can add PLT dot
47:22 - legend and let's see let's just do
47:32 - people t don't ledger then see what
47:33 - happens do I make sure to add a legend
47:46 - PLT it thought legend so let me I think
47:51 - you have to put the labels and balls in
47:55 - there yeah so put them into PLT dot
47:59 - legend I think as the parameter oh
48:01 - really
48:02 - let me do it the way that I know works
48:04 - and then we can play around with the
48:05 - other way so I was interested to see
48:07 - what happened with the
48:08 - asking for a legend when we don't leave
48:10 - on these data sets I thought maybe you
48:11 - would just say like the police at is one
48:13 - and the orange that is two but it seems
48:16 - like we need to actually say the e blue
48:19 - sets I'm gonna give the label of in the
48:24 - instruction we asked for location one
48:26 - and in this one we asked for location to
48:35 - see what yep there we go and Sophie you
48:40 - think that if we we don't read them that
48:42 - was completely asset listen list maybe I
48:46 - know I'm second-guessing yourself but
48:49 - again something you could try I know
48:51 - that I think legend takes an integer
48:53 - that will move the legend around and
48:55 - maybe not maybe I'm maybe I'm wrong
48:58 - anyways in in the lesson that we just
49:01 - did last week we could go over this
49:02 - legend parameter and there's definitely
49:06 - a way to this this legend in two
49:09 - different parts of the graph yeah cool
49:13 - all right we got five minutes left or we
49:15 - got ten hours left I guess but uh oh
49:18 - we're talking way too much yeah
49:21 - but this is you know it's it's helpful
49:23 - just that we're like doing tons of
49:24 - random stuff which I hope is helpful for
49:26 - folks I want to save the last five
49:29 - minutes to show people how to get into
49:31 - the yum that call on Thursday if they
49:34 - want to join us for that so let's do it
49:36 - maybe just this last section
49:38 - cool so this is all about error bars so
49:43 - be when do error bars typically show up
49:45 - or like what's the purpose of error bars
49:46 - how do you use them in your graphs sure
49:50 - yeah so I think in general a lot of
49:53 - statisticians and data scientists care a
49:57 - lot about uncertainty and so whenever we
50:00 - collect data and we're trying to say
50:02 - something with that data usually we want
50:04 - to communicate something about how
50:06 - certain or uncertain we are about the
50:10 - result that we found and so it depends
50:14 - on what you're what you're demonstrating
50:17 - but in this exercise it's kind of silly
50:21 - you've got like
50:22 - types of drinks and ounces of milk in
50:25 - those drinks but let's say that somebody
50:28 - really cared about how much dairy they
50:30 - were consuming and so they wanted to
50:32 - know how much milk there of the
50:34 - different types of milk they were
50:35 - getting in their drink and let's say you
50:39 - ran an experiment you kind of you worked
50:42 - at a coffee shop and so you actually
50:44 - measured how much milk was going into
50:47 - each of these drinks and every barista
50:49 - is pouring a slightly different amount
50:51 - and so you kind of got a sense of how
50:53 - much variation there is then the error
50:55 - bar could kind of communicate then how
50:59 - much difference there was between
51:01 - different baristas like it's supposed to
51:03 - have six ounces of milk but that could
51:06 - be as low as five point five and and as
51:09 - high as six point five so I think in
51:11 - this example we're just using like a
51:13 - percentage as a way of coming up with
51:17 - these error bars so we're saying it's
51:18 - like 10% above and below the value but
51:21 - in practice usually people use some sort
51:25 - of measure of variation in the data so
51:28 - looking at one how much data there is
51:30 - and two how much variation there is in
51:32 - kind of a full data set nice yeah that's
51:37 - an excellent description I think yeah
51:39 - for the purposes of this we have this
51:41 - little toy example but most of the time
51:43 - when you're using error bars in the real
51:45 - world you don't go through some process
51:46 - of actually figuring out that how much
51:49 - error there is in the in whatever day
51:51 - that you're collecting cool so let's go
51:57 - ahead and add error bars for a
51:58 - matplotlib graph you'll see that we're
52:00 - gonna use a couple of different things
52:03 - we're going to use this Y error
52:06 - parameter that we can pass to a bar
52:08 - we're always going to use capsize so Y
52:12 - error is going to take a list of values
52:17 - and the cap size just takes a number so
52:20 - in this example I'm trying to think maps
52:24 - to to this above the FIR bar is going to
52:28 - be ten units high and the error is going
52:30 - to be a total of one unit and I wonder
52:33 - if it's one unit on each side that's
52:35 - actually important in that
52:36 - I think it is one unit on each side but
52:40 - that's something that that's okay
52:47 - do you think this first bar isn't one do
52:52 - you think that's one on either side or
52:53 - is that one total I think it's a one on
52:59 - either side yeah I do too
53:01 - I think we say that up here it's plus or
53:04 - minus two so this is plus or minus one
53:09 - but that's something that it's
53:11 - definitely important to know and then
53:14 - finally the cap size is a pretty easy
53:16 - primer that's just defining how long the
53:19 - caps on these error bars are just to
53:21 - make it a little more legible so let's
53:23 - go ahead and do this all right so well
53:31 - this information has a bar chart so
53:33 - we're plotting again my x values are
53:35 - just going to be number is 0 through the
53:40 - lengths of things that I have so I have
53:43 - a bunch of drinks and let me actually do
53:46 - ounces of milk even though again this is
53:48 - the same as if I'd been drinks in there
53:50 - and on my Y I want to be plotting ounces
54:00 - cool so there's my ounces of milk for
54:03 - each of these things and now we want to
54:06 - plot this error list which as Sophie was
54:10 - saying this is just 10% of the ounces of
54:12 - milk so the first one 10% error would be
54:15 - 0.6 10% error
54:17 - so if 9 would be 0.9 and so on so I'm
54:20 - gonna plot those errors by using our Y
54:24 - air parameter I'm just gonna set that
54:27 - equal to this error list that I have
54:33 - there we go there are my error bars and
54:36 - then finally ya add a cap size of 5
54:46 - thanks well and there are error bars
54:51 - don't you see what happens if a cap size
54:53 - 20 like how ridiculous we can make this
54:56 - it looks like it probably maxes out in
54:58 - the width okay cool so I think we're
55:06 - gonna pause here for today
55:07 - let me show you for everyone that's in
55:10 - chat or watching this live let me go to
55:14 - code Katmai so again we're running these
55:18 - live sessions on YouTube every Tuesday
55:21 - at 1:00 p.m. Stoker
55:22 - we're watching this in their recorded
55:24 - version we'd love to see you live if you
55:26 - can make it but if you can't make these
55:30 - sections you are a pro member we also
55:32 - have these pro like we're calling them
55:36 - Q&A sessions so let me show you how I
55:39 - navigate here this is the front page of
55:40 - Koch Adam II down here we have the
55:43 - events page and you'll see that on
55:47 - Thursday the 9th we have a pro Q&A with
55:51 - me and Sophia and we will if you click
55:58 - into this again you can only see this
55:59 - page if you are a pro member if you
56:02 - click any here to register you can
56:04 - register for a resume call and we will
56:06 - get on that call and talk with you at
56:07 - all
56:07 - on Thursday Ariel you asked me if I have
56:11 - coronavirus now I don't I just have for
56:12 - vocal
56:16 - so Nelson yeah we hope to see you there
56:19 - again the idea behind the idea behind
56:25 - these sessions is basically we want to
56:28 - this is like your clan to ask more
56:30 - questions right like you're here in chat
56:32 - and we're able to answer you quickly but
56:34 - we're also going through this lesson and
56:35 - so I really want to turn these live Q&A
56:38 - calls into like array vo show where you
56:40 - can like call in get on the call with us
56:42 - we can like answer your questions you
56:44 - can screen share and show us your code
56:45 - and we might talk about something you
56:47 - have we actually did that once with
56:48 - someone on a call Huey you have to
56:51 - question about how to set up like data
56:55 - collection for his job he had a bunch of
56:57 - like really old-school machinery that he
56:59 - needed to collect data on and ask this
57:01 - question about that so we were able to
57:02 - talk to him a little bit about that I so
57:05 - Sophie and I are gonna be on the one
57:07 - this Thursday I imagine we might dig in
57:10 - to are a little bit if nobody has
57:13 - questions for us but again these shows
57:17 - are like pretty open for whatever you
57:18 - want to do so we'd love to see you all
57:21 - there as a new member of this team it's
57:24 - been especially fun for me to get to see
57:27 - to meet some of the people that are
57:29 - using the site in in person because
57:33 - because I'm coming from a teaching
57:36 - background and I love you know talking
57:39 - to people so I would love to see as many
57:42 - people as want to join their and I'll
57:45 - tell you all of my opinions about
57:47 - visualization yeah and and Tony
57:54 - Antonia may be in the track we have two
57:56 - minutes here so Antonia
57:58 - can answer your questions super briefly
58:00 - of how could data be how would visualize
58:02 - data Python help me in marketing I think
58:04 - a lot of times marketers will use will
58:09 - have questions about the thing that they
58:11 - were trying to market so I that I know
58:12 - it cook ad me right we have questions
58:14 - about how many people are taking our
58:16 - courses how popular you know if we're
58:18 - thinking about making more our courses
58:19 - how popular were our own hold our
58:21 - courses and so being able to like go
58:23 - through that data and create
58:26 - visualizations
58:26 - based on that helps helps you in making
58:29 - business decisions like that yeah
58:32 - anytime you have data especially like a
58:35 - at a company where you've got lots of
58:37 - people interacting with different
58:39 - marketing emails you might be sending or
58:42 - products that you might be launching and
58:44 - you have information about how they're
58:46 - using that and who's signing up or
58:47 - anything like that if you have a lot of
58:50 - data it's hard to kind of parse it and
58:53 - most people I think prefer to have a
58:56 - visualization to kind of see what's
58:58 - going on versus just looking at
59:00 - rendezvous data or even like a table
59:03 - summarizing data can also be hard to
59:06 - parse so I think I mean data
59:09 - visualization is probably one of the
59:11 - most important skills and like any job
59:15 - my own biased opinion no I agree with
59:18 - that
59:20 - all right cool let me stop sharing my
59:22 - screen yeah so I think that's it for
59:25 - today thank you everyone that caught it
59:27 - caught us live I really love seeing all
59:28 - of our regulars like I do recognize
59:31 - people that are here every week we see a
59:34 - chubs who else is here her but this is
59:37 - the first time I was seeing you but you
59:39 - asked lots of great questions so thank
59:41 - you for watching the whole thing
59:42 - Michael Cruz always gives us a pacing
59:45 - feedback so yeah you know this is like a
59:48 - new thing that we're trying and yeah I
59:51 - super appreciate people that are that
59:53 - are checking it out Sophie did you have
59:55 - fun I had a lot of fun also question are
60:00 - newbies welcome and I think the answer
60:01 - is totally yes yes yeah do you need a
60:05 - period of time on the site to be allowed
60:07 - into these sessions or newbies welcome
60:08 - yeah Brian these free sessions that
60:11 - we're streaming on YouTube totally
60:12 - anyone is welcome and same thing with
60:14 - the private sessions if you were
60:15 - interested in joining that totally
60:17 - welcome were like people asking
60:20 - questions is the best way for other new
60:22 - people to learn as well so I'm sure
60:24 - there will be other new people in the
60:26 - chat that have the same questions as you
60:28 - and so somebody come and ask that
60:30 - question can help all of them so
60:31 - absolutely in people welcome cool all
60:36 - right well we will see hopefully see
60:38 - some of you on Thursday and
60:40 - thanks for watching bye everyone

Cleaned transcript:

all right hello everyone I think we are alive welcome to another session of coke atom II lives my name is Alex Koontz and I'm here with my coworker Sofie how's it going Sophie Sophie is a new curriculum developer so I'm a curriculum developer and one of the people that has written a bunch of the content for the data science path then all the data science content Sophie this is like what your third week at the company this is week number three okay nice well welcome this is kind of a series that we've been doing here on YouTube where we are walking through one of these skill paths that we have created so we're live right now on YouTube if you're watching in the in the YouTube videos not live we are doing these live videos every Tuesday at 100 p.m. Eastern Time we're also live on other places I think on facebook and twitter and twitch right now Sophie and I have the YouTube chat open so if you want to talk with us if you're watching live and come in and say hi we would love to chat with you so yeah people in the YouTube chat I see that we have some people watching some people I recognize actually we have someone from San Francisco chubs I've seen you before and here Gregory who wants a free account I'm sorry Gregory I don't know if we can do that with you but uh yeah welcome everyone and yeah if you're in the chat feel free to ask us questions as we go through this and yeah and chat along with us so I'm gonna go ahead and share my screen and we can start the lesson that we're doing today so all right Sophie can you see my screen I can see it okay cool hi everyone Lucia I recognize YouTube from Dublin nice to see you again all right so this series we've been walking through the visualize data with Python skill path and so far we are actually getting to matplotlib which is the cool Python graphing library so last week two of our coworkers Alex and Ian went through this lesson of learning how to do minecraft in matplotlib and this week Sophie and I are going to walk through the next lesson which is this different plot types in matplotlib so this lesson focuses a lot on how to make these different plot types so specifically the ones that we are going to go over our bar charts pie graphs or is it a pie chart what's the actual what's the actual definition Sophie what's the actual name hi chart I think hi chart works we've got histograms in here too which are another very similar to bar charts so we're gonna walk through how to do all of that in Python in prepping for this Sophie and I went through this lesson and we have thoughts on the ways that Python does this and math club mat plot live does this so if you I know you're kind of an AR expert right yeah I I come from more of an are background than Python so it's always interesting to kind of learn how to do things in another language and see the differences and similarities in this case we were we were talking just the other day about how some of this stuff is actually a little easier in our especially with respect to like bar charts but we'll talk about that when we get there yeah so we'll get to all of that I think this is maybe a good time to plug the thing that we do on Thursday as well where every Thursday if you're a cocaptain ePro member we run a like private zoom call that you can call into and ask questions and so this Thursday coming up what does that the 9th Sophie and I are gonna run that call run that call and so one of the things that we're thinking about doing there was maybe taking a look at how these same concepts are done in our and kind of the differences and the advantages and disadvantages of that programming language so yeah so if you're interested we'd love to see you on Thursday Wow people all over the world Mordecai from Ghana welcome alright so let's go ahead and jump right into it so we'll probably do a little bit of like matplotlib review but math law lib is the kind of standard Python graphing library so it's the thing that you're going to use if you want to use Python and you want to make graphs and so you'll see on the start of all of our exercises we import matplotlib and we specifically import pie plot and we name it something else Sophie I don't know if you can answer this in Python or if this happens in art all up but like is this kind of naming convention of importing something and then renaming it yes do you see that in other languages or why do you think it's important for us to or why do people do it so often in Python well honestly so in our you don't have to use like a library name before before a function name to indicate which library that function is coming from but that's actually really problematic because a lot of people write our code where they use functions that exist in multiple libraries and they maybe have like a load library command at the top of their script but you don't know necessarily know which function is gonna be used part of their code so it can cause all sorts of reproducibility issues if you don't indicate which library something's coming from then meet me somebody has a different library with that same function and then they actually are running a different function in their code than you have so best practice in are as well as to put the library name and I think the reason you're importing it as something else is just to make that a little easier like if you have to type pipe lot out every time would be kind of pain in the butt so yeah exactly so you'll see as we start to write matplotlib code you'll see that all of our matplotlib code he's gonna start with PLT dot bar and so that's saying we want to use the bar function that exists within matplotlib or it exists within this thing called PLT and rather than having to type pipe lot every time or matplotlib dot pipe lot every time we just abbreviate it to p LT just make it a little bit shorter we could always name the same thing else we can name it just p but kind of a convention or the standard is to name it PLT okay great so in this exercise we're gonna make a simple bar chart so let's go and look at kind of what we are looking for here this is a bar chart that is I'm applauding yeah let's see well one thing that we should note is that as we say here it's hard to tell what this represents because our graph is I'm labeling right we don't have an x axis or a y axis label or even a title of the graph so it's a little bit hard to tell what this is displaying we'll fix that in a later date but you'll see that in order for us to use the bar function we have to pass two lists of things the first that first thing is what goes on the xaxis and the second thing is what goes on the yaxis I think I think what this plot is if we were reading the narrative is that this is the days that it the days in the year of each planet so Earth the third planet has 365 days do we include pluto in this or is Pluto gone at this point it's Pluto even a planet anymore or Sophie well it looks like we have it looks like we have nine in there so I think Pluto is in there and so a year in Pluto must be 90 thousand days and so this this list is going to be our Y values for one the first thing to be 88 which you can hardly see the second thing to be 225 the third thing to be 365 the very last one to be this 90,000 so that's that's relatively easy the question is what goes on the xaxis and this is where python is a little bit annoying I would say so Sophie what like what is this big ugly range length days and year why do we need it what what does that mean right so I think it's I always find it helpful to kind of type code into the console and just see what things are so if you want to just print length or Elia and here you can see right what that outputs yeah so I can do that let me actually I so that's a great point Sophie one thing that's a little bit interesting about these exercises that we don't show you the output terminal only showing you the results of this but we're gonna actually do this on a fly where I'm going to share my entire desktop now I'm but but keep going Sophie okay well I we can skip it for now we can come back this can be something that we talked about on Thursday maybe okay anyway so Elian len that's gonna give you the the length of that list so we said there are nine values in that days and year list so that's gonna tell you le n days in year is gonna tell you that there's nine values in the days in your list and then the range function is just gonna get you basically a list with the all of the indices from 0 to 8 so it's gonna give you nine values that are evenly spaced apart by one yeah so it's gonna give you 0 1 2 3 4 5 6 7 8 so give us 9 values total and the reason why this is a little bit silly is that we're giving you 9 values for the Y dimension right we're saying we want 9 bar plots and so I would kind of hope and I think our does this it's pretty well where it knows okay we're making a bar plot you've given me nine values let me just place those evenly unfortunately Python wants the actual number is 0 through 8 to be to be placed there as well so you can see that on that on that graph 2 you can see that on the xaxis each of the bars is kind of over the number is 03 yeah so there's 0 there's one there's two and so on up coming in this lesson we'll go over like how to change these tick marks so because by default interest every other one so we'll go over how to you know label your graph appropriately all right let's see what they're asking it for us to do so we have a cafe that has some drinks and some sales for those drinks and so we want to use PLT bar to plot the number of drinks sold on the yaxis so let's go ahead and do the yaxis first since that's a bit easier so I'm gonna do PLT bar let me make my screen slightly bigger all right so there's PLT bar and let's do the yaxis first is that slightly easier so I'm leaving this place blank for the xaxis and the yaxis I just want to be number of drinks sold which we're stirring in sales and then for the xaxis I want 0 through 1 minus the total number of drinks and so like we saw in this example we can say okay I'm going to use the range function and the range function turn our list between zero and the number that I give it so I could like hardcode in one two three four five six so I could hardcode in six there and this would give me a list of 0 1 2 3 4 5 or be a little bit safer than hardcoding and I could say length of sales why why is it this slightly safer than hardcoding Sophia it is safer because imagine that you want to add something else to this later so you have another drink and you want to add a sales value for that one then you want to be able to update that value automatically instead of having to change it in the future especially if you have lots of spots that you're automatically making yeah exactly so maybe we can even do that in a second so let me let me run this and see hopefully I get the green checkmark which is great but my graph didn't show up and so this is kind of the last part that you'll do all the time in a MATLAB is kind of build up the graph that you're making and at the very end you call PLT dot show and that won't produce its graph here so yes let's demo really quickly adding like another value so if I add 100 so I add another type of drink here if I had hardcoded in 6 as the total number of drinks I don't even know what's gonna happen here in this this will be kind of funky because you know how it's 7 Y values but only six X values let's see what happens yeah so nothing it just didn't plot anything but if I change this back to point of sales there you go all right let's go on to the next one again in in the YouTube chat a few if you want us to slow down or have any questions or just want to chat with us feel free to say hi we'll keep moving on okay cool so we just made our graph and as you'll notice the you can't really understand what this graph is showing or what the point of this graph is because our labels aren't great so the first thing that we're gonna do is we are going to change these labels from 0 through 5 to actually represent the drink associated with the sales so we want the first one to be cappuccino and latte and chai and americano mocha espresso no I'm not a coffee drinker and also fee which one of these is your favorite ah I like a latte usually ok I really know yeah like could I couldn't give you the definition of what these things are I have no idea I think I could only tell you espresso and obviously like chai it wasn't obviously like shied is not you know it's not a tea that's a team yeah something ok cool but regardless we want to replace our replace our values here with the names of those those teas and so in order to do this there's a couple of steps that we need to do the first is that we just need to create an axis object and so this is the thing that we're going to be modifying we're right now we've just been creating a graph but we need to first create an axe on which to change information about it so I imagine this is the first step so first create an access object for the plot and store it in a variable called ax X equals I already forget the command yeah PLT thought subplot alright so that creates our access object so now what we can modify this access object to change the things that it's displaying we have kind of two two steps here and this first step isn't very intuitive the first thing that we need to do is we need to just tell the axis what ticks to show and so right what we're gonna end up wanting is we're gonna want one tick for each one of these we're gonna one two three four five six ticks and the way that we're going to set those ticks is just by passing it again a list of zero through five to get six total ticks the reason why this is important is because sometimes like we saw in the last example matplotlib will not show every tick that you want like it might skip the even ones or the odd ones and so by doing this we say we specifically want six ticks at zero one two three four five and five rather than just a ticket zero we'll just ticket which is the ticket for or something like that so let's go ahead and do that so we can do again forgotten the exact command so we can do it ax dot set X ticks oh thank you range and then again that length of yeah and note that that's the same thing as kind of listing out those numbers 0 through 5 like in the example the example I think just writes them all out 0 yeah exactly the exact same thing as this again we're just using that range function to do it automatically I think this might be might be interesting to demo if we just say let's say just give me the ticks one and four let's see what happens yeah so you'll see that it was tick marks then just show up that one and four yeah I highly encourage to encourage you to play with these things and just see what happens it's definitely something that I've done on these lessons as well it's always kind of fun yeah we have someone in chat a Herbert it's saying it's a little easier to read it and in our with ggplot2 Herbert so can I were just saying that I actually think I actually think the are code it's a little bit easier I get kind of annoyed by having to always make these lists of like 0 through 9 0 through 10 or whatever like I think it's silly that you have to add the X labels where R does that kind of automatically for you but maybe it's not to personal preference yeah I don't know I think ggplot2 is one of those things that where it's not always intuitive when you first see it but once you get used to syntax it is pretty clear and it can do a lot of things really quickly but I also love just besar ok big fan of base are plotting I know that's probably just because that's what I learned on but yeah yeah so for those of you that don't know our GD plot 2 is Oh what an R it's called a library or a package or does it have a it's a good question it's what's called a library yeah so much like matplotlib in Python is this library that we're importing to do graphing our has similar libraries where ggplot2 is the really popular our library for graphing that you have to import it but base are also has some graphing stuff and the syntax is just a little bit different ok cool so the last step with that is so we have our we have the number of ticks that we want we have 0 through 5 but they're still just showing numbers rather than the names of the drinks and so now we can use this function set X tip tick labels to change the change the text displayed here so so we want to change it too we want to again pass in a list of things and the list that we want to pass in it's our list of drinks minutes pass drinks I know in the last lesson we in the in the previous lesson there was a lot of content about like these these labels might start to overlap or you might want to like angle them slightly to happen read a little bit better all these like small little gritty details in that law wave is one of the advantages of using a programming language do graphing where you can imagine if you're familiar with like Excel or Google sheets you can make graphs in those but it's a little bit harder to customize to that level of detail of like really you know changing the exact label is how you want all that sort of stuff so I think that's one of the advantages of using a programming language like Python or R to do to do your graphing the other big advantage is that if you're a lot of times if you're making those types of types of adjustments in Excel for example you have to do all that manually and if you want to make a new graph with slightly different data you have to redo that manual a lot of the time whereas if you write out commands to do that in code then it's really easy to pass in a slightly different data set right or you know um some other list drinks and then pass in that new information and still retain all of the formatting Thanks hey so it's something that I think we don't go over in this lesson is I think there are white ick labels as well so let's just test this out and see what happens I've not tested this before so let's just set the white X to let's see it looks like right now it's going between zero and eighty so let's just give it 20 and 40 there we go and then we can imagine we can even do set Y tick labels to be some nonsense this is bad oh man it didn't even work interesting did I screw it up I think I screwed it up I think there's an extra there we go yeah so this works with the why label as well where you can both set the number of labels you want to show and then the labels themselves you can set cool alright oh boy side by side bar plots this is the this is the one that Sophie and I are like I can't believe there's not an easier way to do this in math lab so if you want to set up like what we were trying to do in this lesson and kind of the solution that we walk you through beer sure so we're trying to get basically a side by side bar chart which could be useful whenever you're trying to compare kind of two bar charts because if you were if you imagine this bar chart that we have where we've got US and China what does it say percentage of population over age 65 and if you imagine having all the orange bars in one chart and all the blue bars in a separate chart it would be kind of difficult to directly compare China and the u.s. if that's the comparison that you want to make so sometimes it's useful to have the bars right next to each other or stacked on top of each other I will say people in the statistics and data science industry sometimes have strong opinions about backed bar charts why what's the what's the what's the debate ah that it can be difficult to visual there are certain things that are more difficult to visually compare if you have the sacked chart so like if you have the stacked chart where you're trying to compare the sizes of the top set of bars to each other then it's difficult because they're all at different heights so you can't really compare if you imagine the US and China bars were stacked on top of each other and said and you wanted to compare a year to year just for the US then those orange bars if those were the top bars it would be harder to compare those to each other across years yeah let me let me turn on my cheat mode here so I can jump ahead to show this the stacked bar like this is a stacked bar plot and you're saying like it's hard to compare the orange bars here because they all start at different heights yeah exactly so I guess that's really a more of a statement about make sure that you think when you're trying to design what kind of chart you want it's important to think about what kinds of conclusions you want people to be able to draw from your data so if you know if you're really trying to have them compare across dates here for an individual country maybe you might not want a stacked yeah thanks but if you don't care about that you know there there are reasons that I think stacked bar charts could be useful but I have seen people with strong opinions tangent this is like a tangent but our people so against them that they'll say never use them is it like that vitriolic yeah I yeah I it's always funny I have worked with a lot of different people and I've kind of discovered there are certain visualizations that people have very strong reactions to and I think it's always it's interesting to try to develop your own opinions Oh what you think makes a good visualization versus not I know people that are very against pie charts in general I know of people that hate things like word clouds but you know I think some of those things can be useful in the right setting so I don't know but yeah so back to the purpose of this exercise is so we want basically we're combining two bar charts in this case and and we want the the bars to be sidebyside so that we can make a comparison both between let's say in this case US and China and across years and so having those bars sidebyside makes us makes it easier to make those comparisons simultaneously the the thing that's a little tricky because you saw earlier that you have to kind of set the location of those X labels manually or semi manually is that uh yeah I was seeing the chat yeah really depends on your audience totally yeah so the so the problem is that uh as you set those first locations of the bars now you need to space them out a little bit further apart to make room for the second set of bars so those blue bars are farther apart now than they were in our original plot and then you also need to take into account that those orange bars have to have be given the location as well and that has to be offset the right distance so all of those things we need to kind of set up in our X values that we pass to the PLT dot bar function before we can we can get the plot and the reason that this is a little easier potentially in are is that you can kind of do all of this without setting the location of the bars on the xaxis and in ggplot yeah exactly so like kind of the plan that we're gonna do is we're gonna say let's graph all of the blue bars instead of let's forget about easier right now let's say that this this mark was one this one was two with this one was three it's from this war we're gonna say let's plot all the blue bars at like point eight one point eight two point eight three point eight and so on and let's plot all of the orange bars at one point one two point one three point one and then on top of that that let's then draw our tick marks exactly at one two three four or five so that's kind of the plan is that we're gonna have our blue bars shifted a little bit our or or shifted a little bit and then our labels to be like right in the middle and so all of this depends on a couple of things it depends on how many data sets you have where you can imagine that if you have three data sets if we wanted to graph a third bar here the math would be a little bit different we'd have to shift things differently we want to know how many bars total there are so if we had more bars here we would obviously have to keep doing the math to do the shifting four more bars not not for just six or seven of them and then finally the width of each bar where by default matplotlib makes the width of each bar 0.8 and so that's what we're using here but you can imagine if the width of this blue bar was bigger the placement of the orange bar would have to been change accordingly so basically all of this is like kind of annoying math that you have to figure out about like where to put all these bars for this exercise we've given you this equation which is a little bit complex and it uses list comprehension and we can go over this in more detail I wish we have like a terminal again to like to be able to play around with it but we don't but let's say we are going to do you so this is just saying we have two we have two values here we have sales wanted in sales and what's gonna be get the X values for sales one sophiar yeah no no where is it trying to get the chat working again cuz I wasn't able to respond to anyone but no worries yeah and so fiat feel free to type in the chat as I'm like talking if you want to answer yeah I don't have this working quite yet so I'm gonna mute myself for a minute and okay um hello everyone in chat we see you so Pisa on our way all right so what we are going to do is we want to get these the X values for this first and I said and so we are going to copy this over again I don't love telling people to copy and paste and really what you should do here is like print out this x value stuff when if you had a terminal which you unfortunately don't but for now what we're gonna do is we're going to say okay this is the first thing in our data set there are two data sets total there are the number of sets of bars again we can just find that by doing the length of sales one that prevents us from hardcoding in you know this value of six things and the width of each bar again let's use 0.8 and I hope we run this what I do I'm supposed to store it in store 1x cool and in fact I'm gonna do yeah so that we now are going to use these x value it was in the graph itself so we're gonna say plot dot bar we're going to use the x values our store 1x the values that we've just created and the y values are going to be Salem's one and there we go so you'll see there are blue bars and they're slightly offset from the like one the exact values in fact let me add tick marks here so oh shoot what was X tick label yeah it sticks to be range length of sales so idea I'll just add all of the ticks I think you want to add xx at store one underscore X to see where those oh sure and then I didn't get the name right I don't think oh I need to create the axis so that's X is plot dot so plot and then and then it's not X ticks let me go back and see what it was set X ticks so I just did two things really quickly which let me explain that again remember in order to set the tick labels you need to create this axis object and then we use the axis object to set the x ticks and so there you go you'll see that here are our that's like where 1 2 3 4 & 5 are and why is that not what we expect so here's what's going on here what are you trying to do oh it's not the way thermistor x1 it's just yeah I was just trying to get the yeah so there there's our there's our tix where this blue bars at 0.8 this one's at 2.8 that one's at 4.8 cool so let's then do the same for the second second set of things so I'm going to grab this and I'm gonna say okay we are now graphing our second data set or two data sets total we have sales to length of sales and we're gonna store it in store 2x and then we're going to again plug another bar part of the second set of bars and the y value is not going to be sales one anymore it's gonna be sales basically it's the same thing it's just our second data set nice and now finally let's see what the instructions are here let's let me just delete this axis stuff for now we show our axes without modifying them you'll see there we go there they are side by side and yeah our x axis isn't super helpful right now yeah what's the question the chat Herbert says so it's offset because of the width of the bars yeah exactly we could even play around this and see what happens if we increase the width to make these bars really wide well it's oh I think that actually as you are playing around with this before I think that the width of the bar is actually also an input PLT bar so if you just really quickly in your two calls PLT bar adding like a yeah it makes it I'm sorry I said it again Sophie I think it might just be with what I can so if we set width equals to two can Herbert says no emitter edit stack bars oh well that kind of that kind of works they're like on top of each other and they definitely have a width of two now but why did it not move them over properly is it because it surprises me that's also surprises me let's see what happens if we so I'm just gonna create a variable called a bar width because we're using the same variable everywhere so we just set this to bar width and then set this to bar width set this one's a bar with this one okay that's back to our original grass what if we make it small oh there we go yeah so interestingly but like the gap between them is bigger right so it's like and if we if we crank it up to two now the gap between them is you know thing so for some reason we're not getting that spacing correct I imagine it's in this formula that we've given you yeah you either go ahead tell me the other thing that I've seen so for anybody that has used our before one of the nice things about our is that when you're working with vectors when are so vectors are kind of similar to lists and that it's just a basically like a list of numbers that you could have in a back there so just like how you have the like store one underscore X those should be you know the values that you want along that xaxis you could store those in a vector and are and one of the nice things is that you can do in are automatically if you just said store one X plus two it would element wise add two to every value in that vector instead of needing kind of like a formula like this so you could just kind of offset automatically and in Python you can replicate that with numpy so if you are storing those X values as an umpire array which is just numpy is another library that has a new some other set types of data structures and this is probably too complicated to go into here but in this case we're storing our X values as a list which requires that we use this kind of complicated list comprehension thing but if we stored it in an umpire array it would be kind of more like our where we wouldn't have to use this list comprehension to figure out each of the to replicate each of the X values from a formula yeah so for example it's like if we had this list if we wanted to just add two to everyone just like shift everything over by two in our Sophie you're saying we could do something like that where is this what if this is a vector in this learning environment can you like load numpy as MP yeah yeah and then if we say like store one underscore X yeah with that after after that line no leave it as is but then after that line if you write store one underscore X equals NP dot array store one underscore X and then try just saying store to underscore X equals store one underscore X plus whatever like what sure and then we get rid of this guy so basically what we're doing is we're defining our first set of X things and then we are transforming them into a numpy array which again numpy is this kind of often used math Matthew library I always called it numpy and people I don't know I don't know and then we are adding two to this array which will take every element in the array and add you to it hopefully you'll see if this works okay same thing let me do plus point eight and then change bar with two point eight yeah and so so say same thing and again we're not exactly sure why we would have to play around more with if we want to really thick bars what to do but the point of all of this is that we're able to really like change you know everything about this graph if we wanted to dive into more about why these are overlapping right now we could like really start printing out all these values and figuring out why they're fine they're overlapping a couple of questions in chat will this be recorded on YouTube yes this is all these YouTube recordings are going into a playlist this is the like seventh video in the series and you can catch up on all of them already they're all in a playlist on YouTube huh what does a recommended text editor for Python I use really basic text editors I used to blaim which is doesn't have very many fancy features but it works for my purposes so preview of a preferred text editor I usually when I work with Python I usually just use a Jew no book yeah that's a but yeah duper no clutter but yeah we have a lot of material about goober notebook on Codecademy and any any project on coke Adam II where he'd be asking to do something in Python off the website on your own machine we asked you to do it in dupe your notebooks and we have lots of information showing you haven't get that set up and numpy versus lumpy mike mcruiz i I think it's numpy I think as a in my before I knew better I was calling a dumpy but everyone correct me on it I'm like what the heck are you talking about Python yeah it makes a lot of sense numerical Python I think uhhuh make sense right let's do these cursed stack bar plots all right so similar to the sidebyside stack bar plots we're gonna do something similar where we are going to be able to say so a parameter of PLT bar is this a bottom parameter and basically what that is what this is is this little can be a list of places where you want the bar to start so in this example this bottom yeah you'll see it's video game Ares it's 1 2 2 1 2 and so we are plotting the orange bars start at the first one starts at 1 second one starts at 2 the third one starts at 2 second one starts at one and the third one starts at two so basically this bottom parameter is saying give me a list and I'm gonna start your the y values at those numbers and go up from there so what we can do is we can say okay if I know my x values if I know how high these blue bars go I can start the orange bars at the top of the blue bars so let's go ahead and do that let's see instead of making it a stack bar plot you think you were bought on put sales 1 bars on the bottom and set sail two bars to were sterile sailes one bars end so let me get first you the bottom one so that is on the xaxis I'm going to have let's see again my range of length of sails one and then my yaxis is gonna be my yvalues are just gonna be the values in sales one and then my second data set it's gonna be the same exact thing except for sales technically I don't even need to change this because it's the same length but I might as well just to be safe so I'm gonna be using the sales data as my Y values and the only difference is now I'm gonna say I want my second data set to start and the values of sales one let's see if I did this right sales alone is not defined oh no underscores come on there we go so if you have anything any comments on on this stuff or any any thoughts it's okay if you don't we kind of talked about all right let's do this a legend so this was something that we taught you in an earlier lesson so you can add PLT dot legend and let's see let's just do people t don't ledger then see what happens do I make sure to add a legend PLT it thought legend so let me I think you have to put the labels and balls in there yeah so put them into PLT dot legend I think as the parameter oh really let me do it the way that I know works and then we can play around with the other way so I was interested to see what happened with the asking for a legend when we don't leave on these data sets I thought maybe you would just say like the police at is one and the orange that is two but it seems like we need to actually say the e blue sets I'm gonna give the label of in the instruction we asked for location one and in this one we asked for location to see what yep there we go and Sophie you think that if we we don't read them that was completely asset listen list maybe I know I'm secondguessing yourself but again something you could try I know that I think legend takes an integer that will move the legend around and maybe not maybe I'm maybe I'm wrong anyways in in the lesson that we just did last week we could go over this legend parameter and there's definitely a way to this this legend in two different parts of the graph yeah cool all right we got five minutes left or we got ten hours left I guess but uh oh we're talking way too much yeah but this is you know it's it's helpful just that we're like doing tons of random stuff which I hope is helpful for folks I want to save the last five minutes to show people how to get into the yum that call on Thursday if they want to join us for that so let's do it maybe just this last section cool so this is all about error bars so be when do error bars typically show up or like what's the purpose of error bars how do you use them in your graphs sure yeah so I think in general a lot of statisticians and data scientists care a lot about uncertainty and so whenever we collect data and we're trying to say something with that data usually we want to communicate something about how certain or uncertain we are about the result that we found and so it depends on what you're what you're demonstrating but in this exercise it's kind of silly you've got like types of drinks and ounces of milk in those drinks but let's say that somebody really cared about how much dairy they were consuming and so they wanted to know how much milk there of the different types of milk they were getting in their drink and let's say you ran an experiment you kind of you worked at a coffee shop and so you actually measured how much milk was going into each of these drinks and every barista is pouring a slightly different amount and so you kind of got a sense of how much variation there is then the error bar could kind of communicate then how much difference there was between different baristas like it's supposed to have six ounces of milk but that could be as low as five point five and and as high as six point five so I think in this example we're just using like a percentage as a way of coming up with these error bars so we're saying it's like 10% above and below the value but in practice usually people use some sort of measure of variation in the data so looking at one how much data there is and two how much variation there is in kind of a full data set nice yeah that's an excellent description I think yeah for the purposes of this we have this little toy example but most of the time when you're using error bars in the real world you don't go through some process of actually figuring out that how much error there is in the in whatever day that you're collecting cool so let's go ahead and add error bars for a matplotlib graph you'll see that we're gonna use a couple of different things we're going to use this Y error parameter that we can pass to a bar we're always going to use capsize so Y error is going to take a list of values and the cap size just takes a number so in this example I'm trying to think maps to to this above the FIR bar is going to be ten units high and the error is going to be a total of one unit and I wonder if it's one unit on each side that's actually important in that I think it is one unit on each side but that's something that that's okay do you think this first bar isn't one do you think that's one on either side or is that one total I think it's a one on either side yeah I do too I think we say that up here it's plus or minus two so this is plus or minus one but that's something that it's definitely important to know and then finally the cap size is a pretty easy primer that's just defining how long the caps on these error bars are just to make it a little more legible so let's go ahead and do this all right so well this information has a bar chart so we're plotting again my x values are just going to be number is 0 through the lengths of things that I have so I have a bunch of drinks and let me actually do ounces of milk even though again this is the same as if I'd been drinks in there and on my Y I want to be plotting ounces cool so there's my ounces of milk for each of these things and now we want to plot this error list which as Sophie was saying this is just 10% of the ounces of milk so the first one 10% error would be 0.6 10% error so if 9 would be 0.9 and so on so I'm gonna plot those errors by using our Y air parameter I'm just gonna set that equal to this error list that I have there we go there are my error bars and then finally ya add a cap size of 5 thanks well and there are error bars don't you see what happens if a cap size 20 like how ridiculous we can make this it looks like it probably maxes out in the width okay cool so I think we're gonna pause here for today let me show you for everyone that's in chat or watching this live let me go to code Katmai so again we're running these live sessions on YouTube every Tuesday at 100 p.m. Stoker we're watching this in their recorded version we'd love to see you live if you can make it but if you can't make these sections you are a pro member we also have these pro like we're calling them Q&A sessions so let me show you how I navigate here this is the front page of Koch Adam II down here we have the events page and you'll see that on Thursday the 9th we have a pro Q&A with me and Sophia and we will if you click into this again you can only see this page if you are a pro member if you click any here to register you can register for a resume call and we will get on that call and talk with you at all on Thursday Ariel you asked me if I have coronavirus now I don't I just have for vocal so Nelson yeah we hope to see you there again the idea behind the idea behind these sessions is basically we want to this is like your clan to ask more questions right like you're here in chat and we're able to answer you quickly but we're also going through this lesson and so I really want to turn these live Q&A calls into like array vo show where you can like call in get on the call with us we can like answer your questions you can screen share and show us your code and we might talk about something you have we actually did that once with someone on a call Huey you have to question about how to set up like data collection for his job he had a bunch of like really oldschool machinery that he needed to collect data on and ask this question about that so we were able to talk to him a little bit about that I so Sophie and I are gonna be on the one this Thursday I imagine we might dig in to are a little bit if nobody has questions for us but again these shows are like pretty open for whatever you want to do so we'd love to see you all there as a new member of this team it's been especially fun for me to get to see to meet some of the people that are using the site in in person because because I'm coming from a teaching background and I love you know talking to people so I would love to see as many people as want to join their and I'll tell you all of my opinions about visualization yeah and and Tony Antonia may be in the track we have two minutes here so Antonia can answer your questions super briefly of how could data be how would visualize data Python help me in marketing I think a lot of times marketers will use will have questions about the thing that they were trying to market so I that I know it cook ad me right we have questions about how many people are taking our courses how popular you know if we're thinking about making more our courses how popular were our own hold our courses and so being able to like go through that data and create visualizations based on that helps helps you in making business decisions like that yeah anytime you have data especially like a at a company where you've got lots of people interacting with different marketing emails you might be sending or products that you might be launching and you have information about how they're using that and who's signing up or anything like that if you have a lot of data it's hard to kind of parse it and most people I think prefer to have a visualization to kind of see what's going on versus just looking at rendezvous data or even like a table summarizing data can also be hard to parse so I think I mean data visualization is probably one of the most important skills and like any job my own biased opinion no I agree with that all right cool let me stop sharing my screen yeah so I think that's it for today thank you everyone that caught it caught us live I really love seeing all of our regulars like I do recognize people that are here every week we see a chubs who else is here her but this is the first time I was seeing you but you asked lots of great questions so thank you for watching the whole thing Michael Cruz always gives us a pacing feedback so yeah you know this is like a new thing that we're trying and yeah I super appreciate people that are that are checking it out Sophie did you have fun I had a lot of fun also question are newbies welcome and I think the answer is totally yes yes yeah do you need a period of time on the site to be allowed into these sessions or newbies welcome yeah Brian these free sessions that we're streaming on YouTube totally anyone is welcome and same thing with the private sessions if you were interested in joining that totally welcome were like people asking questions is the best way for other new people to learn as well so I'm sure there will be other new people in the chat that have the same questions as you and so somebody come and ask that question can help all of them so absolutely in people welcome cool all right well we will see hopefully see some of you on Thursday and thanks for watching bye everyone
