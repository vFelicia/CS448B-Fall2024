With timestamps:

00:00 - three
00:01 - two
00:02 - one
00:06 - all right and i think we are live
00:09 - welcome everybody we're celebrating
00:10 - national coding week with live coding
00:13 - lessons throughout this week
00:15 - i'm ferian community manager at code
00:16 - academy and this with me is ben senior
00:18 - curriculum developer code academy
00:21 - i'm going to be telling you a little bit
00:22 - about about then and then i'll hand it
00:24 - over to him ben is focused on building
00:26 - mobile development content like our ios
00:28 - developer career path
00:30 - before code academy he started out as a
00:33 - middle school math teacher uh teach for
00:35 - america and after that he worked as a
00:37 - program manager at non-profit coding
00:39 - boot camp where he taught himself how to
00:41 - code
00:42 - since then he's been an ios instructor
00:45 - developer and a director of curriculum
00:48 - welcome ben
00:49 - thanks great to be here um really
00:51 - excited for this live stream
00:53 - i had everyone watching now live and hi
00:55 - to everyone who's watching the recording
00:56 - later i'm really excited to get into
00:58 - some portfolio building today so over
01:01 - the course of the live stream today
01:02 - we're going to be building out a tech
01:04 - portfolio using html uh and then adding
01:07 - some css to give it a little bit of
01:09 - style
01:10 - we're going gonna have another session
01:11 - on wednesday where we're gonna pick up
01:13 - where we left off and then take the
01:15 - portfolio to the next level by adding
01:17 - some javascripts to make it interactive
01:19 - with the dark mode if you don't already
01:21 - know that tech portfolio is your ticket
01:23 - to getting a coding job three can
01:25 - showcase your skills experience what
01:27 - makes you unique and the kind of coding
01:29 - projects that you're most proud of
01:31 - so really excited to be building this
01:33 - out for us here over the course of these
01:35 - couple live streams
01:37 - uh on friday uh we're going to teach you
01:40 - how to build one of our most popular
01:42 - portfolio projects that explores mba
01:44 - data so make sure to check out the
01:46 - portfolio projects page for some more
01:48 - information
01:49 - uh as we are going and building out our
01:52 - content here today uh feel free to ask
01:54 - questions so we're monitoring chat so
01:57 - you can see now people are asking how
01:58 - long the live stream is going for each
02:00 - live stream will be an hour so
02:03 - we'll have one hour of live stream on
02:05 - today on wednesday and on friday uh i
02:08 - can look and help answer questions we
02:09 - also have two curriculum developers
02:11 - lucas kenny will be monitoring questions
02:14 - as well and we'll take some questions as
02:16 - they come up while we're over the course
02:18 - of building content
02:20 - uh
02:21 - for uh more details on what we're doing
02:24 - for national coding week you can check
02:25 - out the link in the youtube description
02:26 - that you're watching from here so again
02:29 - super excited to be here to be helping
02:31 - build this out and showing you a little
02:33 - bit about what you can do with html and
02:36 - css
02:37 - so i'm going to go ahead and get right
02:38 - into it so i'm going to go ahead and
02:40 - bring up
02:41 - the codecademy platform right here and
02:44 - so what we're looking at right now is
02:46 - just the codecademy homepage
02:48 - now we're going to be building out our
02:50 - portfolio using the workspaces feature
02:54 - inside of codecademy uh if you have pro
02:57 - great you already have an account you
02:58 - can get right into it if you don't it
03:00 - might ask you to make a free account and
03:02 - then you can go and build your own space
03:05 - so i'm going to just click on this blank
03:07 - workspace and end up with whatever
03:09 - defaults we get here and i'll take the
03:11 - link that i get from this if you want to
03:12 - follow along as we're building it
03:15 - you can certainly do that so this is the
03:17 - link here to the workspace that i'm
03:19 - going to be working in you can either be
03:21 - following along here following along
03:23 - with the link as we're building things
03:25 - putting your own up or just watching to
03:27 - get a sense of what we're building here
03:29 - now if you already have some background
03:31 - in html and css fantastic you'll have a
03:34 - little bit more context for what we're
03:36 - building and why we're building it if
03:38 - you don't that's free too i'm going to
03:40 - be going
03:41 - pretty slow over some of the
03:43 - foundational concepts and really trying
03:45 - to make sure that i'm explaining
03:46 - how stuff on this left part of the
03:49 - screen
03:50 - ends up making a website so
03:52 - we're going from nuts and bolts to be
03:54 - building out our portfolio website
03:57 - now
03:59 - let's start here what is the portfolio
04:01 - website well why might we want to be
04:03 - building something so as i said earlier
04:05 - portfolio website's a great place to be
04:07 - showcasing who you are as a developer
04:10 - once you're ready to start talking to
04:12 - prospective employers
04:14 - now you can make anything a portfolio
04:16 - website some people have been very
04:17 - creative and done things like made a
04:19 - side scrolling games or portfolio
04:21 - website which is very creative it's most
04:24 - standard to have a portfolio that's just
04:26 - going to show yourself a bio and some
04:29 - list of accomplishments that you have
04:30 - with some links to projects you've
04:32 - worked on before
04:33 - i've actually
04:35 - we here at codecademy have asked our
04:36 - design team to build out a portfolio
04:39 - that they think represents a really
04:41 - well-designed personal portfolio
04:44 - and this here is what we're going to be
04:45 - working towards in the live stream they
04:47 - built this here using a tool called
04:49 - figma and so that's a tool recently
04:51 - owned by adobe or bought by adobe that
04:53 - you can use to build out designs there
04:56 - are many tools that you can be using to
04:58 - build out portfolios this is just one of
05:00 - them uh it helps to have an idea in your
05:04 - mind of what you're looking to build
05:06 - before you get started you certainly can
05:08 - just start messing around and
05:10 - organically finding out how you want to
05:12 - be building your portfolio but taking
05:14 - the time beforehand to try to write out
05:16 - a little bit of what your end stage is
05:18 - and where you're going to will make your
05:19 - work a lot easier because you have that
05:21 - clear goal in mind
05:23 - so this is what our codecademy designers
05:25 - have put together for a well-designed
05:27 - portfolio so we can see here that we
05:30 - have our bio section up at the top we
05:32 - have this header and footer at the
05:34 - bottom we've got some recent work that
05:36 - has our projects that has some links to
05:39 - where you can find them that has some
05:40 - nice images
05:42 - uh
05:43 - and that's our portfolio that we're
05:44 - gonna be working towards okay
05:46 - this is just what we're gonna be working
05:48 - towards for this particular live stream
05:50 - you can make whatever you want to uh you
05:52 - can
05:54 - have your
05:55 - own artistic vision that you're putting
05:57 - into what your own portfolio should look
05:58 - like
05:59 - so this is using a tool called figma
06:02 - we're not going to be getting into it a
06:03 - ton
06:04 - for all of the features and how to
06:06 - actually use sigma to build things in
06:08 - this live stream we do have a course on
06:10 - codecademy that goes into much more
06:12 - detail about ui ux design and figma um
06:15 - and i think we can get a link to that in
06:16 - the chat that you can take and look at
06:18 - if you're interested in finding out more
06:20 - about how to use this tool
06:22 - okay so sigma here we're just using as
06:25 - like a pdf so we're not going to be
06:26 - sharing this here with you but we're
06:28 - going to be using it as a baseline for
06:30 - what we're building
06:31 - okay
06:32 - so let's take a look here at where we're
06:35 - starting in our application so we have
06:38 - our initial workspace that is built out
06:41 - here
06:42 - we have our
06:44 - panel on the left with our html and we
06:46 - have how it's rendered which is our
06:48 - website now this is a website so we have
06:52 - successfully built just by clicking that
06:54 - uh
06:55 - new workspace button a website it's not
06:58 - hosted in the place that we can share
07:00 - yet and we have more information on
07:01 - codecademy about how you can actually
07:03 - put it and host it on something like
07:05 - github pages or your own server so that
07:07 - anyone can find it more easily but this
07:10 - is a website it has text it has colors
07:12 - it has some things that you might expect
07:14 - from it let's take a look at the html
07:16 - and figure out what exactly is this here
07:18 - and how does this work
07:20 - so
07:21 - we can see that we have recognizable
07:24 - text somewhere inside this mess of
07:26 - different colors that ends up on the
07:27 - right panel here this hello world shows
07:30 - up on the left side and on the right
07:32 - side as we change our text to say hello
07:35 - live stream
07:36 - and then we click the save and run
07:38 - button or which i've if i'm not moving
07:40 - my mouse i'm going to just clicking
07:42 - command return for the moment on a mac
07:44 - or it would be control return on a pc
07:47 - you can see that the text updates so
07:50 - all of this text here that shows up you
07:52 - can just update and you are building a
07:54 - website here with just editing some html
07:58 - so this can be whatever you want
08:02 - and then you're putting it together here
08:04 - so
08:05 - this here is the nuts and bolts of how
08:08 - you can be changing text around to make
08:11 - something appear in the website that
08:12 - you're building now if you look a little
08:14 - closer you'll notice that these bits of
08:16 - text look different from each other this
08:18 - one's bigger and this one's smaller why
08:20 - is that well if you look here
08:23 - in html
08:25 - you have these
08:26 - uh
08:27 - tags here that surround each bit of text
08:30 - so each of these tags stands for
08:33 - something this h1 stands for a header
08:35 - one and this p stands for a paragraph
08:39 - tag so how do you know what all the html
08:42 - tags and what they do
08:43 - uh they're looking online as one option
08:46 - or our codecademy docs goes into a lot
08:49 - of html details so you can see all of
08:52 - the different tags that are available
08:54 - uh within html tags or elements to see
08:57 - what can you add in and this is a whole
09:00 - big list of all of the different
09:02 - elements you can have inside here so
09:04 - we're seeing that there's an h1 and
09:06 - we're using a p tag there's a bunch more
09:09 - we're not going to talk about every
09:10 - element over the course of the live
09:11 - stream but this is one place that you
09:13 - can go and i'll just add the link in
09:15 - here or you can go and find uh
09:18 - information about all of the tags that
09:20 - we're using on our academy docs
09:23 - so
09:24 - an h1 stands for a header one
09:27 - a header one is a big tag and it makes
09:30 - the text show up very large
09:32 - if we have a different size header we
09:34 - can go and make this text bigger or
09:36 - smaller so instead of having an h1 we
09:39 - could have an h2
09:41 - and that's going to make the text appear
09:43 - a little bit smaller
09:45 - this goes all the way down you have can
09:47 - have headers of size
09:49 - three four or five whatever you want to
09:51 - have different sizes of text get this
09:54 - little nice rainbow effect going down
09:55 - right here so a lot of different sizes
09:58 - of headers that you can make possible
10:00 - and then having a header four is really
10:02 - kind of the same size as paragraph
10:06 - so we can have our headers and then this
10:09 - here is a paragraph paragraph is the
10:11 - easiest way to make text appear in a
10:14 - document so you can add additional
10:16 - paragraphs
10:17 - and as you add additional paragraphs
10:19 - they come up next to each other so or
10:21 - they say they don't come up just next to
10:23 - each other they come up as new
10:24 - paragraphs where you have one below the
10:26 - other like you're making a new text
10:29 - other common tags that you can see is
10:31 - you can use these strong tags to make
10:34 - something bold
10:37 - and then you can see it
10:40 - make it a strong
10:43 - tag to make content bold
10:46 - and then you can see that this u shows
10:48 - up bold now
10:50 - importantly with html tags they all have
10:52 - a beginning and an ending
10:55 - so as we made this new one here we can
10:56 - see that it starts with this strong
10:59 - inside these angle braces and to show
11:01 - that it's ending we have the same syntax
11:04 - syntax being the way that we're writing
11:06 - things
11:07 - um except we have this forward slash
11:09 - before
11:10 - that lets the
11:12 - web let's your browser know that you're
11:14 - starting something a strong tag you have
11:17 - some content and then you're gonna end
11:19 - it so once you make one of these
11:21 - starting tags you're making a promise
11:23 - often that you're gonna end it with
11:24 - something and if you don't have it it'll
11:27 - start to get confused and you'll have
11:28 - some unexpected behavior that doesn't
11:30 - know when it's the ending of
11:33 - uh
11:34 - great
11:35 - so that's really the nuts and bolts of
11:36 - html you have these tags that need to
11:39 - start and end and they can contain
11:41 - content inside them there's a few more
11:44 - other
11:45 - tags in the boilerplate we can see one
11:47 - is just the big html tag that says we're
11:49 - going to start and end all of our html
11:52 - we have this head tag which shows a
11:54 - bunch of information about kind of the
11:56 - document itself so like the title and
11:59 - this here is how to show up on different
12:02 - devices and this here which we'll get to
12:04 - in a little bit is uh how we want our
12:07 - page to look and be
12:08 - styled uh this last one here body is a
12:12 - way of just illustrating what is the
12:14 - main need of our website what's in the
12:16 - body there
12:17 - so
12:18 - now that we have a little bit of a sense
12:19 - of kind of the nuts and bolts of html
12:22 - let's take this design here and start to
12:25 - actually be building it as this is the
12:27 - portfolio that we're going to be
12:28 - building out today
12:30 - hey ben we can see first that we have
12:32 - this text here
12:34 - yeah go ahead
12:35 - uh i want to jump in before we get
12:36 - started with this and the next section
12:39 - could you possibly make this font a
12:41 - little bigger on the editor so that
12:43 - people can see it better
12:47 - that is a good question and
12:50 - i will
12:51 - zoom in a little bit here which i think
12:53 - should help
12:54 - thank you so much yeah thanks thanks for
12:56 - that
12:58 - uh okay cool so
13:01 - now with our slightly larger font let's
13:03 - go ahead and get into starting to build
13:05 - this out here
13:06 - uh
13:07 - so
13:08 - first we'll go ahead and take this bit
13:11 - of text and then just copy this over
13:14 - into
13:15 - this header so instead of saying hello
13:17 - live stream it has some more information
13:19 - about the portfolio person that we're
13:22 - building out here
13:24 - great so we've gone and added that
13:26 - content in right here
13:28 - so next we want to go ahead and take
13:32 - this bit of text so it's a little bit of
13:33 - a bio again we're doing it for this
13:35 - person if you're building your own
13:36 - portfolio you should be writing except
13:38 - describes yourself for your own
13:40 - interests
13:43 - and that shows up just fine as well all
13:46 - right so far so good we have this here
13:49 - which is going to be a link so some kind
13:51 - of button we haven't talked about that
13:53 - yet but a common way of having links
13:55 - show up if you want to click on
13:57 - something and have
13:59 - and be able to look at something else
14:01 - is to use what's called an anchor tag
14:04 - anchor tags are shown with an a same
14:07 - thing here text goes inside
14:10 - and then you have the closing tag to say
14:13 - that you're done adding your anchor
14:16 - now by itself this doesn't look
14:18 - different you know it's not a link it's
14:19 - just text
14:21 - and that's because we need to give it
14:23 - more information about what should
14:24 - happen when you click on it
14:27 - so far each of these tags we've been
14:29 - adding has just been the tag itself
14:31 - it's also possible within a tag
14:35 - to specify more information about where
14:38 - you want to be going or about anything
14:40 - else about the tag that might be
14:41 - relevant we can see up here some
14:44 - attributes already that came inside so
14:46 - this link has an href and a rel has two
14:49 - attributes
14:51 - we're going to do the same thing for the
14:52 - anchor tag and we're going to use this
14:54 - href to show what should happen when you
14:57 - click on it where should it go
14:59 - and this can be whatever website you
15:01 - want so we're gonna go and just put in
15:03 - that we're gonna go to codeacademy.com
15:06 - and now we can see that this link shows
15:07 - up and it's a thing that we can click on
15:10 - when we click on it we'll notice that it
15:13 - navigates us
15:14 - to codecademy now i cheated a little bit
15:17 - because in these editors it's often uh
15:20 - hard to navigate directly so if you try
15:23 - to put a different link like google
15:26 - you actually get some kind of error here
15:28 - and this is because we in this
15:30 - environment uh we are still within the
15:33 - codecademy ecosystem so we can't go to
15:36 - and embed those other websites
15:38 - what we can do instead is we can add a
15:41 - target attribute which says what should
15:44 - happen when you click on it and blank
15:46 - means open a new blank tab and go to
15:49 - that website in that
15:51 - new blank tab instead and so that's a
15:54 - common paradigm you'll see with links is
15:56 - i don't want to interrupt all the work
15:58 - i'm doing i just want to open in a
15:59 - different tab
16:00 - okay
16:02 - so
16:02 - uh
16:03 - good thing from chad good question yes
16:06 - you can use either single or double uh
16:09 - quotation marks for any of these links
16:11 - in here
16:12 - it is best practice to pick one and be
16:15 - sticking with it uh you can see our
16:17 - defaults here has been that we come with
16:19 - these doubles so i'm going to be using
16:20 - that as we build here but it is a very
16:22 - good note that either of those works
16:24 - with uh html other languages are
16:27 - different so some languages handle those
16:29 - differently where you have to use i
16:32 - think they're only single or only double
16:33 - and be consistent
16:35 - okay
16:36 - so
16:37 - now that we have this link built out and
16:40 - we want to go and add in this image here
16:44 - uh to add an image we're gonna break the
16:47 - rule that i just said where you have a
16:48 - starting and an ending tag because
16:50 - images don't really have any text that
16:53 - go inside them for all of these tags
16:55 - we've had things in between the
16:57 - paragraph here or for this header too
16:59 - we've had
17:00 - text that goes in between that for an
17:02 - image we really just want the image
17:04 - itself so
17:06 - we're going and we can just add the
17:08 - source here
17:11 - to say
17:12 - where should the image be
17:15 - so
17:16 - the image here we're going to say that
17:18 - the source for it should be
17:20 - it can be anything any image that you
17:22 - want from anywhere on the internet so if
17:24 - we go to some free image hosting site
17:26 - like say pixabay
17:29 - we can go
17:30 - and look at a free royal royalty-free
17:33 - image take that image
17:36 - and then add it into our application
17:39 - so this image can be any image you want
17:42 - and we can see that immediately shows up
17:44 - in our website right here
17:47 - okay
17:48 - so
17:49 - now that we have an image and we might
17:51 - want to make it the actual image for our
17:53 - portfolio again this is the image i'm
17:56 - using if you're building your own
17:57 - portfolio you should be using your own
17:59 - image here so that you can have your own
18:01 - picture on your portfolio so we'll go
18:03 - ahead and take this image here which i
18:06 - will put the link in just in case you
18:08 - want to use the same one
18:11 - and then we'll go ahead and add that to
18:14 - our portfolio
18:16 - great so now we have
18:18 - all of the core elements built out from
18:21 - this diagram right here now
18:24 - if you were building this out and say
18:26 - you're working at a company and your
18:28 - design team handed you this and said we
18:31 - want you to build a portfolio page or
18:33 - website that looks like this and you
18:36 - delivered them this website and said
18:38 - well i did it it has all the content
18:40 - that we should have that probably look
18:42 - at you quizzically and say what are you
18:44 - talking about like this doesn't look at
18:45 - all like we said
18:47 - even though the content uh is all there
18:50 - it looks very different from how this
18:54 - bit of content is supposed to look based
18:56 - on the design that we got from our
18:59 - design team
19:00 - and the reason for that is because we
19:03 - haven't added any styling to our page
19:06 - so
19:06 - our page has the basic styling that just
19:09 - came with this workspace
19:11 - we need to edit that so that our page
19:14 - looks more like the page that we wanted
19:17 - to that we built out from before so we
19:19 - can go ahead and take a look at the css
19:22 - to figure out how to make that a reality
19:25 - we see on this left panel we have all of
19:28 - the files that come pre-packaged in here
19:30 - as i'm looking at i see this is untitled
19:33 - we might want to call this something
19:34 - like
19:35 - uh portfolio
19:37 - so that we can go and find it later
19:41 - this comes pre-packaged with an index
19:44 - scripts and a style
19:46 - so all of these are
19:49 - files that come with our portfolio so we
19:52 - can go ahead and look at any of them and
19:54 - then change them to modify what our
19:56 - portfolio is going to look like
19:58 - back when we looked at this link we saw
20:00 - that it was using this style.css
20:05 - href here this uh style.css file which
20:08 - we actually have right here
20:11 - and the reason why we have this black
20:13 - background and white text is because
20:15 - we're specifying it right here we have a
20:17 - background and a color that are actually
20:19 - specified inside this file now we don't
20:23 - want it to be black and white we want it
20:25 - to be mixing along here
20:27 - with what we have from our page here
20:31 - so we want to go ahead and then add to
20:35 - change the background to this color
20:38 - right here
20:40 - so we'll go ahead and change the
20:42 - background
20:44 - and that will make the text show up as
20:47 - the same background color that we have
20:48 - from this link here
20:51 - but the text is unreadable because the
20:53 - text is still white we can see it's
20:54 - still there when we go ahead and move
20:56 - our mouse over it but it's not showing
20:59 - up in a way we can see
21:00 - so we're going to go in and then change
21:03 - the color
21:04 - to be
21:05 - this darker color here and then update
21:08 - it to be
21:10 - this not quite shade of black but this
21:14 - kind of darker blue color here that we
21:15 - see
21:16 - now if you're new to this year like what
21:19 - are all these letters doing here how
21:20 - does that specify a color
21:22 - so what this means is that we have uh it
21:26 - is called hexadecimal which is one way
21:28 - of specifying colors
21:30 - so we can go ahead and look at the color
21:33 - here and there's actually a few
21:35 - different ways that this can be rendered
21:37 - hexadecimal is a base 16 number system
21:39 - which shows you one way of understanding
21:41 - colors
21:42 - you could also see the same color for
21:44 - just how much red green and blue it has
21:47 - that's relevant here so
21:49 - there's a lot of that depth that you can
21:51 - go into with adding colors we have more
21:53 - of that in our ui ux source for now
21:55 - we're just going to be using these text
21:57 - colors as colors and then going from
21:59 - there
22:00 - okay
22:01 - so now this is looking a little bit
22:03 - better as compared with what our
22:05 - original design was but it's not quite
22:08 - the same so
22:10 - one big thing that's missing is all of
22:12 - our content here is top to down
22:15 - so
22:16 - that's not really what we're looking for
22:19 - we would like this here to be side by
22:20 - side instead so that's what we're going
22:22 - to try to build out so how can we make
22:24 - our content appear
22:26 - not just like top to down but side by
22:29 - side
22:30 - another thing that's not quite right is
22:32 - this image feels way too big so this
22:34 - image here uh
22:36 - is
22:37 - like much bigger than this image here
22:39 - and this text here
22:41 - is too small this text should be a lot
22:43 - bigger
22:43 - so we have a lot of information that we
22:45 - want to change about this
22:47 - so far we've just been changing things
22:50 - in the main body
22:51 - now we want to edit this file not just
22:54 - inside this but come up with a new way
22:56 - of specifying that the styling should be
22:58 - different
22:59 - we can do that using something called a
23:00 - css selector
23:02 - that's going to look through all of our
23:05 - html file for something that matches the
23:07 - selector
23:08 - and then apply a different set of
23:11 - styling to it
23:12 - how do we do that
23:14 - we see
23:15 - one example here this is a in element
23:18 - selector which is
23:20 - looking through our html for all of the
23:22 - body elements
23:24 - and then changing what their styling
23:26 - looks like
23:27 - if we want to make this heading bigger
23:30 - like it is here this heading is much
23:32 - bigger
23:34 - we want to find a way of saying hey
23:37 - take all of these
23:39 - h these h2s these
23:42 - these things and apply a set of styling
23:45 - to make it bigger
23:46 - we can do that by using the h2 element
23:49 - selector
23:50 - and then specifying that we want the
23:52 - font size to be bigger than it is
23:54 - already now how do we specify making
23:58 - that bigger
23:59 - so we can say
24:02 - that it's a certain amount of pixels so
24:05 - we can use that as a baseline we can
24:07 - make it really big
24:09 - and see here okay well that makes it
24:11 - huge so we could play around with pixels
24:13 - and then we could be figuring out the
24:14 - right
24:16 - size there
24:17 - a more common way to be using
24:20 - units for these is called a rem or rem
24:24 - and so that stands for a relative m
24:27 - which is relative to the base font size
24:30 - of your whole document you'll see pixels
24:32 - thrown around you'll also see rem as a
24:35 - way of measuring contents uh
24:37 - in this case it's about 16 pixels so
24:40 - that should give you a kind of rough
24:41 - frame of reference but there's no exact
24:43 - mapping so it depends what font size
24:45 - you're using
24:46 - so
24:47 - we want to go ahead and make the font
24:49 - size bigger here so instead of just
24:51 - having the font size be one rem which is
24:54 - about the same size as the text we're
24:56 - gonna make it three times as big and
24:58 - that looks a lot better so that matches
25:00 - up a little bit more with our text here
25:03 - so it's not an exact process right um
25:06 - but the going back and forth between the
25:08 - document that you're building and then
25:11 - the kind of design that you're trying to
25:13 - work with will help out and give you a
25:15 - sense of how you should be editing the
25:17 - file as you're putting it together
25:19 - the next thing we want to do is make
25:20 - this image a little bit smaller since
25:22 - it's a little unwieldy right now it kind
25:24 - of takes up the entire screen when
25:25 - you're looking at it
25:26 - so we're going to go and we're going to
25:27 - constrain this image size
25:30 - by
25:32 - having a selector for our image
25:35 - and we're going to make the size a
25:37 - little bit smaller here so instead of
25:38 - having this kind of like very large
25:41 - image size
25:42 - with whatever just happened to come with
25:44 - we're going to specify that it should be
25:46 - exactly 320 pixels
25:48 - and that's going to resize the image
25:49 - immediately here
25:52 - okay
25:54 - so now that we have our image set we
25:57 - want to go ahead and put these things
25:59 - side by side so that they're not just up
26:01 - and down but match the design that we're
26:03 - trying to go for with this link here how
26:05 - do we go and do that well we can go and
26:09 - specify that we want these things to be
26:11 - laid out using what's called a flexbox
26:14 - we're going to just touch on the surface
26:15 - of that there's a lot of different uh
26:17 - depth that you can get into but we're
26:20 - going to go and use that as a way of
26:21 - making our content appear side by side
26:24 - to facilitate that we need to specify
26:27 - what bits should be next to each other
26:29 - kind of this image is one bit and
26:32 - everything else is another bit
26:34 - so we're gonna go and take everything
26:36 - else and we're going to wrap it
26:38 - inside of a dib
26:41 - a div is a kind of container that
26:44 - doesn't make anything appear on the
26:45 - screen but as a way of organizing our
26:48 - content to say that certain things
26:49 - should be grouped together
26:51 - so nothing will happen differently when
26:53 - we run but now our content looks a
26:55 - little bit different here
26:58 - okay
26:59 - so now that we have our kind of div set
27:03 - we want to specify that
27:05 - everything in our
27:06 - that all of these things should be next
27:08 - to each other
27:09 - but our body element is going to have
27:11 - our entire website and we don't want to
27:13 - try to be saying that everything in the
27:15 - website should be next to each other we
27:17 - just want to have this bio has its own
27:20 - separate block of information
27:22 - how do we do that we can use what's
27:24 - called semantic html to be adding a new
27:27 - section here
27:29 - this is a way of differentiating our
27:32 - contents so that as you're reading
27:34 - through
27:36 - you'll understand what kind of content
27:38 - you're looking at this is especially
27:40 - helpful if you're uh
27:42 - if you're looking at content or reading
27:44 - content with a screen reader that helps
27:46 - you organize content because maybe
27:48 - you're not actually looking at it you
27:50 - are having something read it back to you
27:51 - so having these bits of organization can
27:54 - make it a lot easier to understand what
27:57 - uh how your content is organized as
27:59 - you're going through it
28:01 - so again nothing changes but now we have
28:03 - this section
28:04 - now we can specify and say that we want
28:06 - this section to be laid out in a way
28:09 - that's side by side
28:11 - there's going to be a little problem
28:13 - later once we get to
28:15 - from the way we've done our css uh
28:17 - points in chat if you can go ahead and
28:19 - see if that's uh what that problem might
28:21 - be
28:22 - but we'll go ahead and come to that once
28:24 - we get to it
28:26 - so we're going to add next section
28:28 - yes please come in someone had a good
28:31 - question about uh section the dib and
28:33 - the image being in between the section
28:35 - and the dip tags can you maybe elaborate
28:38 - a little bit about that
28:39 - sure so we have uh you're saying we have
28:42 - a section tag and the div tag here yeah
28:44 - there were the user was wondering why
28:46 - the image stack is not inside the dib
28:49 - and it's in between the section and the
28:50 - div
28:51 - that's a great question so as we build
28:53 - this i'll go and show what the
28:55 - differences between doing that the short
28:57 - answer is our div is a way of blocking
28:59 - out that all of this content should be
29:02 - grouped together the image should be
29:04 - grouped separately and those are kind of
29:06 - two different blocks when we're trying
29:07 - to move them around that's how we want
29:10 - them to play let's take a look and see
29:11 - what that does as we add in our flexbox
29:15 - because i think it's a great question
29:16 - so
29:17 - we want to
29:18 - take the whole section and we're going
29:20 - to say that the display is flex
29:23 - as we do
29:24 - we can see that the
29:26 - all of the stuff we put in the div
29:28 - appears to the right of the image now
29:30 - what if we hadn't done that and what if
29:32 - instead
29:33 - we had gone and
29:35 - blocked out so that the image was inside
29:38 - of the div
29:40 - if we had done that
29:44 - we can see that we actually don't get
29:46 - that behavior we were looking for the
29:47 - image and the and the text is still
29:50 - below each other because we haven't
29:52 - structured our html to know that these
29:56 - are two different categorizations two
29:58 - different groupings of activity that's
30:01 - an excellent question uh the best way to
30:05 - explore those things with uh any html is
30:09 - to just try them out and get to see how
30:10 - the behavior changes but this question
30:13 - the answer is because we want to be
30:15 - grouping these things together so that
30:17 - it moves around on pages
30:21 - great question
30:22 - um okay so we'll go ahead and put this
30:25 - div back
30:26 - and this little shortcut is quite useful
30:29 - if you hold down the option key and then
30:30 - just push up or down you can move whole
30:32 - rows up and down which is just an easy
30:34 - way if you want to switch things around
30:37 - okay so now as we look at our website we
30:39 - can see that this content is appearing
30:42 - side by side which is fantastic
30:44 - but it's really tight it's like this
30:47 - here is right up next to this which is
30:48 - kind of not fantastic so we want to add
30:51 - a little bit of spacing between the
30:53 - image and the text so that it looks a
30:54 - little bit nicer
30:56 - how do we do that
30:57 - as we go into our css file
31:00 - we can take this image and specify that
31:03 - we want a little bit of spacing uh
31:06 - between the image and then what comes
31:08 - next to it
31:09 - uh
31:10 - traditionally this would be done using
31:12 - something like margin right
31:15 - we can also use what is called a logical
31:17 - css operator proper or property uh which
31:21 - is a way of specifying uh
31:23 - how content should be laid out that also
31:25 - works with content that's supposed to
31:27 - reach from right to left so most content
31:29 - reads left to right some content reads
31:31 - right to left like hebrew or arabic and
31:34 - so being able to talk about
31:37 - that content
31:38 - using logical css
31:41 - attribute can be helpful
31:43 - all that being said we can specify that
31:45 - we want the margin
31:48 - inline
31:49 - end
31:51 - to have some distance and we can say
31:53 - it's four times whatever this kind of
31:54 - base uh
31:56 - text size is here
31:58 - and that's gonna go and add that padding
32:00 - so for all intents and purposes is the
32:02 - same as changing kind of
32:04 - margin uh the margin right property this
32:06 - is a way of handling it just in case we
32:08 - want to add some more
32:09 - internationalization
32:11 - okay so now we have most everything
32:14 - sorted except our button is still just a
32:15 - link instead of this nice big blue thing
32:18 - that we had here now how do we go and
32:20 - change that
32:21 - a big part of working with css is just
32:24 - kind of iterating at things until you
32:26 - get something looking the way you wanted
32:29 - to
32:30 - so we can go back to our anchor tag
32:34 - and we're going to want to add a little
32:36 - bit of styling here
32:37 - so we're going to add some styling to
32:39 - this anchor tag so that it's going to
32:42 - show up a little bit different
32:44 - do okay
32:46 - so we're going to add some styling here
32:48 - so that our anchor tag is going to be a
32:51 - blue button that looks a little bit
32:53 - nicer than before
32:55 - okay
32:56 - how do we do that so
32:58 - we first are going to go ahead with
33:00 - adding
33:01 - where is it okay to say that we want the
33:04 - text decoration
33:06 - to be none and this means we don't want
33:08 - to be underlined or anything like that
33:10 - so that's going to make it look more
33:12 - like we want
33:13 - we're then going to want to specify
33:16 - the
33:17 - background color here or the text color
33:20 - so the color
33:21 - of the button text itself should be
33:24 - this
33:25 - same as a background color
33:28 - and then the button color is the shade
33:29 - of blue
33:32 - and that's the background of the button
33:34 - here
33:37 - note importantly uh all of these
33:40 - different uh css attributes need to end
33:43 - with a semicolon if you don't have that
33:45 - everything starts breaking and it
33:46 - doesn't really understand what you're
33:47 - trying to do so
33:49 - lots of good coding related memes about
33:51 - missing semicolons this is certainly one
33:53 - place where it comes up
33:54 - and we've been using all these hex
33:56 - colors because that's what we've just
33:57 - had in our design file you can also just
33:59 - write in colors here that you know
34:01 - different shade of blue but these here
34:03 - can just be colors that you specify
34:06 - okay so it's already starting to look a
34:08 - little bit more like the button that we
34:10 - have here
34:11 - uh we then want to go and
34:14 - see
34:15 - change our button to add a little bit of
34:17 - padding so we get that spacing so we're
34:19 - going to go and add padding to it to say
34:22 - we want no left or right padding but we
34:24 - want a little bit of padding
34:27 - or sorry the opposite here we want a
34:29 - little bit of padding left and right but
34:31 - we don't want any padding up and down
34:33 - we're going to instead want to set the
34:36 - height property to specify that this
34:38 - thing has its own height that should be
34:40 - respected
34:42 - when we add in a height
34:43 - nothing actually changes right away and
34:45 - that's because the default display for
34:47 - an anchor tag is inline
34:49 - that means that it just tries to shrink
34:51 - as much as possible to fit in with
34:52 - content
34:53 - if we wanted to have that height
34:55 - respected we need to change the display
34:57 - to something else in this case we'll
34:59 - change it to inline flex
35:01 - which will then respect the height
35:03 - property
35:04 - we can see that the height property here
35:07 - is uh being respected which is fantastic
35:11 - so we can then go ahead and change
35:14 - the uh
35:16 - but the alignment's wrong excuse me so
35:18 - we want to go ahead and align
35:20 - the items to be at the center
35:24 - and then this is nice and centered and
35:26 - then the last thing we're going to want
35:27 - to do is go ahead and change this border
35:29 - radius so that it looks more like a
35:31 - circle
35:32 - and we can do that by changing the
35:34 - border radius attribute and we could do
35:36 - something like say 1.25
35:40 - great there's lots more playing around
35:42 - we could do this still doesn't look
35:43 - exactly like it we can be changed
35:44 - between the font or the font size
35:46 - boldness but this should get us in a
35:48 - good place to go
35:51 - okay
35:52 - so
35:54 - this then gives us a pretty good start
35:57 - at what our initial bio looks like here
35:59 - uh before we go on and start adding to
36:02 - another section and exploring a little
36:04 - bit more we can do with our css
36:06 - selectors
36:07 - uh let's see that are there any good
36:09 - questions from chat that we're looking
36:10 - at
36:12 - we definitely have a few let me let me
36:15 - give you some for example
36:17 - somebody
36:18 - was wondering about captions with the
36:20 - images and if you had an image with a
36:23 - caption
36:24 - how would that affect the divs that
36:26 - you're using with the image i think they
36:28 - were wondering if we would need two dibs
36:30 - or we just read one dip with a caption
36:33 - that's a great question so let's say we
36:35 - had text that like belongs to the image
36:37 - we would then want to put the image and
36:39 - the text inside the same div so that it
36:42 - moved around in one block that's a great
36:44 - intuition from the question for because
36:45 - that's how that works there yeah
36:48 - and somebody was also wondering if
36:50 - there's a trick to remembering the
36:52 - difference between a margin and padding
36:55 - oh there are many many tricks i can say
36:57 - the best trick is uh always keep a
36:59 - codecademy cheat sheet on hands uh and
37:02 - then you can reference that for any for
37:03 - any uh anytime you have questions about
37:05 - it but honestly the best answer is just
37:07 - practice uh the more practice you have
37:10 - building these things out and going
37:12 - through and kind of like learning the
37:13 - material the better equipped you're
37:15 - going to be to be working
37:16 - right
37:18 - great okay and one minute one last
37:20 - question
37:22 - yeah are you reading the question about
37:23 - the uh the default alignment
37:26 - i was going to talk about the one about
37:27 - the padding the go ahead for the
37:28 - alignment
37:30 - oh yeah uh
37:31 - i'll read your question for this
37:33 - question first uh your
37:35 - the users are your elements are aligned
37:37 - vertically by default in html on your
37:40 - elements inline by default when you use
37:42 - flexbox they're wondering about
37:44 - alignments in line
37:47 - uh it's a good question so i think
37:49 - generally inline elements are just going
37:51 - to show up next to each other and that's
37:53 - going to be the defaults for like how
37:54 - things are in line i'll just refer back
37:56 - to we've got lots more content on like
37:59 - flexbox and alignment and there's a lot
38:01 - of jump that you can get into i'm sorry
38:03 - to go check out our content for more
38:05 - information there
38:06 - uh
38:07 - great okay so now we've got some uh
38:11 - we've got our basic page built out here
38:14 - so we're going to want to go and add in
38:15 - some of the recent work below and you'll
38:18 - see also as we're starting to scrunch
38:20 - this
38:20 - this image does get a little scrunched
38:22 - because i'm a little bit zoomed in we'll
38:24 - talk at the end if we have time about
38:26 - one way of handling that which i think
38:27 - is a pretty neat solution to that
38:29 - problem
38:30 - okay so we want to add in some recent
38:33 - work so we've got this recent
38:36 - workstation so we're going to add in
38:38 - another header so we're going to take
38:40 - this recent work we're going to go back
38:42 - to
38:43 - our index and we're going to add another
38:46 - section that's going to reflect our
38:47 - recent work
38:49 - so we're going to have a header we'll
38:51 - say that's another h2 we're going to
38:53 - call it recent work
38:56 - and then when we
38:58 - go
39:00 - it's usable again we can see that
39:01 - appears great so we've got a recent work
39:03 - set up
39:04 - then we're going to want to go and
39:07 - add in some more of this rich content we
39:09 - have below so we have an individual so
39:12 - inside recent work we have a bunch of
39:14 - stuff we can use semantic html again to
39:17 - be organizing our content and say that
39:18 - each of those is going to be an article
39:23 - inside that article it's going to start
39:26 - with another header that's going to have
39:28 - the title of whatever it is that we're
39:30 - working with in this case that's text
39:33 - message analysis for that first project
39:37 - but notice when we go and build this
39:40 - something a little weird happens
39:42 - instead of showing up like top to bottom
39:45 - like the
39:46 - question was coming up from before uh
39:49 - we have this appear like to the right
39:51 - like all weird looking
39:53 - the reason for this is our css was
39:56 - implemented a little bit naively
39:59 - we were talking about changing how all
40:02 - of the sections worked we were talking
40:04 - about how all of the anchor tags were
40:06 - supposed to be displayed
40:08 - that was actually a little bit too wide
40:10 - because we have a new section but we
40:12 - don't want this section to have flexbox
40:14 - maybe things inside want to have that
40:16 - laid out
40:17 - but we we have been too uh over generic
40:21 - for how we've been defining our css
40:23 - properties
40:24 - so now we're going to need to do a
40:25 - little bit of refactoring so we can add
40:27 - some more specificity
40:29 - one excellent tool we have our dispos at
40:32 - our disposal is the class attribute
40:35 - a class attribute is a way of giving
40:38 - more information to a specific bit of
40:41 - content you have
40:43 - so we can take this section tag
40:45 - and say that it's class
40:48 - is going here to be
40:50 - bio
40:52 - now nothing changes when we run this
40:54 - it's still just the bio but when we go
40:56 - back to our css
40:59 - we can then specify
41:01 - that we want
41:04 - not every section to be just a flex
41:07 - display but only
41:09 - a section that has a
41:12 - uh
41:13 - class of bio now we can use a class
41:16 - selector by having a dot beforehand and
41:19 - then the name of the class and when we
41:22 - go and run this here we'll see that our
41:25 - text message analysis now appears below
41:28 - this which is where we want it to show
41:30 - up
41:31 - great
41:32 - while we're at it let's do a little bit
41:34 - more refactoring because there's another
41:35 - couple of those cropping up uh we've
41:37 - noticed that we've changed all of the
41:39 - images but we probably just want to
41:41 - change the profile image and we've
41:43 - changed all of the anchor tags but we
41:46 - probably just want to change the button
41:47 - that we have at the top
41:49 - so we can fix that by adding in some
41:51 - more classes more relevant here
41:53 - so we can go and take in this body we
41:57 - can take this image and call this a
42:00 - profile and i've been a little bit
42:04 - lacks here for making all of my
42:06 - quotation marks match
42:08 - so we can take this profile
42:11 - image
42:12 - as a class name
42:15 - quick
42:16 - uh what's this not like
42:22 - uh spacing i think
42:25 - so it does give you warnings which is
42:26 - helpful as you're trying to build things
42:28 - out and get an extra space in there
42:30 - profile
42:31 - image
42:36 - okay so again nothing's
42:39 - i say nothing changes but we've lost our
42:41 - image
42:42 - let's go ahead and make sure there we go
42:44 - so we have an extra
42:46 - there we go okay so it's helpful to be
42:48 - able to use the editor because it'll
42:50 - tell you if you've got any syntax wrong
42:51 - as you're writing it
42:53 - okay
42:54 - so now we have this built out we have
42:57 - our image that we can be specifying and
42:59 - we can do that by going back and saying
43:01 - we don't want to talk about all images
43:03 - just these profile images
43:09 - an app can go
43:12 - and
43:13 - change this sizing oh
43:16 - okay um
43:17 - let's see great so now we've gone and
43:20 - added that here
43:21 - because
43:22 - this kind of keeps
43:24 - well we'll get we'll get to that okay so
43:26 - now let's go in and add some of our
43:28 - recent work so we'll just go ahead and
43:30 - learn a little bit more about some html
43:32 - elements that we can be putting in here
43:34 - so inside of our recent work section
43:38 - we want to be grabbing all of
43:41 - this content
43:42 - and then just displaying it in roughly
43:45 - this form to the learner
43:49 - so i'm going to go and just add what's
43:51 - called an html comment which is stuff
43:53 - that doesn't actually show up but it's
43:54 - just a way we can be using to be
43:56 - organizing this material we can then go
43:58 - ahead and then add this here as a
44:01 - paragraph tag and then just be slotting
44:03 - some of this information in
44:06 - so that's a paragraph we can make this
44:09 - feb show up as
44:11 - a strong tag like we talked about before
44:13 - to make it bold and then we want all of
44:15 - these things to show up as a list
44:18 - we can do that
44:20 - by uh we could do that just by trying to
44:24 - like put line breaks behind them and
44:25 - doing it manually it's gonna be a lot
44:27 - easier to use what's called an unordered
44:30 - list which is another html element which
44:34 - will go and just display any list items
44:37 - with the li tag
44:39 - as
44:39 - uh bullet points
44:41 - you can even then specify that you want
44:43 - list items to be appearing a little bit
44:45 - differently uh depending on how you want
44:48 - your uh for your website to look
44:51 - also note as i've been doing this it's
44:52 - standard to be indenting content as
44:55 - you're encountering in here and then
44:56 - last we want to link to this github repo
45:00 - no longer
45:01 - comment
45:02 - and then we can go and add in a link
45:05 - which is just going to be
45:07 - a reference to whatever link we have for
45:10 - this project
45:12 - we can just say this is that uh
45:14 - uh say github's academy page
45:18 - slash code academy
45:21 - and then we'll do the same target blank
45:23 - thing so that it shows up where we want
45:25 - it to
45:26 - okay
45:27 - when we go and build this again we can
45:29 - see that we have this looking up
45:31 - but we can see we didn't actually
45:33 - remember to change our anchor styling so
45:36 - we still get this big button for both of
45:38 - them that's not what we want so we're
45:39 - going to go back and then add in
45:42 - a class here to
45:44 - this profile anchor to have it instead
45:48 - say that it's a button
45:50 - then back in our css we can specify that
45:53 - we want the anchor tags to only apply
45:55 - the buttons
45:59 - now we should have uh only things that
46:02 - should be buttons show up as buttons
46:06 - great
46:07 - loading we'll figure it out
46:10 - okay sure
46:12 - okay the last thing we'll want to do is
46:14 - just add a little image to this uh
46:17 - and we can do that by just adding
46:19 - another image we looked at how to find
46:21 - images i've got this one stored here you
46:23 - can use whatever image you want and so
46:25 - we'll go and take
46:27 - right below kind of the bottom the repo
46:30 - we'll go and add
46:32 - an image that has a source
46:34 - that has a self-closing tag
46:39 - and it can be
46:41 - probably way too big my goodness that's
46:43 - a large image here so we want to go and
46:45 - specify how big these images should be
46:48 - uh just like we specified that there are
46:50 - profile images we can actually give this
46:52 - kind of image a way of talking about it
46:55 - by calling it something like say an
46:56 - article image
46:58 - and then constraining it from there
47:00 - first we'll need to go back to our css
47:04 - and then say that
47:06 - this here is in fact an article image
47:11 - then we'll want to go and say
47:13 - how big should this actual image be here
47:18 - and right now it's way too big so we're
47:20 - going to make it a little bit smaller so
47:22 - we're going to go here on to our image
47:25 - and we'll give it a slightly more
47:27 - reasonable size of say 512 pixels
47:30 - and so again that's the
47:32 - width property
47:34 - and we'll set that to 512 pixels
47:38 - okay
47:40 - much more reasonable now that it kind of
47:42 - shows up like this size and then the
47:44 - last thing we'll do on this part is
47:46 - we'll go and just make similar to before
47:47 - the image show up on the right instead
47:49 - of the left-hand side to do that we're
47:51 - going to specify that we want all of our
47:53 - articles to also have that flex layout
47:56 - so every article is going to have a
47:58 - display of flex
48:00 - with a semicolon
48:02 - and now this shows up next to each other
48:05 - but uh
48:06 - we forgot to
48:07 - group
48:08 - all the stuff together so it's trying to
48:10 - put all of them in a row so we can go
48:12 - back to our index and then change this
48:16 - to make all these bits of content
48:19 - grouped together and this back and forth
48:21 - is like a hundred percent the key of
48:23 - what development looks like is that you
48:25 - make a change it changes something you
48:28 - go back and you fix that change or make
48:30 - it look more like you wanted to
48:32 - okay
48:33 - one last thing that we're going to work
48:34 - on here because this has been bugging me
48:37 - throughout it and probably has been
48:39 - bugging you if you've been looking at it
48:40 - is my goodness this looks terrible with
48:43 - the smaller screen size doesn't it and
48:45 - our platform makes that very apparent
48:47 - because
48:48 - you know with this kind of two window
48:49 - layout but this image like is all
48:51 - scrunched
48:52 - you have to scroll over like this is all
48:55 - like uh it doesn't make any sense if
48:57 - you're trying to look at this on the
48:58 - phone it'd be a terrible experience
48:59 - you'd have to scroll to the right on
49:01 - your phone and see all the content that
49:03 - wouldn't be a good experience at all
49:05 - uh
49:06 - another weird thing is if we make our
49:08 - page bigger it also looks kind of weird
49:10 - like this is all going out all the way
49:12 - and like kind of takes up too much room
49:16 - the last thing we'll do is we'll fix
49:17 - those couple issues and we'll do that by
49:20 - uh using what's called a media query
49:23 - so media query is a way of specifying
49:25 - that you want your website to look
49:26 - different for different sizes so for
49:29 - this bio
49:30 - we can say that we don't want the bio to
49:32 - always be showing things next to each
49:34 - other if the screen's really small we
49:36 - actually want the things to be on top of
49:38 - each other
49:39 - so we can add a media query that says in
49:42 - cases when the max when the width of the
49:45 - page is below say 10 24 pixels
49:48 - we can say that the bio should not have
49:51 - a display uh should have a display of
49:53 - flex but its flex direction
49:55 - shouldn't be a row which is default but
49:58 - should instead be a column
50:01 - and then
50:02 - for smaller pages it starts to make a
50:04 - lot more sense
50:05 - and you can kind of breathe out a size
50:07 - relief as this actually looks like a
50:09 - real website you can look at it on the
50:11 - phone or a small screen from the bio
50:12 - section
50:13 - so that's immediately a lot better
50:16 - but this part still doesn't make any
50:17 - sense so we're going to want to give the
50:19 - same treatment where we go down and say
50:21 - that for articles
50:23 - we have another media query
50:25 - we're going to specify that the max
50:27 - width for anything that's 10 24 pixels
50:30 - or smaller
50:32 - articles should also have a flex
50:34 - direction of
50:36 - a column
50:40 - and that's going to make this appear a
50:41 - lot more reasonable
50:43 - one thing that'd be nice is if we could
50:44 - change this image because it's like kind
50:46 - of weirdly
50:48 - not
50:49 - picking up as much room as it could
50:51 - so we can give multiple things
50:53 - specificity inside these media queries
50:56 - we can be taking
50:57 - article images and saying
50:59 - hey if you are inside uh
51:02 - a really small phone you should actually
51:04 - just take up as much space as you can
51:05 - just take the full width of the phone
51:09 - and then this will make the images
51:12 - uh show up and take up a lot more space
51:14 - once we add in
51:16 - our units always important adventure
51:18 - units
51:20 - so now the image size is
51:22 - and it looks like a much more reasonable
51:25 - browsing experience
51:27 - the last thing that we can go and kind
51:28 - of fix up is that we want this to not
51:32 - all be like taking up the whole width of
51:34 - the page but maybe just like part of it
51:36 - so we can take that same magic 10 24
51:38 - pixel number that we chose and then
51:40 - specify that for the body
51:42 - we want the max width of the body to be
51:46 - that 10 24 pixels don't take up more
51:48 - space than that even if you're happy to
51:50 - be on a bigger browser window
51:52 - so when we expand this out now we can
51:54 - see that it looks much more reasonable
51:56 - and again there's lots more that we need
51:58 - to be doing to make this kind of match
52:00 - up to what we were trying at the
52:01 - beginning like we could add some more
52:02 - padding here this uh styling we could
52:05 - change for this year we could make this
52:06 - bigger or we could add the lines in so
52:08 - it's a never-ending project to be adding
52:10 - all of the styling that you're
52:11 - interested in but this gets us to a much
52:13 - reasonable more reasonable approximation
52:16 - one quick thing we can do that will make
52:17 - it nicer though is to just be adding uh
52:20 - some centering so we can go and say that
52:22 - using the margin and the auto feature we
52:26 - can say all of this should be centered
52:28 - so as you build out and make your
52:29 - website all this content is centered
52:32 - and then because it's bugging me we can
52:33 - add a little bit of space we could do
52:35 - other things like add more spacing here
52:38 - line in add more recent work so there's
52:40 - a lot of depth that you can get into but
52:43 - we only have an hour this live stream to
52:46 - talk about all of html and css for
52:48 - portfolio so we're not going to be able
52:50 - to get into just everything
52:52 - but we did review a lot so just talking
52:55 - taking a minute or so to go over what we
52:57 - have learned right here we have seen
53:01 - all of html or a lot of html and what
53:04 - you need to be building out the raw
53:06 - skeleton of a platform right here so we
53:09 - looked at how to use divs to group
53:11 - things we looked at how to create
53:13 - headings and paragraphs and sections and
53:16 - lists and images to be putting the
53:19 - building blocks of our website together
53:21 - we then saw that that kind of how it
53:24 - looked didn't match how we wanted it to
53:26 - look even though the content was all
53:28 - there it didn't have the right feel to
53:29 - it so we went and added some uh css to
53:33 - make this match the design that we were
53:35 - interested in seeing
53:37 - so we went from our design and then
53:40 - added in different coloring and we made
53:42 - things different sizes and we could lay
53:44 - things out in different directions and
53:46 - we could even specify things so it
53:50 - looked differently on different size
53:51 - devices
53:53 - so lots of content that we went through
53:55 - right here um we've learned a lot over
53:57 - the course of the lesson here and i'm
53:59 - excited to see people back on wednesday
54:01 - when we go to be adding some javascript
54:04 - for adding a dark mode for some more
54:06 - interactivity so with that i'll go ahead
54:08 - and hand it back to better
54:12 - thank you ben uh let's go through a
54:14 - quick couple questions before we end the
54:16 - live stream um there were some good ones
54:18 - here
54:19 - so
54:20 - somebody was wondering about the code
54:24 - that you've been using for the whole
54:26 - workshop and if that's something that
54:28 - we're going to be sharing at the end or
54:29 - it's something that you need to update
54:30 - at the end and maybe you can just
54:32 - explain a little bit how people can get
54:34 - to that
54:36 - code uh sorry uh if you are interested
54:39 - in the question if you're interested in
54:41 - looking at the code from this
54:43 - yeah the workspace they wanted to make
54:45 - sure that they are gonna you know have
54:46 - access to the workspace or where do they
54:47 - get the code yeah yes so i'll put the
54:49 - link up again the link to the workspace
54:52 - is inside the chat from youtube that
54:54 - link was right up top i'll go ahead and
54:55 - put it again right now so if you're
54:57 - interested in looking at the code we
54:58 - ended up with you can look at the link
55:00 - that's right in the youtube chat
55:03 - great and another question that somebody
55:04 - had earlier in the stream was about
55:06 - creating these portfolio projects and
55:09 - they were wondering
55:10 - what are your recommendations for
55:11 - somebody that might not have such much
55:13 - work experience or degree experience but
55:15 - they still want to showcase some of what
55:17 - they know when they are looking for jobs
55:18 - and internships
55:21 - your projects are more valuable than
55:23 - your work or your experience on
55:25 - portfolios
55:26 - like you can have as many degrees as you
55:29 - want to but the question people are
55:30 - going to be asking is what can you make
55:32 - what can you build so portfolios are
55:34 - great places to be showcasing the kind
55:37 - of work that you can produce as you're
55:38 - putting content together yeah
55:42 - okay great well with that thank you
55:44 - everybody for attending today's live
55:45 - stream i hope it was fun and useful
55:47 - experience for all of you if you want to
55:49 - try more content on your own just go
55:51 - sign up for a free account at
55:52 - codacademy.com we'll see you there tons
55:55 - of free content online plus all of our
55:57 - community spaces ready to help you out
55:59 - when you have some questions
56:00 - don't forget to subscribe and to follow
56:02 - on our social media whatever you are in
56:04 - instagram linkedin facebook twitter etc
56:07 - uh that's the best way to stay up to
56:09 - date with all all new content for
56:11 - example
56:12 - next week we're gonna have some exciting
56:14 - web3 content coming out so follow us
56:16 - online to find out just when that
56:18 - content on web3 drops
56:20 - thank you again and i'll see you all
56:22 - wednesday for part two of this workshop
56:26 - thank you ben
56:27 - thanks so much we'll see you there
56:33 - okay livestream is

Cleaned transcript:

three two one all right and i think we are live welcome everybody we're celebrating national coding week with live coding lessons throughout this week i'm ferian community manager at code academy and this with me is ben senior curriculum developer code academy i'm going to be telling you a little bit about about then and then i'll hand it over to him ben is focused on building mobile development content like our ios developer career path before code academy he started out as a middle school math teacher uh teach for america and after that he worked as a program manager at nonprofit coding boot camp where he taught himself how to code since then he's been an ios instructor developer and a director of curriculum welcome ben thanks great to be here um really excited for this live stream i had everyone watching now live and hi to everyone who's watching the recording later i'm really excited to get into some portfolio building today so over the course of the live stream today we're going to be building out a tech portfolio using html uh and then adding some css to give it a little bit of style we're going gonna have another session on wednesday where we're gonna pick up where we left off and then take the portfolio to the next level by adding some javascripts to make it interactive with the dark mode if you don't already know that tech portfolio is your ticket to getting a coding job three can showcase your skills experience what makes you unique and the kind of coding projects that you're most proud of so really excited to be building this out for us here over the course of these couple live streams uh on friday uh we're going to teach you how to build one of our most popular portfolio projects that explores mba data so make sure to check out the portfolio projects page for some more information uh as we are going and building out our content here today uh feel free to ask questions so we're monitoring chat so you can see now people are asking how long the live stream is going for each live stream will be an hour so we'll have one hour of live stream on today on wednesday and on friday uh i can look and help answer questions we also have two curriculum developers lucas kenny will be monitoring questions as well and we'll take some questions as they come up while we're over the course of building content uh for uh more details on what we're doing for national coding week you can check out the link in the youtube description that you're watching from here so again super excited to be here to be helping build this out and showing you a little bit about what you can do with html and css so i'm going to go ahead and get right into it so i'm going to go ahead and bring up the codecademy platform right here and so what we're looking at right now is just the codecademy homepage now we're going to be building out our portfolio using the workspaces feature inside of codecademy uh if you have pro great you already have an account you can get right into it if you don't it might ask you to make a free account and then you can go and build your own space so i'm going to just click on this blank workspace and end up with whatever defaults we get here and i'll take the link that i get from this if you want to follow along as we're building it you can certainly do that so this is the link here to the workspace that i'm going to be working in you can either be following along here following along with the link as we're building things putting your own up or just watching to get a sense of what we're building here now if you already have some background in html and css fantastic you'll have a little bit more context for what we're building and why we're building it if you don't that's free too i'm going to be going pretty slow over some of the foundational concepts and really trying to make sure that i'm explaining how stuff on this left part of the screen ends up making a website so we're going from nuts and bolts to be building out our portfolio website now let's start here what is the portfolio website well why might we want to be building something so as i said earlier portfolio website's a great place to be showcasing who you are as a developer once you're ready to start talking to prospective employers now you can make anything a portfolio website some people have been very creative and done things like made a side scrolling games or portfolio website which is very creative it's most standard to have a portfolio that's just going to show yourself a bio and some list of accomplishments that you have with some links to projects you've worked on before i've actually we here at codecademy have asked our design team to build out a portfolio that they think represents a really welldesigned personal portfolio and this here is what we're going to be working towards in the live stream they built this here using a tool called figma and so that's a tool recently owned by adobe or bought by adobe that you can use to build out designs there are many tools that you can be using to build out portfolios this is just one of them uh it helps to have an idea in your mind of what you're looking to build before you get started you certainly can just start messing around and organically finding out how you want to be building your portfolio but taking the time beforehand to try to write out a little bit of what your end stage is and where you're going to will make your work a lot easier because you have that clear goal in mind so this is what our codecademy designers have put together for a welldesigned portfolio so we can see here that we have our bio section up at the top we have this header and footer at the bottom we've got some recent work that has our projects that has some links to where you can find them that has some nice images uh and that's our portfolio that we're gonna be working towards okay this is just what we're gonna be working towards for this particular live stream you can make whatever you want to uh you can have your own artistic vision that you're putting into what your own portfolio should look like so this is using a tool called figma we're not going to be getting into it a ton for all of the features and how to actually use sigma to build things in this live stream we do have a course on codecademy that goes into much more detail about ui ux design and figma um and i think we can get a link to that in the chat that you can take and look at if you're interested in finding out more about how to use this tool okay so sigma here we're just using as like a pdf so we're not going to be sharing this here with you but we're going to be using it as a baseline for what we're building okay so let's take a look here at where we're starting in our application so we have our initial workspace that is built out here we have our panel on the left with our html and we have how it's rendered which is our website now this is a website so we have successfully built just by clicking that uh new workspace button a website it's not hosted in the place that we can share yet and we have more information on codecademy about how you can actually put it and host it on something like github pages or your own server so that anyone can find it more easily but this is a website it has text it has colors it has some things that you might expect from it let's take a look at the html and figure out what exactly is this here and how does this work so we can see that we have recognizable text somewhere inside this mess of different colors that ends up on the right panel here this hello world shows up on the left side and on the right side as we change our text to say hello live stream and then we click the save and run button or which i've if i'm not moving my mouse i'm going to just clicking command return for the moment on a mac or it would be control return on a pc you can see that the text updates so all of this text here that shows up you can just update and you are building a website here with just editing some html so this can be whatever you want and then you're putting it together here so this here is the nuts and bolts of how you can be changing text around to make something appear in the website that you're building now if you look a little closer you'll notice that these bits of text look different from each other this one's bigger and this one's smaller why is that well if you look here in html you have these uh tags here that surround each bit of text so each of these tags stands for something this h1 stands for a header one and this p stands for a paragraph tag so how do you know what all the html tags and what they do uh they're looking online as one option or our codecademy docs goes into a lot of html details so you can see all of the different tags that are available uh within html tags or elements to see what can you add in and this is a whole big list of all of the different elements you can have inside here so we're seeing that there's an h1 and we're using a p tag there's a bunch more we're not going to talk about every element over the course of the live stream but this is one place that you can go and i'll just add the link in here or you can go and find uh information about all of the tags that we're using on our academy docs so an h1 stands for a header one a header one is a big tag and it makes the text show up very large if we have a different size header we can go and make this text bigger or smaller so instead of having an h1 we could have an h2 and that's going to make the text appear a little bit smaller this goes all the way down you have can have headers of size three four or five whatever you want to have different sizes of text get this little nice rainbow effect going down right here so a lot of different sizes of headers that you can make possible and then having a header four is really kind of the same size as paragraph so we can have our headers and then this here is a paragraph paragraph is the easiest way to make text appear in a document so you can add additional paragraphs and as you add additional paragraphs they come up next to each other so or they say they don't come up just next to each other they come up as new paragraphs where you have one below the other like you're making a new text other common tags that you can see is you can use these strong tags to make something bold and then you can see it make it a strong tag to make content bold and then you can see that this u shows up bold now importantly with html tags they all have a beginning and an ending so as we made this new one here we can see that it starts with this strong inside these angle braces and to show that it's ending we have the same syntax syntax being the way that we're writing things um except we have this forward slash before that lets the web let's your browser know that you're starting something a strong tag you have some content and then you're gonna end it so once you make one of these starting tags you're making a promise often that you're gonna end it with something and if you don't have it it'll start to get confused and you'll have some unexpected behavior that doesn't know when it's the ending of uh great so that's really the nuts and bolts of html you have these tags that need to start and end and they can contain content inside them there's a few more other tags in the boilerplate we can see one is just the big html tag that says we're going to start and end all of our html we have this head tag which shows a bunch of information about kind of the document itself so like the title and this here is how to show up on different devices and this here which we'll get to in a little bit is uh how we want our page to look and be styled uh this last one here body is a way of just illustrating what is the main need of our website what's in the body there so now that we have a little bit of a sense of kind of the nuts and bolts of html let's take this design here and start to actually be building it as this is the portfolio that we're going to be building out today hey ben we can see first that we have this text here yeah go ahead uh i want to jump in before we get started with this and the next section could you possibly make this font a little bigger on the editor so that people can see it better that is a good question and i will zoom in a little bit here which i think should help thank you so much yeah thanks thanks for that uh okay cool so now with our slightly larger font let's go ahead and get into starting to build this out here uh so first we'll go ahead and take this bit of text and then just copy this over into this header so instead of saying hello live stream it has some more information about the portfolio person that we're building out here great so we've gone and added that content in right here so next we want to go ahead and take this bit of text so it's a little bit of a bio again we're doing it for this person if you're building your own portfolio you should be writing except describes yourself for your own interests and that shows up just fine as well all right so far so good we have this here which is going to be a link so some kind of button we haven't talked about that yet but a common way of having links show up if you want to click on something and have and be able to look at something else is to use what's called an anchor tag anchor tags are shown with an a same thing here text goes inside and then you have the closing tag to say that you're done adding your anchor now by itself this doesn't look different you know it's not a link it's just text and that's because we need to give it more information about what should happen when you click on it so far each of these tags we've been adding has just been the tag itself it's also possible within a tag to specify more information about where you want to be going or about anything else about the tag that might be relevant we can see up here some attributes already that came inside so this link has an href and a rel has two attributes we're going to do the same thing for the anchor tag and we're going to use this href to show what should happen when you click on it where should it go and this can be whatever website you want so we're gonna go and just put in that we're gonna go to codeacademy.com and now we can see that this link shows up and it's a thing that we can click on when we click on it we'll notice that it navigates us to codecademy now i cheated a little bit because in these editors it's often uh hard to navigate directly so if you try to put a different link like google you actually get some kind of error here and this is because we in this environment uh we are still within the codecademy ecosystem so we can't go to and embed those other websites what we can do instead is we can add a target attribute which says what should happen when you click on it and blank means open a new blank tab and go to that website in that new blank tab instead and so that's a common paradigm you'll see with links is i don't want to interrupt all the work i'm doing i just want to open in a different tab okay so uh good thing from chad good question yes you can use either single or double uh quotation marks for any of these links in here it is best practice to pick one and be sticking with it uh you can see our defaults here has been that we come with these doubles so i'm going to be using that as we build here but it is a very good note that either of those works with uh html other languages are different so some languages handle those differently where you have to use i think they're only single or only double and be consistent okay so now that we have this link built out and we want to go and add in this image here uh to add an image we're gonna break the rule that i just said where you have a starting and an ending tag because images don't really have any text that go inside them for all of these tags we've had things in between the paragraph here or for this header too we've had text that goes in between that for an image we really just want the image itself so we're going and we can just add the source here to say where should the image be so the image here we're going to say that the source for it should be it can be anything any image that you want from anywhere on the internet so if we go to some free image hosting site like say pixabay we can go and look at a free royal royaltyfree image take that image and then add it into our application so this image can be any image you want and we can see that immediately shows up in our website right here okay so now that we have an image and we might want to make it the actual image for our portfolio again this is the image i'm using if you're building your own portfolio you should be using your own image here so that you can have your own picture on your portfolio so we'll go ahead and take this image here which i will put the link in just in case you want to use the same one and then we'll go ahead and add that to our portfolio great so now we have all of the core elements built out from this diagram right here now if you were building this out and say you're working at a company and your design team handed you this and said we want you to build a portfolio page or website that looks like this and you delivered them this website and said well i did it it has all the content that we should have that probably look at you quizzically and say what are you talking about like this doesn't look at all like we said even though the content uh is all there it looks very different from how this bit of content is supposed to look based on the design that we got from our design team and the reason for that is because we haven't added any styling to our page so our page has the basic styling that just came with this workspace we need to edit that so that our page looks more like the page that we wanted to that we built out from before so we can go ahead and take a look at the css to figure out how to make that a reality we see on this left panel we have all of the files that come prepackaged in here as i'm looking at i see this is untitled we might want to call this something like uh portfolio so that we can go and find it later this comes prepackaged with an index scripts and a style so all of these are files that come with our portfolio so we can go ahead and look at any of them and then change them to modify what our portfolio is going to look like back when we looked at this link we saw that it was using this style.css href here this uh style.css file which we actually have right here and the reason why we have this black background and white text is because we're specifying it right here we have a background and a color that are actually specified inside this file now we don't want it to be black and white we want it to be mixing along here with what we have from our page here so we want to go ahead and then add to change the background to this color right here so we'll go ahead and change the background and that will make the text show up as the same background color that we have from this link here but the text is unreadable because the text is still white we can see it's still there when we go ahead and move our mouse over it but it's not showing up in a way we can see so we're going to go in and then change the color to be this darker color here and then update it to be this not quite shade of black but this kind of darker blue color here that we see now if you're new to this year like what are all these letters doing here how does that specify a color so what this means is that we have uh it is called hexadecimal which is one way of specifying colors so we can go ahead and look at the color here and there's actually a few different ways that this can be rendered hexadecimal is a base 16 number system which shows you one way of understanding colors you could also see the same color for just how much red green and blue it has that's relevant here so there's a lot of that depth that you can go into with adding colors we have more of that in our ui ux source for now we're just going to be using these text colors as colors and then going from there okay so now this is looking a little bit better as compared with what our original design was but it's not quite the same so one big thing that's missing is all of our content here is top to down so that's not really what we're looking for we would like this here to be side by side instead so that's what we're going to try to build out so how can we make our content appear not just like top to down but side by side another thing that's not quite right is this image feels way too big so this image here uh is like much bigger than this image here and this text here is too small this text should be a lot bigger so we have a lot of information that we want to change about this so far we've just been changing things in the main body now we want to edit this file not just inside this but come up with a new way of specifying that the styling should be different we can do that using something called a css selector that's going to look through all of our html file for something that matches the selector and then apply a different set of styling to it how do we do that we see one example here this is a in element selector which is looking through our html for all of the body elements and then changing what their styling looks like if we want to make this heading bigger like it is here this heading is much bigger we want to find a way of saying hey take all of these h these h2s these these things and apply a set of styling to make it bigger we can do that by using the h2 element selector and then specifying that we want the font size to be bigger than it is already now how do we specify making that bigger so we can say that it's a certain amount of pixels so we can use that as a baseline we can make it really big and see here okay well that makes it huge so we could play around with pixels and then we could be figuring out the right size there a more common way to be using units for these is called a rem or rem and so that stands for a relative m which is relative to the base font size of your whole document you'll see pixels thrown around you'll also see rem as a way of measuring contents uh in this case it's about 16 pixels so that should give you a kind of rough frame of reference but there's no exact mapping so it depends what font size you're using so we want to go ahead and make the font size bigger here so instead of just having the font size be one rem which is about the same size as the text we're gonna make it three times as big and that looks a lot better so that matches up a little bit more with our text here so it's not an exact process right um but the going back and forth between the document that you're building and then the kind of design that you're trying to work with will help out and give you a sense of how you should be editing the file as you're putting it together the next thing we want to do is make this image a little bit smaller since it's a little unwieldy right now it kind of takes up the entire screen when you're looking at it so we're going to go and we're going to constrain this image size by having a selector for our image and we're going to make the size a little bit smaller here so instead of having this kind of like very large image size with whatever just happened to come with we're going to specify that it should be exactly 320 pixels and that's going to resize the image immediately here okay so now that we have our image set we want to go ahead and put these things side by side so that they're not just up and down but match the design that we're trying to go for with this link here how do we go and do that well we can go and specify that we want these things to be laid out using what's called a flexbox we're going to just touch on the surface of that there's a lot of different uh depth that you can get into but we're going to go and use that as a way of making our content appear side by side to facilitate that we need to specify what bits should be next to each other kind of this image is one bit and everything else is another bit so we're gonna go and take everything else and we're going to wrap it inside of a dib a div is a kind of container that doesn't make anything appear on the screen but as a way of organizing our content to say that certain things should be grouped together so nothing will happen differently when we run but now our content looks a little bit different here okay so now that we have our kind of div set we want to specify that everything in our that all of these things should be next to each other but our body element is going to have our entire website and we don't want to try to be saying that everything in the website should be next to each other we just want to have this bio has its own separate block of information how do we do that we can use what's called semantic html to be adding a new section here this is a way of differentiating our contents so that as you're reading through you'll understand what kind of content you're looking at this is especially helpful if you're uh if you're looking at content or reading content with a screen reader that helps you organize content because maybe you're not actually looking at it you are having something read it back to you so having these bits of organization can make it a lot easier to understand what uh how your content is organized as you're going through it so again nothing changes but now we have this section now we can specify and say that we want this section to be laid out in a way that's side by side there's going to be a little problem later once we get to from the way we've done our css uh points in chat if you can go ahead and see if that's uh what that problem might be but we'll go ahead and come to that once we get to it so we're going to add next section yes please come in someone had a good question about uh section the dib and the image being in between the section and the dip tags can you maybe elaborate a little bit about that sure so we have uh you're saying we have a section tag and the div tag here yeah there were the user was wondering why the image stack is not inside the dib and it's in between the section and the div that's a great question so as we build this i'll go and show what the differences between doing that the short answer is our div is a way of blocking out that all of this content should be grouped together the image should be grouped separately and those are kind of two different blocks when we're trying to move them around that's how we want them to play let's take a look and see what that does as we add in our flexbox because i think it's a great question so we want to take the whole section and we're going to say that the display is flex as we do we can see that the all of the stuff we put in the div appears to the right of the image now what if we hadn't done that and what if instead we had gone and blocked out so that the image was inside of the div if we had done that we can see that we actually don't get that behavior we were looking for the image and the and the text is still below each other because we haven't structured our html to know that these are two different categorizations two different groupings of activity that's an excellent question uh the best way to explore those things with uh any html is to just try them out and get to see how the behavior changes but this question the answer is because we want to be grouping these things together so that it moves around on pages great question um okay so we'll go ahead and put this div back and this little shortcut is quite useful if you hold down the option key and then just push up or down you can move whole rows up and down which is just an easy way if you want to switch things around okay so now as we look at our website we can see that this content is appearing side by side which is fantastic but it's really tight it's like this here is right up next to this which is kind of not fantastic so we want to add a little bit of spacing between the image and the text so that it looks a little bit nicer how do we do that as we go into our css file we can take this image and specify that we want a little bit of spacing uh between the image and then what comes next to it uh traditionally this would be done using something like margin right we can also use what is called a logical css operator proper or property uh which is a way of specifying uh how content should be laid out that also works with content that's supposed to reach from right to left so most content reads left to right some content reads right to left like hebrew or arabic and so being able to talk about that content using logical css attribute can be helpful all that being said we can specify that we want the margin inline end to have some distance and we can say it's four times whatever this kind of base uh text size is here and that's gonna go and add that padding so for all intents and purposes is the same as changing kind of margin uh the margin right property this is a way of handling it just in case we want to add some more internationalization okay so now we have most everything sorted except our button is still just a link instead of this nice big blue thing that we had here now how do we go and change that a big part of working with css is just kind of iterating at things until you get something looking the way you wanted to so we can go back to our anchor tag and we're going to want to add a little bit of styling here so we're going to add some styling to this anchor tag so that it's going to show up a little bit different do okay so we're going to add some styling here so that our anchor tag is going to be a blue button that looks a little bit nicer than before okay how do we do that so we first are going to go ahead with adding where is it okay to say that we want the text decoration to be none and this means we don't want to be underlined or anything like that so that's going to make it look more like we want we're then going to want to specify the background color here or the text color so the color of the button text itself should be this same as a background color and then the button color is the shade of blue and that's the background of the button here note importantly uh all of these different uh css attributes need to end with a semicolon if you don't have that everything starts breaking and it doesn't really understand what you're trying to do so lots of good coding related memes about missing semicolons this is certainly one place where it comes up and we've been using all these hex colors because that's what we've just had in our design file you can also just write in colors here that you know different shade of blue but these here can just be colors that you specify okay so it's already starting to look a little bit more like the button that we have here uh we then want to go and see change our button to add a little bit of padding so we get that spacing so we're going to go and add padding to it to say we want no left or right padding but we want a little bit of padding or sorry the opposite here we want a little bit of padding left and right but we don't want any padding up and down we're going to instead want to set the height property to specify that this thing has its own height that should be respected when we add in a height nothing actually changes right away and that's because the default display for an anchor tag is inline that means that it just tries to shrink as much as possible to fit in with content if we wanted to have that height respected we need to change the display to something else in this case we'll change it to inline flex which will then respect the height property we can see that the height property here is uh being respected which is fantastic so we can then go ahead and change the uh but the alignment's wrong excuse me so we want to go ahead and align the items to be at the center and then this is nice and centered and then the last thing we're going to want to do is go ahead and change this border radius so that it looks more like a circle and we can do that by changing the border radius attribute and we could do something like say 1.25 great there's lots more playing around we could do this still doesn't look exactly like it we can be changed between the font or the font size boldness but this should get us in a good place to go okay so this then gives us a pretty good start at what our initial bio looks like here uh before we go on and start adding to another section and exploring a little bit more we can do with our css selectors uh let's see that are there any good questions from chat that we're looking at we definitely have a few let me let me give you some for example somebody was wondering about captions with the images and if you had an image with a caption how would that affect the divs that you're using with the image i think they were wondering if we would need two dibs or we just read one dip with a caption that's a great question so let's say we had text that like belongs to the image we would then want to put the image and the text inside the same div so that it moved around in one block that's a great intuition from the question for because that's how that works there yeah and somebody was also wondering if there's a trick to remembering the difference between a margin and padding oh there are many many tricks i can say the best trick is uh always keep a codecademy cheat sheet on hands uh and then you can reference that for any for any uh anytime you have questions about it but honestly the best answer is just practice uh the more practice you have building these things out and going through and kind of like learning the material the better equipped you're going to be to be working right great okay and one minute one last question yeah are you reading the question about the uh the default alignment i was going to talk about the one about the padding the go ahead for the alignment oh yeah uh i'll read your question for this question first uh your the users are your elements are aligned vertically by default in html on your elements inline by default when you use flexbox they're wondering about alignments in line uh it's a good question so i think generally inline elements are just going to show up next to each other and that's going to be the defaults for like how things are in line i'll just refer back to we've got lots more content on like flexbox and alignment and there's a lot of jump that you can get into i'm sorry to go check out our content for more information there uh great okay so now we've got some uh we've got our basic page built out here so we're going to want to go and add in some of the recent work below and you'll see also as we're starting to scrunch this this image does get a little scrunched because i'm a little bit zoomed in we'll talk at the end if we have time about one way of handling that which i think is a pretty neat solution to that problem okay so we want to add in some recent work so we've got this recent workstation so we're going to add in another header so we're going to take this recent work we're going to go back to our index and we're going to add another section that's going to reflect our recent work so we're going to have a header we'll say that's another h2 we're going to call it recent work and then when we go it's usable again we can see that appears great so we've got a recent work set up then we're going to want to go and add in some more of this rich content we have below so we have an individual so inside recent work we have a bunch of stuff we can use semantic html again to be organizing our content and say that each of those is going to be an article inside that article it's going to start with another header that's going to have the title of whatever it is that we're working with in this case that's text message analysis for that first project but notice when we go and build this something a little weird happens instead of showing up like top to bottom like the question was coming up from before uh we have this appear like to the right like all weird looking the reason for this is our css was implemented a little bit naively we were talking about changing how all of the sections worked we were talking about how all of the anchor tags were supposed to be displayed that was actually a little bit too wide because we have a new section but we don't want this section to have flexbox maybe things inside want to have that laid out but we we have been too uh over generic for how we've been defining our css properties so now we're going to need to do a little bit of refactoring so we can add some more specificity one excellent tool we have our dispos at our disposal is the class attribute a class attribute is a way of giving more information to a specific bit of content you have so we can take this section tag and say that it's class is going here to be bio now nothing changes when we run this it's still just the bio but when we go back to our css we can then specify that we want not every section to be just a flex display but only a section that has a uh class of bio now we can use a class selector by having a dot beforehand and then the name of the class and when we go and run this here we'll see that our text message analysis now appears below this which is where we want it to show up great while we're at it let's do a little bit more refactoring because there's another couple of those cropping up uh we've noticed that we've changed all of the images but we probably just want to change the profile image and we've changed all of the anchor tags but we probably just want to change the button that we have at the top so we can fix that by adding in some more classes more relevant here so we can go and take in this body we can take this image and call this a profile and i've been a little bit lacks here for making all of my quotation marks match so we can take this profile image as a class name quick uh what's this not like uh spacing i think so it does give you warnings which is helpful as you're trying to build things out and get an extra space in there profile image okay so again nothing's i say nothing changes but we've lost our image let's go ahead and make sure there we go so we have an extra there we go okay so it's helpful to be able to use the editor because it'll tell you if you've got any syntax wrong as you're writing it okay so now we have this built out we have our image that we can be specifying and we can do that by going back and saying we don't want to talk about all images just these profile images an app can go and change this sizing oh okay um let's see great so now we've gone and added that here because this kind of keeps well we'll get we'll get to that okay so now let's go in and add some of our recent work so we'll just go ahead and learn a little bit more about some html elements that we can be putting in here so inside of our recent work section we want to be grabbing all of this content and then just displaying it in roughly this form to the learner so i'm going to go and just add what's called an html comment which is stuff that doesn't actually show up but it's just a way we can be using to be organizing this material we can then go ahead and then add this here as a paragraph tag and then just be slotting some of this information in so that's a paragraph we can make this feb show up as a strong tag like we talked about before to make it bold and then we want all of these things to show up as a list we can do that by uh we could do that just by trying to like put line breaks behind them and doing it manually it's gonna be a lot easier to use what's called an unordered list which is another html element which will go and just display any list items with the li tag as uh bullet points you can even then specify that you want list items to be appearing a little bit differently uh depending on how you want your uh for your website to look also note as i've been doing this it's standard to be indenting content as you're encountering in here and then last we want to link to this github repo no longer comment and then we can go and add in a link which is just going to be a reference to whatever link we have for this project we can just say this is that uh uh say github's academy page slash code academy and then we'll do the same target blank thing so that it shows up where we want it to okay when we go and build this again we can see that we have this looking up but we can see we didn't actually remember to change our anchor styling so we still get this big button for both of them that's not what we want so we're going to go back and then add in a class here to this profile anchor to have it instead say that it's a button then back in our css we can specify that we want the anchor tags to only apply the buttons now we should have uh only things that should be buttons show up as buttons great loading we'll figure it out okay sure okay the last thing we'll want to do is just add a little image to this uh and we can do that by just adding another image we looked at how to find images i've got this one stored here you can use whatever image you want and so we'll go and take right below kind of the bottom the repo we'll go and add an image that has a source that has a selfclosing tag and it can be probably way too big my goodness that's a large image here so we want to go and specify how big these images should be uh just like we specified that there are profile images we can actually give this kind of image a way of talking about it by calling it something like say an article image and then constraining it from there first we'll need to go back to our css and then say that this here is in fact an article image then we'll want to go and say how big should this actual image be here and right now it's way too big so we're going to make it a little bit smaller so we're going to go here on to our image and we'll give it a slightly more reasonable size of say 512 pixels and so again that's the width property and we'll set that to 512 pixels okay much more reasonable now that it kind of shows up like this size and then the last thing we'll do on this part is we'll go and just make similar to before the image show up on the right instead of the lefthand side to do that we're going to specify that we want all of our articles to also have that flex layout so every article is going to have a display of flex with a semicolon and now this shows up next to each other but uh we forgot to group all the stuff together so it's trying to put all of them in a row so we can go back to our index and then change this to make all these bits of content grouped together and this back and forth is like a hundred percent the key of what development looks like is that you make a change it changes something you go back and you fix that change or make it look more like you wanted to okay one last thing that we're going to work on here because this has been bugging me throughout it and probably has been bugging you if you've been looking at it is my goodness this looks terrible with the smaller screen size doesn't it and our platform makes that very apparent because you know with this kind of two window layout but this image like is all scrunched you have to scroll over like this is all like uh it doesn't make any sense if you're trying to look at this on the phone it'd be a terrible experience you'd have to scroll to the right on your phone and see all the content that wouldn't be a good experience at all uh another weird thing is if we make our page bigger it also looks kind of weird like this is all going out all the way and like kind of takes up too much room the last thing we'll do is we'll fix those couple issues and we'll do that by uh using what's called a media query so media query is a way of specifying that you want your website to look different for different sizes so for this bio we can say that we don't want the bio to always be showing things next to each other if the screen's really small we actually want the things to be on top of each other so we can add a media query that says in cases when the max when the width of the page is below say 10 24 pixels we can say that the bio should not have a display uh should have a display of flex but its flex direction shouldn't be a row which is default but should instead be a column and then for smaller pages it starts to make a lot more sense and you can kind of breathe out a size relief as this actually looks like a real website you can look at it on the phone or a small screen from the bio section so that's immediately a lot better but this part still doesn't make any sense so we're going to want to give the same treatment where we go down and say that for articles we have another media query we're going to specify that the max width for anything that's 10 24 pixels or smaller articles should also have a flex direction of a column and that's going to make this appear a lot more reasonable one thing that'd be nice is if we could change this image because it's like kind of weirdly not picking up as much room as it could so we can give multiple things specificity inside these media queries we can be taking article images and saying hey if you are inside uh a really small phone you should actually just take up as much space as you can just take the full width of the phone and then this will make the images uh show up and take up a lot more space once we add in our units always important adventure units so now the image size is and it looks like a much more reasonable browsing experience the last thing that we can go and kind of fix up is that we want this to not all be like taking up the whole width of the page but maybe just like part of it so we can take that same magic 10 24 pixel number that we chose and then specify that for the body we want the max width of the body to be that 10 24 pixels don't take up more space than that even if you're happy to be on a bigger browser window so when we expand this out now we can see that it looks much more reasonable and again there's lots more that we need to be doing to make this kind of match up to what we were trying at the beginning like we could add some more padding here this uh styling we could change for this year we could make this bigger or we could add the lines in so it's a neverending project to be adding all of the styling that you're interested in but this gets us to a much reasonable more reasonable approximation one quick thing we can do that will make it nicer though is to just be adding uh some centering so we can go and say that using the margin and the auto feature we can say all of this should be centered so as you build out and make your website all this content is centered and then because it's bugging me we can add a little bit of space we could do other things like add more spacing here line in add more recent work so there's a lot of depth that you can get into but we only have an hour this live stream to talk about all of html and css for portfolio so we're not going to be able to get into just everything but we did review a lot so just talking taking a minute or so to go over what we have learned right here we have seen all of html or a lot of html and what you need to be building out the raw skeleton of a platform right here so we looked at how to use divs to group things we looked at how to create headings and paragraphs and sections and lists and images to be putting the building blocks of our website together we then saw that that kind of how it looked didn't match how we wanted it to look even though the content was all there it didn't have the right feel to it so we went and added some uh css to make this match the design that we were interested in seeing so we went from our design and then added in different coloring and we made things different sizes and we could lay things out in different directions and we could even specify things so it looked differently on different size devices so lots of content that we went through right here um we've learned a lot over the course of the lesson here and i'm excited to see people back on wednesday when we go to be adding some javascript for adding a dark mode for some more interactivity so with that i'll go ahead and hand it back to better thank you ben uh let's go through a quick couple questions before we end the live stream um there were some good ones here so somebody was wondering about the code that you've been using for the whole workshop and if that's something that we're going to be sharing at the end or it's something that you need to update at the end and maybe you can just explain a little bit how people can get to that code uh sorry uh if you are interested in the question if you're interested in looking at the code from this yeah the workspace they wanted to make sure that they are gonna you know have access to the workspace or where do they get the code yeah yes so i'll put the link up again the link to the workspace is inside the chat from youtube that link was right up top i'll go ahead and put it again right now so if you're interested in looking at the code we ended up with you can look at the link that's right in the youtube chat great and another question that somebody had earlier in the stream was about creating these portfolio projects and they were wondering what are your recommendations for somebody that might not have such much work experience or degree experience but they still want to showcase some of what they know when they are looking for jobs and internships your projects are more valuable than your work or your experience on portfolios like you can have as many degrees as you want to but the question people are going to be asking is what can you make what can you build so portfolios are great places to be showcasing the kind of work that you can produce as you're putting content together yeah okay great well with that thank you everybody for attending today's live stream i hope it was fun and useful experience for all of you if you want to try more content on your own just go sign up for a free account at codacademy.com we'll see you there tons of free content online plus all of our community spaces ready to help you out when you have some questions don't forget to subscribe and to follow on our social media whatever you are in instagram linkedin facebook twitter etc uh that's the best way to stay up to date with all all new content for example next week we're gonna have some exciting web3 content coming out so follow us online to find out just when that content on web3 drops thank you again and i'll see you all wednesday for part two of this workshop thank you ben thanks so much we'll see you there okay livestream is
