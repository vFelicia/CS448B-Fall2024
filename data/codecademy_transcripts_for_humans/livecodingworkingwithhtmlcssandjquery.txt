With timestamps:

00:02 - hi everyone welcome to live coding with
00:05 - codecademy I'm Dan an engineer at code
00:07 - academy and today we're going to work
00:09 - through a project in HTML CSS and jQuery
00:13 - the project we're doing today is from
00:15 - our code academy Pro offering you can
00:18 - find out more about codecademy Pro if
00:20 - you look at the description below
00:22 - and we're going to get started pretty
00:25 - quick so I'm going to just go ahead and
00:27 - show you the project we're going to be
00:28 - working on so here's kind of the end
00:30 - result that we're going to be working
00:31 - towards it's just a simple threaded
00:35 - comment form you come to the page you
00:38 - type in your thoughts we'll say hey and
00:40 - when we click post the comments will go
00:43 - below down in the list and so we're
00:45 - going to be working through creating the
00:47 - HTML the CSS and the JavaScript for this
00:50 - page from scratch so I'm going to begin
00:52 - by in my text editor creating a new file
00:56 - and I'm going to call it index.html
01:04 - and I'm going to start my HTML document
01:07 - with a doctype of HTML
01:12 - and then I'm going to create an HTML tag
01:15 - and a head tag
01:18 - and this is how you start pretty much
01:20 - all HTML documents after the
01:24 - head tag we're going to put in a body
01:26 - tag
01:30 - and we're going to close our HTML tag
01:33 - so the first thing we're going to want
01:34 - to do is look at our example project and
01:36 - kind of break up what we want our site
01:38 - to be so we see at the top we have a big
01:40 - header then we know we're going to have
01:42 - to have a form for the share your
01:44 - thoughts and the post button on the
01:46 - right and lastly we have this list of
01:49 - elements that the individual chat posts
01:53 - themselves and so the structure we're
01:55 - going to use for that I'm going to show
01:56 - you on the next page so we're going to
01:59 - have a header and inside the header
02:01 - we're going to have we're going to use a
02:03 - container it's going to be row based and
02:06 - we're going to use bootstrap in this
02:07 - project so we're going to use columns to
02:10 - lay things out and so we can get started
02:13 - by creating that header element first
02:17 - and so I'm going to do that inside of
02:19 - the body but before I do that it's
02:21 - important to we're going to include the
02:22 - bootstrap CSS and the way you do that is
02:25 - you can search on Google for bootstrap
02:28 - and you can go to the bootstrap getting
02:30 - started page and from there you see
02:32 - there's these links to the bootstrap CDN
02:35 - page
02:37 - um we're going to copy these links and
02:38 - we're going to paste them right into our
02:40 - head of our HTML document and I have
02:43 - that already copied
02:45 - so I'm going to go ahead and paste it
02:47 - into my head
02:49 - and now once it's pasted in my head I
02:52 - now have use of bootstraps CSS and for
02:56 - those of you who don't know bootstrap is
02:58 - a CSS framework it provides a lot of CSS
03:02 - for writing buttons drop down menus and
03:06 - a bunch of other CSS components that you
03:08 - can find out more about on the bootstrap
03:10 - website for this project we're going to
03:13 - be using the bootstrap grid system
03:16 - specifically and if you go down to the
03:19 - CSS part of their documentation you can
03:21 - read a little more about the grid system
03:24 - but what it allows you to do is create a
03:27 - 12 column grid system and style your
03:32 - page based on that and it makes a lot of
03:36 - things like responsive design really
03:37 - easy to do
03:39 - so I'm going to go ahead and make that
03:41 - header that we were talking about and
03:43 - I'm going to use a header element to do
03:45 - that and I'm going to give it a class of
03:47 - header as well and this will allow me to
03:49 - style that
03:52 - um
03:53 - element really easily and I think I'm
03:56 - going to increase my font too
03:58 - so you guys can see it a little better
04:06 - so once I create that header I'm going
04:08 - to go ahead and create the container to
04:10 - um
04:11 - put all my elements in and what this
04:14 - container allows me to do is
04:17 - it bootstrap will apply styles to this
04:21 - element that tell it to fit within the
04:23 - page in a certain way and it's a good
04:26 - thing to usually put your elements in
04:27 - containers because then you can make
04:29 - full use of bootstraps
04:32 - functionality
04:34 - and inside my container I'm going to put
04:36 - a row
04:40 - and I do that by creating a div and
04:42 - giving it a class of row and this is I'm
04:44 - going to apply those bootstrap styles to
04:46 - that element and So within that row I
04:48 - now have 12 columns to work with if we
04:51 - look at our sample we see that this
04:54 - first header kind of takes up the full
04:56 - width of the page so in our example HTML
04:59 - in our HTML we can do the same thing and
05:01 - we can do this by giving it a call class
05:04 - of 12 and so we do this by creating
05:06 - another div and so this will be our
05:08 - column
05:09 - and the classes were going to give it
05:12 - was we're going to give it two classes
05:13 - we're going to give it a class of call
05:15 - xs12
05:16 - and a class of call md-12
05:21 - so what this does is
05:25 - um
05:25 - is how you do responsive layouts with
05:28 - bootstrap so the first
05:30 - class this call access 12. this makes it
05:34 - so that any device that is smaller than
05:37 - 768 pixels this div will take up the
05:41 - full 12 columns
05:42 - and in the case of the device being
05:45 - bigger than that it'll take up the full
05:46 - columns as well and so we can do this
05:48 - because we want our
05:51 - top element the threadly to always take
05:53 - up the full width and we'll see how we
05:55 - um
05:56 - do this a little differently when we do
05:58 - a the share your thoughts on the post
06:00 - button where we want it to be a variable
06:02 - size columns
06:05 - so inside of my Cal div I'm going to
06:08 - create my header
06:10 - and I'm using H1 for this and just type
06:12 - in threadly
06:15 - now that I have some actual text that
06:18 - I'm using I'm going to be able to
06:20 - refresh the page
06:21 - and so now we have our version of
06:25 - project so far and it's not really
06:26 - styled and it looks a lot different than
06:28 - what we have over here so we're going to
06:31 - go ahead and create a CSS file and apply
06:33 - some custom styles to it so to do that
06:36 - I'm going to create a new file and I'm
06:38 - going to just call it style.css
06:48 - and once I create that style.css file I
06:52 - can go into my HTML document and I have
06:54 - to link to that
06:56 - CSS document just like I did for the
06:58 - bootstrap Styles and so I do that by
07:01 - doing link Rel equal to style sheet
07:05 - and before when we had this full URL to
07:08 - the bootstrap CDN we can actually do a
07:11 - little bit of a shorter one because the
07:12 - file we're referencing is in the same
07:14 - folder as the file we're currently
07:17 - editing so I can just type in style.css
07:19 - for my href and you can do that because
07:22 - the style.css is in the same folder as
07:25 - the index.html file
07:28 - so now that we have that we can go ahead
07:30 - and apply our styles to our H1 and the
07:34 - ones we're going to apply we can look at
07:36 - our example and we see that we have a
07:39 - left border that's green and we have our
07:42 - Texas moved over a little bit to the
07:43 - right from that border and the font
07:47 - looks a little bit different so let's
07:49 - see if we can
07:50 - get that to be close
07:52 - so I'm going to select that element by
07:55 - selecting the H1
07:57 - and I'm going to start off by making a
07:59 - border and I'm going to do border left
08:01 - and I'm going to do a 2 pixel border I'm
08:04 - going to do a solid border and I'm going
08:07 - to do a green that I kind of have in my
08:10 - head already so I'm going to do 0 0 f 2
08:13 - 8 F and this way of defining colors is
08:19 - called using hex values for them this is
08:22 - a pretty standard way of defining colors
08:25 - I'm going to change the font size to be
08:28 - 48 pixels
08:32 - I'm going to I want them to be a little
08:34 - bold so I'm going to set the font weight
08:35 - to be
08:36 - 400 pixels
08:39 - or just 400 sorry and I want
08:43 - there to be some padding in between the
08:45 - border on the left and the actual text
08:47 - so to do that I'm going to add padding
08:49 - on the left
08:51 - and we'll set that to 20 pixels
08:54 - so we can come and refresh our page we
08:56 - see that it looks a lot closer to what
08:58 - we had before but you might notice that
09:00 - the font's a little different and that's
09:01 - because the example project is using a
09:04 - custom font that we got from Google so
09:07 - to in order for us to use that we can
09:10 - look on Google fonts
09:17 - and the font that we want to use for
09:19 - this is called Montserrat and you can
09:22 - search for that on Google fonts to find
09:25 - it
09:27 - and here's the one that we want to use
09:30 - and when you to include it it's really
09:32 - simple you just add a line of CSS to the
09:34 - top of your page and I'll go ahead and
09:37 - four months Rod I have it kind of ready
09:40 - to go and so in my index.html file I do
09:44 - again another link
09:48 - and the row will be style sheet again
09:55 - and the href will be
10:00 - the link to the Google style sheet
10:04 - and so that's going to be I'm going to
10:06 - copy and paste it because it's a little
10:08 - long and I'll read it off
10:11 - and it's just https
10:13 - colon slash
10:16 - fonts.googleapis.com
10:18 - CSS and then the question mark family
10:21 - equals Montserrat and we want to use
10:23 - include both the 400 weight and the 700
10:26 - weight and that by including the 400 and
10:28 - 700 weight that's what allows us to
10:30 - style things with the font weight at
10:32 - 400.
10:34 - so now once we have that on our page
10:36 - um we need to add some style rules to
10:39 - make it so that we use that font and I'm
10:42 - going to apply them to the whole page
10:43 - because I want everything to use this
10:44 - font
10:46 - so to do that I'll do HTML and also
10:48 - select the body
10:50 - and I'll set my font family
10:54 - to be
10:55 - um Montserrat
10:57 - and I'm lots of times when you include
11:00 - fonts or maybe an issue with loading
11:02 - that font so it's a good thing to also
11:04 - include a fallback font so for our
11:06 - fallback we're going to just use any
11:07 - Sans serif font
11:11 - and it's on serif font is a font without
11:13 - the little Nubs on the end of the
11:16 - letters
11:18 - so now when I refresh the page we see
11:20 - that we have the same font as we had
11:21 - before and it looks like what we were
11:24 - going for
11:26 - so now that we have our header element
11:29 - taken care we can move on to the form
11:31 - itself and the form has two elements it
11:34 - has a input field and then it has a post
11:37 - button so we're going to start the same
11:40 - way we did for the previous element for
11:43 - the r header this time we're going to
11:45 - create a div and we're going to give it
11:46 - a class of Main
11:49 - and this will let us style it later
11:52 - and inside there we're again going to
11:54 - use a container div and so we do that
11:56 - with div class equals container
12:01 - and just like before we're going to do a
12:05 - row and do div class equal to row
12:12 - and so we know we have to have a form so
12:14 - we can go ahead and create a form
12:16 - element
12:18 - and so to do that we just do a form tag
12:21 - and I'm going to give it a class of form
12:23 - so we can style it
12:26 - and I just noticed I didn't close my
12:30 - link tab for my Google font URL
12:33 - it's important to always remember to
12:35 - close your tags or else you'll get
12:38 - errors that you're not expecting later
12:45 - and once we have that form we can now
12:46 - start to use bootstraps grid system a
12:49 - little more
12:51 - um
12:52 - interesting than what we did for when we
12:53 - just had a 12 column layout for our H1
12:58 - so the First Column we're going to make
13:00 - is going to be it's going to be for our
13:03 - input field and we're going to give it
13:06 - two classes again we're going to give it
13:08 - one of call
13:09 - xs8 and so this will say when the device
13:12 - is smaller than 700 pixels to use eight
13:14 - columns
13:16 - but we're also this time going to say
13:18 - that when it's a bigger device to use 10
13:21 - columns
13:25 - and to make our input field we're going
13:27 - to use an input element
13:30 - we're going to give it an ID of comment
13:33 - the type of the input is a text input
13:38 - and we also wanted to have some
13:40 - placeholder text the placeholder text
13:42 - was share your thoughts and our mock-up
13:45 - so to do that we just add the
13:48 - placeholder attribute
13:51 - and we set it equal to share your
13:53 - thoughts
13:59 - now when I refresh the page we have our
14:01 - input element here and um
14:04 - we're gonna we can go ahead and style
14:06 - we'll style put the whole form together
14:07 - we'll wait until we have our input
14:09 - submit button to
14:12 - so for the submit button we're going to
14:14 - create another column div
14:17 - and this time we're going to say the
14:20 - call XS is four
14:23 - and the Cal MD is going to be 2. and so
14:28 - one thing you'll notice is you always
14:31 - want to have inside of a row right you
14:34 - always want to have the columns sum up
14:37 - to 12. so before we had just one column
14:39 - and we used 12 so that was making use of
14:41 - all 12 columns and in this case we're
14:44 - using
14:46 - um
14:46 - eight and four and that sums up to 12
14:48 - and then for the bigger device we're
14:50 - using 10 and 2.
14:56 - oh and I um close my form tag a little
14:59 - early there too
15:01 - so we're going to use a button for our
15:04 - submit element and to do that we're
15:06 - going to create a button tag and the
15:09 - type of it is going to be submit
15:12 - and we're going to give it a class of
15:14 - button too
15:16 - and inside of there we're going to set
15:18 - the text to post and we can just go
15:20 - ahead and close the button
15:22 - so now when I refresh the page you'll
15:24 - see that we have our post button here
15:26 - and our input here and we can kind of
15:29 - resize the page to show how bootstraps
15:33 - grid system behaves a little bit so as I
15:35 - move to a smaller device you'll see the
15:36 - button shifts over to the left and
15:38 - that's because it's now taking up a
15:40 - fewer to share your thoughts is taking
15:43 - up fewer columns it went down from 10
15:46 - columns to eight columns and so that's
15:48 - why that jump happens and we'll be able
15:49 - to see that more once we style the form
15:52 - a little better so the style it will go
15:54 - over to our style sheet
15:57 - and the first thing we're going to style
15:59 - is our input so to select that we're
16:01 - going to select a form
16:03 - and then we're going to additionally
16:05 - select that input so this way of using
16:08 - CSS says for a form element select an
16:11 - input element inside of a form element
16:15 - we're going to give it a background
16:16 - color that's Gray
16:19 - and we're going to do what a gray that's
16:21 - typed in by F 0 f 0 f 0.
16:26 - and we want to have a border on the left
16:29 - of two pixels
16:35 - and it'll be a solid border and we're
16:37 - actually going to make a white border
16:39 - and this may seem a little strange right
16:40 - now but if you look at the mock that we
16:43 - have when you click you see there's this
16:46 - fade that goes from having no border to
16:48 - a border and by setting the Border here
16:50 - it'll allow us to make that transition
16:52 - nice when we add a CSS transition to
16:55 - things
16:59 - and
17:01 - we're going to set the Border To None
17:03 - because we don't want we don't want to
17:05 - border around the whole thing we just
17:06 - want a border around the left side
17:11 - the next thing we're going to do is
17:12 - increase the font size and we're going
17:14 - to use 36 pixels for it
17:18 - we're going to give it some padding on
17:20 - the left so that our input text isn't
17:22 - right up against that border that we
17:24 - have
17:25 - and we'll do that with just putting
17:27 - padding of 20 pixels and we're going to
17:28 - put it around the whole thing not just
17:30 - on the left side this time
17:32 - and we want our form to take up the
17:34 - entire column that it's contained in so
17:37 - we can set width equal to 100 percent
17:44 - we can refresh and see what we have and
17:46 - so now that looks pretty close to what
17:48 - we had in our mock-up the we still need
17:50 - to work on the post and we probably
17:52 - should add some padding in between
17:53 - threadly and share your thoughts
17:56 - so to do that we're going to actually
17:58 - add a style to that main element that we
18:00 - have and so we'll do that by selecting
18:03 - the class that we use for Main and if we
18:05 - look back at our HTML we use div class
18:07 - equal main so to select that we'll use
18:10 - the period notation mean and so that
18:13 - says select an element with the class of
18:15 - Main
18:16 - and we're going to set the margin on the
18:19 - top equal to 80 pixels
18:24 - now when I go ahead and refresh the page
18:26 - we'll see we have a much better spacing
18:28 - in between there
18:30 - so the next thing we're going to work on
18:32 - is styling our button and the way we're
18:35 - going to do that is by
18:38 - selecting a button element with the
18:40 - class of BTN and so that's what this
18:43 - syntax is where we have the button and
18:45 - then immediately without a space dot BTN
18:47 - says select a button that also has the
18:50 - class BTN
18:52 - so looking at the button we see it's
18:54 - just a it's a green text for post and
18:57 - there's no background and no border and
19:00 - there's a little bit of padding
19:02 - so we can go ahead and do that in our
19:04 - CSS
19:06 - by we'll say background is transparent
19:11 - we'll say the border is none
19:14 - we're going to use that same green that
19:16 - we use for the H1 for the border on the
19:19 - left and so to change the text color we
19:22 - use the color
19:24 - and we're going to set the color to 0 0
19:27 - f to a f
19:29 - we want to when we hover over the button
19:31 - we want it to switch to a pointer so we
19:34 - can say cursor is pointer
19:40 - and we want to have the font size be the
19:43 - same as we had for our input so we'll
19:44 - say font size
19:46 - is 36 pixels
19:49 - and we said we wanted to add some
19:51 - padding to the button so we'll do
19:53 - padding 20 pixels and 24 pixels so with
19:59 - this shorthand notation means is the
20:02 - first when you have padding or margin
20:04 - and you have two numbers the first
20:06 - number applies to the top and bottom and
20:08 - the second number applies to the left
20:10 - and the right so we're giving 20 padding
20:11 - on the top 20 on the bottom 24 on the
20:14 - left and 24 on the right so I can save
20:16 - my CSS and refresh the HTML document and
20:20 - so now we have something that looks
20:21 - pretty close to what we have there and
20:23 - now when I resize you can see really
20:25 - what setting those call MD and Kyle XS
20:29 - classes do so when I shrink the page
20:34 - it gets this number of columns that
20:37 - share your thoughts takes up is smaller
20:39 - so that those page can fit as we get to
20:41 - smaller resolutions
20:43 - and so this is really good if you want
20:44 - to make a site that's good for mobile
20:49 - so the next if we looked at our mock we
20:52 - see there's these two transitions when
20:53 - you click on the share your thoughts the
20:55 - background Fades to White and we see the
20:58 - border on the left and for the Post
21:00 - button when we hover it we see that the
21:02 - background turns the green and the text
21:03 - turns the white so we can do this by
21:06 - making a CSS transition
21:08 - and the way we do CSS transitions is
21:11 - with a CSS property that we can apply to
21:15 - a different state of the input
21:19 - so for our form input we want that
21:22 - transition to happen when the input is
21:24 - focused so we'll select form input again
21:26 - but we're going to use a CSS modifier on
21:29 - it called focus and that's just colon
21:31 - focus at the end so this says this
21:33 - element the CSS rules that I'm going to
21:37 - write here need will only apply to the
21:39 - form input when it's focused so we're
21:42 - going to do a white background
21:44 - that's FFF
21:46 - we want to give it a border left that's
21:49 - two pixels that's solid and is black and
21:53 - we'll use the hex for that which is just
21:55 - zero zero zero
21:57 - we're going to remove the Box shadow
22:02 - and one thing when you typically hover
22:05 - over forms you see that there's this
22:07 - blue border along the outside we're
22:09 - going to remove that Outline by saying
22:12 - outline is none
22:15 - now if we refresh the page and we click
22:17 - you'll see that it kind of it does our
22:19 - transition but it's really jumpy so what
22:23 - we need to do is Define what the
22:25 - transition actually is
22:27 - so to do that we're going to go into our
22:29 - form input
22:31 - and we're going to add a transition
22:32 - property
22:35 - and we're going to tell it what
22:37 - properties we want to transition and
22:39 - over how long we want them to transition
22:42 - for so we want the background to
22:44 - transition over a period of two seconds
22:46 - and we want the Border left to
22:48 - transition over a period of two seconds
22:53 - so now if I refresh the page and click
22:54 - on the share your thoughts button you
22:57 - see the transition is smooth and it
22:59 - takes it goes over those two seconds
23:01 - that we had for the that we wrote in our
23:04 - background transition property
23:06 - and so we're going to do the same exact
23:08 - thing for our button
23:11 - and I'm going to create a new class at
23:12 - the bottom
23:15 - and I'm going to select my button again
23:18 - and this time instead of focus we're
23:21 - going to use hover because we want this
23:22 - transition to apply when the element is
23:25 - hovered not focused
23:27 - and we're going to for this all we're
23:30 - going to do is swap the background and
23:32 - the color
23:33 - so the background now is going to be
23:35 - green and so that's that zero zero f28f
23:40 - and the color is going to switch to
23:42 - White which we can do with FFF
23:46 - now when I go and refresh my page and I
23:49 - hover over the post we get that jumpy
23:52 - Behavior again and so that means we need
23:54 - to apply the transition property to our
23:56 - button.vtn
23:58 - so we're going to do Transition again
24:01 - and this time we're going to say the
24:03 - background transitions over two seconds
24:05 - and the color transitions over two
24:08 - seconds
24:09 - now when I refresh the page and I hover
24:12 - over post we get that clean transition
24:14 - there and the clean transition back to
24:16 - the non-selected state
24:21 - so now that we have our form in place
24:24 - it's we're going to go ahead and make
24:26 - our list element that will contain our
24:30 - comments and we're going to do this
24:32 - using an unordered list element
24:35 - and the way you make an unordered list
24:37 - element is by doing UL we're going to
24:40 - give it a class equal to comments
24:45 - and we'll also give it an ID equal to
24:48 - comments and so this will allow us when
24:50 - we write the jQuery part of the page to
24:53 - select the element by its ID
24:56 - and I'm going to write two just kind of
24:59 - example comments so we'll be able to
25:01 - kind of have some data to work with in
25:03 - the beginning
25:03 - and the ones that we had on the page
25:07 - were have you felt it and there has been
25:10 - an Awakening
25:12 - so I'll go ahead and write them in
25:19 - and the LI is just a standard list
25:22 - element
25:28 - I can refresh my page and I have my two
25:30 - elements but they're not styled anywhere
25:32 - near what I want them to be so I have to
25:35 - add some custom styles again I'll go
25:38 - into my style sheet
25:40 - and I'm going to select the comments
25:44 - element
25:46 - and I'm going to give it some padding
25:49 - above so it's not so close to the share
25:51 - your thoughts form
25:52 - I'll say
25:54 - um we'll do that with margin and we'll
25:55 - do margin top 20 pixels
25:59 - and
26:01 - um one thing you can see here is we have
26:03 - these little dots on the left side
26:05 - um the way we get rid of that is by
26:07 - setting the list style to none
26:12 - and we're also going to set padding left
26:14 - equal to zero pixels we do this because
26:18 - browsers automatically apply some
26:20 - padding for UL elements and so we have
26:23 - to override but the defaults are in
26:25 - order to get it how we want it to be
26:28 - I can refresh the page and we no longer
26:30 - have our dots the comments are up on the
26:33 - left but we still don't have quite what
26:35 - they are here so we can go ahead and add
26:37 - some styles to our individual Li
26:39 - elements themselves
26:41 - so do that we'll select the LI elements
26:43 - on the page
26:45 - and we're going to give them padding
26:48 - left of 20 pixels
26:50 - and this will allow us to set our border
26:52 - off of the comments themselves we're
26:56 - going to add a border left of two pixels
27:00 - that's solid and this time we're going
27:03 - to use black for the Border
27:06 - we're going to increase the font size
27:07 - again
27:09 - and set it to 36 pixels
27:14 - now if I refresh
27:17 - we're pretty good but the only thing is
27:19 - there's a little bit of space in between
27:20 - them so we're going to give them um
27:22 - some margin
27:31 - and so this gives them bottom margin
27:34 - of 36 pixels so if I refresh now they're
27:37 - spaced much better and they look pretty
27:40 - close to what our mock-up has here
27:45 - now that we have our page styled we can
27:48 - go on to adding the JavaScript
27:50 - functionality so we can type into the
27:53 - form now if we try to type into the form
27:54 - we'll see that we don't really get
27:56 - anything that happens we click post and
27:58 - it just kind of refreshes the page
28:01 - so to add the JavaScript functionality
28:04 - we're going to make use of jQuery
28:08 - and to include jQuery we can include it
28:11 - from a CDN just like we did for the
28:14 - bootstrap CDN and I have that link
28:17 - already copied into my clipboard so I
28:20 - can go ahead and I'm going to put this
28:22 - script at the bottom of the page and I
28:24 - we're going to put all our scripts at
28:26 - the bottom of the page so that they load
28:28 - after all the HTML is loaded
28:31 - so I'm going to type script and the
28:34 - source is going to be equal to a CDN URL
28:38 - for jQuery
28:42 - and you can find this URL and if you
28:45 - search on Google for jQuery CDN
28:49 - and you'll see you go to the jQuery site
28:53 - and you can just copy the link to the
28:57 - minified jQuery or the compress
28:59 - uncompressed and we're using jQuery 2
29:02 - for this
29:03 - and if you're using ie9 or below you
29:06 - should use jQuery one
29:10 - so now that we have our jQuery code
29:12 - included we need to have our own script
29:15 - so we're going to create a new file
29:18 - and we're going to call it script.js
29:22 - and once now that we've created our
29:23 - script we need to also include it on our
29:26 - page so right below the jQuery script
29:29 - we're going to say script
29:31 - source and just like with our style
29:34 - sheet how we were able to use a relative
29:36 - URL we can do the same thing for our
29:38 - script
29:43 - and then we're going to close it with a
29:44 - script tag
29:45 - and the ordering here is very important
29:48 - because our script is going to use
29:50 - jQuery we need to include it after
29:52 - jQuery has been loaded and so by using
29:55 - include by writing the script tag after
29:57 - the jQuery tag it'll ensure that our
30:00 - script runs after the jQuery script
30:03 - so in our script file we're going to do
30:07 - we're going to create a main function
30:08 - and we do that by saying VAR Main
30:11 - equals function
30:15 - and we want this main function because
30:17 - we want it to be run when the page loads
30:20 - and so the way we have this function run
30:22 - when the page loads is by using jQuery
30:26 - and we're going to do the way we access
30:28 - jqueries with the dollar sign variable
30:30 - so we're going to type dollar sign we're
30:33 - going to use the parentheses and we're
30:34 - going to select document
30:36 - and we're going to say when the document
30:39 - is ready we want our main function to be
30:42 - called and so this is um the standard
30:44 - Syntax for doing that so this says
30:45 - jQuery when
30:47 - select the document and then attach a
30:49 - listener to the document that is called
30:51 - when the document is ready and then when
30:54 - the document is ready we're going to
30:55 - call our main function so now that we
30:57 - have this in place we can write out of
30:59 - our code to handle the interactions on
31:01 - our page inside of our main function
31:04 - so the one interaction that we have to
31:06 - work on is the interaction that happens
31:08 - when you submit the form
31:11 - so to do that we can use jQuery to
31:13 - select that form element so we can use
31:16 - dollar sign again and this time we're
31:19 - going to use form and so this tells
31:21 - jQuery to select all the form elements
31:23 - on the page and since we only have one
31:26 - form on the page that's why we're able
31:27 - to just select form
31:31 - and we want to attach a event listener
31:35 - to the submit action and so we do that
31:37 - by after we've selected our form by
31:39 - calling the submit function
31:42 - and we want to pass that submit function
31:44 - another function
31:47 - and this is called our event listener
31:49 - and so now we have a function
31:52 - that will get called whenever the form
31:55 - is submitted
31:57 - and so this is where we're going to put
31:59 - our interactions for when the form is
32:01 - submitted
32:02 - and the first thing we want to do is
32:04 - when the form is submitted we want to
32:06 - take we want to get the text that's in
32:09 - our input box and we want to store it
32:10 - inside of a variable
32:12 - so to do that we're going to first we
32:14 - want to select that form input itself so
32:17 - we can do that and put it into a
32:19 - variable we'll call the variable dollar
32:21 - sign input
32:22 - and
32:24 - um
32:25 - we're going to use jQuery again
32:28 - and we want to select the target of the
32:31 - event and so that'll be equal to the
32:33 - form itself and so we can do that by
32:35 - saying event.target and um anytime
32:39 - you're working with jQuery and you
32:40 - attach an event listener to something
32:43 - the first argument that gets passed to
32:45 - your listener is an event and that event
32:48 - has different properties and one of the
32:50 - properties is the element that triggered
32:53 - that action and so in this case that
32:56 - element will be the form that we had
32:57 - here
32:59 - so now that we've selected our form
33:01 - element we want to select our input
33:03 - element within that form so to do that
33:05 - we're going to use the find function and
33:08 - so now we type find and we specify the
33:11 - element inside of our form that we want
33:13 - to find and in this case it's going to
33:16 - be the input element
33:18 - so now that we have our inputs stored in
33:22 - a variable we can get the value of the
33:25 - input and the way we do that is by using
33:28 - the Val function so I'm going to create
33:30 - a new variable called comment
33:33 - and I'm going to sign the value of it to
33:35 - input.val
33:39 - so now that we have the comment we can
33:41 - actually go about inserting the comment
33:44 - into the list below
33:47 - and so I'm going to use an if statement
33:50 - because I don't want to insert empty
33:52 - comments so I can check to see that the
33:54 - comment actually has some text by saying
33:56 - if comment is not equal to an empty
33:59 - string
34:02 - so if the comment is actually real
34:04 - common we can then go ahead and create
34:06 - an HTML element for the Li
34:08 - and I do that by saying we can say VAR
34:11 - HTML is equal to dollar sign and we're
34:15 - going to actually write HTML in here in
34:17 - this time and so anytime you write HTML
34:20 - inside of the jQuery function it'll
34:22 - create instead of selecting an element
34:24 - on the page it'll create a new element
34:26 - and so by doing this we've created a new
34:28 - Li element
34:30 - and we want to set the text inside of
34:33 - that Li to be equal to our comment and
34:36 - we can do that by using the text
34:37 - function so we do dot text
34:41 - and we pass in our comment
34:44 - so now we've created a li element that
34:48 - has the text of our comment inside of it
34:52 - so we now want to take that text and we
34:55 - want to insert it down below into our
34:58 - comments list
35:00 - so we can do that by using the pre-pen 2
35:03 - function and we'd use that by we take
35:06 - our element which is our Li HTML and
35:09 - we're going to prepend it to another
35:12 - element and we can pass it a CSS
35:16 - selector so we can pass it the comments
35:19 - that we did before so if we look back in
35:21 - our HTML document we gave this an ID of
35:25 - common so we can use that to um
35:28 - select that element and set the HTML to
35:31 - that so we'll do pound sign pound sign
35:34 - is the way you reference ID of an
35:36 - element
35:37 - so we're going to prepend it to comments
35:40 - so now we can see what happens if we
35:42 - refresh the page
35:44 - so if I go ahead and type
35:47 - I'll just do some gibberish and hit post
35:51 - it may I'm not sure if it'll show up but
35:53 - you'll you see a little flash down below
35:55 - and then the page seems to refresh and
35:58 - what's happening there is all browsers
36:01 - have default behaviors that they execute
36:04 - when a submit on a form is called and we
36:08 - don't really want the browser to do the
36:10 - default thing we because we're
36:11 - overriding with our custom code so the
36:13 - way we tell the browser to not do what
36:15 - it normally would do is by returning
36:17 - false at the end of our function
36:20 - and this will say don't do anything more
36:23 - with this event that the submit event
36:25 - that happened it kind of ends the
36:27 - execution so now if I refresh the page
36:30 - and I can post hey in my form and click
36:33 - post we see our comment goes down below
36:37 - and
36:39 - um one thing that's a little weird is
36:40 - our comment is still left over so you
36:42 - could accidentally hit enter a few times
36:45 - so we can get rid of that text
36:48 - by selecting our using our getting our
36:51 - input that we saved in a variable before
36:53 - and we can use the valve function again
36:56 - but this time by passing an empty string
36:59 - to the vowel we
37:02 - and go ahead and clear
37:04 - the input so I'm going to save the page
37:07 - and refresh
37:09 - and now when I type hey
37:11 - we can see that the elm the new Li
37:15 - element goes down below the form clears
37:19 - and it works how we set out to make it
37:23 - work and so that's it for this project
37:26 - we have some time so I'm going to try to
37:28 - do my best and see if I can answer a few
37:31 - questions that may have come across
37:34 - during the
37:36 - time
37:37 - on the chat has been pretty fast so it
37:40 - may not do so well
37:52 - I mean I saw a couple questions about is
37:54 - it possible to watch this later yeah
37:56 - this video we're not going to take it
37:58 - down so if you just come back you can
38:00 - watch it later
38:07 - um and then can I get a download of this
38:09 - code
38:10 - um
38:10 - yeah we can um post it online and we'll
38:14 - include the link to the code in the
38:17 - comments after the video is been
38:20 - released so you can um
38:22 - get it there I think that'll probably be
38:23 - the easiest way
38:26 - um so one question is for bootstrap and
38:28 - jQuery what happens if the CDN goes down
38:30 - and does this happen if the CDN were to
38:33 - go down you wouldn't be able to use the
38:35 - jQuery and bootstrap CSS
38:38 - um but it's very unlikely that this will
38:40 - happen there's tons of websites that
38:42 - rely on the jQuery and bootstrap
38:45 - cdns and so it's you can be pretty
38:49 - um
38:49 - confident that they're not going to go
38:51 - down
38:53 - uh and then what's the relationship
38:56 - between JavaScript and jQuery
38:59 - jQuery is a JavaScript library that
39:02 - allows
39:04 - it's really useful to handle things like
39:07 - browser compatibility
39:09 - it's just kind of an additional tool set
39:11 - on top of JavaScript that helps a lot of
39:14 - helps you write code a little bit
39:15 - quicker
39:18 - uh when another question is when should
39:21 - one use padding and when should you use
39:23 - margin so the difference between padding
39:26 - and margin is kind of a tricky one the
39:28 - way you can think about it is margin is
39:31 - what um it goes between elements out
39:34 - that are next to each other so if we
39:36 - were to look back at our HTML document
39:38 - and we see that we have this header
39:40 - element and we have our div here so if
39:44 - we were to apply margin top to this div
39:47 - it'll say it'll add space between the
39:50 - header and the div because that margin
39:52 - applies outside of an element
39:55 - but in some cases you want to apply
39:58 - spacing when you're actually inside of
40:00 - an element so a common reason you would
40:04 - do this is if the text inside of your
40:07 - element isn't an element so like we did
40:10 - this for our button so if you want to
40:12 - add spacing between the where the post
40:16 - is and where the border is for instance
40:19 - you could add padding because the
40:22 - padding will apply inside of the element
40:24 - and we can actually look at how that
40:26 - happens if I I'll add a border to the
40:28 - post button here if I go back to my
40:31 - button and if I say we'll do border is
40:35 - the two pixels solid and we'll set it to
40:38 - Black
40:41 - so now when I refresh my page you can
40:43 - see that there's space in between the
40:45 - post text and the border and that's
40:47 - because we use the padding here instead
40:50 - of margin so here's that padding that's
40:52 - 20 pixels and 24 pixels so the way to
40:55 - think about it is padding is four things
40:57 - on the inside and margin is for things
40:59 - on the outside
41:02 - uh where can I go to learn more about
41:04 - the bootstrap and the grid system
41:07 - um go to the bootstrap website you can
41:09 - it's just getbootstrap.com and to you
41:13 - can on the top of the page if you click
41:15 - on CSS
41:16 - and scroll a little down one of the
41:19 - first things they talk about is the grid
41:22 - system and I would just go ahead and
41:24 - read through that a little bit and if
41:28 - you need a little more help you can go
41:31 - to our make a website course on
41:33 - codeacademy so if you go to
41:34 - codeacademy.com
41:38 - and you go to our on the bottom make a
41:41 - website course you can go through this
41:45 - course and we do a lot of stuff with
41:47 - bootstrap on here so it'll teach you a
41:49 - bit too
41:52 - and for those that you don't know about
41:54 - what why you would use bootstrap and why
41:57 - group responsive design is important or
42:00 - responsive design allows you to do is
42:02 - change the layout of your page for
42:04 - different size screens this is really
42:07 - useful if you want to have a website
42:08 - that works both on mobile and on desktop
42:11 - and I can demonstrate this again if you
42:15 - look on this our page if I right now we
42:19 - have this element taking up the full
42:21 - width so now if I were to shrink this a
42:23 - little bit we see that this gets a
42:26 - little smaller and it takes up less
42:27 - space and that's because we now are on a
42:29 - smaller device
42:31 - so I go back to my HTML and if I were to
42:34 - change this to say remove these excess
42:37 - and so that we only are ever styling for
42:39 - big devices
42:42 - so now if I save that and refresh so now
42:45 - this the share your thoughts will always
42:47 - take 12 columns and the post will always
42:49 - take up two columns so I can refresh my
42:52 - page and now if I resize you see that
42:55 - the layout gets a little bit uh
42:57 - screwy and that's because the post
43:00 - element the post button has a fixed size
43:02 - and it needs to be contained in that
43:05 - two column so if it can't be contained
43:07 - on the two columns it pushes down below
43:09 - and so that's why it's really useful to
43:12 - use responsive design because it ensures
43:14 - that your web page will look good on
43:16 - both mobile devices and on desktop
43:18 - devices
43:22 - uh
43:24 - what would we have to do to make the
43:26 - comments we're posting stay even after
43:27 - we refresh the page so to do this you'd
43:31 - have to use some kind of server side
43:34 - language
43:34 - you could use Ruby on Rails you could
43:38 - use node.js you could even use something
43:40 - like Firebase I would recommend checking
43:44 - out our
43:45 - course on Ruby on Rails it'll teach you
43:48 - how to save data and retrieve it back on
43:53 - the server
43:56 - and that's all the time we have for
43:59 - questions
44:00 - um thanks everyone for joining today I
44:02 - hope you learned a lot
44:04 - um and again I if you're interested in
44:07 - learning doing more projects like this
44:10 - you should check out code academy Pro I
44:13 - think there's links in the description
44:15 - there's a ton of projects like this and
44:19 - I hope everyone has a fantastic day and
44:24 - we're gonna put um just so if you're not
44:27 - we'll put links to all the files that
44:28 - we've been using in the description
44:31 - below or in the comments afterwards so
44:34 - thanks everyone and have a good one

Cleaned transcript:

hi everyone welcome to live coding with codecademy I'm Dan an engineer at code academy and today we're going to work through a project in HTML CSS and jQuery the project we're doing today is from our code academy Pro offering you can find out more about codecademy Pro if you look at the description below and we're going to get started pretty quick so I'm going to just go ahead and show you the project we're going to be working on so here's kind of the end result that we're going to be working towards it's just a simple threaded comment form you come to the page you type in your thoughts we'll say hey and when we click post the comments will go below down in the list and so we're going to be working through creating the HTML the CSS and the JavaScript for this page from scratch so I'm going to begin by in my text editor creating a new file and I'm going to call it index.html and I'm going to start my HTML document with a doctype of HTML and then I'm going to create an HTML tag and a head tag and this is how you start pretty much all HTML documents after the head tag we're going to put in a body tag and we're going to close our HTML tag so the first thing we're going to want to do is look at our example project and kind of break up what we want our site to be so we see at the top we have a big header then we know we're going to have to have a form for the share your thoughts and the post button on the right and lastly we have this list of elements that the individual chat posts themselves and so the structure we're going to use for that I'm going to show you on the next page so we're going to have a header and inside the header we're going to have we're going to use a container it's going to be row based and we're going to use bootstrap in this project so we're going to use columns to lay things out and so we can get started by creating that header element first and so I'm going to do that inside of the body but before I do that it's important to we're going to include the bootstrap CSS and the way you do that is you can search on Google for bootstrap and you can go to the bootstrap getting started page and from there you see there's these links to the bootstrap CDN page um we're going to copy these links and we're going to paste them right into our head of our HTML document and I have that already copied so I'm going to go ahead and paste it into my head and now once it's pasted in my head I now have use of bootstraps CSS and for those of you who don't know bootstrap is a CSS framework it provides a lot of CSS for writing buttons drop down menus and a bunch of other CSS components that you can find out more about on the bootstrap website for this project we're going to be using the bootstrap grid system specifically and if you go down to the CSS part of their documentation you can read a little more about the grid system but what it allows you to do is create a 12 column grid system and style your page based on that and it makes a lot of things like responsive design really easy to do so I'm going to go ahead and make that header that we were talking about and I'm going to use a header element to do that and I'm going to give it a class of header as well and this will allow me to style that um element really easily and I think I'm going to increase my font too so you guys can see it a little better so once I create that header I'm going to go ahead and create the container to um put all my elements in and what this container allows me to do is it bootstrap will apply styles to this element that tell it to fit within the page in a certain way and it's a good thing to usually put your elements in containers because then you can make full use of bootstraps functionality and inside my container I'm going to put a row and I do that by creating a div and giving it a class of row and this is I'm going to apply those bootstrap styles to that element and So within that row I now have 12 columns to work with if we look at our sample we see that this first header kind of takes up the full width of the page so in our example HTML in our HTML we can do the same thing and we can do this by giving it a call class of 12 and so we do this by creating another div and so this will be our column and the classes were going to give it was we're going to give it two classes we're going to give it a class of call xs12 and a class of call md12 so what this does is um is how you do responsive layouts with bootstrap so the first class this call access 12. this makes it so that any device that is smaller than 768 pixels this div will take up the full 12 columns and in the case of the device being bigger than that it'll take up the full columns as well and so we can do this because we want our top element the threadly to always take up the full width and we'll see how we um do this a little differently when we do a the share your thoughts on the post button where we want it to be a variable size columns so inside of my Cal div I'm going to create my header and I'm using H1 for this and just type in threadly now that I have some actual text that I'm using I'm going to be able to refresh the page and so now we have our version of project so far and it's not really styled and it looks a lot different than what we have over here so we're going to go ahead and create a CSS file and apply some custom styles to it so to do that I'm going to create a new file and I'm going to just call it style.css and once I create that style.css file I can go into my HTML document and I have to link to that CSS document just like I did for the bootstrap Styles and so I do that by doing link Rel equal to style sheet and before when we had this full URL to the bootstrap CDN we can actually do a little bit of a shorter one because the file we're referencing is in the same folder as the file we're currently editing so I can just type in style.css for my href and you can do that because the style.css is in the same folder as the index.html file so now that we have that we can go ahead and apply our styles to our H1 and the ones we're going to apply we can look at our example and we see that we have a left border that's green and we have our Texas moved over a little bit to the right from that border and the font looks a little bit different so let's see if we can get that to be close so I'm going to select that element by selecting the H1 and I'm going to start off by making a border and I'm going to do border left and I'm going to do a 2 pixel border I'm going to do a solid border and I'm going to do a green that I kind of have in my head already so I'm going to do 0 0 f 2 8 F and this way of defining colors is called using hex values for them this is a pretty standard way of defining colors I'm going to change the font size to be 48 pixels I'm going to I want them to be a little bold so I'm going to set the font weight to be 400 pixels or just 400 sorry and I want there to be some padding in between the border on the left and the actual text so to do that I'm going to add padding on the left and we'll set that to 20 pixels so we can come and refresh our page we see that it looks a lot closer to what we had before but you might notice that the font's a little different and that's because the example project is using a custom font that we got from Google so to in order for us to use that we can look on Google fonts and the font that we want to use for this is called Montserrat and you can search for that on Google fonts to find it and here's the one that we want to use and when you to include it it's really simple you just add a line of CSS to the top of your page and I'll go ahead and four months Rod I have it kind of ready to go and so in my index.html file I do again another link and the row will be style sheet again and the href will be the link to the Google style sheet and so that's going to be I'm going to copy and paste it because it's a little long and I'll read it off and it's just https colon slash fonts.googleapis.com CSS and then the question mark family equals Montserrat and we want to use include both the 400 weight and the 700 weight and that by including the 400 and 700 weight that's what allows us to style things with the font weight at 400. so now once we have that on our page um we need to add some style rules to make it so that we use that font and I'm going to apply them to the whole page because I want everything to use this font so to do that I'll do HTML and also select the body and I'll set my font family to be um Montserrat and I'm lots of times when you include fonts or maybe an issue with loading that font so it's a good thing to also include a fallback font so for our fallback we're going to just use any Sans serif font and it's on serif font is a font without the little Nubs on the end of the letters so now when I refresh the page we see that we have the same font as we had before and it looks like what we were going for so now that we have our header element taken care we can move on to the form itself and the form has two elements it has a input field and then it has a post button so we're going to start the same way we did for the previous element for the r header this time we're going to create a div and we're going to give it a class of Main and this will let us style it later and inside there we're again going to use a container div and so we do that with div class equals container and just like before we're going to do a row and do div class equal to row and so we know we have to have a form so we can go ahead and create a form element and so to do that we just do a form tag and I'm going to give it a class of form so we can style it and I just noticed I didn't close my link tab for my Google font URL it's important to always remember to close your tags or else you'll get errors that you're not expecting later and once we have that form we can now start to use bootstraps grid system a little more um interesting than what we did for when we just had a 12 column layout for our H1 so the First Column we're going to make is going to be it's going to be for our input field and we're going to give it two classes again we're going to give it one of call xs8 and so this will say when the device is smaller than 700 pixels to use eight columns but we're also this time going to say that when it's a bigger device to use 10 columns and to make our input field we're going to use an input element we're going to give it an ID of comment the type of the input is a text input and we also wanted to have some placeholder text the placeholder text was share your thoughts and our mockup so to do that we just add the placeholder attribute and we set it equal to share your thoughts now when I refresh the page we have our input element here and um we're gonna we can go ahead and style we'll style put the whole form together we'll wait until we have our input submit button to so for the submit button we're going to create another column div and this time we're going to say the call XS is four and the Cal MD is going to be 2. and so one thing you'll notice is you always want to have inside of a row right you always want to have the columns sum up to 12. so before we had just one column and we used 12 so that was making use of all 12 columns and in this case we're using um eight and four and that sums up to 12 and then for the bigger device we're using 10 and 2. oh and I um close my form tag a little early there too so we're going to use a button for our submit element and to do that we're going to create a button tag and the type of it is going to be submit and we're going to give it a class of button too and inside of there we're going to set the text to post and we can just go ahead and close the button so now when I refresh the page you'll see that we have our post button here and our input here and we can kind of resize the page to show how bootstraps grid system behaves a little bit so as I move to a smaller device you'll see the button shifts over to the left and that's because it's now taking up a fewer to share your thoughts is taking up fewer columns it went down from 10 columns to eight columns and so that's why that jump happens and we'll be able to see that more once we style the form a little better so the style it will go over to our style sheet and the first thing we're going to style is our input so to select that we're going to select a form and then we're going to additionally select that input so this way of using CSS says for a form element select an input element inside of a form element we're going to give it a background color that's Gray and we're going to do what a gray that's typed in by F 0 f 0 f 0. and we want to have a border on the left of two pixels and it'll be a solid border and we're actually going to make a white border and this may seem a little strange right now but if you look at the mock that we have when you click you see there's this fade that goes from having no border to a border and by setting the Border here it'll allow us to make that transition nice when we add a CSS transition to things and we're going to set the Border To None because we don't want we don't want to border around the whole thing we just want a border around the left side the next thing we're going to do is increase the font size and we're going to use 36 pixels for it we're going to give it some padding on the left so that our input text isn't right up against that border that we have and we'll do that with just putting padding of 20 pixels and we're going to put it around the whole thing not just on the left side this time and we want our form to take up the entire column that it's contained in so we can set width equal to 100 percent we can refresh and see what we have and so now that looks pretty close to what we had in our mockup the we still need to work on the post and we probably should add some padding in between threadly and share your thoughts so to do that we're going to actually add a style to that main element that we have and so we'll do that by selecting the class that we use for Main and if we look back at our HTML we use div class equal main so to select that we'll use the period notation mean and so that says select an element with the class of Main and we're going to set the margin on the top equal to 80 pixels now when I go ahead and refresh the page we'll see we have a much better spacing in between there so the next thing we're going to work on is styling our button and the way we're going to do that is by selecting a button element with the class of BTN and so that's what this syntax is where we have the button and then immediately without a space dot BTN says select a button that also has the class BTN so looking at the button we see it's just a it's a green text for post and there's no background and no border and there's a little bit of padding so we can go ahead and do that in our CSS by we'll say background is transparent we'll say the border is none we're going to use that same green that we use for the H1 for the border on the left and so to change the text color we use the color and we're going to set the color to 0 0 f to a f we want to when we hover over the button we want it to switch to a pointer so we can say cursor is pointer and we want to have the font size be the same as we had for our input so we'll say font size is 36 pixels and we said we wanted to add some padding to the button so we'll do padding 20 pixels and 24 pixels so with this shorthand notation means is the first when you have padding or margin and you have two numbers the first number applies to the top and bottom and the second number applies to the left and the right so we're giving 20 padding on the top 20 on the bottom 24 on the left and 24 on the right so I can save my CSS and refresh the HTML document and so now we have something that looks pretty close to what we have there and now when I resize you can see really what setting those call MD and Kyle XS classes do so when I shrink the page it gets this number of columns that share your thoughts takes up is smaller so that those page can fit as we get to smaller resolutions and so this is really good if you want to make a site that's good for mobile so the next if we looked at our mock we see there's these two transitions when you click on the share your thoughts the background Fades to White and we see the border on the left and for the Post button when we hover it we see that the background turns the green and the text turns the white so we can do this by making a CSS transition and the way we do CSS transitions is with a CSS property that we can apply to a different state of the input so for our form input we want that transition to happen when the input is focused so we'll select form input again but we're going to use a CSS modifier on it called focus and that's just colon focus at the end so this says this element the CSS rules that I'm going to write here need will only apply to the form input when it's focused so we're going to do a white background that's FFF we want to give it a border left that's two pixels that's solid and is black and we'll use the hex for that which is just zero zero zero we're going to remove the Box shadow and one thing when you typically hover over forms you see that there's this blue border along the outside we're going to remove that Outline by saying outline is none now if we refresh the page and we click you'll see that it kind of it does our transition but it's really jumpy so what we need to do is Define what the transition actually is so to do that we're going to go into our form input and we're going to add a transition property and we're going to tell it what properties we want to transition and over how long we want them to transition for so we want the background to transition over a period of two seconds and we want the Border left to transition over a period of two seconds so now if I refresh the page and click on the share your thoughts button you see the transition is smooth and it takes it goes over those two seconds that we had for the that we wrote in our background transition property and so we're going to do the same exact thing for our button and I'm going to create a new class at the bottom and I'm going to select my button again and this time instead of focus we're going to use hover because we want this transition to apply when the element is hovered not focused and we're going to for this all we're going to do is swap the background and the color so the background now is going to be green and so that's that zero zero f28f and the color is going to switch to White which we can do with FFF now when I go and refresh my page and I hover over the post we get that jumpy Behavior again and so that means we need to apply the transition property to our button.vtn so we're going to do Transition again and this time we're going to say the background transitions over two seconds and the color transitions over two seconds now when I refresh the page and I hover over post we get that clean transition there and the clean transition back to the nonselected state so now that we have our form in place it's we're going to go ahead and make our list element that will contain our comments and we're going to do this using an unordered list element and the way you make an unordered list element is by doing UL we're going to give it a class equal to comments and we'll also give it an ID equal to comments and so this will allow us when we write the jQuery part of the page to select the element by its ID and I'm going to write two just kind of example comments so we'll be able to kind of have some data to work with in the beginning and the ones that we had on the page were have you felt it and there has been an Awakening so I'll go ahead and write them in and the LI is just a standard list element I can refresh my page and I have my two elements but they're not styled anywhere near what I want them to be so I have to add some custom styles again I'll go into my style sheet and I'm going to select the comments element and I'm going to give it some padding above so it's not so close to the share your thoughts form I'll say um we'll do that with margin and we'll do margin top 20 pixels and um one thing you can see here is we have these little dots on the left side um the way we get rid of that is by setting the list style to none and we're also going to set padding left equal to zero pixels we do this because browsers automatically apply some padding for UL elements and so we have to override but the defaults are in order to get it how we want it to be I can refresh the page and we no longer have our dots the comments are up on the left but we still don't have quite what they are here so we can go ahead and add some styles to our individual Li elements themselves so do that we'll select the LI elements on the page and we're going to give them padding left of 20 pixels and this will allow us to set our border off of the comments themselves we're going to add a border left of two pixels that's solid and this time we're going to use black for the Border we're going to increase the font size again and set it to 36 pixels now if I refresh we're pretty good but the only thing is there's a little bit of space in between them so we're going to give them um some margin and so this gives them bottom margin of 36 pixels so if I refresh now they're spaced much better and they look pretty close to what our mockup has here now that we have our page styled we can go on to adding the JavaScript functionality so we can type into the form now if we try to type into the form we'll see that we don't really get anything that happens we click post and it just kind of refreshes the page so to add the JavaScript functionality we're going to make use of jQuery and to include jQuery we can include it from a CDN just like we did for the bootstrap CDN and I have that link already copied into my clipboard so I can go ahead and I'm going to put this script at the bottom of the page and I we're going to put all our scripts at the bottom of the page so that they load after all the HTML is loaded so I'm going to type script and the source is going to be equal to a CDN URL for jQuery and you can find this URL and if you search on Google for jQuery CDN and you'll see you go to the jQuery site and you can just copy the link to the minified jQuery or the compress uncompressed and we're using jQuery 2 for this and if you're using ie9 or below you should use jQuery one so now that we have our jQuery code included we need to have our own script so we're going to create a new file and we're going to call it script.js and once now that we've created our script we need to also include it on our page so right below the jQuery script we're going to say script source and just like with our style sheet how we were able to use a relative URL we can do the same thing for our script and then we're going to close it with a script tag and the ordering here is very important because our script is going to use jQuery we need to include it after jQuery has been loaded and so by using include by writing the script tag after the jQuery tag it'll ensure that our script runs after the jQuery script so in our script file we're going to do we're going to create a main function and we do that by saying VAR Main equals function and we want this main function because we want it to be run when the page loads and so the way we have this function run when the page loads is by using jQuery and we're going to do the way we access jqueries with the dollar sign variable so we're going to type dollar sign we're going to use the parentheses and we're going to select document and we're going to say when the document is ready we want our main function to be called and so this is um the standard Syntax for doing that so this says jQuery when select the document and then attach a listener to the document that is called when the document is ready and then when the document is ready we're going to call our main function so now that we have this in place we can write out of our code to handle the interactions on our page inside of our main function so the one interaction that we have to work on is the interaction that happens when you submit the form so to do that we can use jQuery to select that form element so we can use dollar sign again and this time we're going to use form and so this tells jQuery to select all the form elements on the page and since we only have one form on the page that's why we're able to just select form and we want to attach a event listener to the submit action and so we do that by after we've selected our form by calling the submit function and we want to pass that submit function another function and this is called our event listener and so now we have a function that will get called whenever the form is submitted and so this is where we're going to put our interactions for when the form is submitted and the first thing we want to do is when the form is submitted we want to take we want to get the text that's in our input box and we want to store it inside of a variable so to do that we're going to first we want to select that form input itself so we can do that and put it into a variable we'll call the variable dollar sign input and um we're going to use jQuery again and we want to select the target of the event and so that'll be equal to the form itself and so we can do that by saying event.target and um anytime you're working with jQuery and you attach an event listener to something the first argument that gets passed to your listener is an event and that event has different properties and one of the properties is the element that triggered that action and so in this case that element will be the form that we had here so now that we've selected our form element we want to select our input element within that form so to do that we're going to use the find function and so now we type find and we specify the element inside of our form that we want to find and in this case it's going to be the input element so now that we have our inputs stored in a variable we can get the value of the input and the way we do that is by using the Val function so I'm going to create a new variable called comment and I'm going to sign the value of it to input.val so now that we have the comment we can actually go about inserting the comment into the list below and so I'm going to use an if statement because I don't want to insert empty comments so I can check to see that the comment actually has some text by saying if comment is not equal to an empty string so if the comment is actually real common we can then go ahead and create an HTML element for the Li and I do that by saying we can say VAR HTML is equal to dollar sign and we're going to actually write HTML in here in this time and so anytime you write HTML inside of the jQuery function it'll create instead of selecting an element on the page it'll create a new element and so by doing this we've created a new Li element and we want to set the text inside of that Li to be equal to our comment and we can do that by using the text function so we do dot text and we pass in our comment so now we've created a li element that has the text of our comment inside of it so we now want to take that text and we want to insert it down below into our comments list so we can do that by using the prepen 2 function and we'd use that by we take our element which is our Li HTML and we're going to prepend it to another element and we can pass it a CSS selector so we can pass it the comments that we did before so if we look back in our HTML document we gave this an ID of common so we can use that to um select that element and set the HTML to that so we'll do pound sign pound sign is the way you reference ID of an element so we're going to prepend it to comments so now we can see what happens if we refresh the page so if I go ahead and type I'll just do some gibberish and hit post it may I'm not sure if it'll show up but you'll you see a little flash down below and then the page seems to refresh and what's happening there is all browsers have default behaviors that they execute when a submit on a form is called and we don't really want the browser to do the default thing we because we're overriding with our custom code so the way we tell the browser to not do what it normally would do is by returning false at the end of our function and this will say don't do anything more with this event that the submit event that happened it kind of ends the execution so now if I refresh the page and I can post hey in my form and click post we see our comment goes down below and um one thing that's a little weird is our comment is still left over so you could accidentally hit enter a few times so we can get rid of that text by selecting our using our getting our input that we saved in a variable before and we can use the valve function again but this time by passing an empty string to the vowel we and go ahead and clear the input so I'm going to save the page and refresh and now when I type hey we can see that the elm the new Li element goes down below the form clears and it works how we set out to make it work and so that's it for this project we have some time so I'm going to try to do my best and see if I can answer a few questions that may have come across during the time on the chat has been pretty fast so it may not do so well I mean I saw a couple questions about is it possible to watch this later yeah this video we're not going to take it down so if you just come back you can watch it later um and then can I get a download of this code um yeah we can um post it online and we'll include the link to the code in the comments after the video is been released so you can um get it there I think that'll probably be the easiest way um so one question is for bootstrap and jQuery what happens if the CDN goes down and does this happen if the CDN were to go down you wouldn't be able to use the jQuery and bootstrap CSS um but it's very unlikely that this will happen there's tons of websites that rely on the jQuery and bootstrap cdns and so it's you can be pretty um confident that they're not going to go down uh and then what's the relationship between JavaScript and jQuery jQuery is a JavaScript library that allows it's really useful to handle things like browser compatibility it's just kind of an additional tool set on top of JavaScript that helps a lot of helps you write code a little bit quicker uh when another question is when should one use padding and when should you use margin so the difference between padding and margin is kind of a tricky one the way you can think about it is margin is what um it goes between elements out that are next to each other so if we were to look back at our HTML document and we see that we have this header element and we have our div here so if we were to apply margin top to this div it'll say it'll add space between the header and the div because that margin applies outside of an element but in some cases you want to apply spacing when you're actually inside of an element so a common reason you would do this is if the text inside of your element isn't an element so like we did this for our button so if you want to add spacing between the where the post is and where the border is for instance you could add padding because the padding will apply inside of the element and we can actually look at how that happens if I I'll add a border to the post button here if I go back to my button and if I say we'll do border is the two pixels solid and we'll set it to Black so now when I refresh my page you can see that there's space in between the post text and the border and that's because we use the padding here instead of margin so here's that padding that's 20 pixels and 24 pixels so the way to think about it is padding is four things on the inside and margin is for things on the outside uh where can I go to learn more about the bootstrap and the grid system um go to the bootstrap website you can it's just getbootstrap.com and to you can on the top of the page if you click on CSS and scroll a little down one of the first things they talk about is the grid system and I would just go ahead and read through that a little bit and if you need a little more help you can go to our make a website course on codeacademy so if you go to codeacademy.com and you go to our on the bottom make a website course you can go through this course and we do a lot of stuff with bootstrap on here so it'll teach you a bit too and for those that you don't know about what why you would use bootstrap and why group responsive design is important or responsive design allows you to do is change the layout of your page for different size screens this is really useful if you want to have a website that works both on mobile and on desktop and I can demonstrate this again if you look on this our page if I right now we have this element taking up the full width so now if I were to shrink this a little bit we see that this gets a little smaller and it takes up less space and that's because we now are on a smaller device so I go back to my HTML and if I were to change this to say remove these excess and so that we only are ever styling for big devices so now if I save that and refresh so now this the share your thoughts will always take 12 columns and the post will always take up two columns so I can refresh my page and now if I resize you see that the layout gets a little bit uh screwy and that's because the post element the post button has a fixed size and it needs to be contained in that two column so if it can't be contained on the two columns it pushes down below and so that's why it's really useful to use responsive design because it ensures that your web page will look good on both mobile devices and on desktop devices uh what would we have to do to make the comments we're posting stay even after we refresh the page so to do this you'd have to use some kind of server side language you could use Ruby on Rails you could use node.js you could even use something like Firebase I would recommend checking out our course on Ruby on Rails it'll teach you how to save data and retrieve it back on the server and that's all the time we have for questions um thanks everyone for joining today I hope you learned a lot um and again I if you're interested in learning doing more projects like this you should check out code academy Pro I think there's links in the description there's a ton of projects like this and I hope everyone has a fantastic day and we're gonna put um just so if you're not we'll put links to all the files that we've been using in the description below or in the comments afterwards so thanks everyone and have a good one
