With timestamps:

00:03 - okay we're live
00:05 - hello hi everyone welcome welcome to the
00:09 - first live stream in our three-part
00:11 - journey through code Academy's Evolution
00:14 - we're so excited to walk you through
00:16 - this project from our course learn
00:18 - JavaScript I'm a Corey c code academy is
00:21 - content marketing manager and I'm joined
00:24 - by Fede Garcia Lorca our community
00:26 - manager who you probably recognize from
00:28 - forums and Discord as well as Zoe
00:31 - Bachmann our curriculum director and
00:34 - Melanie Williams an instructional
00:36 - designer who will be on hand ready to
00:38 - answer all of your questions in the chat
00:41 - so Augustus code Academy's birthday
00:44 - month which is very exciting and as Leos
00:49 - we're going all out and celebrating big
00:51 - we have a full lineup of plans including
00:54 - new AI course launches and interactive
00:57 - events like this one where we'll be
00:59 - covering topics like generative Ai and
01:01 - fight that for data python for data
01:03 - science so be sure to check out the
01:05 - calendar which is linked in the YouTube
01:07 - description below because we would love
01:09 - to see you there
01:10 - um today though we're throwing it back
01:12 - to the first ever course that code
01:15 - academy launched 12 years ago learn
01:17 - JavaScript JavaScript is a fundamental
01:20 - language for web developers and it's
01:22 - also one of the first languages that
01:23 - people tend to pick up when they're
01:25 - learning how to code Zoe will be walking
01:28 - us through a project from learn
01:29 - JavaScript step by step so you're
01:31 - welcome to follow along but keep in mind
01:33 - you can also take this course on your
01:35 - own time whenever you want and it's also
01:37 - linked in the YouTube description
01:40 - and this live stream will be available
01:42 - to replay if you get stuck or need hints
01:45 - let me tell you a little bit more about
01:46 - Zoe as the curriculum director at code
01:49 - academy she focuses on finding new ways
01:52 - to make learning to code more accessible
01:54 - and engaging Zoe is an artist and an
01:58 - educator who's interested in how we use
02:00 - technology to increase political
02:02 - engagement critique society and invent
02:05 - new forms of collaboration her practice
02:08 - involves research pedagogy and creative
02:11 - uses of emerging technology she is a
02:14 - former member of the gorilla projection
02:16 - group The Illuminator founder of the
02:19 - feminist technology Collective tendernet
02:21 - and she holds a master's degree from the
02:24 - interactive telecommunications program
02:26 - at NYU hi Zoe
02:29 - um before we jump into the project I
02:32 - wanted to ask you what makes JavaScript
02:34 - a good first language an entry into
02:36 - programming yeah absolutely
02:40 - um so I love teaching JavaScript because
02:42 - it has so many applications and we'll
02:44 - talk a little bit more about all those
02:45 - different forms of application but you
02:47 - know I find that for first-time
02:50 - programmers anyone interested getting
02:52 - into coding you know oftentimes you want
02:54 - to build something tangible and a
02:55 - website is a great thing to build and so
02:58 - oftentimes you'll start off with HTML
03:00 - and CSS but if you really want to make
03:03 - your website powerful exciting
03:05 - interactive you need JavaScript for that
03:07 - and so you can use JavaScript to code
03:10 - interactions on the front end but if you
03:12 - want to start getting into that full
03:13 - stack programming you can also use
03:14 - JavaScript for that which is why we
03:16 - actually you know designed our full
03:17 - stack career path with JavaScript as
03:20 - that core language so you wouldn't have
03:21 - to use a different language if you
03:23 - wanted to go into programming back-ends
03:27 - right take it away let's get into this
03:30 - project all right let's get into it
03:33 - um hi everyone it's so exciting to meet
03:35 - you again thank you Corey thank you Fede
03:37 - um very excited to be here it's been a
03:41 - minute since I've done a live stream
03:43 - um but I love live streams you know in
03:45 - my job as a curriculum director uh I
03:48 - don't always get the opportunity to get
03:50 - face to face with Learners
03:52 - um as much these days so it's really
03:53 - wonderful to be here with all of you
03:56 - um I've put together a little
03:57 - presentation for us before we get into
04:00 - the
04:01 - project so let me load that up all right
04:05 - so as we were saying we are going to be
04:07 - talking about learn JavaScript today
04:09 - which was one of the it was the first
04:12 - offering from codecademy
04:14 - um funny enough I was on codecademy as a
04:16 - learner back in 2011 when it first
04:19 - launched so it's it's really cool to be
04:21 - here today and talking about it
04:22 - so what are we going to cover today
04:25 - um we're going to talk a little bit more
04:26 - about the role of JavaScript as a
04:29 - programming language and it being the
04:31 - first course on codecademy um then we're
04:33 - gonna jump into and talk a little bit
04:35 - about programming logic
04:37 - um I'm really excited I think logic is
04:39 - one of the most interesting parts of
04:41 - learning how to program also one of the
04:43 - most difficult parts so maybe you've
04:45 - started to learn JavaScript and this I
04:47 - find can be a uh sort of one of the most
04:50 - early challenges for folks when they're
04:52 - starting to learn uh how to program so
04:54 - we're going to talk about it uh after
04:56 - that we're going to go through the race
04:58 - day project which is in the learn
04:59 - JavaScript course so we'll go step by
05:01 - step
05:02 - um and talk about how we're going to
05:04 - code that um welcome your questions
05:06 - welcome your ideas as we go through that
05:08 - and then we'll have a little bit of a
05:10 - wrap up
05:11 - um so if you do have questions
05:12 - throughout please post in the chat as
05:14 - mentioned we have Melanie who's one of
05:16 - our instructional designers in web
05:17 - development hanging out there and she'll
05:19 - make sure to pass me any questions I can
05:21 - answer live
05:22 - okay so moving right along our
05:25 - objectives for you know this walk
05:27 - through today as mentioned we're going
05:28 - to talk about the purpose of JavaScript
05:30 - and how it's used
05:32 - um history importance of logic in the
05:34 - history of computer science uh
05:36 - introduction to conditional statements
05:38 - and then we're going to apply it all in
05:40 - a project
05:41 - love it
05:43 - so what is Javascript
05:46 - um so I was just talking a little bit
05:47 - about this with Corey but again
05:49 - JavaScript is a very powerful and
05:52 - flexible and fast programming language
05:54 - used for things like complex web
05:56 - development as we are talking about but
05:58 - it also has a lot of other different
05:59 - applications too it Powers the dynamic
06:02 - Behavior across a lot of websites
06:04 - including code academy
06:07 - um and it is oftentimes one of the first
06:09 - programming languages that people learn
06:11 - because it can be used in so many
06:13 - different ways
06:14 - so let's talk about those use cases a
06:16 - little bit so this is what JavaScript
06:18 - looks like if you haven't seen
06:19 - JavaScript before
06:22 - um initially JavaScript was created to
06:24 - make web pages alive right we were
06:26 - talking about this in terms of
06:27 - interactivity if you've done some of the
06:29 - HTML and CSS stuff it's cool and you can
06:31 - do a little bit of like animation stuff
06:33 - with uh CSS as well but really
06:35 - JavaScript is what you know can make
06:37 - these really powerful fun experiences
06:40 - that you may love on the web
06:43 - um so programs in JavaScript are called
06:46 - scripts that's where the name comes from
06:47 - they can be written right into web pages
06:50 - HTML and they run automatically as the
06:52 - page loads
06:54 - um they don't need any special
06:55 - preparation or compilation to run like
06:58 - some other languages like Java sometimes
07:00 - people get confused is there a
07:01 - relationship between Java and JavaScript
07:03 - there is no relationship it was just
07:06 - that Java is a really popular language
07:07 - when JavaScript was first invented
07:11 - so
07:13 - um you know I kind of talked about that
07:15 - relationship between other languages
07:16 - that you might be familiar with HTML CSS
07:20 - and JavaScript I love this graphic
07:23 - um because I think it just you know
07:25 - really helps you understand what is the
07:27 - role again of each of these different
07:28 - languages when building a website so
07:30 - with HTML you know sometimes we think
07:32 - about it as like the bones of the page
07:34 - is where you add your elements to them
07:36 - CSS is going to add some styling to it a
07:39 - little bit of pizzazz but JavaScript
07:41 - really enables you to move and transform
07:43 - elements and create something like a
07:45 - game
07:47 - so a lot of this is kind of what we term
07:49 - as like the front end what you would see
07:52 - when you end up on a web page but what's
07:55 - cool about JavaScript is that you can
07:56 - also use it to program servers or the
07:59 - back end of a web page
08:01 - um so that's going to make your website
08:03 - more powerful store data things like
08:05 - that
08:07 - um and what's great again is if you're
08:09 - interested in becoming a full stack
08:12 - software engineer that means that you
08:13 - don't have to necessarily go out and
08:15 - learn another language like python or
08:17 - Java which are our other great back-end
08:20 - programming languages but you could
08:21 - stick with JavaScript for your first one
08:27 - um so talked a lot about JavaScript in
08:28 - relation to web development but you know
08:31 - Corey mentioned in my bio I'm an artist
08:33 - I'm a creative technologist one of the
08:35 - things that I love about JavaScript is
08:36 - that it has a ton of different
08:37 - applications there's some really cool
08:40 - libraries out there
08:42 - um that enable you to program using
08:44 - JavaScript so again we've talked about
08:46 - websites that's awesome but
08:49 - um one of my favorite uh things to do is
08:51 - program creative coding applications in
08:54 - a language called p5.js that's powered
08:57 - off of JavaScript and once you know
08:58 - JavaScript it's really easy to pick up
09:01 - um you can create data visualizations
09:03 - with um D3
09:07 - uh you can create 3D models with 3js you
09:12 - can create your own games with phaser.js
09:14 - and you can even uh do some machine
09:17 - learning with ml5.js which is pretty
09:20 - neat
09:21 - um even more applications you can do
09:23 - programming with music with tone.js and
09:27 - one of my favorites we have a course on
09:30 - this is a program called A-frame which
09:32 - uses HTML and CSS and JavaScript to
09:36 - build in browser VR and AR experiences
09:40 - so again lots of really cool stuff very
09:43 - worth your while to learn JavaScript
09:46 - and that's why JavaScript was the one of
09:50 - the first I keep saying one of the first
09:52 - it was the first programming languages
09:54 - that we taught here at codecademy
09:55 - starting back in
09:57 - 2011. so
10:00 - just wanted to show some like fun
10:02 - screenshots of what codecademy used to
10:04 - look like back in the day
10:07 - um this is our very first JavaScript
10:10 - course or getting started with
10:11 - programming course and you can see you
10:14 - know similar today we had that you know
10:17 - we have a two panel here
10:19 - um with the console and you have those
10:21 - tasks that we had and you'd go through
10:24 - and you would run your code again code
10:26 - academy if you all didn't know was
10:27 - really the company that pioneered
10:29 - Interactive Learning on the web which is
10:32 - pretty cool
10:34 - um back in 2017 we did a massive update
10:38 - to teach the latest version of
10:40 - JavaScript
10:42 - um so we've kind of iterated our
10:44 - JavaScript course over the past you know
10:46 - gosh how many years is it 12 years now
10:50 - um and you know with that our platform
10:53 - has also grown we've added more courses
10:54 - but we've continued to improve our
10:56 - JavaScript content as well
10:59 - um even most recently we updated our
11:00 - react courses which is a JavaScript
11:02 - framework uh and so yeah so you can see
11:06 - the learning environment as we call it
11:08 - the Le
11:10 - um starting to look more similar to what
11:11 - you may have seen today with that three
11:13 - panel
11:14 - um we have you know the checkpoints
11:16 - we're checking your code
11:17 - and then what we have today which we all
11:21 - know and love so yeah so that's
11:23 - basically just the evolution of
11:25 - JavaScript on codecad me so now we're
11:28 - going to switch gears and we're going to
11:29 - talk a little bit about
11:32 - the role of logic in programming because
11:34 - the project that we're doing today is
11:36 - called race day and it's in the learn
11:39 - JavaScript course in our third module on
11:41 - conditional statements
11:43 - um and if you're not familiar with
11:45 - conditional statements conditional
11:46 - statements allow us to add programming
11:48 - logic
11:49 - um into our programs and I think it's
11:54 - this really powerful moment when you're
11:56 - learning how to code because before that
11:58 - you know you're getting the basics down
11:59 - you're learning about variables you're
12:01 - learning about comments you're putting
12:02 - things to the console
12:04 - um you can see how you can do basic
12:06 - calculations with operators but when you
12:08 - learn conditional statements this is the
12:10 - moment where you can start to see the
12:12 - power of using a computer program versus
12:15 - just doing something yourself with a
12:17 - calculator right you can start to see
12:18 - branching logic
12:20 - so to talk a little bit about the
12:23 - history of logic and how that's impacted
12:25 - computer science and programming
12:27 - um you know
12:28 - logic is the I would say Foundation of
12:31 - computer science in many ways and it's
12:33 - certainly the foundation of artificial
12:36 - intelligence and this whole live stream
12:38 - series is about you know how we're
12:40 - evolving as the learning platform
12:42 - especially within this you know new
12:44 - moment of artificial intelligence with
12:47 - applications like chat gbt so I think
12:49 - it's cool to kind of like you know come
12:51 - back to the beginning talk about
12:52 - JavaScript as our first course but also
12:54 - talk about the foundations of computer
12:56 - programming and artificial intelligence
12:58 - within the world of logic
13:01 - um I don't know if there are any people
13:03 - out here who like reading graphic novels
13:05 - but uh if you are interested in learning
13:08 - more about the history and the
13:09 - development of logic as a field
13:11 - and how it you know again created the
13:14 - foundations of computer science I
13:16 - definitely recommend logic Comics uh
13:18 - it's the story of the foundational quest
13:21 - of mathematics and how uh Bertrand
13:24 - Russell and Alfred North Whitehead
13:25 - pursued the idea that mathematics is
13:28 - based on a logical system
13:30 - um it doesn't get into actual like the
13:33 - development of logic in relation to
13:34 - computer science it kind of hints at it
13:35 - at the end
13:36 - but it um you know again talks a lot
13:40 - about these kind of foundational you
13:43 - know arguments that were happening
13:44 - between mathematicians in the 19th
13:47 - century
13:50 - so you know to talk a little bit about
13:53 - how Bertrand Russell's and Whitehead's
13:56 - work influence computer scientists the
13:58 - very first artificial intelligence
14:00 - program known as the logic theorists
14:02 - system was actually built with the
14:04 - intention to prove some of the
14:06 - mathematical theorems in Bertram
14:08 - Bertrand and Whitehead's work which is
14:10 - super interesting so this program the
14:13 - logic theorist program uh was written in
14:16 - 1956 by Alan Newell Herbert a Simon who
14:19 - are here and also someone named cliff
14:21 - Shaw and it was the first program to
14:23 - deliberately engineer to deliberately
14:25 - engineer to perform automated reasoning
14:28 - so it was designed to mimic the
14:30 - problem-solving abilities of a human
14:32 - right now we can understand
14:34 - how we get to artificial intelligence
14:37 - here so interestingly enough the logic
14:39 - there has proved 38 of the first 52
14:41 - theorems in Chapter 2 of Whitehead and
14:44 - Russell's principle of Mathematica I
14:46 - know this is real nerdy stuff right here
14:48 - but bear with me but it was a really
14:50 - major moment so again not only does
14:54 - logic provide the foundation of computer
14:57 - science but also logicians are using
15:00 - computers in order to further their work
15:02 - and their research as well so to talk a
15:06 - little bit more about artificial
15:07 - intelligence
15:09 - um I'm sure many of us here are familiar
15:11 - with chat Bots but
15:13 - um you know while chatbots these days
15:14 - especially like something like you know
15:16 - chat gbt we can call a chat bot are
15:19 - using pretty Advanced forms of
15:20 - technology like neural networks
15:23 - um back in the day chat Bots were really
15:25 - just based off of conditional statements
15:27 - they really were just following these
15:29 - you know control flows and so Eliza was
15:32 - one of these early chat Bots it was one
15:34 - of the first programs you even capable
15:35 - of attempting the Turing test
15:38 - and I I think it's interesting and we'll
15:41 - talk about this as we get into the
15:42 - project in a second but you know we can
15:45 - look at something like a flow chart and
15:47 - we start seeing how you know we can use
15:51 - a flowchart to come to decisions about
15:54 - what we want our program to do right
15:56 - maybe you even used a flowchart at some
15:58 - point in your life to come to decisions
15:59 - about what you wanted to do but this is
16:01 - a great way to pseudo code out right to
16:04 - Think Through the logic of a
16:05 - computational program before we
16:07 - implement it with syntax in a language
16:09 - like JavaScript
16:13 - all right so that's a little bit of our
16:17 - uh
16:19 - uh part about logic and computer science
16:22 - um looks like Melanie's in the chat
16:24 - answering questions
16:26 - um and yeah so with that I'm gonna jump
16:29 - into the project
16:31 - so
16:33 - um our project for today is the race day
16:35 - project it is the second project in the
16:38 - learn JavaScript course
16:41 - um so if you are enrolled in learn
16:43 - JavaScript or
16:45 - uh any of our skill paths or our career
16:48 - paths that use our JavaScript content
16:50 - you'll be able to find it there
16:53 - um as mentioned it is in this third
16:57 - module here
17:00 - um and it's totally okay if you haven't
17:02 - programmed in JavaScript before we're
17:04 - gonna I'm gonna like talk through what's
17:05 - in the program
17:07 - um and also this is um not just a live
17:10 - stream but being recorded and will be
17:12 - hosted on YouTube so you know feel free
17:14 - to after this live stream go and do the
17:16 - project and then come back and re-watch
17:19 - this live stream if you get stuck at all
17:21 - we also have in on this project a
17:24 - Project walkthrough video too so another
17:26 - person explaining how to go about uh
17:28 - programming all right uh with that
17:34 - we're going to jump into race day so
17:39 - um we're going to just read over The
17:41 - Prompt together I'm going to talk about
17:43 - how this relates to using
17:46 - conditional statements and logic all
17:49 - right so race day code Academy's annual
17:52 - race is just around the corner this year
17:54 - we have a lot of participants you've
17:56 - been hired to write a program that will
17:57 - register Runners for the race and give
17:59 - them instructions on race day so we have
18:02 - this visual here and it basically tells
18:04 - us as a timeline registration would look
18:06 - like this at 9 30 a.m if you are a adult
18:11 - which we're defining as being over 18
18:13 - and you've registered early you're going
18:15 - to start at that time if you are an
18:18 - adult and you registered late you're
18:20 - going to start at 11 A.M and then anyone
18:22 - who is considered a youth which is
18:25 - younger than 18 years of age we'll start
18:28 - at 12 30. doesn't matter what your
18:30 - registration are
18:32 - so in addition to assigning someone a
18:35 - start time we're also going to
18:38 - um towards the beginning of the project
18:40 - assign everyone a race number um I don't
18:43 - know if you all have run a race I
18:44 - actually am running a race this Sunday
18:46 - and just got my race number in the mail
18:48 - but you get a little bib it has a number
18:50 - on it and that's how you know what your
18:51 - time will be
18:53 - um so yeah so we're going to talk about
18:54 - how we're going to use conditional
18:57 - statements to assign race numbers to
18:58 - everyone in the race too
19:01 - uh you may have noticed that uh
19:05 - we talked about assigning times for
19:08 - adults
19:09 - who are over 18. we talked about
19:11 - assigning times for youth who were under
19:13 - 18 but we have not planned for runners
19:15 - who are exactly 18. don't worry about it
19:19 - you can still run the race if you're 18.
19:21 - um we're just going to handle that at
19:22 - the end of our project
19:24 - so uh with that I'm going to press Start
19:30 - um if you've never done a project on
19:32 - code academy uh let me just talk a
19:34 - little bit about what we've got here so
19:35 - I went over the prompt
19:37 - um and below the prompt here we have
19:39 - different tasks you can see that we have
19:41 - nine of them to complete as we go
19:43 - through we're going to check them off
19:44 - you can also uncheck them if we get
19:47 - stuck we can open up a hint
19:50 - um and then over here is our code editor
19:53 - our IDE and this is actually where we're
19:56 - going to write our code out together
19:59 - and then over here is our output console
20:02 - so if I you know want to print something
20:04 - to the console I can write console.log
20:09 - right hello and then I'm Gonna Save that
20:12 - and you can see after I've saved that
20:15 - what I wanted to print to the console
20:17 - will appear here so we'll be using a lot
20:19 - of these console.log statements to check
20:21 - our work as we go along
20:24 - um I'm also going to have us you know
20:26 - talk a little bit about again the syntax
20:29 - that we're going to be using in this
20:30 - I've mentioned things like conditional
20:32 - statements we're also going to be
20:33 - talking about comparison operators
20:35 - logical operators also known as Boolean
20:38 - operators
20:40 - um as we go through so it's totally okay
20:43 - again if you haven't learned this stuff
20:44 - before we'll explain things as we go
20:47 - along all right so
20:51 - with that
20:53 - um
20:53 - going back to the project prompt I think
20:56 - one thing that's important to call out
20:58 - here if it wasn't already kind of
21:00 - apparent as I was reading through it is
21:01 - that we have a lot of different
21:03 - situations happening here right and
21:06 - that's a good signal to us that we want
21:07 - to use conditional statements that
21:09 - depending on the data that we're
21:11 - inputting whether it be in this case age
21:13 - registration status we want to make sure
21:16 - that based on the specific data that our
21:18 - program is receiving that we're going to
21:20 - Output the correct information
21:23 - in this case for our user who's signing
21:26 - up for the race right so again if you
21:29 - are building a project on your own if
21:31 - you have an idea for your own project or
21:33 - you come across a project you've never
21:36 - done before or something like a code
21:38 - Challenge and you see these like you
21:40 - know certain requirements asking for
21:42 - different outputs it's probably a good
21:44 - indicator that you want to use
21:46 - conditional statements for them
21:49 - so
21:51 - um just to talk a little bit more about
21:54 - conditional statements
21:57 - again I kind of mentioned flow charts in
21:58 - the beginning but this is I think like a
22:00 - great way of if you're going into a
22:03 - project where you're thinking about how
22:05 - you have different conditions that are
22:07 - going to end up in different outputs you
22:08 - can use a flow chart to think that
22:10 - through
22:10 - moving forward accidentally so you know
22:13 - this is just again an example of a flow
22:15 - chart lamp doesn't work
22:18 - you check and see if the lamps plugged
22:20 - in if it's not okay plug in the lamp if
22:23 - it is check if the bulbs burned out if
22:25 - it's still not working you can replace
22:27 - the bulb no repair the lamp right so you
22:31 - have these things and you're checking
22:33 - basically is it true or is it false so
22:36 - in programming that question that we're
22:40 - kind of asking ourselves is a Boolean
22:42 - expression it's called a Boolean
22:43 - expression because again we're checking
22:45 - to see is it true is the condition true
22:47 - or is the condition false and we want to
22:49 - take we want to do different tasks
22:51 - depending on what the condition is
22:55 - so what that looks like when we're
22:57 - writing it out
22:59 - is something called an if statement or
23:02 - an if else statement
23:04 - um so you say if this specific condition
23:06 - and if this condition this Boolean
23:08 - statement here is true then we're going
23:10 - to execute the code that's within this
23:12 - block here what's cool is you could just
23:15 - have an if statement and that's it and
23:17 - move forward or if you have multiple
23:19 - conditions that you want to check you
23:21 - can use else IFS
23:24 - um and if you just want to make sure
23:26 - that like there could be you know any
23:28 - situation outside of the ones we're
23:30 - checking uh you can use an else and that
23:33 - will execute if condition 2 is false
23:36 - all right
23:38 - so just setting that up a little bit
23:39 - it's going to help us with the project
23:42 - all right coming back to it let's dive
23:46 - into these tasks so
23:49 - um before we actually get into the
23:51 - logical part of our program we have a
23:53 - little bit of set up to do so in this
23:55 - first task we're being told that race
23:57 - numbers are assigned randomly we've
23:59 - already provided the necessary code that
24:01 - will power this random generation at the
24:04 - top of the file so you can see this here
24:06 - we have a variable called race number
24:09 - and we're setting it equal to math.floor
24:13 - and within that parentheses is
24:15 - math.random times a thousand
24:18 - so these are some built-in functions
24:22 - that JavaScript gives us
24:24 - um which is very nice of them and
24:26 - basically they programmatically will
24:28 - give us a certain set of numbers it's
24:30 - between zero includes a zero and
24:33 - exclusive of one so everything up to one
24:35 - in order to get to a thousand we
24:38 - multiply it and this is the
24:39 - multiplication operator here the little
24:41 - asterisk by a thousand but that's not
24:45 - going to give us nice even numbers and
24:47 - so that's why we use math.floor here so
24:49 - I'm going to just show you what some
24:51 - outputs of this look like so I can
24:52 - console.log
24:54 - race number and then I'm going to save
24:58 - it
24:58 - and we can see that output 930. okay
25:01 - great so I can just keep doing this for
25:03 - a little while and we can start to see
25:05 - the range of numbers that we get between
25:07 - zero and a thousand fantastic we can
25:11 - check off this task
25:14 - um if you weren't familiar with that
25:16 - again we have hints here which are super
25:18 - nice parts of projects so just explains
25:20 - exactly what I said here
25:22 - and yeah
25:24 - all right so next step
25:27 - um we need to create some variables and
25:29 - steps two through three so
25:32 - um we are going to create a variable
25:34 - that indicates whether a runner is
25:36 - registered or not
25:39 - and we are going to set it equal to a
25:42 - Boolean value you'll change this later
25:44 - as you test different Runner conditions
25:46 - so remember again I kind of mentioned
25:48 - Boolean values right so Boolean means is
25:51 - it going to be true or is it going to be
25:53 - false those are the only two options
25:54 - that we have right
25:56 - um so we are going to say our
26:01 - we're going to use the const version
26:03 - because we don't need to change well
26:05 - we're not going to change it in our
26:06 - program which is why we're going to use
26:07 - cons so we can change it ourselves you
26:09 - know
26:10 - um so we can say const you can use let
26:12 - it's fine
26:14 - this is just a little project const
26:16 - registered early I'm going to set this
26:17 - to false but we can change this again to
26:20 - see how our program will change in the
26:22 - future
26:24 - great
26:26 - again we can see here cons registered
26:29 - they all set it to false
26:31 - and then we're going to create a
26:33 - variable for the runner's age and set it
26:35 - equal to a number so I'm going to do
26:38 - const age and I'm going to give it 21. I
26:42 - myself am not 21 but you know 21 is a
26:46 - great age okay so with that
26:51 - oh I'm seeing folks want me to zoom in a
26:54 - bit okay I'm gonna pop in and say that
26:58 - all right is that better
27:02 - good
27:03 - on that
27:05 - all right let me know if if y'all need
27:08 - anything else from me thanks for
27:09 - interrupting Okay so we've gone through
27:11 - steps one through three nice and Speedy
27:15 - uh so now we're gonna get into the meat
27:18 - of it
27:20 - um going into step four so now we're
27:24 - going to create a control flow statement
27:25 - that checks whether the runner is an
27:27 - adult and registered early and if so if
27:31 - that's true we're going to add a
27:32 - thousand to their race number all right
27:34 - okay awesome I'm seeing it's better I'm
27:36 - so glad that's easier to read I also
27:39 - have astigmatism so
27:41 - um feel you on that all right so um
27:44 - control flow is a general term for any
27:48 - kind of again
27:50 - um syntax that determines the flow of
27:52 - our program so conditional statements
27:54 - but you could also say a loop is a
27:55 - control flow as well
27:57 - but in this case again we're going to be
27:59 - talking about conditional statements
28:00 - those if if else else if statement so
28:03 - with that
28:04 - we only really have one condition here
28:06 - right so we're going to check whether
28:08 - the runner is an adult and registered
28:11 - early
28:12 - I got a little bit ahead of myself
28:13 - because I kind of want to show a couple
28:15 - different ways of um coding this as you
28:18 - know there are a couple different ways
28:19 - always usually in programming of solving
28:22 - a problem so I'm going to show you one
28:24 - way and then I'm going to show you how
28:25 - we can refactor our code to be a little
28:27 - bit neater and use some logical
28:29 - operators with that so first I'm going
28:31 - to
28:32 - break this up okay so we have actually
28:35 - two Boolean statements that are
28:36 - happening right here we want to first
28:37 - check that Runner is an adult we want to
28:40 - make sure that's true and then we also
28:42 - want to check and see if they registered
28:44 - early so I'm going to say if
28:48 - and we defined age as being
28:51 - greater than 18 right so let me say age
28:57 - is greater than you might remember this
29:00 - from math class right
29:02 - you want to have it being eating the
29:03 - bigger number 18.
29:06 - and then I'm going to open some curly
29:07 - braces here all right so this is the
29:09 - first part of our program
29:11 - um and I just want to talk a little bit
29:12 - more about comparison operators just in
29:14 - case anyone's not familiar with this so
29:15 - let me pop back over to my little
29:18 - presentation here so comparison also
29:21 - known as relational operators for some
29:23 - reason operators we always have like
29:24 - multiple names for the same thing but
29:27 - um we have this way of relating things
29:30 - and then you can see over here depending
29:33 - on how it evaluates we can get a Boolean
29:36 - value of that and again we use that to
29:37 - determine if the condition is going to
29:39 - be true and thus whatever it goes into
29:43 - um will happen so
29:46 - we talked about having greater than you
29:48 - can also have less than you can even add
29:49 - an equal sign so you could be inclusive
29:52 - of a number same thing here we can also
29:55 - check if two values are equal and we can
29:58 - also check to see if something is not
30:00 - equal as well we'll talk more about this
30:03 - exclamation point or bang operator also
30:05 - known as the not operator in a few more
30:08 - steps too
30:10 - so again this is just like a helpful
30:12 - little kind of cheat sheet to remember
30:15 - what we're kind of looking for and you
30:18 - know in our case we want to make sure
30:20 - that it's going to evaluate
30:22 - um well depending on what our age is of
30:24 - course right but in this case we're
30:26 - looking for adults and you know if the
30:28 - condition is true it should evaluate to
30:30 - true all right so then our second part
30:33 - here is registered early so I can write
30:35 - another statement that says if
30:39 - registered early now again like I said
30:43 - before there's a couple different ways
30:44 - of doing this you could say as we just
30:45 - looked at In the comparison operators
30:47 - you could use that double or triple
30:49 - equal sign
30:51 - um to check for true
30:55 - and then open this up and I'm just gonna
30:57 - say
30:59 - um we'll get to the the second part of
31:00 - that but I'm just going to console.log
31:04 - true
31:05 - let's see if that works
31:08 - all right so I forgot we had this
31:10 - console log race number here but as you
31:14 - can see it didn't evaluate to true
31:15 - because we had registered early as false
31:18 - so if I change this to registered early
31:21 - this should get us to stay true okay so
31:25 - let me break that down again
31:27 - right now my age is above 18.
31:30 - and I have actually registered so when I
31:32 - get into this first Boolean statement
31:34 - and I'm checking to see if the variable
31:36 - age is greater than 18 that's going to
31:39 - go to True right 21 is more than 18. and
31:42 - then for registered early checking to
31:44 - see if it's true that's also going to
31:46 - evaluate to true because I changed this
31:48 - to True remember if I had this as false
31:53 - nothing's going to show up here except
31:56 - for that race number here which I'm just
31:58 - going to comment this out remember to
31:59 - comment out you can just put two slashes
32:01 - in front of it nothing's gonna show up
32:03 - because this is false so registered
32:06 - early is not able to evaluate to true
32:09 - all right so with that I'm gonna do a
32:13 - little bit of refactoring so one place
32:15 - I'm going to start is you actually don't
32:17 - need to set registered early and check
32:19 - it that it equals true you can just put
32:22 - this value in
32:23 - if there is a value that exists or there
32:26 - I should say if there's a variable and
32:27 - it has a value it means that it's going
32:29 - to be
32:30 - um considered as a true statement I
32:33 - should say except if you know the value
32:34 - is false
32:36 - um and then another thing that we can do
32:38 - is we can actually combine these into
32:41 - one Boolean statement here I don't have
32:43 - to have them nested in this way so I do
32:46 - that by I'm just going to kind of
32:48 - roughly do this and then I'm going to
32:51 - get rid of my curly brace and then I'm
32:54 - going to use a logical operator or
32:56 - Boolean operator called and and I do
32:58 - that by putting two ampersands in
33:01 - between them so let's talk a little bit
33:03 - about Boolean operators really quickly
33:07 - so Boolean operators
33:10 - um look like this we have a logical and
33:13 - operator which again are those two
33:14 - ampersands or we have an or operator and
33:17 - you can see similar to how we were
33:19 - looking at the comparison ones that you
33:22 - know they can evaluate in different ways
33:25 - so if we have two true statements then
33:27 - it evaluates to true if it's true and
33:29 - false it's going to be false if it's
33:31 - false and true it's false it's false and
33:32 - false and is very very strict as you can
33:35 - tell or we're a little bit more flexible
33:38 - on it right you get more trues out of it
33:41 - and only one false but in this case
33:43 - we're being strict you have to be an
33:45 - adult you have to have registered early
33:47 - so we're gonna stick with and there and
33:51 - now let's save it
33:52 - it's still going to be blank which is
33:54 - what we expected because it's false up
33:57 - there we did not register early so if we
33:58 - change that to true
34:00 - it's true again great
34:02 - all right but I didn't finish this task
34:04 - um I don't want it to be true in here
34:07 - what I really want to have happen is one
34:10 - I don't I'm not actually console logging
34:12 - anything I just need to add race number
34:15 - um so again a couple different ways you
34:18 - can program this you can take the race
34:20 - number variable
34:22 - and you can have it equal to you can set
34:25 - it equal to itself
34:28 - plus a thousand and we can now I'm just
34:32 - gonna
34:33 - um uncomment this so we can see this
34:36 - change
34:38 - so we can see that initially when we
34:41 - generate this number it's 209 but now
34:43 - when we generate it it is
34:46 - 1209 amazing our conditional statement
34:50 - worked
34:51 - um again to do a little bit of
34:52 - refactoring you may remember this but
34:54 - you don't have to write something as
34:56 - long as this you can actually change it
34:58 - to B and I'll just write it below so you
34:59 - can see it race number
35:03 - plus equals a thousand
35:07 - and so this is the exact same process
35:10 - but
35:12 - it's just a little bit cleaner we just
35:14 - like our code to be clean right so I'll
35:15 - save that show that it's still doing the
35:18 - same stuff fantastic all right so that
35:22 - was number four the tasks after this are
35:25 - very similar so we're going to go
35:26 - through them a little bit more speedily
35:28 - but again please make sure to keep
35:30 - asking questions Melanie will let me
35:32 - know
35:34 - fantastic all right so for step number
35:37 - five we're going to create a separate
35:39 - control flow statement below the first
35:42 - and then this statement will check age
35:45 - and registration time to determine race
35:47 - time okay so now we're getting into the
35:49 - second part if you remember of the
35:51 - prompt we've currently figured out how
35:53 - we're determining race number
35:55 - um so now we're going to get into this
35:57 - portion where we're determining start
35:58 - time so again we didn't need to create
36:02 - an else situation here basically if you
36:05 - met this criteria your number is going
36:07 - to be a thousand otherwise your race
36:09 - number is going to be yellow below a
36:11 - thousand so starting our new can control
36:14 - flow conditional statement I'm going to
36:16 - say if and this is actually the same
36:19 - Boolean statement that we have above
36:21 - right
36:22 - for runners over 18 who registered early
36:25 - we just copy and paste
36:28 - sure if you've been programming at this
36:29 - point you know copy and pasting
36:31 - something you end up doing quite
36:33 - frequently
36:34 - but what's going to happen within it
36:38 - um is going to be a new uh thing that we
36:43 - want to execute in our program so I want
36:45 - to log a statement to the console
36:47 - telling them that they will race at 9 30
36:50 - and I'm going to include their race
36:52 - number
36:53 - excellent so we've seen some console log
36:57 - statements already here
36:59 - so I'm going to type console.log
37:03 - um and prior to this I was just kind of
37:06 - inputting strings right strings are text
37:09 - that we wrap with quotation mark single
37:12 - or double but what I want to do instead
37:16 - is I'm going to use something called
37:19 - string interpolation so that you use the
37:22 - back ticks in it not the quotation marks
37:25 - but it makes it much easier if we're
37:27 - putting a variable a variable within our
37:31 - console.log statement just like in terms
37:34 - of writing it again just kind of
37:35 - neatness so console.log I'm going to
37:39 - tell them you will race
37:42 - at 9 30 A.M
37:45 - and your number is and this is where it
37:49 - gets spunky you do a dollar sign
37:52 - curly brace which we give you the both
37:54 - of them at the same time just make sure
37:56 - your cursor is inside of it and then I'm
37:58 - just going to put that race number
38:01 - variable right there okay awesome so
38:04 - let's save that and let's see
38:06 - fantastic okay so
38:09 - um maybe I'll keep that console.log
38:11 - statement excuse me
38:13 - um below the other conditional statement
38:16 - just so we can see kind of the whole
38:17 - logic of our program so first we're
38:20 - generating a number second if our input
38:23 - here matches these conditions we should
38:26 - add a thousand to it
38:28 - that's happening there and now we should
38:31 - see if that's we're still matching that
38:32 - data then we're going to tell be told
38:34 - that we're going to race at 9 30 and our
38:36 - race number is going to be exactly what
38:39 - we got before 1532 awesome we're doing
38:42 - great
38:43 - Hey Zoe we got it yes
38:46 - um what the question is what if I add a
38:49 - thousand to race number in the initial
38:52 - declaration
38:54 - in the initial declaration like up here
39:00 - I'm guessing so you can do that
39:04 - um but the thing is is that you're not
39:05 - going to be following the project prompt
39:08 - right so we'll see that in a little bit
39:10 - as we get into these other conditions
39:12 - that we don't always want a thousand
39:14 - added to our race number we only want a
39:18 - thousand added to our race number if
39:20 - someone is an adult who registered early
39:22 - so if we have it happen up here when
39:25 - we're defining the variable race number
39:27 - we're no longer making that a condition
39:29 - that we are um looking at does that make
39:32 - sense I hope so
39:34 - any other questions
39:38 - all right feel free to keep uh
39:41 - interrupting
39:43 - so I hope that didn't come off
39:45 - sarcastically because it definitely was
39:46 - not meant to be sarcastic okay
39:49 - um
39:50 - we're going to get into some fun stuff
39:53 - now so uh
39:56 - we've gone through our first one and our
39:58 - second one is that late adults I love
40:01 - that late adults it's all too registered
40:02 - late are going to run at 11.
40:05 - so we are going to be creating another
40:09 - conditional statement and it's going to
40:11 - be part of this same flow right because
40:13 - we are what happens when you write a
40:16 - multiple conditional statement is it's
40:18 - going to check the first one if it's
40:19 - false we want it to jump into the second
40:21 - one and then check if that one's true if
40:23 - that second one is false then maybe we
40:25 - want to have an else statement you could
40:27 - have so many else ifs in here although
40:29 - at a certain point if you really have
40:30 - like more than two three you probably
40:33 - want to use a switch statement instead
40:35 - which is also um gone over in the lesson
40:37 - before so I encourage you to check it
40:38 - out but we only have
40:40 - um really like four conditions in here I
40:43 - believe so we're going to use else if
40:46 - and this time
40:48 - um it's a little bit different right so
40:50 - we're still checking for adults so we're
40:51 - still going to use that greater than
40:53 - comparison operator uh we still have a
40:55 - second condition but this time we are
41:00 - checking to see if they registered late
41:03 - so so how do we Define
41:06 - that someone has registered late
41:11 - well
41:13 - um we could see like we did before
41:15 - registered early
41:18 - is equal to false but there's a nicer
41:22 - way of doing this um and I kind of
41:24 - hinted at this before when we were going
41:26 - through things so there's something
41:27 - called The Nut operator and basically it
41:31 - reverses what we get into so if we put
41:35 - this not operator or the bang operator
41:37 - in front of a statement it's negating
41:39 - the tune returns false or it can say
41:42 - that that's you know so that's what
41:43 - we're looking for here is we want to
41:45 - return false so all I'm going to do is
41:47 - put this little exclamation point
41:51 - before registered early
41:53 - and that's our Boolean statement for the
41:55 - second condition here
41:58 - uh and so again gonna copy and paste and
42:02 - I'm just going to change in this one
42:04 - that they
42:07 - are starting at 11 A.M all right so
42:13 - now I'm going to show
42:16 - that this can evaluate to true and I'm
42:19 - going to do that by changing the value
42:21 - of this right here so imagine we have
42:23 - someone here
42:24 - um let's say they're still adult let's
42:25 - say instead that they're like 65
42:28 - um but they didn't register early
42:30 - so I'm going to save this and you can
42:33 - see now some things in our program have
42:35 - changed okay so we generated that random
42:38 - number and it's 83.
42:40 - um but because this person did not
42:42 - register early we did not add a thousand
42:45 - to the race number the race number is
42:47 - just staying 83. also they're no longer
42:51 - this person is not racing at 9 30.
42:53 - instead they're going to be racing at 11
42:56 - A.M and as you can see here we also have
42:59 - the number 83 here awesome so yeah so
43:03 - you know again you could imagine this as
43:05 - a computer program where someone's
43:07 - logging in they have
43:09 - um you know their information already
43:10 - and the computer is looking and checking
43:13 - for again these things like did this
43:15 - person register early
43:16 - how old is this person Etc et cetera
43:19 - we're just kind of doing this like in
43:21 - the project right now but you know maybe
43:23 - you could have a user input
43:26 - um within your program that enables
43:27 - people again going back to the
43:29 - interactivity part of JavaScript right
43:30 - you can imagine a front end that you
43:32 - program and this is some of the logic on
43:34 - the back end but actually has the
43:36 - opportunity for someone to input these
43:38 - values but we're just using them for
43:39 - testing
43:40 - okay almost there
43:43 - um so now we've been talking a lot about
43:45 - adults we're going to get to these
43:49 - um so for the Youth uh we want another
43:52 - conditional statement and again we're
43:54 - going to use else if so else if age and
43:57 - this time we want to say ages less than
43:59 - 18
44:02 - um and oh and so we don't have to care
44:05 - about the registration so we don't have
44:07 - to use any of these logical or operators
44:09 - right here we can actually just keep it
44:11 - as just checking if they are below 18
44:14 - because it doesn't matter if they
44:16 - registered early we don't have to check
44:18 - for it
44:19 - nice and easy so we're just going to
44:22 - take that console.log
44:25 - put it in and then we are going to
44:27 - change it to 12 30. youth get to sleep
44:31 - in Lucky them
44:34 - um and your race number is going to be
44:35 - race number so what we want to do now is
44:37 - we're going to change this to 15 and we
44:41 - should expect to see that we get to this
44:44 - third conditional so let me press save
44:46 - all right again generating a number
44:49 - we're not adding a thousand to it
44:51 - because
44:52 - they are not above 18 they are below 18
44:56 - so we're just completely bypassing this
44:59 - if statement because it uh it was false
45:03 - and we are also bypassing both of these
45:05 - first two statements here because they
45:07 - also evaluate to false because in both
45:09 - cases it's checking to see if they're
45:10 - over 18 and they're not I'm also going
45:13 - to show you that again changing this
45:15 - value from false to True doesn't matter
45:18 - in this case because we're not checking
45:20 - for it
45:21 - still racing at 12 30.
45:25 - all right so
45:27 - um
45:28 - eight enter in different combinations of
45:31 - values for the two variables you created
45:32 - and run your code several times we've
45:34 - been kind of doing that along the way
45:36 - um so you know
45:38 - honestly my preference is check your
45:40 - code as you go
45:41 - um you know use a lot of like
45:43 - console.log statements as I kind of
45:45 - showed change your inputs to make sure
45:47 - and stress test
45:48 - um the different conditions that you're
45:50 - writing
45:52 - um and then there are some examples in
45:54 - the hint so you know you can use these
45:57 - uh Runners Who start at 25 years old and
45:59 - registered early will run at 9 30 so we
46:04 - can just double check that press save
46:07 - awesome you can see that they're racing
46:10 - at 9 30 and they've got their number
46:12 - there uh if we were to change that to
46:15 - false
46:18 - save that now you can see that they're
46:20 - running at 11. um we just did the teen
46:23 - one so so yeah good to check your work
46:27 - all right but we have not finished yet
46:29 - uh we need to remember the num uh the
46:31 - runners who are exactly 18 right so
46:35 - we've talked about this a little bit in
46:37 - the
46:38 - um
46:40 - part around comparison operators just to
46:42 - go back to that so really we're only
46:44 - using these less than and greater than
46:46 - which means that they're not inclusive
46:48 - so we're not actually checking if
46:50 - someone is 18 only if they're older than
46:52 - 18 or younger than 18. so we need a
46:56 - condition
46:57 - for those 18 year olds so what we can
46:59 - just do is use an else statement uh we
47:02 - don't need to put anything besides that
47:04 - there's no again Boolean condition that
47:06 - we were checking there and then we're
47:08 - just going to console.log that that
47:10 - person needs to see the registration
47:16 - if I could spell registration that would
47:18 - be great registration desk
47:20 - all right so I'm going to save now let's
47:23 - check that we're going to change this
47:25 - age to be
47:27 - 18.
47:30 - we're going to save it then we can see
47:32 - that the result is that they need to see
47:33 - the registration desk
47:36 - now if you wanted to include 18 year
47:41 - olds in either one of these categories
47:44 - um you know some might say an 18 year
47:46 - old is in fact an adult we can add a
47:50 - equal sign
47:51 - to the conditions where we're checking
47:53 - to see if someone's an adult so I'm
47:56 - going to add it here to this first one
47:57 - because remember this was for adults who
47:59 - registered early I'm going to also add
48:01 - it to this one for adults who registered
48:03 - early and for adults who didn't register
48:05 - really now let's see what happens to our
48:08 - program for an 18 year old I'm gonna
48:10 - click save uh we can see that they jump
48:15 - down to this condition of 11 and if I
48:17 - change this and that's because again the
48:19 - registration was false so the previous
48:20 - two conditions didn't evaluate to true
48:23 - but if I did change it to true we can
48:26 - see they have a number in the thousands
48:28 - and that they're going to race at 9 30.
48:31 - so
48:33 - that is
48:35 - the entire race day project uh thank you
48:38 - for coding along with me I see that
48:40 - we've had some really fantastic
48:42 - questions in the chat thank you so much
48:44 - to Melanie who's been answering
48:46 - questions as we go
48:49 - um so I hope this was a really fun
48:51 - introduction for folks who haven't done
48:53 - much with conditional statements yet who
48:55 - haven't gotten into the logic parts of
48:57 - programming thinking about how things
48:59 - evaluate to true and false um again I
49:03 - feel like this is really going to unlock
49:04 - some powerful programs for folks who are
49:07 - just getting started here and
49:10 - yeah feding
49:11 - you want to take it away
49:14 - here I am hey thank you so much Zoe um I
49:18 - think this is the most exciting part of
49:20 - the live stream today which is the Q a
49:22 - we have about 10 minutes to go so I
49:25 - would like to extend an invitation to
49:27 - everybody in the chat that is following
49:30 - along if you have any questions for Zoe
49:31 - this is the time to ask those questions
49:34 - we'll be checking the chat anything you
49:36 - want to ask about JavaScript or I guess
49:38 - curriculum at Academy is fair game we'll
49:40 - be reading through the chat and bringing
49:42 - up those questions
49:44 - um so do you mind turning the screen
49:47 - sharing off yes it should be off now
49:50 - great awesome fantastic so
49:54 - um you know while we wait for questions
49:55 - to come in uh one question on my own how
49:57 - do you feel about JavaScript versus
49:59 - python I know that a lot of people ask
50:01 - or which one should I go for first
50:03 - yeah it's a great question and you know
50:05 - as a as a CS educator it's one I
50:08 - personally go back and forth on
50:10 - um so you know in addition to working at
50:12 - Coke Academy I've taught with girls who
50:14 - code I also teach a college class right
50:17 - now
50:18 - um and and it really kind of depends on
50:20 - what the overall objectives are I find
50:22 - that
50:24 - um
50:25 - python is an extremely powerful program
50:27 - that's similar to JavaScript has a lot
50:30 - of different applications and it's not
50:32 - surprising that pythons are first most
50:34 - popular course and JavaScript is our
50:36 - second one so you know with python you
50:38 - can get into data science applications
50:40 - if you're really excited about AI I
50:42 - would definitely recommend python
50:45 - um and then if you are interested in
50:46 - very creative applications or doing more
50:48 - web development web design I think
50:50 - JavaScript is for you and the great
50:52 - thing is honestly is you can learn both
50:54 - like when I was learning how to program
50:56 - I started with JavaScript and then I
50:58 - took a python class it was actually so I
51:01 - went to this really wild grad program
51:03 - that was like all about fusing art and
51:05 - Technology
51:06 - so my python class was a poetry class
51:09 - and what I found is that learning a
51:12 - second language really helped ground me
51:14 - in the basic principles of
51:17 - you know programming topics like
51:19 - conditionals like Loops
51:21 - um so yeah I'd say pick one language
51:23 - python or JavaScript kind of depending
51:25 - on your um you know what you want to do
51:27 - in terms of projects career and then you
51:30 - can always come back to the second one
51:31 - okay great that's I guess that's uh
51:34 - that's all more in-depth than I've ever
51:36 - thought about it so that's awesome yeah
51:37 - JavaScript versus python I know that
51:39 - it's a very contagious sort of question
51:40 - that everybody has oh people people
51:42 - fight I mean you can get into the whole
51:44 - thing I mean I mean I could talk about
51:46 - this forever so please stop me but like
51:48 - you know
51:50 - intact sugar and job script Python's a
51:52 - little bit a little bit cleaner some
51:53 - folks like that more so all right I
51:55 - think something that people people tend
51:57 - to forget is is what you were talking
51:58 - about how it transfers over you learn a
52:01 - language and then when you go to the
52:02 - second one do you see the commonalities
52:04 - they're walls Loops the whole thing
52:06 - right yeah absolutely so I think they're
52:09 - both great languages I'm looking at the
52:10 - chat somebody was asking about AI Tools
52:14 - in our coursework
52:16 - do you know anything about that AI tools
52:18 - and our curse work well we are you know
52:20 - developing some very exciting things
52:22 - right now this is what so much of our
52:25 - um big code academy evolved campaign is
52:27 - about I don't know how much I can talk
52:28 - about them right now okay yeah we don't
52:31 - want to spoil them you know I know no
52:33 - spoilers some really fun surprises
52:35 - coming up you know we've done some AI
52:38 - coursework we've actually been
52:40 - developing you know I think everyone
52:41 - knows this but artificial intelligence
52:42 - has been around for a while as I talked
52:44 - about in the presentation you know it's
52:45 - been around since the turn of the last
52:47 - and uh well Midway Point through the
52:48 - last century
52:50 - um but you know chat GPT has really just
52:53 - kind of opened a lot of people's eyes
52:55 - outside of you know the tech world to
52:57 - the power of AI so we have you know our
53:00 - intro to chat gbt course highly
53:02 - recommend taking that that kind of walks
53:03 - you through how to do prompts with chat
53:06 - gbt but also like the history
53:09 - um and the technology itself
53:11 - um but we also have some really cool
53:12 - artificial intelligence we have like a
53:15 - great um learn how to build your own
53:16 - chat bot program or skill path so you
53:20 - know definitely recommend looking into
53:21 - those things I think um I just saw Matt
53:24 - Simon asking a really good question I
53:26 - think this goes across the board pretty
53:28 - much everybody has encountered this
53:29 - before which is
53:31 - the question is is it just me that or is
53:35 - it normal to feel frustrated sometimes
53:37 - when you feel you are not grasping a
53:39 - certain concept
53:40 - oh it is not just you Matt Simon
53:43 - it is definitely not just you it is
53:46 - incredibly normal when learning
53:48 - something new to feel frustrated
53:49 - actually I think it is a sign that you
53:51 - are learning if you're feeling
53:53 - frustrated right like if it was easy you
53:55 - wouldn't be learning it so I would say
53:58 - you know a big part of learning
54:00 - something new is to be resilient and you
54:03 - know continue learning I mean there are
54:05 - things I've been learning to code now
54:07 - for I don't know like eight years and
54:09 - there are still new things that I find
54:10 - out or my knowledge of it expands
54:12 - especially you know through teaching I
54:14 - always see things in new ways so it is
54:16 - totally normal to feel frustrated and
54:19 - not get Concepts at first you just you
54:22 - know take your time keep coming back to
54:24 - it
54:25 - take time for rest honestly you know I
54:27 - say this also as a creative person your
54:29 - best ideas come after you know you've
54:32 - gone for a walk or in the shower or
54:34 - sometimes even asleep you know I have
54:36 - friends who are software engineers and
54:37 - they'll dream about bugs that they're
54:40 - trying to solve and wake up and be like
54:42 - oh okay yeah now now I know how to go
54:44 - about it so give your give yourself the
54:46 - time nice I see a related question here
54:49 - which is about
54:51 - um doing multiple passes through
54:54 - learning at the same thing and these
54:56 - users mentioning all their sites out
54:58 - there online that you can go to learn
55:00 - online and I think that this is
55:02 - something that we don't that we're not
55:03 - shy about what we talk about how we at
55:05 - Coconut we are hoping to be that great
55:07 - resource to learn to code but you know
55:09 - everybody learns differently at
55:11 - different pace and different uh learning
55:13 - techniques and sometimes uh it's good to
55:17 - even if it's the same content to cover
55:19 - in different formats or in different
55:20 - places
55:22 - oh yeah a hundred percent I mean this is
55:24 - something I personally feel passionate
55:26 - about so our team is really interested
55:28 - in learning about you know learning
55:30 - science and we take learning science
55:31 - research and research and use that to
55:33 - design all of our courses and something
55:35 - we feel
55:36 - um again really is really important is
55:39 - how you develop what's known as a mental
55:41 - model right what is your personal
55:43 - understanding of this information that
55:45 - you're getting and I personally find one
55:48 - of the best ways to build a mental model
55:49 - is to engage with a ton of different
55:53 - resources on the same subject because
55:55 - people are going to explain something
55:56 - like conditional statements in a lot of
55:58 - different ways and some may click with
56:01 - you better than others maybe they use
56:02 - the right metaphor that really resonates
56:04 - with you
56:05 - um I think you know there are some
56:07 - interesting things too about like
56:09 - learning modalities you know I would say
56:12 - one interesting thing we found out when
56:14 - reading about learning science is like
56:16 - the more closely you do something and
56:18 - you're gonna say this is a whole point
56:19 - for code academy and learning on code
56:20 - academy but the more closely you learn
56:23 - something in the way that you would
56:24 - apply it it's going to stick better with
56:27 - you right like you wouldn't necessarily
56:29 - learn how to play soccer by only
56:31 - watching YouTube videos it's the same
56:33 - for coding you can absolutely watch a
56:35 - video on YouTube of someone coding and
56:36 - again I think it helps build that mental
56:38 - model but you know what drew me to code
56:40 - academy when I was a learner before I
56:42 - even started working here was getting to
56:44 - actually write the code and getting it
56:46 - tested for me which I thought was great
56:48 - but yeah I mean there are so many
56:50 - wonderful resources out there if you're
56:52 - looking to learn JavaScript really
56:53 - recommend the eloquent JavaScript book
56:57 - um that's like a classic text and I
57:00 - think you know getting your information
57:01 - again will just help you further
57:03 - internalize it and really remember all
57:06 - of the information that you're learning
57:08 - nice great so one last question here
57:11 - will we still have time uh Eric Lozada
57:13 - is asking I'm trying to build my web
57:16 - design business should I take the front
57:19 - end engineer path or build a website
57:21 - skill path so I guess the question is
57:23 - out of in your catalog what would you
57:25 - recommend for some somebody looking to
57:26 - build a web design business yeah I think
57:30 - that's a really great question so we
57:32 - design our offerings for people who have
57:34 - different goals and so I think if you're
57:36 - choosing between a skill path like build
57:38 - websites versus a career path like front
57:41 - end I'd recommend starting with the
57:43 - skill path Because unless you have a
57:45 - personal interest in becoming a
57:47 - front-end web developer there is going
57:49 - to be a lot of additional information in
57:51 - the career path and that's great for
57:53 - someone who wants that we want to make
57:54 - sure it's comprehensive that people feel
57:56 - really confident that they have all the
57:58 - information at their hand to be able to
57:59 - get a job in that role but if you are
58:02 - looking to build something very specific
58:03 - that's why we design our skill pass
58:05 - they're a bit faster and they get you to
58:07 - your goal quicker I'd also recommend if
58:09 - you're interested in web design we
58:10 - actually have some really fantastic new
58:12 - visual design content that's come out
58:14 - this past year some UI ux materials so I
58:18 - would also dig into those that those
58:20 - courses first
58:21 - um and then you know can supplement with
58:23 - the build websites to build your own
58:25 - website nice okay well uh that was all
58:28 - the time we have for Q a today I want to
58:30 - thank everybody for stopping by the live
58:32 - stream today and please join me in the
58:34 - chat to thank the great Zoe for her
58:36 - presentation today I think it was very
58:38 - fun and useful a lot of people are going
58:40 - to watch this live today or later and
58:42 - they're gonna enjoy the content that we
58:44 - put out so thank you Zoe for that yeah
58:46 - thank you so much for having me yeah and
58:49 - if you like the content that you saw
58:50 - today and you want to practice on your
58:51 - own don't forget to stop by and create a
58:53 - free account with code academy you can
58:55 - do that today start going on in your
58:57 - JavaScript Journey get try to get as
58:59 - good as Zoe a JavaScript I guess we'll
59:01 - see you there online in our community
59:03 - spaces also don't forget to subscribe
59:06 - and follow us on YouTube because we are
59:08 - having a three-part series on these
59:11 - contents so today was part one but we
59:13 - will be live again next week same time
59:15 - same day Thursday and the following week
59:17 - on the 17th of August so we're hoping to
59:20 - see you all there and of course you can
59:21 - follow us on social media like Twitter
59:23 - LinkedIn Instagram to keep up to date
59:25 - with all of our content and all the
59:27 - coursework that we put out and all the
59:29 - events that we're having in the future
59:30 - so thank you everybody for stopping by
59:33 - and we'll see you next week have a good
59:36 - one everybody bye
59:41 - and that's it that's the live stream
59:44 - it's over

Cleaned transcript:

okay we're live hello hi everyone welcome welcome to the first live stream in our threepart journey through code Academy's Evolution we're so excited to walk you through this project from our course learn JavaScript I'm a Corey c code academy is content marketing manager and I'm joined by Fede Garcia Lorca our community manager who you probably recognize from forums and Discord as well as Zoe Bachmann our curriculum director and Melanie Williams an instructional designer who will be on hand ready to answer all of your questions in the chat so Augustus code Academy's birthday month which is very exciting and as Leos we're going all out and celebrating big we have a full lineup of plans including new AI course launches and interactive events like this one where we'll be covering topics like generative Ai and fight that for data python for data science so be sure to check out the calendar which is linked in the YouTube description below because we would love to see you there um today though we're throwing it back to the first ever course that code academy launched 12 years ago learn JavaScript JavaScript is a fundamental language for web developers and it's also one of the first languages that people tend to pick up when they're learning how to code Zoe will be walking us through a project from learn JavaScript step by step so you're welcome to follow along but keep in mind you can also take this course on your own time whenever you want and it's also linked in the YouTube description and this live stream will be available to replay if you get stuck or need hints let me tell you a little bit more about Zoe as the curriculum director at code academy she focuses on finding new ways to make learning to code more accessible and engaging Zoe is an artist and an educator who's interested in how we use technology to increase political engagement critique society and invent new forms of collaboration her practice involves research pedagogy and creative uses of emerging technology she is a former member of the gorilla projection group The Illuminator founder of the feminist technology Collective tendernet and she holds a master's degree from the interactive telecommunications program at NYU hi Zoe um before we jump into the project I wanted to ask you what makes JavaScript a good first language an entry into programming yeah absolutely um so I love teaching JavaScript because it has so many applications and we'll talk a little bit more about all those different forms of application but you know I find that for firsttime programmers anyone interested getting into coding you know oftentimes you want to build something tangible and a website is a great thing to build and so oftentimes you'll start off with HTML and CSS but if you really want to make your website powerful exciting interactive you need JavaScript for that and so you can use JavaScript to code interactions on the front end but if you want to start getting into that full stack programming you can also use JavaScript for that which is why we actually you know designed our full stack career path with JavaScript as that core language so you wouldn't have to use a different language if you wanted to go into programming backends right take it away let's get into this project all right let's get into it um hi everyone it's so exciting to meet you again thank you Corey thank you Fede um very excited to be here it's been a minute since I've done a live stream um but I love live streams you know in my job as a curriculum director uh I don't always get the opportunity to get face to face with Learners um as much these days so it's really wonderful to be here with all of you um I've put together a little presentation for us before we get into the project so let me load that up all right so as we were saying we are going to be talking about learn JavaScript today which was one of the it was the first offering from codecademy um funny enough I was on codecademy as a learner back in 2011 when it first launched so it's it's really cool to be here today and talking about it so what are we going to cover today um we're going to talk a little bit more about the role of JavaScript as a programming language and it being the first course on codecademy um then we're gonna jump into and talk a little bit about programming logic um I'm really excited I think logic is one of the most interesting parts of learning how to program also one of the most difficult parts so maybe you've started to learn JavaScript and this I find can be a uh sort of one of the most early challenges for folks when they're starting to learn uh how to program so we're going to talk about it uh after that we're going to go through the race day project which is in the learn JavaScript course so we'll go step by step um and talk about how we're going to code that um welcome your questions welcome your ideas as we go through that and then we'll have a little bit of a wrap up um so if you do have questions throughout please post in the chat as mentioned we have Melanie who's one of our instructional designers in web development hanging out there and she'll make sure to pass me any questions I can answer live okay so moving right along our objectives for you know this walk through today as mentioned we're going to talk about the purpose of JavaScript and how it's used um history importance of logic in the history of computer science uh introduction to conditional statements and then we're going to apply it all in a project love it so what is Javascript um so I was just talking a little bit about this with Corey but again JavaScript is a very powerful and flexible and fast programming language used for things like complex web development as we are talking about but it also has a lot of other different applications too it Powers the dynamic Behavior across a lot of websites including code academy um and it is oftentimes one of the first programming languages that people learn because it can be used in so many different ways so let's talk about those use cases a little bit so this is what JavaScript looks like if you haven't seen JavaScript before um initially JavaScript was created to make web pages alive right we were talking about this in terms of interactivity if you've done some of the HTML and CSS stuff it's cool and you can do a little bit of like animation stuff with uh CSS as well but really JavaScript is what you know can make these really powerful fun experiences that you may love on the web um so programs in JavaScript are called scripts that's where the name comes from they can be written right into web pages HTML and they run automatically as the page loads um they don't need any special preparation or compilation to run like some other languages like Java sometimes people get confused is there a relationship between Java and JavaScript there is no relationship it was just that Java is a really popular language when JavaScript was first invented so um you know I kind of talked about that relationship between other languages that you might be familiar with HTML CSS and JavaScript I love this graphic um because I think it just you know really helps you understand what is the role again of each of these different languages when building a website so with HTML you know sometimes we think about it as like the bones of the page is where you add your elements to them CSS is going to add some styling to it a little bit of pizzazz but JavaScript really enables you to move and transform elements and create something like a game so a lot of this is kind of what we term as like the front end what you would see when you end up on a web page but what's cool about JavaScript is that you can also use it to program servers or the back end of a web page um so that's going to make your website more powerful store data things like that um and what's great again is if you're interested in becoming a full stack software engineer that means that you don't have to necessarily go out and learn another language like python or Java which are our other great backend programming languages but you could stick with JavaScript for your first one um so talked a lot about JavaScript in relation to web development but you know Corey mentioned in my bio I'm an artist I'm a creative technologist one of the things that I love about JavaScript is that it has a ton of different applications there's some really cool libraries out there um that enable you to program using JavaScript so again we've talked about websites that's awesome but um one of my favorite uh things to do is program creative coding applications in a language called p5.js that's powered off of JavaScript and once you know JavaScript it's really easy to pick up um you can create data visualizations with um D3 uh you can create 3D models with 3js you can create your own games with phaser.js and you can even uh do some machine learning with ml5.js which is pretty neat um even more applications you can do programming with music with tone.js and one of my favorites we have a course on this is a program called Aframe which uses HTML and CSS and JavaScript to build in browser VR and AR experiences so again lots of really cool stuff very worth your while to learn JavaScript and that's why JavaScript was the one of the first I keep saying one of the first it was the first programming languages that we taught here at codecademy starting back in 2011. so just wanted to show some like fun screenshots of what codecademy used to look like back in the day um this is our very first JavaScript course or getting started with programming course and you can see you know similar today we had that you know we have a two panel here um with the console and you have those tasks that we had and you'd go through and you would run your code again code academy if you all didn't know was really the company that pioneered Interactive Learning on the web which is pretty cool um back in 2017 we did a massive update to teach the latest version of JavaScript um so we've kind of iterated our JavaScript course over the past you know gosh how many years is it 12 years now um and you know with that our platform has also grown we've added more courses but we've continued to improve our JavaScript content as well um even most recently we updated our react courses which is a JavaScript framework uh and so yeah so you can see the learning environment as we call it the Le um starting to look more similar to what you may have seen today with that three panel um we have you know the checkpoints we're checking your code and then what we have today which we all know and love so yeah so that's basically just the evolution of JavaScript on codecad me so now we're going to switch gears and we're going to talk a little bit about the role of logic in programming because the project that we're doing today is called race day and it's in the learn JavaScript course in our third module on conditional statements um and if you're not familiar with conditional statements conditional statements allow us to add programming logic um into our programs and I think it's this really powerful moment when you're learning how to code because before that you know you're getting the basics down you're learning about variables you're learning about comments you're putting things to the console um you can see how you can do basic calculations with operators but when you learn conditional statements this is the moment where you can start to see the power of using a computer program versus just doing something yourself with a calculator right you can start to see branching logic so to talk a little bit about the history of logic and how that's impacted computer science and programming um you know logic is the I would say Foundation of computer science in many ways and it's certainly the foundation of artificial intelligence and this whole live stream series is about you know how we're evolving as the learning platform especially within this you know new moment of artificial intelligence with applications like chat gbt so I think it's cool to kind of like you know come back to the beginning talk about JavaScript as our first course but also talk about the foundations of computer programming and artificial intelligence within the world of logic um I don't know if there are any people out here who like reading graphic novels but uh if you are interested in learning more about the history and the development of logic as a field and how it you know again created the foundations of computer science I definitely recommend logic Comics uh it's the story of the foundational quest of mathematics and how uh Bertrand Russell and Alfred North Whitehead pursued the idea that mathematics is based on a logical system um it doesn't get into actual like the development of logic in relation to computer science it kind of hints at it at the end but it um you know again talks a lot about these kind of foundational you know arguments that were happening between mathematicians in the 19th century so you know to talk a little bit about how Bertrand Russell's and Whitehead's work influence computer scientists the very first artificial intelligence program known as the logic theorists system was actually built with the intention to prove some of the mathematical theorems in Bertram Bertrand and Whitehead's work which is super interesting so this program the logic theorist program uh was written in 1956 by Alan Newell Herbert a Simon who are here and also someone named cliff Shaw and it was the first program to deliberately engineer to deliberately engineer to perform automated reasoning so it was designed to mimic the problemsolving abilities of a human right now we can understand how we get to artificial intelligence here so interestingly enough the logic there has proved 38 of the first 52 theorems in Chapter 2 of Whitehead and Russell's principle of Mathematica I know this is real nerdy stuff right here but bear with me but it was a really major moment so again not only does logic provide the foundation of computer science but also logicians are using computers in order to further their work and their research as well so to talk a little bit more about artificial intelligence um I'm sure many of us here are familiar with chat Bots but um you know while chatbots these days especially like something like you know chat gbt we can call a chat bot are using pretty Advanced forms of technology like neural networks um back in the day chat Bots were really just based off of conditional statements they really were just following these you know control flows and so Eliza was one of these early chat Bots it was one of the first programs you even capable of attempting the Turing test and I I think it's interesting and we'll talk about this as we get into the project in a second but you know we can look at something like a flow chart and we start seeing how you know we can use a flowchart to come to decisions about what we want our program to do right maybe you even used a flowchart at some point in your life to come to decisions about what you wanted to do but this is a great way to pseudo code out right to Think Through the logic of a computational program before we implement it with syntax in a language like JavaScript all right so that's a little bit of our uh uh part about logic and computer science um looks like Melanie's in the chat answering questions um and yeah so with that I'm gonna jump into the project so um our project for today is the race day project it is the second project in the learn JavaScript course um so if you are enrolled in learn JavaScript or uh any of our skill paths or our career paths that use our JavaScript content you'll be able to find it there um as mentioned it is in this third module here um and it's totally okay if you haven't programmed in JavaScript before we're gonna I'm gonna like talk through what's in the program um and also this is um not just a live stream but being recorded and will be hosted on YouTube so you know feel free to after this live stream go and do the project and then come back and rewatch this live stream if you get stuck at all we also have in on this project a Project walkthrough video too so another person explaining how to go about uh programming all right uh with that we're going to jump into race day so um we're going to just read over The Prompt together I'm going to talk about how this relates to using conditional statements and logic all right so race day code Academy's annual race is just around the corner this year we have a lot of participants you've been hired to write a program that will register Runners for the race and give them instructions on race day so we have this visual here and it basically tells us as a timeline registration would look like this at 9 30 a.m if you are a adult which we're defining as being over 18 and you've registered early you're going to start at that time if you are an adult and you registered late you're going to start at 11 A.M and then anyone who is considered a youth which is younger than 18 years of age we'll start at 12 30. doesn't matter what your registration are so in addition to assigning someone a start time we're also going to um towards the beginning of the project assign everyone a race number um I don't know if you all have run a race I actually am running a race this Sunday and just got my race number in the mail but you get a little bib it has a number on it and that's how you know what your time will be um so yeah so we're going to talk about how we're going to use conditional statements to assign race numbers to everyone in the race too uh you may have noticed that uh we talked about assigning times for adults who are over 18. we talked about assigning times for youth who were under 18 but we have not planned for runners who are exactly 18. don't worry about it you can still run the race if you're 18. um we're just going to handle that at the end of our project so uh with that I'm going to press Start um if you've never done a project on code academy uh let me just talk a little bit about what we've got here so I went over the prompt um and below the prompt here we have different tasks you can see that we have nine of them to complete as we go through we're going to check them off you can also uncheck them if we get stuck we can open up a hint um and then over here is our code editor our IDE and this is actually where we're going to write our code out together and then over here is our output console so if I you know want to print something to the console I can write console.log right hello and then I'm Gonna Save that and you can see after I've saved that what I wanted to print to the console will appear here so we'll be using a lot of these console.log statements to check our work as we go along um I'm also going to have us you know talk a little bit about again the syntax that we're going to be using in this I've mentioned things like conditional statements we're also going to be talking about comparison operators logical operators also known as Boolean operators um as we go through so it's totally okay again if you haven't learned this stuff before we'll explain things as we go along all right so with that um going back to the project prompt I think one thing that's important to call out here if it wasn't already kind of apparent as I was reading through it is that we have a lot of different situations happening here right and that's a good signal to us that we want to use conditional statements that depending on the data that we're inputting whether it be in this case age registration status we want to make sure that based on the specific data that our program is receiving that we're going to Output the correct information in this case for our user who's signing up for the race right so again if you are building a project on your own if you have an idea for your own project or you come across a project you've never done before or something like a code Challenge and you see these like you know certain requirements asking for different outputs it's probably a good indicator that you want to use conditional statements for them so um just to talk a little bit more about conditional statements again I kind of mentioned flow charts in the beginning but this is I think like a great way of if you're going into a project where you're thinking about how you have different conditions that are going to end up in different outputs you can use a flow chart to think that through moving forward accidentally so you know this is just again an example of a flow chart lamp doesn't work you check and see if the lamps plugged in if it's not okay plug in the lamp if it is check if the bulbs burned out if it's still not working you can replace the bulb no repair the lamp right so you have these things and you're checking basically is it true or is it false so in programming that question that we're kind of asking ourselves is a Boolean expression it's called a Boolean expression because again we're checking to see is it true is the condition true or is the condition false and we want to take we want to do different tasks depending on what the condition is so what that looks like when we're writing it out is something called an if statement or an if else statement um so you say if this specific condition and if this condition this Boolean statement here is true then we're going to execute the code that's within this block here what's cool is you could just have an if statement and that's it and move forward or if you have multiple conditions that you want to check you can use else IFS um and if you just want to make sure that like there could be you know any situation outside of the ones we're checking uh you can use an else and that will execute if condition 2 is false all right so just setting that up a little bit it's going to help us with the project all right coming back to it let's dive into these tasks so um before we actually get into the logical part of our program we have a little bit of set up to do so in this first task we're being told that race numbers are assigned randomly we've already provided the necessary code that will power this random generation at the top of the file so you can see this here we have a variable called race number and we're setting it equal to math.floor and within that parentheses is math.random times a thousand so these are some builtin functions that JavaScript gives us um which is very nice of them and basically they programmatically will give us a certain set of numbers it's between zero includes a zero and exclusive of one so everything up to one in order to get to a thousand we multiply it and this is the multiplication operator here the little asterisk by a thousand but that's not going to give us nice even numbers and so that's why we use math.floor here so I'm going to just show you what some outputs of this look like so I can console.log race number and then I'm going to save it and we can see that output 930. okay great so I can just keep doing this for a little while and we can start to see the range of numbers that we get between zero and a thousand fantastic we can check off this task um if you weren't familiar with that again we have hints here which are super nice parts of projects so just explains exactly what I said here and yeah all right so next step um we need to create some variables and steps two through three so um we are going to create a variable that indicates whether a runner is registered or not and we are going to set it equal to a Boolean value you'll change this later as you test different Runner conditions so remember again I kind of mentioned Boolean values right so Boolean means is it going to be true or is it going to be false those are the only two options that we have right um so we are going to say our we're going to use the const version because we don't need to change well we're not going to change it in our program which is why we're going to use cons so we can change it ourselves you know um so we can say const you can use let it's fine this is just a little project const registered early I'm going to set this to false but we can change this again to see how our program will change in the future great again we can see here cons registered they all set it to false and then we're going to create a variable for the runner's age and set it equal to a number so I'm going to do const age and I'm going to give it 21. I myself am not 21 but you know 21 is a great age okay so with that oh I'm seeing folks want me to zoom in a bit okay I'm gonna pop in and say that all right is that better good on that all right let me know if if y'all need anything else from me thanks for interrupting Okay so we've gone through steps one through three nice and Speedy uh so now we're gonna get into the meat of it um going into step four so now we're going to create a control flow statement that checks whether the runner is an adult and registered early and if so if that's true we're going to add a thousand to their race number all right okay awesome I'm seeing it's better I'm so glad that's easier to read I also have astigmatism so um feel you on that all right so um control flow is a general term for any kind of again um syntax that determines the flow of our program so conditional statements but you could also say a loop is a control flow as well but in this case again we're going to be talking about conditional statements those if if else else if statement so with that we only really have one condition here right so we're going to check whether the runner is an adult and registered early I got a little bit ahead of myself because I kind of want to show a couple different ways of um coding this as you know there are a couple different ways always usually in programming of solving a problem so I'm going to show you one way and then I'm going to show you how we can refactor our code to be a little bit neater and use some logical operators with that so first I'm going to break this up okay so we have actually two Boolean statements that are happening right here we want to first check that Runner is an adult we want to make sure that's true and then we also want to check and see if they registered early so I'm going to say if and we defined age as being greater than 18 right so let me say age is greater than you might remember this from math class right you want to have it being eating the bigger number 18. and then I'm going to open some curly braces here all right so this is the first part of our program um and I just want to talk a little bit more about comparison operators just in case anyone's not familiar with this so let me pop back over to my little presentation here so comparison also known as relational operators for some reason operators we always have like multiple names for the same thing but um we have this way of relating things and then you can see over here depending on how it evaluates we can get a Boolean value of that and again we use that to determine if the condition is going to be true and thus whatever it goes into um will happen so we talked about having greater than you can also have less than you can even add an equal sign so you could be inclusive of a number same thing here we can also check if two values are equal and we can also check to see if something is not equal as well we'll talk more about this exclamation point or bang operator also known as the not operator in a few more steps too so again this is just like a helpful little kind of cheat sheet to remember what we're kind of looking for and you know in our case we want to make sure that it's going to evaluate um well depending on what our age is of course right but in this case we're looking for adults and you know if the condition is true it should evaluate to true all right so then our second part here is registered early so I can write another statement that says if registered early now again like I said before there's a couple different ways of doing this you could say as we just looked at In the comparison operators you could use that double or triple equal sign um to check for true and then open this up and I'm just gonna say um we'll get to the the second part of that but I'm just going to console.log true let's see if that works all right so I forgot we had this console log race number here but as you can see it didn't evaluate to true because we had registered early as false so if I change this to registered early this should get us to stay true okay so let me break that down again right now my age is above 18. and I have actually registered so when I get into this first Boolean statement and I'm checking to see if the variable age is greater than 18 that's going to go to True right 21 is more than 18. and then for registered early checking to see if it's true that's also going to evaluate to true because I changed this to True remember if I had this as false nothing's going to show up here except for that race number here which I'm just going to comment this out remember to comment out you can just put two slashes in front of it nothing's gonna show up because this is false so registered early is not able to evaluate to true all right so with that I'm gonna do a little bit of refactoring so one place I'm going to start is you actually don't need to set registered early and check it that it equals true you can just put this value in if there is a value that exists or there I should say if there's a variable and it has a value it means that it's going to be um considered as a true statement I should say except if you know the value is false um and then another thing that we can do is we can actually combine these into one Boolean statement here I don't have to have them nested in this way so I do that by I'm just going to kind of roughly do this and then I'm going to get rid of my curly brace and then I'm going to use a logical operator or Boolean operator called and and I do that by putting two ampersands in between them so let's talk a little bit about Boolean operators really quickly so Boolean operators um look like this we have a logical and operator which again are those two ampersands or we have an or operator and you can see similar to how we were looking at the comparison ones that you know they can evaluate in different ways so if we have two true statements then it evaluates to true if it's true and false it's going to be false if it's false and true it's false it's false and false and is very very strict as you can tell or we're a little bit more flexible on it right you get more trues out of it and only one false but in this case we're being strict you have to be an adult you have to have registered early so we're gonna stick with and there and now let's save it it's still going to be blank which is what we expected because it's false up there we did not register early so if we change that to true it's true again great all right but I didn't finish this task um I don't want it to be true in here what I really want to have happen is one I don't I'm not actually console logging anything I just need to add race number um so again a couple different ways you can program this you can take the race number variable and you can have it equal to you can set it equal to itself plus a thousand and we can now I'm just gonna um uncomment this so we can see this change so we can see that initially when we generate this number it's 209 but now when we generate it it is 1209 amazing our conditional statement worked um again to do a little bit of refactoring you may remember this but you don't have to write something as long as this you can actually change it to B and I'll just write it below so you can see it race number plus equals a thousand and so this is the exact same process but it's just a little bit cleaner we just like our code to be clean right so I'll save that show that it's still doing the same stuff fantastic all right so that was number four the tasks after this are very similar so we're going to go through them a little bit more speedily but again please make sure to keep asking questions Melanie will let me know fantastic all right so for step number five we're going to create a separate control flow statement below the first and then this statement will check age and registration time to determine race time okay so now we're getting into the second part if you remember of the prompt we've currently figured out how we're determining race number um so now we're going to get into this portion where we're determining start time so again we didn't need to create an else situation here basically if you met this criteria your number is going to be a thousand otherwise your race number is going to be yellow below a thousand so starting our new can control flow conditional statement I'm going to say if and this is actually the same Boolean statement that we have above right for runners over 18 who registered early we just copy and paste sure if you've been programming at this point you know copy and pasting something you end up doing quite frequently but what's going to happen within it um is going to be a new uh thing that we want to execute in our program so I want to log a statement to the console telling them that they will race at 9 30 and I'm going to include their race number excellent so we've seen some console log statements already here so I'm going to type console.log um and prior to this I was just kind of inputting strings right strings are text that we wrap with quotation mark single or double but what I want to do instead is I'm going to use something called string interpolation so that you use the back ticks in it not the quotation marks but it makes it much easier if we're putting a variable a variable within our console.log statement just like in terms of writing it again just kind of neatness so console.log I'm going to tell them you will race at 9 30 A.M and your number is and this is where it gets spunky you do a dollar sign curly brace which we give you the both of them at the same time just make sure your cursor is inside of it and then I'm just going to put that race number variable right there okay awesome so let's save that and let's see fantastic okay so um maybe I'll keep that console.log statement excuse me um below the other conditional statement just so we can see kind of the whole logic of our program so first we're generating a number second if our input here matches these conditions we should add a thousand to it that's happening there and now we should see if that's we're still matching that data then we're going to tell be told that we're going to race at 9 30 and our race number is going to be exactly what we got before 1532 awesome we're doing great Hey Zoe we got it yes um what the question is what if I add a thousand to race number in the initial declaration in the initial declaration like up here I'm guessing so you can do that um but the thing is is that you're not going to be following the project prompt right so we'll see that in a little bit as we get into these other conditions that we don't always want a thousand added to our race number we only want a thousand added to our race number if someone is an adult who registered early so if we have it happen up here when we're defining the variable race number we're no longer making that a condition that we are um looking at does that make sense I hope so any other questions all right feel free to keep uh interrupting so I hope that didn't come off sarcastically because it definitely was not meant to be sarcastic okay um we're going to get into some fun stuff now so uh we've gone through our first one and our second one is that late adults I love that late adults it's all too registered late are going to run at 11. so we are going to be creating another conditional statement and it's going to be part of this same flow right because we are what happens when you write a multiple conditional statement is it's going to check the first one if it's false we want it to jump into the second one and then check if that one's true if that second one is false then maybe we want to have an else statement you could have so many else ifs in here although at a certain point if you really have like more than two three you probably want to use a switch statement instead which is also um gone over in the lesson before so I encourage you to check it out but we only have um really like four conditions in here I believe so we're going to use else if and this time um it's a little bit different right so we're still checking for adults so we're still going to use that greater than comparison operator uh we still have a second condition but this time we are checking to see if they registered late so so how do we Define that someone has registered late well um we could see like we did before registered early is equal to false but there's a nicer way of doing this um and I kind of hinted at this before when we were going through things so there's something called The Nut operator and basically it reverses what we get into so if we put this not operator or the bang operator in front of a statement it's negating the tune returns false or it can say that that's you know so that's what we're looking for here is we want to return false so all I'm going to do is put this little exclamation point before registered early and that's our Boolean statement for the second condition here uh and so again gonna copy and paste and I'm just going to change in this one that they are starting at 11 A.M all right so now I'm going to show that this can evaluate to true and I'm going to do that by changing the value of this right here so imagine we have someone here um let's say they're still adult let's say instead that they're like 65 um but they didn't register early so I'm going to save this and you can see now some things in our program have changed okay so we generated that random number and it's 83. um but because this person did not register early we did not add a thousand to the race number the race number is just staying 83. also they're no longer this person is not racing at 9 30. instead they're going to be racing at 11 A.M and as you can see here we also have the number 83 here awesome so yeah so you know again you could imagine this as a computer program where someone's logging in they have um you know their information already and the computer is looking and checking for again these things like did this person register early how old is this person Etc et cetera we're just kind of doing this like in the project right now but you know maybe you could have a user input um within your program that enables people again going back to the interactivity part of JavaScript right you can imagine a front end that you program and this is some of the logic on the back end but actually has the opportunity for someone to input these values but we're just using them for testing okay almost there um so now we've been talking a lot about adults we're going to get to these um so for the Youth uh we want another conditional statement and again we're going to use else if so else if age and this time we want to say ages less than 18 um and oh and so we don't have to care about the registration so we don't have to use any of these logical or operators right here we can actually just keep it as just checking if they are below 18 because it doesn't matter if they registered early we don't have to check for it nice and easy so we're just going to take that console.log put it in and then we are going to change it to 12 30. youth get to sleep in Lucky them um and your race number is going to be race number so what we want to do now is we're going to change this to 15 and we should expect to see that we get to this third conditional so let me press save all right again generating a number we're not adding a thousand to it because they are not above 18 they are below 18 so we're just completely bypassing this if statement because it uh it was false and we are also bypassing both of these first two statements here because they also evaluate to false because in both cases it's checking to see if they're over 18 and they're not I'm also going to show you that again changing this value from false to True doesn't matter in this case because we're not checking for it still racing at 12 30. all right so um eight enter in different combinations of values for the two variables you created and run your code several times we've been kind of doing that along the way um so you know honestly my preference is check your code as you go um you know use a lot of like console.log statements as I kind of showed change your inputs to make sure and stress test um the different conditions that you're writing um and then there are some examples in the hint so you know you can use these uh Runners Who start at 25 years old and registered early will run at 9 30 so we can just double check that press save awesome you can see that they're racing at 9 30 and they've got their number there uh if we were to change that to false save that now you can see that they're running at 11. um we just did the teen one so so yeah good to check your work all right but we have not finished yet uh we need to remember the num uh the runners who are exactly 18 right so we've talked about this a little bit in the um part around comparison operators just to go back to that so really we're only using these less than and greater than which means that they're not inclusive so we're not actually checking if someone is 18 only if they're older than 18 or younger than 18. so we need a condition for those 18 year olds so what we can just do is use an else statement uh we don't need to put anything besides that there's no again Boolean condition that we were checking there and then we're just going to console.log that that person needs to see the registration if I could spell registration that would be great registration desk all right so I'm going to save now let's check that we're going to change this age to be 18. we're going to save it then we can see that the result is that they need to see the registration desk now if you wanted to include 18 year olds in either one of these categories um you know some might say an 18 year old is in fact an adult we can add a equal sign to the conditions where we're checking to see if someone's an adult so I'm going to add it here to this first one because remember this was for adults who registered early I'm going to also add it to this one for adults who registered early and for adults who didn't register really now let's see what happens to our program for an 18 year old I'm gonna click save uh we can see that they jump down to this condition of 11 and if I change this and that's because again the registration was false so the previous two conditions didn't evaluate to true but if I did change it to true we can see they have a number in the thousands and that they're going to race at 9 30. so that is the entire race day project uh thank you for coding along with me I see that we've had some really fantastic questions in the chat thank you so much to Melanie who's been answering questions as we go um so I hope this was a really fun introduction for folks who haven't done much with conditional statements yet who haven't gotten into the logic parts of programming thinking about how things evaluate to true and false um again I feel like this is really going to unlock some powerful programs for folks who are just getting started here and yeah feding you want to take it away here I am hey thank you so much Zoe um I think this is the most exciting part of the live stream today which is the Q a we have about 10 minutes to go so I would like to extend an invitation to everybody in the chat that is following along if you have any questions for Zoe this is the time to ask those questions we'll be checking the chat anything you want to ask about JavaScript or I guess curriculum at Academy is fair game we'll be reading through the chat and bringing up those questions um so do you mind turning the screen sharing off yes it should be off now great awesome fantastic so um you know while we wait for questions to come in uh one question on my own how do you feel about JavaScript versus python I know that a lot of people ask or which one should I go for first yeah it's a great question and you know as a as a CS educator it's one I personally go back and forth on um so you know in addition to working at Coke Academy I've taught with girls who code I also teach a college class right now um and and it really kind of depends on what the overall objectives are I find that um python is an extremely powerful program that's similar to JavaScript has a lot of different applications and it's not surprising that pythons are first most popular course and JavaScript is our second one so you know with python you can get into data science applications if you're really excited about AI I would definitely recommend python um and then if you are interested in very creative applications or doing more web development web design I think JavaScript is for you and the great thing is honestly is you can learn both like when I was learning how to program I started with JavaScript and then I took a python class it was actually so I went to this really wild grad program that was like all about fusing art and Technology so my python class was a poetry class and what I found is that learning a second language really helped ground me in the basic principles of you know programming topics like conditionals like Loops um so yeah I'd say pick one language python or JavaScript kind of depending on your um you know what you want to do in terms of projects career and then you can always come back to the second one okay great that's I guess that's uh that's all more indepth than I've ever thought about it so that's awesome yeah JavaScript versus python I know that it's a very contagious sort of question that everybody has oh people people fight I mean you can get into the whole thing I mean I mean I could talk about this forever so please stop me but like you know intact sugar and job script Python's a little bit a little bit cleaner some folks like that more so all right I think something that people people tend to forget is is what you were talking about how it transfers over you learn a language and then when you go to the second one do you see the commonalities they're walls Loops the whole thing right yeah absolutely so I think they're both great languages I'm looking at the chat somebody was asking about AI Tools in our coursework do you know anything about that AI tools and our curse work well we are you know developing some very exciting things right now this is what so much of our um big code academy evolved campaign is about I don't know how much I can talk about them right now okay yeah we don't want to spoil them you know I know no spoilers some really fun surprises coming up you know we've done some AI coursework we've actually been developing you know I think everyone knows this but artificial intelligence has been around for a while as I talked about in the presentation you know it's been around since the turn of the last and uh well Midway Point through the last century um but you know chat GPT has really just kind of opened a lot of people's eyes outside of you know the tech world to the power of AI so we have you know our intro to chat gbt course highly recommend taking that that kind of walks you through how to do prompts with chat gbt but also like the history um and the technology itself um but we also have some really cool artificial intelligence we have like a great um learn how to build your own chat bot program or skill path so you know definitely recommend looking into those things I think um I just saw Matt Simon asking a really good question I think this goes across the board pretty much everybody has encountered this before which is the question is is it just me that or is it normal to feel frustrated sometimes when you feel you are not grasping a certain concept oh it is not just you Matt Simon it is definitely not just you it is incredibly normal when learning something new to feel frustrated actually I think it is a sign that you are learning if you're feeling frustrated right like if it was easy you wouldn't be learning it so I would say you know a big part of learning something new is to be resilient and you know continue learning I mean there are things I've been learning to code now for I don't know like eight years and there are still new things that I find out or my knowledge of it expands especially you know through teaching I always see things in new ways so it is totally normal to feel frustrated and not get Concepts at first you just you know take your time keep coming back to it take time for rest honestly you know I say this also as a creative person your best ideas come after you know you've gone for a walk or in the shower or sometimes even asleep you know I have friends who are software engineers and they'll dream about bugs that they're trying to solve and wake up and be like oh okay yeah now now I know how to go about it so give your give yourself the time nice I see a related question here which is about um doing multiple passes through learning at the same thing and these users mentioning all their sites out there online that you can go to learn online and I think that this is something that we don't that we're not shy about what we talk about how we at Coconut we are hoping to be that great resource to learn to code but you know everybody learns differently at different pace and different uh learning techniques and sometimes uh it's good to even if it's the same content to cover in different formats or in different places oh yeah a hundred percent I mean this is something I personally feel passionate about so our team is really interested in learning about you know learning science and we take learning science research and research and use that to design all of our courses and something we feel um again really is really important is how you develop what's known as a mental model right what is your personal understanding of this information that you're getting and I personally find one of the best ways to build a mental model is to engage with a ton of different resources on the same subject because people are going to explain something like conditional statements in a lot of different ways and some may click with you better than others maybe they use the right metaphor that really resonates with you um I think you know there are some interesting things too about like learning modalities you know I would say one interesting thing we found out when reading about learning science is like the more closely you do something and you're gonna say this is a whole point for code academy and learning on code academy but the more closely you learn something in the way that you would apply it it's going to stick better with you right like you wouldn't necessarily learn how to play soccer by only watching YouTube videos it's the same for coding you can absolutely watch a video on YouTube of someone coding and again I think it helps build that mental model but you know what drew me to code academy when I was a learner before I even started working here was getting to actually write the code and getting it tested for me which I thought was great but yeah I mean there are so many wonderful resources out there if you're looking to learn JavaScript really recommend the eloquent JavaScript book um that's like a classic text and I think you know getting your information again will just help you further internalize it and really remember all of the information that you're learning nice great so one last question here will we still have time uh Eric Lozada is asking I'm trying to build my web design business should I take the front end engineer path or build a website skill path so I guess the question is out of in your catalog what would you recommend for some somebody looking to build a web design business yeah I think that's a really great question so we design our offerings for people who have different goals and so I think if you're choosing between a skill path like build websites versus a career path like front end I'd recommend starting with the skill path Because unless you have a personal interest in becoming a frontend web developer there is going to be a lot of additional information in the career path and that's great for someone who wants that we want to make sure it's comprehensive that people feel really confident that they have all the information at their hand to be able to get a job in that role but if you are looking to build something very specific that's why we design our skill pass they're a bit faster and they get you to your goal quicker I'd also recommend if you're interested in web design we actually have some really fantastic new visual design content that's come out this past year some UI ux materials so I would also dig into those that those courses first um and then you know can supplement with the build websites to build your own website nice okay well uh that was all the time we have for Q a today I want to thank everybody for stopping by the live stream today and please join me in the chat to thank the great Zoe for her presentation today I think it was very fun and useful a lot of people are going to watch this live today or later and they're gonna enjoy the content that we put out so thank you Zoe for that yeah thank you so much for having me yeah and if you like the content that you saw today and you want to practice on your own don't forget to stop by and create a free account with code academy you can do that today start going on in your JavaScript Journey get try to get as good as Zoe a JavaScript I guess we'll see you there online in our community spaces also don't forget to subscribe and follow us on YouTube because we are having a threepart series on these contents so today was part one but we will be live again next week same time same day Thursday and the following week on the 17th of August so we're hoping to see you all there and of course you can follow us on social media like Twitter LinkedIn Instagram to keep up to date with all of our content and all the coursework that we put out and all the events that we're having in the future so thank you everybody for stopping by and we'll see you next week have a good one everybody bye and that's it that's the live stream it's over
