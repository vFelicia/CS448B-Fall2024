With timestamps:

00:05 - I just clicked
00:10 - it's not showing up though
00:18 - hello everybody and we are live at code
00:23 - Academy HQ in the heart of Soho welcome
00:26 - to the very very first episode of
00:28 - getting started with C++ my name is
00:31 - sunny and I'm a curriculum developer
00:32 - here at code Academy if you have taken
00:35 - learn sequel learn C from scratch where
00:38 - she learning fundamentals data science
00:40 - path then you probably have seen my work
00:42 - before and today hello everybody hello
00:46 - everybody hello chat and today I'm super
00:49 - super super excited to announce that we
00:52 - finally released our learn C++ course I
00:58 - start waiting for people to jump into
01:00 - chat jump in the stream
01:02 - I can ramble a little bit about hello
01:05 - Nonya the loading bar is off bounds
01:10 - house can you look into that
01:27 - cool okay let me
01:35 - cool and over the last three days over
01:39 - 43,000 actually then we run the query
01:41 - one more time over 43,000 122 people
01:46 - distinct learners have came in to learn
01:49 - C++ and this is really mind-boggling to
01:51 - me because doing my interview here a
01:53 - year and a half ago I listed C C++ won't
01:57 - the languages I really want to Bill here
01:59 - so it's definitely a dream come true and
02:03 - even though I'd love to say this is all
02:05 - me
02:07 - we had ton of people help out with this
02:09 - course the subreddit learned programming
02:11 - Jer
02:12 - lingo from Cali who worked on all the
02:14 - are illustrations in this course Chris
02:17 - show amar seniors senior engineers
02:18 - actually reviewed this course Alberto
02:21 - our product designer on his second day
02:23 - he actually learned he learned C++ day
02:26 - in college for four years and he
02:28 - reviewed this course this live stream I
02:31 - want to teach you the very instructor e
02:34 - parts of C++ but also this is kind of a
02:36 - two-way street where what I'm hoping for
02:40 - towards the end is that you'll give me
02:41 - some feedback I'm gonna give you my
02:42 - email so you can take this course and
02:45 - let me know what you think if there's
02:46 - any ways to be stronger with the course
02:48 - I'm open to all feedback so this
02:52 - specific stream is actually meant for
02:55 - beginners okay whether you are a
02:58 - computer science major about to about to
03:02 - study C++ next semester in the spring
03:04 - semester whether your professional
03:06 - trying to career or trying to pick up a
03:07 - new language this is the perfect place
03:09 - for that if you are looking for more
03:12 - advanced topics we will be doing more
03:14 - streams so this is a very first episode
03:16 - and in this live stream we're gonna do a
03:20 - couple of different things so first
03:22 - we're going to go over a pretty
03:24 - high-level introductory brief history of
03:28 - C++ and then we're gonna dive right into
03:30 - write your first C++ programs and two
03:33 - and three we're gonna compile and
03:35 - execute go through the second lesson in
03:38 - learn C++ and third we're gonna do I'm
03:42 - gonna show you how to run C++
03:43 - Clio a computer I'm so hey mr. good pals
03:47 - hollows is episode I'm thinking about 30
03:50 - minutes 20 to 30 minutes it should be
03:51 - pretty brief Gigi there we go
03:56 - well you click cover seve c-sharp mercs
03:59 - because buzz no so for this livestream
04:01 - were just covering C++
04:03 - I'm actually really left the language
04:04 - see there's actually my first language
04:06 - well C C++ can we use Visual Studio to
04:11 - run C+ it yes you can there's actually a
04:14 - video that we work 12 hour coaches
04:15 - worked on that shows you exactly how to
04:17 - download Visual Studio how to Bill
04:19 - you're supposed to program and that will
04:21 - be in the third article cool and also I
04:28 - just want to say here's a really fun
04:30 - part at the very end of the stream there
04:32 - will be a CO challenge where you're
04:35 - going to be able to win well five of
04:38 - you're gonna be able to win code cami
04:39 - t-shirt okay so this is super cool does
04:42 - the first time we're trying this out
04:43 - we're actually still trying to try on
04:45 - the studio right now testing
04:46 - experimenting with with a sound with the
04:48 - visuals so please after the stream also
04:52 - submit the feedback survey that's linked
04:57 - on the bottom and before which is the
05:03 - best like that see you later start well
05:05 - that's totally depends yeah and I think
05:11 - one thing that this is something I
05:12 - always wanted to say I love to say to my
05:15 - former students is that it's actually
05:16 - not about which language to to start off
05:19 - with first there's actually saying that
05:21 - you should actually learn five different
05:23 - programming jiz if you really want to
05:27 - improve your self engineering skills
05:30 - because learning one language will help
05:31 - you understand the strengths and
05:33 - weaknesses of other languages okay I'm
05:36 - Becky okay hopefully I answer that
05:38 - question and see in this is something I
05:42 - definitely wanna do later on cuz see me
05:44 - and my friends always say if Wes
05:46 - Anderson the director wrote a language
05:48 - it probably would have been see it just
05:51 - looks very quirky even though some
05:54 - people think it's very verbose but it
05:56 - definitely feels like
05:57 - driving this stick shift muscle car
06:00 - right
06:02 - it takes more lines of code to to to
06:06 - ricey but once you finish it goes really
06:09 - fast cool and let's get started with and
06:14 - that was just on the top ahead so let's
06:17 - get started with the introductory to C++
06:19 - sorry there's two people sitting here
06:21 - that you can't see right now there is
06:23 - Laura my former team lead from the data
06:26 - science path from I da and there's Alice
06:29 - Koontz who's helping out with this shame
06:35 - cool all right so learn C++ so let's do
06:41 - a little brief history of C++ C++ was
06:43 - actually invented in 1979 when a Danish
06:46 - PhD student by the name of bearish rub
06:49 - was tinkering around with the language
06:51 - stimula and stimula is a language used
06:55 - for sting simulations and he really and
06:58 - it was actually the first
06:59 - object-oriented language that ever
07:01 - existed and he really liked it and as he
07:04 - came to the United States to go to work
07:05 - in AT&T Bell Labs he wanted to bring
07:10 - that component the object oriented
07:13 - programming component into the languages
07:15 - seat which is gangs which became
07:16 - becoming super popular in the field and
07:20 - the original name for C++ was Ashley C
07:25 - with classes okay and later on it would
07:29 - be K and C++ because the plus plus is
07:31 - actually the increment operator the +1
07:34 - operator in C and C is still is a
07:39 - language well respected for its
07:40 - flexibility and low-level functionality
07:42 - ok so there's actually if you when we
07:45 - talk about languages there's actually
07:47 - two type of languages one is natural
07:49 - language which is English kanji the way
07:52 - we talk to one another and then there is
07:54 - the machine language assembly code okay
07:58 - and for a computer when we program we
08:02 - actually write in language that's in
08:04 - between these two there are high-level
08:06 - languages and there's middle level
08:08 - languages and C++ is the middle
08:11 - language okay and when you think about
08:13 - right exactly super zero three two two
08:16 - zero eight so Python Java PHP JavaScript
08:20 - are are more higher-level languages they
08:21 - have more object-oriented components
08:23 - they're concise and but they're usually
08:30 - a little slower than and they're usually
08:32 - interpret interpreted but they're
08:35 - usually a little slower than C++ correct
08:40 - we're using OBS and what and just to
08:43 - continue on the lecture what Buuren
08:45 - didn't understand didn't know didn't
08:48 - predict is that c++ became the language
08:51 - became almost the program language it's
08:54 - used everywhere when we were talking
08:55 - about Triple A video games or talk about
08:58 - microcontrollers when we're talking
08:59 - about in bedded systems operating
09:00 - systems and we're talking about just
09:04 - take the stream for example so Alex just
09:07 - posted we're using OBS I forgot what it
09:11 - stands for Alex open broadcast service I
09:17 - believe and this is what people use on
09:18 - strict which on YouTube live OBS was
09:21 - actually written in C C++ when we're
09:24 - talking about browsers so Google Chrome
09:26 - was the core of chrome was actually
09:30 - written in C C++ also and what we're
09:32 - looking at YouTube before YouTube was
09:33 - acquired by Google the video processing
09:36 - component was also was the core almost
09:39 - the core part of YouTube was written in
09:41 - C C++ and also the transcoders and
09:44 - that's the conversion between one wheel
09:46 - out to another right so everything
09:54 - how is
10:00 - thank you so much cool cool cool cool
10:03 - can you increase the volume a little bit
10:06 - I'm missing some information let me see
10:10 - what I can do yeah please want a shirt
10:17 - cool so why didn't this something
10:20 - something that Becky asked in the chat
10:22 - has previously is that you know which
10:26 - language should pick and I actually
10:27 - think it's not about what language to
10:29 - pick I think you just start with a
10:31 - language and a lot of times people think
10:33 - C+ has a lot harder because more of
10:34 - those but if you really want to become a
10:39 - really good self engineer I actually
10:41 - think low lower more lower level
10:44 - languages probably where you should
10:45 - start even that's tougher but after you
10:47 - tackle C++ you can move on to other
10:49 - languages and feels it feels definitely
10:52 - a lot smoother cool and this is a very
10:57 - first exercise of learn C++ BR structure
11:01 - of the creative c++ ashley review this
11:03 - lesson so this is definitely a dream
11:04 - come true he actually is now directing
11:07 - direct the technology director and
11:11 - Morgan Stanley and also a visiting
11:12 - professor at Columbia University and
11:16 - hopefully next episode or the third
11:19 - episode we can bring him right here and
11:21 - he can teach you
11:23 - loops or conditionals in logic okay and
11:29 - don't worry if a lot of these words
11:31 - don't make any sense right now this is
11:36 - totally normal and I think you're gonna
11:39 - feel a lot more confident off this live
11:41 - stream so let's just get started okay
11:43 - and on the code Academy platform we have
11:45 - the text editor right in the middle and
11:47 - this is similar to a Google Doc where
11:51 - you'll be typing your program and as you
11:54 - can't see where my mouse is typing this
11:56 - is a C++ program this is a very first
11:59 - program that you're gonna see in C++ and
12:00 - the name of the file is called hello dot
12:04 - CPP okay and the dot CPP stands for C++
12:10 - and what this program does is actually a
12:13 - very classic program this program is
12:16 - gonna print gonna output the phrase
12:18 - hello world to the terminal and a
12:20 - terminal is this black box on the right
12:21 - later on to show you exactly what is a
12:24 - terminal on your computer
12:26 - so before explain what all this mean it
12:29 - looks very good intimidating if this is
12:30 - the first time you're seeing a language
12:32 - there a lines of eight lines of code
12:34 - before we explain what each of these
12:36 - mean let's just run it real quick to
12:39 - click run and what message appear in the
12:42 - terminal boom hello world great question
12:51 - why not using namespace STD this is
12:53 - something I've been on the fence about
12:55 - for the last week we actually had it
12:58 - originally and we took it off because
12:59 - Bureau Ashley it said he wants the the
13:03 - first thing that people see to be
13:05 - Larssen to be less intimidating out
13:08 - return 0 which which I'm going to talk a
13:10 - little bit later and using namespace STD
13:14 - we're trying to keep the lines shorter
13:17 - for the first first exercise cool high
13:22 - five we just got your first C++ program
13:24 - to run and this is something that a lot
13:27 - of people at lectures don't relate to
13:29 - tackle and don't really cover is that
13:31 - programming languages usually runs line
13:33 - by line from top to bottom okay and here
13:38 - is a structure of the C++ program at the
13:42 - very top we have hash tag include
13:45 - iostream then we have int space main
13:49 - parentheses a curly opening curly
13:54 - bracket and inside your program and a
13:58 - closing closing bracket and in this
14:01 - exercise it actually did not cover what
14:04 - each of these mean but there's an
14:06 - article for that rat for this lesson but
14:08 - since is the last ship I do want to
14:09 - cover go over this little briefly so if
14:13 - you have programs you have seen C before
14:15 - I guess include iostream is to C++ as
14:22 - SCD IOH is to see okay you're probably
14:27 - seeing STD it if we've probably see
14:29 - before
14:29 - it looks like studio but actually means
14:31 - standard input/output and it's a header
14:33 - file and what what this means is that so
14:38 - think of your program as a car right and
14:40 - you need for the car to run you need to
14:45 - have oil right and this is what it is if
14:47 - you want to input or receive if you want
14:50 - to output a receive input for your the
14:53 - program that you're writing you actually
14:54 - have to include this line of code okay
14:57 - io stands for input and output and it
15:01 - has all the built-in input/output
15:03 - functions that you need cool it's a
15:08 - standard C plus IR C functions in it to
15:12 - int main so every program and they were
15:15 - going to write in C++ will have a
15:18 - function called main we actually won't
15:21 - cover function until probably module
15:23 - four module module five I mean but this
15:27 - is actually where your program begins
15:29 - the main function houses your program
15:32 - okay so when we we're going to learn
15:35 - what a compiler is in a bit but once we
15:37 - send this code to the compiler the
15:39 - compiler actually starts executing on
15:43 - right here at line five tool I ate the
15:48 - scribbly bracket just means it's a
15:49 - beginning of the main function and the
15:52 - closing square bracket means it's the
15:53 - end int stands for integer that's just a
15:57 - type for the function right now you
15:59 - don't have to know too much about it
16:00 - that's all less than to the module two
16:04 - so here's where we're going to be
16:06 - focused off between the scribbly by
16:07 - opening Srila bracket and closing square
16:09 - bracket and on the last exercise we sing
16:14 - a hello program where there was
16:15 - something that looks like this
16:17 - STD : come on C out to left arrow and
16:24 - double inside double quotes hello world
16:26 - exclamation mark
16:30 - backwards /n a closing double quotes and
16:34 - a semicolon so this actually looks like
16:36 - a lot of different looks pretty alien
16:37 - looking but we're gonna break it down
16:40 - really quick
16:41 - sed : : see out stamp means character
16:45 - output stream it is pronounced see out
16:48 - and what this does is it will take and
16:52 - there's actually two left errors that
16:55 - follows it and what this does is it
16:57 - takes whatever inside the double quotes
16:59 - after it we print it onto the terminal
17:03 - okay so what are we printing the last
17:06 - exercise we printed the phrase hello
17:08 - world exclamation mark and when we're
17:13 - printing out putting a text we need the
17:15 - double quotes around it the backward
17:19 - slash end is a special character that
17:21 - indicates a newline when we're about
17:23 - putting right now in the first few
17:24 - lessons just add a backward slash end
17:29 - towards the end that means after we
17:31 - printed hello world in the terminal it
17:33 - will start on the very next line and you
17:36 - might have seen this in HTML before and
17:40 - in C++ you need the semicolon to close a
17:44 - statement this is a statement that the
17:46 - program is running and the semicolon
17:50 - tells a computer that you're at the end
17:51 - of the statement okay so let's try this
17:55 - checkpoint let's write the whole sddc
17:58 - out statement from scratch on line 6
17:59 - type the following and press run
18:08 - so SCT so hello Makka 71 so SCD stands
18:12 - for standard library standard Jarek what
18:21 - is the code challenge mentioned the
18:22 - email and how do I do it so this will be
18:23 - towards the end in about 15-20 minutes
18:25 - where I'm going to give you a KO
18:27 - challenge and then you'll post your code
18:29 - on Twitter and we're gonna give five
18:30 - different people a Codecademy t-shirt
18:32 - we're gonna mail it to you fatal error
18:38 - I'll stream no such file directory
18:40 - should or should you not use name Stacy
18:46 - for this I said yeah you can if you want
18:47 - but for this exercise I wouldn't not so
18:49 - su deep : : see out space to letters and
18:55 - here's where we're printing Co Academy
18:58 - there's no a there's there's only one in
19:00 - code Academy and we're gonna add a new
19:02 - line afterwards and then I semicolon hit
19:07 - run and this should turn green
19:16 - cool
19:21 - all right next exercise so we learn how
19:24 - to output on a line with a following
19:26 - code SVD does : : C out and you can
19:30 - actually stack one a studio C House
19:33 - statement on top of another okay so
19:36 - let's say we have this line of code
19:37 - inside our main function these two lines
19:39 - of code it will output hello goodbye on
19:43 - two separate lines so just knowing what
19:46 - we learned just knowing what we learned
19:48 - so far let's try this exercise this
19:52 - checkpoint instead of displaying these
19:55 - two lines of code hellogoodbye on two
19:57 - separate lines edit the code so that we
19:59 - output the following pattern in the
20:00 - terminal exactly how it is and even
20:06 - though the checkpoint says remember you
20:07 - can use the head if you need help don't
20:09 - let don't look at it for now I'm gonna
20:11 - give you guys give you all a minute to
20:13 - work on this and notice the spaces
20:18 - before the one before the two in between
20:21 - the two and three okay
20:38 - okay so post in the chat if you have
20:43 - finished or
20:51 - so just knowing what this thing if you
20:53 - want to if you want to touch this out
20:54 - before we start reading the code click
20:56 - run you'll see hello goodbye up here so
21:00 - instead of displaying these two lines we
21:04 - want to display this output done cool
21:11 - there we go there we go so great job
21:14 - lyrics guys and des can n cool cool very
21:21 - very awesome John Chet doesn't respect
21:24 - the space is no chat so let me just show
21:30 - you if you're having trouble so actually
21:34 - before I show you how to do this if
21:36 - you're still having trouble to take a
21:38 - look at how many lines there are in here
21:41 - they're actually four separate lines
21:43 - right so that so the hint is you might
21:46 - need to use four different standard see
21:49 - how statements for this okay hopefully
21:56 - that helped so people are posting the
21:58 - answers so I'm just going to start so
22:02 - first before we do the spaces let's just
22:05 - put the numbers in I'm gonna write a
22:09 - third line four five six new line we're
22:16 - going to close the statement terminate a
22:18 - statement and let's do a fourth line
22:21 - that c-d-c out seven eight nine ten
22:26 - let's see how that looks
22:32 - cool even this turn green let me fix
22:35 - this so one two three let's just try an
22:39 - air get in there almost let's do two
22:49 - more spaces here let's do here done
23:04 - cool sweet well you just program your
23:10 - first C++ program please and I guess
23:16 - before we move on there's something I
23:19 - always like to talk about in the forever
23:21 - a first very for sure for sure the very
23:26 - very first lecture because I used to be
23:28 - a former and CSS instructor bring back
23:32 - to stash buddy all right I need a so
23:40 - this is actually something I would like
23:41 - to talk about in the very first in the
23:44 - very first lecture in my with my
23:47 - students is that there is no rule
23:50 - there's no grades with code Academy live
23:52 - strings right we're still testing so we
23:53 - want to make this a real thing
23:55 - eventually for everybody and but there
23:59 - is one rule because I will be doing a
24:01 - little bit more streams and that is
24:03 - sometimes in a work environment it can
24:05 - be unwise to show weaknesses but this is
24:08 - more a classroom setting this is more
24:10 - academia meaning that the more that you
24:13 - ask questions the more that you're gonna
24:15 - get out of this ok coding can be very
24:17 - intimidating can be very overwhelming
24:18 - and can be very frustrating but the more
24:22 - that you ask the more that you seek help
24:23 - the more that you're gonna get to where
24:26 - you want to be one rule and that's the
24:29 - only rule for this straight cool so
24:31 - please ask questions please do not go
24:33 - chat I'm very serious about this please
24:35 - do not be afraid to stop me and answer
24:39 - to add some questions cool and you have
24:42 - finished your first C++ program here's a
24:45 - little something I do want to work a
24:47 - little bit later is a C++ cheat sheet
24:52 - actually really like cheat sheets and
24:55 - hopefully one day before Christmas I can
24:58 - knock these out with our problem with
24:59 - our design team and something maybe
25:02 - something you can print out and staple
25:03 - it together
25:04 - once you're done cool
25:10 - very awesome let's go into the second
25:16 - lesson compile and execute me so we've
25:18 - done this with a run button but we
25:22 - actually did the magic for you
25:23 - C++ is actually a compiled language okay
25:26 - so let's go back to the landing page and
25:31 - we're gonna work on the second lesson
25:35 - cool
25:38 - so C++ is actually a compiled language
25:41 - and before this point we actually did
25:45 - all the magic for you and shout out to
25:46 - Mike Hampton who actually work on rotc
25:49 - plus opposed to program the compelling
25:50 - functionality to like code Academy but
25:55 - that's not it to get a c-plus program to
26:00 - run you actually must translate it from
26:02 - a human readable form to something a
26:04 - machine can understand okay and this
26:07 - translation is done by a program called
26:09 - a compiler you might have seen this word
26:11 - heard this word a lot but there are
26:16 - actually four different steps to develop
26:18 - in C++ you write your code you save your
26:22 - code you compile and execute using the
26:24 - terminal and it doesn't matter if you if
26:28 - you ran into errors you actually have to
26:30 - start you have to safe again compile if
26:33 - you again so let's give it a shot a
26:39 - computer can only understand machine
26:41 - code so to a compiled file after you
26:45 - have a HelloWorld program we need to
26:47 - type the new command g + + and the file
26:51 - name in the terminal ok and this is the
26:55 - turmoil
26:58 - and that will translate the Cephas
27:00 - program into something that a computer
27:01 - can understand and after we do so we
27:04 - need to execute that executable code and
27:06 - then you will see the hello world
27:08 - appears so in our checkpoint we just
27:12 - start over from here in our texture we
27:15 - have the hello war program click on the
27:17 - folder icon right here this should only
27:19 - be hello dot CBP inside so compile the
27:23 - hello dot cpp using the terminal so g
27:26 - plus plus hello and the name of the file
27:35 - wait for it cool and now let's click the
27:39 - file icon one more time and inside a new
27:44 - file appeared called a dot out and
27:47 - that's and I didn't mention here that's
27:50 - the it stands for assembler output and
27:53 - this is actually what this assembly code
27:58 - actually the file tab actually changed
28:01 - but this originally originated in 1979
28:04 - in the very first UNIX program written
28:07 - by Dennis Ritchie ok and this is some if
28:12 - you click on this file you'll see some
28:14 - very mysterious alien looking symbol
28:17 - inside and this executable file will
28:23 - then be loaded into computer memory and
28:25 - the computer CPU central processing unit
28:28 - actually executed this program one
28:30 - instruction at a time if we do type in
28:32 - the executed command and you might have
28:34 - heard that uh you know heard the word
28:36 - CPU a bunch of times before and I guess
28:39 - the way to think about is Ram is what
28:41 - you where you store the data CPUs where
28:43 - you manipulate the data ok execute we're
28:50 - gonna execute this code by typing dot
28:54 - slash
28:57 - and the name of the executable thought
28:59 - he'd out there we go
29:02 - hello world cool
29:12 - and g plus plus and aundre g plus plus
29:16 - just stands for canoe plus plus it's the
29:17 - compiler command where we compile a turn
29:20 - or a sequence program and do something a
29:22 - machine can understand okay
29:28 - so in the last exercise we've ran a
29:31 - compiled command but because we didn't
29:35 - give a a tile out in name the default
29:39 - name is just a doll out but a lot of
29:42 - times we actually do want to give the
29:45 - execute of executable file a certificate
29:47 - so we're gonna try this again and this
29:50 - time we're gonna do something a little
29:52 - bit different g plus plus as you can see
29:56 - there's only hello dot cpp here once
29:57 - again g + + space the name of the c plus
30:01 - two program hello dot cpp a little - oh
30:05 - thanks for output we want to name it -
30:07 - and then let's name it hello we're gonna
30:10 - click enter and this compiles a justice
30:14 - exactly the same way as a last success
30:17 - exercise but because we added a little
30:20 - bit more to the compiled command now
30:22 - we're actually giving the a dot out a
30:25 - new name it's called hello ok and now
30:29 - instead of doing dot slash executing a
30:32 - dot out we wanted to execute hello
30:35 - press Enter here we go hello world cool
30:42 - there's just another way to compile
30:43 - execute
30:48 - comments so programming can be very
30:55 - collaborative the audition our code can
30:59 - be very exhausting too when we're
31:02 - writing a but right now we're only
31:04 - writing a lines of code but as we get as
31:06 - our code gets longer sometimes it's
31:09 - really hard to remember what you've
31:10 - written and a lot of times you're
31:12 - working teams so you'll be looking at
31:14 - other people's code so this is where
31:15 - something called comments come in so
31:18 - comments is a code in your sequence
31:20 - program that will be ignored by your
31:23 - compiler and they exist for humans to
31:28 - understand so comments can't explain
31:30 - what the code is doing leaving
31:32 - structures work developers using the
31:34 - code add other useful annotations and
31:37 - two other things I haven't mentioned
31:38 - here is our I'd like to use commas to
31:42 - format my code so I use a bunch of you
31:45 - know to like break my codes into
31:47 - different pieces and commas are great
31:49 - way to debug to find errors your code
31:52 - which we're going to learn hopefully
31:54 - next episode so there are two ways to
31:57 - write C+ book to write comments in C++
31:59 - there is a single line comment and there
32:02 - is a multi-line comment okay and a
32:05 - single line comment is very simple all
32:07 - you need to do is type 2 4 slashes and
32:11 - write anything that you want and
32:12 - anything follows these two forward
32:15 - slashes after the line in that line will
32:19 - be ignored by the compiler so you could
32:20 - say this program outputs the phrase the
32:28 - Harry Potter spell onto the terminal
32:32 - cool and there's something called a
32:37 - multi-line comment which you can use to
32:40 - comment out a bunch of lines of code
32:45 - okay so as you can't see let's run this
32:50 - code again let's try the C++ this time
32:53 - the file name is spelled ah cpp spell
32:57 - dot cpp we didn't rename it so let's do
33:03 - a slash tada oh here we go
33:07 - expecto patronum I think I spelt that
33:10 - right as you can see the comments is not
33:14 - being outputted very cool so now we
33:19 - learned how to do this on code kami I
33:21 - actually do want to show you how you can
33:23 - do this on your computer locally on your
33:24 - computer ok so I'm going to minimize
33:27 - this window yes it is ignored completely
33:34 - by the compiler
33:43 - cool so the black box you can find the
33:53 - black box on computer if you click the
33:55 - search function on your Mac terminal and
34:01 - if you're on Windows it's called command
34:03 - prompt ok so I'm gonna double click it
34:06 - actually I'm going to drag into your
34:08 - dock there's something that we're gonna
34:09 - use a lot so I'm gonna drag down to your
34:10 - dock I'm going to open it and this is
34:15 - the first time you've seen this will we
34:18 - use our computers we like to navigate
34:20 - with our mouse
34:21 - this is hat is actually how you can
34:23 - navigate and also tell the strut the
34:26 - computers what to do using this little
34:29 - box right here ok if you see any movies
34:31 - with hackers typing Harry Potter
34:35 - reference this is cool if you're seeing
34:37 - any movies or TV shows with hackers or
34:39 - seeing like a black box with creating
34:43 - commands appearing constantly this is
34:46 - what it is terminal ok and I'm going to
34:53 - create a hello world file on your local
34:56 - computer so you can use any text editor
34:58 - that you want here I have atom so I'm
35:00 - gonna open atom now a type the hello
35:05 - world program
35:05 - hashtag include iostream int main
35:14 - opening and closing and I type that STD
35:21 - Comaneci d : : C out hello
35:29 - world cool
35:44 - okay and now I'm going to save it this
35:47 - file and you can be on TextEdit you can
35:50 - be on e any text editor I'm gonna seem
35:53 - to desktop I'm gonna call this file
35:54 - hello dot CPP cool here we have it
36:03 - hello dot CPP right on our desktop as
36:10 - you can see Adam recognized it's a C++
36:13 - program so the color syntax appears so
36:18 - now we have this file we're gonna use
36:20 - the terminal to compile and execute it
36:24 - but before we can do that we actually
36:26 - need to navigate into our desktop folder
36:30 - right and here we have the path where we
36:33 - are right now and in your terminal you
36:35 - can type LS command list now shows you
36:39 - all the different directories all the
36:40 - different folders in that folder that
36:43 - we're in right now and we're gonna
36:44 - navigate into the Desktop folder by
36:47 - typing the command CD which stands for
36:49 - change directory space the folder name
36:53 - which is desktop just so you can see the
36:56 - path changed a little bit and now we are
37:00 - going to see what's in the Desktop
37:04 - folder when I do LS one more time
37:06 - there's actually only one file in there
37:08 - right now it's hello dot CPP so here is
37:12 - where the compiled a few part come in
37:15 - we're going to compile this code G plus
37:18 - plus hello dot CPP enter and now as you
37:25 - can see a new file appeared the
37:27 - executable file appear on your desktop
37:29 - looks pretty fancy
37:33 - and remember this is code that we ballin
37:35 - or be able to understand this little
37:37 - language that machine can understand and
37:40 - now we're gonna execute that dot slash
37:43 - four slash a dot out hello world appear
37:51 - in our terminal cool
38:11 - so not all Macs have can you installed a
38:14 - bowl automatically sometimes if you
38:17 - tried the G + + command you might see a
38:19 - new window that appears that says do you
38:20 - want to install do you want update Xcode
38:22 - and you have to click yes and then there
38:27 - will be a license agreement click YES on
38:28 - that and then it should work after that
38:31 - cool all right so now we've done these
38:41 - two things we learned hello world
38:45 - program we learn how to compile excute
38:47 - on the code Academy and locally here is
38:51 - a code challenge ok I'm going to go back
38:58 - to our C++ course
39:22 - okay so now we're gonna do our ko
39:26 - challenge where you will be able to win
39:28 - five code capping t-shirts this is the
39:31 - part I'm really excited about if you
39:34 - have Pro that you can get into this if
39:36 - not you can just follow along on your on
39:41 - the live stream and just FYI
39:45 - it looks pretty short right now they're
39:47 - only two modules but module three is
39:48 - coming on Monday and module four will be
39:51 - coming out the following Monday so
39:53 - they're gonna be a lot more content
39:54 - coming out so in this code challenge
39:58 - okay in this specific Pro project we're
40:01 - gonna write a C+ program called initial
40:03 - CPP that displays the initials your name
40:06 - and block letters as shown and what are
40:10 - we building this project and if that
40:12 - didn't make any sense so my initials are
40:14 - s and L so your program my program
40:18 - should output my initials and block
40:21 - letters cool and this is simply if
40:28 - you've seen a skier before this is very
40:30 - similar to that and to get started with
40:35 - this project let's first write a comment
40:37 - with a fun fact about yourself okay
40:40 - remember you can write a fun fat you can
40:42 - write a single line comment or
40:43 - multi-line comment
40:44 - let's say the like comment using two
40:46 - forward slashes fun fact
40:50 - something-something and that makes it a
40:53 - comment a single line comment
40:59 - and then we're going to include the
41:01 - header file I'll stream input output
41:03 - stream remember this is the standard
41:09 - library where it has the built-in input
41:12 - and output function functions okay and
41:16 - we're going to add a main function int
41:18 - main open parenthesis closing
41:20 - parentheses open curly bracket close
41:24 - bracket remember this is where your
41:27 - program Ashley runs this is where a
41:30 - house is all your your actual program
41:36 - okay
41:40 - and now you're going to use multiple STD
41:44 - TV : CL statements so that you can
41:50 - output your first initial and then your
41:54 - second initial so for mine start get
41:59 - started
42:04 - let's took it if you want to take a look
42:06 - at all the alphabets it's in this hint
42:07 - right here and this is something I do
42:10 - want to talk a little bit about so a lot
42:11 - of people have taken a look at the bug
42:14 - reports and I've seen a lot of people a
42:20 - lot of learners not quite understanding
42:23 - what the projects are on code Academy so
42:26 - the projects on code camp is where you
42:28 - kind of let go of the rope and you got
42:31 - the more you have the freedom to explore
42:32 - a bit on your own
42:35 - instead of having checkpoints where it's
42:37 - automatically checks for you give you an
42:39 - error message leaves you the way this is
42:41 - more open-ended you can actually check
42:43 - these tasks off by yourself so as you're
42:48 - going along the projects on code cam you
42:50 - should definitely be doing a little bit
42:51 - more playing around with your code see
42:56 - what breaks what doesn't what doesn't
42:57 - try out different outputs even though we
43:01 - design our projects to be our curriculum
43:03 - to be very bite-sized progress where you
43:06 - should not it's actually not about speed
43:08 - you actually should take the time to
43:09 - explore to really try out different
43:12 - options with your code cool so I'm going
43:16 - to try to display I'll put this code
43:21 - it's on the very first live triple asses
43:27 - and remember there is a new line let's
43:31 - try another one
43:32 - actually they'll just copy this code
43:35 - and paste it one two three four five six
43:39 - seven seven times cool
43:50 - and then we're gonna
43:54 - give this a shot let's see if I can get
43:57 - this on my first try
44:11 - I think I got it save compile
44:15 - G + + and initials - CPP this is the
44:20 - name of the file
44:25 - whoops so I so here here I got an error
44:28 - message initial Daisuke no such file
44:30 - directory so ice actually spelled the
44:33 - name wrong g+ + initials there's a s in
44:36 - there so you can see you in a file name
44:38 - enter whoops you know two plus signs
44:44 - there we go execute the executable code
44:47 - dot slash and as you can see there
44:50 - should be a dial in here enter there we
44:53 - go I got it cool so now here's a co
45:02 - challenge ok
45:06 - instead of doing what I've done doing
45:11 - the outputting the s in here the KO
45:16 - challenge will be in the next week
45:17 - you'll have the chance to output
45:20 - anything that you want and ask er YMCA
45:25 - Oh H dot IO anything that you want and
45:29 - if you post this code on Twitter and at
45:32 - me at code Academy at Sonny num nom
45:34 - justified to it I just add code Academy
45:38 - I'll find it just by coming is important
45:45 - and we'll pick five winners it doesn't
45:50 - have to be fancy and if we like your
45:53 - code we'll post it into our github repo
45:56 - for other learners to see forever
46:04 - cool
46:06 - so seven days
46:22 - commenting Coco
46:28 - so I think that's all I got for today I
46:31 - can't stay to the chat for a little bit
46:35 - yes that's my turn Mary go you finished
46:41 - the challenge of cool send it to us love
46:43 - to see it and we're gonna do more this
46:45 - one is really tough to build a project
46:47 - just on outputting and make it super fun
46:53 - so I definitely have troubled there but
46:55 - uh that's the challenge yes yes so it's
46:58 - not too difficult the next time we do a
47:00 - challenge it's gonna be the difficulty
47:02 - level it's gonna gonna increase a little
47:03 - bit so the first one is a freebie cut
47:05 - it's kind of like a freebie okay for the
47:11 - next and the next one there's gonna be a
47:15 - time component to it so there's gonna be
47:17 - a speed coding contest so I still don't
47:22 - get C++ well what do you not get
47:30 - watch tagging idea watch to get idea and
47:40 - do Ingo this is your time to ask
47:42 - questions I think I'm pretty much done
47:45 - with the stream but please let me know
47:49 - if you have any questions what does the
47:54 - terminal do so terminal is on your
47:55 - computer we actually have a emulator
47:58 - version our platform but it basically
48:00 - you can tell the computer what to do
48:02 - instead of clicking you know moving this
48:05 - file into let's say I make a folder
48:07 - called blah and I want to move this file
48:11 - into blah I'm using the mouse to
48:14 - navigate I'm using a mouse to do the
48:15 - command moving this file into another
48:18 - folder into a folder but you can also do
48:20 - that with the terminal you can instruct
48:23 - you can give computer commands pointers
48:28 - where the fun comes yes I'm still on the
48:31 - fence about whether or not we should do
48:33 - raw pointers so this actually very
48:36 - interesting thing with with C++ so be
48:40 - honest rubbish forego C++ but in 1998
48:43 - they're starting to do a standards for
48:45 - C++ and the last three were C++ 11 14
48:52 - and 17 and if you've been following the
48:56 - per question
48:58 - the newer improved implementation of C++
49:01 - there was a confluence calcdp con
49:03 - earlier this year where they actually
49:05 - talked about they might deprecated the
49:07 - more older not smart pointers
49:19 - Coco yes so there will be more shapes
49:22 - now just aa c+ fill my everything
49:23 - hopefully and hopefully the next one the
49:28 - Creator C++ can join us or the next next
49:31 - one we should definitely do a lecture I
49:32 - do really want to do a livestream where
49:33 - we do an interview you know what if you
49:38 - have one thing you wish you change and
49:40 - the original implementation of C++ the
49:43 - really crazy thing is that there are
49:44 - things with functions and modules that
49:46 - he wrote about way back 20 years 30
49:48 - years late ago
49:49 - they're finally implementing in C++
49:52 - twine that's about it come out what's
49:55 - the best editor so there are a couple
49:57 - that people use I think right now our
50:00 - coach is really liking Visual Studio
50:02 - code when I first started writing C++ it
50:09 - was a Emacs write notepad plus plus yes
50:13 - that's another classic and later on I
50:18 - start using Visual Studio and there's a
50:22 - free version I use both ID and editor
50:31 - what what's so funny Oh where's Patrick
50:35 - Emacs yes there we go how do you code an
50:45 - app so this is the tough and C++ a cool
50:48 - cool so this is definitely something I
50:49 - want to attack a little bit later on
50:50 - whether it was SDO or I really want to
50:55 - build games with C++ on code Academy
51:01 - right and there are actually a lot of my
51:03 - apps that you might have know it's built
51:05 - with C++ like Adobe Photoshop Adobe
51:08 - Illustrator
51:16 - right kukuku
51:21 - what is the name of the c+ ID they're a
51:24 - couple so Microsoft yes let us build yes
51:28 - so Microsoft has one C++ for program
51:38 - machines or is there more to it
51:40 - program machines so yes so C plus y is a
51:43 - programming just for not sure if I quite
51:49 - understand that questions so sure if you
51:51 - tell my machines like giving instruction
51:55 - to a machine to the computer so and you
51:57 - know Triple A games Bettis systems
52:00 - microcontrollers browsers operates this
52:04 - stuff right
52:12 - yes so Jeb brain is something that's
52:14 - been I've been hearing a lot about
52:16 - Ashleigh I haven't used I've seen people
52:18 - use it for Ruby for other things I do
52:23 - want to give it a shot
52:32 - cool and also I just want to say that
52:34 - there are a lot of other things that
52:36 - we're working on as well that we just
52:39 - released so natural language processing
52:41 - we also released technical whiteboarding
52:45 - machine learning introduction to
52:48 - blockchain oh right
52:50 - Bitcoin was written as c plus CC plus my
52:53 - favorite video game dota 2 was written
52:55 - in C C++ and and another thing with cool
53:04 - about a code of chemists reducing C++ is
53:07 - that it opens up it opens up a lot of
53:09 - doors whether it's out do we know
53:13 - whether it's somebody says what dota2
53:21 - yes it's open source you should check it
53:23 - out if you want to make a buy if you
53:24 - want to you should file you should yeah
53:28 - it's open so you can take a look at the
53:29 - code Ashley made this is back in 2014
53:33 - Ashley was what's working on a team at
53:37 - yeah we're C++ day enough for it for the
53:40 - the box this is before opening I started
53:45 - tackling dota do we know right Algeria
53:52 - so yeah right so introducing C++ allows
53:54 - us to tackle you know so do we know any
53:57 - sort of microcontrollers C C++ low lower
54:01 - functionality of C++ really comes in
54:03 - handy
54:04 - and that's what the other you know if
54:06 - you if you ever program boundary no
54:08 - that's what it is and also mobile
54:13 - programming hopefully game development
54:16 - hopefully 2019
54:26 - yes yes so games yes C++ because it's
54:30 - blazingly fast love pretty much all the
54:33 - Triple A games are written in C++ in GE
54:39 - oh so that's an interesting question we
54:40 - actually have not there's something I've
54:44 - been thinking a lot about is how to
54:45 - introduce games with C++ currently our
54:49 - platform does not support that but I
54:51 - think in q1 quarter one this is where I
54:53 - really want to spend some time on how to
54:56 - and I and I think so so Tim another
54:59 - fellow Kirkman developer actually
55:00 - suggested OpenGL two so there's
55:02 - something we're definitely going to look
55:03 - into and here's another thing that's not
55:12 - pretty pretty yeah still pretty pretty
55:22 - pretty crazy that we actually so sleep
55:24 - us was our number one we've conducted
55:26 - numerous service over the last year and
55:29 - C++ actually the number has been the
55:32 - number one and pretty much all the
55:34 - surveys and so we started building it I
55:38 - remember a year and a half ago when I
55:40 - first interviewed at code Academy I
55:43 - named C + C C++ the language that I want
55:48 - to write so this is super cool and also
55:54 - guys and girls please please give me
55:59 - some feedback I just went through the
56:03 - first lesson there is lesson 2 compiled
56:05 - execute oh I'm sorry
56:07 - variables there are three projects in
56:11 - that conditional logics coming out next
56:13 - Monday with additional three projects an
56:16 - article and possibly a debugging
56:18 - mini-lesson and folly Monday December
56:22 - 17th we're going to release module for
56:24 - loops so please
56:30 - yes give sunny feedback on the stream in
56:33 - that dock but also send your feedback on
56:37 - the course at Sunny s ony at code
56:41 - Academy calm my Billie's I have one
56:46 - space invader yes
56:56 - I could hear you golfing your coffee I
57:00 - was so sorry yeah that maybe next time
57:02 - I'm pretty nervous so I've been a class
57:04 - of teacher for two and a half years
57:05 - before joining code Academy taught at
57:07 - Columbia Lehman College did a couple
57:09 - recitations and why you but this is very
57:12 - different this is you know I like
57:13 - feeding off the energy of the room I
57:15 - like getting people the student is
57:17 - excited I like when people's eyes you
57:19 - know lit light up so this is definitely
57:21 - a little weird
57:21 - some been pretty nervous the very this
57:25 - this time because this almost feels like
57:27 - I know you're there
57:29 - but also feels like a losin but
57:36 - hopefully next time I like I there's
57:39 - there's been a lot of things this week
57:41 - up still knocking up bugs for C++ so
57:43 - wasn't totally ready for this last shame
57:46 - but episode 2 I'm good cool everybody
57:49 - thank you so much for watching check out
57:54 - come back next week for either p5.js or
57:57 - a second episode of learn C++
58:06 - cool and Alex how did I end the stream
58:15 - see you see you send me email

Cleaned transcript:

I just clicked it's not showing up though hello everybody and we are live at code Academy HQ in the heart of Soho welcome to the very very first episode of getting started with C++ my name is sunny and I'm a curriculum developer here at code Academy if you have taken learn sequel learn C from scratch where she learning fundamentals data science path then you probably have seen my work before and today hello everybody hello everybody hello chat and today I'm super super super excited to announce that we finally released our learn C++ course I start waiting for people to jump into chat jump in the stream I can ramble a little bit about hello Nonya the loading bar is off bounds house can you look into that cool okay let me cool and over the last three days over 43,000 actually then we run the query one more time over 43,000 122 people distinct learners have came in to learn C++ and this is really mindboggling to me because doing my interview here a year and a half ago I listed C C++ won't the languages I really want to Bill here so it's definitely a dream come true and even though I'd love to say this is all me we had ton of people help out with this course the subreddit learned programming Jer lingo from Cali who worked on all the are illustrations in this course Chris show amar seniors senior engineers actually reviewed this course Alberto our product designer on his second day he actually learned he learned C++ day in college for four years and he reviewed this course this live stream I want to teach you the very instructor e parts of C++ but also this is kind of a twoway street where what I'm hoping for towards the end is that you'll give me some feedback I'm gonna give you my email so you can take this course and let me know what you think if there's any ways to be stronger with the course I'm open to all feedback so this specific stream is actually meant for beginners okay whether you are a computer science major about to about to study C++ next semester in the spring semester whether your professional trying to career or trying to pick up a new language this is the perfect place for that if you are looking for more advanced topics we will be doing more streams so this is a very first episode and in this live stream we're gonna do a couple of different things so first we're going to go over a pretty highlevel introductory brief history of C++ and then we're gonna dive right into write your first C++ programs and two and three we're gonna compile and execute go through the second lesson in learn C++ and third we're gonna do I'm gonna show you how to run C++ Clio a computer I'm so hey mr. good pals hollows is episode I'm thinking about 30 minutes 20 to 30 minutes it should be pretty brief Gigi there we go well you click cover seve csharp mercs because buzz no so for this livestream were just covering C++ I'm actually really left the language see there's actually my first language well C C++ can we use Visual Studio to run C+ it yes you can there's actually a video that we work 12 hour coaches worked on that shows you exactly how to download Visual Studio how to Bill you're supposed to program and that will be in the third article cool and also I just want to say here's a really fun part at the very end of the stream there will be a CO challenge where you're going to be able to win well five of you're gonna be able to win code cami tshirt okay so this is super cool does the first time we're trying this out we're actually still trying to try on the studio right now testing experimenting with with a sound with the visuals so please after the stream also submit the feedback survey that's linked on the bottom and before which is the best like that see you later start well that's totally depends yeah and I think one thing that this is something I always wanted to say I love to say to my former students is that it's actually not about which language to to start off with first there's actually saying that you should actually learn five different programming jiz if you really want to improve your self engineering skills because learning one language will help you understand the strengths and weaknesses of other languages okay I'm Becky okay hopefully I answer that question and see in this is something I definitely wanna do later on cuz see me and my friends always say if Wes Anderson the director wrote a language it probably would have been see it just looks very quirky even though some people think it's very verbose but it definitely feels like driving this stick shift muscle car right it takes more lines of code to to to ricey but once you finish it goes really fast cool and let's get started with and that was just on the top ahead so let's get started with the introductory to C++ sorry there's two people sitting here that you can't see right now there is Laura my former team lead from the data science path from I da and there's Alice Koontz who's helping out with this shame cool all right so learn C++ so let's do a little brief history of C++ C++ was actually invented in 1979 when a Danish PhD student by the name of bearish rub was tinkering around with the language stimula and stimula is a language used for sting simulations and he really and it was actually the first objectoriented language that ever existed and he really liked it and as he came to the United States to go to work in AT&T Bell Labs he wanted to bring that component the object oriented programming component into the languages seat which is gangs which became becoming super popular in the field and the original name for C++ was Ashley C with classes okay and later on it would be K and C++ because the plus plus is actually the increment operator the +1 operator in C and C is still is a language well respected for its flexibility and lowlevel functionality ok so there's actually if you when we talk about languages there's actually two type of languages one is natural language which is English kanji the way we talk to one another and then there is the machine language assembly code okay and for a computer when we program we actually write in language that's in between these two there are highlevel languages and there's middle level languages and C++ is the middle language okay and when you think about right exactly super zero three two two zero eight so Python Java PHP JavaScript are are more higherlevel languages they have more objectoriented components they're concise and but they're usually a little slower than and they're usually interpret interpreted but they're usually a little slower than C++ correct we're using OBS and what and just to continue on the lecture what Buuren didn't understand didn't know didn't predict is that c++ became the language became almost the program language it's used everywhere when we were talking about Triple A video games or talk about microcontrollers when we're talking about in bedded systems operating systems and we're talking about just take the stream for example so Alex just posted we're using OBS I forgot what it stands for Alex open broadcast service I believe and this is what people use on strict which on YouTube live OBS was actually written in C C++ when we're talking about browsers so Google Chrome was the core of chrome was actually written in C C++ also and what we're looking at YouTube before YouTube was acquired by Google the video processing component was also was the core almost the core part of YouTube was written in C C++ and also the transcoders and that's the conversion between one wheel out to another right so everything how is thank you so much cool cool cool cool can you increase the volume a little bit I'm missing some information let me see what I can do yeah please want a shirt cool so why didn't this something something that Becky asked in the chat has previously is that you know which language should pick and I actually think it's not about what language to pick I think you just start with a language and a lot of times people think C+ has a lot harder because more of those but if you really want to become a really good self engineer I actually think low lower more lower level languages probably where you should start even that's tougher but after you tackle C++ you can move on to other languages and feels it feels definitely a lot smoother cool and this is a very first exercise of learn C++ BR structure of the creative c++ ashley review this lesson so this is definitely a dream come true he actually is now directing direct the technology director and Morgan Stanley and also a visiting professor at Columbia University and hopefully next episode or the third episode we can bring him right here and he can teach you loops or conditionals in logic okay and don't worry if a lot of these words don't make any sense right now this is totally normal and I think you're gonna feel a lot more confident off this live stream so let's just get started okay and on the code Academy platform we have the text editor right in the middle and this is similar to a Google Doc where you'll be typing your program and as you can't see where my mouse is typing this is a C++ program this is a very first program that you're gonna see in C++ and the name of the file is called hello dot CPP okay and the dot CPP stands for C++ and what this program does is actually a very classic program this program is gonna print gonna output the phrase hello world to the terminal and a terminal is this black box on the right later on to show you exactly what is a terminal on your computer so before explain what all this mean it looks very good intimidating if this is the first time you're seeing a language there a lines of eight lines of code before we explain what each of these mean let's just run it real quick to click run and what message appear in the terminal boom hello world great question why not using namespace STD this is something I've been on the fence about for the last week we actually had it originally and we took it off because Bureau Ashley it said he wants the the first thing that people see to be Larssen to be less intimidating out return 0 which which I'm going to talk a little bit later and using namespace STD we're trying to keep the lines shorter for the first first exercise cool high five we just got your first C++ program to run and this is something that a lot of people at lectures don't relate to tackle and don't really cover is that programming languages usually runs line by line from top to bottom okay and here is a structure of the C++ program at the very top we have hash tag include iostream then we have int space main parentheses a curly opening curly bracket and inside your program and a closing closing bracket and in this exercise it actually did not cover what each of these mean but there's an article for that rat for this lesson but since is the last ship I do want to cover go over this little briefly so if you have programs you have seen C before I guess include iostream is to C++ as SCD IOH is to see okay you're probably seeing STD it if we've probably see before it looks like studio but actually means standard input/output and it's a header file and what what this means is that so think of your program as a car right and you need for the car to run you need to have oil right and this is what it is if you want to input or receive if you want to output a receive input for your the program that you're writing you actually have to include this line of code okay io stands for input and output and it has all the builtin input/output functions that you need cool it's a standard C plus IR C functions in it to int main so every program and they were going to write in C++ will have a function called main we actually won't cover function until probably module four module module five I mean but this is actually where your program begins the main function houses your program okay so when we we're going to learn what a compiler is in a bit but once we send this code to the compiler the compiler actually starts executing on right here at line five tool I ate the scribbly bracket just means it's a beginning of the main function and the closing square bracket means it's the end int stands for integer that's just a type for the function right now you don't have to know too much about it that's all less than to the module two so here's where we're going to be focused off between the scribbly by opening Srila bracket and closing square bracket and on the last exercise we sing a hello program where there was something that looks like this STD come on C out to left arrow and double inside double quotes hello world exclamation mark backwards /n a closing double quotes and a semicolon so this actually looks like a lot of different looks pretty alien looking but we're gonna break it down really quick sed see out stamp means character output stream it is pronounced see out and what this does is it will take and there's actually two left errors that follows it and what this does is it takes whatever inside the double quotes after it we print it onto the terminal okay so what are we printing the last exercise we printed the phrase hello world exclamation mark and when we're printing out putting a text we need the double quotes around it the backward slash end is a special character that indicates a newline when we're about putting right now in the first few lessons just add a backward slash end towards the end that means after we printed hello world in the terminal it will start on the very next line and you might have seen this in HTML before and in C++ you need the semicolon to close a statement this is a statement that the program is running and the semicolon tells a computer that you're at the end of the statement okay so let's try this checkpoint let's write the whole sddc out statement from scratch on line 6 type the following and press run so SCT so hello Makka 71 so SCD stands for standard library standard Jarek what is the code challenge mentioned the email and how do I do it so this will be towards the end in about 1520 minutes where I'm going to give you a KO challenge and then you'll post your code on Twitter and we're gonna give five different people a Codecademy tshirt we're gonna mail it to you fatal error I'll stream no such file directory should or should you not use name Stacy for this I said yeah you can if you want but for this exercise I wouldn't not so su deep see out space to letters and here's where we're printing Co Academy there's no a there's there's only one in code Academy and we're gonna add a new line afterwards and then I semicolon hit run and this should turn green cool all right next exercise so we learn how to output on a line with a following code SVD does C out and you can actually stack one a studio C House statement on top of another okay so let's say we have this line of code inside our main function these two lines of code it will output hello goodbye on two separate lines so just knowing what we learned just knowing what we learned so far let's try this exercise this checkpoint instead of displaying these two lines of code hellogoodbye on two separate lines edit the code so that we output the following pattern in the terminal exactly how it is and even though the checkpoint says remember you can use the head if you need help don't let don't look at it for now I'm gonna give you guys give you all a minute to work on this and notice the spaces before the one before the two in between the two and three okay okay so post in the chat if you have finished or so just knowing what this thing if you want to if you want to touch this out before we start reading the code click run you'll see hello goodbye up here so instead of displaying these two lines we want to display this output done cool there we go there we go so great job lyrics guys and des can n cool cool very very awesome John Chet doesn't respect the space is no chat so let me just show you if you're having trouble so actually before I show you how to do this if you're still having trouble to take a look at how many lines there are in here they're actually four separate lines right so that so the hint is you might need to use four different standard see how statements for this okay hopefully that helped so people are posting the answers so I'm just going to start so first before we do the spaces let's just put the numbers in I'm gonna write a third line four five six new line we're going to close the statement terminate a statement and let's do a fourth line that cdc out seven eight nine ten let's see how that looks cool even this turn green let me fix this so one two three let's just try an air get in there almost let's do two more spaces here let's do here done cool sweet well you just program your first C++ program please and I guess before we move on there's something I always like to talk about in the forever a first very for sure for sure the very very first lecture because I used to be a former and CSS instructor bring back to stash buddy all right I need a so this is actually something I would like to talk about in the very first in the very first lecture in my with my students is that there is no rule there's no grades with code Academy live strings right we're still testing so we want to make this a real thing eventually for everybody and but there is one rule because I will be doing a little bit more streams and that is sometimes in a work environment it can be unwise to show weaknesses but this is more a classroom setting this is more academia meaning that the more that you ask questions the more that you're gonna get out of this ok coding can be very intimidating can be very overwhelming and can be very frustrating but the more that you ask the more that you seek help the more that you're gonna get to where you want to be one rule and that's the only rule for this straight cool so please ask questions please do not go chat I'm very serious about this please do not be afraid to stop me and answer to add some questions cool and you have finished your first C++ program here's a little something I do want to work a little bit later is a C++ cheat sheet actually really like cheat sheets and hopefully one day before Christmas I can knock these out with our problem with our design team and something maybe something you can print out and staple it together once you're done cool very awesome let's go into the second lesson compile and execute me so we've done this with a run button but we actually did the magic for you C++ is actually a compiled language okay so let's go back to the landing page and we're gonna work on the second lesson cool so C++ is actually a compiled language and before this point we actually did all the magic for you and shout out to Mike Hampton who actually work on rotc plus opposed to program the compelling functionality to like code Academy but that's not it to get a cplus program to run you actually must translate it from a human readable form to something a machine can understand okay and this translation is done by a program called a compiler you might have seen this word heard this word a lot but there are actually four different steps to develop in C++ you write your code you save your code you compile and execute using the terminal and it doesn't matter if you if you ran into errors you actually have to start you have to safe again compile if you again so let's give it a shot a computer can only understand machine code so to a compiled file after you have a HelloWorld program we need to type the new command g + + and the file name in the terminal ok and this is the turmoil and that will translate the Cephas program into something that a computer can understand and after we do so we need to execute that executable code and then you will see the hello world appears so in our checkpoint we just start over from here in our texture we have the hello war program click on the folder icon right here this should only be hello dot CBP inside so compile the hello dot cpp using the terminal so g plus plus hello and the name of the file wait for it cool and now let's click the file icon one more time and inside a new file appeared called a dot out and that's and I didn't mention here that's the it stands for assembler output and this is actually what this assembly code actually the file tab actually changed but this originally originated in 1979 in the very first UNIX program written by Dennis Ritchie ok and this is some if you click on this file you'll see some very mysterious alien looking symbol inside and this executable file will then be loaded into computer memory and the computer CPU central processing unit actually executed this program one instruction at a time if we do type in the executed command and you might have heard that uh you know heard the word CPU a bunch of times before and I guess the way to think about is Ram is what you where you store the data CPUs where you manipulate the data ok execute we're gonna execute this code by typing dot slash and the name of the executable thought he'd out there we go hello world cool and g plus plus and aundre g plus plus just stands for canoe plus plus it's the compiler command where we compile a turn or a sequence program and do something a machine can understand okay so in the last exercise we've ran a compiled command but because we didn't give a a tile out in name the default name is just a doll out but a lot of times we actually do want to give the execute of executable file a certificate so we're gonna try this again and this time we're gonna do something a little bit different g plus plus as you can see there's only hello dot cpp here once again g + + space the name of the c plus two program hello dot cpp a little oh thanks for output we want to name it and then let's name it hello we're gonna click enter and this compiles a justice exactly the same way as a last success exercise but because we added a little bit more to the compiled command now we're actually giving the a dot out a new name it's called hello ok and now instead of doing dot slash executing a dot out we wanted to execute hello press Enter here we go hello world cool there's just another way to compile execute comments so programming can be very collaborative the audition our code can be very exhausting too when we're writing a but right now we're only writing a lines of code but as we get as our code gets longer sometimes it's really hard to remember what you've written and a lot of times you're working teams so you'll be looking at other people's code so this is where something called comments come in so comments is a code in your sequence program that will be ignored by your compiler and they exist for humans to understand so comments can't explain what the code is doing leaving structures work developers using the code add other useful annotations and two other things I haven't mentioned here is our I'd like to use commas to format my code so I use a bunch of you know to like break my codes into different pieces and commas are great way to debug to find errors your code which we're going to learn hopefully next episode so there are two ways to write C+ book to write comments in C++ there is a single line comment and there is a multiline comment okay and a single line comment is very simple all you need to do is type 2 4 slashes and write anything that you want and anything follows these two forward slashes after the line in that line will be ignored by the compiler so you could say this program outputs the phrase the Harry Potter spell onto the terminal cool and there's something called a multiline comment which you can use to comment out a bunch of lines of code okay so as you can't see let's run this code again let's try the C++ this time the file name is spelled ah cpp spell dot cpp we didn't rename it so let's do a slash tada oh here we go expecto patronum I think I spelt that right as you can see the comments is not being outputted very cool so now we learned how to do this on code kami I actually do want to show you how you can do this on your computer locally on your computer ok so I'm going to minimize this window yes it is ignored completely by the compiler cool so the black box you can find the black box on computer if you click the search function on your Mac terminal and if you're on Windows it's called command prompt ok so I'm gonna double click it actually I'm going to drag into your dock there's something that we're gonna use a lot so I'm gonna drag down to your dock I'm going to open it and this is the first time you've seen this will we use our computers we like to navigate with our mouse this is hat is actually how you can navigate and also tell the strut the computers what to do using this little box right here ok if you see any movies with hackers typing Harry Potter reference this is cool if you're seeing any movies or TV shows with hackers or seeing like a black box with creating commands appearing constantly this is what it is terminal ok and I'm going to create a hello world file on your local computer so you can use any text editor that you want here I have atom so I'm gonna open atom now a type the hello world program hashtag include iostream int main opening and closing and I type that STD Comaneci d C out hello world cool okay and now I'm going to save it this file and you can be on TextEdit you can be on e any text editor I'm gonna seem to desktop I'm gonna call this file hello dot CPP cool here we have it hello dot CPP right on our desktop as you can see Adam recognized it's a C++ program so the color syntax appears so now we have this file we're gonna use the terminal to compile and execute it but before we can do that we actually need to navigate into our desktop folder right and here we have the path where we are right now and in your terminal you can type LS command list now shows you all the different directories all the different folders in that folder that we're in right now and we're gonna navigate into the Desktop folder by typing the command CD which stands for change directory space the folder name which is desktop just so you can see the path changed a little bit and now we are going to see what's in the Desktop folder when I do LS one more time there's actually only one file in there right now it's hello dot CPP so here is where the compiled a few part come in we're going to compile this code G plus plus hello dot CPP enter and now as you can see a new file appeared the executable file appear on your desktop looks pretty fancy and remember this is code that we ballin or be able to understand this little language that machine can understand and now we're gonna execute that dot slash four slash a dot out hello world appear in our terminal cool so not all Macs have can you installed a bowl automatically sometimes if you tried the G + + command you might see a new window that appears that says do you want to install do you want update Xcode and you have to click yes and then there will be a license agreement click YES on that and then it should work after that cool all right so now we've done these two things we learned hello world program we learn how to compile excute on the code Academy and locally here is a code challenge ok I'm going to go back to our C++ course okay so now we're gonna do our ko challenge where you will be able to win five code capping tshirts this is the part I'm really excited about if you have Pro that you can get into this if not you can just follow along on your on the live stream and just FYI it looks pretty short right now they're only two modules but module three is coming on Monday and module four will be coming out the following Monday so they're gonna be a lot more content coming out so in this code challenge okay in this specific Pro project we're gonna write a C+ program called initial CPP that displays the initials your name and block letters as shown and what are we building this project and if that didn't make any sense so my initials are s and L so your program my program should output my initials and block letters cool and this is simply if you've seen a skier before this is very similar to that and to get started with this project let's first write a comment with a fun fact about yourself okay remember you can write a fun fat you can write a single line comment or multiline comment let's say the like comment using two forward slashes fun fact somethingsomething and that makes it a comment a single line comment and then we're going to include the header file I'll stream input output stream remember this is the standard library where it has the builtin input and output function functions okay and we're going to add a main function int main open parenthesis closing parentheses open curly bracket close bracket remember this is where your program Ashley runs this is where a house is all your your actual program okay and now you're going to use multiple STD TV CL statements so that you can output your first initial and then your second initial so for mine start get started let's took it if you want to take a look at all the alphabets it's in this hint right here and this is something I do want to talk a little bit about so a lot of people have taken a look at the bug reports and I've seen a lot of people a lot of learners not quite understanding what the projects are on code Academy so the projects on code camp is where you kind of let go of the rope and you got the more you have the freedom to explore a bit on your own instead of having checkpoints where it's automatically checks for you give you an error message leaves you the way this is more openended you can actually check these tasks off by yourself so as you're going along the projects on code cam you should definitely be doing a little bit more playing around with your code see what breaks what doesn't what doesn't try out different outputs even though we design our projects to be our curriculum to be very bitesized progress where you should not it's actually not about speed you actually should take the time to explore to really try out different options with your code cool so I'm going to try to display I'll put this code it's on the very first live triple asses and remember there is a new line let's try another one actually they'll just copy this code and paste it one two three four five six seven seven times cool and then we're gonna give this a shot let's see if I can get this on my first try I think I got it save compile G + + and initials CPP this is the name of the file whoops so I so here here I got an error message initial Daisuke no such file directory so ice actually spelled the name wrong g+ + initials there's a s in there so you can see you in a file name enter whoops you know two plus signs there we go execute the executable code dot slash and as you can see there should be a dial in here enter there we go I got it cool so now here's a co challenge ok instead of doing what I've done doing the outputting the s in here the KO challenge will be in the next week you'll have the chance to output anything that you want and ask er YMCA Oh H dot IO anything that you want and if you post this code on Twitter and at me at code Academy at Sonny num nom justified to it I just add code Academy I'll find it just by coming is important and we'll pick five winners it doesn't have to be fancy and if we like your code we'll post it into our github repo for other learners to see forever cool so seven days commenting Coco so I think that's all I got for today I can't stay to the chat for a little bit yes that's my turn Mary go you finished the challenge of cool send it to us love to see it and we're gonna do more this one is really tough to build a project just on outputting and make it super fun so I definitely have troubled there but uh that's the challenge yes yes so it's not too difficult the next time we do a challenge it's gonna be the difficulty level it's gonna gonna increase a little bit so the first one is a freebie cut it's kind of like a freebie okay for the next and the next one there's gonna be a time component to it so there's gonna be a speed coding contest so I still don't get C++ well what do you not get watch tagging idea watch to get idea and do Ingo this is your time to ask questions I think I'm pretty much done with the stream but please let me know if you have any questions what does the terminal do so terminal is on your computer we actually have a emulator version our platform but it basically you can tell the computer what to do instead of clicking you know moving this file into let's say I make a folder called blah and I want to move this file into blah I'm using the mouse to navigate I'm using a mouse to do the command moving this file into another folder into a folder but you can also do that with the terminal you can instruct you can give computer commands pointers where the fun comes yes I'm still on the fence about whether or not we should do raw pointers so this actually very interesting thing with with C++ so be honest rubbish forego C++ but in 1998 they're starting to do a standards for C++ and the last three were C++ 11 14 and 17 and if you've been following the per question the newer improved implementation of C++ there was a confluence calcdp con earlier this year where they actually talked about they might deprecated the more older not smart pointers Coco yes so there will be more shapes now just aa c+ fill my everything hopefully and hopefully the next one the Creator C++ can join us or the next next one we should definitely do a lecture I do really want to do a livestream where we do an interview you know what if you have one thing you wish you change and the original implementation of C++ the really crazy thing is that there are things with functions and modules that he wrote about way back 20 years 30 years late ago they're finally implementing in C++ twine that's about it come out what's the best editor so there are a couple that people use I think right now our coach is really liking Visual Studio code when I first started writing C++ it was a Emacs write notepad plus plus yes that's another classic and later on I start using Visual Studio and there's a free version I use both ID and editor what what's so funny Oh where's Patrick Emacs yes there we go how do you code an app so this is the tough and C++ a cool cool so this is definitely something I want to attack a little bit later on whether it was SDO or I really want to build games with C++ on code Academy right and there are actually a lot of my apps that you might have know it's built with C++ like Adobe Photoshop Adobe Illustrator right kukuku what is the name of the c+ ID they're a couple so Microsoft yes let us build yes so Microsoft has one C++ for program machines or is there more to it program machines so yes so C plus y is a programming just for not sure if I quite understand that questions so sure if you tell my machines like giving instruction to a machine to the computer so and you know Triple A games Bettis systems microcontrollers browsers operates this stuff right yes so Jeb brain is something that's been I've been hearing a lot about Ashleigh I haven't used I've seen people use it for Ruby for other things I do want to give it a shot cool and also I just want to say that there are a lot of other things that we're working on as well that we just released so natural language processing we also released technical whiteboarding machine learning introduction to blockchain oh right Bitcoin was written as c plus CC plus my favorite video game dota 2 was written in C C++ and and another thing with cool about a code of chemists reducing C++ is that it opens up it opens up a lot of doors whether it's out do we know whether it's somebody says what dota2 yes it's open source you should check it out if you want to make a buy if you want to you should file you should yeah it's open so you can take a look at the code Ashley made this is back in 2014 Ashley was what's working on a team at yeah we're C++ day enough for it for the the box this is before opening I started tackling dota do we know right Algeria so yeah right so introducing C++ allows us to tackle you know so do we know any sort of microcontrollers C C++ low lower functionality of C++ really comes in handy and that's what the other you know if you if you ever program boundary no that's what it is and also mobile programming hopefully game development hopefully 2019 yes yes so games yes C++ because it's blazingly fast love pretty much all the Triple A games are written in C++ in GE oh so that's an interesting question we actually have not there's something I've been thinking a lot about is how to introduce games with C++ currently our platform does not support that but I think in q1 quarter one this is where I really want to spend some time on how to and I and I think so so Tim another fellow Kirkman developer actually suggested OpenGL two so there's something we're definitely going to look into and here's another thing that's not pretty pretty yeah still pretty pretty pretty crazy that we actually so sleep us was our number one we've conducted numerous service over the last year and C++ actually the number has been the number one and pretty much all the surveys and so we started building it I remember a year and a half ago when I first interviewed at code Academy I named C + C C++ the language that I want to write so this is super cool and also guys and girls please please give me some feedback I just went through the first lesson there is lesson 2 compiled execute oh I'm sorry variables there are three projects in that conditional logics coming out next Monday with additional three projects an article and possibly a debugging minilesson and folly Monday December 17th we're going to release module for loops so please yes give sunny feedback on the stream in that dock but also send your feedback on the course at Sunny s ony at code Academy calm my Billie's I have one space invader yes I could hear you golfing your coffee I was so sorry yeah that maybe next time I'm pretty nervous so I've been a class of teacher for two and a half years before joining code Academy taught at Columbia Lehman College did a couple recitations and why you but this is very different this is you know I like feeding off the energy of the room I like getting people the student is excited I like when people's eyes you know lit light up so this is definitely a little weird some been pretty nervous the very this this time because this almost feels like I know you're there but also feels like a losin but hopefully next time I like I there's there's been a lot of things this week up still knocking up bugs for C++ so wasn't totally ready for this last shame but episode 2 I'm good cool everybody thank you so much for watching check out come back next week for either p5.js or a second episode of learn C++ cool and Alex how did I end the stream see you see you send me email
