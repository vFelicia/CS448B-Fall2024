With timestamps:

00:06 - and we're live
00:08 - hello everybody Welcome again to our
00:10 - back to school series of live streams
00:12 - this is day four of four this week I'm
00:14 - Jonathan Turing the head of commute here
00:16 - at COC Henry I'm joined by my colleague
00:17 - Mariana Benjamin one of our community
00:19 - managers who is monitoring our chat
00:21 - another Community manager uh Betty Lorca
00:24 - who is also our student specialist and
00:26 - our guest speaker today at Junior Quan
00:28 - Jimmy has spent 12 years at Salesforce
00:31 - currently as an engineering lead with
00:33 - eight granted patents and four waiting
00:36 - to be granted he's the co-president and
00:38 - founder of the Asian leaders Alliance a
00:41 - volunteer at live Coalition of more than
00:43 - 950 Asian native Hawaiians in Pacific
00:45 - Islander employee resource groups with
00:48 - over 3 000 members worldwide which
00:50 - includes Moi uh if that were enough he's
00:53 - also an advisor and angel investor for
00:55 - several companies he's passionate about
00:57 - software engineering and has a great
00:59 - interest in software methodologies and
01:00 - processes and in terms of specialties
01:04 - there's a long list he excels in Java C
01:06 - plus plus HTML opengl JavaScript CSS XML
01:10 - X query and more and due to its
01:12 - background as a computer science major
01:14 - he can pick up most languages and
01:16 - Technologies uh we will have a q a
01:18 - session at the end but feel free to ask
01:20 - questions throughout the event and I'll
01:21 - try to to ask them whenever appropriate
01:24 - and uh if you do ask questions or
01:26 - comment please remember to add here to
01:28 - our community guidelines by keeping
01:29 - things respectful
01:31 - um so enough of me talking Jimmy please
01:33 - uh take it away oh awesome thank you
01:35 - Jonathan and I thank you everyone from
01:37 - code academy to being part of this and
01:39 - making this happen and I want to thank
01:40 - everyone who's actually watching this
01:42 - live or watching this in the future
01:43 - because you know the whole point of what
01:45 - a code academy is trying to do is
01:47 - actually trying to help everybody in the
01:48 - community with knowledge and learn and
01:50 - grow and so that's part of the reason
01:52 - why here is I want to depart some of
01:54 - this knowledge that I've learned over
01:55 - the years some good some bad
01:58 - um but kind of getting into myself who I
02:00 - am um so first and foremost
02:03 - um you can't really talk anything about
02:05 - yourself without talking about your
02:06 - identity so I'm ethnically Chinese and
02:09 - culturally Vietnamese I'm son of a
02:11 - Vietnamese Refugee mother who's a single
02:13 - parent who raised me and raised my
02:16 - younger brother who has type 5 cerebral
02:18 - palsy
02:19 - um to me that's really important because
02:21 - that drives a lot of reason why we all
02:24 - want to do something that drives our
02:26 - future it drives our past it drives our
02:28 - passion and it also takes an account why
02:31 - I have certain things that are really
02:33 - important to me such as Asian leaders
02:34 - Alliance and being to being to uh speak
02:38 - about my identity and the fact that I'm
02:40 - not just Chinese but I'm also Southeast
02:43 - Asian I'm also Vietnamese which is
02:45 - different uh different Asian I was born
02:49 - in Minnesota uh Minneapolis I moved out
02:53 - to LA to live with my family my uncle
02:56 - and my grandmother and such
02:58 - and went up the coast to go to college
03:01 - and go to work
03:02 - um in terms of my Academia like one
03:04 - would expect I'm a software engineer I'm
03:06 - smart ah not really it's it's it's not
03:10 - about how well you do in Academia it's
03:11 - actually about how do you grow and
03:15 - Thrive under struggles right
03:19 - um as those of you who are doing
03:21 - programming or software or even doing
03:23 - anything in life you're always going to
03:25 - run into struggles right there's gonna
03:27 - be a brick wall you can't figure
03:28 - something out
03:30 - um so for me like I when I was in um
03:34 - Elementary School I actually got exposed
03:36 - in Minnesota to computers there it was a
03:39 - magnet school it was very specialized it
03:40 - had computers it was a public school and
03:42 - I was fortunate to be able to go there
03:45 - the entertaining part that Jonathan will
03:47 - probably understand as somebody who's
03:48 - also from Minnesota I was in a school
03:51 - with I was the only Asian individual in
03:54 - a school of 10 000 students
03:56 - um and so that for me was kind of a
03:58 - struggle figuring out like who am I what
04:00 - am I doing
04:02 - um the stereotypes back there wasn't
04:04 - necessarily all Asians are good with
04:05 - computers or something like that
04:07 - it was more about like you know we're
04:08 - supposed to be smart and such but as I
04:11 - went through my Elementary School in
04:12 - junior high like I would see average I
04:15 - didn't really get great grades I
04:17 - struggled and a part of it had to do
04:19 - culturally like my family was there
04:21 - pushing me to get better or get study
04:24 - and stuff but they weren't there
04:25 - necessarily helping me do it they were
04:27 - just telling me to do it
04:29 - I was actually then sent to military
04:31 - school but on a threat that if I didn't
04:34 - get straight A's I would be since
04:36 - military school and I thought it was a
04:39 - you know a bluff unfortunately and
04:42 - probably fortunately it wasn't uh I got
04:44 - sent to military school in eighth grade
04:45 - I was living there as a student uh for
04:50 - multiple weeks and stuff like that for
04:52 - the whole school year but the one thing
04:53 - that was interesting with to me was I
04:55 - actually learned a lot of things there
04:57 - uh military
05:00 - was more structured
05:02 - but the one thing that was interesting
05:04 - is as contrary to what your beliefs and
05:06 - what you see in the movies and stuff
05:08 - they're tough but they actually provide
05:11 - you with all the support you need in
05:12 - order to grow
05:14 - and so I actually took a q basic class
05:17 - there and I got so much support on
05:21 - learning being helped at helped to grow
05:23 - but then I also had to figure stuff out
05:25 - my own and actually ironically I my
05:28 - grades came up I actually ended up with
05:30 - Straight A's in military school
05:33 - um and it was the foundation of how I
05:35 - kind of approached life in how I
05:36 - approach programming is like you have to
05:38 - put some elbow grease in there but you
05:40 - also have to go and have that support
05:42 - around you
05:45 - um after military school I actually
05:47 - ended up going into a Technical High
05:49 - School which we had Majors so I made um
05:52 - there's Majors like power and
05:53 - transportation design architecture
05:55 - Aerospace I ended up taking computer
05:58 - science
05:59 - um as a major in high school which is
06:02 - very unique compared to other people
06:03 - that are typically in the industry
06:05 - um a lot of people who got exposed to
06:07 - computers either did it through college
06:08 - or they actually picked it up on their
06:10 - own
06:11 - um I was one of the few people going
06:13 - into University that has formal studies
06:15 - in computer science and I actually
06:18 - struggled for the first year on what
06:20 - this all meant like nobody around me
06:23 - knew how to do programming I had to
06:24 - learn C and C plus
06:27 - um had work in teams on how to build
06:28 - things out but over time working with
06:30 - people I actually
06:32 - learned how to do a lot of these things
06:34 - and when I actually went to college I
06:36 - went to Cal Poly San Luis Obispo and it
06:39 - was kind of like holy cow I actually
06:42 - kind of know my stuff there are p and I
06:46 - at first thought I was like brilliant
06:47 - because I know how to program I learned
06:49 - this in school but I also ran into a lot
06:51 - of individuals that were smarter than me
06:54 - it wasn't because they were
06:58 - exposed to programming early and that
07:00 - they were coding
07:02 - um formally they actually picked it up
07:04 - on their own and so one of the big
07:06 - things I learned is that like you could
07:09 - have Engineers that can be just as smart
07:11 - or smarter but it doesn't mean that they
07:13 - have the same background the same
07:14 - experience and that experience in that
07:16 - background actually makes you who you
07:18 - are and what type of engineer you are
07:20 - but at the end of the day it's even more
07:21 - about what type of person you are
07:23 - some people as we go through college or
07:26 - as you work in Industry you'll notice
07:28 - that some people went into computer
07:30 - science or doing software
07:32 - because of the money right it's good pay
07:36 - uh but there's others that went through
07:38 - it because
07:40 - they love doing it the reason I went
07:42 - into computers is when I was going to
07:45 - the Technical High School Don Bosco Tech
07:48 - I was like holy cow I could imagine
07:51 - everything being ran by computers
07:53 - street lights
07:55 - um financials all the stuff I'm like wow
07:57 - can you imagine the impact that you
07:59 - could do the positive impact
08:01 - the fact that you could do something
08:03 - that's tangible that could actually help
08:06 - people's lives be better they can help
08:09 - financials and small businesses to do
08:11 - better
08:12 - um and it it can have an impact by
08:15 - little things and it's the one thing is
08:17 - that unlike other engineering if you
08:19 - could imagine computer something in
08:21 - computers you could kind of do it
08:22 - yourself you don't have to you're not
08:26 - fighting against physics for the most
08:27 - part you're just creating a digital
08:29 - world that's doing things and so because
08:31 - of my passion of wanting to help I
08:34 - actually did my undergrad at Cal Poly
08:38 - um I went to do my masters at Cal Poly
08:41 - also
08:42 - um and then after that I actually went
08:44 - out to work at a company called Intuit
08:46 - and most of you all may not know what
08:49 - Intuit is but they're the makers of
08:50 - Quicken QuickBooks Turbo Tax
08:54 - um Quicken is not really as popular now
08:56 - but you may all know mint.com
09:00 - um and I went in working
09:02 - um on their QuickBooks Online I was an
09:04 - intern on their quick desktop team went
09:06 - over to their QuickBooks Online team as
09:08 - one of the first reboot Engineers of the
09:10 - reboot team
09:12 - um and we
09:14 - it was just my way being like wow I
09:16 - could help hundreds of thousands of
09:18 - small businesses
09:20 - to do something they all hate to do
09:23 - which is accounting they want to do
09:25 - their business they want to sell
09:27 - county is just kind of an unnecessary
09:30 - Evo but we made it easier for them
09:34 - um after working on Intuit for a while I
09:36 - got affected by the layoffs that were at
09:38 - that time
09:39 - it was a really big struggle for me
09:40 - because I started questioning
09:42 - am I a good engineer what kind of
09:45 - engineer like is it did I get laid off
09:47 - because I just sucked or because was
09:50 - just the what was the decision was made
09:52 - I learned that it wasn't because that I
09:54 - wasn't good it was because that it was
09:56 - the economy and they had to make
09:57 - decisions and unfortunately as the in
10:00 - one of the more recently joined
10:02 - Engineers I was affected
10:05 - um and that was actually part of the
10:07 - reason why I also got into doing
10:09 - philanthropy and volunteering because it
10:12 - actually helped me with my mental health
10:14 - about how do I struggle going through
10:15 - hundreds of interviews
10:17 - trying to defend myself against
10:19 - interviewers about well why did you get
10:22 - laid off
10:24 - um but because of that I learned that
10:26 - you know sometimes stuff happens
10:28 - you just kind of go through it you kind
10:30 - of find other ways to redirect your
10:32 - energy and for me that was volunteerism
10:35 - after that I joined the uh my company
10:38 - called CBS Interactive they're one of
10:40 - the daughter or child companies of CBS
10:43 - corporations which we handled all their
10:45 - online content so I was on the original
10:47 - CBS canteen which is CBS Audience
10:51 - Network and we built out their video
10:53 - distribution structure infrastructure
10:55 - and their live streaming so if you're
10:56 - watching any video on any CBS properties
10:59 - right now
11:01 - um you know Star Trek David bloodman.com
11:04 - theinsider child.com that whole video
11:07 - infrastructure and the streaming was
11:10 - actually built by a four of us
11:12 - from scratch and that when I left about
11:14 - there about 12 years ago it was doing
11:16 - over 20 million streams a day
11:19 - like think of just those numbers like
11:21 - the Ridiculousness of oh I could do
11:24 - something and millions of people are
11:25 - being affected
11:26 - um after at CBS I end up switching over
11:29 - and joining Salesforce which
11:32 - um is even more interesting to me
11:33 - because I ended up I hated Securities in
11:36 - college
11:37 - did not like it I ended up on a security
11:41 - team at salesforth doing authorization
11:42 - security
11:43 - I end up that's actually where a bulk of
11:46 - my patents came from working with some
11:48 - of the smartest people I ever worked
11:49 - with building out technologies that
11:51 - didn't even just affect users in fact
11:54 - every single user that logged through
11:56 - our system which was like millions of
11:58 - you hundreds of millions of users and it
12:01 - was one of those things that you realize
12:02 - like wow if I messed up all these people
12:05 - can't get access to anything so it kind
12:07 - of gave you the scope of understanding
12:08 - like what impact you could do with just
12:10 - a little bit of effort one story I do
12:12 - want to do uh talk about before we jump
12:15 - into like the other bulk of the
12:17 - conversation we have with Jonathan is
12:19 - that
12:22 - there you don't have to know everything
12:24 - so to give you a story
12:27 - um and one of my mentors are probably
12:28 - going to get a little annoyed if I said
12:29 - this but I'm gonna say it anyways
12:30 - because it's a funny story my interview
12:32 - at a Salesforce I came in and one of the
12:36 - Architects came in interviewed me and it
12:39 - was just really entertaining because
12:41 - the guy typical engineer not very
12:44 - talkative
12:46 - um kind of a straight to the point he's
12:47 - like hey Jimmy
12:49 - I want you to build uh write us a SQL
12:52 - query
12:54 - for Oracle that would join these three
12:57 - tables and I want you to tell me not the
12:59 - first top paying person in each
13:01 - department
13:02 - assuming that one table has people's
13:04 - salary one table as Department who's
13:06 - part of what department Etc he's like I
13:08 - want you to give me not the top paying
13:09 - person
13:10 - but the third top paying person and
13:12 - nobody else in those for each department
13:16 - and I've never seen that before like
13:19 - I've worked in PL SQL and I was telling
13:21 - him can I do PL SQL he's like no it has
13:23 - to be SQL this is an Oracle database
13:26 - and you should not just give up there
13:30 - are some people that would just be like
13:31 - oh crud or they'll try to make up an
13:34 - answer what I end up doing which
13:37 - actually conversations with my mentor
13:39 - later on he was saying that this is part
13:40 - of the reason why he really liked me
13:43 - when on the interview was he was like
13:44 - hey I went like okay well I'm gonna tell
13:47 - you what I do know right now
13:49 - I could join these tables I could sort
13:51 - it this way I could do this
13:53 - this would at least set up the tables
13:55 - where I have people in a sorting
13:57 - ascending or descending order of salary
13:59 - per Department by departments
14:02 - and I was just like but you know what I
14:04 - don't know how to pick the top number
14:05 - third instead of the first I could do it
14:07 - in PL SQL however
14:09 - I'm pretty sure it's Oracle
14:12 - you all pay millions if not billions of
14:15 - dollars to use Oracle databases I'm
14:17 - pretty sure they made a convenience
14:20 - method or function in uh SQL in order to
14:24 - get that information I'm probably just
14:25 - going to Google search that
14:27 - and he sat there and he's like you know
14:29 - for somebody who doesn't know the exact
14:30 - answer your answer is exactly right
14:33 - and that's actually the thing I learned
14:35 - from that was like
14:37 - it is more important to not prove that
14:40 - you know everything
14:41 - but to actually show the limits of what
14:44 - you know but showing that you're able to
14:47 - actually learn from it
14:49 - and be able to figure out the answers
14:50 - because as engineers
14:52 - we don't just solve problems we solve
14:55 - problems that typically hasn't been done
14:57 - before
14:58 - and we will unlikely be able to know the
15:01 - answer and nowadays a lot of things I
15:03 - don't know even Google can't help me I
15:06 - half of the problems I have to figure
15:08 - out I have to use what I find on Google
15:11 - use my personal experiences and also
15:13 - conversing with my peers on how to find
15:16 - a solution for that so I kind of want to
15:18 - stop right there and like kick it back
15:19 - to Jonathan but that's kind of a big
15:21 - longitude intro no that is thank you so
15:25 - much for uh sharing your background as
15:27 - well as uh that story uh I think that
15:30 - another takeaway or maybe to phrase in a
15:33 - different way is that you show that you
15:35 - are very coachable and it's not about
15:36 - having the exact answer right but like
15:38 - how you go about finding uh the answer
15:41 - so that is great like showing your
15:43 - thought process aside from that uh with
15:45 - all the things that you've been able to
15:46 - accomplish such as working for CBS and
15:49 - the 20 million I think you said 20
15:51 - million uh streams a day which is I
15:54 - can't even like comprehend that
15:56 - um yeah and that's that was like 12
15:58 - years ago so the infrastructure is still
16:00 - there it's probably a lot more now yeah
16:02 - yeah for sure um as well as
16:05 - um uh working for Intuit I use mint.com
16:09 - so maybe some of the things that are on
16:11 - on the back end like you were
16:12 - responsible for but I think with all
16:14 - that said uh your journey right and we
16:17 - haven't even gone into the other things
16:19 - you've done such as like your volunteer
16:20 - work but it just shows that
16:23 - um and it answers your question after
16:24 - you got laid off into it that you are a
16:26 - good engineer so uh you've been able to
16:28 - experience so much success so thank you
16:30 - so much for sharing your story and
16:31 - before we dive into
16:33 - um the meat so to speak of uh this
16:36 - conversation I just want to Jimmy you
16:38 - know I just want to let you know that
16:40 - with all the people who are
16:42 - um attending uh this event live we have
16:45 - people from Mexico City Milwaukee
16:47 - Wisconsin
16:48 - um La Kazakhstan Nairobi Kenya Finland
16:53 - um India so this is definitely a global
16:56 - audience so you're not um it's not just
16:58 - catering uh to the US which by the way
17:00 - Jimmy is based in San Francisco uh right
17:02 - now is that correct San Francisco yes so
17:05 - um but yeah thank you so much uh again
17:06 - for sharing your story especially along
17:08 - the part too about how you are identity
17:11 - is a huge part of like your trajectory
17:14 - so to speak of what you want to do or
17:17 - who you are as like an engineer and um
17:20 - and Beyond so
17:21 - um but yeah thank you
17:23 - okay awesome so I think uh we want to
17:26 - jump into the book of the meat
17:29 - so today
17:32 - um one of the things I wanted to talk
17:33 - about is the there's all these things
17:37 - about getting into the software industry
17:38 - uh getting into all these things and one
17:41 - of the things I've been noticing is that
17:43 - there's just been a huge Mis um
17:47 - potential misnomer misunderstanding of
17:50 - what those all mean
17:51 - and so I am sharing a slide right here
17:55 - hopefully you all could see or it's the
17:57 - wrong one actually right
18:00 - um you know this things are always kind
18:02 - of fun to try to figure deal with all
18:04 - this stuff but
18:05 - um hopefully this time it's the right
18:06 - side
18:08 - um but one of the things I wanted to
18:10 - cover was actually to have people
18:12 - understand of like the differences
18:14 - between the different Industries I even
18:16 - when I went to college it wasn't super
18:18 - clear about what was the difference of
18:21 - all these different Majors that were
18:22 - computer related
18:24 - and I think it got even more complicated
18:26 - as we went into industry so I kind of
18:29 - want to take a back
18:31 - um and when it started in the Academia
18:33 - that when you're actually learning about
18:34 - computers
18:36 - um so there's two sides of this uh slide
18:38 - that you see here one side is more about
18:40 - college and university and then one is
18:42 - kind of more of an area called trade
18:44 - schools trade schools are kind of like
18:46 - boot camps trade schools are more of a
18:48 - traditional term that's used in the past
18:49 - because back in the old days it was
18:51 - leather working blacksmithing they were
18:54 - really geared about teaching people how
18:56 - to
18:57 - do the work
19:00 - um they may or may not go into the the
19:02 - science or the theory behind it but it
19:04 - was more emphasis on you being able to
19:06 - do the work
19:08 - and there's also the university in
19:10 - college side where
19:12 - um at least here in the U.S I know every
19:14 - country's slightly different but I think
19:15 - it's similar inter it's more of a
19:17 - general
19:19 - um education around that area so in the
19:21 - US we do have things called general
19:22 - education you learn everything from
19:24 - Communications to other areas while I do
19:27 - know like India and Germany when you go
19:30 - to college and you focus on a major the
19:32 - vast majority of your coursework is in
19:34 - that Focus
19:36 - um so right here what I wanted actually
19:37 - to kind of explain was because I had
19:39 - friends new people that are uh kids or
19:42 - friends that are going into college
19:43 - they're like I want to do something
19:44 - computers but there's these different
19:46 - areas that I don't quite understand what
19:48 - they mean
19:49 - um some go straight into computer
19:51 - science because that's the normal thing
19:52 - some people go into Information Systems
19:54 - some people go Computer Engineering but
19:56 - what I want to kind of just have here is
19:58 - just kind of do the Baseline of that so
19:59 - if you look here on the scale from the
20:01 - University level from the left to the
20:03 - right side it's called
20:05 - um how much Hardware they teach you and
20:07 - then how much of its software so the far
20:10 - Spectrum on the harbor side if you look
20:12 - is electrical engineering you're pretty
20:14 - much doing all Hardware you're designing
20:17 - the circuit support and you're designing
20:18 - stuff the one area that you will
20:20 - probably do that's related to
20:22 - programming as you're doing low level
20:25 - coding they're doing bios's firmware
20:30 - um low-level stuff on there and you
20:32 - should have some experience you will be
20:34 - taught some experience in software
20:36 - encoding but not as much your focus is
20:38 - really the hardware doing the
20:39 - electronics so and the examples of
20:42 - people that work on that uh things that
20:43 - people work on that is obviously
20:45 - motherboard CPUs uh your handheld
20:48 - devices uh video games consoles Etc and
20:52 - the one that we all probably have on our
20:54 - hands is a smartphone like this
20:57 - um the iPhone Android uh the Samsung all
21:01 - the hardware there is actually created
21:03 - by the vast majority of their Hardware
21:05 - used by an electrical engineer
21:07 - As you move closer to Software you'll
21:10 - see something called uh Computer
21:12 - Engineering and computer engineering is
21:14 - kind of smack in the middle between
21:15 - hardware and software where you still
21:17 - have a high level of Hardware experience
21:20 - creating Hardware learning about more
21:22 - specifically CPUs
21:24 - but the other side you do do programming
21:27 - and so
21:28 - this actually means that the computer
21:31 - engineer is a very well versatile and
21:33 - typically both areas and it's pretty
21:35 - agile and switching from one to another
21:37 - computer science is kind of what the
21:40 - traditional thing that everyone knows
21:41 - across the story where you're learning
21:43 - how to build an operating system you're
21:45 - learning how to do language programming
21:47 - languages you create your own
21:48 - programming languages you code you do
21:50 - distributed systems architecture a lot
21:52 - of these are theories
21:54 - um those three things are kind of the
21:57 - traditional academias for that and most
22:00 - universities or colleges will have those
22:02 - three in some sort of way
22:05 - um but at the end of the day those three
22:06 - are purely more on the theory and the
22:10 - implementation side you'll see that
22:12 - there's two more Right Above It
22:14 - information systems and software
22:15 - engineering software engineering is
22:18 - actually if you look at software
22:19 - engineering as the way it is in the last
22:21 - 20 or 30 years software engineering is
22:24 - actually pretty young
22:26 - Building Products application products
22:29 - as a product you sell as a service it's
22:31 - pretty young because prior to that
22:33 - everything was more building
22:35 - Technologies to support a business and
22:37 - so that's why information system has
22:40 - been around information system
22:43 - uh you learn a little bit about the
22:44 - hardware you're not building them but
22:46 - you're learning up setting up Hardware
22:47 - networks system Networks you're learning
22:51 - how to do build computers or support
22:53 - computers you're learning how to build
22:55 - websites for a business need
22:59 - that is specifically so a company like
23:02 - Intuit would have an an informational
23:04 - system team that is building a internet
23:05 - for them or a way for employees to
23:09 - submit
23:10 - tickets or Amazon so those are typically
23:12 - specifically to one business and most
23:16 - universities have that
23:18 - um but the big emphasis on information
23:19 - system is about how do you use existing
23:22 - Technologies
23:24 - to support a business
23:26 - and typically information system falls
23:28 - under the College of Business
23:31 - all the three other ones that I was
23:33 - talking about earlier they typically
23:34 - fall under the College of Engineering or
23:37 - the College of Sciences depending on
23:39 - where they evolve from
23:42 - and um the one area that I do want to F
23:45 - and the one thing about information
23:47 - system is the key thing with that is
23:49 - part of the reason why they're part of
23:51 - the College of Business is you actually
23:52 - have to learn how to convert have
23:54 - conversations and talk to people and
23:56 - sell and explain to them what the things
23:58 - you're doing so that's why they're more
24:00 - on the business that's more focused
24:02 - around that
24:03 - um software engineering is relatively
24:05 - new as a major in a university
24:07 - um I know my University started offering
24:09 - it about 20 years ago when I was a
24:12 - student there
24:13 - um and I just stated myself I realized
24:15 - but it's very young and only a few dozen
24:18 - universities
24:20 - um at least in the US that I know of
24:21 - actually offers a big software
24:23 - engineering is kind of this new thing
24:24 - that everyone kind of tried to figure
24:25 - out but software engineering is all
24:27 - about how do you take
24:29 - um being more practical about software
24:32 - developments about building software for
24:35 - a business student so at a lot of these
24:37 - universities they're still figuring out
24:38 - what
24:39 - that really means a software engineering
24:41 - but at the end of the day one hand sound
24:44 - they all could probably agree on is that
24:46 - software Engineers it's more about
24:49 - how do you build teams
24:52 - how do you work as a team to accomplish
24:54 - something computer science
24:57 - typically you do most your projects on
25:00 - your own and siled in college and this
25:03 - is kind of a key factor because as you
25:04 - switch over to Industry you'll start
25:07 - seeing how they map because if you know
25:09 - in Industry there isn't anything called
25:11 - computer scientists there is but very
25:13 - very often not a lot of times it's a
25:15 - software engineer
25:17 - now if we look over at the boot camp
25:19 - special boot camps and trade schools
25:21 - these are specializations they typically
25:23 - are not uh multi-year they're typically
25:26 - a few months training but their whole
25:28 - goal is to teach you Hands-On on how to
25:31 - use a particular technology or a
25:34 - particular set of Technologies it's more
25:36 - about execution and getting things done
25:38 - the one thing is that you may not get to
25:42 - know the underlying of how things work
25:44 - like you get to learn how to use a
25:47 - programming language right like Java Etc
25:49 - but you don't understand how the garbage
25:51 - collect you may not be taught how the
25:53 - garbage collector Works how they
25:55 - allocate memory how they manage how they
25:57 - translate into bytecode
25:59 - um that doesn't mean that you can't
26:01 - though like everything I'm telling you
26:03 - right now is very
26:05 - um fluid because things change and at
26:07 - the end as I was telling you with my
26:08 - story a lot of this is very important to
26:12 - how you yourself
26:16 - um growth
26:17 - because you can you can learn yourself
26:20 - you have the passion to do it and you
26:22 - could do it and I've seen people switch
26:24 - back and forth I've seen electrical
26:26 - engineering going out doing software
26:27 - development and out there and it's
26:30 - awesome it's potential
26:34 - um and so
26:35 - a lot of these things that's kind of how
26:37 - they come out um and that's like code
26:39 - academy kind of falls into kind of like
26:41 - the education the trade stuff where
26:43 - they're actually teaching showing you
26:45 - videos content teaching you on actually
26:47 - how to do something right with the boot
26:49 - camp and all that stuff and that's kind
26:51 - of a key thing but like remember as you
26:53 - go do this
26:55 - understand that you don't actually know
26:57 - the full scope of everything and that's
26:58 - fine
26:59 - it's if you want to you can go out there
27:02 - and learn and I'm pretty sure code
27:03 - academy has that information there are
27:05 - other eight places have it but
27:07 - you don't need to know it but if you do
27:09 - want to go into software or going in to
27:12 - do more advanced things it's easier and
27:14 - better if you know these backgrounds but
27:17 - at the end of the day it doesn't mean
27:18 - anything unless you build something so
27:20 - as we go into the next site about
27:21 - industry this is where things is the big
27:25 - key thing that industry cares about
27:28 - is what did you build
27:31 - your Academia where you went to school
27:33 - what you did does affect it
27:35 - but if you made a killer app and you
27:39 - didn't go to a university
27:41 - and you didn't have this full Bridge
27:42 - they're probably still going to hire you
27:44 - if you build a killer app and it was out
27:46 - and people are using it
27:49 - um that's the one key thing that's
27:50 - interesting about software in general is
27:53 - that they don't really they use your
27:55 - background in your past to actually make
27:57 - some sort of assessment about you but at
28:00 - the end of the day it's all about what
28:01 - you've done more than what you've
28:03 - learned
28:04 - and so in the software side
28:09 - um we have to talk because there's a few
28:11 - different things there's how you got
28:12 - your Where You Are
28:14 - there's the Specialties and there's the
28:16 - rules right so I want to kind of explain
28:19 - the differences of the different rows in
28:22 - software
28:23 - um because I do get this a little bit
28:24 - and I do get a little bit annoyed when
28:26 - someone says hey Jimmy you're just an
28:29 - engineer
28:32 - you're just a programmer but there's
28:34 - actually very clear differences in those
28:36 - and so you and as I said before you
28:40 - could actually evolve yourself across
28:41 - this it's just about how do you handle
28:43 - yourself and what background you have so
28:45 - programmers as we assume is somebody who
28:48 - actually codes
28:50 - they write code they typically do it as
28:53 - by themselves they normally don't do it
28:54 - as a group they're in charge of a single
28:57 - component or their programming component
28:59 - and to depending on which company what
29:01 - organization you're getting guidance
29:03 - from somebody who's more senior whether
29:05 - they're a developer or an engineer or an
29:07 - architect
29:08 - but a lot of times you are mostly in
29:10 - Silo working on together when you go
29:12 - into and it's that's typically a role
29:14 - you'll see with Consultants or if you're
29:16 - working for smaller companies but when
29:18 - you're going working for companies like
29:19 - Google
29:20 - like uh Salesforce like Amazon
29:23 - uh we're not programmers there we're
29:26 - more likely to be a software developer
29:27 - or software engineer because the key
29:30 - thing that the word software development
29:32 - software engineer is that makes it
29:33 - different from our programmers we are
29:35 - required to work with other people we
29:38 - are not building a component by
29:39 - ourselves we are building it with a team
29:41 - of others and we have to have those
29:43 - conversational conversations with them
29:45 - speak uh speak with them collaborate
29:48 - have arguments about how we redesign and
29:52 - do things it is really around a team and
29:56 - not around
29:57 - an individual
30:00 - um so for software the difference
30:01 - between software developer and software
30:02 - engineer is software developers will do
30:05 - a larger system so they're building out
30:06 - a whole a whole system but it's still
30:08 - one piece of a larger ecosystem they do
30:12 - work on teams and uh their role is
30:16 - pretty scoped but they have the key
30:18 - thing is as a programmer you're probably
30:22 - just doing development and that's it as
30:24 - a software developer you're typically
30:28 - um handling end-to-end which means
30:29 - you're handling the the the programming
30:32 - stage the creation of it the maintenance
30:34 - of it the upgrades when things go bad
30:37 - you're typically the one who fixes it
30:39 - well as a programmer that's not
30:41 - necessarily part of your job description
30:43 - and like I said the big thing with
30:46 - software the industries right now
30:48 - there's not very good terminology around
30:49 - it no one's gotten down to say hey
30:51 - what's the difference between this these
30:53 - are just things that you could kind of
30:54 - see based on why they use certain
30:55 - terminology
30:57 - the thing with a software engineer
30:59 - they if you want to kind of say they are
31:01 - more
31:02 - um like Architects they Design Systems
31:04 - they do the exact same thing as a
31:06 - software developer but the big thing
31:08 - with them is they also may have to worry
31:10 - about cross-system Integrations
31:12 - building multiple systems that integrate
31:15 - that uses multiple Technologies they're
31:17 - typically thinking about more about big
31:19 - picture and how things would work and
31:22 - how do you maintain them in the future
31:23 - say for example with a system like
31:25 - Salesforce uh it's been around for about
31:28 - I think about 25 years
31:30 - you can't just slap code together and
31:33 - make it work on a system that has to
31:35 - work for 25 years you kind of have to
31:37 - think out and design how that would work
31:39 - how do you scale how do you pivot how
31:41 - the heck did Salesforce get AI into that
31:43 - so quickly
31:44 - part of it is because they had a team of
31:47 - individuals and maybe the whole company
31:49 - has a whole figure out how do we make it
31:51 - so we are agile enough to switch our
31:53 - Technologies and pivot if we need to
31:56 - when you go over uh and so it's all
31:58 - about this more responsibilities and
32:00 - also the bigger the scale work you're
32:02 - doing
32:03 - um in terms of how you get this
32:05 - there's degrees which like universities
32:08 - and a lot of times it's all about the
32:10 - degrees is more about how do you build
32:11 - the technology so how do you build a
32:13 - programming language how do you build an
32:15 - operating system when you go down to the
32:17 - certificate levels
32:19 - um a lot of them are more about how do
32:21 - you use a technology
32:23 - and that's the key thing I kind of want
32:25 - to just make people understand is
32:27 - um
32:28 - building a technology and using it is
32:30 - very different
32:31 - I work at Salesforce I build Salesforce
32:36 - I don't actually know how to use all of
32:38 - Salesforce
32:39 - I am we have a lot of people who are
32:42 - Salesforce administrators that got their
32:44 - certification that knows how to use
32:46 - Salesforce much better than I do but I
32:48 - built Salesforce I built parts of the
32:51 - technology and that's what it is and so
32:52 - there's a clear difference these are not
32:54 - necessarily interchangeable
32:55 - but obviously one who builds it can
32:59 - potentially learn it because they man it
33:01 - builds more or they don't understand the
33:02 - other link but those who've done
33:03 - certifications Nothing Stops them to
33:06 - learn how to build it it just takes a
33:08 - little bit of more effort and other
33:09 - background education that you may need
33:12 - to get in order to get that but I just
33:13 - want people to understand that if you're
33:15 - grabbing a certification remember that
33:17 - doing a certification is more about how
33:20 - do you use a technology or how do you
33:22 - use something
33:24 - while
33:25 - um those who are going through Academia
33:27 - is typically how you actually build that
33:30 - technology
33:31 - and that like I said you're you this
33:35 - does not stop you from learning it
33:36 - yourself
33:37 - uh many programmers especially those in
33:40 - the early 80s
33:42 - had to figure it out themselves but the
33:44 - reason I touched these two areas is
33:46 - because if you look at the far right
33:47 - there's all these things about
33:48 - Specialties you know you hear web web
33:51 - 3.0 blockchain Ai and then you hear
33:54 - these ads about hey
33:56 - you could take this certification and be
33:58 - an AI expert
34:01 - I want to just kind of disclose that uh
34:03 - disclose that a little bit is that
34:04 - that's not necessarily true
34:07 - um you're not going to be the same as an
34:10 - engineer that's working on it
34:12 - um it comes back to again there's when
34:14 - you look at each one of these web mobile
34:16 - Graphics data scientists AI databases
34:18 - all these across there's hundreds of
34:20 - these specialty areas
34:23 - getting the certification means that
34:25 - you're learning the basic theories
34:27 - around it and how do you use a
34:29 - particular technology in order to do it
34:32 - while if you're doing like a computer
34:35 - science major or a software engineer in
34:38 - that same industry and that area odds
34:40 - are you're the one who knows the theory
34:44 - that scientific engineering theory
34:46 - behind it and you're building the
34:48 - technology or you're building the next
34:50 - generation of AI so if you look at
34:52 - everyone at chat GPT right the engineers
34:54 - there that built uh chat GPT three T4 is
34:58 - being worked on right now they're the
35:00 - one who's pushing the envelopes of that
35:02 - technology
35:04 - um and a lot of it's experimental
35:06 - there's you could get a certification on
35:08 - how to use chatbt3 in chechb2 and that
35:12 - all it is is helping people to
35:14 - understand and use it or integrate it
35:16 - into what they're doing
35:18 - technologies that have been created or
35:20 - the apis have been opened up for you to
35:22 - use it
35:23 - and so those are kind of like the big
35:25 - differences I want to kind of point out
35:27 - for everyone
35:28 - um like I said this is always changing
35:31 - like no one there's nobody that sat down
35:33 - said oh this is how things are but what
35:35 - I'm just trying to explain to you is
35:36 - just what has kind of been out there and
35:38 - what's been the norm as I could see
35:41 - um but I mean yeah Jonathan what do you
35:43 - think if I mean I am welcome to kind of
35:46 - go deeper for some of this
35:48 - um I know it's a lot of content a lot of
35:50 - stuff but like my key thing is I just
35:51 - want to let people know is that
35:54 - um understanding the the big thing about
35:56 - excelling even in life
35:58 - is actually understand what you do and
36:01 - what you don't know
36:02 - and then the thing is what do you want
36:04 - to do and how do you obtain that goal
36:07 - yeah uh first off uh before we did the
36:10 - live stream
36:12 - um Jimmy shared with me these slides and
36:15 - I was like wow this is like such a great
36:17 - breakdown of uh the different
36:20 - um modalities as well as like Fields I
36:23 - think that with a lot of our uh with a
36:25 - lot of members of our community right
36:27 - they're they're mainly uh beginners and
36:30 - they're trying to figure out I want to
36:31 - work in Tech I don't know necessarily
36:33 - like where to start it there's some like
36:35 - for example underneath like if you want
36:37 - to work in like data there's so many
36:39 - different kinds of like data science
36:40 - related fields and so
36:43 - um what would be your recommendation for
36:45 - someone who especially if they're like
36:47 - completely switching Fields it won't be
36:49 - your recommendation for like
36:51 - having people figure out like what they
36:53 - want to do and I know that it's subject
36:55 - to change because people change like
36:57 - careers all the time or like within the
36:59 - Specialties like you could be working in
37:00 - web and then want to work in Ai and then
37:03 - work a mobile so on and so forth so
37:05 - um I
37:06 - um understand that but like what would
37:07 - be your recommendation for uh those wine
37:10 - to not only break into Tech but then
37:12 - trying to figure out like what they
37:13 - really like
37:14 - so I think in terms of breaking into
37:18 - Tech and even just learning something
37:20 - new like going into AI I think a part of
37:23 - it is like
37:24 - the traditional route people say is go
37:26 - back to college you better go back to
37:28 - school ah technology moves so fast right
37:31 - now like pretty much the things I've
37:33 - learned a few years ago in terms of how
37:35 - to use this technology is no longer
37:37 - relevant
37:38 - Academia my information from college
37:40 - gave me kind of the background to
37:41 - understand why things work but like
37:44 - going back to school to learn how to do
37:46 - something is just not quick enough for
37:49 - us now so now I think like actually
37:50 - taking advantage of stuff like code
37:52 - academy and stuff I'm going out resource
37:54 - there's actually really good websites on
37:55 - how to learn how to code
37:58 - um if you want to break into Tech like
37:59 - sometimes I think a lot of us are more
38:03 - Hands-On right um Cal Poly San Luis
38:05 - Obispo the university I went to we are
38:07 - our motto is learn by doing
38:09 - and I think this is a perfect place to
38:11 - speak I'm saying I learned by doing so
38:14 - if you don't know about tech
38:15 - you if you have somebody near you that
38:18 - you can talk to about it do it because
38:20 - that has that personal connection where
38:22 - you can ask them questions that is
38:24 - specific to you if you don't there are
38:27 - resources I mean code academy I assume
38:28 - you all have resources all these other
38:30 - stuff you can Google there's human
38:32 - certifications go and learn about it a
38:34 - little bit
38:35 - do a lot of these sort of some of these
38:37 - certifications there are online classes
38:39 - that you can take for free and jump in
38:41 - invest a little bit of time to learn by
38:43 - is it something you like is it something
38:45 - you enjoy
38:47 - um I guarantee you the first you start
38:48 - doing Tech and I'm going to tell
38:49 - everyone straight off you might hate it
38:51 - at first
38:53 - but as if as we do with everything just
38:55 - give it time
38:57 - put in a little bit of effort play
38:59 - around you might start seeing that you
39:01 - actually really love the struggle it's
39:03 - really really narcissistic or like for
39:05 - me our best assistant for me it's like I
39:08 - actually like
39:09 - kind of enjoy the struggle of figuring
39:11 - out how to do something because when I
39:14 - actually solve something it's like holy
39:16 - cow this is awesome and that 10 seconds
39:19 - of Happiness makes up for like the 10
39:21 - hours of being in my head against the
39:23 - wall so a lot of stuff I would say jump
39:25 - in try some stuff to control if you feel
39:28 - like it is something you enjoy digging
39:30 - deeper
39:31 - if you want to take AI you don't
39:33 - actually have to learn how to do
39:34 - programming to do AI there are
39:36 - certifications you could use uh there's
39:38 - other stuff where you could just start
39:39 - getting your hands wet maybe just don't
39:41 - even bother that jump on chat and start
39:44 - playing around with the open AI chat GPT
39:45 - to see what it's capable of
39:49 - and as you kind of dig in through this
39:51 - you kind of see if that that's where
39:53 - you'll start figuring out like oh is
39:54 - this cool is this something I would
39:55 - willing to waste put my time on I kind
39:57 - of want to say waste because sometimes
39:58 - it is but where are you going to put
40:00 - your efforts and then after you kind of
40:02 - like you know what I don't want to do
40:04 - something I think the best way to learn
40:06 - something
40:07 - is to build something
40:09 - and and
40:10 - it's really important to do that I think
40:13 - it's really important to just get your
40:15 - hand dirty and do something if you have
40:17 - somebody that can mentor you and help
40:18 - you get through the process that's
40:19 - amazing
40:21 - um but like sometimes you don't have
40:22 - those resources and there's other
40:24 - resources out there that are makes it
40:26 - easier for you to accomplish that go
40:28 - ahead yeah yeah
40:29 - um and uh that's that's a great Point
40:31 - learning uh by doing and I think
40:33 - oftentimes people can do like uh or get
40:35 - paralysis by analysis right like they
40:38 - they think about it too much instead of
40:39 - just like jumping in it's like trying it
40:41 - out um I love the part too
40:43 - um on the first slide that you noted
40:45 - about like uh yes you can get
40:48 - certifications or degrees or you know
40:50 - attend bootcamp or whatever it may be
40:52 - but at the end of the day it's really
40:53 - about like what you create right and so
40:55 - maybe that parlays into when and I'm
40:58 - sure uh you've interviewed quite a few
41:01 - prospective uh Engineers who want to
41:03 - work at Salesforce or maybe you know at
41:06 - CVS or intuitive interview uh folks
41:09 - um there too but I'm sure this is like
41:10 - one of the reasons why
41:12 - um having like a portfolio where you can
41:14 - like show your work what you've actually
41:15 - created is a lot more important than
41:18 - like uh the degrees or the camp or even
41:21 - like using cocaine like yes you can get
41:23 - a certification on cocami right right
41:25 - but you should still have like a
41:26 - portfolio to demonstrate like how you've
41:28 - applied what you learned uh to create
41:30 - something oh yeah it's it's really
41:33 - important because that's that's actually
41:35 - we could all get a certification I could
41:37 - go
41:38 - and take a test and fudge it and pass
41:41 - right but at the end of the day about
41:44 - anything in regards to Tech is more
41:46 - about what you got done and so I think
41:49 - when this is a little bit weird because
41:51 - like when I started going into industry
41:53 - we didn't it wasn't a norm for engineers
41:56 - OR tech people to have a portfolio
41:58 - that was something you typically oh
42:00 - designers do that
42:01 - but nowadays is actually very beneficial
42:04 - and the thing is though and kind of give
42:07 - let everyone know like how I do
42:09 - interviews like
42:10 - I when I interview people I really don't
42:12 - care if you got the right answer it's
42:15 - good if you get the right answer
42:17 - but what's more important is how you got
42:19 - to the right answer I want to hear
42:22 - how you accomplish it what struggles
42:24 - what did you do when you hit a struggle
42:27 - right and the best way to get real
42:30 - answers for people from people
42:32 - that's not to ask them hey Jonathan what
42:34 - was the um a time when you hit into a
42:36 - struggle and what did he do like anyone
42:39 - can make up a story for that right but
42:41 - if Jonathan has a project on his resume
42:43 - or I was able to dig and look at his
42:45 - project I'm like hey Jonathan
42:46 - you worked on this project super cool
42:49 - um I'm pretty sure you you ran into a
42:51 - lot of challenges can you tell me about
42:52 - them can you tell me how you designed it
42:53 - what what you do this thing feature you
42:56 - added in looks really difficult
42:58 - how did you make that happen
43:01 - and then what Jonathan says partially is
43:04 - he's gonna be super happy and passionate
43:06 - about because it is a pride and joy that
43:08 - he did
43:09 - and then what's going to end up
43:10 - happening is I could see how his brain
43:12 - thinks
43:13 - how does he work with other people on
43:15 - the team because it is team software any
43:18 - software any tech companies now is
43:19 - collaborative it's no longer siled
43:21 - but it's all about how did Jonathan get
43:24 - stuff done at the end of the day and
43:27 - then and then um in in this case if I
43:29 - were interviewing I'm with you I can
43:31 - actually share my screen like actually
43:32 - walk through the project and just go
43:37 - from top to bottom about like how I did
43:39 - it right and they'll provide the union
43:40 - of context yeah and that's really kind
43:43 - of like the key is the you know we it's
43:45 - all about what we get it done right and
43:47 - the one thing I got I will throw a
43:49 - caveat though uh for interviews like so
43:52 - that's how I do my interviews
43:54 - um
43:54 - there are people with different opinions
43:57 - on how to do interviews there are going
43:58 - to be interviewers that really care
44:01 - about you giving them the right answer
44:03 - there are going to be interviews that
44:04 - are care that you
44:06 - um
44:07 - recite something from operating systems
44:10 - class in college like I actually had an
44:11 - interview with her like how would you
44:13 - send messages and blah blah blah and I'm
44:16 - just like uh I learned that in operating
44:18 - systems like 10 years ago
44:20 - I could tell you how I would do it now
44:22 - and which but like you have to just when
44:25 - you do interviews is make sure you just
44:26 - as you talk to the person who feel them
44:28 - out you could kind of understand what
44:29 - kind of answers they want because they
44:32 - will react based on what you say and
44:35 - like I will say though those who are
44:37 - less senior are more tendency to want
44:41 - you to give them the right answer
44:43 - or give them the answer that they expect
44:45 - while those who are more seniors
44:48 - that has a lot of work experience
44:50 - they're more tendency about wanting to
44:51 - understand you and who you are what how
44:54 - you get things done
44:57 - now thank you for the context and
44:59 - sharing your experience on that
45:02 - um switching Gary's a little bit we're
45:03 - gonna uh shift to uh the Q a section uh
45:07 - of this chat
45:08 - um a question that was asked
45:11 - um earlier by Ned uh was besides Google
45:15 - do you have any other resources such as
45:17 - stack Overflow or anything else in that
45:20 - regard that you use yeah so um so even
45:24 - though I say Google uh Google as we all
45:26 - know became that general term of just
45:28 - search it
45:30 - um I personally do enjoy Google I have
45:32 - peers that like Bing which I don't
45:34 - understand why but you know personal
45:35 - preferences it's the whole emac versus
45:38 - VI arguments which one's better but um
45:41 - stack Overflow is amazing
45:43 - um the odd thing enough is because I use
45:45 - a search engine I actually find a lot of
45:48 - different resources some of them are
45:49 - that very not as popular or famous
45:52 - because blogs like I actually have I
45:54 - don't do that many blogs but I do have
45:55 - one or two blogs on certain areas that I
45:57 - struggled with a lot and I wanted to
45:58 - share so
46:00 - I would say like stack Overflow is one
46:03 - of the best bikes to look for but for
46:05 - everything else I would just say like
46:07 - as part of a job as an engineer or like
46:10 - being in Tech is like how do you filter
46:12 - information
46:14 - and such and that's kind of where it is
46:15 - is like use a search engine Google et
46:18 - cetera look for things and even blog
46:20 - posts just dig in and then use think
46:22 - about it does the stuff they're saying
46:24 - make any sense
46:26 - because if it makes no sense
46:29 - then it might not make sense it might
46:31 - not work right and this is kind of thing
46:33 - is as the problems get harder and harder
46:36 - you're going to run more time where
46:37 - things don't make sense but you have to
46:39 - puzzle these things a bit a bit to
46:42 - figure it out and the thing is like
46:44 - doing some coding you also got to be
46:45 - careful right with people doing phishing
46:48 - and all this other stuff like maybe the
46:50 - you know the infamous thing that back of
46:52 - this is rm-rf star which is to delete
46:56 - everything on your computer
46:58 - you don't just run things without
47:00 - understanding it first so
47:02 - stack Overflow is always going to be my
47:04 - one of the best areas but I've seen some
47:06 - Google Groups that really good content
47:08 - on certain topics
47:10 - it just really depends on what
47:12 - information you need and at the end of
47:14 - the day you deciphering what it is
47:18 - right right it's so it's a little bit
47:20 - more nuanced and I'm sure too that you
47:22 - use uh multiple different resources to
47:24 - kind of triangulate whatever the the
47:26 - truth or the solution that you're trying
47:29 - to figure out so
47:30 - um yeah
47:31 - uh let's see this one is from Alona
47:34 - excuse me if I'm not saying that
47:36 - correctly uh Jimmy you have a pretty
47:38 - fantastic background and could work for
47:40 - any tech company in the Bay Area I
47:42 - totally agree
47:43 - um why have you selected Salesforce what
47:45 - excites you about Salesforce and your
47:47 - role
47:49 - um so I think this is two parts of this
47:51 - um and Jonathan knows a piece of it but
47:53 - I'll tell everyone so part of the reason
47:54 - I like Salesforce is the fact that uh
47:57 - Salesforce um is was very open for us to
48:01 - actually learn
48:03 - um a lot of companies traditionally you
48:05 - when you join into a company you're kind
48:06 - of stuck in that team that's now
48:08 - changing a lot uh but one of the things
48:10 - is when Salesforce when I joined they
48:12 - actually had this thing called open
48:13 - opportunity Market which meant once you
48:16 - get into engineering at Salesforce
48:19 - if you're bored you want to learn new
48:22 - challenges if you are you may not like
48:24 - your team or your manager you do have an
48:27 - option of looking for other teams within
48:29 - the company that are engineering that
48:30 - you could switch to the cool thing is
48:32 - you didn't have to interview
48:34 - and so actually while my tenure at
48:36 - Salesforce I've actually been on seven
48:38 - different teams
48:40 - um trying different Technologies and I
48:42 - didn't have to have the background and
48:44 - so it was really cool to be able to jump
48:45 - around learn from people
48:47 - um it's great for the company because
48:48 - people end up saying longer so that was
48:50 - part of the reason it was a very back in
48:52 - the day was really startup culture which
48:54 - was really nice now that we're much
48:56 - larger it's a little bit harder but the
48:59 - challenges we do like you know chachik
49:01 - tea AI
49:02 - you know we Salesforce we just started
49:04 - doing that a few months ago we already
49:06 - released products that are in that space
49:08 - it's really quick and how quickly we are
49:11 - to do things and it gives a lot of us
49:13 - opportunity to actually build and learn
49:15 - it the other thing um is actually in
49:18 - regards to philanthropy so I founded the
49:20 - Asian ERG at Salesforce called Asia pack
49:22 - force and we for those who don't know
49:25 - what ergs are we're kind of like clubs
49:29 - um that's around a demograph so we do
49:31 - have the black ERG the Asian ERG the
49:34 - women's ERG lgbtq y ergs and the whole
49:37 - point of this is to create a community
49:38 - for our employees to feel safe to have a
49:41 - voice to help us with professional
49:42 - development resources but also to help
49:44 - educate those around us but one thing is
49:47 - also to help advocate for our community
49:48 - within and outside of the company and so
49:51 - being one of the founders of the Asian
49:53 - ERG gave me opportunity to actually take
49:57 - my volunteerism to the next level
50:00 - I was able to build a group that has
50:02 - over 8 000 members at one uh to a
50:05 - particular point I think we have more
50:06 - now
50:07 - um we're now global I was able to start
50:09 - using my own technology skills to
50:11 - actually build technology to help these
50:13 - ergs and the involvement with our office
50:16 - of equality and helping Drive some of
50:18 - the initiatives and some of the
50:20 - direction that we have is in for me that
50:22 - was the whole idea of the whole thing
50:25 - with Salesforce around equality
50:27 - was a very big factor of why I'm still
50:30 - there is because I really I'm not at
50:33 - this point in my career where it's not
50:34 - just about making money it's not just
50:36 - making technology it's on the same line
50:39 - as how can you do impact and I think
50:41 - there's
50:42 - um helping communities uh whether it is
50:45 - our users or our own employees
50:48 - is actually very important and they
50:50 - support that
50:52 - and that's why I'm that's why I'm still
50:54 - around
50:55 - yeah and it's super cool too uh that
50:58 - Salesforce lets you do that because I
51:00 - know that one of the main reasons why
51:01 - people uh leave companies is because
51:04 - they feel like they're not growing so
51:05 - the ability to move to learn something
51:07 - else right is a huge advantage and
51:10 - people are able to acquire
51:12 - um new skills and the fact that you're
51:13 - able to only be an uh a leader as an
51:16 - engineering Elite but then also uh
51:18 - create
51:19 - um the sales forces uh Asian Pacific
51:22 - Islander uh ERG first one ever that's
51:24 - another leadership opportunity and for
51:26 - those that don't know Jimmy Jimmy is a
51:28 - big mover and Shaker uh Loki you know
51:30 - he's using that at a lot of people
51:32 - um and so we're very lucky to have him
51:33 - in his time um but yeah that's that's
51:36 - amazing and there's it explains why that
51:39 - Salesforce is often on glass tours like
51:42 - top 100 best places to work right so
51:44 - yeah
51:46 - um thank you for the Insight uh another
51:48 - question from Lewis uh when do I know I
51:50 - have the required knowledge to start
51:52 - building Tech
51:55 - um I would say you if you know that you
51:58 - have the ability to do so you waited too
52:00 - long
52:01 - um Tech is one of those things that you
52:03 - will never know enough to really do
52:06 - stuff because the issue is if you start
52:08 - learning things on a general basis
52:10 - you're kind of doing a shotgun approach
52:11 - right you're learning all these things
52:14 - um if you even know a little bit you
52:16 - should just start doing a project right
52:18 - maybe it's something like I want to
52:19 - create a database to uh manage my to-do
52:23 - lists
52:24 - right instead of using a going on the
52:26 - App Store and grabbing an app build it
52:29 - right there's Technologies out there
52:31 - there's stuff Frameworks uh platforms
52:33 - you could use to do some of this just do
52:35 - it because actually the nice thing about
52:37 - that is that you will not know how to do
52:39 - it but because you have a goal in mind
52:43 - and a mission
52:44 - at least you can actually start
52:45 - understanding well what do I need to get
52:47 - to learn in order to make that happen
52:49 - right so the key thing with and I always
52:52 - keep saying key things there's a lot of
52:54 - key things but
52:56 - one of the roles of an engineer a
52:58 - software engineer even a programmer is
53:01 - our ability to take a complex problem
53:03 - and break it down
53:05 - if you try to tackle a big problem as
53:08 - learning how to program
53:10 - then that's too hard
53:13 - that you're directionless to some of the
53:15 - books in but what you could be is like
53:16 - hey I want to make my own to-do list
53:18 - okay well what does that mean well I
53:21 - have to have to have the UI
53:23 - I have to have like a back end to
53:26 - actually store that data well I don't
53:28 - know how to do the back end right now
53:29 - but maybe I'll focus on the UI
53:31 - well then maybe before I do that I could
53:33 - just use sketches
53:34 - there's tools out there to do sketches
53:36 - you can do it on a napkin if you want
53:37 - and then you can slowly say hey let me
53:39 - use this UI tool just to make something
53:41 - that look like it
53:43 - and so if you could take breakdown these
53:44 - pieces on how to do it you actually
53:46 - be able to get stuff learned faster be
53:50 - able to get more directed information
53:54 - um and get things done but if you wait
53:56 - until you're ready or you know
53:58 - everything
53:59 - I would have never become an engineer if
54:01 - that was the case
54:03 - because there's way too much information
54:04 - because by the time like I said by the
54:06 - time you learn something in about four
54:07 - or five years for later it may not
54:10 - be relevant anymore
54:11 - so the the bigger thing you learn out of
54:13 - it it's not how do you actually do it is
54:16 - how do you actually strategize of making
54:18 - it happen how do you break down the
54:19 - problem and then how you tackle each
54:21 - piece because even now when I even doing
54:23 - the same thing I don't say I'm gonna do
54:24 - the same thing I did before even if it's
54:26 - building a I think I would be like okay
54:28 - this is what we did before
54:30 - did the environment and the industry
54:33 - change where I need to change the
54:34 - technology underneath that I'm doing now
54:36 - to make it more relevant
54:38 - um
54:40 - it goes back to your point about like
54:42 - learning by doing right
54:44 - yeah and then you're also getting like
54:45 - that positive feedback loop as you're
54:47 - building something like oh my gosh this
54:48 - is like so cool right yeah Milestones
54:51 - you have stuff like we have to have
54:52 - these small wins if you don't have the
54:54 - small wins it is a terrible journey to
54:56 - go on yes yes for sure
54:59 - um we I know we have tons of questions
55:00 - we only have a total of uh one hour
55:04 - um uh Buffet if you could uh drop
55:06 - Jimmy's uh email uh in the chat so if we
55:08 - don't get to your question uh you're
55:10 - more than welcome to email uh Jimmy
55:12 - directly we have another question here
55:14 - from Robert Tucker
55:16 - um hi Jimmy is it possible to get into
55:18 - it and data analytics even if you have a
55:21 - different degree and very little
55:22 - knowledge and experience in certain
55:24 - areas of computer science and software
55:26 - programs
55:27 - um definitely
55:29 - um so as we were looking back at the the
55:31 - Spectrum with um uh Information Systems
55:34 - um a lot of that is more on how do you
55:38 - work with people and the business side
55:39 - of this goes that's why it typically
55:41 - falls under the College of Business
55:43 - um
55:44 - the things with it about how to using
55:46 - technology how to build also the one
55:48 - thing about it you also have to remember
55:49 - there's actually a spectrum of I.T
55:50 - there's you know the IT Help Desk gun
55:53 - like oh I can't log into my computer
55:54 - issues but then there's also like hey
55:57 - Brit we manage the computer networks or
56:00 - we're building technology underneath you
56:02 - could pick one of those that has
56:03 - actually like a little bit less
56:04 - Technical and you can actually get into
56:06 - that first and you can actually pin it
56:08 - over as you develop and grow these
56:09 - things
56:10 - um but like definitely that's why I kind
56:12 - of explained the whole spectrum between
56:14 - the different Industries and different
56:16 - areas and Majors because
56:18 - if you look at that it gives you any way
56:21 - you want to get into Tech
56:23 - the question is where do you want to go
56:25 - in and how long do you want your journey
56:26 - to get to the next spot you want to be
56:28 - so if you do not have the it exp you
56:31 - don't have the tech experience
56:33 - I'm trying to learn about computers jump
56:34 - learn about networks uh figure out a
56:36 - niche that's actually a perfect way like
56:38 - certification stuff can bootstrap you
56:40 - into learning this information quickly
56:42 - and then if once you get in you could
56:44 - actually slowly pivot um and learning
56:47 - and building up your scope because the
56:48 - nice thing is once you're in it it's a
56:50 - little bit easier to Pivot but the key
56:52 - thing is you can go talk to somebody
56:53 - who's doing what you want to do and say
56:55 - hey
56:56 - what do I need to do to do what you're
56:57 - doing
56:59 - and how do I get there how did you do it
57:01 - and you can learn from others because
57:02 - like I'm gonna say to get to the same
57:04 - point no two journey is the same
57:07 - if I become an engineer it's not going
57:10 - to be the exact same Journey as you are
57:11 - or Jonathan or anybody else so we our
57:14 - goal our role is to learn from what
57:15 - other peoples do but we have to make our
57:17 - own Journey but at the end of the day
57:19 - like
57:20 - there are ways to get in and the biggest
57:22 - help is actually just tapping someone on
57:25 - the shoulder and getting that help
57:27 - that's that's important why uh not
57:30 - working reaching out authentically
57:31 - trying being proactive doing things
57:35 - right um is the best way to do it I
57:37 - think we have time for like one more
57:39 - question and Jimmy I don't know if
57:40 - you're able to uh say this uh concisely
57:44 - um but let's see here oh so many good
57:47 - questions which one to pick
57:49 - um
57:50 - okay let's see oh okay this one where's
57:54 - the best place to learn Salesforce
57:57 - depends on that one out there yeah oh
57:59 - that one's pretty straightforward uh so
58:00 - Salesforce we have a a website called
58:02 - trailhead
58:04 - um and if you go Google search
58:05 - Salesforce Trailhead we actually have a
58:08 - huge Learning and Development platform
58:09 - that we built to kind of to help our
58:12 - um Community to actually learn how to do
58:14 - Salesforce so you could pick a
58:15 - particular track like developer
58:17 - architect admin
58:20 - um even we even have courses on AI you
58:22 - could take the trail there's quizzes
58:23 - there's stories there's videos there's
58:25 - uh Hands-On activities you can do and
58:28 - that's pretty much the quickest way to
58:29 - learn it with the lowest hanging fruit
58:31 - and then as you go you want to do that
58:33 - you can also go get your certification
58:35 - and they'll like reinforce to people or
58:37 - give you credibility but if you want to
58:40 - learn it that's the best place to learn
58:41 - is trailhead
58:42 - that
58:44 - so good I knew that was like the best
58:46 - last question
58:47 - um so uh that is our time for today
58:49 - thank you so much Jimmy for
58:52 - um you are uh a philanthropist you are
58:55 - venture capitalist
58:56 - Salesforce there's so many other things
58:59 - that I did not know
59:00 - um in the intro so we appreciate you
59:02 - taking the time to not only create these
59:04 - slides provide this like overview on the
59:06 - different kinds of fields and the
59:07 - different kinds of education but then
59:08 - also taking a time to answer uh the
59:11 - questions from our uh diverse uh
59:14 - worldwide meaning of uh Learners again
59:16 - uh Fede uh dropped the email and a chat
59:20 - so feel free to email Jimmy uh with your
59:22 - questions and we also have
59:26 - um an event right after this about like
59:28 - breaking into the tech with our
59:29 - curriculum team fighting if you could
59:31 - also uh drop that in the chat that'd be
59:33 - greatly appreciate it going from uh two
59:35 - to three uh PM eastern time uh last but
59:38 - not least aside where I'm attending the
59:40 - event feel free to subscribe uh to our
59:42 - YouTube channel and uh stay up to date
59:45 - with everything uh code academy events
59:47 - again Jimmy thank you so much and I hope
59:50 - you have a good rest of the week as well
59:51 - as our attendance uh everyone who
59:53 - attended today so talk to you later
59:56 - thanks everybody
60:02 - and you're off the hook

Cleaned transcript:

and we're live hello everybody Welcome again to our back to school series of live streams this is day four of four this week I'm Jonathan Turing the head of commute here at COC Henry I'm joined by my colleague Mariana Benjamin one of our community managers who is monitoring our chat another Community manager uh Betty Lorca who is also our student specialist and our guest speaker today at Junior Quan Jimmy has spent 12 years at Salesforce currently as an engineering lead with eight granted patents and four waiting to be granted he's the copresident and founder of the Asian leaders Alliance a volunteer at live Coalition of more than 950 Asian native Hawaiians in Pacific Islander employee resource groups with over 3 000 members worldwide which includes Moi uh if that were enough he's also an advisor and angel investor for several companies he's passionate about software engineering and has a great interest in software methodologies and processes and in terms of specialties there's a long list he excels in Java C plus plus HTML opengl JavaScript CSS XML X query and more and due to its background as a computer science major he can pick up most languages and Technologies uh we will have a q a session at the end but feel free to ask questions throughout the event and I'll try to to ask them whenever appropriate and uh if you do ask questions or comment please remember to add here to our community guidelines by keeping things respectful um so enough of me talking Jimmy please uh take it away oh awesome thank you Jonathan and I thank you everyone from code academy to being part of this and making this happen and I want to thank everyone who's actually watching this live or watching this in the future because you know the whole point of what a code academy is trying to do is actually trying to help everybody in the community with knowledge and learn and grow and so that's part of the reason why here is I want to depart some of this knowledge that I've learned over the years some good some bad um but kind of getting into myself who I am um so first and foremost um you can't really talk anything about yourself without talking about your identity so I'm ethnically Chinese and culturally Vietnamese I'm son of a Vietnamese Refugee mother who's a single parent who raised me and raised my younger brother who has type 5 cerebral palsy um to me that's really important because that drives a lot of reason why we all want to do something that drives our future it drives our past it drives our passion and it also takes an account why I have certain things that are really important to me such as Asian leaders Alliance and being to being to uh speak about my identity and the fact that I'm not just Chinese but I'm also Southeast Asian I'm also Vietnamese which is different uh different Asian I was born in Minnesota uh Minneapolis I moved out to LA to live with my family my uncle and my grandmother and such and went up the coast to go to college and go to work um in terms of my Academia like one would expect I'm a software engineer I'm smart ah not really it's it's it's not about how well you do in Academia it's actually about how do you grow and Thrive under struggles right um as those of you who are doing programming or software or even doing anything in life you're always going to run into struggles right there's gonna be a brick wall you can't figure something out um so for me like I when I was in um Elementary School I actually got exposed in Minnesota to computers there it was a magnet school it was very specialized it had computers it was a public school and I was fortunate to be able to go there the entertaining part that Jonathan will probably understand as somebody who's also from Minnesota I was in a school with I was the only Asian individual in a school of 10 000 students um and so that for me was kind of a struggle figuring out like who am I what am I doing um the stereotypes back there wasn't necessarily all Asians are good with computers or something like that it was more about like you know we're supposed to be smart and such but as I went through my Elementary School in junior high like I would see average I didn't really get great grades I struggled and a part of it had to do culturally like my family was there pushing me to get better or get study and stuff but they weren't there necessarily helping me do it they were just telling me to do it I was actually then sent to military school but on a threat that if I didn't get straight A's I would be since military school and I thought it was a you know a bluff unfortunately and probably fortunately it wasn't uh I got sent to military school in eighth grade I was living there as a student uh for multiple weeks and stuff like that for the whole school year but the one thing that was interesting with to me was I actually learned a lot of things there uh military was more structured but the one thing that was interesting is as contrary to what your beliefs and what you see in the movies and stuff they're tough but they actually provide you with all the support you need in order to grow and so I actually took a q basic class there and I got so much support on learning being helped at helped to grow but then I also had to figure stuff out my own and actually ironically I my grades came up I actually ended up with Straight A's in military school um and it was the foundation of how I kind of approached life in how I approach programming is like you have to put some elbow grease in there but you also have to go and have that support around you um after military school I actually ended up going into a Technical High School which we had Majors so I made um there's Majors like power and transportation design architecture Aerospace I ended up taking computer science um as a major in high school which is very unique compared to other people that are typically in the industry um a lot of people who got exposed to computers either did it through college or they actually picked it up on their own um I was one of the few people going into University that has formal studies in computer science and I actually struggled for the first year on what this all meant like nobody around me knew how to do programming I had to learn C and C plus um had work in teams on how to build things out but over time working with people I actually learned how to do a lot of these things and when I actually went to college I went to Cal Poly San Luis Obispo and it was kind of like holy cow I actually kind of know my stuff there are p and I at first thought I was like brilliant because I know how to program I learned this in school but I also ran into a lot of individuals that were smarter than me it wasn't because they were exposed to programming early and that they were coding um formally they actually picked it up on their own and so one of the big things I learned is that like you could have Engineers that can be just as smart or smarter but it doesn't mean that they have the same background the same experience and that experience in that background actually makes you who you are and what type of engineer you are but at the end of the day it's even more about what type of person you are some people as we go through college or as you work in Industry you'll notice that some people went into computer science or doing software because of the money right it's good pay uh but there's others that went through it because they love doing it the reason I went into computers is when I was going to the Technical High School Don Bosco Tech I was like holy cow I could imagine everything being ran by computers street lights um financials all the stuff I'm like wow can you imagine the impact that you could do the positive impact the fact that you could do something that's tangible that could actually help people's lives be better they can help financials and small businesses to do better um and it it can have an impact by little things and it's the one thing is that unlike other engineering if you could imagine computer something in computers you could kind of do it yourself you don't have to you're not fighting against physics for the most part you're just creating a digital world that's doing things and so because of my passion of wanting to help I actually did my undergrad at Cal Poly um I went to do my masters at Cal Poly also um and then after that I actually went out to work at a company called Intuit and most of you all may not know what Intuit is but they're the makers of Quicken QuickBooks Turbo Tax um Quicken is not really as popular now but you may all know mint.com um and I went in working um on their QuickBooks Online I was an intern on their quick desktop team went over to their QuickBooks Online team as one of the first reboot Engineers of the reboot team um and we it was just my way being like wow I could help hundreds of thousands of small businesses to do something they all hate to do which is accounting they want to do their business they want to sell county is just kind of an unnecessary Evo but we made it easier for them um after working on Intuit for a while I got affected by the layoffs that were at that time it was a really big struggle for me because I started questioning am I a good engineer what kind of engineer like is it did I get laid off because I just sucked or because was just the what was the decision was made I learned that it wasn't because that I wasn't good it was because that it was the economy and they had to make decisions and unfortunately as the in one of the more recently joined Engineers I was affected um and that was actually part of the reason why I also got into doing philanthropy and volunteering because it actually helped me with my mental health about how do I struggle going through hundreds of interviews trying to defend myself against interviewers about well why did you get laid off um but because of that I learned that you know sometimes stuff happens you just kind of go through it you kind of find other ways to redirect your energy and for me that was volunteerism after that I joined the uh my company called CBS Interactive they're one of the daughter or child companies of CBS corporations which we handled all their online content so I was on the original CBS canteen which is CBS Audience Network and we built out their video distribution structure infrastructure and their live streaming so if you're watching any video on any CBS properties right now um you know Star Trek David bloodman.com theinsider child.com that whole video infrastructure and the streaming was actually built by a four of us from scratch and that when I left about there about 12 years ago it was doing over 20 million streams a day like think of just those numbers like the Ridiculousness of oh I could do something and millions of people are being affected um after at CBS I end up switching over and joining Salesforce which um is even more interesting to me because I ended up I hated Securities in college did not like it I ended up on a security team at salesforth doing authorization security I end up that's actually where a bulk of my patents came from working with some of the smartest people I ever worked with building out technologies that didn't even just affect users in fact every single user that logged through our system which was like millions of you hundreds of millions of users and it was one of those things that you realize like wow if I messed up all these people can't get access to anything so it kind of gave you the scope of understanding like what impact you could do with just a little bit of effort one story I do want to do uh talk about before we jump into like the other bulk of the conversation we have with Jonathan is that there you don't have to know everything so to give you a story um and one of my mentors are probably going to get a little annoyed if I said this but I'm gonna say it anyways because it's a funny story my interview at a Salesforce I came in and one of the Architects came in interviewed me and it was just really entertaining because the guy typical engineer not very talkative um kind of a straight to the point he's like hey Jimmy I want you to build uh write us a SQL query for Oracle that would join these three tables and I want you to tell me not the first top paying person in each department assuming that one table has people's salary one table as Department who's part of what department Etc he's like I want you to give me not the top paying person but the third top paying person and nobody else in those for each department and I've never seen that before like I've worked in PL SQL and I was telling him can I do PL SQL he's like no it has to be SQL this is an Oracle database and you should not just give up there are some people that would just be like oh crud or they'll try to make up an answer what I end up doing which actually conversations with my mentor later on he was saying that this is part of the reason why he really liked me when on the interview was he was like hey I went like okay well I'm gonna tell you what I do know right now I could join these tables I could sort it this way I could do this this would at least set up the tables where I have people in a sorting ascending or descending order of salary per Department by departments and I was just like but you know what I don't know how to pick the top number third instead of the first I could do it in PL SQL however I'm pretty sure it's Oracle you all pay millions if not billions of dollars to use Oracle databases I'm pretty sure they made a convenience method or function in uh SQL in order to get that information I'm probably just going to Google search that and he sat there and he's like you know for somebody who doesn't know the exact answer your answer is exactly right and that's actually the thing I learned from that was like it is more important to not prove that you know everything but to actually show the limits of what you know but showing that you're able to actually learn from it and be able to figure out the answers because as engineers we don't just solve problems we solve problems that typically hasn't been done before and we will unlikely be able to know the answer and nowadays a lot of things I don't know even Google can't help me I half of the problems I have to figure out I have to use what I find on Google use my personal experiences and also conversing with my peers on how to find a solution for that so I kind of want to stop right there and like kick it back to Jonathan but that's kind of a big longitude intro no that is thank you so much for uh sharing your background as well as uh that story uh I think that another takeaway or maybe to phrase in a different way is that you show that you are very coachable and it's not about having the exact answer right but like how you go about finding uh the answer so that is great like showing your thought process aside from that uh with all the things that you've been able to accomplish such as working for CBS and the 20 million I think you said 20 million uh streams a day which is I can't even like comprehend that um yeah and that's that was like 12 years ago so the infrastructure is still there it's probably a lot more now yeah yeah for sure um as well as um uh working for Intuit I use mint.com so maybe some of the things that are on on the back end like you were responsible for but I think with all that said uh your journey right and we haven't even gone into the other things you've done such as like your volunteer work but it just shows that um and it answers your question after you got laid off into it that you are a good engineer so uh you've been able to experience so much success so thank you so much for sharing your story and before we dive into um the meat so to speak of uh this conversation I just want to Jimmy you know I just want to let you know that with all the people who are um attending uh this event live we have people from Mexico City Milwaukee Wisconsin um La Kazakhstan Nairobi Kenya Finland um India so this is definitely a global audience so you're not um it's not just catering uh to the US which by the way Jimmy is based in San Francisco uh right now is that correct San Francisco yes so um but yeah thank you so much uh again for sharing your story especially along the part too about how you are identity is a huge part of like your trajectory so to speak of what you want to do or who you are as like an engineer and um and Beyond so um but yeah thank you okay awesome so I think uh we want to jump into the book of the meat so today um one of the things I wanted to talk about is the there's all these things about getting into the software industry uh getting into all these things and one of the things I've been noticing is that there's just been a huge Mis um potential misnomer misunderstanding of what those all mean and so I am sharing a slide right here hopefully you all could see or it's the wrong one actually right um you know this things are always kind of fun to try to figure deal with all this stuff but um hopefully this time it's the right side um but one of the things I wanted to cover was actually to have people understand of like the differences between the different Industries I even when I went to college it wasn't super clear about what was the difference of all these different Majors that were computer related and I think it got even more complicated as we went into industry so I kind of want to take a back um and when it started in the Academia that when you're actually learning about computers um so there's two sides of this uh slide that you see here one side is more about college and university and then one is kind of more of an area called trade schools trade schools are kind of like boot camps trade schools are more of a traditional term that's used in the past because back in the old days it was leather working blacksmithing they were really geared about teaching people how to do the work um they may or may not go into the the science or the theory behind it but it was more emphasis on you being able to do the work and there's also the university in college side where um at least here in the U.S I know every country's slightly different but I think it's similar inter it's more of a general um education around that area so in the US we do have things called general education you learn everything from Communications to other areas while I do know like India and Germany when you go to college and you focus on a major the vast majority of your coursework is in that Focus um so right here what I wanted actually to kind of explain was because I had friends new people that are uh kids or friends that are going into college they're like I want to do something computers but there's these different areas that I don't quite understand what they mean um some go straight into computer science because that's the normal thing some people go into Information Systems some people go Computer Engineering but what I want to kind of just have here is just kind of do the Baseline of that so if you look here on the scale from the University level from the left to the right side it's called um how much Hardware they teach you and then how much of its software so the far Spectrum on the harbor side if you look is electrical engineering you're pretty much doing all Hardware you're designing the circuit support and you're designing stuff the one area that you will probably do that's related to programming as you're doing low level coding they're doing bios's firmware um lowlevel stuff on there and you should have some experience you will be taught some experience in software encoding but not as much your focus is really the hardware doing the electronics so and the examples of people that work on that uh things that people work on that is obviously motherboard CPUs uh your handheld devices uh video games consoles Etc and the one that we all probably have on our hands is a smartphone like this um the iPhone Android uh the Samsung all the hardware there is actually created by the vast majority of their Hardware used by an electrical engineer As you move closer to Software you'll see something called uh Computer Engineering and computer engineering is kind of smack in the middle between hardware and software where you still have a high level of Hardware experience creating Hardware learning about more specifically CPUs but the other side you do do programming and so this actually means that the computer engineer is a very well versatile and typically both areas and it's pretty agile and switching from one to another computer science is kind of what the traditional thing that everyone knows across the story where you're learning how to build an operating system you're learning how to do language programming languages you create your own programming languages you code you do distributed systems architecture a lot of these are theories um those three things are kind of the traditional academias for that and most universities or colleges will have those three in some sort of way um but at the end of the day those three are purely more on the theory and the implementation side you'll see that there's two more Right Above It information systems and software engineering software engineering is actually if you look at software engineering as the way it is in the last 20 or 30 years software engineering is actually pretty young Building Products application products as a product you sell as a service it's pretty young because prior to that everything was more building Technologies to support a business and so that's why information system has been around information system uh you learn a little bit about the hardware you're not building them but you're learning up setting up Hardware networks system Networks you're learning how to do build computers or support computers you're learning how to build websites for a business need that is specifically so a company like Intuit would have an an informational system team that is building a internet for them or a way for employees to submit tickets or Amazon so those are typically specifically to one business and most universities have that um but the big emphasis on information system is about how do you use existing Technologies to support a business and typically information system falls under the College of Business all the three other ones that I was talking about earlier they typically fall under the College of Engineering or the College of Sciences depending on where they evolve from and um the one area that I do want to F and the one thing about information system is the key thing with that is part of the reason why they're part of the College of Business is you actually have to learn how to convert have conversations and talk to people and sell and explain to them what the things you're doing so that's why they're more on the business that's more focused around that um software engineering is relatively new as a major in a university um I know my University started offering it about 20 years ago when I was a student there um and I just stated myself I realized but it's very young and only a few dozen universities um at least in the US that I know of actually offers a big software engineering is kind of this new thing that everyone kind of tried to figure out but software engineering is all about how do you take um being more practical about software developments about building software for a business student so at a lot of these universities they're still figuring out what that really means a software engineering but at the end of the day one hand sound they all could probably agree on is that software Engineers it's more about how do you build teams how do you work as a team to accomplish something computer science typically you do most your projects on your own and siled in college and this is kind of a key factor because as you switch over to Industry you'll start seeing how they map because if you know in Industry there isn't anything called computer scientists there is but very very often not a lot of times it's a software engineer now if we look over at the boot camp special boot camps and trade schools these are specializations they typically are not uh multiyear they're typically a few months training but their whole goal is to teach you HandsOn on how to use a particular technology or a particular set of Technologies it's more about execution and getting things done the one thing is that you may not get to know the underlying of how things work like you get to learn how to use a programming language right like Java Etc but you don't understand how the garbage collect you may not be taught how the garbage collector Works how they allocate memory how they manage how they translate into bytecode um that doesn't mean that you can't though like everything I'm telling you right now is very um fluid because things change and at the end as I was telling you with my story a lot of this is very important to how you yourself um growth because you can you can learn yourself you have the passion to do it and you could do it and I've seen people switch back and forth I've seen electrical engineering going out doing software development and out there and it's awesome it's potential um and so a lot of these things that's kind of how they come out um and that's like code academy kind of falls into kind of like the education the trade stuff where they're actually teaching showing you videos content teaching you on actually how to do something right with the boot camp and all that stuff and that's kind of a key thing but like remember as you go do this understand that you don't actually know the full scope of everything and that's fine it's if you want to you can go out there and learn and I'm pretty sure code academy has that information there are other eight places have it but you don't need to know it but if you do want to go into software or going in to do more advanced things it's easier and better if you know these backgrounds but at the end of the day it doesn't mean anything unless you build something so as we go into the next site about industry this is where things is the big key thing that industry cares about is what did you build your Academia where you went to school what you did does affect it but if you made a killer app and you didn't go to a university and you didn't have this full Bridge they're probably still going to hire you if you build a killer app and it was out and people are using it um that's the one key thing that's interesting about software in general is that they don't really they use your background in your past to actually make some sort of assessment about you but at the end of the day it's all about what you've done more than what you've learned and so in the software side um we have to talk because there's a few different things there's how you got your Where You Are there's the Specialties and there's the rules right so I want to kind of explain the differences of the different rows in software um because I do get this a little bit and I do get a little bit annoyed when someone says hey Jimmy you're just an engineer you're just a programmer but there's actually very clear differences in those and so you and as I said before you could actually evolve yourself across this it's just about how do you handle yourself and what background you have so programmers as we assume is somebody who actually codes they write code they typically do it as by themselves they normally don't do it as a group they're in charge of a single component or their programming component and to depending on which company what organization you're getting guidance from somebody who's more senior whether they're a developer or an engineer or an architect but a lot of times you are mostly in Silo working on together when you go into and it's that's typically a role you'll see with Consultants or if you're working for smaller companies but when you're going working for companies like Google like uh Salesforce like Amazon uh we're not programmers there we're more likely to be a software developer or software engineer because the key thing that the word software development software engineer is that makes it different from our programmers we are required to work with other people we are not building a component by ourselves we are building it with a team of others and we have to have those conversational conversations with them speak uh speak with them collaborate have arguments about how we redesign and do things it is really around a team and not around an individual um so for software the difference between software developer and software engineer is software developers will do a larger system so they're building out a whole a whole system but it's still one piece of a larger ecosystem they do work on teams and uh their role is pretty scoped but they have the key thing is as a programmer you're probably just doing development and that's it as a software developer you're typically um handling endtoend which means you're handling the the the programming stage the creation of it the maintenance of it the upgrades when things go bad you're typically the one who fixes it well as a programmer that's not necessarily part of your job description and like I said the big thing with software the industries right now there's not very good terminology around it no one's gotten down to say hey what's the difference between this these are just things that you could kind of see based on why they use certain terminology the thing with a software engineer they if you want to kind of say they are more um like Architects they Design Systems they do the exact same thing as a software developer but the big thing with them is they also may have to worry about crosssystem Integrations building multiple systems that integrate that uses multiple Technologies they're typically thinking about more about big picture and how things would work and how do you maintain them in the future say for example with a system like Salesforce uh it's been around for about I think about 25 years you can't just slap code together and make it work on a system that has to work for 25 years you kind of have to think out and design how that would work how do you scale how do you pivot how the heck did Salesforce get AI into that so quickly part of it is because they had a team of individuals and maybe the whole company has a whole figure out how do we make it so we are agile enough to switch our Technologies and pivot if we need to when you go over uh and so it's all about this more responsibilities and also the bigger the scale work you're doing um in terms of how you get this there's degrees which like universities and a lot of times it's all about the degrees is more about how do you build the technology so how do you build a programming language how do you build an operating system when you go down to the certificate levels um a lot of them are more about how do you use a technology and that's the key thing I kind of want to just make people understand is um building a technology and using it is very different I work at Salesforce I build Salesforce I don't actually know how to use all of Salesforce I am we have a lot of people who are Salesforce administrators that got their certification that knows how to use Salesforce much better than I do but I built Salesforce I built parts of the technology and that's what it is and so there's a clear difference these are not necessarily interchangeable but obviously one who builds it can potentially learn it because they man it builds more or they don't understand the other link but those who've done certifications Nothing Stops them to learn how to build it it just takes a little bit of more effort and other background education that you may need to get in order to get that but I just want people to understand that if you're grabbing a certification remember that doing a certification is more about how do you use a technology or how do you use something while um those who are going through Academia is typically how you actually build that technology and that like I said you're you this does not stop you from learning it yourself uh many programmers especially those in the early 80s had to figure it out themselves but the reason I touched these two areas is because if you look at the far right there's all these things about Specialties you know you hear web web 3.0 blockchain Ai and then you hear these ads about hey you could take this certification and be an AI expert I want to just kind of disclose that uh disclose that a little bit is that that's not necessarily true um you're not going to be the same as an engineer that's working on it um it comes back to again there's when you look at each one of these web mobile Graphics data scientists AI databases all these across there's hundreds of these specialty areas getting the certification means that you're learning the basic theories around it and how do you use a particular technology in order to do it while if you're doing like a computer science major or a software engineer in that same industry and that area odds are you're the one who knows the theory that scientific engineering theory behind it and you're building the technology or you're building the next generation of AI so if you look at everyone at chat GPT right the engineers there that built uh chat GPT three T4 is being worked on right now they're the one who's pushing the envelopes of that technology um and a lot of it's experimental there's you could get a certification on how to use chatbt3 in chechb2 and that all it is is helping people to understand and use it or integrate it into what they're doing technologies that have been created or the apis have been opened up for you to use it and so those are kind of like the big differences I want to kind of point out for everyone um like I said this is always changing like no one there's nobody that sat down said oh this is how things are but what I'm just trying to explain to you is just what has kind of been out there and what's been the norm as I could see um but I mean yeah Jonathan what do you think if I mean I am welcome to kind of go deeper for some of this um I know it's a lot of content a lot of stuff but like my key thing is I just want to let people know is that um understanding the the big thing about excelling even in life is actually understand what you do and what you don't know and then the thing is what do you want to do and how do you obtain that goal yeah uh first off uh before we did the live stream um Jimmy shared with me these slides and I was like wow this is like such a great breakdown of uh the different um modalities as well as like Fields I think that with a lot of our uh with a lot of members of our community right they're they're mainly uh beginners and they're trying to figure out I want to work in Tech I don't know necessarily like where to start it there's some like for example underneath like if you want to work in like data there's so many different kinds of like data science related fields and so um what would be your recommendation for someone who especially if they're like completely switching Fields it won't be your recommendation for like having people figure out like what they want to do and I know that it's subject to change because people change like careers all the time or like within the Specialties like you could be working in web and then want to work in Ai and then work a mobile so on and so forth so um I um understand that but like what would be your recommendation for uh those wine to not only break into Tech but then trying to figure out like what they really like so I think in terms of breaking into Tech and even just learning something new like going into AI I think a part of it is like the traditional route people say is go back to college you better go back to school ah technology moves so fast right now like pretty much the things I've learned a few years ago in terms of how to use this technology is no longer relevant Academia my information from college gave me kind of the background to understand why things work but like going back to school to learn how to do something is just not quick enough for us now so now I think like actually taking advantage of stuff like code academy and stuff I'm going out resource there's actually really good websites on how to learn how to code um if you want to break into Tech like sometimes I think a lot of us are more HandsOn right um Cal Poly San Luis Obispo the university I went to we are our motto is learn by doing and I think this is a perfect place to speak I'm saying I learned by doing so if you don't know about tech you if you have somebody near you that you can talk to about it do it because that has that personal connection where you can ask them questions that is specific to you if you don't there are resources I mean code academy I assume you all have resources all these other stuff you can Google there's human certifications go and learn about it a little bit do a lot of these sort of some of these certifications there are online classes that you can take for free and jump in invest a little bit of time to learn by is it something you like is it something you enjoy um I guarantee you the first you start doing Tech and I'm going to tell everyone straight off you might hate it at first but as if as we do with everything just give it time put in a little bit of effort play around you might start seeing that you actually really love the struggle it's really really narcissistic or like for me our best assistant for me it's like I actually like kind of enjoy the struggle of figuring out how to do something because when I actually solve something it's like holy cow this is awesome and that 10 seconds of Happiness makes up for like the 10 hours of being in my head against the wall so a lot of stuff I would say jump in try some stuff to control if you feel like it is something you enjoy digging deeper if you want to take AI you don't actually have to learn how to do programming to do AI there are certifications you could use uh there's other stuff where you could just start getting your hands wet maybe just don't even bother that jump on chat and start playing around with the open AI chat GPT to see what it's capable of and as you kind of dig in through this you kind of see if that that's where you'll start figuring out like oh is this cool is this something I would willing to waste put my time on I kind of want to say waste because sometimes it is but where are you going to put your efforts and then after you kind of like you know what I don't want to do something I think the best way to learn something is to build something and and it's really important to do that I think it's really important to just get your hand dirty and do something if you have somebody that can mentor you and help you get through the process that's amazing um but like sometimes you don't have those resources and there's other resources out there that are makes it easier for you to accomplish that go ahead yeah yeah um and uh that's that's a great Point learning uh by doing and I think oftentimes people can do like uh or get paralysis by analysis right like they they think about it too much instead of just like jumping in it's like trying it out um I love the part too um on the first slide that you noted about like uh yes you can get certifications or degrees or you know attend bootcamp or whatever it may be but at the end of the day it's really about like what you create right and so maybe that parlays into when and I'm sure uh you've interviewed quite a few prospective uh Engineers who want to work at Salesforce or maybe you know at CVS or intuitive interview uh folks um there too but I'm sure this is like one of the reasons why um having like a portfolio where you can like show your work what you've actually created is a lot more important than like uh the degrees or the camp or even like using cocaine like yes you can get a certification on cocami right right but you should still have like a portfolio to demonstrate like how you've applied what you learned uh to create something oh yeah it's it's really important because that's that's actually we could all get a certification I could go and take a test and fudge it and pass right but at the end of the day about anything in regards to Tech is more about what you got done and so I think when this is a little bit weird because like when I started going into industry we didn't it wasn't a norm for engineers OR tech people to have a portfolio that was something you typically oh designers do that but nowadays is actually very beneficial and the thing is though and kind of give let everyone know like how I do interviews like I when I interview people I really don't care if you got the right answer it's good if you get the right answer but what's more important is how you got to the right answer I want to hear how you accomplish it what struggles what did you do when you hit a struggle right and the best way to get real answers for people from people that's not to ask them hey Jonathan what was the um a time when you hit into a struggle and what did he do like anyone can make up a story for that right but if Jonathan has a project on his resume or I was able to dig and look at his project I'm like hey Jonathan you worked on this project super cool um I'm pretty sure you you ran into a lot of challenges can you tell me about them can you tell me how you designed it what what you do this thing feature you added in looks really difficult how did you make that happen and then what Jonathan says partially is he's gonna be super happy and passionate about because it is a pride and joy that he did and then what's going to end up happening is I could see how his brain thinks how does he work with other people on the team because it is team software any software any tech companies now is collaborative it's no longer siled but it's all about how did Jonathan get stuff done at the end of the day and then and then um in in this case if I were interviewing I'm with you I can actually share my screen like actually walk through the project and just go from top to bottom about like how I did it right and they'll provide the union of context yeah and that's really kind of like the key is the you know we it's all about what we get it done right and the one thing I got I will throw a caveat though uh for interviews like so that's how I do my interviews um there are people with different opinions on how to do interviews there are going to be interviewers that really care about you giving them the right answer there are going to be interviews that are care that you um recite something from operating systems class in college like I actually had an interview with her like how would you send messages and blah blah blah and I'm just like uh I learned that in operating systems like 10 years ago I could tell you how I would do it now and which but like you have to just when you do interviews is make sure you just as you talk to the person who feel them out you could kind of understand what kind of answers they want because they will react based on what you say and like I will say though those who are less senior are more tendency to want you to give them the right answer or give them the answer that they expect while those who are more seniors that has a lot of work experience they're more tendency about wanting to understand you and who you are what how you get things done now thank you for the context and sharing your experience on that um switching Gary's a little bit we're gonna uh shift to uh the Q a section uh of this chat um a question that was asked um earlier by Ned uh was besides Google do you have any other resources such as stack Overflow or anything else in that regard that you use yeah so um so even though I say Google uh Google as we all know became that general term of just search it um I personally do enjoy Google I have peers that like Bing which I don't understand why but you know personal preferences it's the whole emac versus VI arguments which one's better but um stack Overflow is amazing um the odd thing enough is because I use a search engine I actually find a lot of different resources some of them are that very not as popular or famous because blogs like I actually have I don't do that many blogs but I do have one or two blogs on certain areas that I struggled with a lot and I wanted to share so I would say like stack Overflow is one of the best bikes to look for but for everything else I would just say like as part of a job as an engineer or like being in Tech is like how do you filter information and such and that's kind of where it is is like use a search engine Google et cetera look for things and even blog posts just dig in and then use think about it does the stuff they're saying make any sense because if it makes no sense then it might not make sense it might not work right and this is kind of thing is as the problems get harder and harder you're going to run more time where things don't make sense but you have to puzzle these things a bit a bit to figure it out and the thing is like doing some coding you also got to be careful right with people doing phishing and all this other stuff like maybe the you know the infamous thing that back of this is rmrf star which is to delete everything on your computer you don't just run things without understanding it first so stack Overflow is always going to be my one of the best areas but I've seen some Google Groups that really good content on certain topics it just really depends on what information you need and at the end of the day you deciphering what it is right right it's so it's a little bit more nuanced and I'm sure too that you use uh multiple different resources to kind of triangulate whatever the the truth or the solution that you're trying to figure out so um yeah uh let's see this one is from Alona excuse me if I'm not saying that correctly uh Jimmy you have a pretty fantastic background and could work for any tech company in the Bay Area I totally agree um why have you selected Salesforce what excites you about Salesforce and your role um so I think this is two parts of this um and Jonathan knows a piece of it but I'll tell everyone so part of the reason I like Salesforce is the fact that uh Salesforce um is was very open for us to actually learn um a lot of companies traditionally you when you join into a company you're kind of stuck in that team that's now changing a lot uh but one of the things is when Salesforce when I joined they actually had this thing called open opportunity Market which meant once you get into engineering at Salesforce if you're bored you want to learn new challenges if you are you may not like your team or your manager you do have an option of looking for other teams within the company that are engineering that you could switch to the cool thing is you didn't have to interview and so actually while my tenure at Salesforce I've actually been on seven different teams um trying different Technologies and I didn't have to have the background and so it was really cool to be able to jump around learn from people um it's great for the company because people end up saying longer so that was part of the reason it was a very back in the day was really startup culture which was really nice now that we're much larger it's a little bit harder but the challenges we do like you know chachik tea AI you know we Salesforce we just started doing that a few months ago we already released products that are in that space it's really quick and how quickly we are to do things and it gives a lot of us opportunity to actually build and learn it the other thing um is actually in regards to philanthropy so I founded the Asian ERG at Salesforce called Asia pack force and we for those who don't know what ergs are we're kind of like clubs um that's around a demograph so we do have the black ERG the Asian ERG the women's ERG lgbtq y ergs and the whole point of this is to create a community for our employees to feel safe to have a voice to help us with professional development resources but also to help educate those around us but one thing is also to help advocate for our community within and outside of the company and so being one of the founders of the Asian ERG gave me opportunity to actually take my volunteerism to the next level I was able to build a group that has over 8 000 members at one uh to a particular point I think we have more now um we're now global I was able to start using my own technology skills to actually build technology to help these ergs and the involvement with our office of equality and helping Drive some of the initiatives and some of the direction that we have is in for me that was the whole idea of the whole thing with Salesforce around equality was a very big factor of why I'm still there is because I really I'm not at this point in my career where it's not just about making money it's not just making technology it's on the same line as how can you do impact and I think there's um helping communities uh whether it is our users or our own employees is actually very important and they support that and that's why I'm that's why I'm still around yeah and it's super cool too uh that Salesforce lets you do that because I know that one of the main reasons why people uh leave companies is because they feel like they're not growing so the ability to move to learn something else right is a huge advantage and people are able to acquire um new skills and the fact that you're able to only be an uh a leader as an engineering Elite but then also uh create um the sales forces uh Asian Pacific Islander uh ERG first one ever that's another leadership opportunity and for those that don't know Jimmy Jimmy is a big mover and Shaker uh Loki you know he's using that at a lot of people um and so we're very lucky to have him in his time um but yeah that's that's amazing and there's it explains why that Salesforce is often on glass tours like top 100 best places to work right so yeah um thank you for the Insight uh another question from Lewis uh when do I know I have the required knowledge to start building Tech um I would say you if you know that you have the ability to do so you waited too long um Tech is one of those things that you will never know enough to really do stuff because the issue is if you start learning things on a general basis you're kind of doing a shotgun approach right you're learning all these things um if you even know a little bit you should just start doing a project right maybe it's something like I want to create a database to uh manage my todo lists right instead of using a going on the App Store and grabbing an app build it right there's Technologies out there there's stuff Frameworks uh platforms you could use to do some of this just do it because actually the nice thing about that is that you will not know how to do it but because you have a goal in mind and a mission at least you can actually start understanding well what do I need to get to learn in order to make that happen right so the key thing with and I always keep saying key things there's a lot of key things but one of the roles of an engineer a software engineer even a programmer is our ability to take a complex problem and break it down if you try to tackle a big problem as learning how to program then that's too hard that you're directionless to some of the books in but what you could be is like hey I want to make my own todo list okay well what does that mean well I have to have to have the UI I have to have like a back end to actually store that data well I don't know how to do the back end right now but maybe I'll focus on the UI well then maybe before I do that I could just use sketches there's tools out there to do sketches you can do it on a napkin if you want and then you can slowly say hey let me use this UI tool just to make something that look like it and so if you could take breakdown these pieces on how to do it you actually be able to get stuff learned faster be able to get more directed information um and get things done but if you wait until you're ready or you know everything I would have never become an engineer if that was the case because there's way too much information because by the time like I said by the time you learn something in about four or five years for later it may not be relevant anymore so the the bigger thing you learn out of it it's not how do you actually do it is how do you actually strategize of making it happen how do you break down the problem and then how you tackle each piece because even now when I even doing the same thing I don't say I'm gonna do the same thing I did before even if it's building a I think I would be like okay this is what we did before did the environment and the industry change where I need to change the technology underneath that I'm doing now to make it more relevant um it goes back to your point about like learning by doing right yeah and then you're also getting like that positive feedback loop as you're building something like oh my gosh this is like so cool right yeah Milestones you have stuff like we have to have these small wins if you don't have the small wins it is a terrible journey to go on yes yes for sure um we I know we have tons of questions we only have a total of uh one hour um uh Buffet if you could uh drop Jimmy's uh email uh in the chat so if we don't get to your question uh you're more than welcome to email uh Jimmy directly we have another question here from Robert Tucker um hi Jimmy is it possible to get into it and data analytics even if you have a different degree and very little knowledge and experience in certain areas of computer science and software programs um definitely um so as we were looking back at the the Spectrum with um uh Information Systems um a lot of that is more on how do you work with people and the business side of this goes that's why it typically falls under the College of Business um the things with it about how to using technology how to build also the one thing about it you also have to remember there's actually a spectrum of I.T there's you know the IT Help Desk gun like oh I can't log into my computer issues but then there's also like hey Brit we manage the computer networks or we're building technology underneath you could pick one of those that has actually like a little bit less Technical and you can actually get into that first and you can actually pin it over as you develop and grow these things um but like definitely that's why I kind of explained the whole spectrum between the different Industries and different areas and Majors because if you look at that it gives you any way you want to get into Tech the question is where do you want to go in and how long do you want your journey to get to the next spot you want to be so if you do not have the it exp you don't have the tech experience I'm trying to learn about computers jump learn about networks uh figure out a niche that's actually a perfect way like certification stuff can bootstrap you into learning this information quickly and then if once you get in you could actually slowly pivot um and learning and building up your scope because the nice thing is once you're in it it's a little bit easier to Pivot but the key thing is you can go talk to somebody who's doing what you want to do and say hey what do I need to do to do what you're doing and how do I get there how did you do it and you can learn from others because like I'm gonna say to get to the same point no two journey is the same if I become an engineer it's not going to be the exact same Journey as you are or Jonathan or anybody else so we our goal our role is to learn from what other peoples do but we have to make our own Journey but at the end of the day like there are ways to get in and the biggest help is actually just tapping someone on the shoulder and getting that help that's that's important why uh not working reaching out authentically trying being proactive doing things right um is the best way to do it I think we have time for like one more question and Jimmy I don't know if you're able to uh say this uh concisely um but let's see here oh so many good questions which one to pick um okay let's see oh okay this one where's the best place to learn Salesforce depends on that one out there yeah oh that one's pretty straightforward uh so Salesforce we have a a website called trailhead um and if you go Google search Salesforce Trailhead we actually have a huge Learning and Development platform that we built to kind of to help our um Community to actually learn how to do Salesforce so you could pick a particular track like developer architect admin um even we even have courses on AI you could take the trail there's quizzes there's stories there's videos there's uh HandsOn activities you can do and that's pretty much the quickest way to learn it with the lowest hanging fruit and then as you go you want to do that you can also go get your certification and they'll like reinforce to people or give you credibility but if you want to learn it that's the best place to learn is trailhead that so good I knew that was like the best last question um so uh that is our time for today thank you so much Jimmy for um you are uh a philanthropist you are venture capitalist Salesforce there's so many other things that I did not know um in the intro so we appreciate you taking the time to not only create these slides provide this like overview on the different kinds of fields and the different kinds of education but then also taking a time to answer uh the questions from our uh diverse uh worldwide meaning of uh Learners again uh Fede uh dropped the email and a chat so feel free to email Jimmy uh with your questions and we also have um an event right after this about like breaking into the tech with our curriculum team fighting if you could also uh drop that in the chat that'd be greatly appreciate it going from uh two to three uh PM eastern time uh last but not least aside where I'm attending the event feel free to subscribe uh to our YouTube channel and uh stay up to date with everything uh code academy events again Jimmy thank you so much and I hope you have a good rest of the week as well as our attendance uh everyone who attended today so talk to you later thanks everybody and you're off the hook
