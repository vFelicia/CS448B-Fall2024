With timestamps:

00:00 - alright hey everyone I'm Zoey I'm Nick
00:04 - and we are the co-creators of the learn
00:06 - how to code course that's new on coach
00:09 - Adam II this week so for this livestream
00:12 - we're doing something that's a little
00:13 - bit different we are going to be pair
00:16 - programming one of the interactions that
00:18 - we built in the course so rather than go
00:20 - through a project that's associated with
00:23 - it we're giving you more of a
00:24 - behind-the-scenes look into how we made
00:26 - something for the course Nick you want
00:30 - to talk a little bit about the project
00:31 - yes so first of all looks like let me
00:38 - know if you can't hear us okay you can't
00:39 - see us okay and we can work on that
00:41 - anytime but back to what we're talking
00:44 - about right okay
00:46 - in the variables module and lesson have
00:52 - an echo audios affected okay yeah okay
00:57 - we're gonna keep going we're gonna have
00:58 - a lie so itself we have the variables
01:03 - lesson which essentially teaches the
01:05 - concept of variables which are used
01:06 - throughout program the whole learn how
01:09 - to code track the whole course is about
01:12 - these fundamental programming concepts
01:13 - and variables is one of them but we're
01:17 - not teaching this with any programming
01:19 - language we're doing it agnostic of any
01:21 - programming language which is why we're
01:23 - building these cool interactive applets
01:24 - which was super fun to make exactly and
01:27 - we're gonna build one of those right now
01:29 - we're gonna show you how we've built one
01:30 - of those so this particular one was
01:33 - built with HTML CSS and a JavaScript
01:35 - library called jQuery some of the other
01:38 - ones were built with another library
01:40 - called p5 but we do have a jquery course
01:43 - here on code cad amis so we thought
01:44 - would be good to show you this one do
01:46 - you want to demo how the project works
01:48 - first yeah okay so I'm gonna go over
01:52 - here and go full screen so terrain one
01:57 - I'm just gonna I'm just gonna show you
01:59 - alright never yeah I'm gonna type rocks
02:01 - in here alright then we type grass
02:05 - here and then finally forests awesome so
02:11 - essentially we're teaching the idea of
02:13 - variables through constructing kind of
02:15 - like a game board if you've ever played
02:16 - sub layers of Catan that was kind of the
02:18 - inspiration for this and so the idea is
02:20 - that after we've made learners in the
02:23 - previous exercise write out each name
02:26 - for each kind of terrain they want on
02:29 - each square they realize it's pretty
02:32 - tedious there's a lot of repetition so
02:34 - in the next exercise we show them okay
02:36 - you could save it to a variable and then
02:38 - it will put up that pattern to whichever
02:41 - one you've designated as train one train
02:43 - two and you have a couple of different
02:45 - options there so after that let me show
02:49 - it with some other patterns and then you
02:50 - actually get to code some variables
02:52 - yourself cool that's a pretty good
02:56 - explanation yeah so we're going to jump
03:00 - into the a little bit of explanation of
03:02 - the code that's already there in the
03:04 - project itself after that Nick is going
03:07 - to walk through programming the
03:09 - JavaScript file and I'm gonna be here on
03:11 - hand to help out of course at any point
03:15 - you can ask questions in the chat we're
03:17 - gonna take some breaks throughout but if
03:19 - you have like a really important
03:20 - question we'll be keeping our eyes on
03:22 - that we also have Alex the man behind
03:24 - the screen to help us out in case we
03:27 - miss anything as we go along and I think
03:30 - like Alex said in if you're looking on
03:33 - the YouTube channel you can get to the
03:35 - link in the description if you're on
03:38 - code Academy you can get to the link
03:41 - it's just the video right there you can
03:43 - that's what you see on screen over there
03:46 - yeah we do suggest though if you are
03:49 - coding it in this project space right
03:51 - here you can see that there's a link to
03:53 - the video however if you played the
03:54 - video while you're in the project space
03:56 - it's gonna be a little delayed so you
03:58 - recommend actually opening up the link
04:00 - in YouTube and listening to it there and
04:02 - coding along in this you're also welcome
04:05 - to code this along in your own text
04:06 - editor if you have one we're going to be
04:09 - doing it here in the project space so
04:11 - that will all be on the same page as
04:12 - everyone using it you know what what I
04:16 - think we should introduce a little bit
04:18 - more okay sure
04:20 - Zoey what else have you done code Khadem
04:22 - II uh I've done a lot of different
04:24 - things of code cadmium so I've been a
04:25 - curriculum developer here for about a
04:28 - year and a half I came here after
04:30 - finishing graduate school at NYU's ITP
04:32 - program and so since coming here I've
04:35 - worked on a CSS grid course I've worked
04:38 - on some data science content including
04:40 - our data visualization with Python
04:42 - courses I started the code foundations
04:46 - track and have basically been leading
04:48 - that for eight months now so yeah I have
04:52 - a real investment in making learning how
04:54 - to program really accessible to new
04:56 - people and so getting to do a lot of
04:59 - code foundation's content that's more
05:01 - about why is programming important how
05:03 - to get started with programming
05:04 - especially our learn or new learn how to
05:06 - code stuff is really in line with kind
05:08 - of my mission of being here at code
05:09 - Academy
05:11 - I've been here for I guess like a year
05:13 - and a half you start a little bit before
05:14 - me I have worked on
05:18 - I also audited to see a CSS grid thing I
05:21 - did a little bit of learn Alexa and
05:28 - didn't learn secret from scratch
05:31 - I worked on that with sunny if you've
05:33 - seen him before on live streams yeah
05:35 - he's a sequel King and what else we done
05:39 - I've done some JavaScript stuff I've
05:42 - been kind of all over the place until
05:44 - this past few months where we've been
05:46 - working together doing coding fetish and
05:48 - stuff working on this yep yeah awesome
05:51 - and it's another quick plug for this
05:53 - course even if you are familiar with
05:55 - programming and concepts like variables
05:58 - and functions or like you know something
06:00 - that you're pretty familiar with the way
06:02 - that we teach them is pretty new to how
06:04 - we teach on code Academy which is a
06:05 - really fun experience for myself and
06:08 - Nick for me personally getting to pull
06:10 - into some my experience with interaction
06:12 - design getting to try out new ways of
06:15 - you know working with the Ellie so give
06:17 - them a try give us some feedback so we
06:19 - know if you like them and what we can do
06:20 - to improve our teaching in the future
06:21 - mm-hmm Tim you write TDD was very
06:25 - important
06:26 - okay all right okay so let's walk
06:30 - through like what we're gonna start with
06:32 - so you know where we're at and if you're
06:34 - just beginning that's okay if you have a
06:37 - basic understanding of HTML CSS and
06:39 - JavaScript even better that's kind of
06:43 - what we assume starting this but we're
06:47 - gonna walk you through each step so
06:49 - let's do it
06:50 - let's do it all right so first we're
06:52 - gonna start off by explaining the files
06:55 - that are already there in the project
06:57 - itself so we have a alright we're gonna
07:01 - wait we're going to show you the none
07:03 - JavaScript version first but what we do
07:06 - have is we have this index.html file and
07:10 - we have a couple of different things
07:12 - going on but for those who are new to
07:15 - coding or want a little bit of refresher
07:17 - the index.html file is where we have our
07:20 - HTML code which is how we structure the
07:23 - layout of our page so that's where we're
07:26 - deciding what kind of content is going
07:28 - to go in there and then we have another
07:32 - file which is our style CSS file mine
07:35 - opening that really quickly and that is
07:38 - how we are going to style everything
07:41 - that's where we get our nice layout our
07:43 - colors our fonts so they're really kind
07:48 - of like two important things that I want
07:51 - to draw your attention to that are going
07:53 - to be important for our JavaScript file
07:55 - later and just also kind of give you a
07:58 - little more context on how this was
08:00 - built so as we mentioned this is a game
08:02 - board and you can see that there is this
08:04 - grid structure right back here this grid
08:08 - of squares and that they change every
08:09 - time we use our inputs a certain name so
08:13 - the way that we achieve that is through
08:14 - using CSS grid so what as actually
08:19 - happening here is that we have two grids
08:21 - with two nested grids one is just two
08:23 - columns and then the game board itself
08:25 - is three rows and three columns I'm not
08:28 - going to get into the specifics of CSS
08:30 - great but if you are interested we do
08:32 - have a CSS course as you mentioned we
08:34 - both kind of work
08:35 - it so that's why we're using it right
08:37 - here so now they're familiar with what
08:41 - we're starting with let's see what that
08:42 - looks like so I showed we showed you the
08:45 - final product and now I reset the
08:48 - project and I can show you what happens
08:49 - when I do this okay
08:56 - delete the workspace yeah do that again
08:58 - reload that and then so one important
09:12 - thing to mention is that so as you saw
09:14 - when you have the correct version
09:16 - running if Nick were to type in rocks
09:19 - and train one all the terrain one
09:21 - squares would change trucks now it
09:23 - doesn't work like that
09:24 - so how are we going to achieve that well
09:26 - one thing we want to look at is how
09:29 - we're creating these rectangles in the
09:31 - game board so if we scroll into our HTML
09:35 - awesome thanks for making that big we
09:38 - can see that we have a giant Dave called
09:40 - game board and then within that we have
09:43 - nine other divs and in here we're saying
09:47 - that okay all of them are going to be
09:49 - called rectangle and that is a class so
09:55 - that's important because we are going to
09:57 - have to use that class once we get to
10:00 - the JavaScript part itself so remember
10:01 - that rectangle class I'm trying to think
10:05 - of anything else let's actually look at
10:06 - how we're currently staying styling the
10:08 - rectangle class in style dot CSS I think
10:12 - the one thing the other thing is that
10:14 - the name do we want to talk about that
10:17 - oh yeah thanks remind me about that cool
10:20 - so another thing to pay attention to is
10:23 - the name attribute in this input tag
10:28 - right over here so the input tag relates
10:30 - to those squares we're actually getting
10:32 - the user input so what's important about
10:35 - this is that we're distinguishing those
10:37 - inputs from each other by giving them
10:39 - this
10:40 - name and setting it to one value to
10:42 - value and three value um cool anything
10:47 - else before we ready for stuff yeah okay
10:49 - click on stuff
10:51 - alright so we've got a bunch of stuff
10:54 - we're gonna kind of ignore it again it's
10:56 - mostly like making things look pretty
10:57 - but a couple things I do want to point
11:00 - out mention the grid layout you can see
11:02 - that we're setting that grid display
11:04 - here in the certain column widths there
11:07 - so again if you're interested in CSS
11:09 - grade pay attention to that later but
11:10 - what I really want to get down to is
11:13 - this part here so we have this selector
11:17 - dot rectangle so in CSS if it you're
11:20 - calling a class you want to put a period
11:22 - before it and then the class name and
11:24 - then in this declaration block right
11:27 - here we're gonna ignore this stuff here
11:30 - it's just to make again everything look
11:32 - nice but we do have this background
11:35 - image property and then everything that
11:38 - follows it is just what's the value of
11:40 - that so right now it's just a really
11:43 - pretty black gradient that's it but
11:46 - that's gonna change again as soon as we
11:48 - put in our JavaScript correct cool okay
11:51 - so let's do that
11:52 - let's put in the JavaScript let's put in
11:53 - the JavaScript all right
11:55 - right now the index.html file and the
11:59 - Styles the CSS you can see that on the
12:00 - screen on the right here but it has no
12:04 - JavaScript so it's not interactive which
12:06 - is why when I click rocks what I type
12:07 - rocks nothing happens so we need to tell
12:11 - the browser that we need some more files
12:13 - we need two things we need the
12:16 - JavaScript the what we're gonna type and
12:18 - then also a library called jQuery so
12:21 - jQuery is a library in JavaScript that
12:25 - just gives us a bunch of helper
12:26 - functions that makes it a lot easier to
12:27 - do what we're about to do yeah you could
12:30 - do this with regular JavaScript we're
12:32 - not going to show that here but it is
12:33 - possible we're gonna use jQuery because
12:36 - it's just less sin taxes less code you
12:40 - have to write and there is a downside of
12:43 - using the like a separate library mm-hmm
12:46 - but it doesn't take that long to load
12:49 - and it's a lot easier to get up and
12:50 - running yeah which is why we like it
12:52 - yeah and one of the reasons that we
12:54 - ended up using it in this example is
12:55 - that jQuery is really easy to prototype
12:57 - in so what Nick said before you could do
13:00 - this entire thing in vanilla JavaScript
13:02 - it ends up being a lot of code and if
13:04 - you want to spin up something really
13:05 - quickly just to see how a user is going
13:07 - to interact jQuery is a really great
13:10 - option for it again another plug we've
13:12 - got a great series of jquery courses on
13:14 - code academy so if you want to dive into
13:15 - this more we recommend you look at that
13:17 - okay so first thing jQuery I'm gonna go
13:20 - back over here so you all have this link
13:22 - in the project on code Academy you can
13:26 - find a link to jQuery right yeah
13:28 - code jquery.com this is where we find
13:33 - the jQuery library and just to demystify
13:37 - this if I want to look at what like what
13:39 - is jQuery I can open up the file that is
13:43 - jQuery and then see a bunch of
13:46 - JavaScript code it's just a bunch of
13:48 - functions that make it easier to do what
13:49 - we ought to do we're not going to use
13:52 - that one because we don't need to well
13:54 - we're not gonna use that we're gonna use
13:55 - the minified version and why do we want
13:58 - to use the minified version the minified
13:59 - version has no line breaks no spaces so
14:02 - it works the same it's just less web
14:06 - takes up less in memory uh-huh
14:07 - which makes performance better and you
14:09 - can see that that's really ugly but it
14:12 - works in we don't need to read it we're
14:14 - just gonna use it so that's fine
14:16 - there we go okay which means I click
14:19 - this and this is the tag the element
14:24 - they were gonna want to use so I'm just
14:25 - gonna copy this from here go back to the
14:28 - project and right where it says load
14:30 - jQuery within the head element I'm gonna
14:34 - paste that okay so now jQuery is in our
14:40 - application so I'm gonna save this and
14:43 - reload this so now I haven't added any
14:47 - new like features to this website but I
14:49 - can now use jQuery and let's show you
14:51 - how that works so what I just did is I
14:54 - clicked on the website the little
14:56 - website on the right side and go to
14:58 - inspect I think it's different for
15:00 - different
15:02 - browsers but it should be a pretty
15:04 - similar to right-click on that space
15:06 - okay and I go to the console and I can
15:08 - type in any JavaScript here jQuery you
15:12 - can access with the dollar sign and then
15:16 - I can put in whatever selector I want
15:19 - yeah so again one of the reasons that
15:22 - you'd use jQuery is that it enables you
15:24 - to quickly access and modify different
15:28 - elements in HTML that's why we're using
15:31 - it here so in this case we want to grab
15:35 - whatever value the user inputs into that
15:38 - little input box and then use that to
15:40 - modify the CSS in our squares yes so
15:46 - I'll give you example of like accessing
15:47 - something we can get input mm-hmm and
15:51 - that gives us three things I can let me
15:53 - make this bigger okay so I just did
16:02 - dollar sign parentheses input and input
16:05 - refers to these these forms on the side
16:08 - here where we type code so you can see
16:10 - that's what we're selecting input 1
16:12 - input 2 input 3 okay and then I can also
16:17 - set the value so now we've accessed it
16:20 - we can modify it now and I can put
16:22 - Zoey's name in here and there it is all
16:25 - of them have Zoe yeah okay everything
16:32 - says curriculum developers have you go
16:38 - okay so we have the jQuery now we need
16:43 - to write our own code it's gonna be in a
16:45 - separate file called script is then why
16:49 - do we want it in a separate file that
16:51 - makes it easier to maintain mm-hmm and
16:55 - personally I like it because it's just
16:57 - how I think of the code is separate
16:59 - items and if I know there's an issue
17:01 - with the elements on the screen
17:04 - I know it's HTML if I know there's an
17:06 - issue with the JavaScript with the
17:08 - interactions that I know it's the
17:09 - JavaScript so it's just kind of
17:11 - separation of concerns cool
17:13 - okay I'm gonna go to the bottom in an X
17:17 - in index.html go to the bottom and load
17:21 - the script here I'll tell you why in a
17:23 - second all we do all we do is use this
17:28 - script tag and the source which is the
17:33 - name of the file
17:34 - sweep Tijs okay and then i close that
17:40 - okay so now whenever this reloads I'll
17:45 - talk to you right now mm-hmm
17:46 - I'll save and reload now we can write
17:50 - code and script that J s and the browser
17:52 - knows about it we stop there for four
17:56 - questions yeah yeah anything we should
17:58 - be paying attention to
18:01 - looks good people were able to find the
18:04 - jQuery CDN okay okay
18:08 - let's keep going yeah yeah do you ever
18:13 - is that the way of importing libraries
18:16 - nsj just check a URL in the ATM HTML you
18:19 - make it sound like super ear like like
18:22 - we have no diss no regards throwing them
18:25 - in there um there are other ways to
18:27 - import it you can actually download the
18:28 - file itself and include it with the rest
18:30 - of your files so if you were to upload
18:32 - it you know onto your server where
18:35 - you're hosting your website you could
18:37 - bring the library with you yeah so like
18:41 - to back up a little bit
18:42 - mm-hmm imagine that we're developers
18:45 - making these files on our own server and
18:48 - when anyone visits our website which in
18:51 - this case you can see is localhost 8001
18:53 - ever that means you the browser gets
18:57 - those files and we could just download
19:02 - the whole jQuery library put it in our
19:04 - server and it would work as well but
19:06 - jQuery is available online through
19:09 - things called CDN which we don't need to
19:11 - get into now but basically it's a
19:14 - network that makes jQuery available for
19:17 - any web page to use and that's why we're
19:20 - doing this up here source HTTP code
19:24 - jquery.com and why we're naming this one
19:27 - down here script is because that's local
19:29 - that's just on our server yeah it's
19:32 - another question and someone kind of
19:34 - answered it in there about why we're not
19:35 - using es6 so yeah just to reiterate you
19:37 - can do all of this in vanilla JavaScript
19:39 - especially with es6 but for the purposes
19:42 - of this again rapid prototyping quickly
19:45 - typing jQuery is really helpful and we
19:48 - think it's like a nice way of like for
19:49 - beginners to start making interactive
19:51 - things so the other thing that Jake
19:53 - where is nice border is browser
19:55 - compatibility yes thank you first yeah
19:57 - so like browsers do a little bit
19:59 - different things with JavaScript like
20:00 - Safari versus opera versus Internet
20:03 - Explorer versus Chrome but jQuery takes
20:06 - care of all that so when you use a
20:07 - function like Val
20:09 - it takes care of all that those all of
20:12 - those issues for you
20:12 - whereas in JavaScript you'd have to do
20:14 - like separate things for each browser
20:16 - type yep okay
20:18 - versus Firefox fine okay so let's build
20:26 - a file let's do it
20:28 - the first thing that we need to do is
20:31 - check for a user typing something like
20:35 - essentially when I type rocks in here we
20:38 - need to know when that happens and then
20:40 - capture that word rocks and browsers
20:45 - have a nice thing called events
20:47 - so whenever a user does anything
20:49 - interesting on the screen mm-hmm in a
20:52 - browser there's an event fire the
20:54 - browser basically announces hey you just
20:56 - clicked the user just clicked or the
20:58 - user just typed it's for example if I
20:59 - click here click then I'd event is fire
21:03 - that's called the mouse click event
21:05 - whatever that is and for this one
21:07 - there's also with like text
21:09 - there's also key press key up key down
21:12 - we're gonna use key yeah key press would
21:18 - work I think in this case but it's not
21:20 - it just done it yes so interestingly I
21:22 - tried this out to distinguish between
21:24 - key down key press and Kia and it will
21:27 - register the wolf or key down it will
21:30 - get the press first without getting the
21:32 - character itself
21:33 - same thing with key press right so you
21:36 - will not
21:37 - we get that string that we will
21:39 - eventually need right so we can rest you
21:42 - know explore that Li yeah we want to so
21:45 - to break that down what we're talking
21:46 - about is imagine that like this is the
21:49 - key like I am a keyboard this is the key
21:51 - when I press down ice the browser says
21:55 - key down event and when I let go the
21:58 - browser says key up event so we care
22:00 - about that key up event because that's
22:03 - when we know that something's been typed
22:04 - yeah okay so let's get started
22:08 - all right um do we want to talk about
22:10 - setting up a file on jQuery yes okay
22:14 - let's talk about that let's talk about
22:16 - that every time this loads this this
22:19 - page we want to access some of the
22:22 - elements on the page but we want to make
22:24 - sure that all of those are loaded before
22:27 - we start like accessing them changing
22:30 - them so jQuery conveniently gives us
22:33 - this thing called document dot ready I
22:36 - know let me type this out whoa you okay
22:42 - document dot ready is just a function
22:47 - but it says whatever you pass in to the
22:50 - ready whatever arguments you pass into
22:52 - ready jQuery will execute when the
22:56 - documents ready to be saved to make sure
23:00 - that all the HTML is loaded we're gonna
23:02 - put all of our code in here yep so we're
23:04 - gonna be like doubly safe because if you
23:05 - remember when Nick added the JavaScript
23:09 - file to the HTML we put it at the end
23:12 - right before the closing body tag so
23:15 - both of these techniques equally ensure
23:19 - that everything will be loaded in the
23:20 - HTML before we go into the JavaScript
23:23 - mm-hmm okay so document out ready
23:26 - expects a function mm-hmm so to find a
23:30 - function this is just an anonymous
23:31 - function here and whatever we need to do
23:34 - will do in there all right so let me
23:38 - just show you just to clarify even more
23:41 - what we're doing let me see here
23:44 - yeah I'm gonna select the input boxes
23:48 - and then log that so you can just see
23:51 - exactly what's happening so I define a
23:53 - very define a variable called in input
23:58 - boxes and it's gonna be a selection of
24:03 - anything that is an input element with
24:06 - the class box so Nick why did you put
24:10 - that dollar sign before input boxes I
24:13 - haven't seen that in a variable before I
24:15 - could have done just the input boxes but
24:18 - I want to remember make sure that I
24:20 - remember later on that that variable
24:23 - refers to a jQuery selection rather than
24:27 - just some other variable in my
24:28 - JavaScript so that allows me to
24:30 - differentiate it cool and what does that
24:32 - dollar sign mean in jQuery specifically
24:35 - that is how do I describe it jQuery
24:39 - essentially you can access it with the
24:41 - word jQuery or the dollar sign it's just
24:42 - a shorthand which means that the dollar
24:45 - sign gives you access to all the
24:46 - functions all the methods in jQuery
24:49 - okay so let's console log in clip boxes
24:52 - because I just want to make sure that
24:53 - I'm doing everything right save this
24:57 - that reloads and let's inspect console
25:02 - okay we can ignore the number five thing
25:08 - up here the point is we logged something
25:10 - to the console which is this which again
25:12 - is the input one two and three and you
25:15 - can see right there that's what we were
25:19 - looking for
25:19 - okay because that's where our event is
25:22 - gonna happen yep all right so we've
25:24 - selected that now I want to define an
25:30 - event handler like I want to write a
25:33 - function that does something when the
25:37 - KeyUp event happens and we have access
25:39 - to that again with jQuery input boxes
25:42 - dot Kea okay so input boxes is a jQuery
25:49 - selection I remember that because I put
25:51 - the dollar sign and a jQuery selection
25:53 - has access to all of the jQuery methods
25:55 - yep which is why I can use key up here
25:57 - and kia expects just a function that
26:00 - says what are you gonna do when the key
26:02 - event happens on any of these input
26:04 - boxes okay
26:07 - function event okay so now I'm gonna
26:12 - find a function with the parameter event
26:14 - this is just normal
26:17 - it's normally how you write it because
26:19 - that function is always gonna receive an
26:21 - event what I mean you what I mean you'll
26:24 - see you later okay now let's capture
26:29 - whatever is in that event mm-hmm so you
26:33 - know what just to show you
26:35 - um the event I'm gonna show only thing
26:37 - all right
26:38 - that's pretty cool this and I'm gonna
26:40 - delete this and okay so now I'm back in
26:49 - my console nothing happened
26:53 - nothing console.log because the key
26:54 - event didn't happen going here press K
27:00 - an event is logged and there's all kinds
27:05 - of information in there all we really
27:06 - care about is two things
27:10 - target so like the event this thing has
27:14 - a property called target which is this
27:16 - input box so we know whenever we get
27:18 - this event we know where this is
27:20 - happening is there anything else yeah we
27:24 - want to know where I typed K so where's
27:27 - Kay I go down here to you know what I
27:35 - know wearing it yeah
27:35 - let me make sure there we go
27:44 - okay that's the other property okay
27:49 - [Music]
27:50 - event target event dot value
27:53 - cool which means I can start storing
27:58 - this stuff mm-hmm
28:00 - my target my event is some element let's
28:06 - let me check one thing here mm-hmm
28:10 - I'm gonna call this the input name this
28:13 - just refers to what we're clicking or
28:19 - typing what we're tight what we're
28:21 - typing so whatever input the user is
28:23 - giving us okay wait so that means
28:25 - actually I only named this value okay so
28:28 - in bed here right is whatever they typed
28:34 - example and the previous sample that was
28:35 - okay I also want to know where this
28:37 - happens so input name equals a bed
28:42 - target okay so now input value and I
28:48 - press example should be K input name
28:50 - should be the input box okay so now I've
28:54 - captured that let me take a break there
29:01 - to check if everyone's following along
29:05 - here okay
29:14 - all right I think Kenny's got that one
29:16 - all right
29:17 - get confident Alex did you see anything
29:19 - we should address yeah so like Nick
29:31 - mentioned before the dollar sign is a I
29:35 - guess like a similar representation of
29:37 - jQuery which kind of sounds a little
29:41 - abstract but basically when you're
29:43 - writing a JavaScript document you need
29:45 - to let it know that you're using the
29:46 - jQuery library and so we do that
29:49 - partially by including the library in
29:50 - the HTML and then it's expecting us to
29:53 - talk to it in a certain way and so it
29:55 - recognizes the dollar sign is a symbol
29:57 - like oh hey like you know you're talking
30:00 - to me this jQuery library right now and
30:03 - specifically it's expecting a certain
30:05 - syntax that has the dollar sign than a
30:08 - parenthesis with an object inside of it
30:10 - whether it's the document or it's an
30:12 - object that we're selecting through
30:14 - syntax like with our input box there
30:18 - it's looking for the input element in
30:20 - HTML with a class box I'm gonna make
30:24 - some comments so we don't forget just
30:26 - like as we answer questions they don't
30:27 - just be writing here so I'm gonna say
30:31 - select input boxes mm-hmm and use dollar
30:36 - sign to remind me that it is jQuery
30:40 - selection so again like any case with
30:43 - naming variables you can name variables
30:45 - however you want it's just good to
30:47 - follow certain conventions conventions
30:48 - and good practices so specifically if
30:51 - you're writing jQuery code we put a
30:53 - dollar sign before our variable name
30:54 - again to remind us that it's a
30:56 - specifically jQuery selector all right
31:00 - so so far we have document already we've
31:04 - collected we've selected the input boxes
31:06 - and we have done something with the key
31:10 - of event whenever key up happens
31:11 - something happens now we're gonna do
31:13 - something with that input all right
31:15 - essentially what we want to do is see if
31:17 - it's rocks forests or grass yeah
31:21 - that's like a whole nother thing and
31:23 - it's gonna be a lot more organized if
31:25 - it's a whole another issue just to put
31:26 - it in a separate
31:27 - function yeah that sounds good to me
31:28 - okay let's call it check the input check
31:32 - the input and give it these two piece of
31:36 - information look value excuse me and
31:42 - what I'm hoping that this check the
31:44 - input does is checks if it's grass if
31:48 - input value this grass rocks or forests
31:50 - if it is then put the the tile there
31:54 - like the tile in the matching terrain
31:56 - exactly which is why we need that input
31:58 - name argue mm-hmm and just to quickly
32:01 - clarify we're gonna actually write out
32:03 - the function in just a moment but Nick
32:05 - is putting he's calling his function
32:07 - first in this current function that we
32:10 - have right here just so we know how the
32:13 - stuff that we're grabbing within this
32:15 - function is going to relate to that
32:17 - logic that Nick just explained yes okay
32:21 - so here is the function check the input
32:24 - all right
32:25 - and this is gonna be a terrain string
32:28 - uh-huh and let's just do it all out
32:39 - okay terrain string and then the name is
32:41 - gonna be the name that we're gonna pass
32:44 - in right so this is the like touring
32:46 - name and again I just like to make sure
32:56 - that we're doing everything that
32:58 - everything still is working fine you
33:00 - ever broken anything okay so based on
33:07 - what we have here on the key up event we
33:09 - call check input which is to find out
33:12 - here what what is gonna happen when I
33:15 - reload this page in terms of the console
33:18 - let me refine that I'm gonna run I'm
33:21 - gonna save this and I'm going to go here
33:24 - and I do something like press R in the
33:28 - console that we've been checking what
33:30 - should we see see if anybody yeah and
33:33 - you're welcome to respond in the chat oh
33:35 - yeah I'm checking this we're looking at
33:38 - the check yeah I want you to just yell
33:39 - at me and I hope I can hear there might
33:46 - be a little bit of delay so we'll give
33:48 - people a second to think about it are so
33:55 - John Moore says we get an R in the
33:57 - console key up event from tertiary
34:01 - adjunct an input value equals R all
34:06 - right another answer from John Moore
34:08 - okay changing your answer thread out all
34:11 - the answers
34:15 - so Nick is also putting another good
34:18 - practice into play which is checking
34:20 - your code as you go along
34:22 - oftentimes we you know have this idea
34:25 - about like what our logic is gonna be so
34:26 - we just start coding coding coding and I
34:28 - get to the end and then we realize oh
34:29 - there's a bug so what's you know good
34:33 - about what NICs doing right now is that
34:34 - he's you know created one function you
34:36 - started creating another function he's
34:38 - taking a pause and being like okay let
34:39 - me make sure before I write out the rest
34:41 - of this function I have everything in
34:43 - place before I implement the rest of my
34:44 - logic mm-hmm
34:47 - so as we getting some more answers in
34:49 - just want to clarify when I'm at what
34:51 - I'm asking is I press R was a key event
34:54 - and something happens in the code and
34:57 - something is going to be logged to the
34:58 - console and I'm asking what that is so
35:01 - far we've gotten like R maybe it's key
35:03 - up event maybe its input value equals R
35:08 - fancy okay so then what we're gonna I'm
35:11 - gonna show you all right I've done a lot
35:18 - of times
35:19 - so let's reload okay I'm gonna go over
35:23 - here I'm gonna do it again press R let
35:26 - go
35:27 - missus logged we get this input class
35:31 - input element which is here okay and we
35:36 - also get this undefined which I was not
35:40 - expecting someone in the chat may have
35:42 - also come across the same so let's let's
35:47 - see what we're doing here close this in
35:53 - the event we select the event R value
35:56 - and the event target and we send those
35:59 - we call check the input with that yes
36:05 - okay check the input we call terrain
36:08 - string terrain name and we're logging
36:09 - that so for some reason terrain string
36:11 - is undefined and terrain name is like
36:17 - the hole that hold the hole target the
36:20 - hole right input let's start with the
36:24 - easy one and
36:27 - so vente target is is right it's the
36:30 - input its where the event happened for
36:34 - what our purpose is we actually just
36:35 - want the name attribute of that we'll
36:39 - get to why what that is in a little bit
36:41 - but I'm gonna do that right now so
36:44 - instead of just doing the target I'm
36:47 - just gonna say name and just as a quick
36:50 - refresher you can find the name
36:52 - attribute in the HTML file attached to
36:55 - that specific input each input has it
36:58 - name attribute okay so I save this let's
37:02 - try one more time go over here are yeah
37:08 - one value which is the name awesome as
37:10 - expected but undefined it's still weird
37:12 - and I could go through and show you
37:17 - where all this is but I happen just
37:21 - happened to know that its target dot
37:25 - value instead of value and it looks like
37:27 - Michael Montgomery also figured this out
37:29 - as well only works with event target dot
37:32 - value that was my that was yes I wasn't
37:35 - gonna say that there's gonna teach us
37:41 - the rest of the okay
37:44 - Thank You gurgly let's see it works yeah
37:53 - there we go keep doing this cool um so
37:59 - in addition to typing Google D Guk like
38:03 - Nick was just doing could also type one
38:06 - of those special keywords that we are
38:10 - looking for like rocks and so now that
38:14 - we know that we can grab rocks which is
38:15 - one of the strings we are looking for
38:17 - and we can grab the name of that
38:19 - specific input box we can start putting
38:21 - together some logic for attaching our
38:24 - user input to our rectangle backgrounds
38:28 - okay so now I need to I can get rid of
38:33 - this well I'm only though okay
38:35 - so first thing I want to do
38:38 - is check if what I typed mm-hmm is grass
38:43 - or is rocks yeah let's do a class guys
38:47 - and eventually we're gonna be checking
38:49 - in grass or rocks or forests mm-hmm
38:53 - which sounds like a conditional
38:54 - statement
38:55 - yeah if this string is grass or else if
38:59 - it's rocks
39:00 - sounds like additional to me so I'm
39:02 - gonna I'm gonna use that with
39:04 - if-statement JavaScript what's the
39:08 - condition I want here mm-hmm
39:09 - if what I type is grass then I expect
39:16 - that terrain string because that's what
39:20 - they're typing should be grass all right
39:22 - and again for those newbies when Nick
39:25 - just typed out is an expression where
39:28 - he's checking if the terrain string
39:30 - again what we're grabbing is that input
39:32 - value from the user is equal to grass
39:35 - and so you know you may have seen an
39:37 - equals sign before this is a triple
39:39 - equal sign so we are checking if it has
39:43 - the same string as grass but we're also
39:44 - making sure it's a grass it's a Christ
39:47 - it's a Chris it's grass if it's a string
39:49 - datatype strictly equals okay so terrain
39:57 - string equals grass I know that a equals
39:59 - grass in this hypothetical situation
40:01 - that means that I want to put in terrain
40:05 - one in all these terrain ones the grass
40:10 - the grass image like we saw in the
40:12 - beginning or any of them just any time a
40:15 - user inputs grass it could be in terrain
40:18 - wandering to terrain three it will know
40:21 - that in the corresponding blocks over
40:25 - there that it should fill it with grass
40:27 - so I need to select the since I'm gonna
40:32 - be modifying the terrain one I need to
40:33 - select those as you as you may recall
40:37 - I'm gonna go back to the index.html we
40:41 - define things with these classes
40:47 - for the gameboard like one value to
40:51 - value one value but we also use that as
40:54 - the name for those inputs which is how
40:57 - we can like check this
40:58 - so whoever wrote this code was thinking
40:59 - ahead which means that we can use the
41:03 - name to find the class okay so what that
41:07 - means is I want to check
41:10 - I want to grab so I'm going to use
41:12 - jQuery whatever the input whatever
41:16 - terrain rectangle right it's like some
41:20 - kind of dot rectangle I'm gonna go back
41:23 - here cuz I'm getting lost
41:25 - okay so I'm gonna select everything with
41:28 - a class rectangle mm-hmm that also has
41:31 - this one value yeah or whatever the name
41:34 - is I was gonna say because we want to
41:35 - make we don't want it to be just one
41:37 - value because then we could only attach
41:39 - grass to the ones with one value right
41:42 - so how do we make it more general we
41:45 - could use terrain name mm right we have
41:49 - that terrain name very right that's
41:52 - associated with the specific input like
41:54 - last time it was one value when I typed
41:57 - in the first box yep so I'm just gonna
42:00 - add it I'm gonna add it okay I'm just
42:06 - gonna select that okay let's see let's
42:08 - see if that works
42:09 - I wanna console.log this we ask again
42:14 - what do we expect to be console.log here
42:19 - what I'm gonna do is I'm going to go to
42:23 - the web page type our in the first input
42:26 - box and then I'm going to check the
42:28 - console what do we all think it's going
42:32 - to show up in the console
42:44 - look if I did all right
42:48 - what would happen nothing
42:52 - hmm like that response well response so
43:00 - we we won't reach the statement chip
43:03 - long says okay thank you for a fuller
43:06 - explanation of how we're getting to
43:07 - nothing can someone get into that a
43:12 - little bit more we won't get into that
43:13 - statement you won't reach that statement
43:19 - does not match the condition nice
43:22 - clarifying a bit more yeah come on go
43:25 - from there that teamwork right there
43:27 - nice that is pair programming in action
43:29 - as well that's quadruple quadruple
43:32 - programming right okay so as folks are
43:40 - mentioning nothing is going to happen
43:42 - because we can ignore that other
43:44 - console.log but basically we have a
43:46 - conditional statement right now that's
43:48 - checking a specific condition in that
43:50 - condition is terrain string is equal to
43:55 - grass we're checking if it's equal to
43:56 - grass since we've only typed an R in
43:59 - there
44:00 - our would get saved as terrain string it
44:02 - would check is R equal to grass and say
44:06 - no nothing would happen including that
44:08 - console log that's in there let's check
44:11 - and Tammy Reese you are correct because
44:14 - we do still have that other console log
44:16 - up there mm-hmm
44:17 - sorry forgot about okay so right so we
44:22 - see our one value which is this first
44:25 - statement that's always executed but we
44:28 - don't see anything from this statement I
44:30 - can even make it more clear if I comment
44:33 - this out mm-hmm you'll see what
44:36 - tertiary and chip we're talking about so
44:38 - I saved this I go again I want to put
44:40 - them up together here nothing happens
44:47 - gobbledygook all right now type grass
44:49 - okay fine it works okay so I typed grass
44:56 - and this showed up in the console log
45:01 - okay so what the heck is this this is a
45:05 - jQuery selection okay mm-hmm
45:09 - we can check more about it let's see if
45:12 - I can show you exactly where it is I'm
45:16 - gonna do let's I think we can how might
45:22 - best describe this okay what we expected
45:25 - was a jQuery object to be logged which
45:27 - is exactly what happened this WF n dot
45:29 - init this previous object okay all right
45:32 - and just so you know okay so we'll save
45:36 - do this again grass okay cool now that
45:44 - means that we're getting our jQuery
45:45 - object awesome now what we want to do is
45:49 - change the background yeah exactly so we
45:53 - know our condition is working and all
45:55 - that we're having executes right now is
45:57 - this console dot log statement but what
45:58 - we really want it to do is to change the
46:00 - background of those squares up there to
46:02 - a nice grassy pattern so how do we do
46:05 - that and as you recall the background
46:08 - image is set here with this CSS property
46:13 - background image and the value is linear
46:15 - granite you don't have to worry about
46:16 - that the point is that's the black that
46:19 - you see now we want to change that and
46:21 - we specifically want to change it to a
46:23 - image that we have hosted on AWS so just
46:28 - to know we've actually already given you
46:31 - all of the URLs for these in the project
46:33 - page so if you go back to the narrative
46:35 - you can scroll down and towards the
46:39 - bottom you'll see a couple of the
46:40 - different links that we use for the
46:42 - graphs rocks and four so make sure that
46:44 - you have these on hand for the next
46:46 - portion we're gonna grab our graphs URL
46:48 - make sure that we have it on hand and
46:50 - then go back to our JavaScript okay
46:54 - and what I want to do is I want to
46:56 - change the CSS property background image
46:59 - to the value whatever that URL is yes
47:03 - okay so let's instead of console logging
47:06 - this I'm just gonna grab this const
47:12 - terrain
47:13 - okay I want to say this terrain CSS
47:20 - mm-hmm
47:21 - which is again another function that
47:23 - jQuery gives us just making it easy
47:25 - that will change the styling of whatever
47:28 - this terrain is mm-hmm it takes two
47:30 - arguments the first is the property wrap
47:34 - got image this is property I want to
47:36 - change and to make this clear this I
47:41 - want to change that URL okay so a couple
47:51 - things you may notice as Nick mentioned
47:54 - dot CSS is a easy jQuery method to
47:57 - change any CSS styling what you have to
47:59 - do again is to give it two values you
48:02 - have to give it the property name and
48:04 - the property value what you may notice
48:06 - though is that the syntax is different
48:07 - from how we do things in CSS right so we
48:11 - don't have a colon separating the
48:14 - property from the property value and we
48:16 - don't have it ending in a semicolon so
48:17 - just be aware of that it's separated
48:19 - with a comma instead another what is a
48:23 - funny a CSS styling syntax thing is that
48:28 - we have to state that something is a URL
48:30 - so we put URL beforehand and then we
48:33 - have our URL in parentheses so make sure
48:35 - you have that URL beforehand I just
48:38 - remember one quick thing I'm going to
48:39 - end this space in here
48:43 - it's just a bug that I think will save
48:45 - herself some time later okay you're
48:49 - adding a bargain no no I'm fixing a boat
48:51 - okay oh because it's two classes I'll
48:57 - explain that a minute okay
49:02 - okay I'll just explain it what I was
49:06 - doing is I was putting those two strings
49:08 - together the rectangle and whatever the
49:10 - input name is which would make a giant
49:11 - word rectangle input name but that's
49:16 - really not how we select that rectangle
49:18 - you need a space just like you see here
49:20 - rectangle three value so that's how you
49:22 - select it correctly mm-hm
49:24 - anyways let's see if this works all
49:26 - right oh good
49:29 - okay hold on just want to make sure I
49:32 - can reload this okay
49:36 - so doesn't work okay let me double check
49:39 - what we've done here yeah I thought you
49:43 - guys thought okay let's check our
49:46 - console could we console.log that Tareen
49:53 - calm about a variable there just yeah
49:56 - yeah let's do that
49:57 - cool yeah cuz I was messing around with
49:59 - that let's see what I did yeah cool
50:06 - that's right save open this again one
50:10 - more time grass so the string isn't
50:18 - showing up here
50:21 - let's try this yes let's try it with the
50:23 - other ones oh okay
50:25 - let's compare take a quick look at what
50:28 - I've wrote notes to myself here and we
50:44 - know our conditional was working before
50:46 - mm-hmm so if anyone sees the bug yell
50:49 - out see what I've done here mmm can we
50:55 - console ugh something else could have
50:56 - you have extra parentheses - oh so what
51:04 - we what we figured what we know so far
51:06 - is that one IRA type grass that we're
51:09 - not reaching this console.log so we know
51:13 - that terrain string doesn't equal grass
51:15 - on that yeah mm-hmm
51:18 - you see that Oh see that right thanks
51:24 - Tammy Rees good eyes
51:27 - okay agree yeah all right cool and what
51:38 - I just log the terrain here terrain yeah
51:41 - okay okay yeah I think it's another
51:49 - issue with the selectors here mm-hmm
51:51 - I think it needs to be done let me make
51:53 - sure that this works before I explain it
51:55 - that was gonna be Garros did it man
52:04 - debugging I'll explain what I did so I
52:08 - thought that I needed a space basically
52:13 - what I had previously was dot rectangle
52:20 - space
52:23 - plus the geranium apparently jQuery
52:30 - doesn't like that I thought that it just
52:31 - needs to match the CSS selector but it
52:34 - really is expecting another dot here
52:36 - because there's two classes we're
52:38 - talking about here doc rectangle and dot
52:41 - terrain name yeah this is so if I go
52:48 - into here again this is what we're
52:51 - talking about dot rectangle dot one
52:55 - value so again as we've kind of seen a
52:57 - couple times now the way that syntax
52:59 - works across the files sometimes there's
53:01 - overlap sometimes there's not great
53:04 - place to double check that stuff is
53:05 - documentation all right so let's see
53:11 - here to try grass again let's try
53:16 - another one
53:17 - yeah turn the other ones great yes
53:22 - amazing yeah um so we can earn
53:26 - everything new grass mhm but we've got
53:28 - two other background images that we want
53:31 - to use we have the rocks one and the
53:33 - forests one right but lucky for us we've
53:36 - kind of figured out the majority of our
53:38 - code so far right so Nick what would be
53:41 - the next step that you would take to
53:42 - finish this off so we could add our
53:44 - rocks and forests so I want to add
53:47 - something to check the input mm-hmm
53:50 - and I want to check for different
53:54 - terrains drinks right I want to check
53:55 - for grass I want to check for rocks and
53:57 - check for forest so I'm gonna extend my
53:59 - conditional statement to have check for
54:01 - grass if that's grass mm-hmm make it
54:04 - grass if it's rocks make it rocks yep
54:07 - all right let's do it
54:09 - okay so in here and get rid of this
54:12 - mm-hm and all right
54:20 - all right so that's my first if-else
54:23 - it's not some grass and we want to check
54:26 - if the terrain string is something else
54:31 - okay and I'm gonna do essentially the
54:36 - same thing just with a different URL
54:38 - that's what I'm gonna copy this code and
54:42 - congratulations Michael bowling and
54:44 - getting your grass to grow we have all
54:47 - fallen yeah to the extra syntax elements
54:50 - as you see as we've seen as it happens
54:53 - all the time to do different so instead
54:57 - of grass here and I want this to be
54:58 - grass anymore
54:59 - it's forests so I want divorced yeah
55:05 - let's see if it works yeah you can
55:07 - always grab you also have the separate
55:08 - URL for forest - just some keys okay
55:12 - scratch still work grasp it works this
55:19 - is never felt so good yeah
55:26 - okay and then I'm gonna knock this last
55:29 - one out really quickly and then I'll
55:31 - answer questions I'm gonna write one
55:33 - more else if mm-hmm for our last rain
55:36 - yep wraps again I'm gonna go here copy
55:45 - that
55:46 - it's that doing that I just saw a
55:48 - question in here Dominic said question
55:51 - about kiap function when you type r that
55:53 - was one key up action but grass is five
55:55 - cubes you are correct if you were
55:57 - actually just to console log the user
55:58 - value and have the console open as you
56:01 - typed your input you could see that the
56:04 - console would log it each time it
56:06 - changed it would go from G to G R to GRA
56:09 - to G RA SS etc I mean well you know
56:12 - missed a few in the middle there but
56:14 - point being that it's actually calling
56:16 - that each time and so it's still
56:19 - checking it each time luckily for us
56:21 - computers are really fast so that really
56:23 - isn't a super like big burden on them
56:26 - but it will be checking it each time
56:28 - until
56:29 - reaches a string that meets the
56:30 - conditional so now we have finished the
56:36 - basic product yeah I did it I just want
56:40 - to clarify a few things
56:42 - yeah if you did get stuck at any point
56:45 - you can follow along up there in the
56:50 - project on kill Academy this kind of
56:53 - explains like what we just did mm-hmm
56:55 - with little hints and stuff it's example
56:58 - like these are where the URLs are and
57:00 - there's additional steps that we won't
57:02 - get to today but you can build this out
57:05 - even more following along yeah exactly
57:08 - so you may refactor things in a certain
57:11 - way to add more variables in for example
57:17 - you can change it so you know if say
57:22 - user error is sometimes an issue or
57:25 - really like more about your expectations
57:27 - if for a user so we're anticipating a
57:30 - user to type grass rocks and forests as
57:32 - all lowercase but what would happen Nick
57:35 - if I type uppercase G and then the rest
57:38 - of it lowercase or the entire thing
57:40 - upper case s so grass doesn't work so
57:45 - grass doesn't work but lowercase grass
57:47 - does and can you do it with type the
57:50 - title capitalization - yes so that also
57:55 - doesn't work and that's again because we
57:57 - are checking exactly a string that is
58:00 - lowercase typed grass but we could do
58:04 - you want to quickly show them yeah yeah
58:07 - I can jump into really quick okay so
58:09 - there's a quick fix for that one just to
58:11 - anticipate a couple of edge cases so I'm
58:13 - gonna let Nick explain that yeah so
58:16 - there is an intermediate step here that
58:19 - I'm gonna talk about real quick to check
58:23 - for just the title case grass I could
58:25 - say if terrain equals grass or I'm just
58:29 - using the horse just using the or
58:31 - symbols here can I take this yes
58:36 - grass or equals grass
58:41 - which would work so then I can do
58:43 - lowercase grass or title case grass if I
58:48 - did anything else like all kit caps
58:50 - grass it wouldn't work yeah and then
58:52 - there's all kinds of different
58:52 - variations capital R capital a whatever
58:54 - so the way that we could cover all those
58:58 - cases is just make everything uppercase
59:00 - and then only check for upper yes or we
59:02 - can make everything lowercase and make
59:03 - everything true
59:06 - so the upper case because then it's like
59:07 - you're yelling you know that's funny hmm
59:10 - so I'm gonna do it in the key up of it
59:16 - when we capture the key up information
59:19 - we're gonna immediately make everything
59:22 - uppercase so target value to upper case
59:29 - which is just a regular method in
59:32 - JavaScript for any string that makes it
59:37 - uppercase mm-hmm okay so I saved this
59:39 - and now instead of checking for grass I
59:41 - really want to check grass mm-hmm okay
59:46 - we'll see if that works grass still
59:54 - works grass ooh and grass grass yeah and
60:01 - I know that works so I'm gonna add that
60:04 - for rocks forest as well and so folks
60:09 - are talking about whitespace and the
60:10 - things yeah you could you know write out
60:12 - lots of different ways to check for lots
60:14 - of different user inputs actually fun
60:16 - fact another behind the scenes story
60:18 - that's how we check your code I could
60:19 - Kathy a lot of things like this but
60:23 - really okay how do we balance what we
60:25 - think the user will input and what we're
60:27 - checking for so someone mentioned
60:28 - regular expressions we write a lot of
60:31 - regular expressions we also use a bunch
60:33 - of different testing Suites to do some
60:35 - trying valuate functions built some of
60:38 - those two for a couple of these
60:39 - interactions as well to give user
60:40 - feedback mm-hmm were there any other
60:45 - questions that we missed
60:49 - good project okay and then we're also
60:55 - gonna I think we can provide this code
60:59 - if we need to the final cut if you a lot
61:03 - of people get stuck we can also provide
61:04 - that yep absolutely
61:07 - anything else
61:10 - couple other like extensions do you want
61:13 - to keep going if you want to keep going
61:15 - so um one thing you may have noticed is
61:18 - that I'm just gonna drive for a second
61:23 - so you may notice that in this input box
61:26 - the text color is black and in this
61:29 - input box the text color it was was gray
61:32 - until I clicked on it and it's great
61:33 - here so how it actually functions on the
61:36 - site is we've added another little
61:37 - helper function just to allow when the
61:42 - user has input their text after you
61:45 - click away like I clicked away from here
61:47 - that checked the text changed back to
61:49 - gray Ford to stay black afterwards so
61:55 - that could be a little extension for you
61:57 - to try another extension is to add more
62:00 - images so we actually have a whole slew
62:04 - of images that are used as part of this
62:07 - project in a future extra exercise and
62:10 - Nick has added them here
62:12 - so you can try it with a different one
62:13 - and you may think about if you are using
62:16 - all these images you could rather than
62:19 - use a conditional statement to check for
62:22 - different inputs you could use a switch
62:23 - case instead and add that to your code
62:26 - so that's that's how you build one of
62:31 - the applets that's in a code can be
62:33 - course one that we built that's like
62:35 - basically what we did for work yes more
62:38 - than that pretty sweet word yeah and we
62:40 - did a little bit better yes
62:49 - thanks all your help we we did it yeah
62:51 - exactly so again you can check out this
62:55 - live stream after we're finished and
62:58 - watch the entire process
63:00 - again in case you missed any steps if
63:03 - the code is still not working for you
63:04 - don't worry happens all the time that
63:07 - happened for us during the middle of
63:09 - this livestream as well
63:11 - breaking your code is just a part of
63:12 - doing it so just make sure to look
63:14 - through it closely see if you have any
63:16 - extra parentheses or you haven't closed
63:20 - bracket any small thing like that just
63:23 - maybe just maybe the thing that you need
63:24 - to if you do have other feedback you
63:27 - want to leave there is a forum in the
63:33 - chat that you link to a forum you can
63:35 - chat and then if you do want to see this
63:38 - in action or like are interested in what
63:41 - else we're teaching in this lesson there
63:43 - is a link in the YouTube description
63:45 - later on for I can just go to it okay
63:49 - but learn how to code this is where it
63:55 - actually on the website so check it out
64:00 - alright alright
64:02 - thank you guys so much have a wonderful
64:03 - rest of your Thursday

Cleaned transcript:

alright hey everyone I'm Zoey I'm Nick and we are the cocreators of the learn how to code course that's new on coach Adam II this week so for this livestream we're doing something that's a little bit different we are going to be pair programming one of the interactions that we built in the course so rather than go through a project that's associated with it we're giving you more of a behindthescenes look into how we made something for the course Nick you want to talk a little bit about the project yes so first of all looks like let me know if you can't hear us okay you can't see us okay and we can work on that anytime but back to what we're talking about right okay in the variables module and lesson have an echo audios affected okay yeah okay we're gonna keep going we're gonna have a lie so itself we have the variables lesson which essentially teaches the concept of variables which are used throughout program the whole learn how to code track the whole course is about these fundamental programming concepts and variables is one of them but we're not teaching this with any programming language we're doing it agnostic of any programming language which is why we're building these cool interactive applets which was super fun to make exactly and we're gonna build one of those right now we're gonna show you how we've built one of those so this particular one was built with HTML CSS and a JavaScript library called jQuery some of the other ones were built with another library called p5 but we do have a jquery course here on code cad amis so we thought would be good to show you this one do you want to demo how the project works first yeah okay so I'm gonna go over here and go full screen so terrain one I'm just gonna I'm just gonna show you alright never yeah I'm gonna type rocks in here alright then we type grass here and then finally forests awesome so essentially we're teaching the idea of variables through constructing kind of like a game board if you've ever played sub layers of Catan that was kind of the inspiration for this and so the idea is that after we've made learners in the previous exercise write out each name for each kind of terrain they want on each square they realize it's pretty tedious there's a lot of repetition so in the next exercise we show them okay you could save it to a variable and then it will put up that pattern to whichever one you've designated as train one train two and you have a couple of different options there so after that let me show it with some other patterns and then you actually get to code some variables yourself cool that's a pretty good explanation yeah so we're going to jump into the a little bit of explanation of the code that's already there in the project itself after that Nick is going to walk through programming the JavaScript file and I'm gonna be here on hand to help out of course at any point you can ask questions in the chat we're gonna take some breaks throughout but if you have like a really important question we'll be keeping our eyes on that we also have Alex the man behind the screen to help us out in case we miss anything as we go along and I think like Alex said in if you're looking on the YouTube channel you can get to the link in the description if you're on code Academy you can get to the link it's just the video right there you can that's what you see on screen over there yeah we do suggest though if you are coding it in this project space right here you can see that there's a link to the video however if you played the video while you're in the project space it's gonna be a little delayed so you recommend actually opening up the link in YouTube and listening to it there and coding along in this you're also welcome to code this along in your own text editor if you have one we're going to be doing it here in the project space so that will all be on the same page as everyone using it you know what what I think we should introduce a little bit more okay sure Zoey what else have you done code Khadem II uh I've done a lot of different things of code cadmium so I've been a curriculum developer here for about a year and a half I came here after finishing graduate school at NYU's ITP program and so since coming here I've worked on a CSS grid course I've worked on some data science content including our data visualization with Python courses I started the code foundations track and have basically been leading that for eight months now so yeah I have a real investment in making learning how to program really accessible to new people and so getting to do a lot of code foundation's content that's more about why is programming important how to get started with programming especially our learn or new learn how to code stuff is really in line with kind of my mission of being here at code Academy I've been here for I guess like a year and a half you start a little bit before me I have worked on I also audited to see a CSS grid thing I did a little bit of learn Alexa and didn't learn secret from scratch I worked on that with sunny if you've seen him before on live streams yeah he's a sequel King and what else we done I've done some JavaScript stuff I've been kind of all over the place until this past few months where we've been working together doing coding fetish and stuff working on this yep yeah awesome and it's another quick plug for this course even if you are familiar with programming and concepts like variables and functions or like you know something that you're pretty familiar with the way that we teach them is pretty new to how we teach on code Academy which is a really fun experience for myself and Nick for me personally getting to pull into some my experience with interaction design getting to try out new ways of you know working with the Ellie so give them a try give us some feedback so we know if you like them and what we can do to improve our teaching in the future mmhmm Tim you write TDD was very important okay all right okay so let's walk through like what we're gonna start with so you know where we're at and if you're just beginning that's okay if you have a basic understanding of HTML CSS and JavaScript even better that's kind of what we assume starting this but we're gonna walk you through each step so let's do it let's do it all right so first we're gonna start off by explaining the files that are already there in the project itself so we have a alright we're gonna wait we're going to show you the none JavaScript version first but what we do have is we have this index.html file and we have a couple of different things going on but for those who are new to coding or want a little bit of refresher the index.html file is where we have our HTML code which is how we structure the layout of our page so that's where we're deciding what kind of content is going to go in there and then we have another file which is our style CSS file mine opening that really quickly and that is how we are going to style everything that's where we get our nice layout our colors our fonts so they're really kind of like two important things that I want to draw your attention to that are going to be important for our JavaScript file later and just also kind of give you a little more context on how this was built so as we mentioned this is a game board and you can see that there is this grid structure right back here this grid of squares and that they change every time we use our inputs a certain name so the way that we achieve that is through using CSS grid so what as actually happening here is that we have two grids with two nested grids one is just two columns and then the game board itself is three rows and three columns I'm not going to get into the specifics of CSS great but if you are interested we do have a CSS course as you mentioned we both kind of work it so that's why we're using it right here so now they're familiar with what we're starting with let's see what that looks like so I showed we showed you the final product and now I reset the project and I can show you what happens when I do this okay delete the workspace yeah do that again reload that and then so one important thing to mention is that so as you saw when you have the correct version running if Nick were to type in rocks and train one all the terrain one squares would change trucks now it doesn't work like that so how are we going to achieve that well one thing we want to look at is how we're creating these rectangles in the game board so if we scroll into our HTML awesome thanks for making that big we can see that we have a giant Dave called game board and then within that we have nine other divs and in here we're saying that okay all of them are going to be called rectangle and that is a class so that's important because we are going to have to use that class once we get to the JavaScript part itself so remember that rectangle class I'm trying to think of anything else let's actually look at how we're currently staying styling the rectangle class in style dot CSS I think the one thing the other thing is that the name do we want to talk about that oh yeah thanks remind me about that cool so another thing to pay attention to is the name attribute in this input tag right over here so the input tag relates to those squares we're actually getting the user input so what's important about this is that we're distinguishing those inputs from each other by giving them this name and setting it to one value to value and three value um cool anything else before we ready for stuff yeah okay click on stuff alright so we've got a bunch of stuff we're gonna kind of ignore it again it's mostly like making things look pretty but a couple things I do want to point out mention the grid layout you can see that we're setting that grid display here in the certain column widths there so again if you're interested in CSS grade pay attention to that later but what I really want to get down to is this part here so we have this selector dot rectangle so in CSS if it you're calling a class you want to put a period before it and then the class name and then in this declaration block right here we're gonna ignore this stuff here it's just to make again everything look nice but we do have this background image property and then everything that follows it is just what's the value of that so right now it's just a really pretty black gradient that's it but that's gonna change again as soon as we put in our JavaScript correct cool okay so let's do that let's put in the JavaScript let's put in the JavaScript all right right now the index.html file and the Styles the CSS you can see that on the screen on the right here but it has no JavaScript so it's not interactive which is why when I click rocks what I type rocks nothing happens so we need to tell the browser that we need some more files we need two things we need the JavaScript the what we're gonna type and then also a library called jQuery so jQuery is a library in JavaScript that just gives us a bunch of helper functions that makes it a lot easier to do what we're about to do yeah you could do this with regular JavaScript we're not going to show that here but it is possible we're gonna use jQuery because it's just less sin taxes less code you have to write and there is a downside of using the like a separate library mmhmm but it doesn't take that long to load and it's a lot easier to get up and running yeah which is why we like it yeah and one of the reasons that we ended up using it in this example is that jQuery is really easy to prototype in so what Nick said before you could do this entire thing in vanilla JavaScript it ends up being a lot of code and if you want to spin up something really quickly just to see how a user is going to interact jQuery is a really great option for it again another plug we've got a great series of jquery courses on code academy so if you want to dive into this more we recommend you look at that okay so first thing jQuery I'm gonna go back over here so you all have this link in the project on code Academy you can find a link to jQuery right yeah code jquery.com this is where we find the jQuery library and just to demystify this if I want to look at what like what is jQuery I can open up the file that is jQuery and then see a bunch of JavaScript code it's just a bunch of functions that make it easier to do what we ought to do we're not going to use that one because we don't need to well we're not gonna use that we're gonna use the minified version and why do we want to use the minified version the minified version has no line breaks no spaces so it works the same it's just less web takes up less in memory uhhuh which makes performance better and you can see that that's really ugly but it works in we don't need to read it we're just gonna use it so that's fine there we go okay which means I click this and this is the tag the element they were gonna want to use so I'm just gonna copy this from here go back to the project and right where it says load jQuery within the head element I'm gonna paste that okay so now jQuery is in our application so I'm gonna save this and reload this so now I haven't added any new like features to this website but I can now use jQuery and let's show you how that works so what I just did is I clicked on the website the little website on the right side and go to inspect I think it's different for different browsers but it should be a pretty similar to rightclick on that space okay and I go to the console and I can type in any JavaScript here jQuery you can access with the dollar sign and then I can put in whatever selector I want yeah so again one of the reasons that you'd use jQuery is that it enables you to quickly access and modify different elements in HTML that's why we're using it here so in this case we want to grab whatever value the user inputs into that little input box and then use that to modify the CSS in our squares yes so I'll give you example of like accessing something we can get input mmhmm and that gives us three things I can let me make this bigger okay so I just did dollar sign parentheses input and input refers to these these forms on the side here where we type code so you can see that's what we're selecting input 1 input 2 input 3 okay and then I can also set the value so now we've accessed it we can modify it now and I can put Zoey's name in here and there it is all of them have Zoe yeah okay everything says curriculum developers have you go okay so we have the jQuery now we need to write our own code it's gonna be in a separate file called script is then why do we want it in a separate file that makes it easier to maintain mmhmm and personally I like it because it's just how I think of the code is separate items and if I know there's an issue with the elements on the screen I know it's HTML if I know there's an issue with the JavaScript with the interactions that I know it's the JavaScript so it's just kind of separation of concerns cool okay I'm gonna go to the bottom in an X in index.html go to the bottom and load the script here I'll tell you why in a second all we do all we do is use this script tag and the source which is the name of the file sweep Tijs okay and then i close that okay so now whenever this reloads I'll talk to you right now mmhmm I'll save and reload now we can write code and script that J s and the browser knows about it we stop there for four questions yeah yeah anything we should be paying attention to looks good people were able to find the jQuery CDN okay okay let's keep going yeah yeah do you ever is that the way of importing libraries nsj just check a URL in the ATM HTML you make it sound like super ear like like we have no diss no regards throwing them in there um there are other ways to import it you can actually download the file itself and include it with the rest of your files so if you were to upload it you know onto your server where you're hosting your website you could bring the library with you yeah so like to back up a little bit mmhmm imagine that we're developers making these files on our own server and when anyone visits our website which in this case you can see is localhost 8001 ever that means you the browser gets those files and we could just download the whole jQuery library put it in our server and it would work as well but jQuery is available online through things called CDN which we don't need to get into now but basically it's a network that makes jQuery available for any web page to use and that's why we're doing this up here source HTTP code jquery.com and why we're naming this one down here script is because that's local that's just on our server yeah it's another question and someone kind of answered it in there about why we're not using es6 so yeah just to reiterate you can do all of this in vanilla JavaScript especially with es6 but for the purposes of this again rapid prototyping quickly typing jQuery is really helpful and we think it's like a nice way of like for beginners to start making interactive things so the other thing that Jake where is nice border is browser compatibility yes thank you first yeah so like browsers do a little bit different things with JavaScript like Safari versus opera versus Internet Explorer versus Chrome but jQuery takes care of all that so when you use a function like Val it takes care of all that those all of those issues for you whereas in JavaScript you'd have to do like separate things for each browser type yep okay versus Firefox fine okay so let's build a file let's do it the first thing that we need to do is check for a user typing something like essentially when I type rocks in here we need to know when that happens and then capture that word rocks and browsers have a nice thing called events so whenever a user does anything interesting on the screen mmhmm in a browser there's an event fire the browser basically announces hey you just clicked the user just clicked or the user just typed it's for example if I click here click then I'd event is fire that's called the mouse click event whatever that is and for this one there's also with like text there's also key press key up key down we're gonna use key yeah key press would work I think in this case but it's not it just done it yes so interestingly I tried this out to distinguish between key down key press and Kia and it will register the wolf or key down it will get the press first without getting the character itself same thing with key press right so you will not we get that string that we will eventually need right so we can rest you know explore that Li yeah we want to so to break that down what we're talking about is imagine that like this is the key like I am a keyboard this is the key when I press down ice the browser says key down event and when I let go the browser says key up event so we care about that key up event because that's when we know that something's been typed yeah okay so let's get started all right um do we want to talk about setting up a file on jQuery yes okay let's talk about that let's talk about that every time this loads this this page we want to access some of the elements on the page but we want to make sure that all of those are loaded before we start like accessing them changing them so jQuery conveniently gives us this thing called document dot ready I know let me type this out whoa you okay document dot ready is just a function but it says whatever you pass in to the ready whatever arguments you pass into ready jQuery will execute when the documents ready to be saved to make sure that all the HTML is loaded we're gonna put all of our code in here yep so we're gonna be like doubly safe because if you remember when Nick added the JavaScript file to the HTML we put it at the end right before the closing body tag so both of these techniques equally ensure that everything will be loaded in the HTML before we go into the JavaScript mmhmm okay so document out ready expects a function mmhmm so to find a function this is just an anonymous function here and whatever we need to do will do in there all right so let me just show you just to clarify even more what we're doing let me see here yeah I'm gonna select the input boxes and then log that so you can just see exactly what's happening so I define a very define a variable called in input boxes and it's gonna be a selection of anything that is an input element with the class box so Nick why did you put that dollar sign before input boxes I haven't seen that in a variable before I could have done just the input boxes but I want to remember make sure that I remember later on that that variable refers to a jQuery selection rather than just some other variable in my JavaScript so that allows me to differentiate it cool and what does that dollar sign mean in jQuery specifically that is how do I describe it jQuery essentially you can access it with the word jQuery or the dollar sign it's just a shorthand which means that the dollar sign gives you access to all the functions all the methods in jQuery okay so let's console log in clip boxes because I just want to make sure that I'm doing everything right save this that reloads and let's inspect console okay we can ignore the number five thing up here the point is we logged something to the console which is this which again is the input one two and three and you can see right there that's what we were looking for okay because that's where our event is gonna happen yep all right so we've selected that now I want to define an event handler like I want to write a function that does something when the KeyUp event happens and we have access to that again with jQuery input boxes dot Kea okay so input boxes is a jQuery selection I remember that because I put the dollar sign and a jQuery selection has access to all of the jQuery methods yep which is why I can use key up here and kia expects just a function that says what are you gonna do when the key event happens on any of these input boxes okay function event okay so now I'm gonna find a function with the parameter event this is just normal it's normally how you write it because that function is always gonna receive an event what I mean you what I mean you'll see you later okay now let's capture whatever is in that event mmhmm so you know what just to show you um the event I'm gonna show only thing all right that's pretty cool this and I'm gonna delete this and okay so now I'm back in my console nothing happened nothing console.log because the key event didn't happen going here press K an event is logged and there's all kinds of information in there all we really care about is two things target so like the event this thing has a property called target which is this input box so we know whenever we get this event we know where this is happening is there anything else yeah we want to know where I typed K so where's Kay I go down here to you know what I know wearing it yeah let me make sure there we go okay that's the other property okay event target event dot value cool which means I can start storing this stuff mmhmm my target my event is some element let's let me check one thing here mmhmm I'm gonna call this the input name this just refers to what we're clicking or typing what we're tight what we're typing so whatever input the user is giving us okay wait so that means actually I only named this value okay so in bed here right is whatever they typed example and the previous sample that was okay I also want to know where this happens so input name equals a bed target okay so now input value and I press example should be K input name should be the input box okay so now I've captured that let me take a break there to check if everyone's following along here okay all right I think Kenny's got that one all right get confident Alex did you see anything we should address yeah so like Nick mentioned before the dollar sign is a I guess like a similar representation of jQuery which kind of sounds a little abstract but basically when you're writing a JavaScript document you need to let it know that you're using the jQuery library and so we do that partially by including the library in the HTML and then it's expecting us to talk to it in a certain way and so it recognizes the dollar sign is a symbol like oh hey like you know you're talking to me this jQuery library right now and specifically it's expecting a certain syntax that has the dollar sign than a parenthesis with an object inside of it whether it's the document or it's an object that we're selecting through syntax like with our input box there it's looking for the input element in HTML with a class box I'm gonna make some comments so we don't forget just like as we answer questions they don't just be writing here so I'm gonna say select input boxes mmhmm and use dollar sign to remind me that it is jQuery selection so again like any case with naming variables you can name variables however you want it's just good to follow certain conventions conventions and good practices so specifically if you're writing jQuery code we put a dollar sign before our variable name again to remind us that it's a specifically jQuery selector all right so so far we have document already we've collected we've selected the input boxes and we have done something with the key of event whenever key up happens something happens now we're gonna do something with that input all right essentially what we want to do is see if it's rocks forests or grass yeah that's like a whole nother thing and it's gonna be a lot more organized if it's a whole another issue just to put it in a separate function yeah that sounds good to me okay let's call it check the input check the input and give it these two piece of information look value excuse me and what I'm hoping that this check the input does is checks if it's grass if input value this grass rocks or forests if it is then put the the tile there like the tile in the matching terrain exactly which is why we need that input name argue mmhmm and just to quickly clarify we're gonna actually write out the function in just a moment but Nick is putting he's calling his function first in this current function that we have right here just so we know how the stuff that we're grabbing within this function is going to relate to that logic that Nick just explained yes okay so here is the function check the input all right and this is gonna be a terrain string uhhuh and let's just do it all out okay terrain string and then the name is gonna be the name that we're gonna pass in right so this is the like touring name and again I just like to make sure that we're doing everything that everything still is working fine you ever broken anything okay so based on what we have here on the key up event we call check input which is to find out here what what is gonna happen when I reload this page in terms of the console let me refine that I'm gonna run I'm gonna save this and I'm going to go here and I do something like press R in the console that we've been checking what should we see see if anybody yeah and you're welcome to respond in the chat oh yeah I'm checking this we're looking at the check yeah I want you to just yell at me and I hope I can hear there might be a little bit of delay so we'll give people a second to think about it are so John Moore says we get an R in the console key up event from tertiary adjunct an input value equals R all right another answer from John Moore okay changing your answer thread out all the answers so Nick is also putting another good practice into play which is checking your code as you go along oftentimes we you know have this idea about like what our logic is gonna be so we just start coding coding coding and I get to the end and then we realize oh there's a bug so what's you know good about what NICs doing right now is that he's you know created one function you started creating another function he's taking a pause and being like okay let me make sure before I write out the rest of this function I have everything in place before I implement the rest of my logic mmhmm so as we getting some more answers in just want to clarify when I'm at what I'm asking is I press R was a key event and something happens in the code and something is going to be logged to the console and I'm asking what that is so far we've gotten like R maybe it's key up event maybe its input value equals R fancy okay so then what we're gonna I'm gonna show you all right I've done a lot of times so let's reload okay I'm gonna go over here I'm gonna do it again press R let go missus logged we get this input class input element which is here okay and we also get this undefined which I was not expecting someone in the chat may have also come across the same so let's let's see what we're doing here close this in the event we select the event R value and the event target and we send those we call check the input with that yes okay check the input we call terrain string terrain name and we're logging that so for some reason terrain string is undefined and terrain name is like the hole that hold the hole target the hole right input let's start with the easy one and so vente target is is right it's the input its where the event happened for what our purpose is we actually just want the name attribute of that we'll get to why what that is in a little bit but I'm gonna do that right now so instead of just doing the target I'm just gonna say name and just as a quick refresher you can find the name attribute in the HTML file attached to that specific input each input has it name attribute okay so I save this let's try one more time go over here are yeah one value which is the name awesome as expected but undefined it's still weird and I could go through and show you where all this is but I happen just happened to know that its target dot value instead of value and it looks like Michael Montgomery also figured this out as well only works with event target dot value that was my that was yes I wasn't gonna say that there's gonna teach us the rest of the okay Thank You gurgly let's see it works yeah there we go keep doing this cool um so in addition to typing Google D Guk like Nick was just doing could also type one of those special keywords that we are looking for like rocks and so now that we know that we can grab rocks which is one of the strings we are looking for and we can grab the name of that specific input box we can start putting together some logic for attaching our user input to our rectangle backgrounds okay so now I need to I can get rid of this well I'm only though okay so first thing I want to do is check if what I typed mmhmm is grass or is rocks yeah let's do a class guys and eventually we're gonna be checking in grass or rocks or forests mmhmm which sounds like a conditional statement yeah if this string is grass or else if it's rocks sounds like additional to me so I'm gonna I'm gonna use that with ifstatement JavaScript what's the condition I want here mmhmm if what I type is grass then I expect that terrain string because that's what they're typing should be grass all right and again for those newbies when Nick just typed out is an expression where he's checking if the terrain string again what we're grabbing is that input value from the user is equal to grass and so you know you may have seen an equals sign before this is a triple equal sign so we are checking if it has the same string as grass but we're also making sure it's a grass it's a Christ it's a Chris it's grass if it's a string datatype strictly equals okay so terrain string equals grass I know that a equals grass in this hypothetical situation that means that I want to put in terrain one in all these terrain ones the grass the grass image like we saw in the beginning or any of them just any time a user inputs grass it could be in terrain wandering to terrain three it will know that in the corresponding blocks over there that it should fill it with grass so I need to select the since I'm gonna be modifying the terrain one I need to select those as you as you may recall I'm gonna go back to the index.html we define things with these classes for the gameboard like one value to value one value but we also use that as the name for those inputs which is how we can like check this so whoever wrote this code was thinking ahead which means that we can use the name to find the class okay so what that means is I want to check I want to grab so I'm going to use jQuery whatever the input whatever terrain rectangle right it's like some kind of dot rectangle I'm gonna go back here cuz I'm getting lost okay so I'm gonna select everything with a class rectangle mmhmm that also has this one value yeah or whatever the name is I was gonna say because we want to make we don't want it to be just one value because then we could only attach grass to the ones with one value right so how do we make it more general we could use terrain name mm right we have that terrain name very right that's associated with the specific input like last time it was one value when I typed in the first box yep so I'm just gonna add it I'm gonna add it okay I'm just gonna select that okay let's see let's see if that works I wanna console.log this we ask again what do we expect to be console.log here what I'm gonna do is I'm going to go to the web page type our in the first input box and then I'm going to check the console what do we all think it's going to show up in the console look if I did all right what would happen nothing hmm like that response well response so we we won't reach the statement chip long says okay thank you for a fuller explanation of how we're getting to nothing can someone get into that a little bit more we won't get into that statement you won't reach that statement does not match the condition nice clarifying a bit more yeah come on go from there that teamwork right there nice that is pair programming in action as well that's quadruple quadruple programming right okay so as folks are mentioning nothing is going to happen because we can ignore that other console.log but basically we have a conditional statement right now that's checking a specific condition in that condition is terrain string is equal to grass we're checking if it's equal to grass since we've only typed an R in there our would get saved as terrain string it would check is R equal to grass and say no nothing would happen including that console log that's in there let's check and Tammy Reese you are correct because we do still have that other console log up there mmhmm sorry forgot about okay so right so we see our one value which is this first statement that's always executed but we don't see anything from this statement I can even make it more clear if I comment this out mmhmm you'll see what tertiary and chip we're talking about so I saved this I go again I want to put them up together here nothing happens gobbledygook all right now type grass okay fine it works okay so I typed grass and this showed up in the console log okay so what the heck is this this is a jQuery selection okay mmhmm we can check more about it let's see if I can show you exactly where it is I'm gonna do let's I think we can how might best describe this okay what we expected was a jQuery object to be logged which is exactly what happened this WF n dot init this previous object okay all right and just so you know okay so we'll save do this again grass okay cool now that means that we're getting our jQuery object awesome now what we want to do is change the background yeah exactly so we know our condition is working and all that we're having executes right now is this console dot log statement but what we really want it to do is to change the background of those squares up there to a nice grassy pattern so how do we do that and as you recall the background image is set here with this CSS property background image and the value is linear granite you don't have to worry about that the point is that's the black that you see now we want to change that and we specifically want to change it to a image that we have hosted on AWS so just to know we've actually already given you all of the URLs for these in the project page so if you go back to the narrative you can scroll down and towards the bottom you'll see a couple of the different links that we use for the graphs rocks and four so make sure that you have these on hand for the next portion we're gonna grab our graphs URL make sure that we have it on hand and then go back to our JavaScript okay and what I want to do is I want to change the CSS property background image to the value whatever that URL is yes okay so let's instead of console logging this I'm just gonna grab this const terrain okay I want to say this terrain CSS mmhmm which is again another function that jQuery gives us just making it easy that will change the styling of whatever this terrain is mmhmm it takes two arguments the first is the property wrap got image this is property I want to change and to make this clear this I want to change that URL okay so a couple things you may notice as Nick mentioned dot CSS is a easy jQuery method to change any CSS styling what you have to do again is to give it two values you have to give it the property name and the property value what you may notice though is that the syntax is different from how we do things in CSS right so we don't have a colon separating the property from the property value and we don't have it ending in a semicolon so just be aware of that it's separated with a comma instead another what is a funny a CSS styling syntax thing is that we have to state that something is a URL so we put URL beforehand and then we have our URL in parentheses so make sure you have that URL beforehand I just remember one quick thing I'm going to end this space in here it's just a bug that I think will save herself some time later okay you're adding a bargain no no I'm fixing a boat okay oh because it's two classes I'll explain that a minute okay okay I'll just explain it what I was doing is I was putting those two strings together the rectangle and whatever the input name is which would make a giant word rectangle input name but that's really not how we select that rectangle you need a space just like you see here rectangle three value so that's how you select it correctly mmhm anyways let's see if this works all right oh good okay hold on just want to make sure I can reload this okay so doesn't work okay let me double check what we've done here yeah I thought you guys thought okay let's check our console could we console.log that Tareen calm about a variable there just yeah yeah let's do that cool yeah cuz I was messing around with that let's see what I did yeah cool that's right save open this again one more time grass so the string isn't showing up here let's try this yes let's try it with the other ones oh okay let's compare take a quick look at what I've wrote notes to myself here and we know our conditional was working before mmhmm so if anyone sees the bug yell out see what I've done here mmm can we console ugh something else could have you have extra parentheses oh so what we what we figured what we know so far is that one IRA type grass that we're not reaching this console.log so we know that terrain string doesn't equal grass on that yeah mmhmm you see that Oh see that right thanks Tammy Rees good eyes okay agree yeah all right cool and what I just log the terrain here terrain yeah okay okay yeah I think it's another issue with the selectors here mmhmm I think it needs to be done let me make sure that this works before I explain it that was gonna be Garros did it man debugging I'll explain what I did so I thought that I needed a space basically what I had previously was dot rectangle space plus the geranium apparently jQuery doesn't like that I thought that it just needs to match the CSS selector but it really is expecting another dot here because there's two classes we're talking about here doc rectangle and dot terrain name yeah this is so if I go into here again this is what we're talking about dot rectangle dot one value so again as we've kind of seen a couple times now the way that syntax works across the files sometimes there's overlap sometimes there's not great place to double check that stuff is documentation all right so let's see here to try grass again let's try another one yeah turn the other ones great yes amazing yeah um so we can earn everything new grass mhm but we've got two other background images that we want to use we have the rocks one and the forests one right but lucky for us we've kind of figured out the majority of our code so far right so Nick what would be the next step that you would take to finish this off so we could add our rocks and forests so I want to add something to check the input mmhmm and I want to check for different terrains drinks right I want to check for grass I want to check for rocks and check for forest so I'm gonna extend my conditional statement to have check for grass if that's grass mmhmm make it grass if it's rocks make it rocks yep all right let's do it okay so in here and get rid of this mmhm and all right all right so that's my first ifelse it's not some grass and we want to check if the terrain string is something else okay and I'm gonna do essentially the same thing just with a different URL that's what I'm gonna copy this code and congratulations Michael bowling and getting your grass to grow we have all fallen yeah to the extra syntax elements as you see as we've seen as it happens all the time to do different so instead of grass here and I want this to be grass anymore it's forests so I want divorced yeah let's see if it works yeah you can always grab you also have the separate URL for forest just some keys okay scratch still work grasp it works this is never felt so good yeah okay and then I'm gonna knock this last one out really quickly and then I'll answer questions I'm gonna write one more else if mmhmm for our last rain yep wraps again I'm gonna go here copy that it's that doing that I just saw a question in here Dominic said question about kiap function when you type r that was one key up action but grass is five cubes you are correct if you were actually just to console log the user value and have the console open as you typed your input you could see that the console would log it each time it changed it would go from G to G R to GRA to G RA SS etc I mean well you know missed a few in the middle there but point being that it's actually calling that each time and so it's still checking it each time luckily for us computers are really fast so that really isn't a super like big burden on them but it will be checking it each time until reaches a string that meets the conditional so now we have finished the basic product yeah I did it I just want to clarify a few things yeah if you did get stuck at any point you can follow along up there in the project on kill Academy this kind of explains like what we just did mmhmm with little hints and stuff it's example like these are where the URLs are and there's additional steps that we won't get to today but you can build this out even more following along yeah exactly so you may refactor things in a certain way to add more variables in for example you can change it so you know if say user error is sometimes an issue or really like more about your expectations if for a user so we're anticipating a user to type grass rocks and forests as all lowercase but what would happen Nick if I type uppercase G and then the rest of it lowercase or the entire thing upper case s so grass doesn't work so grass doesn't work but lowercase grass does and can you do it with type the title capitalization yes so that also doesn't work and that's again because we are checking exactly a string that is lowercase typed grass but we could do you want to quickly show them yeah yeah I can jump into really quick okay so there's a quick fix for that one just to anticipate a couple of edge cases so I'm gonna let Nick explain that yeah so there is an intermediate step here that I'm gonna talk about real quick to check for just the title case grass I could say if terrain equals grass or I'm just using the horse just using the or symbols here can I take this yes grass or equals grass which would work so then I can do lowercase grass or title case grass if I did anything else like all kit caps grass it wouldn't work yeah and then there's all kinds of different variations capital R capital a whatever so the way that we could cover all those cases is just make everything uppercase and then only check for upper yes or we can make everything lowercase and make everything true so the upper case because then it's like you're yelling you know that's funny hmm so I'm gonna do it in the key up of it when we capture the key up information we're gonna immediately make everything uppercase so target value to upper case which is just a regular method in JavaScript for any string that makes it uppercase mmhmm okay so I saved this and now instead of checking for grass I really want to check grass mmhmm okay we'll see if that works grass still works grass ooh and grass grass yeah and I know that works so I'm gonna add that for rocks forest as well and so folks are talking about whitespace and the things yeah you could you know write out lots of different ways to check for lots of different user inputs actually fun fact another behind the scenes story that's how we check your code I could Kathy a lot of things like this but really okay how do we balance what we think the user will input and what we're checking for so someone mentioned regular expressions we write a lot of regular expressions we also use a bunch of different testing Suites to do some trying valuate functions built some of those two for a couple of these interactions as well to give user feedback mmhmm were there any other questions that we missed good project okay and then we're also gonna I think we can provide this code if we need to the final cut if you a lot of people get stuck we can also provide that yep absolutely anything else couple other like extensions do you want to keep going if you want to keep going so um one thing you may have noticed is that I'm just gonna drive for a second so you may notice that in this input box the text color is black and in this input box the text color it was was gray until I clicked on it and it's great here so how it actually functions on the site is we've added another little helper function just to allow when the user has input their text after you click away like I clicked away from here that checked the text changed back to gray Ford to stay black afterwards so that could be a little extension for you to try another extension is to add more images so we actually have a whole slew of images that are used as part of this project in a future extra exercise and Nick has added them here so you can try it with a different one and you may think about if you are using all these images you could rather than use a conditional statement to check for different inputs you could use a switch case instead and add that to your code so that's that's how you build one of the applets that's in a code can be course one that we built that's like basically what we did for work yes more than that pretty sweet word yeah and we did a little bit better yes thanks all your help we we did it yeah exactly so again you can check out this live stream after we're finished and watch the entire process again in case you missed any steps if the code is still not working for you don't worry happens all the time that happened for us during the middle of this livestream as well breaking your code is just a part of doing it so just make sure to look through it closely see if you have any extra parentheses or you haven't closed bracket any small thing like that just maybe just maybe the thing that you need to if you do have other feedback you want to leave there is a forum in the chat that you link to a forum you can chat and then if you do want to see this in action or like are interested in what else we're teaching in this lesson there is a link in the YouTube description later on for I can just go to it okay but learn how to code this is where it actually on the website so check it out alright alright thank you guys so much have a wonderful rest of your Thursday
