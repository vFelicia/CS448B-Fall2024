With timestamps:

00:00 - hi everyone this is the third video of
00:01 - the intro to python series
00:03 - and in this video we're going to be
00:04 - talking about arithmetic and other
00:06 - computational tools in python
00:08 - as we know one thing computers are very
00:10 - capable of doing is performing
00:12 - arithmetic
00:13 - addition subtraction multiplication
00:15 - division and other operations are easy
00:17 - to do in most programming languages
00:18 - and the same applies for python
00:22 - in the previous video we discussed three
00:23 - data types
00:25 - strings integers and booleans now as we
00:28 - know
00:28 - arithmetic operations like addition
00:30 - multiplication etc
00:32 - are performed on numbers so obviously if
00:34 - you want to perform these mathematical
00:36 - operations in python
00:38 - we would have to involve the integer
00:39 - data type in some way
00:41 - as this data type stores numbers
00:44 - okay so here i am adding two numbers and
00:47 - just like in math you use the plus
00:49 - symbol
00:50 - now if i create a variable to store the
00:52 - result let's call it sum because
00:54 - it's a sum of two numbers the data type
00:56 - would be an integer
01:00 - so now let's do some subtraction um
01:03 - let's just call it result
01:05 - is going to be 7 minus 6. so now the
01:08 - value that is going to be stored inside
01:09 - this variable result
01:11 - is going to be an integer with a value 1
01:14 - because 7 minus 6 is 1 and for
01:16 - multiplication you
01:18 - use the asterisk symbol
01:21 - and for division you use
01:24 - let me just call this result two for
01:27 - division you use
01:29 - the slash symbol so
01:32 - let's just do four divided by two this
01:34 - is four divided by two
01:36 - five multiplied by three seven minus six
01:38 - four plus five
01:41 - and for exponentiation you would do
01:46 - this symbol so this means 5 raised to
01:49 - the power 2
01:50 - and this would give me a value of 25
01:52 - stored inside this variable result four
01:55 - usually you'd combine multiplication
01:57 - exponentiation and other operations
01:59 - together so one important thing to keep
02:01 - in mind
02:01 - is that python follows the same usual
02:04 - order of operations that is used in
02:06 - mathematics so for instance if i was to
02:08 - write the following code
02:10 - the computer would perform this
02:13 - multiplication before it does the
02:15 - addition
02:15 - so it would do 3 times 50 3 times 5
02:19 - which is equal to 15 then 15 plus 4 19
02:22 - but now if i wanted the addition to take
02:24 - place before the multiplication
02:25 - what i can do for that is put
02:27 - parentheses around
02:28 - the addition so now what it's going to
02:30 - do is perform the addition first
02:32 - that's going to give me 7 times five
02:35 - which is obviously going to be
02:36 - 35. another important data type is float
02:42 - while the integer is a whole number with
02:44 - no decimal point
02:45 - a number with a decimal point is called
02:47 - a float
02:48 - while the integer data type well stores
02:50 - integers which is
02:51 - numbers positive or negative without
02:53 - decimal points
02:55 - like 2 3 negative 5 etc
02:58 - the float data type stores numbers that
03:01 - have a decimal value
03:03 - so let's say if i want to write a number
03:05 - 5.3
03:07 - now obviously since there is a decimal
03:09 - point
03:10 - this data is stored as a float and not
03:12 - an integer
03:14 - okay so just a small recap there are two
03:16 - main data types to represent
03:18 - numbers which are integers and
03:21 - floats integers are for numbers without
03:24 - decimal places
03:25 - positive or negative and floats are for
03:28 - numbers with decimal places
03:30 - and we can perform the aforementioned
03:32 - mathematical operations
03:34 - using both these data types as they both
03:36 - represent numbers
03:37 - another operation i would like to talk
03:39 - about which is very helpful when you
03:41 - look into algorithms in the future
03:42 - is the modulo operator now the modulo
03:46 - operator is essentially a companion to
03:48 - the division operator
03:49 - we know that the division operator is
03:54 - is this slash sign let me just do 10
03:57 - divided by 3.
03:58 - now what the modulo operator does is
04:00 - that it returns the
04:01 - remainder of a division operation
04:04 - if i were to divide 10 by 3 that would
04:07 - give me a quotient of 3
04:08 - and a remainder of 1. so the modulo
04:12 - operator is a way of accessing
04:14 - the remainder so this would give me an
04:16 - output of
04:17 - 1 and this would give me an output of
04:20 - 3 and if i were to divide 4 by 2
04:23 - so if i were to do
04:25 - [Music]
04:27 - if i were to do 4 divided by
04:30 - 4 divided by 2 obviously that would give
04:32 - me a
04:33 - an output of 2 but
04:38 - i would get a remainder of
04:42 - i would get a remainder of zero
04:45 - because two goes into four perfectly
04:48 - okay so now i'm going to bridge off a
04:50 - bit but bear with me
04:51 - now what would happen if i added two
04:54 - strings so let me create
04:56 - two strings my first name and the second
05:00 - name and my
05:02 - my second name so these are the two
05:03 - strings my first name
05:05 - and my second name obviously strings are
05:09 - words so you can't numerically add them
05:11 - like you would add numbers
05:12 - but when you use the plus symbol between
05:14 - two strings
05:15 - you join them together into one bigger
05:18 - string
05:19 - which is called concassanation
05:23 - so now let's say if i were to store this
05:26 - in
05:26 - a variable
05:29 - called
05:33 - names let's just call it that and now
05:36 - the
05:37 - output of this would be
05:40 - a string like this
05:44 - it would just combine these two strings
05:46 - into
05:47 - a bigger string now if i perform a
05:50 - mathematical operation
05:52 - and i want to display the result on my
05:53 - screen i would use the print statement
05:56 - so let's do that i would print and let's
05:59 - say a mathematical operation there we
06:01 - have it four plus three
06:02 - now alternatively what i can also do is
06:06 - create a variable called result
06:10 - 6 because i've already called result 5
06:12 - over here so we need a new variable name
06:14 - result 6 and alternatively what can also
06:17 - be done is
06:18 - storing the value in a variable and then
06:21 - printing the value of
06:22 - that variable you could do that as well
06:26 - so what i've done is just deleted that
06:27 - result six variable and gone back to the
06:30 - previous way that we'd represented that
06:32 - now what if i wanted to give the user
06:34 - some detail and tell them
06:35 - hey this is what you this is the result
06:37 - of the operation that you asked for
06:40 - so that would mean that i want to print
06:42 - a phrase
06:44 - first and then give the result right
06:46 - after that
06:47 - so let's say i want to print something
06:50 - let's say
06:52 - hey here is the
06:57 - computation you asked for
07:03 - now as you can notice this
07:07 - would be an integer and this would be a
07:10 - string
07:12 - now since they're two different data
07:13 - types we do not have a way of combining
07:15 - them
07:16 - but what i can do now is perform the
07:18 - computation so we've done that over here
07:20 - four plus three now what we do is
07:22 - convert the result into a string
07:24 - and then as we know we can add two
07:26 - strings together
07:28 - so i've performed the computation and to
07:31 - convert an integer to a string
07:32 - what we do is type the words
07:36 - str and then parentheses around
07:40 - what we want to convert into a string so
07:43 - four plus three now that's equal to
07:45 - seven and now it's going to create
07:47 - a string called seven it's gonna clear
07:49 - it's gonna create a string like this
07:51 - seven it's no longer gonna be an integer
07:53 - seven it's gonna be a string seven
07:56 - so now i have a string with the number
07:59 - seven stored inside of it
08:01 - and i have another string so i can
08:03 - combine these two strings like i did
08:04 - over here
08:05 - with the plus symbol
08:10 - now let's print this out and uh let's
08:13 - see
08:13 - what it does so as you can see it gives
08:17 - me the phrase that i wanted to print out
08:18 - as well as the result of the computation
08:21 - right beside it
08:22 - now if i did not put this string over
08:24 - here this str method
08:26 - if i did not put that in and i try to
08:28 - print out
08:29 - as you can see it is going to give me an
08:32 - error
08:33 - because you cannot concatenate a string
08:35 - to an integer
08:36 - but you may ask me why we can convert
08:38 - the integer into a string
08:40 - well keep in mind that strings are made
08:42 - up of all the alphanumeric symbols on
08:44 - your keyboard
08:45 - which obviously include numbers now this
08:47 - leads me back to the question i posed to
08:49 - you all in the previous video
08:51 - what is the difference between the
08:53 - following two
08:55 - statements besides obviously
08:58 - the variable names now i'm hoping you
09:01 - guys already have
09:02 - some sort of an understanding of what
09:04 - the difference between these two is
09:05 - based on
09:06 - the concatenation that we've done
09:08 - previously but even if you don't let me
09:10 - just provide you an explanation
09:12 - so variable y is a string that contains
09:15 - the alphanumeric character 5. well
09:17 - variable x is an integer
09:19 - and so it's a number with which you can
09:21 - perform mathematical operations we
09:23 - discussed earlier
09:26 - now why can't we perform the operations
09:28 - with variable y
09:30 - well because y is a string and we know
09:32 - that we cannot perform mathematical
09:34 - operations on
09:35 - characters or letters so even though
09:37 - it's
09:38 - the character 5 the alphanumeric
09:41 - character 5
09:42 - we still can't perform computations on
09:44 - it and think of it as an integer
09:45 - because it's stored as a string that's
09:48 - all the content we'll cover in this
09:49 - video
09:51 - let me just give you all a few exercises
09:54 - that you can work on
09:59 - okay so here are some exercises to recap
10:02 - what we did
10:03 - please try to do these as best as you
10:04 - can and i will talk about the answers
10:07 - at the end of this video the first
10:10 - exercise is
10:11 - try and experiment with all the
10:13 - mathematical operations that we learned
10:15 - now obviously remember that you need to
10:17 - use the print statement to actually see
10:18 - the result
10:19 - in the terminal over here
10:23 - the second exercise is i want you to
10:26 - create a variable called age
10:28 - and then store your age in it then
10:31 - print it out with the short sentence
10:33 - preceding it
10:34 - so your terminal over here should look
10:36 - something like
10:37 - my ages dot dot dot and now that would
10:41 - obviously be your age
10:43 - now note that in this for this exercise
10:46 - you would need to do something similar
10:48 - to what i did in this line because your
10:51 - age is an integer
10:53 - and you want to print out a phrase
10:55 - preceding it which is obviously a string
10:57 - and we know that we cannot combine
10:59 - strings and integers
11:01 - without the use of this str block
11:04 - over here
11:07 - okay here are the answers to the
11:10 - exercise
11:11 - so obviously i will not discuss the
11:13 - answer to the first one because it's
11:14 - just experimenting with the different
11:15 - operations
11:16 - for the second one let's get started
11:20 - so it says create a variable called
11:24 - age okay so let's create a variable
11:25 - called age and let's assign it the value
11:29 - of my age i'm 16 so i'm going to
11:32 - assign it the number 16. now
11:36 - i want to print it out with a short
11:38 - statement short sentence preceding it
11:41 - now the sentence that i want to be
11:42 - printed is
11:44 - is let's say hello my
11:47 - age is
11:52 - and now i want and now i want the value
11:55 - of
11:56 - this variable to be printed
12:00 - right after this string now if i want to
12:02 - add obviously a string
12:04 - to an integer well that's not possible
12:07 - if i did not
12:07 - convert that integer into a string so
12:10 - let's do that to convert
12:12 - as we learned before we need to use the
12:14 - sdr block
12:15 - sdr function actually but we'll get to
12:17 - functions later on
12:19 - and we need to put parentheses and
12:23 - now let's print this out and see how it
12:25 - works
12:26 - hello my age is 16.
12:30 - so that's it for this video thank you
12:32 - all for watching
12:34 - and if you have any questions please
12:36 - feel free to leave them in the comments
12:41 - below

Cleaned transcript:

hi everyone this is the third video of the intro to python series and in this video we're going to be talking about arithmetic and other computational tools in python as we know one thing computers are very capable of doing is performing arithmetic addition subtraction multiplication division and other operations are easy to do in most programming languages and the same applies for python in the previous video we discussed three data types strings integers and booleans now as we know arithmetic operations like addition multiplication etc are performed on numbers so obviously if you want to perform these mathematical operations in python we would have to involve the integer data type in some way as this data type stores numbers okay so here i am adding two numbers and just like in math you use the plus symbol now if i create a variable to store the result let's call it sum because it's a sum of two numbers the data type would be an integer so now let's do some subtraction um let's just call it result is going to be 7 minus 6. so now the value that is going to be stored inside this variable result is going to be an integer with a value 1 because 7 minus 6 is 1 and for multiplication you use the asterisk symbol and for division you use let me just call this result two for division you use the slash symbol so let's just do four divided by two this is four divided by two five multiplied by three seven minus six four plus five and for exponentiation you would do this symbol so this means 5 raised to the power 2 and this would give me a value of 25 stored inside this variable result four usually you'd combine multiplication exponentiation and other operations together so one important thing to keep in mind is that python follows the same usual order of operations that is used in mathematics so for instance if i was to write the following code the computer would perform this multiplication before it does the addition so it would do 3 times 50 3 times 5 which is equal to 15 then 15 plus 4 19 but now if i wanted the addition to take place before the multiplication what i can do for that is put parentheses around the addition so now what it's going to do is perform the addition first that's going to give me 7 times five which is obviously going to be 35. another important data type is float while the integer is a whole number with no decimal point a number with a decimal point is called a float while the integer data type well stores integers which is numbers positive or negative without decimal points like 2 3 negative 5 etc the float data type stores numbers that have a decimal value so let's say if i want to write a number 5.3 now obviously since there is a decimal point this data is stored as a float and not an integer okay so just a small recap there are two main data types to represent numbers which are integers and floats integers are for numbers without decimal places positive or negative and floats are for numbers with decimal places and we can perform the aforementioned mathematical operations using both these data types as they both represent numbers another operation i would like to talk about which is very helpful when you look into algorithms in the future is the modulo operator now the modulo operator is essentially a companion to the division operator we know that the division operator is is this slash sign let me just do 10 divided by 3. now what the modulo operator does is that it returns the remainder of a division operation if i were to divide 10 by 3 that would give me a quotient of 3 and a remainder of 1. so the modulo operator is a way of accessing the remainder so this would give me an output of 1 and this would give me an output of 3 and if i were to divide 4 by 2 so if i were to do if i were to do 4 divided by 4 divided by 2 obviously that would give me a an output of 2 but i would get a remainder of i would get a remainder of zero because two goes into four perfectly okay so now i'm going to bridge off a bit but bear with me now what would happen if i added two strings so let me create two strings my first name and the second name and my my second name so these are the two strings my first name and my second name obviously strings are words so you can't numerically add them like you would add numbers but when you use the plus symbol between two strings you join them together into one bigger string which is called concassanation so now let's say if i were to store this in a variable called names let's just call it that and now the output of this would be a string like this it would just combine these two strings into a bigger string now if i perform a mathematical operation and i want to display the result on my screen i would use the print statement so let's do that i would print and let's say a mathematical operation there we have it four plus three now alternatively what i can also do is create a variable called result 6 because i've already called result 5 over here so we need a new variable name result 6 and alternatively what can also be done is storing the value in a variable and then printing the value of that variable you could do that as well so what i've done is just deleted that result six variable and gone back to the previous way that we'd represented that now what if i wanted to give the user some detail and tell them hey this is what you this is the result of the operation that you asked for so that would mean that i want to print a phrase first and then give the result right after that so let's say i want to print something let's say hey here is the computation you asked for now as you can notice this would be an integer and this would be a string now since they're two different data types we do not have a way of combining them but what i can do now is perform the computation so we've done that over here four plus three now what we do is convert the result into a string and then as we know we can add two strings together so i've performed the computation and to convert an integer to a string what we do is type the words str and then parentheses around what we want to convert into a string so four plus three now that's equal to seven and now it's going to create a string called seven it's gonna clear it's gonna create a string like this seven it's no longer gonna be an integer seven it's gonna be a string seven so now i have a string with the number seven stored inside of it and i have another string so i can combine these two strings like i did over here with the plus symbol now let's print this out and uh let's see what it does so as you can see it gives me the phrase that i wanted to print out as well as the result of the computation right beside it now if i did not put this string over here this str method if i did not put that in and i try to print out as you can see it is going to give me an error because you cannot concatenate a string to an integer but you may ask me why we can convert the integer into a string well keep in mind that strings are made up of all the alphanumeric symbols on your keyboard which obviously include numbers now this leads me back to the question i posed to you all in the previous video what is the difference between the following two statements besides obviously the variable names now i'm hoping you guys already have some sort of an understanding of what the difference between these two is based on the concatenation that we've done previously but even if you don't let me just provide you an explanation so variable y is a string that contains the alphanumeric character 5. well variable x is an integer and so it's a number with which you can perform mathematical operations we discussed earlier now why can't we perform the operations with variable y well because y is a string and we know that we cannot perform mathematical operations on characters or letters so even though it's the character 5 the alphanumeric character 5 we still can't perform computations on it and think of it as an integer because it's stored as a string that's all the content we'll cover in this video let me just give you all a few exercises that you can work on okay so here are some exercises to recap what we did please try to do these as best as you can and i will talk about the answers at the end of this video the first exercise is try and experiment with all the mathematical operations that we learned now obviously remember that you need to use the print statement to actually see the result in the terminal over here the second exercise is i want you to create a variable called age and then store your age in it then print it out with the short sentence preceding it so your terminal over here should look something like my ages dot dot dot and now that would obviously be your age now note that in this for this exercise you would need to do something similar to what i did in this line because your age is an integer and you want to print out a phrase preceding it which is obviously a string and we know that we cannot combine strings and integers without the use of this str block over here okay here are the answers to the exercise so obviously i will not discuss the answer to the first one because it's just experimenting with the different operations for the second one let's get started so it says create a variable called age okay so let's create a variable called age and let's assign it the value of my age i'm 16 so i'm going to assign it the number 16. now i want to print it out with a short statement short sentence preceding it now the sentence that i want to be printed is is let's say hello my age is and now i want and now i want the value of this variable to be printed right after this string now if i want to add obviously a string to an integer well that's not possible if i did not convert that integer into a string so let's do that to convert as we learned before we need to use the sdr block sdr function actually but we'll get to functions later on and we need to put parentheses and now let's print this out and see how it works hello my age is 16. so that's it for this video thank you all for watching and if you have any questions please feel free to leave them in the comments below
