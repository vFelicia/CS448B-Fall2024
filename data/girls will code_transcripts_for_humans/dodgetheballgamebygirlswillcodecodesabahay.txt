With timestamps:

00:00 - [Music]
00:04 - today we're gonna learn how to make a
00:06 - simple
00:06 - dodge the obstacle game in scratch which
00:08 - will look something like this
00:12 - there will be balls that fall from the
00:14 - top of the screen and our player has to
00:16 - move left and right
00:18 - to avoid getting hit by any of these
00:19 - balls so let's get started
00:26 - the first step is to create our player
00:28 - i'm gonna paint my own sprite
00:30 - because i want to use a simple rectangle
00:31 - as our player
00:34 - [Music]
00:36 - at the start of the game we want our
00:37 - player to be at the bottom of the screen
00:39 - so the first thing i'm going to do is
00:41 - when green flag is clicked
00:43 - i'm going to add a go to block which
00:45 - goes to x equals 0 and y
00:47 - equals negative 155 and that's going to
00:50 - be the bottom of the screen
00:52 - [Music]
00:56 - the next step is to allow the players to
00:58 - move left and right we're going to do
01:00 - that with the left and right arrow keys
01:02 - so let's put that in so here we have
01:04 - those two if statements
01:06 - if the right key is pressed and if the
01:08 - left key is pressed
01:09 - we've put these statements inside of
01:11 - forever loop because we want the game to
01:12 - continuously check
01:14 - if either key is pressed
01:17 - so if the right key is pressed we want
01:19 - to move in the right words direction
01:21 - we're going to use the move steps block
01:22 - to do so the move steps block
01:24 - moves us in the direction that we're
01:26 - facing and since as you can see over
01:28 - here we're facing in the rightward
01:29 - direction
01:30 - to move to the right we're gonna have to
01:32 - move a positive number of steps
01:33 - so we'll move positive 10 steps and to
01:36 - move to the left we're going to have to
01:37 - move
01:37 - a negative number of steps so we're
01:39 - going to move negative 10 steps
01:44 - [Music]
01:46 - the next step is to create the balls
01:47 - that are going to fall from the top of
01:49 - the screen
01:50 - so what i'm going to do is go to choose
01:52 - a sprite and look for ball
01:55 - there it is and you know i'm going to
01:57 - make it slightly
01:58 - smaller so 75 that seems good
02:03 - in the game we want multiple balls to be
02:05 - falling
02:06 - so we're not going to do that by
02:07 - creating multiple sprites but what we're
02:09 - going to do instead
02:10 - is create multiple clones of this sprite
02:14 - the first thing i'm going to do is grab
02:15 - one green fly clicked
02:17 - and i'm going to put a forever loop and
02:19 - the first thing i'm going to put in
02:21 - is a wait statement and after that i'm
02:23 - going to put in
02:24 - create clone of myself so the value that
02:27 - we put inside this weight statement
02:29 - is what determines the rate at which the
02:31 - clone spawn
02:33 - so as of now it's one second so that
02:36 - means every second we're going to create
02:37 - a clone of this ball
02:39 - but what we want instead is that as the
02:41 - game progresses we want that
02:43 - the speed at which clones are created we
02:45 - want that speed to get faster
02:47 - so what we're going to do instead is
02:49 - create a variable called
02:51 - spawn speed
02:55 - and what we're going to do is we're
02:56 - going to put that inside the weight lock
02:59 - and now what we can do is that as the
03:00 - gain progresses we can
03:03 - reduce the value of spawn speed and
03:05 - that's going to increase the rate
03:07 - at which the clones spawn and we're also
03:09 - going to put a height block here because
03:11 - we don't want the original ball to stay
03:12 - on the screen
03:13 - we just want to use it for creating
03:15 - clones next what we're going to do is
03:18 - drag the when i start as a clone block
03:20 - and whatever code we put underneath this
03:23 - is going to be executed for each and
03:25 - every clone that we create
03:27 - so when a clone starts the first thing
03:28 - we want to do is
03:30 - show it because otherwise it would stay
03:32 - hidden because we applied a height of
03:34 - the original one
03:36 - so what we want is that every clone
03:37 - starts off at the top of the screen
03:39 - but we also wanted to start off at
03:41 - different x coordinates
03:43 - so what we're going to do first is go to
03:45 - motion and draft the go to block
03:47 - and we're going to set the y to 180 so
03:49 - that's the top of the screen
03:51 - but the x is going to be a range from
03:53 - negative 225 to positive 325
03:55 - so that's the left end of the screen to
03:57 - the right of the screen
03:59 - so now as you can see we're going to
04:01 - have balls that spawn at the top of the
04:03 - screen but at different x coordinates
04:05 - the next step is to make the balls fall
04:07 - down we're going to do that with the
04:08 - move block
04:09 - but before that what we have to do is
04:12 - change the ball's
04:13 - direction from 90 to 180 so that it
04:15 - points downwards
04:18 - [Music]
04:20 - so now when we add our moves block the
04:23 - ball is going to fall
04:24 - straight down like we did with spawn
04:28 - speed we want the balls to fall down
04:30 - faster as the game progresses
04:32 - we're going to do that by creating
04:33 - another variable
04:35 - so we're going to call this variable
04:38 - ball speed so instead of having 10 steps
04:42 - inside this move block what we're going
04:44 - to do is have
04:45 - our variable which is called fall speed
04:47 - inside this move block
04:49 - so now what we can do is as the game
04:51 - progresses
04:52 - we can increase fall speed and therefore
04:54 - that's going to increase the speed at
04:56 - which the balls fall down
04:58 - now another thing that we want to add is
05:00 - their starting values
05:02 - so the starting value of fall speed and
05:04 - the starting value of spawn speed
05:06 - so i'm just going to start it off start
05:09 - spawn speed off
05:10 - at 0.75 and fall speed up at 6
05:15 - but you guys can play around with the
05:16 - values and see what works
05:18 - [Music]
05:22 - the next step is to detect if any of the
05:25 - balls hit the player
05:27 - and we're going to do that with an if
05:30 - statement
05:31 - so if touching sprite one and we're
05:33 - going to put this inside
05:35 - when i start a clone inside this forever
05:37 - loop and so therefore it's going to
05:38 - check this for each and every clone
05:40 - so if any of the clones touch sprite one
05:43 - we're gonna end the game
05:46 - so stop all
05:49 - next let's create our score variable
05:52 - which will increase each time the player
05:53 - dodges the ball
05:55 - the player dodges the ball what that
05:57 - really means is that the ball goes below
05:59 - the player
06:00 - and we can detect that by comparing the
06:02 - y coordinates of
06:03 - the player and the ball if the y
06:06 - coordinate of the ball
06:07 - is less than the y coordinate of the
06:08 - player which is negative 1
06:11 - 155 we know that the player has dodged
06:14 - the ball
06:15 - so let's put that statement in code here
06:17 - is that if statement
06:18 - we're going to put it inside the forever
06:20 - loop of the clone block because we want
06:22 - it to be checked for each and every ball
06:25 - so if the y position of the ball of any
06:28 - ball is less than negative 155
06:30 - we're going to increase the score by one
06:33 - so
06:34 - change score by one and then
06:37 - we're also going to delete the clone
06:39 - because we don't want the ball to just
06:41 - stay in the stay at the bottom edge
06:43 - we're going to delete it
06:44 - so let's delete this clone
06:47 - but we're also going to add a weight
06:48 - block over here because
06:51 - otherwise it's going to change the score
06:52 - by more than one we wanted to change it
06:54 - only by one
06:55 - so we'll add a weight block only for 0.0
06:58 - 0.05 seconds and that'll work
07:00 - and another thing that we want to do is
07:02 - at the beginning of the game we want to
07:04 - set the score to zero now let's write
07:08 - code that changes the two variables we
07:10 - created earlier
07:11 - fall speed and spawn speed
07:14 - over time so that the game gets harder
07:17 - so what i'm going to do first
07:18 - is when the green flag is clicked
07:22 - i'm going to create a forever loop in
07:23 - which i have
07:25 - a weight block and
07:28 - that weight block is going to be for 10
07:29 - seconds and then what i'm going to do
07:31 - is change our variables by
07:35 - a certain amount i'm going to change
07:37 - spawn speed by
07:41 - by 0.05 so every 10 seconds the spawn
07:45 - speed will decrease by
07:47 - sorry so negative 0.05 so the spawn
07:50 - speed is going to decrease by 0.05
07:52 - 0.05 seconds and
07:55 - we're going to change our fall speed by
07:59 - by one that's going to make it faster
08:01 - every 10 seconds
08:07 - we need to create a limit to the values
08:09 - these variables can reach
08:12 - otherwise the game would get unplayable
08:14 - for example let's say
08:15 - if we continuously decrease spawn speed
08:18 - every 10 seconds
08:19 - there's gonna be a point perhaps two
08:21 - minutes or three minutes into the game
08:23 - where the spawn speed would reach such a
08:24 - slow such a low value
08:27 - that there's going to be balls spawning
08:29 - right after each other instantaneously
08:31 - that's going to make the game unplayable
08:33 - what we're going to do is create a limit
08:35 - to the values
08:36 - these variables can reach so i've
08:39 - created my limits here
08:40 - the spawn speed will not get less than
08:42 - 0.3
08:43 - and the fall speed will not get greater
08:45 - than 12
08:46 - and that's because for this first if
08:48 - statement
08:50 - the value of spawn speed will only
08:51 - decrease if it's greater than 0.3
08:54 - if it's not greater than 0.3 the value
08:56 - will not decrease
08:57 - and therefore the value of spawn speed
08:59 - will remain at 0.3
09:02 - and the same happens for fall speed in
09:04 - the second hd
09:10 - now we're pretty much done i'm just
09:11 - going to change a few things
09:13 - first i'm going to make this a large
09:14 - readout and the second thing i'm going
09:16 - to do is add some background music
09:18 - so i'm going to go to our player sprite
09:20 - and
09:22 - i'm going to go to sounds and i've
09:24 - already chosen one which is
09:25 - classical piano but you guys can browse
09:27 - to the gallery and
09:28 - see other sounds that you like what i'm
09:31 - going to do is
09:33 - when the green plant display i'm going
09:35 - to put a forever loop
09:36 - and i'm going to play play the sound
09:40 - until it's done
09:41 - and it's going to play and this is going
09:42 - to play the sound in a loop
09:45 - and there you have it for this tutorial
09:47 - thank you guys for watching
09:49 - if you have any questions please feel
09:50 - free to leave them in the comments below

Cleaned transcript:

today we're gonna learn how to make a simple dodge the obstacle game in scratch which will look something like this there will be balls that fall from the top of the screen and our player has to move left and right to avoid getting hit by any of these balls so let's get started the first step is to create our player i'm gonna paint my own sprite because i want to use a simple rectangle as our player at the start of the game we want our player to be at the bottom of the screen so the first thing i'm going to do is when green flag is clicked i'm going to add a go to block which goes to x equals 0 and y equals negative 155 and that's going to be the bottom of the screen the next step is to allow the players to move left and right we're going to do that with the left and right arrow keys so let's put that in so here we have those two if statements if the right key is pressed and if the left key is pressed we've put these statements inside of forever loop because we want the game to continuously check if either key is pressed so if the right key is pressed we want to move in the right words direction we're going to use the move steps block to do so the move steps block moves us in the direction that we're facing and since as you can see over here we're facing in the rightward direction to move to the right we're gonna have to move a positive number of steps so we'll move positive 10 steps and to move to the left we're going to have to move a negative number of steps so we're going to move negative 10 steps the next step is to create the balls that are going to fall from the top of the screen so what i'm going to do is go to choose a sprite and look for ball there it is and you know i'm going to make it slightly smaller so 75 that seems good in the game we want multiple balls to be falling so we're not going to do that by creating multiple sprites but what we're going to do instead is create multiple clones of this sprite the first thing i'm going to do is grab one green fly clicked and i'm going to put a forever loop and the first thing i'm going to put in is a wait statement and after that i'm going to put in create clone of myself so the value that we put inside this weight statement is what determines the rate at which the clone spawn so as of now it's one second so that means every second we're going to create a clone of this ball but what we want instead is that as the game progresses we want that the speed at which clones are created we want that speed to get faster so what we're going to do instead is create a variable called spawn speed and what we're going to do is we're going to put that inside the weight lock and now what we can do is that as the gain progresses we can reduce the value of spawn speed and that's going to increase the rate at which the clones spawn and we're also going to put a height block here because we don't want the original ball to stay on the screen we just want to use it for creating clones next what we're going to do is drag the when i start as a clone block and whatever code we put underneath this is going to be executed for each and every clone that we create so when a clone starts the first thing we want to do is show it because otherwise it would stay hidden because we applied a height of the original one so what we want is that every clone starts off at the top of the screen but we also wanted to start off at different x coordinates so what we're going to do first is go to motion and draft the go to block and we're going to set the y to 180 so that's the top of the screen but the x is going to be a range from negative 225 to positive 325 so that's the left end of the screen to the right of the screen so now as you can see we're going to have balls that spawn at the top of the screen but at different x coordinates the next step is to make the balls fall down we're going to do that with the move block but before that what we have to do is change the ball's direction from 90 to 180 so that it points downwards so now when we add our moves block the ball is going to fall straight down like we did with spawn speed we want the balls to fall down faster as the game progresses we're going to do that by creating another variable so we're going to call this variable ball speed so instead of having 10 steps inside this move block what we're going to do is have our variable which is called fall speed inside this move block so now what we can do is as the game progresses we can increase fall speed and therefore that's going to increase the speed at which the balls fall down now another thing that we want to add is their starting values so the starting value of fall speed and the starting value of spawn speed so i'm just going to start it off start spawn speed off at 0.75 and fall speed up at 6 but you guys can play around with the values and see what works the next step is to detect if any of the balls hit the player and we're going to do that with an if statement so if touching sprite one and we're going to put this inside when i start a clone inside this forever loop and so therefore it's going to check this for each and every clone so if any of the clones touch sprite one we're gonna end the game so stop all next let's create our score variable which will increase each time the player dodges the ball the player dodges the ball what that really means is that the ball goes below the player and we can detect that by comparing the y coordinates of the player and the ball if the y coordinate of the ball is less than the y coordinate of the player which is negative 1 155 we know that the player has dodged the ball so let's put that statement in code here is that if statement we're going to put it inside the forever loop of the clone block because we want it to be checked for each and every ball so if the y position of the ball of any ball is less than negative 155 we're going to increase the score by one so change score by one and then we're also going to delete the clone because we don't want the ball to just stay in the stay at the bottom edge we're going to delete it so let's delete this clone but we're also going to add a weight block over here because otherwise it's going to change the score by more than one we wanted to change it only by one so we'll add a weight block only for 0.0 0.05 seconds and that'll work and another thing that we want to do is at the beginning of the game we want to set the score to zero now let's write code that changes the two variables we created earlier fall speed and spawn speed over time so that the game gets harder so what i'm going to do first is when the green flag is clicked i'm going to create a forever loop in which i have a weight block and that weight block is going to be for 10 seconds and then what i'm going to do is change our variables by a certain amount i'm going to change spawn speed by by 0.05 so every 10 seconds the spawn speed will decrease by sorry so negative 0.05 so the spawn speed is going to decrease by 0.05 0.05 seconds and we're going to change our fall speed by by one that's going to make it faster every 10 seconds we need to create a limit to the values these variables can reach otherwise the game would get unplayable for example let's say if we continuously decrease spawn speed every 10 seconds there's gonna be a point perhaps two minutes or three minutes into the game where the spawn speed would reach such a slow such a low value that there's going to be balls spawning right after each other instantaneously that's going to make the game unplayable what we're going to do is create a limit to the values these variables can reach so i've created my limits here the spawn speed will not get less than 0.3 and the fall speed will not get greater than 12 and that's because for this first if statement the value of spawn speed will only decrease if it's greater than 0.3 if it's not greater than 0.3 the value will not decrease and therefore the value of spawn speed will remain at 0.3 and the same happens for fall speed in the second hd now we're pretty much done i'm just going to change a few things first i'm going to make this a large readout and the second thing i'm going to do is add some background music so i'm going to go to our player sprite and i'm going to go to sounds and i've already chosen one which is classical piano but you guys can browse to the gallery and see other sounds that you like what i'm going to do is when the green plant display i'm going to put a forever loop and i'm going to play play the sound until it's done and it's going to play and this is going to play the sound in a loop and there you have it for this tutorial thank you guys for watching if you have any questions please feel free to leave them in the comments below
