00:00 - hello everyone I'm Ola and this is
00:03 - goting is for
00:04 - [Music]
00:16 - girls so far we learned a very basics of
00:19 - Python programming language and if you
00:22 - feel lost you should not worry it's
00:24 - normal there is a lot of knowledge you
00:26 - need to absorb and it takes time
00:30 - lately when I was uploading one of my
00:32 - python basic videos someone pointed me
00:35 - out that I'm leaving you links to the
00:38 - python
00:39 - documentation and the thing is that
00:42 - python documentation is very technical
00:44 - and it's very very hard for beginners to
00:47 - make any sense of
00:49 - that that is why I decided that I will
00:52 - dedicate whole episode just talking
00:54 - about python
00:56 - documentation how to use it how to find
00:58 - information you are looking for for and
01:00 - what the things described there
01:03 - means first thing to remember is that
01:06 - when you start to Learn Python there is
01:08 - absolutely no obligation for you to read
01:11 - whole python
01:12 - documentation and it is so so weak that
01:16 - I doubt that any person any programmer
01:19 - out there actually read everything from
01:22 - the very beginning to the end maybe
01:24 - there is somebody there but I don't know
01:26 - them so it is not about learning every
01:29 - single thing that is described in Python
01:31 - documentation but it's about knowing how
01:34 - to use Python documentation when you are
01:36 - looking for something you could treat
01:39 - python documentation as a language
01:41 - dictionary when you learn new language
01:44 - you don't need to know every single word
01:46 - in given language and I bet even native
01:49 - speakers don't know every single word in
01:52 - their native language it's all about
01:55 - knowing enough words to make you fluent
01:58 - and then being able to look up whatever
02:00 - is missing for you okay so first thing
02:04 - where is python
02:06 - documentation python docs are available
02:08 - online and you can access them anytime
02:10 - you need you just need to go to the
02:14 - www.python.org this is the website
02:17 - managed by python software Foundation an
02:20 - organization that takes care of python
02:22 - as a programming language now let's
02:25 - click in doc stop and here it is python
02:28 - documentation
02:30 - in top left corner there is a drop down
02:33 - that allows you to change between Python
02:35 - versions python is updated regularly but
02:39 - there are a lot of people who are not
02:41 - using the newest version out there and a
02:45 - lot of people use older versions so it's
02:48 - very very important to know what version
02:50 - of python you are using and check the
02:53 - documentation if you followed my videos
02:55 - step by step it should be 3.4.3
03:00 - but if you jumped somewhere in the
03:01 - middle then you might have different
03:03 - version
03:04 - installed let's open the console and
03:07 - type Pyon three minus minus version and
03:11 - click
03:13 - enter as I mentioned my version of
03:15 - python is this one however I have also
03:19 - installed another one that my Mark is
03:21 - using to if I type this python space
03:26 - minus minus version and click enter
03:29 - you'll see that my default python
03:31 - version is
03:34 - 2.7.1 okay we know what version of
03:37 - python we are using let's go back to
03:40 - documentation I switching to 3.4 version
03:45 - and now I see all relevant things for me
03:48 - there is a link to all the things that
03:50 - were added in Python 3.4 compared to the
03:54 - previous version
03:56 - 3.3 we also have link to tutorial and
03:59 - this one might be very interesting for
04:01 - you because it introduces all parts of
04:04 - python for example using python
04:06 - interpreter things we already talked
04:08 - about like numbers text lists different
04:11 - control flows tools including if
04:14 - statements and for Loops you already
04:16 - know then you could read about functions
04:20 - and data structures models errors
04:22 - classes and so on and so on this part
04:25 - will be very useful for you right now
04:28 - but there is also another important link
04:31 - which is language
04:33 - reference this gathers more advanced and
04:36 - more ordered
04:37 - topics for now let's go back to tutorial
04:41 - part and look at the something we
04:43 - already read about for example if
04:46 - statement on the left hand side we have
04:48 - a table of content for this page but
04:51 - what I do most of the time is using
04:53 - search in my browser I just click
04:55 - command and F or control and F if you
04:59 - don't use my
05:00 - and just type whatever you are
05:01 - interested in for example text else and
05:05 - all occurrences are highlighted so I
05:07 - don't need to read everything on the
05:09 - page in green boxes you have code
05:12 - examples this is extremely useful and
05:14 - shows you how to use given thing here we
05:17 - see example usage of if Al if else
05:21 - statement python documentation might be
05:24 - scary because it uses jargon a lot and
05:27 - it's very technical it also assumes that
05:30 - you know a lot already it is like
05:32 - learning any language out there you
05:34 - don't need to know every single word in
05:36 - a sentence and what matters is to
05:40 - understand the general concept if you
05:42 - don't really know what things means try
05:45 - to find code examples run it in your
05:48 - python interpreter try to figure out
05:50 - what's going on there and go back to the
05:53 - documentation and maybe it will make
05:55 - much more sense then okay let's go back
05:58 - to documentation
06:00 - let's leave tutorial and go to the
06:02 - language
06:03 - reference let's say we would like to
06:05 - read more about building types we
06:07 - already know some of them for example
06:10 - string I will be lazy and look at the
06:12 - page using my commment f shortcut and
06:16 - type build minus in now I see that
06:19 - section number four contains
06:21 - informations about building types and
06:23 - there is a sequence text part under 4.7
06:27 - subsection let's click and see
06:30 - first we see explanation what string is
06:33 - it might seem a bit complicated right
06:35 - now then if we scroll a little bit down
06:38 - we see string Methods section remember
06:41 - when we talked about building methods of
06:43 - the string we used upper method that was
06:47 - changing all the characters in our text
06:50 - into uppercase now we can see and read
06:53 - about all the available methods on the
06:56 - string we can use not only upper or or
06:59 - lower there so many different ones let's
07:03 - look for example on method called
07:06 - capitalize Str strr part here means that
07:09 - this is a part of building type string
07:13 - then the Bold part is the name of the
07:15 - method here we have
07:17 - capitalize that means that we will use
07:20 - it like this our text for example name
07:23 - Ola and then dot so python knows we will
07:27 - access part of the textt type then then
07:29 - we type name of the method so capitalize
07:33 - finally we will use opening and close
07:36 - parentheses methods act similarly like
07:39 - functions but they are attached to the
07:41 - certain thing here a string let's read
07:45 - what the capitalize method does it
07:48 - states return a copy of string with its
07:51 - first character capitalized and the rest
07:54 - lower
07:57 - case let's find another examp
08:00 - example let's look for the method called
08:02 - replace this function is taking our text
08:06 - and replace occurrences of the certain
08:08 - smaller text with the same other thing
08:11 - for example if we have longer text like
08:14 - this my name is Ola Ola is a popular
08:17 - name in Poland I had many friends called
08:19 - Ola and we would like to change all
08:22 - occurrences of name Ola into maray we
08:25 - could do that using replace method okay
08:29 - but how we could use this function
08:31 - because python documentation is showing
08:33 - all these weird things in
08:36 - parentheses what these things mean alt
08:39 - and new are Arguments for this method so
08:42 - when you call replace you always need to
08:45 - provide old value so the text you want
08:48 - to replace and then a new value so text
08:52 - you want to replace it with so in our
08:54 - example we'll need to take our text then
08:57 - do replace and in par pareses will first
09:00 - say hola and then marry but what this
09:05 - Square parentheses and the name count
09:08 - means if we have something in a square
09:11 - parenthesis it means we can provide it
09:14 - as an argument to the method but only
09:17 - when we want to so Square parenthesis
09:20 - means that the argument is optional so
09:23 - anything that is not in square
09:25 - parenthesis is obligatory and everything
09:28 - that is inide
09:30 - is optional so for example we cannot
09:33 - type our text. replace and then open and
09:37 - close
09:38 - parenthesis that will fail however we
09:41 - can write replace method without
09:44 - providing count argument so we could
09:47 - have our text. replace Ola and Murray so
09:52 - the python will change all occurrences
09:54 - of Ola in the text and change it into
09:56 - marry or if we would like to change only
10:00 - first two occurrences of Ola into Mary
10:02 - and the last should be left alone we
10:05 - could add the argument count so our text
10:10 - do replace Ola maray and then
10:15 - two okay so we know what Square
10:17 - parenthesis means in Python
10:19 - documentation let's look for something
10:21 - else to explain we will look for another
10:24 - building method called starts with it
10:27 - basically checks if the given text
10:29 - starts with a given
10:31 - string for example if we have text all
10:34 - likes python we could check if the text
10:37 - starts with Ola We already know that
10:39 - starts with is the name of the method
10:42 - and we should use that after our text
10:45 - then we have one required argument
10:48 - prefix this is the text that we will
10:50 - look if the text is starting with in
10:53 - this scenario it's
10:55 - all then there is something weird we
10:58 - already know that that square
10:59 - parenthesis means that argument is
11:02 - optional but what with this inner Square
11:05 - parenthesis the inner Square parenthesis
11:09 - means that it is obviously optional
11:12 - argument but it also means that we can
11:14 - provide it only if the previous optional
11:18 - argument was provided that means we
11:21 - cannot use this function like this we
11:25 - cannot provide and without providing
11:28 - start argument
11:30 - why is that so far we used only
11:33 - functions and method that knew what the
11:36 - given value represents only by the order
11:40 - in which the arguments were given so in
11:43 - Python order of arguments
11:47 - matter so now we type free as a start
11:52 - argument and it means that we will start
11:55 - checking our text from letter in the
11:57 - position free and we will will stop at
11:59 - the letter in the position of
12:02 - six okay time for the last thing I want
12:05 - to show you today that will make you
12:08 - understand python documentation better
12:10 - this thing is named
12:12 - arguments apart from the arguments you
12:14 - need to provide in the correct order for
12:17 - python to know what is what were also
12:20 - named arguments in this scenario you
12:23 - don't need to remember what was the
12:25 - order of them you just used the name of
12:28 - the argument
12:29 - and then python knows what is square how
12:33 - does it look like well let's look at an
12:35 - example this time we will look at the
12:37 - method split this method is dividing a
12:41 - text into small chunks and breaks it
12:44 - using the separator we provide here
12:47 - inside we have named
12:49 - arguments SE and Max spit every named
12:54 - argument need to have default value that
12:57 - is provided after equal sign
13:00 - here sap has default empty value and Max
13:04 - split argument that tells us how many
13:07 - times we want to split our text has
13:10 - value minus one now when we would like
13:12 - to split a text for example
13:16 - www.jco.org
13:17 - and divide it into parts that are
13:21 - between dots then we would use the
13:23 - function like this our text do spit sa
13:28 - equals Dot
13:30 - if we run it we will get a list
13:32 - containing bits between dots but without
13:35 - dots so ww another one will be Jungle
13:40 - Girls and orc now we could provide a Max
13:43 - M value for example one and run it and
13:47 - when we save and run it in console we
13:49 - will get ww and j.org now let's see what
13:54 - happens when we reverse order of the
13:57 - named arguments will it work work so we
14:00 - split text only on the first dot so we
14:03 - will have our text do split Max spit one
14:07 - and sap which is dot this time it worked
14:11 - if you have optional arguments in
14:13 - function or method and you want to have
14:15 - default value and don't want to remember
14:18 - an exact order of arguments you should
14:21 - use named
14:22 - arguments that was quite a few things we
14:25 - already learned about python
14:27 - documentation first of all where to find
14:30 - it then that we need to always use
14:33 - documentation for the correct version of
14:35 - python the version we are currently
14:37 - using then we learned how to recognize
14:41 - if the argument of the function or
14:43 - method is obligatory or it's optional
14:47 - and also we learned about named
14:49 - arguments obviously there is so much
14:51 - more about Python documation and I'm
14:54 - considering having another video on this
14:56 - topic for now I think it's enough to get
14:59 - you started and I hope that next time
15:02 - you will look at the python
15:03 - documentation you will not feel so lost
15:06 - anymore please comment down below if
15:09 - there is something in Python
15:10 - documentation that is very confusing for
15:12 - you uh it will help me to gather
15:15 - information what should I tackle in my
15:17 - next video about python documentation I
15:19 - hope you enjoy this very long video and
15:22 - you feel much much more comfortable with
15:24 - python documentation now if you want to
15:27 - learn how to program with me make sure
15:29 - to subscribe this Channel and stay tuned
15:33 - have a lovely day and see you
15:39 - [Music]