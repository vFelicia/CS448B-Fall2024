00:00 - hey everybody how's it going in this
00:02 - video we're going to be customizing our
00:03 - terminal and changing the colors of our
00:06 - prompt now to do this we're going to be
00:08 - modifying our bash RC file here if you
00:11 - haven't watched my previous video
00:12 - explaining the difference between the
00:14 - bash underscore profile and the bash RC
00:16 - files and where they belong and you
00:18 - should go ahead and check that video
00:20 - first but with that said let's go ahead
00:21 - and get started so right now I currently
00:23 - have my terminal open which is an
00:25 - uncommon Allah scratch and I also have
00:29 - my bash RC file opened up in sublime
00:32 - text here now in order to customize my
00:34 - prompt I'm going to edit the PS 1
00:37 - variable and we saw this a little bit in
00:39 - the last video so first let's just do
00:43 - something extremely simple here so I'm
00:45 - going to do PS 1 equals and I'm just
00:48 - going to do an arrow and then cut that
00:51 - off and save it and right under here I'm
00:53 - also going to export this PS 1 variable
00:56 - and close that off and save it and also
00:59 - notice that I put a space here after
01:01 - this arrow and that's just to give us
01:02 - some space so that our text isn't
01:04 - bumping right up against that so now
01:06 - back here in our terminal we could
01:08 - either quit out of terminal and open it
01:10 - back up and see those changes or we can
01:12 - do something called source and then
01:14 - we'll just source that bash RC file and
01:17 - what that's going to do is it's going to
01:18 - go in and rerun the bash RC file and it
01:21 - should pull in all those changes so now
01:23 - you can see when I source that file that
01:25 - I now have this new prompt here which is
01:27 - what we set the ps1 variable to so
01:30 - that's a good start we could come in
01:31 - here and we could you know add in some
01:34 - static text whatever we wanted it to be
01:37 - and any time we save it and then
01:39 - resource that file now you can see that
01:41 - we have our static prompt here but most
01:44 - likely we're not going to want our
01:46 - prompt to be static we're not just going
01:48 - to want to have the same text all the
01:50 - time it would be nice to have some
01:52 - dynamic information in there like like
01:54 - who were logged in as what machine we're
01:56 - on or what directory we're currently in
01:59 - so in order to add information like this
02:02 - to your prompt you can use special
02:04 - escaped characters that represent this
02:06 - information so for example one of these
02:09 - special characters is the backslash u so
02:13 - I'm going to leave
02:14 - the arrow in there and just do a back
02:15 - slash you before that arrow and now if I
02:18 - save that and source the bash RC file
02:21 - again now you can see here that my
02:23 - username is before the arrow so now we
02:27 - have some dynamic information that we're
02:29 - using as our prompt so the backslash u
02:32 - represents the username of the current
02:35 - user but there's also some other special
02:37 - characters that we can use here as well
02:39 - and I have a couple of them written down
02:40 - so backslash H is the host name up to
02:45 - the first dot the backslash n is a
02:48 - newline
02:49 - backslash s is the name of the shell
02:51 - backslash T is the current time
02:54 - there's the backslash you that we've
02:55 - already seen the backslash lowercase W
02:57 - is the current working directory and the
03:00 - backslash uppercase W is the base name
03:03 - of the current working directory so
03:05 - let's say that you wanted to customize
03:06 - your prompt to look something like this
03:09 - maybe you want to do the user name and
03:12 - at the host name and then a space and
03:15 - then the directory and then we want our
03:18 - arrow in for the prompt so I'm just
03:20 - going to push this over here to the side
03:22 - and let's go ahead and change this ps1
03:26 - variable to match what we want here so
03:29 - backslash you will be the user name and
03:33 - now we want an @ sign so we'll just type
03:36 - that in and now we want the host name so
03:39 - we can do a backslash H and now we want
03:41 - a space and then the directory now for
03:44 - the directory we have two choices here
03:46 - we can do a lowercase W which will print
03:49 - out the full path or the uppercase W
03:51 - which will only print out the base name
03:55 - of the working directory that you're in
03:57 - so if you're in your home directory
03:59 - slash desktop it's only going to print
04:02 - out desktop and that's usually the one
04:04 - that I like because it takes up less
04:06 - space so I'm going to go ahead and put
04:07 - in a capital W there and then let's put
04:10 - in a space there and save that and now
04:13 - let's go back to our terminal and source
04:17 - this file and see those changes so now
04:20 - you can see that our custom prompt has
04:22 - our username at and then the name of the
04:25 - computer that were logged into
04:27 - and then a space and then the base name
04:30 - of our directory and we're in our home
04:31 - directory now so files to CD to the
04:34 - desktop and now you can see that it has
04:36 - the best stop there and now I'm just
04:38 - going to go ahead and CD back into my
04:40 - home directory okay so now this is
04:42 - looking pretty good we've customized it
04:45 - in a way that we want but it's still
04:47 - pretty boring it would be nice to add
04:48 - some color in there so let's go back to
04:51 - our bash RC file now there's a couple of
04:53 - different ways in which we can add color
04:55 - and we'll look at a few of those options
04:57 - in a later video
04:58 - but right now we're going to only use a
05:01 - command called T put now I'm not going
05:04 - to go too much into the syntax that bash
05:06 - uses here we could do a whole series on
05:08 - videos on bash scripting but for this
05:11 - walkthrough I'm just going to show you
05:12 - what we need to do in order to get our
05:14 - colors working within the prompt so in
05:16 - bash we can do something called command
05:19 - substitution with a dollar sign and
05:22 - parentheses here and if we put a command
05:25 - inside of these parentheses then what
05:27 - that's going to do is it's going to give
05:29 - us the result of that command and
05:31 - replace the dollar sign and parenthesis
05:34 - with the result of that command so it
05:36 - may make more sense to see an example
05:38 - here so if I go back to my terminal and
05:39 - I type in echo and then I echo out your
05:43 - current directory is and then I do the
05:48 - dollar sign parentheses now for the
05:51 - command I'm just going to type in PWD
05:53 - here for a print working directory
05:54 - command now if I run this you can see
05:57 - that what it echoed out was your current
06:00 - directory is and then printed out the
06:03 - result of the PWD command so that's what
06:06 - this command substitution does it takes
06:08 - a command and it replaces all of this
06:12 - with the result of that command so what
06:14 - the T put command does is it can change
06:16 - the foreground text color so we can use
06:20 - that same technique and if we put that
06:22 - command before some text then it will
06:25 - apply color to that text so for example
06:28 - if I was to do echo and then I was to do
06:31 - our command substitution here and I was
06:35 - to do T put and then set AF which sets
06:39 - the foreground color
06:40 - and then I'm just going to do a color
06:41 - value of one six six and then outside of
06:45 - that command substitution I'm just going
06:47 - to put in some text this is orange so if
06:51 - I run this command then it should echo
06:54 - out this is orange and apply orange text
06:57 - to it now if you're wondering where I
06:59 - got the number 166 for that color of
07:02 - orange you can do a Google search for a
07:04 - 256 color chart and get results so for
07:09 - example if I pull up the Chrome page
07:12 - that I have opened up here so I did a
07:15 - Google search for a 256 color chart and
07:18 - this is the Wikipedia page for that now
07:21 - if we go down here to 166 then you can
07:24 - see that it matches that orange that I
07:25 - just printed out so if you do use the T
07:28 - put command then you can choose the
07:31 - colors that you want to use from one of
07:33 - these charts here okay so that is an
07:36 - example with the echo but what if I
07:38 - applied this to my prompt so I'm going
07:41 - to go ahead and copy this T put command
07:43 - that I just used and I'm going to put
07:46 - this same command right before the
07:48 - backslash you on our ps1 variable so I'm
07:52 - going to put that in there and save that
07:54 - and I'll get rid of this text down here
07:56 - and now I'm going to go back to my
07:58 - terminal here and do a source on the
08:01 - bash RC file okay so you can see that it
08:04 - worked and it applied it in orange color
08:06 - to the entire prompt but it also did
08:08 - something a little unexpected so if we
08:11 - type in a command you can see that
08:13 - everything is orange so all of the
08:15 - commands and the output that's because
08:18 - we never explicitly said where we wanted
08:21 - the orange color to stop so to do this
08:23 - we're going to need to run another t put
08:26 - command that will reset our styles and
08:28 - the command that we can use to do that
08:30 - let's see we can do actually I'm just
08:32 - going to copy this T put command here
08:35 - and paste it in down here now to do this
08:38 - it is T put and then for the command we
08:42 - can do SGR 0 so that will reset our
08:46 - formatting and what we want to do is we
08:48 - want to add this where we want the
08:50 - orange to stop so say that I want the
08:53 - orange to stop at
08:54 - the end of the prompt then I'll just go
08:56 - ahead and paste that in there and if I
08:58 - save that with the reset at the end now
09:02 - if I come over here and I source the
09:04 - bash file again now if I type in
09:06 - commands then my commands and the output
09:10 - should be the default color and the
09:13 - prompt is still the color that we just
09:15 - now gave it okay so this is good so far
09:17 - but let's add a couple more colors in
09:20 - into the prompt here so let's say that I
09:23 - want to make this host yellow and the
09:27 - current directory green so what I'm
09:29 - going to do here is I'm going to go
09:31 - ahead and make this a little bit bigger
09:33 - here so that I can fit in some more
09:35 - values now to make these different
09:38 - colors I'm just going to copy this T put
09:40 - command here so we just want to put the
09:43 - color before what we want to be that
09:46 - color so I have this t put command here
09:48 - and it's going to be orange until we
09:50 - either reset it or change it so right
09:53 - after the username I'm going to paste in
09:57 - another t put command and I want this
09:59 - one to be yellow and I looked up all
10:01 - these colors beforehand so the yellow
10:03 - that I want is going to be 2 2 8 now I'm
10:06 - going to paste another one before the
10:10 - directory here and I want this one to be
10:13 - green and the green value that I'm going
10:14 - to use is 71 and now I also want to
10:17 - leave this reset value in here so that
10:20 - the green doesn't leak over into our
10:22 - commands and our output so I'm going to
10:24 - go ahead and save that and open back up
10:27 - the terminal here and run a source on
10:30 - that bash RC file and let me go ahead
10:32 - and clear the screen so we can see a
10:33 - little bit better and now you can see
10:35 - here that our terminal prompt is exactly
10:38 - how we wanted to look we have our user
10:40 - name is orange our computer that our
10:43 - host name that we're on is yellow and
10:45 - then our directory is green so fast the
10:47 - CD and the desktop and you'll be able to
10:49 - see that a little bit better so this is
10:51 - starting to look good and it's starting
10:53 - to look how we want it to be customized
10:55 - but you can see here that our ps1
10:57 - command it's starting to get long and
10:59 - hard to read and also hard to maintain
11:01 - so really a technique that some people
11:04 - use is to break this up so if you do a
11:07 - PS
11:08 - one equals and then whatever it equals
11:10 - here you can also do a PS one plus
11:14 - equals and it will keep on appending to
11:16 - that variable so really what I can do is
11:19 - I can do one of these values at a time
11:21 - and just do them line by line so if I
11:24 - want my username information here now
11:27 - I'm going to go ahead and grab the host
11:29 - information here and cut that out and
11:33 - paste it in down here and I'm going to
11:35 - put in the semicolon and now I'm going
11:37 - to create a another line here and in
11:41 - that off with the semicolon and now I'm
11:43 - going to go ahead and grab this next
11:45 - command which is our current directory
11:47 - and the arrow so let me cut that out of
11:50 - there and paste it in and now lastly I'm
11:53 - going to do one more line of this ps1
11:56 - variable and in that out with the
11:58 - semicolon and I'm just going to grab
12:00 - this reset command here and cut that out
12:03 - and then place it in here and you can
12:05 - see how now this is a little bit more
12:07 - manageable in what's going on and you
12:10 - can also leave yourself comments here so
12:12 - if I was to leave a comment where I
12:14 - could say orange user and then another
12:18 - comment down here that is yellow host
12:21 - and you get the idea so you can just
12:24 - kind of comment it and so that you can
12:26 - keep traffic track of exactly what's
12:28 - going on so now just to make sure that
12:29 - that worked I went ahead and saved it
12:31 - and let's go ahead and resource our a
12:34 - char C file and let me clear this out so
12:37 - that we can see a little bit better and
12:38 - also I'm going to CD back to our home
12:41 - directory so now I'm going to try to
12:43 - source that bash RC file okay so you see
12:48 - that we kind of ran into an issue here
12:51 - where it's the cursor position is acting
12:54 - up now the reason for that is that we
12:58 - need to wrap our commands with the
13:01 - special escape characters so that the so
13:04 - that bash knows how to properly handle
13:06 - the cursor and these look like this
13:09 - right here so we have a backslash and
13:12 - then a bracket and then after our
13:15 - command we're going to have the
13:16 - backslash and an end bracket so I'm
13:18 - going to copy this here and before every
13:20 - T put command
13:22 - I'm going to paste that in and then I'm
13:24 - going to go ahead and grab this ending
13:26 - one here and copy that and then after
13:28 - every T put command I'm going to paste
13:31 - that in then I'm going to go ahead and
13:33 - delete this here and save it no no right
13:36 - now this might seem like a lot to
13:38 - remember
13:38 - but just stick with me we're going to be
13:41 - learning about a few things that makes
13:43 - all this stuff a lot easier to work with
13:45 - okay so now if I open back up my
13:47 - terminal and I run that source command
13:50 - with the that was kind of the weird
13:53 - cursor position there but now with those
13:55 - escape characters in if I was to retype
13:57 - that out then I shouldn't have those
13:59 - issues anymore so you can see that now
14:02 - it's working like it should be so to
14:04 - finish up here the way that my prompt is
14:07 - usually set up and the way that you've
14:09 - probably seen it look at other videos is
14:11 - very similar to this here so let me go
14:14 - ahead and grab some code that will make
14:16 - it look exactly like it does in my other
14:19 - videos so I'm going to grab this
14:22 - information here and copy that and I'll
14:25 - go ahead and minimize that and I'm just
14:26 - going to paste this into our bash RC
14:29 - file so let me kind of explain what's
14:31 - going on here and again I apologize for
14:33 - not going to in depth on the syntax here
14:36 - but for the sake of time I just want to
14:38 - show you how mine is set up and we'll
14:40 - look a little further into the syntax in
14:42 - a future video
14:43 - so first of all here with the ps1
14:45 - variable you can see that now we have
14:47 - this new thing where we're putting in
14:50 - these words instead of T put so what
14:53 - that's doing so instead of putting the t
14:56 - put statement every time you want to use
14:58 - a specific color or the reset you can
15:00 - instead specify a variable that's easier
15:05 - to remember so for example here I can do
15:07 - orange equal to that t put command
15:10 - yellow equal to this one now this is one
15:12 - that we haven't seen yet this bold here
15:14 - we can do a t put bold and then also we
15:17 - have our reset command and then when we
15:19 - want to use one of these values what we
15:21 - can do is when we do our ps1 equal-to
15:25 - and then there's those escape characters
15:27 - that were you're talking about the
15:28 - backslash bracket and then we have the
15:30 - closing bracket here and now instead of
15:32 - a command substitution we're
15:34 - substituting in these
15:35 - variables so instead of a parenthesis
15:38 - that is now embrace so what I'm doing
15:40 - here is I'm saying that I want
15:41 - everything beyond this to be bold and
15:44 - I'm going to start off with a new line
15:46 - here and then on the new line adding to
15:48 - our PS one command per variable still
15:51 - I'm saying that I want this to be orange
15:54 - with the backslash username and then on
15:57 - the next line I'm saying that I want to
16:00 - say space at and I want that to be white
16:03 - and then yellow with the host and then
16:06 - another white with an in statement there
16:10 - and then the green working directory
16:12 - and then finally a new line at the end
16:15 - and then a dollar sign that is white and
16:19 - then I do a reset on all of the
16:22 - formatting so I know that looks like a
16:24 - lot but let me save that and then go
16:27 - back to the terminal here and now if I
16:30 - source that file again then this
16:32 - probably looks a little familiar if
16:34 - you've seen any of my other videos this
16:36 - is how I have my prompt set up so if all
16:39 - that you want to do is customize your
16:41 - prompt with the wording and the colors
16:44 - then you can go ahead and play around
16:46 - with commands like this and setting the
16:49 - PSone and exporting the ps1 variable but
16:53 - there's really a whole lot more that you
16:55 - can do with your customizations so
16:58 - that's going to go ahead and do it for
16:59 - this video but I want to do some future
17:03 - videos on something called dot files now
17:07 - that files are basically the files that
17:09 - we've already been looking at so the dot
17:11 - Asch underscore profile and the dot a
17:14 - char C file now there's several other
17:16 - files just like that that we haven't
17:18 - quite gone over yet but now that we've
17:20 - seen some of the basic commands that we
17:22 - can use within these dot files so for
17:25 - example what we've done to the a char C
17:27 - file over here
17:28 - now that we've seen some of the things
17:30 - that we can do within these files in the
17:31 - next video we'll download some of the
17:33 - dot files that other people have put up
17:35 - on github and look at some of the
17:38 - functionality that other people have
17:40 - managed to squeeze into their dot files
17:42 - and it can be extremely powerful the way
17:44 - that they've done this so be sure to
17:46 - check out that video and we'll take a
17:48 - look at some of those
17:49 - files that are popular online and we'll
17:51 - see how we can set up a get prompt and
17:54 - get Auto completion and color codes for
17:58 - fallback values like if if we don't have
18:01 - these t put values available then we can
18:03 - use different values and really all
18:05 - kinds of stuff so we'll just download
18:07 - some of those files and look through
18:08 - them and see exactly what's going on but
18:10 - hopefully in this video we gave everyone
18:13 - a basic understanding of how we can
18:15 - modify the Bosch RC file to customize
18:18 - our terminal but if you do have any
18:20 - questions specifically with this video
18:21 - just ask in the comment section below
18:23 - be sure to subscribe for future videos
18:25 - and thank you all for watching