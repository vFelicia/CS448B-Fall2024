00:00 - hey what's going on guys this is going
00:01 - to be another programming terms video
00:04 - and in this video we're going to take a
00:05 - look at dry and dry is something that
00:08 - stands for don't repeat yourself now
00:11 - this is something that you are probably
00:12 - going to hear a lot if you're just
00:14 - getting started out in programming or
00:17 - maybe you just got a job in in computer
00:20 - science um you know maybe your boss
00:22 - comes up and says hey our code base is a
00:24 - mess and the first thing I want you to
00:26 - do is to make this code dry so if he
00:29 - tells you that that means is don't
00:31 - repeat yourself and if we take a look at
00:34 - Wikipedia uh what they have on there is
00:37 - it says a principle of software
00:39 - development aimed at reducing repetition
00:42 - of information of all kinds okay so what
00:45 - exactly do they mean about this um I
00:47 - have this little sample project here
00:49 - this is in Python but uh this dry
00:52 - concept spans all languages uh so you
00:56 - know don't get tied into just what the
00:58 - language is doing um so anyways here we
01:01 - have uh some code that has a homepage an
01:04 - about page and a contact page and if I
01:07 - print this out you can see that um it
01:10 - prints out this HTML here it prints out
01:12 - a header and it prints out this
01:14 - paragraph here that says Welcome to our
01:15 - home page then it prints out a footer um
01:18 - with these footer links um but if you
01:21 - look here we have all of this Header
01:25 - information uh in the homepage all of it
01:27 - in the about page all of it in the
01:30 - contact page so this is being repeated
01:32 - over and over and over and that's what
01:34 - people mean whenever they say they want
01:35 - you to make the code dry they don't want
01:38 - that code to be repeated like that
01:40 - because it makes it hard to maintain it
01:43 - so say that your boss came up and he
01:45 - said hey I don't want this to uh or I
01:48 - want to add a link into the header um so
01:51 - you'd have to come in here and you would
01:52 - have to manually add uh a link into
01:56 - every one of these header sections um
01:59 - which it would be a lot nicer if that
02:01 - was all in one place so what would it
02:04 - look like if we tried to make this code
02:06 - dry um so first of all Let's uh you may
02:10 - see here that we want to print out um so
02:13 - we have headers being printed out and
02:15 - Footers so maybe we should just pull
02:18 - these out into their own sections here
02:20 - so I can do um a function to print out a
02:24 - header and I'll just pass that for now
02:26 - and then I'll do a footer here and then
02:29 - I'm just going to go ahead and copy
02:32 - these sections in and place them within
02:35 - these
02:36 - functions so now I have this in one
02:40 - central location um and then we'll go
02:43 - through and we'll replace all of the
02:45 - repeated code with this one function so
02:48 - these are all the headers here and then
02:52 - I'll go through and do all the Footers
02:59 - so now that I've replaced all this code
03:02 - uh if we go in here you can see that
03:04 - this is all cleaned up nice and neat now
03:07 - to where it's a lot easier to read than
03:09 - it was before we can see that this is
03:11 - the header and then we want to print out
03:13 - this homepage paragraph uh this is the
03:15 - header to this page and we want to print
03:17 - out this about page paragraph it's so
03:19 - much easier to read and not only that
03:21 - but if we want to make a change we only
03:22 - have to make that change in one spot um
03:25 - now actually we could even um make this
03:29 - more Drive because you can see that
03:30 - we're uh that we are repeating these
03:33 - menus here um so if we wanted to we
03:36 - could even come out here and do um you
03:39 - know a a nav menu function that printed
03:42 - out these as
03:45 - well then I could go through here and um
03:49 - change these nav menus out with this
03:52 - simple function here and now all that is
03:55 - located in one place now it is possible
03:57 - to get carried away with this um you
04:00 - know in just in this example you can see
04:02 - that we probably got a lot bigger
04:03 - benefit for doing our headers and our
04:05 - Footers than we did for uh just doing
04:07 - this little nav menu which is only um
04:10 - repeated one time so if something's only
04:13 - repeated once or twice here and there
04:15 - then the benefi the then the benefit may
04:17 - not be that large but whenever you have
04:20 - something that is just file after file
04:22 - being repeated then it's usually nice to
04:24 - put that in one central location so that
04:26 - you don't repeat yourself and that you
04:28 - can maintain that code in one place now
04:31 - just to show that that worked let me go
04:32 - ahead and run this code here and you can
04:34 - see that everything pulled out into
04:37 - these functions it still works as
04:38 - planned I'm printing out the homepage
04:41 - down here and we still get our header
04:43 - and our paragraph and our footer section
04:45 - there as
04:46 - well now let me show you a more
04:48 - practical example of where you might see
04:49 - something like this um so I have this
04:52 - file here called calc. py it's a python
04:54 - file that just has really simple
04:56 - functions add subtract multiply and
04:58 - divide now what if I was to write unit
05:00 - test for this um so here's a
05:03 - test.py if you don't know what unit
05:05 - testing is don't worry about it we're
05:07 - just focusing on um the dry principle
05:10 - right now um but anyways uh say that we
05:13 - wanted to test this code and we want to
05:15 - test the addition the subtraction uh
05:18 - multiplication and divide now you can
05:20 - see when we're testing this code at
05:23 - every test we're doing num 1al 10 num 2
05:26 - equal 5 and then you know we're testing
05:29 - make sure that those numbers add and
05:31 - subtract um accordingly um but you can
05:34 - see that every test we have to uh put in
05:38 - what these numbers are equal to um so
05:41 - the python unit testing actually tries
05:43 - to take care of this for you they have a
05:46 - method called setup that runs before
05:48 - every test so if you're doing something
05:50 - like this where you have the same values
05:53 - that you're setting up for every test
05:55 - then you know just put it into a setup
05:56 - function and it makes your code more dry
05:59 - and then you don't don't even have to uh
06:01 - put that function there it's part of the
06:02 - framework so I can just take those out
06:05 - and I'll go through here and remove
06:10 - these and now that those are removed you
06:13 - can see that the code is a lot more
06:15 - clean it's a lot easier to see what's
06:17 - going on and if I want to change some of
06:19 - these values uh you know to different
06:21 - values now I can do it in one spot now
06:23 - in order to get this to work right for
06:25 - python uh technically I'd have to come
06:27 - in here and uh add self. num one to all
06:31 - of these and then go through and change
06:33 - these in every location where there's a
06:35 - num one um but you know that's not the
06:38 - uh what I was trying to get across I'm
06:40 - just trying to get across that it's easy
06:42 - to uh pull out this information and put
06:45 - it in one central location so that uh
06:49 - one it's not repeated and two it's a lot
06:51 - easier to
06:53 - maintain now real quick I went through
06:55 - and went ahead and changed these values
06:56 - and you can see after I change them if I
06:58 - run this code you can see that it ran
07:00 - all four test uh with no problems so
07:03 - this setup method is working correctly
07:05 - with setting up these values before each
07:08 - individual test so that is a quick
07:10 - overview of what it means for your code
07:12 - to be dry so now if you hear somebody
07:15 - saying it or if maybe your boss comes up
07:16 - and asks you to uh to make the code base
07:20 - more dry then you'll understand what
07:22 - they mean instead of uh just the um
07:25 - definition that's here on Wikipedia
07:27 - maybe now you'll have a better idea of
07:29 - what it means to uh put those values
07:32 - into Central locations and and to not
07:34 - repeat yourself so hopefully this video
07:37 - was useful for you guys you know if you
07:38 - have any questions uh feel free to ask
07:40 - in the comment section below uh be sure
07:42 - to subscribe for future programming term
07:45 - videos and thank you guys for watching