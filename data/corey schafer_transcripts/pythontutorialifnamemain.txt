00:00 - hey guys how's it going today I want to
00:02 - take a look at something that you're
00:03 - probably going to see a lot in Python
00:06 - and that is this line right here if
00:09 - double underscore name is equal to
00:12 - double underscore main so what is this
00:16 - doing and why do people use it well
00:20 - let's go ahead and comment this code out
00:24 - and just right off the bat let's print
00:26 - out this double underscore name variable
00:31 - so if I save this code and run it you
00:35 - can see that I just ran this first
00:38 - module dot pi and when I got whenever I
00:42 - printed out the double underscore name
00:43 - was double underscore main and actually
00:47 - to make this more clear I'm going to go
00:50 - ahead and put in that this is the first
00:54 - modules name variable and let me do a
00:58 - format and pass in that name variable
01:01 - now whenever I save that and run it now
01:04 - you can see down here first modules name
01:07 - and then we have double underscore main
01:10 - so what exactly is going on here well
01:13 - whenever python runs a file at first
01:17 - goes through before it even runs any
01:19 - code it sets a few special variables and
01:21 - name is one of those special variables
01:24 - and when python runs a python file
01:28 - directly it sets this name variable
01:31 - equal to main and that's what we're
01:34 - doing here we're running this file we're
01:38 - running this code from the file first
01:40 - module pi now we can also import modules
01:46 - now whenever we import a module it's
01:49 - going to set this named variable to the
01:53 - name of the file so in this case its
01:56 - first underscore module so let's go
01:59 - ahead and see what this looks like so
02:02 - I'm going to go over here to second
02:04 - module dot PI and I'm going to import
02:08 - first module and save that
02:13 - and whenever you import a file it runs
02:16 - that code and so it's going to come in
02:19 - here and it's going to print out this
02:22 - line and whenever we ran this line from
02:24 - first module dot pi we got first modules
02:27 - name is double underscore main whenever
02:31 - we run second module that PI and import
02:34 - that module now you can see that it says
02:37 - first modules name is first module and
02:41 - the reason that's doing that is because
02:43 - this file is no longer being run
02:46 - directly by Python it's being imported
02:49 - and we can actually take a look at
02:51 - second module dot PI's let me copy this
02:54 - from first module and let me paste this
02:57 - into second module dot PI change this to
03:00 - second so now I have second modules name
03:03 - and let me run this so now you can see
03:07 - that it's importing first module and
03:09 - first modules name from this file is
03:12 - first module because it being imported
03:15 - second modules name is main because
03:18 - python is running this file directly and
03:21 - now this brings us back to the code that
03:24 - we first started with so now I can
03:27 - uncomment out this code and now we can
03:29 - see why something like this would be
03:31 - useful because we can check if double
03:35 - underscore name is equal to main which
03:37 - pretty much is saying is this file being
03:41 - run directly by Python or is it being
03:44 - imported so let me bring this down and
03:49 - cut this out and I'm going to paste this
03:52 - into this main method here save that so
03:57 - now if I run this file first module dot
04:01 - PI I'm running it directly so I just ran
04:04 - it and you can see that it went through
04:07 - and it said if double underscore name is
04:10 - equal to main run this main method came
04:12 - into the main method and print it out
04:14 - first modules name is main now if I go
04:19 - back here to second module dot PI and I
04:21 - run this code you can see the imported
04:25 - first module but
04:27 - only printed out second modules name is
04:29 - double underscore main now the reason
04:32 - that it didn't print first modules name
04:36 - is because now we have this check in
04:38 - place if double underscore name is equal
04:41 - to main now
04:42 - this whenever it rent came through and
04:44 - ran this code its saw that double
04:47 - underscore name was equal to first
04:50 - module and not main so then it never
04:52 - made it to this main method and it never
04:55 - printed out this statement here and just
04:58 - to illustrate this further I can go in
05:00 - the first module here I can type in and
05:02 - an else condition and then let me take
05:08 - out I'm just going to take out this main
05:10 - method and from here I'm going to do a
05:14 - print statement that says run directly
05:22 - and then in the else I'm gonna say run
05:28 - from import save that and whenever I run
05:34 - this file first module dot PI whenever I
05:37 - run it directly you can see that this
05:40 - file was the main method got run
05:42 - directly I come over here now to the
05:44 - second module dot PI and I import first
05:47 - module and run this you can see it says
05:50 - run from import because it hit this else
05:53 - statement and you can see that it's
05:55 - being imported so hopefully that clears
05:57 - up any confusion that you may have had
06:01 - about the statement here if name is
06:04 - equal to main the reason this is used is
06:07 - because you know sometimes there is code
06:11 - that you only want to run whenever
06:13 - you're running this as the main file and
06:17 - sometimes there's code that you only
06:19 - want to run whenever it's being imported
06:21 - and one more thing here if we bring back
06:25 - this main method and then I'm gonna put
06:29 - in a print statement here I'm just going
06:33 - to put first modules
06:37 - main method and save that and then run
06:43 - that within here and then also up above
06:48 - this I'm going to put in a few print
06:50 - statements that is just a C print this
06:54 - will be run this will always be run so
07:01 - save that and then whenever I run this
07:05 - you can see this will always be run
07:07 - first modules main method one reason
07:10 - that you might want to put all of your
07:13 - code inside of method like this instead
07:17 - of just putting all the code that you
07:19 - want to run down here in this
07:22 - conditional if you make this method and
07:25 - then within this conditional where it
07:27 - says if double underscore name is equal
07:29 - to main and then run this what that
07:32 - allows us to do is if we come over here
07:34 - to second module dot PI and let me rerun
07:38 - this now you can see that it imported
07:40 - first module and it says this will
07:43 - always be run and that's because it is
07:45 - outside of that main method so it's
07:48 - going to get run regardless even if it's
07:50 - important and then second modules name
07:53 - is main now with that main method if we
07:56 - wanted to run that from second module
07:58 - dot PI then we can actually come in here
08:00 - and call that directly so I can save
08:05 - that and now if I rerun this file now
08:07 - you can see that it's importing first
08:10 - module and it's not meeting this
08:13 - condition so it doesn't run the main
08:15 - method on the import but then if we want
08:17 - to run that anyway then we can say first
08:19 - module dot main then it comes in here
08:21 - prints that out and then continues on
08:23 - with the rest of the code in second
08:27 - module dot PI so I really hope this
08:29 - video was useful and explained this well
08:32 - enough if you have any further questions
08:34 - you know feel free to ask in the comment
08:36 - section below
08:38 - you know be sure to subscribe for future
08:40 - videos and thank you for watching