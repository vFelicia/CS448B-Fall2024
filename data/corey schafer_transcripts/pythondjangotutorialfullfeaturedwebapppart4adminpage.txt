00:00 - hey there how's it going everybody in
00:01 - this video we'll be learning how to
00:02 - access the admin page of our Gengo site
00:05 - now the admin page is a great way to see
00:07 - what data is on your site it also gives
00:09 - you a nice GUI for creating updating or
00:12 - deleting that data now we saw this admin
00:14 - login page earlier in the series but we
00:16 - didn't do anything with it so just to
00:19 - remind you what it looked like let's
00:20 - start up our development server which I
00:22 - already have running from the command
00:24 - line and now let's open up our page so
00:28 - I've got the home page here ok so within
00:30 - our home page let's navigate to forge
00:33 - slash admin like we saw earlier and we
00:36 - can see that we get this admin login now
00:39 - we can't login here yet because there
00:41 - are no default usernames or passwords or
00:43 - anything like that we actually have to
00:45 - create an admin user so that we can log
00:48 - in here for the first time so let's
00:50 - bring back up our command line and I
00:52 - will stop the development server and now
00:55 - let me clear the screen here so that we
00:56 - have some room and now the command to
00:58 - create a new user for a super user to
01:01 - login to that admin page we can say
01:03 - Python manage py and this is create
01:07 - super user all one command now if we
01:11 - were to run this right now then it's not
01:12 - going to work so let me run this and
01:15 - show you why it isn't going to work
01:16 - right now so I ran that and we got a lot
01:19 - of error feedback here but the very last
01:22 - line of this error gives us a good hint
01:24 - it says operational error no such table
01:26 - off user so the problem here is that we
01:29 - haven't created the database that we'll
01:31 - be using for this project yet but that's
01:33 - very easy to do all we have to do is run
01:36 - a few migration commands now database
01:38 - migration is something that we'll talk
01:40 - about more throughout the series but
01:43 - basically it allows us to apply changes
01:45 - to a database now since we haven't
01:47 - created a database yet this first
01:49 - migration will create the database and
01:51 - add a bunch of default tables for us and
01:54 - this auth table here is one of those
01:57 - tables that is going to get created and
01:59 - then it will allow us to run that create
02:01 - super user command so let's go ahead and
02:04 - run these migrations so again let me
02:06 - clear the screen so the first thing we
02:08 - can do here is to say Python managed to
02:11 - I make
02:13 - migrations so let's run that and when we
02:17 - run that it tells us that there were no
02:18 - changes detected and now if we had
02:20 - created some of our own database tables
02:22 - or models then we would have seen some
02:24 - changes there but we'll see that in the
02:26 - next video when we actually work with
02:28 - the database so make migrations just
02:31 - detects the changes and prepares Django
02:33 - to update the database but it doesn't
02:35 - actually run those changes yet in order
02:38 - to apply the migrations we need to say
02:40 - python managed dot P Y and then migrate
02:45 - so if we run that then we can see that
02:49 - ran through some migrations and those
02:51 - all came back as ok so that auth user
02:54 - table should now exist so now if I rerun
02:57 - that command that we tried earlier so
03:00 - let me clear the screen and hit up a
03:02 - couple of times to find that create
03:04 - super user command if we rerun that
03:07 - command now now it seems to be working
03:09 - and it's asking us for a username so I'm
03:12 - going to enter a user name of Corrie m/s
03:15 - and an email address I'll just put in
03:17 - Cori M Schaefer at gmail.com and now for
03:21 - a password I'm just going to do testing
03:23 - three two one and again testing three
03:28 - two one now obviously you'll want to
03:31 - make your password stronger in a
03:32 - real-world application okay so now we
03:34 - can see that that super user was created
03:36 - successfully so now let's run our server
03:39 - again and reload that admin page in our
03:42 - browser
03:42 - so we'll do Python manage py run server
03:47 - and once that is running we can go back
03:51 - to our browser here and reload the login
03:55 - page for the admin and now we should be
03:57 - able to sign in with that username and
03:58 - password that we used to create the
04:01 - super user so for me that was Corey MS
04:04 - and I used a password of testing three
04:07 - two one so let's try to login with that
04:09 - and we can see that now we logged in
04:10 - successfully okay so this is the default
04:13 - admin page for the Django site so let me
04:15 - make this a little larger here so that
04:17 - you can see everything now this is one
04:20 - great thing about Django is that it
04:22 - comes with this really awesome admin
04:24 - site by default so this allows us to do
04:27 - a lot
04:27 - to work on the backend that would take a
04:29 - ton of effort to implement if we were to
04:31 - do this from scratch on our own so let's
04:33 - take a quick look around so we can see
04:35 - that we have groups and users here now
04:38 - if I click on groups then it says that
04:40 - we have zero groups right now so we
04:43 - could add some if we want but I'm not
04:45 - going to right now now if we look
04:47 - towards the top then we can see that we
04:50 - have some breadcrumbs here that show us
04:52 - exactly where we are on the admin page
04:55 - so right now we are within
04:57 - authentication and authorization and
04:59 - within groups so to go back a level I
05:02 - can just click up one level here and now
05:05 - we're back to the page that we were at
05:06 - before so now let's click on users and
05:10 - we have one user here right now and it's
05:13 - the one that we just created so if I
05:16 - click on that user then it takes us to a
05:18 - page with a lot more details where we
05:21 - can add more stuff or change some things
05:23 - that we've already added so we can see
05:25 - we have our user name here of Cory M s
05:27 - now for our password we set our password
05:30 - to testing three two one but now we have
05:33 - this big long hashed password so it
05:36 - never even stores our raw password so
05:39 - Django handled the hashing of that
05:41 - password for us and does all of the
05:43 - proper checks when we log in in order to
05:45 - see if our entered password gets hashed
05:48 - to that correct value so that's a lot of
05:50 - added security there that we just get
05:52 - for free so that's awesome so moving
05:54 - down here we can see that we have a
05:55 - first name last name we can change our
05:58 - email address we can change our
06:00 - permissions and all kinds of stuff but
06:02 - I'm not going to change anything in here
06:04 - right now I just wanted you all to see
06:06 - what all was possible so let's go back
06:09 - to the top and click on the breadcrumb
06:12 - that takes us back to our list of users
06:15 - and now on the top right here let's
06:17 - click on add user so now we can actually
06:20 - create a new user so I'm going to create
06:22 - a new user here so I'll do test user and
06:25 - for the password I'll do just the same
06:28 - thing testing three two one and we need
06:30 - to confirm this user is password and now
06:35 - let's click on save and continue editing
06:38 - and we could continue adding fields for
06:40 - this you
06:41 - here if we wanted to so for example if
06:42 - we wanted to add an email address I
06:44 - could just say test user at company comm
06:48 - now let me scroll down here to
06:49 - permissions so that we can see what
06:53 - permissions it gave this new user so we
06:55 - can see that it created this as an
06:56 - active user but it didn't give this
06:59 - person staff status by default and it
07:02 - also didn't give them super user status
07:04 - by default now staff status means that
07:06 - this person would be able to log into
07:08 - the admin site and super user status
07:10 - means that they would have all of the
07:12 - permissions so you know to delete other
07:14 - users and things like that now if we
07:16 - scroll all the way to the bottom here
07:19 - then we can see that we can also delete
07:21 - this new user but I'm going to go ahead
07:23 - and leave him here so let's go ahead and
07:26 - save that email change that we made and
07:28 - then go back to our main page now one
07:32 - less thing I'd like to point out over
07:33 - here to the right is that it also shows
07:36 - us our latest changes so we can see here
07:39 - that we have a plus sign next to the
07:41 - user which means that we created that
07:43 - user so that's a great way of to keep
07:46 - track of what's going on and we can see
07:48 - that we have a pencil icon here next to
07:50 - the test user and that is where we
07:52 - edited the user and added their email
07:54 - address okay so I think that is going to
07:56 - do it for this video so in this video we
07:58 - just got a quick look at the admin page
07:59 - for Django but we're going to be using
08:01 - this page a lot throughout the series
08:03 - now in the next video we'll be learning
08:05 - how to work with databases so that we
08:07 - can get started with creating some real
08:09 - data for our website instead of using
08:12 - the dummy data that we have for now and
08:14 - we're also going to learn how to get
08:15 - that data added to this admin page so
08:18 - that we can come in here and create
08:20 - update and delete posts right from here
08:22 - within the admin page but if anyone has
08:24 - any questions about what we covered in
08:26 - this video then feel free to ask in the
08:27 - comment section below and I'll do my
08:29 - best to answer those and if you enjoyed
08:30 - these tutorials and would like to
08:31 - support them there are several ways you
08:33 - can do that these ways to simply like
08:35 - the video and give it a thumbs up and
08:36 - also it's a huge help to share these
08:37 - videos with anyone who you think would
08:39 - find them useful and if you have the
08:40 - means you can contribute through patreon
08:42 - and there's a link to that page in the
08:43 - description section below be sure to
08:44 - subscribe for future videos and thank
08:46 - you all for watching
08:48 - you
08:57 - you