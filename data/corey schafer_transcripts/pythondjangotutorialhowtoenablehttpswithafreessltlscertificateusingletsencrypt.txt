00:00 - hey there how's it going everybody in
00:01 - this video we are going to secure our
00:03 - web server by enabling HTTPS on our
00:06 - website with a free certificate using a
00:08 - service called let's encrypt so we can
00:11 - see I have my website up here now and in
00:15 - the last video we added a custom domain
00:16 - name and my domain name is wwm I awesome
00:20 - app calm but we can see in the upper
00:23 - left here that it says that this is not
00:25 - secure so it says your connection to
00:28 - this site is not secure so in order to
00:31 - get that to be secure so on most
00:33 - websites you'll see a little lock in the
00:35 - top left there we need to add an SSL or
00:38 - TLS certificate and we're going to do
00:40 - that using a service called let's
00:42 - encrypt so I have let's encrypt pulled
00:44 - up here in my browser and let's encrypt
00:47 - is a certificate authority that lets
00:49 - anyone obtain renew and manage
00:52 - certificates for their site now there
00:54 - are nonprofit and provide all of this
00:55 - for free and it's easy to get running on
00:58 - our server so let's go ahead and get
01:00 - started and see how to do this so first
01:02 - of all you're going to want to SSH into
01:03 - our server so if you're coming to this
01:05 - tutorial and haven't seen the previous
01:07 - videos in the series then it's not a big
01:09 - deal but you will need SSH access to
01:11 - your server in order to get this running
01:13 - and that's something that we covered in
01:15 - previous videos and once we're in our
01:18 - server we simply need to run a few
01:20 - commands so in order to find the
01:22 - commands that you need to run for your
01:23 - operating system you'll simply want to
01:25 - go to the let's encrypt website which we
01:27 - have pulled up here and then you're
01:29 - going to want to go to the getting
01:30 - started page now from here if we look in
01:33 - the section where it says that we have
01:36 - shell access they recommend using this
01:38 - cert bot client so the cert bot client
01:41 - makes it super easy to get these
01:43 - certificates working on our server so
01:45 - I'm going to click on this cert bot link
01:46 - and once you click on that cert bot link
01:49 - now you're just going to want to choose
01:51 - the web server and operating system that
01:53 - you're using so for our Django site we
01:56 - are using Apache and a boon to 1804 so
01:59 - I'm going to it says I'm using and then
02:02 - there's a drop down I'm going to select
02:04 - Apache and then it says on and that's
02:07 - our operating system now I'm going to
02:09 - select Ubuntu 1804 but you are going to
02:12 - want to choose
02:13 - your web server and your operating
02:15 - system so these are the instructions for
02:17 - Apache on a boon to 1804 so this page
02:20 - here gives you all of the commands that
02:22 - you're going to need to run on your
02:23 - server and they also have a lot of
02:25 - explanation as to what you're doing with
02:27 - these commands if you read through this
02:28 - now I suggest that you read through this
02:30 - page if you'd like to see more
02:31 - information about these commands but I
02:33 - also have all of these commands pulled
02:35 - up in a text file here on my machine and
02:38 - I'll have these available on my github
02:40 - as well if anyone would like to follow
02:42 - along and copy these and also again this
02:44 - is for Apache and a boon to so if you're
02:47 - using a different web server or
02:48 - operating system then you're going to
02:50 - need to get the commands for your server
02:52 - and your OS so I have those commands
02:54 - here and if I pull up my terminal I'm
02:57 - also SSH into my django server okay so
03:01 - I'm simply going to copy these commands
03:03 - into my terminal since I'm a slow typer
03:04 - and I'll do these one at a time so these
03:07 - are the commands that cert bot gave me
03:09 - so I will just paste these in one at a
03:11 - time so first we have our sudo apt-get
03:13 - update and I'll have to put in the sudo
03:17 - password and I will some of these
03:19 - commands will take a little bit of time
03:21 - so if there's one that takes too long I
03:23 - will just skip forward it through that
03:25 - okay so now we want to do this sudo
03:28 - apt-get install software properties
03:31 - common so I'll run through that okay
03:33 - that finished pretty quickly sudo apt
03:36 - repository universe so we are adding a
03:38 - repository here so I will run through
03:41 - that okay so that one took a little
03:43 - longer to install for me so I just fast
03:45 - forwarded through that if you need to
03:47 - pause until that finishes then feel free
03:49 - to do that but I'm just going to fast
03:52 - forward so that we can move on here
03:53 - so now I'm going to add a another
03:56 - repository here and this is a PPA cert
03:59 - bot so I will run through that and here
04:02 - on this one it's asking us to hit enter
04:04 - to continue so I'll just hit enter to
04:06 - continue there okay and once that is
04:08 - complete we need to do a sudo apt-get
04:10 - update again so I will paste that in
04:15 - okay and lastly here we have the sudo
04:18 - apt-get install python cert bot apache
04:22 - so I will clear my screen and run that
04:25 - and this one will also add
04:27 - if you want to continue so I will just
04:29 - hit enter for the default of yes and let
04:31 - that install okay so once that is
04:33 - finished we are ready to run the cert
04:35 - bot command but if you've been following
04:37 - along with these videos then we actually
04:39 - need to make a change to one of our
04:41 - config files at this point because we're
04:43 - going to run into a problem if we don't
04:44 - make a couple of changes so first of all
04:46 - let's update our Apache configuration
04:48 - file so that we have our domain name in
04:51 - the server name variable so to update
04:54 - that I can say let me clear my screen
04:56 - here I'll say sudo nano and that is at
04:59 - ford slash et Cie ford slash apache to
05:03 - ford slash sites
05:05 - - available sorry that this is going on
05:09 - to another line here I want this large
05:11 - enough to where you all can read it and
05:13 - now that is within Django project comp
05:17 - so I will run that and actually just so
05:20 - we can read a little better let me
05:22 - expand this over our text file there for
05:24 - a second so now down here we're going to
05:27 - set this server name to our website so
05:31 - I'm going to uncomment out that and then
05:34 - I'm gonna put in my domain name which is
05:36 - my awesome app com and I'm also going to
05:41 - just bring this down a line here to
05:44 - spread that out a bit now there's also
05:46 - one more thing that we're going to
05:47 - change temporarily here in our
05:48 - configuration file so when we run that
05:51 - cert bot command it's going to try to
05:53 - create an SSL configuration and using
05:55 - this existing file and some of the
05:57 - configurations that we have in this
05:59 - existing file aren't allowed to be
06:01 - duplicated so we need to temporarily
06:03 - comment out some of these commands and
06:05 - will uncomment out those once it creates
06:08 - the new configuration successfully so
06:10 - the ones that we need to comment out are
06:12 - down here at the bottom if I scroll down
06:14 - a little bit these WSGI commands here so
06:18 - I'm just going to comment these out for
06:20 - now and now I will hit control X Y to
06:26 - save and then hit enter to keep that
06:28 - same file name ok so now I'm going to
06:30 - run the cert bot command for Apache and
06:33 - this will automatically update a lot of
06:35 - our configurations to work with these
06:36 - certificates so that command if I look
06:39 - back at the text file
06:41 - here is sudo cert bot Apache so I'll
06:44 - copy that let me clear my screen here
06:46 - make this large again and I will paste
06:50 - that in and now it's going to ask us a
06:52 - couple of questions here so you can see
06:54 - that it's saying to input our email
06:56 - address so I will just put in my email
06:59 - address khorium Schaefer at gmail.com
07:02 - now it's asking us to agree to the Terms
07:05 - of Service here so I will agree lastly
07:08 - it's asking us if we it wants us to
07:10 - share our email address and that is so
07:13 - that it can send the emails about the
07:14 - nonprofit like let's see there were
07:17 - encrypting the web AFF news campaigns
07:19 - I'm gonna say no to that one that one's
07:21 - not necessary that's optional so I'm
07:23 - just gonna say no to those emails and
07:25 - now it's saying which names would you
07:27 - like to activate HTTPS for the only one
07:30 - that it has here is w WMI awesome app
07:33 - comm so it says to select the
07:36 - appropriate numbers or just hit enter to
07:39 - accept all of these up here so I'm just
07:41 - going to hit enter to do that one okay
07:44 - so we can see that did a couple of
07:46 - things up here so it said that it
07:48 - created an SSL v host within our sites
07:51 - available folder at Django project /l e
07:54 - slash ssl.com
07:56 - it also enabled some Apache modules here
08:00 - and also made a few more changes as well
08:03 - so now it's asking us if we would like
08:06 - to redirect or not so right no redirect
08:10 - means that we could go to HTTP version
08:13 - of our website and HTTP if we redirect
08:16 - it makes all of the requests redirect to
08:19 - secure HTTP access now I almost always
08:23 - choose redirect I'm not sure why
08:24 - somebody would allow HTTP access instead
08:28 - of a secure access but I always want us
08:31 - to be on the secure version of the
08:33 - website so I'm just going to say to
08:35 - redirect okay and then it says
08:37 - congratulations your certificate and
08:39 - chain have been saved it tells you the
08:41 - locations and also it changed our
08:45 - configurations okay so now let me clear
08:47 - my screen here and let's cat out the
08:52 - configuration file that we had before so
08:54 - I'm just going to hit up arrow a couple
08:56 - of times now Nano is where we change
08:58 - that file but I'm just going to do a
09:00 - pseudo cat on that to display that file
09:03 - and own in its entirety so now if we
09:07 - look at this
09:07 - so I'm scrolled up at the top here let
09:10 - me scroll down to the changes that it
09:12 - made so you can see that we still have
09:14 - our aliases still have our directories
09:16 - we have our commented out section here
09:18 - but at the very bottom it put this code
09:21 - here so it turned the rewrite engine on
09:23 - and it is rewriting our conditional
09:26 - where if the server name is equal to my
09:28 - awesome app comm then it'll rewrite us
09:31 - to the HTTPS version of that so that's
09:35 - what redirects us to the secure version
09:37 - of our website so the secure version of
09:40 - our website I'm going to clear my screen
09:41 - here now I'm going to hit the up arrow
09:44 - one more time now instead of this Django
09:46 - project kampf
09:48 - remember it created this other
09:50 - configuration file Django project -
09:53 - Ellie - ssl.com
09:56 - I'm going to print that out so now if I
09:59 - scroll up here we can see that it's
10:01 - basically the same except instead of
10:03 - port 80 it's at port 443 that's the ssl
10:06 - port if I scroll down here a little bit
10:09 - it copied all of this stuff here so we
10:11 - have our aliases have our directories we
10:14 - have our commented out WSGI variables
10:18 - there which will have to uncomment it
10:19 - but also down here at the bottom we have
10:21 - our SSL certificates so we can see that
10:24 - it's linking to our files so that's the
10:27 - reason that I commented out these WSGI
10:29 - lines here because if you didn't comment
10:32 - those out and it tried to recreate this
10:34 - new SSL configuration then you would get
10:37 - an error that says that you're not
10:38 - allowed to duplicate these commands so
10:40 - now I'm just going to delete those
10:43 - commands from the other configuration
10:44 - and then uncomment out these here in the
10:47 - new configuration so first I'm going to
10:50 - clear my screen here I'm going to do a
10:53 - sudo nano back on our original Django
10:58 - project dot configuration so I'm gonna
11:01 - run that so this is the one that is on
11:02 - port 80 so I'm going to come in here and
11:05 - I'm simply going to remove a few things
11:09 - from this configuration so remember we
11:11 - have all of this information in our new
11:13 - configuration file so we can delete most
11:16 - of this from our original configuration
11:18 - so within nano you can hit ctrl K to
11:21 - remove a line so I'm just going to
11:23 - remove our aliases I'm going to remove
11:26 - this directory here and I'm going to
11:28 - remove our WSGI commands now be careful
11:31 - not to delete the rewrite lines here we
11:34 - want to keep those rewrite lines so
11:36 - basically all we need in our port 80
11:39 - logic here we have our server name and
11:41 - all that that's good but really we just
11:44 - want to rewrite all that traffic from
11:46 - port 80 to HTTPS so I will save that by
11:50 - hitting ctrl X Y to save and then hit
11:53 - enter and now I'm also going to edit the
11:56 - new configuration file so that is Jango
11:59 - underscore project - Ellie - SSL comm so
12:04 - I will edit this file and in here I'm
12:07 - going to keep everything that we have
12:09 - right now but I'm just going to
12:10 - uncomment out our WSGI lines and I'll go
12:15 - ahead and remove those empty lines there
12:17 - as well
12:17 - so I will uncomment out these lines here
12:21 - and that will allow our webserver to
12:23 - talk to our Jango code so now I'll save
12:26 - that by hitting ctrl X Y to save and
12:28 - then hit enter okay so that should get
12:30 - our website working correctly now for
12:33 - most websites that automatic cert bot
12:36 - command is going to run without any
12:37 - issues but in our case we had to make
12:39 - those couple of changes now if you have
12:41 - any problems with the automatic cert bot
12:43 - command running into any issues then and
12:46 - you still haven't fixed them with what
12:48 - we did in this video then I'd recommend
12:50 - going back to their website and looking
12:52 - at the cert only installation and
12:54 - walk-through from there that will allow
12:57 - you to modify your configuration files
12:59 - manually instead of it changing those
13:01 - automatically for you but I've always
13:03 - found it easier to let it do most of
13:05 - that stuff automatically like we did
13:07 - here okay so we are just about done but
13:09 - there are a couple more things that we
13:11 - need to do now one thing I want to point
13:13 - out is that if you test your Apache
13:15 - config it might look like it has some
13:18 - issues so if I say Apache CTL
13:22 - config test and run that then we can see
13:26 - that it thinks that we have some syntax
13:28 - errors so it says a syntax error on line
13:30 - 51 with this SSL certificate file it
13:34 - says that it doesn't exist or that it is
13:37 - empty but really that's just a
13:39 - permissions issue you should run that
13:41 - command using sudo and you'll find that
13:44 - you don't have any syntax problems so if
13:47 - I rerun this Apache CTL command config
13:50 - test but put sudo in front of it then
13:53 - we're not going to have that issue we
13:56 - still get that we have a warning here
13:58 - that says could not rely be reliably
14:00 - determine the server's fully qualified
14:02 - domain name but that's something that
14:04 - was already there I don't worry about
14:05 - that for now it's nothing that will
14:07 - affect our website in any way okay so
14:10 - now that we have all of this working all
14:13 - we have to do is allow HTTP traffic to
14:16 - our website and then it should just work
14:18 - so if you've been following along with
14:20 - this series then if you remember we set
14:22 - up a firewall and originally we only
14:25 - allowed HTTP traffic so we can allow
14:28 - HTTP traffic simply by saying sudo ufw
14:32 - allow HTTP so if I run that that's going
14:36 - to allow HTTP traffic
14:39 - now you can disallow HTTP traffic if
14:42 - you'd like but since we're redirecting
14:43 - that traffic anyway I'm just going to
14:45 - leave it there
14:46 - so now let's restart our web server for
14:49 - these changes to take effect and then we
14:51 - will test it out in the browser so now
14:52 - say sudo service Apache to restart so
14:57 - I'll restart that server and now let's
15:00 - bring this up in our browser so I had my
15:03 - browser open here now remember this was
15:05 - the non secure version of our website so
15:08 - let me reload this okay and when I
15:11 - reloaded that we can see that now we
15:14 - have HTTPS instead of HTTP and also we
15:19 - have a lock here in the top left so if I
15:21 - click on that lock it says that our
15:23 - connection is secure so that is good
15:26 - that is definitely what you want in a
15:28 - production website so now let's just
15:31 - test a little bit of functionality I'm
15:32 - not going to test everything here so
15:35 - our user name was Cory M Schaefer
15:37 - actually I believe that user name oh
15:39 - yeah that user name was actually just
15:41 - Cory M s so I login with that Cory M s
15:44 - user that we created and I believe the
15:47 - password for that okay so we are logged
15:51 - in here and now just let me try to
15:53 - update a post so we can see when I go to
15:55 - one of the posts that I've created we're
15:57 - still on a secure site here it still
16:00 - HTTPS so all of this is HTTP traffic and
16:04 - we can do everything that we did before
16:07 - so my latest updated post I'll just
16:09 - update that that to be my latest post so
16:12 - paste that still on HTTPS secure
16:15 - connection that's good
16:16 - I'd go back those changes took effect so
16:19 - it looks like everything is working with
16:21 - our secure connection now one thing
16:23 - about these certificates is that they
16:25 - last for I think around 90 days and
16:27 - after that they'll need to be renewed
16:29 - now we won't want to do this manually
16:31 - every 90 days so let's just set this up
16:33 - to where it does it automatically so
16:35 - let's go back to our web server and let
16:39 - me clear the screen
16:39 - so first let's do a dry run of what a
16:42 - renew would look like so to do a dry run
16:44 - I can say sudo cert bot renew and that
16:49 - would renew our certificate but to do a
16:51 - dry run of this they have a command that
16:53 - is - - dry - run so I'll run that okay
16:59 - so that just simulated a renewal it
17:01 - didn't actually renew our certificate
17:02 - but we can see that the simulated
17:04 - renewal looks good it says
17:05 - congratulations all renewals succeeded
17:07 - so now let's create a cron job that will
17:11 - run this renew command every month or so
17:15 - so like I said the certificate is good
17:18 - for 90 days but we can just run the
17:20 - renew command every month or so and
17:22 - that'll be fine now if you've never run
17:24 - cron jobs before basically it's a way to
17:26 - run commands at certain intervals I have
17:29 - a separate video on working with cron in
17:31 - general if you would like to learn more
17:32 - about it in detail and I'll leave a link
17:34 - to that video in the description section
17:36 - below but for now let's say that we want
17:39 - to edit our crontab to run this every
17:42 - month so we're going to want to edit our
17:44 - crontab with sudo so that the commands
17:47 - that we add to that will
17:48 - run as root so I'll say sudo crontab - e
17:53 - and now it's going to ask us to choose
17:55 - an editor if we haven't selected a
17:57 - default so I'm just gonna hit one to do
18:00 - Nano here since that's what we've been
18:01 - using and now I will scroll down here
18:05 - and this documentation will help you
18:07 - with crontab as well if you've never
18:09 - used it so it'll kind of give you an
18:10 - idea of what all of these placeholders
18:14 - are but for hours let's say that we
18:17 - wanted to run that renew command at 4:30
18:21 - a.m. on the first of every month so I
18:24 - will put in a 30 for the minutes a 4 for
18:28 - the hour a 1 for the day of the month
18:31 - and then just an asterisk for the month
18:35 - and the day of the week that means it
18:38 - will run every month and on any day of
18:40 - the week ok so now the command that we
18:43 - want to run is sudo cert bot renew and
18:48 - also I'm going to tag on a quiet there
18:52 - too that way it runs in the background
18:54 - now you don't want to do that dry run
18:56 - here because we actually want to renew
18:58 - this every month so we don't want to put
19:01 - the dry run option there so if this
19:03 - looks good then we can save this by
19:05 - hitting ctrl X Y to save and then hit
19:08 - enter ok so now you should have that
19:10 - certificate working on your server and
19:12 - that renew command will get run every
19:15 - month so that this is automatically
19:17 - renewed for us so that's good ok so I
19:20 - think that is going to do it for this
19:22 - video hopefully now you feel comfortable
19:24 - setting up SSL encryption and HTTPS for
19:27 - your websites using a service like let's
19:30 - encrypt now as usual there's still a lot
19:32 - that we can do with this website I'm
19:34 - still going to do a video showing you
19:36 - all how to deploy to a service like
19:38 - Heroku we'll also see how to use a
19:40 - Postgres database instead of SQL Lite
19:43 - like we're using now and also I prefer
19:46 - to have my website set up so that the
19:48 - WWV version of a website gets redirected
19:51 - to the non WW version of a website so
19:54 - for example ww twitter.com gets rid of
19:58 - the WW part and just read redirects you
20:01 - to Twitter
20:02 - calm and I can show you how to do that
20:03 - in a future video as well so those will
20:06 - be the next videos that I work on it for
20:08 - this series but if anyone has any
20:10 - questions about what we covered in this
20:12 - video then feel free to ask in the
20:13 - comment section below and I'll do my
20:14 - best to answer those and if you enjoy
20:16 - these tutorials and would like to
20:18 - support them then there are several ways
20:19 - you can do that these easy ways to
20:21 - simply like the video and give it a
20:22 - thumbs up and also it's a huge help to
20:24 - share these videos with anyone who you
20:25 - think would find them useful and if you
20:27 - have the means you can contribute
20:28 - through patreon and there's a link to
20:29 - that page in the description section
20:30 - below be sure to subscribe for future
20:32 - videos and thank you all for watching
20:45 - you