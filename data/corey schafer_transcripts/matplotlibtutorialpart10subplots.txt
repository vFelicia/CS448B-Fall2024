00:00 - hey there how's it going everybody in
00:01 - this video we're going to be going over
00:02 - subplots so so far in this series we've
00:05 - simply been creating our plots with the
00:07 - PI plot object and that works great for
00:09 - what we've done so far but if you want
00:12 - additional plots or if you want to work
00:13 - with plots in a more object-oriented
00:16 - manner then it's best to create your
00:18 - plots with the sub plots method a lot of
00:20 - people prefer to create their plots this
00:22 - way even if they're only creating a
00:24 - single plot so in this video we're gonna
00:27 - see how to create our plots using the
00:29 - sub plots method and go back over some
00:31 - of the plots that we created earlier in
00:33 - the series and see what changes need to
00:36 - be made in order to use sub plots for
00:38 - those examples now I would like to
00:40 - mention that we do have a sponsor for
00:42 - this series of videos and that is
00:44 - brilliant org so I really want to thank
00:46 - brilliant we're sponsoring this series
00:48 - and it would be great if you all could
00:49 - go and check them out using the link in
00:51 - the description section below and
00:52 - support the sponsors and I'll talk more
00:54 - about their services in just a bit so
00:57 - with that said let's go ahead and get
00:58 - started ok so I've got some sample code
01:01 - pulled up here in my script and if
01:03 - you've been following along with the
01:04 - series then you'll likely recognize the
01:06 - other matplotlib code that I have here
01:09 - at the moment but if not then let me go
01:11 - over this really quick so this is
01:13 - actually a plot that I created in the
01:15 - first video of the series but we're
01:17 - loading in this data using a CSV file
01:20 - here instead ok so let me go over this
01:22 - so first we're importing pandas here at
01:24 - the top then we're also importing the PI
01:27 - plot module from matplotlib we are using
01:31 - the Seabourn style for these plots to
01:34 - just make them look a little bit better
01:35 - here and now we're loading in this data
01:37 - from this csv file using pandas read csv
01:41 - method so what this is doing is it's
01:44 - going and getting the age column from
01:47 - that csv file which if we look at this
01:49 - csv file these are the median salaries
01:52 - for these ages for the respondents who
01:55 - answered this survey so for age 18 these
01:58 - are all the median salaries 19 median
02:00 - salaries and so on so our age is here
02:03 - when we say data is equal to age and
02:06 - getting that key it's setting it equal
02:08 - to that entire age column so dev
02:11 - salaries were getting the all depths
02:13 - high salaries were getting the Python
02:16 - column and Jay s salaries were getting
02:17 - the JavaScript column and then we are
02:20 - plotting all of these out so since we
02:22 - have PLT dot plot three times that means
02:25 - that we're going to have three lines on
02:27 - our line plot so the first plot here is
02:29 - the Python salaries with our label the
02:32 - next is the JavaScript salaries and then
02:34 - the all developers plot and we're also
02:36 - giving this one a custom color and a
02:38 - dashed line style then we are printing
02:41 - out the legend so that we know what is
02:43 - what we're giving this a title we are
02:46 - setting the X label and the y label for
02:49 - our axes we have a tight layout here
02:51 - which means that we are getting some
02:54 - automatic padding for our plot and then
02:56 - finally we're doing PLT show which
02:58 - actually shows our plot and as usual I'm
03:01 - gonna put a link in the description
03:02 - section below that links to this code on
03:05 - my github if anybody wants to download
03:07 - that or a copy and paste this and follow
03:09 - along okay so let me just run this
03:11 - really quick using the PLT dot plot
03:14 - method that we're using now to see what
03:17 - we can expect here and we have seen a
03:20 - plot similar to this earlier in the
03:23 - series so this might not look new to all
03:25 - of you okay
03:26 - so now let me close that down so that's
03:28 - what we should expect there okay so we
03:31 - can see that every time we're doing
03:33 - something with our plot we're using the
03:35 - PLT object that we imported that's that
03:39 - PI plot object we never actually created
03:42 - that object ourselves now that might be
03:45 - weird for some people who are used to
03:46 - doing coding and a more object oriented
03:48 - manner we might think at some point we
03:50 - should have done something like this so
03:53 - we maybe should have said like PLT is
03:56 - equal to plot and created a new instance
04:00 - of a plot and we can do something like
04:03 - that and that's what we'll be looking at
04:05 - in this video so the way that we're
04:07 - doing it now is called stateful and it's
04:11 - called staple because we're importing
04:13 - this pie plot object and we it has a
04:17 - current state in terms of what figure
04:20 - we're currently working with and what
04:22 - axes were currently working with and
04:23 - things like that now we haven't talked
04:26 - much about fig
04:27 - and axes so far in the series because
04:29 - we've been working with a single figure
04:31 - and a single axis object so what are the
04:35 - figure and axes well the figure is the
04:37 - container holding our plots so you can
04:41 - think of that as that whole window that
04:43 - shows us when we that when we run our
04:46 - code and the axes are the actual plots
04:49 - so a figure can have multiple plots and
04:52 - this series we've seen how to work with
04:55 - one plot within one figure so just one
04:58 - axes but we can't have more than one and
05:01 - we'll see how to do that in this video
05:03 - so there have been a few times in this
05:05 - series where we have used these methods
05:08 - of PLT dot GCF to get the current figure
05:13 - and we have also used GC a for get
05:17 - current axes and like I said those will
05:20 - get the current figure and axes for your
05:22 - plot and you can switch between
05:24 - different ones so that's the staple way
05:27 - of doing it but many people prefer
05:30 - myself included to use the more
05:32 - object-oriented approach when working
05:34 - with multiple figures and axes so to do
05:37 - this we can use the sub plots method so
05:41 - let's take a look at this right now
05:43 - let's simply recreate the same plot that
05:46 - we currently have but instead of using
05:48 - the PI plot object that we imported
05:50 - we'll instead and Stan she ate a figure
05:53 - and and axis so to do this I'm going to
05:56 - get rid of those examples there down
05:59 - here below my data I'm simply going to
06:03 - say fig comma ax for axes is equal to
06:08 - PLT dot subplots and that is a method
06:12 - now our axes here which you can just
06:14 - think of as plots is only set to a
06:18 - single ax e at the moment or a single
06:20 - plot that's because by default subplots
06:24 - create a figure and then specify a
06:27 - certain number of rows and columns of
06:30 - axes if we don't pass in our number of
06:33 - rows and columns then it just defaults
06:35 - to a one by one so one row and one
06:38 - column which is simply one
06:41 - Texas so let's update our code to plot
06:43 - on this axis that we just created
06:45 - instead of using our pipe lot object for
06:49 - some cases this is as simple as just
06:51 - using your axis here instead of the PI
06:55 - plot object so for example all of the
06:58 - places where we said PLT dot plot we can
07:01 - just replace those with a X dot plot and
07:06 - where we have PLT dot legend we can
07:09 - simply change that to use a x2 so I'll
07:12 - say ax dot legend now when it comes to
07:16 - the titles and on the x and y labels
07:19 - these are a bit different so instead of
07:21 - using PLT title and X label and y label
07:25 - we're instead going to do set underscore
07:29 - with those so I'll do set underscore
07:32 - title set underscore X label and set
07:36 - underscore y label so I'm not exactly
07:39 - sure why they did that with the naming
07:40 - conventions but that's just how it's
07:42 - done okay and we're going to leave
07:45 - everything else the way that it is tight
07:47 - layout as a method for our pie plot
07:50 - object so that stays the same and so is
07:53 - the show method that is for the pie plot
07:55 - object so we can leave those as is okay
07:58 - so now if we run this whoops and I made
08:02 - a mistake here you guys probably saw
08:03 - that as I did it but I never actually
08:06 - put a X here so this is a X set title a
08:10 - X dot set X label and a X dot set Y
08:13 - label sorry about that
08:15 - ok so save that and run it and now we
08:18 - can see that we get the same plot that
08:20 - we got before but now we're using this
08:23 - new axis ok so why is this useful why
08:26 - are we learning this well let's say
08:28 - instead of having all of this data in
08:30 - one plot maybe we want this broken up
08:33 - into multiple plots so let's say that we
08:35 - wanted the Python and JavaScript plots
08:38 - together on one plot but then we wanted
08:41 - these this all developers plot to be on
08:44 - its own well to do this we can just add
08:46 - more axes and do it that way so the
08:49 - first argument to the subplots method is
08:52 - the number of rows and the none
08:54 - of columns by default it's one by one so
08:59 - that's why we get one axis but we can
09:03 - change that to be a 2 by 1 for 2 rows of
09:06 - axes and one column or however we'd like
09:09 - to do it I'm gonna do two rows in one
09:11 - column but you could do one row two
09:14 - columns or however you want but this is
09:16 - also going to change how the axes are
09:19 - returned so to show you an example of
09:21 - this let me comment out everything below
09:25 - here so I'm gonna comment out from data
09:28 - all the way down to show and let's see
09:32 - what we are getting for this returned
09:34 - AXA here so I'm going to print this out
09:39 - so I will print ax and I will run this
09:43 - and now if I make this a little larger
09:45 - here we can see that this ax variable is
09:48 - equal to a single axis subplot but now
09:51 - let's say that I wanted two rows and one
09:53 - column so to do that I could simply say
09:57 - in rows is equal to two and in calls is
10:01 - equal to one so now if I run this then
10:05 - now we can see that our ax variable is a
10:08 - list of axes subplots and now let's also
10:13 - see what happens if we do two rows and
10:15 - two columns so I will put in two rows
10:18 - and two columns and run this and now
10:21 - this gets a little more complicated now
10:23 - we can see that we have an outer list
10:25 - here and within this outer list has two
10:29 - values and those two values are a list
10:32 - so this is one value here it's a list of
10:35 - two axes subplots so a total of four
10:38 - axes total now that might be a little
10:40 - confusing with those nested like that
10:42 - but you'll need to know how these are
10:44 - getting returned if you want to unpack
10:47 - those in a certain way but let's keep it
10:50 - simple here and let's go back to two
10:52 - rows and one column which is just the
10:57 - list of two AXI subplots here okay so
11:00 - that gives us our two axes which is what
11:03 - we wanted in order to break our data up
11:05 - onto two plots now these two plots will
11:08 - still be on the same figure which is the
11:10 - overall window if you want them to be on
11:13 - different figures then we'll take a look
11:14 - at that in just a second as well okay so
11:17 - instead of having these two axes and a
11:19 - single variable of ax like this let's
11:22 - instead unpack these and I can do that
11:25 - since we are returning a list of two
11:27 - values here we can then just unpack this
11:30 - here and I'll call this ax 1 and this ax
11:34 - 2 and now I will print out ax 1 and I
11:38 - will print out ax 2 so let's run that
11:41 - and now we can see that we are getting
11:44 - those ax e subplots individually now if
11:47 - you don't know what I did with that
11:48 - unpacking and would like to see more
11:50 - examples of how unpacking works then I
11:52 - do have a section on unpacking in my
11:54 - Python quick tip video so I'll leave a
11:57 - link to that video in the description
11:58 - section below if anyone is interested in
12:01 - learning more about that okay so now
12:03 - let's uncomment out our other code here
12:06 - and plot this data on our different axes
12:09 - so uncomment out our data and uncomment
12:13 - out where we plotted these out now I'm
12:16 - going to remove these print statements
12:19 - here and I think I'm gonna want the all
12:22 - developers plot to be on top I don't
12:25 - have to move it on top and the code but
12:27 - since I'm having it on AXI one I just
12:30 - want to move it up so that it kind of
12:32 - makes more sense visually so I'm gonna
12:35 - say a X 1 dot plot and plot out that all
12:39 - developers plot there and now I will do
12:42 - a X to plot for Python and JavaScript
12:46 - and now we can do different legends and
12:49 - titles and X&Y labels for these as well
12:51 - so I can copy this and paste it down
12:56 - here so now I can do let me exit that
12:59 - output so that we can see here so I'll
13:01 - do a X 1 for all of these here and I
13:05 - will do a X 2 for all of these here ok
13:09 - so now we have all of those changed so
13:12 - now if we run this then we can see that
13:15 - now we have one figure with two
13:18 - different plots so these are the two
13:20 - rows
13:21 - of axes okay so we managed to split
13:23 - these up how we liked but a couple of
13:26 - things pop out to me here
13:27 - so first since we are on one figure
13:30 - together we don't really need a title
13:33 - for both of these we can see that we
13:34 - have a title here and a title here so
13:37 - let's just see let's just use the title
13:40 - on top and not do the title for this
13:43 - second one here so I'm going to remove
13:45 - that for a x2 so down here we're doing a
13:49 - x2 dot set title I'm going to remove
13:51 - that and also we also have the x-axis
13:55 - labeled on both plots as well but I
13:59 - think labeling it on the bottom axis is
14:02 - good enough so I'm also going to remove
14:04 - the X label from the AXI one here so I'm
14:08 - going to remove that okay so now if we
14:11 - run that with those changes in place
14:13 - then I think now this looks a little bit
14:16 - better we only have one title here and
14:18 - now we only have one X label here for
14:21 - our bottom plot and we can kind of
14:24 - insinuate that these are you sharing
14:27 - this x axis here now if you also only
14:30 - wanted the X tick marks on the bottom
14:32 - plot also then we can also do that and
14:36 - we can do that by passing in an argument
14:38 - to the subplots method called share X so
14:41 - let me close this down let's go up to
14:44 - our subplots method and I'm going to say
14:46 - share X whoops let me spell that
14:49 - correctly and I'm going to set that
14:50 - equal to true and there's also a share Y
14:54 - so share X will only label the bottom
14:57 - ticks for two rows and share Y will only
15:00 - label the leftmost ticks for two columns
15:03 - so if we run this then we can see that
15:06 - now we were we did have these extech
15:11 - marks here on this plot as well but
15:14 - since we're sharing this X now we can
15:16 - see that we only have these listed on at
15:18 - the bottom so we can see that's nice and
15:20 - cleaned up compared to the first time
15:22 - that we actually ran that okay so we
15:24 - have a nice figure here with two
15:26 - different plots but what if we wanted
15:28 - these plots to be on two different
15:30 - figures instead of the same plot well
15:33 - that's easy to do also
15:35 - we just need to create another figure
15:37 - and an axis the same as we did before so
15:41 - here at the top where I'm creating these
15:45 - using this subplots method I'm gonna
15:47 - change this just so or so that it only
15:50 - returns one figure and one axis so I'm
15:54 - going to take out those two rows and
15:56 - that one column and now I'm going to
16:00 - just set that equal to ax 1 now I'm
16:03 - going to copy this and add in a another
16:06 - figure and also I want to call this fig
16:09 - 1 so I want this to be fig 2 and I want
16:12 - this to be axis 2 and now we already had
16:16 - those access ones plotted down here so
16:19 - we don't have to change anything there
16:21 - we could add that title back in and that
16:24 - X label back in for a x1 and a x2 down
16:27 - here but just to see what this looks
16:29 - like
16:30 - let's go ahead and run this and we can
16:32 - see that now we get two figures here so
16:36 - with those small changes we were
16:38 - actually able to create two different
16:40 - figures here and we can interact with
16:42 - these just like we would any other
16:44 - figures so in the very first video of
16:48 - this series I showed you how you could
16:50 - save a figure as an image using the save
16:54 - fig method well if we wanted to save
16:56 - both of these figures then we can simply
16:59 - run save fig on those figure objects so
17:03 - down here below everything if we wanted
17:06 - to save those I could simply say fig 1
17:08 - dot save fig and I could call this fig 1
17:13 - dot PNG let me copy this and I will do
17:18 - fig 2 here for the file name and for the
17:22 - variable there and now if I run this if
17:26 - it's still going to pop up with those
17:28 - plots I'm going to close those for now
17:30 - but if I look in my directory here then
17:34 - I have a fig 1 and I have a fig 2 so it
17:38 - saved both of those so it's nice being
17:40 - able to generate multiple plots at a
17:42 - time like this and save them to our file
17:44 - system so this would be great for
17:46 - automating data analysis where you're
17:48 - plotting
17:48 - data in a background script and you
17:51 - could just have it save the plots for
17:52 - you and then view them that way rather
17:55 - than jumping into the code and looking
17:58 - at them that way so there's tons of use
18:00 - cases for things like this okay so we're
18:03 - just about finished up here but before
18:05 - we end I'd like to mention the sponsor
18:07 - of this video and that is brilliant org
18:09 - so in this series we've been learning
18:11 - about matplotlib and how to plot data in
18:13 - python and brilliant would be an
18:15 - excellent way to supplement what you
18:17 - learn here with their hands-on courses
18:19 - they have some excellent courses
18:20 - covering the fundamentals of statistics
18:22 - and these lessons do a deep dive on how
18:24 - to think about and analyze data
18:26 - correctly they even use Python in their
18:28 - statistics courses and will quiz you on
18:30 - how to correctly analyze the data within
18:32 - the language they're guided lessons will
18:34 - challenge you but you also have the
18:36 - ability to get hints or even solutions
18:38 - if you need them it's really tailored
18:40 - towards understanding the material
18:41 - they've also recently released a
18:43 - programming with Python course and they
18:45 - even have a coding environment built
18:47 - into their website so that you can run
18:49 - code directly in the browser and that is
18:51 - a great way to compliment watching my
18:53 - tutorials because you can apply what
18:55 - you've learned in their active
18:56 - problem-solving environment and that
18:58 - helps to solidify that knowledge so to
19:00 - support my channel and learn more about
19:01 - brilliant you can go to brilliant org
19:04 - Forge slash CMS to sign up for free and
19:07 - also the first 200 people that go to
19:09 - that link will get 20% off the annual
19:11 - premium subscription and you can find
19:13 - that link in the description section
19:15 - below
19:15 - again that's brilliant dot org forge
19:18 - slash CMS okay so I think that's going
19:22 - to do it for this video so I think
19:23 - everything that we've covered about
19:25 - matplotlib up to this point covers many
19:28 - of the basics for creating nice-looking
19:30 - plots from your data and also how to
19:32 - customize those in different ways so
19:34 - from this point I'm going to begin
19:36 - working on a series of videos covering
19:38 - the pandas library and how to do
19:40 - in-depth data analysis with that pandas
19:43 - actually uses matplotlib for plotting
19:45 - out information itself
19:47 - so knowing matplotlib will be a great
19:49 - thing to know for anyone who thinks
19:51 - they're interested in watching the panda
19:53 - series when I finished that and it's
19:55 - released but if anyone would like to see
19:57 - me add to this matplotlib series then
19:59 - please let me know if there's anything
20:01 - you were wanting
20:02 - learn that I didn't cover in the series
20:03 - or if there's anything that I just
20:05 - forgot and didn't cover and if I get
20:07 - enough requests then I can always
20:09 - continue adding to this series in the
20:11 - future and I'm also going to try to do a
20:13 - video in the near future showing exactly
20:15 - how I downloaded and parsed out a lot of
20:18 - this data so a lot of this like I said I
20:20 - got from the 2019 Stack Overflow
20:22 - developer survey that I used in a lot of
20:25 - these videos and it's definitely a good
20:27 - practice going out there and grabbing
20:29 - real-world data and seeing how to get
20:32 - what you want out from that data and
20:34 - write your own scripts to plot out
20:36 - exactly what you want there so be on the
20:39 - lookout for that video because I think
20:40 - that'll be a great exercise for most
20:42 - people but with that said if anyone has
20:44 - any questions about what we covered in
20:46 - this video then feel free to ask in the
20:47 - comment section below and I'll do my
20:49 - best to answer those and if you enjoy
20:50 - these tutorials and would like to
20:52 - support them then there are several ways
20:53 - you can do that the easiest ways to
20:55 - simply like the video and give it a
20:56 - thumbs up and also it's a huge help to
20:58 - share these videos with anyone who you
20:59 - think would find them useful and if you
21:01 - have the means you can contribute
21:02 - through patreon and there's a link to
21:04 - that page in the description section
21:05 - below be sure to subscribe for future
21:07 - videos and thank you all for watching
21:19 - you