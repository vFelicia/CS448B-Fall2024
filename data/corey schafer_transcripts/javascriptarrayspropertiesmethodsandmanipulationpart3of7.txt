00:00 - slice is a way to return a portion of an
00:04 - array so if I was to uncomment out this
00:08 - code here then we can see that I have a
00:13 - test array that is just 0 through 9 and
00:16 - if I wanted to return a portion of this
00:21 - array then I can use the slice method so
00:24 - to do that I will do array 11 not slice
00:27 - and now this takes two parameters it
00:30 - takes a beginning index and an ending
00:33 - index the beginning index is inclusive
00:36 - in the slice and the ending index is not
00:38 - inclusive so what I mean by that is if I
00:42 - was to put a two here
00:44 - and then print this out to the HTML then
00:48 - you can see here that this sliced array
00:51 - is 2 through 9 so it takes the index 2
00:56 - which is 0 1 2 so starting here at this
00:59 - 2 and then goes all the way to the end
01:02 - if you don't put in and ending index
01:04 - then it assumes that you want the entire
01:07 - length of the array so let me do one
01:13 - with a beginning and an end index so if
01:19 - I was to do 2 and 5 then you can see it
01:24 - only prints out 2 3 & 4 because the 5 is
01:29 - non-inclusive so when the slice is
01:33 - performed on this array it goes to index
01:36 - 0 1 2 starts here and then goes to the
01:40 - 5th but doesn't include the 5th so then
01:43 - it just prints out these three right
01:45 - here 2 3 & 4
01:47 - now what if you wanted to do something
01:49 - like you only wanted the last 3 elements
01:53 - of this array then what you can do here
01:55 - is let me comment that out and rerun
02:00 - another slice now you could do something
02:04 - like you want to start at array dot
02:08 - length minus 3 and let's see what that
02:12 - are so
02:13 - - three and let's see what that gives us
02:16 - so that gives us the last three elements
02:19 - of the array but you actually don't have
02:22 - to write in this array dot length here
02:23 - if you write a negative index then it
02:28 - will be the third index from the array
02:32 - dot length so you can see now that I
02:34 - only have the negative three here it
02:36 - still gives me still gives me the the
02:40 - same result and for the ending index you
02:43 - can do the same thing if I was to do
02:45 - negative two then it will only print out
02:49 - the seven because it goes it starts at
02:53 - three from the end and then goes to
02:56 - negative two but it's non-inclusive with
02:58 - the ending index so you only get the
03:01 - seven this was a negative one then it
03:03 - would include that eight as you can see
03:06 - right there so that is the slice method
03:11 - and now we will move down to the splice
03:17 - method okay now the splice method can be
03:21 - a little tricky at first it is a way to
03:25 - alter an array by adding or the leading
03:31 - elements so let's go ahead and take a
03:35 - look at this so I have an array here
03:37 - with five different names and now I'm
03:41 - outputting this original to the screen
03:43 - so that you can see and I haven't done
03:45 - anything to it yet so it still stays as
03:48 - the original down here so now I have
03:51 - this VAR deleted here and the reason I
03:55 - have that is because anytime a splice
03:59 - performs a deletion it will add those
04:03 - elements it'll return those elements so
04:06 - if you set a VAR a variable equal to the
04:10 - splice then you can see what elements
04:13 - were deleted if you'd like so let me go
04:17 - ahead and show you an example here so I
04:18 - can do array twelve dot splice and the
04:24 - first parameter here is where I
04:26 - myarray I want to begin my insertions or
04:30 - deletions so if I want to delete an
04:33 - element let's say I wanted to start at
04:35 - index 2 which would be 0 1 2 that would
04:40 - be here at Jill and my second parameter
04:44 - here is how many elements I want to
04:48 - delete so let's just delete 1 and let me
04:51 - save that and now if you look down here
04:53 - you can see that my original was the
04:57 - five names and now after it's spliced it
05:00 - is taken out Jill and now I only have
05:03 - these four names and then you can see
05:05 - down here that deleted was Jill and that
05:09 - is I am echoing out this deleted
05:11 - variable to the screen so you can see
05:14 - that it deleted that name and then
05:17 - returned that to this variable so if I
05:19 - was to do two deletions and save that
05:23 - then you can see here that it started at
05:26 - index 2 which is Jill and deleted two of
05:31 - the elements from the array which would
05:33 - be Jill and John and you can see that's
05:36 - exactly what we got here we got the
05:38 - splice array with only three names now
05:40 - and deleted returned Jill and John so
05:45 - now let's take a look at adding some
05:49 - elements to an array with splice so this
05:54 - is very similar to how we did this
05:55 - before so I'm going to run splice again
05:59 - and I'm gonna keep this at starting at
06:02 - the second index and this time I'm not
06:05 - going to delete any element so I'm just
06:06 - gonna put a 0 for how many elements I
06:08 - want to delete and then now my third
06:11 - parameter is the elements that I want to
06:14 - add to the array so I'm just going to
06:16 - put in a string here and add in Joey to
06:20 - this array and you can see down here I
06:22 - have my original array and then my
06:25 - spliced version has Joey at index 2
06:29 - because I didn't override or delete any
06:32 - elements and you can see that deleted
06:35 - down here when it's echoed out to the
06:37 - HTML it doesn't have any variables
06:39 - associated with
06:40 - because we didn't elite anything from
06:43 - the array now you don't only have to add
06:46 - in single values here you can see I have
06:49 - a sample array here if I was to copy
06:53 - that and instead of just one name if I
06:56 - put in an array of names and save that
06:59 - then you can see at starting at index 2
07:02 - of this array it added in those three
07:05 - names that we gave in this array here as
07:09 - the parameter
07:11 - so now let's we've looked at the leading
07:15 - and adding elements so now let's look at
07:19 - overriding elements and this is pretty
07:22 - similar to adding elements except
07:26 - instead of only adding elements we're
07:30 - also going to put in some elements to
07:32 - the leap so I can do ray dot splice and
07:35 - we'll just stick with that starting
07:37 - index of two and before when I added
07:39 - elements I put in 0 as the number of
07:44 - elements to delete but now if you put in
07:47 - say I just put in a 1 here then you can
07:50 - see that I started at index 2 which is
07:55 - Jill and I over wrote 1 position with
08:00 - this value of Joey so it deleted Jill
08:04 - and it put in Joey and you can see now
08:06 - that my deleted variable here gets
08:09 - echoed out as Jill and if I was to take
08:12 - this same array the same test array here
08:15 - that I added in before and add that in
08:18 - and let's start at index 0 and let's
08:22 - overwrite 3 positions and save that and
08:25 - now you can see we started with an array
08:30 - of 5 names and these first three names
08:33 - have been overwritten with the three
08:36 - names that we put in to our splice
08:40 - function and then you can see our
08:42 - deleted variable this deleted variable
08:46 - here gets the return deleted objects
08:49 - that splice returned for us so
08:52 - that is how the splice method works so
08:57 - now we are going to move down and take a
09:00 - look at the sort method