00:00 - hey everybody how's it going I've been
00:02 - getting a lot of questions from people
00:03 - lately asking me how I customized my
00:06 - terminal and if I would do a video
00:08 - showing how to set it up so in the next
00:10 - few videos I'm going to show you how you
00:12 - can customize your own terminal now
00:14 - there's a lot of different
00:15 - customizations that you can make which
00:17 - will help you be more productive and
00:19 - also it's just nice to set up an
00:21 - environment that is unique and also
00:23 - pleasant to work with on a daily basis
00:25 - so some of the customizations that you
00:27 - can make you can simply just change the
00:29 - colors like I've done here you can add
00:32 - aliases which will allow you to have
00:34 - shortcuts for certain commands you can
00:36 - add a get prompt which will if you're
00:40 - inside a git repository it'll show you
00:42 - what get branch you're on you can also
00:45 - add get Auto completion and you can also
00:47 - export certain variables like if you
00:50 - need to change your path variable you
00:51 - can do that as well so all kinds of
00:52 - stuff so in this video to get started
00:54 - out we're going to be taking a look at
00:56 - the files that we need to edit that will
00:59 - allow us to customize our terminal so
01:01 - first of all why do we need to edit
01:03 - files you may have seen people customize
01:05 - their terminal just by typing directly
01:07 - into it so for example I could customize
01:11 - my prompt in the terminal by typing
01:13 - something like PS 1 equals and I'll just
01:18 - do a custom with an arrow and a space
01:21 - here and if I run that you can see that
01:24 - this did customize my prompt so I have a
01:26 - custom prompt here now that I just
01:28 - changed from within the terminal but the
01:30 - problem is that this is only temporary
01:32 - so if I quit out of the terminal and
01:35 - open this back up now you can see that
01:37 - it's back to the way that it was so we
01:40 - need to add these customizations to
01:41 - specific files so that they are applied
01:44 - every time we run the terminal so the
01:46 - files we're going to edit are the dot
01:48 - ashe underscore profile and the dot bash
01:51 - RC files located in our home directory
01:53 - and these are dot files so if I do an LS
01:57 - on my home directory then I need to put
02:00 - in this a tag here so that it shows all
02:04 - of the dot files and if I scroll up here
02:06 - to my dot files you can see that I have
02:08 - a dot bash underscore profile and also
02:11 - have a dot bash our
02:13 - see now if you don't see these files and
02:15 - that's okay you can just create them if
02:17 - they don't already exist so I'm going to
02:19 - go ahead and get rid of the
02:20 - customizations that I've made to my
02:21 - terminal and the way that I'm going to
02:23 - do that is that I'm just going to move
02:26 - those Bosch files into a temporary
02:29 - folder for now so I'm going to move my
02:31 - Bosch underscore profile into dot files
02:35 - so I will move that there and I'll also
02:38 - do that with the Ashe RC file to that
02:41 - dot files is just a temporary directory
02:43 - that I made so that could stash these
02:45 - away somewhere for now so now if I quit
02:47 - terminal and I open it back up then my
02:51 - customizations should be gone so you can
02:53 - see here all the colors that I had
02:54 - previously aren't here anymore
02:56 - and if I was to go into a git repository
02:58 - or something like that then it wouldn't
03:00 - show me my git branch or apply any of
03:02 - the other customizations that I've made
03:04 - so now that I have my new terminal
03:06 - window open up here I'm going to
03:08 - recreate my Ashe underscore profile and
03:11 - my bash RC file now I'm not going to go
03:14 - into too much detail about why we need
03:17 - these two files instead of just one but
03:20 - long story short the bash underscore
03:23 - profile is a file that is used for
03:25 - something called a login shell and the
03:27 - bash RC file is used for non login
03:30 - shells so I'm not going to go into the
03:32 - exact differences in this video but let
03:34 - me go ahead and just recreate these and
03:36 - we can kind of take a look at what I
03:38 - mean by that so I'm going to go ahead
03:40 - and create that
03:41 - bash underscore profile and then I'll
03:44 - also create a bash RC file so now I'm
03:47 - going to open up each one of these and
03:49 - sublime text and add an echo statement
03:52 - so that you can see when each one is
03:54 - executed so now I'm within my bash
03:56 - underscore profile and what I'm going to
03:58 - do is I'm just going to put in an echo
04:00 - statement and I'm going to echo out from
04:03 - bash underscore profile and I'll go
04:07 - ahead and save that now if I go back to
04:09 - my terminal here I'm also going to open
04:11 - up my bash RC file within sublime and in
04:15 - this case I'm just going to do an echo
04:17 - and I'm going to do from bash RC and
04:20 - save that so now let me go ahead and
04:22 - quit out of terminal and open it back up
04:25 - and
04:26 - see which one of these files gets
04:28 - executed so if I open terminal back up
04:30 - you can see that it ran our code from
04:32 - bash underscore profile but not from the
04:35 - batch RC file and that's because this is
04:38 - a login shell on the Mac and it is run
04:41 - every time we open up a new terminal now
04:44 - I don't think that's exactly the case on
04:45 - Linux but I'm not 100% sure about that
04:47 - so these login shells are also run
04:50 - anytime you SSH into a machine and
04:52 - things like that
04:53 - now the bash RC file is run when we
04:56 - start a non login or a sub shell so if I
04:59 - just type in bash here then what it's
05:02 - going to do is it's going to start a sub
05:03 - shell and you can see as soon as I start
05:05 - that sub shell it runs the echo
05:07 - statement that we put into our bash RC
05:09 - file hear this from bash RC now this is
05:13 - different for some people but I
05:14 - personally like my customizations to be
05:17 - the same whether I am in a login shell
05:20 - or a non login shell so there's a simple
05:23 - trick that we can do which will allow us
05:25 - to modify just a single file and it will
05:28 - be applied to all of our shells so to do
05:31 - this I'm going to open up my bash
05:33 - underscore profile again in sublime text
05:37 - and all I'm going to do is call my bash
05:40 - RC file from within this file so to do
05:44 - this we're just going to type in this
05:46 - command and you can find this online and
05:47 - copy and paste it if you want but I can
05:49 - type
05:50 - if bracket F dash F and then I'm going
05:54 - to say within my home directory here dot
05:56 - bash RC and then close that bracket off
06:00 - then and source dot H RC and then to
06:07 - close out that if statement we can just
06:09 - type in Fi okay so basically what this
06:12 - code is saying it's saying that if the
06:14 - bash RC file exists then execute the
06:18 - code in that file so now imagine what's
06:21 - going on here so as soon as we open up a
06:23 - login shell and it runs the code that's
06:26 - it within our bash underscore profile
06:28 - it's going to run this code which in
06:31 - turn runs the bash RC file and if you
06:34 - run a sub shell then it's also going to
06:36 - run the bash RC file so now we can add
06:38 - all of our customers a
06:39 - to our bash RC file and not really have
06:42 - to worry about our bash underscore
06:43 - profile anymore so they actually see
06:46 - this at work I can go back over here to
06:48 - my terminal and if I quit out of the
06:51 - terminal and I'll close that and if I
06:53 - reopen it you can see here now that it's
06:55 - echoing the statement from our bash RC
06:58 - file which is what we wanted and if I
07:01 - was to run a sub shell here with bash
07:03 - then you can see again that it ran the
07:06 - code from the bash RC file so now we can
07:10 - add all of our customizations to a
07:12 - single place so if I was to open up the
07:15 - bash RC file in sublime text and I was
07:19 - to do something instead like I did
07:20 - earlier of PS 1 equals and then I'll
07:24 - just do the same thing custom arrow with
07:26 - the space and if I save that and then
07:29 - open back up my terminal again I'll
07:33 - close out of that and open it up now you
07:35 - can see I have a custom prompt here and
07:37 - if I run a sub shell then I still have
07:39 - that custom prompt so I think that's
07:41 - going to do it for this video now we
07:43 - have our files set up in such a way that
07:45 - we can add all of our customizations to
07:47 - one file and in the following videos
07:49 - I'll show you more specifically exactly
07:52 - how I customized my own terminal and it
07:54 - can give you some ideas of how you want
07:55 - to customize yours as well so I hope
07:57 - this video was useful I hope it helps
07:59 - you somewhat understand the difference
08:01 - between the bash underscore profile and
08:03 - the bash RC files but if you do have any
08:06 - questions just ask in the comment
08:07 - section below be sure to subscribe for
08:10 - future videos and thank you all for
08:11 - watching