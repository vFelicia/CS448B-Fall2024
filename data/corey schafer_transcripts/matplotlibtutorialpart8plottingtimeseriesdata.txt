00:00 - hey there how's it going everybody in
00:01 - this video we're going to be looking
00:02 - over time series data and plotting dates
00:05 - in matplotlib now there's a ton of data
00:07 - out there that contains date information
00:09 - so knowing how to plot this properly is
00:11 - definitely going to be a huge help when
00:13 - creating these graphs so first we're
00:15 - going to look at some basic examples
00:17 - using some dates that I have directly
00:19 - here within my Python code and then
00:22 - we'll see an example using data from a
00:24 - CSV file and the data within the CSV
00:26 - file are Bitcoin prices over a couple of
00:30 - weeks now I would like to mention that
00:31 - we do have a sponsor for the series of
00:33 - videos and that is brilliant org so I
00:35 - really want to thank brilliant for
00:37 - sponsoring this series and it would be
00:38 - great if you all could go check them out
00:40 - using the link in the description
00:41 - section below and support the sponsors
00:43 - and I'll talk more about their services
00:44 - in just a bit so with that said let's go
00:47 - ahead and get started ok so I've got
00:48 - some sample code pulled up here in my
00:50 - script
00:51 - so first we'll look at these time series
00:53 - plots using this list of data directly
00:55 - in my script and then we'll look at a
00:57 - real world example with data that I'll
00:59 - load in from a CSV file now if you've
01:02 - been following along with the series
01:03 - then you'll likely recognize a lot of
01:04 - the other matplotlib code that I have
01:07 - here at the moment but if not then let
01:09 - me go over all this real quick so here
01:11 - at the top we have some imports so we're
01:13 - importing pandas we're also importing
01:15 - date/time from the standard library and
01:17 - time deltas we are importing pipe lot
01:21 - from matplotlib and we're also importing
01:24 - dates from matplotlib and we're
01:26 - importing that as MPL dates because I
01:29 - was afraid I was going to override it
01:31 - with a variable like I did here called
01:33 - this dates anyways we are also using a
01:37 - style here we're using Seabourn style
01:39 - with matplotlib these are the data that
01:43 - we're going to be using but I'm going to
01:45 - gloss over this for now and just point
01:47 - out the rest of this code here we have a
01:50 - PLT tight layout here that adds a
01:54 - padding to our plot and PLT dot show
01:57 - will just show us our plot and we'll go
02:00 - over this other data once we are
02:02 - actually ready to plot that and as usual
02:04 - all this is going to be available for
02:06 - download on my github and there's a link
02:08 - to that in the description section below
02:10 - if anyone would like to copy and paste
02:12 - this into their editor
02:13 - and follow along with this series okay
02:16 - so for my sample data here I've got a
02:18 - list of seven dates and I'm using
02:20 - pythons built-in date/time module to
02:22 - create these so these are just seven
02:25 - days back-to-back and then below I've
02:28 - got a y variable here for our y-axis and
02:31 - this is just a list of saying seven
02:34 - random values so to plot these dates we
02:37 - can simply say down here below our
02:40 - y-axis
02:41 - PLT dot plot and we want to do
02:45 - oops that is plot date and we want dates
02:49 - to be the x-axis and we want Y to be the
02:53 - y-axis so if I run this then we can see
02:58 - here that it plots those out now if you
03:02 - get some warnings in your output down
03:04 - here then don't worry about that mine is
03:06 - just warning me about some future change
03:08 - in pandas that will be taking place but
03:11 - we can see that we get those dates and
03:15 - values plotted out now I'm not sure why
03:18 - but by default this plot has markers
03:21 - instead of being connected by a line but
03:23 - we can fix that easily just by saying
03:26 - that we want the line style line style
03:31 - of this plot to be solid so now if I run
03:36 - that I want to make this small again now
03:39 - that we've seen that warning so now we
03:42 - can see that these are now connected by
03:45 - a line and if you wanted to then you
03:47 - could also go ahead and turn off these
03:48 - markers by setting marker to none but
03:51 - I'm going to go ahead and leave those
03:52 - here for now okay so now that we have
03:54 - some dates to work with let's look at
03:56 - some different ways that we can format
03:58 - our plot to make this look a bit better
04:00 - so one way that we can do this is to run
04:03 - the auto format X date method on our
04:07 - figure and this will rotate our dates so
04:10 - that they fit a bit nicer and change
04:12 - their alignments and things like that
04:13 - now we haven't talked much about figures
04:16 - and axes in this series yet that is
04:19 - going to be in the sub plots video in a
04:21 - couple more videos but basically this is
04:23 - going to be a method on our figure and
04:26 - on this pipe lot object that we have
04:29 - been using so to get the current figure
04:32 - from pipe lot we can say P LT dot g CF
04:37 - which is get current figure and now to
04:41 - run this autoformat method we can just
04:44 - run it on that current figure and say
04:46 - Auto F mt4 format then underscore X date
04:51 - okay so now if I run this then we can
04:54 - see that now these dates are rotated and
04:58 - they have different alignments that just
05:01 - makes it so that these are you know not
05:03 - so bunched together and it makes it
05:05 - easier to read okay so now that we've
05:07 - got that Auto formatting in place let's
05:09 - also see how we can change the format of
05:11 - our dates so what if instead of how
05:14 - they're displayed now with the year
05:17 - month day what if instead we wanted them
05:20 - to start with the name of the month and
05:22 - then the day and then the year so to do
05:25 - this we have to use some date/time
05:27 - formatting so to do this I've already
05:29 - imported this line up here at the top
05:32 - from matplotlib import dates as MPL date
05:37 - and from that imported module we're
05:39 - going to use the date formatter class
05:41 - and we're going to be passing in any
05:43 - format string that you could also pass
05:45 - into the strf time method from the
05:49 - date/time class now if you don't know
05:51 - how to format dates then I do have a
05:53 - separate video on Python date/time on
05:56 - the date/time module that goes into more
05:58 - detail about that so I'll leave a link
06:00 - to that video in the description section
06:01 - below if anyone is interested in that
06:03 - and also leave a link to the Python
06:05 - documentation where you can find the
06:08 - formatting codes for the format that
06:10 - you're looking for so for this example
06:11 - let me write out the format that we want
06:15 - so down here below where we ran that get
06:19 - current figure now I'm going to say date
06:21 - underscore format is equal to MP L dates
06:26 - that's what we imported at the top and
06:28 - we're going to use the date formatter
06:31 - class from that imported module and now
06:34 - we're going to pass in our format string
06:36 - and again I'm going to leave a link in
06:39 - the description section below too
06:40 - Python documentation where you can find
06:42 - these formatting codes but I have mine
06:45 - written down here I always need to look
06:47 - these up but for the abbreviated name of
06:50 - the month that is % lowercase B and then
06:54 - for the days that's % D and then the
06:58 - year is % Capital y to do all four
07:02 - digits of the year and again I will
07:04 - leave a link to that documentation so
07:07 - that you can look up other formatting
07:08 - codes if you want to change it up so now
07:11 - we need to set this as the format for
07:13 - our x axis so just like I grabbed the
07:16 - figure to run the auto format method I'm
07:19 - going to need to grab the axis to run
07:21 - this format method so to grab the
07:24 - current axis it's a lot similar to
07:26 - getting the current figure we'll say PLT
07:28 - dot G C a which is get current axis and
07:32 - then we can format the x-axis by saying
07:35 - dot x-axis dot set underscore major
07:41 - underscore formatter and we will set
07:44 - that equal to our date format here
07:48 - so now if I formatted that correctly if
07:51 - I run this then we can see that now we
07:55 - don't have that year month date that we
07:57 - had before now this is formatted to say
07:59 - May 24th May 25th May 26 and so on so
08:03 - you can format your dates however you
08:05 - like to show up in your chart ok so now
08:08 - that we've seen how to work with date
08:09 - times using this simple example here now
08:12 - let's look at some data that I have in
08:14 - here in a CSV file and see if we can
08:16 - load that in and plot it so let me
08:18 - remove what we have now and I'll
08:22 - uncomment this code that I have here at
08:24 - the bottom so I am going to copy these
08:28 - two lines here where we are doing our
08:30 - plot date and also our auto format so
08:33 - I'm going to cut those out so that I can
08:35 - paste them in later and now I am going
08:38 - to remove from dates all the way down to
08:42 - where we set that formatter I just
08:44 - wanted to show how to form about those
08:46 - dates but I'm not gonna format this next
08:48 - example okay so now I'm going to
08:50 - uncomment out the other code that I
08:52 - here and we will explain what this is
08:54 - doing here in just a sec but first let
08:56 - me paste in where we were plotting that
08:59 - data and also setting the autoformat
09:02 - date there okay so up here we are
09:05 - loading in a CSV file here using pandas
09:08 - and if you've been falling along with
09:09 - this series then this probably looks
09:11 - familiar too since we've loaded in CSV
09:13 - data a few times in the series so far
09:15 - but just in case let me go ahead and
09:17 - show you this CSV data and also go over
09:20 - how we're loading this in so we are
09:23 - loading in the data from data dot CSV
09:26 - and I have this pulled open here in the
09:29 - other tab so this is the data that we're
09:32 - loading loading in so these are the
09:33 - headers here the first value is the date
09:35 - the next value is the open price the
09:39 - next value is the high price for that
09:40 - day low price close adjusted close and
09:44 - volume and like I was saying this is
09:45 - just Bitcoin data for about I think two
09:49 - weeks or so so this I just pulled off
09:53 - line and actually this line here at the
09:55 - bottom that's not supposed to be there
09:57 - I'm gonna add that in later I just had
09:59 - that there for a while I was testing
10:00 - okay so let me go back to the code and
10:02 - explain how we're loading this in so
10:05 - when we read this in it's loading this
10:07 - in as a panda's data frame and whenever
10:09 - we say price date is equal to data and
10:12 - then pass in that key of date what it's
10:15 - doing is its setting price date equal to
10:18 - all of these dates here so it's
10:20 - basically setting it equal to that date
10:21 - column now when we do price close and
10:25 - set it to data close I'm grabbing all of
10:28 - the closing prices for those days so
10:31 - we've got the price date and the price
10:33 - closed data loaded in from that CSV file
10:35 - so to plot this it's as easy as passing
10:38 - those into the plot date method so I'm
10:41 - going to pass in price date as the X
10:44 - which is the first value here and the
10:46 - price close will be the Y value so I
10:50 - will paste that in there and if we run
10:54 - that then we can see that we get that
10:57 - data plotted out now right now this
10:59 - might look okay but it's not actually
11:02 - plotting out our x axis as dates it's
11:05 - actually plotting these out
11:06 - strings so to show this let me add a
11:09 - line to the end of the data of our CSV
11:12 - file and I'm going to add it out of
11:15 - order so that's what that line was there
11:18 - before whenever I was doing some testing
11:19 - so what I'm gonna do is I'm just going
11:21 - to copy my top line here and my top line
11:25 - is May 18th so at the very bottom I'm
11:28 - gonna paste in another line and I'm
11:30 - gonna make this May 17th and I'm just
11:32 - going to leave the prices and everything
11:34 - the same as the first day so now if I
11:38 - run this then we can see that we don't
11:41 - have a May 17th here at the beginning
11:44 - it's putting it here at the end so that
11:47 - doesn't really make any sense now like I
11:49 - said the reason it's doing this is
11:50 - because those are being read in as a
11:52 - string and not dates so to fix this
11:54 - we're actually going to use some pandas
11:56 - methods to set that to a date and then
12:00 - we'll also sort that as well now this
12:02 - isn't a pandas tutorial so I'm not gonna
12:04 - go into much detail here but I just
12:06 - wanted to show this in case anyone is
12:08 - working with dates that are out of order
12:10 - this is a pretty common thing to do is
12:12 - to need to sort by dates by data that
12:15 - you're loading in so to do this
12:17 - underneath our data here make a couple
12:21 - of blank lines so I'm gonna take this
12:23 - data date column here and I'm going to
12:27 - set that equal to and I'm gonna say that
12:29 - I want to do pandas and then a method
12:33 - called
12:34 - to underscore date/time and I want to
12:38 - convert that date column to a date/time
12:43 - so what we're doing here is we are
12:45 - converting that date column to a date
12:48 - time using the two date/time method from
12:50 - pandas and then we are just replacing
12:52 - all those values which were strings with
12:54 - those converted date times and now if we
12:57 - want to sort that then we can simply say
12:59 - data dot sort and now that those are
13:02 - date times we can just sort by date and
13:05 - also I want this to just sort in place
13:09 - so I'm gonna say in place equals true in
13:12 - place just basically means that it goes
13:14 - head and modifies that data instead of
13:16 - us needing to say like data equals data
13:19 - dot sort
13:20 - something like that so we don't have to
13:22 - do that since we're changing that in
13:23 - place so now with those two changes
13:26 - there if I save that and run it now let
13:30 - me see if I'm getting an error for some
13:32 - reason date is not defined up you guys
13:36 - probably caught that as I was typing it
13:38 - but I said date date what I meant was
13:41 - data date did I make that mistake
13:43 - anywhere else no okay so let me try that
13:47 - and well let's see well and I made
13:50 - another mistake here sorry about that in
13:52 - a panda's data frame that is not sort
13:55 - that is sort values sorry to confuse you
13:59 - all there hopefully that is all the
14:01 - mistakes that I made so now if I rerun
14:03 - that then we can see let me take that
14:06 - output down there a little bit now we
14:09 - can see that our date here at the
14:12 - beginning we gave it the same value as
14:15 - the next day so we can see that now it's
14:18 - showing up here at the beginning instead
14:19 - of being put at the end so that's how
14:23 - you're gonna work with date times in
14:25 - pandas using that plot date method like
14:28 - I said it's a lot like any other line
14:31 - plot but you're working with dates here
14:33 - so there's a few different things with
14:35 - how the formatting works and things like
14:37 - that but basically this is what you do
14:40 - for time series data in matplotlib okay
14:43 - so we're just about finished up here but
14:44 - before we end I'd like to mention the
14:46 - sponsor of this video and that is
14:49 - brilliant org brilliant is a
14:51 - problem-solving website that helps you
14:53 - understand underlying concepts by
14:55 - actively working through guided lessons
14:56 - they have computer science courses
14:58 - ranging from algorithms and data
14:59 - structures to machine learning and
15:01 - neural networks they even have a coding
15:03 - environment built into their website so
15:05 - that you can run code directly in the
15:07 - browser and that's a great way to
15:08 - complement watching my tutorials because
15:10 - you can apply what you've learned in
15:11 - their active problem-solving environment
15:13 - and that helps to solidify that
15:15 - knowledge there are guided lessons will
15:16 - challenge you but you also have the
15:18 - ability to get hints or even solutions
15:19 - if you need them it's really tailored
15:21 - towards understanding that material so
15:23 - they're computer science material is
15:25 - fantastic and I really like what they're
15:26 - doing they also have plenty of courses
15:28 - depending on what you're most interested
15:30 - in so they have courses in different
15:32 - fields of mathematics
15:33 - or astronomy solar energy computational
15:36 - biology and all kinds of other great
15:38 - content so to support my channel and
15:40 - learn more about brilliant you can go to
15:42 - brilliant org /c m/s to sign up for free
15:46 - and also the first 200 people that go to
15:48 - that link will get 20% off the annual
15:51 - premium subscription and you can find
15:53 - that link in the description section
15:54 - below and again that's brilliant org /c
15:58 - m/s okay so I think that's gonna do it
16:01 - for this video I hope you feel like you
16:03 - got a good introduction to working with
16:04 - dates and matplotlib and how we'd plot
16:07 - that type of data in the next video
16:08 - we're going to be learning how to plot
16:10 - live data in real time now these
16:13 - real-time plots can be used in a lot of
16:14 - different applications for monitoring
16:17 - things that are constantly being changed
16:18 - or updated so that can be data that
16:21 - you're pulling down from an online API
16:22 - or may be something that you're reading
16:25 - from a sensor or something like that
16:26 - there's a lot of different types of
16:28 - applications for that so definitely be
16:30 - sure to check that out but if anyone has
16:32 - any questions about what we covered in
16:34 - this video
16:34 - then feel free to ask in the comment
16:36 - section below and I'll do my best to
16:37 - answer those and if you enjoy these
16:39 - tutorials and would like to support them
16:40 - then there are several ways you can do
16:41 - that the easiest way is to simply like
16:43 - the video and give it a thumbs up and
16:45 - also it's a huge help to share these
16:46 - videos with anyone who you think would
16:48 - find them useful and if you have the
16:49 - means you can contribute through patreon
16:50 - and there's a link to that page in a
16:52 - description section below be sure to
16:54 - subscribe for future videos and thank
16:55 - you all for watching
17:07 - you