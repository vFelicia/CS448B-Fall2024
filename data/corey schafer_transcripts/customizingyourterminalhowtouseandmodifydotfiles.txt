00:00 - hey everybody how's it going in this
00:02 - video we're going to be looking at how
00:03 - we can customize our terminal with some
00:05 - pre-built dot files so in the previous
00:08 - videos we looked at the differences
00:09 - between the bashore profile and The Bash
00:13 - RC files and we also saw how we could
00:15 - modify these files in order to customize
00:17 - our prompt uh but really we only scratch
00:20 - the service of the potential of what
00:22 - these files can do so in this video
00:24 - we're going to look at some popular dot
00:26 - files that other people have put
00:28 - together online and look through some of
00:30 - them and see if we can figure out
00:32 - exactly what's going on the amount of
00:34 - helpful stuff that some people have
00:36 - managed to put into these files is
00:38 - pretty impressive so with that said
00:39 - let's go ahead and get started uh so
00:41 - first things first I want to point out
00:43 - here that I'm starting off from a
00:45 - completely clean slate so I removed the
00:48 - bashore profile and The Bash RC files
00:51 - that we had built in our other videos so
00:54 - now I have a completely uncustomized
00:56 - command prompt uh so let's go ahead and
00:58 - go grab some dot files
01:00 - so if you just do a Google search on dot
01:03 - files then one of the first results is a
01:06 - link to a GitHub page with a lot of
01:09 - great information so I'm going to go
01:10 - ahead and go into this so they give
01:13 - information on what dot files are and
01:16 - also a link at the bottom here has a
01:19 - link to a few different tutorials to
01:22 - where you can learn more about these but
01:23 - we've already been looking at uh the
01:25 - basics of these files in our previous
01:27 - videos uh so let's scroll back up to the
01:30 - top and they also uh give some links to
01:33 - some popular dot file repositories so
01:36 - let's go ahead and dive into someone
01:37 - else's repository and see what they've
01:39 - done with setting up their dot files now
01:42 - one of the more popular ones and one
01:44 - that I base my own dot files off of is
01:47 - this uh matius binds I hope I said that
01:50 - right uh so let's go ahead and take a
01:52 - look at his repository so you can see
01:54 - here that this repository is pretty
01:56 - popular it's got a lot of stars and a
01:57 - lot of uh Fork repositories off of it um
02:01 - so if you scroll down here to the bottom
02:03 - then he gives a set of instructions here
02:06 - for how to use his repository and he
02:09 - also mentions that if you want to give
02:11 - these dot files a try then you should
02:14 - Fork this repository review the code and
02:17 - remove the things that you don't want or
02:18 - need and that's exactly what we're going
02:20 - to do so let's go ahead and download
02:22 - this repository and just jump right in
02:24 - um so we could do a get clone into a
02:27 - local directory or we could just
02:28 - download the zip file from this page and
02:31 - since we're already here I'm just going
02:33 - to go ahead and grab this ZIP file and
02:35 - you can do that with this button right
02:36 - here so now that that's downloaded let's
02:38 - go ahead and extract that and back in
02:41 - the terminal I'm going to go ahead and
02:44 - open this up in Sublime so I'll do
02:47 - Sublime and I'll drag this in here so if
02:51 - we look at the directory structure of
02:53 - this repository uh it can be a little
02:56 - intimidating at first but let's just go
02:58 - ahead and take a look at the two two
02:59 - files that we've already looked at in
03:01 - our previous videos uh that is the
03:04 - bashore profile and The Bash RC files
03:07 - okay so right off the bat we can see
03:09 - that this is slightly different than
03:11 - what we did in our previous videos so
03:13 - instead of sourcing The Bash RC file
03:17 - from the bashore profile he's actually
03:20 - doing the opposite and within his bash
03:22 - RC file here he is sourcing his bashore
03:26 - profile so now let's look at his bashore
03:29 - profile file and look at some of the
03:30 - customizations that he's made now I'll
03:32 - explain what I can with these files but
03:34 - truthfully uh there's so much
03:36 - information in here that I don't know
03:37 - exactly what everything does uh but he's
03:40 - done a pretty good job of commenting a
03:41 - lot of this code for us so if we scroll
03:44 - down through this file then it's not
03:46 - exactly clear where he is customizing
03:49 - The Prompt so in our last video we
03:52 - learned that to customize the prompt we
03:54 - need to change the PS1 variable and
03:57 - that's nowhere to be seen in The Bash RC
04:00 - file or the bashore profile so where
04:03 - exactly is this getting changed uh well
04:05 - there is some interesting lines here
04:08 - towards the top of this file uh right
04:10 - here with this for Loop and what this is
04:13 - doing is that it's looping through
04:15 - different dot files and running some
04:17 - checks on them and if they pass those
04:19 - checks then it is running Source on
04:21 - those files which if we remember that
04:23 - means that it will run the code within
04:26 - those files and also just a quick side
04:28 - note here if ever want to know what
04:30 - these checks are doing uh then what we
04:33 - can do is you can open up your terminal
04:36 - and to learn what those checks are doing
04:38 - you can run a command uh called man
04:42 - which will look up the manual page for
04:45 - test and this will show you all of the
04:48 - uh checks that you can perform so he was
04:50 - using dasr and you can see that the
04:53 - description here for- R is true if the
04:55 - file exists and is readable and he was
04:58 - also using- F which is true if the file
05:02 - exists and is a regular file uh so
05:04 - that's useful whenever you're looking
05:06 - through these files so back to the loop
05:09 - here uh the files that he is looping
05:13 - over there is a path file a bashore
05:16 - prompt exports aliases functions and
05:21 - extra so it looks like he wanted to
05:23 - break up his DOT file so that each one
05:25 - had a specific responsibility and that's
05:28 - a really good idea because other wise
05:30 - these files would just be jam-packed
05:31 - with so much information in one place so
05:34 - the bashore prompt is likely where he is
05:38 - customizing The Prompt uh the alias'
05:41 - file uh is where he can apply some
05:45 - command shortcuts that he likes uh and
05:47 - so on so let's take a second and imagine
05:50 - what's going on so far so when he first
05:52 - runs his terminal it's going to run his
05:55 - bashore profile file uh and if the
05:58 - terminal is is a subshell which we
06:00 - talked about in a previous video then
06:02 - it'll run the bash RC file which in turn
06:06 - the bash RC file calls the bashore
06:09 - profile uh so no matter what this is the
06:13 - code that's going to get executed and
06:15 - when this code gets executed it's going
06:16 - to Loop through all of these dot files
06:18 - that he specifies here and run each of
06:21 - those files if they exist so now let's
06:24 - go over here and open up this bashore
06:26 - prompt file and take a look at that and
06:28 - let me go ahead and just set this to uh
06:32 - bash syntax okay so this is the great
06:34 - thing about downloading these dot files
06:37 - uh from other people and seeing what
06:38 - they're doing because these guys have
06:40 - put in a lot of effort to make the
06:43 - additional checks that we didn't go over
06:44 - in our previous videos um so I'm not
06:48 - exactly sure what this check is doing
06:50 - here it looks like it has something to
06:52 - do with the 256 color settings uh this
06:56 - prompt get function right underneath
06:58 - here uh this is what allows us to add
07:01 - git information to our prompt so if
07:04 - we're within a git repository then the
07:07 - git branch and some information about
07:09 - the status of our current Branch will
07:11 - show up within the terminal prompt so
07:13 - you can see here within this function it
07:16 - does certain checks to add things to
07:18 - your prompt so right here it's checking
07:20 - for uncommitted changes in the index uh
07:23 - check for unstaged files and things like
07:25 - that so if we go down here past the git
07:28 - stuff
07:30 - uh now we'll start seeing some stuff
07:32 - that should look a little bit more
07:33 - familiar to us um so here we can see uh
07:37 - the tput commands and we saw some of
07:39 - these in our previous videos uh so here
07:43 - we have the reset values uh here are the
07:46 - bold and also we have some other useful
07:49 - colors now in addition to the tput
07:52 - colors uh it looks like he's also
07:54 - running a check here which has some
07:56 - fallbacks if tuut is not available so
07:59 - that's nice to have and it's set up in a
08:01 - way to where these variable names are
08:03 - the same so you have orange equal to the
08:06 - tput here and also orange equal to the
08:08 - fallback so then you can just use that
08:11 - orange variable anywhere in your script
08:13 - and you don't have to worry about
08:15 - whether or not it was set using the tput
08:18 - or the fallback so let's keep going and
08:20 - see what else we have here um so here
08:23 - are a couple of useful conditionals um
08:27 - right here so in this first conditional
08:30 - here he's checking if the user is equal
08:33 - to the root user and if so then we're
08:36 - going to set the user style color to red
08:39 - and if not then we're going to set it
08:41 - equal to Orange and this next
08:43 - conditional here is checking whether we
08:45 - are currently using SSH and if so then
08:49 - we're setting the host name to a bold
08:52 - red and if not then it's going to be set
08:55 - to Yellow so it gives us some nice
08:57 - visual feedback as to whether we're
08:59 - logged in uh to a different machine or
09:02 - logged in as the root user and now down
09:05 - here towards the bottom uh we're finally
09:07 - seeing where we're actually setting the
09:09 - PS1 variable and this should look
09:12 - familiar because it's similar to how we
09:14 - customize our terminal towards the end
09:17 - of the previous video but there is a
09:19 - little extra functionality here than
09:20 - what we had uh so first of all uh this
09:24 - top line here he has commented that it
09:27 - sets the terminal title to the current
09:30 - working directory so that's pretty
09:31 - interesting so then we can just walk
09:33 - down and see how this gets built up uh
09:35 - so then we are applying bold and then we
09:38 - have the user style and then the
09:41 - username and then down here we have the
09:44 - host and then the working directory and
09:47 - now this next line here is pretty
09:49 - interesting so this is where we're using
09:52 - the prompt git function that we saw at
09:55 - the top of this file and it's adding the
09:57 - desired colors if if we're within a g
10:00 - repository okay so those are all of the
10:03 - prompt customizations uh before we apply
10:06 - these customizations to our own terminal
10:08 - uh let's quickly take a look at some of
10:10 - these other files that we have in the
10:12 - repository uh So within this alias' file
10:15 - here you can see some of the shortcuts
10:17 - that he's added for himself uh So within
10:20 - his terminal he can just type dot dot
10:23 - and it will take him up a directory and
10:26 - typing three dots will take him up two
10:28 - directories and so on so some of these
10:30 - other ones would be pretty useful also
10:32 - so uh right here we can see that he is
10:35 - detecting which uh LS flavor is in use
10:39 - and depending on that it will uh set
10:41 - certain colors accordingly so i' go
10:43 - ahead and look through these files on
10:46 - your own and see if there's uh anything
10:48 - that um these people might use that you
10:51 - could also like to use for yourself now
10:54 - another file that I wanted us to take a
10:56 - look at is this OSX file
10:59 - um so this is pretty interesting here so
11:02 - uh here he has his file set up in a way
11:05 - that it will set all of his Mac settings
11:07 - exactly how he likes them so that's
11:10 - what's so powerful about these dot files
11:13 - um so say for example if he was to have
11:16 - his computer stolen or if he had his
11:19 - hard drive crash or something like that
11:22 - then what he could do is he could
11:23 - download his repository onto a brand new
11:26 - computer and then run these files and
11:29 - just have thousands of settings changed
11:32 - exactly how he wants them in a matter of
11:33 - minutes so I would look through files
11:35 - like that also and see if there's
11:37 - anything in there that interests you so
11:39 - there's a lot of uh cool Snippets to
11:41 - choose from and all of them seem to have
11:44 - uh good comments saying saying exactly
11:47 - what they do okay and one more file here
11:49 - before we apply our changes to our
11:51 - prompt uh so I also wanted to show you
11:53 - this brew. sh file that he has here so
11:57 - this is a bash script that he can run to
12:00 - install command line tools that he finds
12:02 - useful uh so for example he can install
12:06 - core utils which will install G core
12:10 - utilities um this uh Brew install bash
12:14 - right here will install bash 4 and that
12:16 - may not come with your computer by
12:18 - default so all kinds of useful stuff
12:20 - okay so now that we've looked at some of
12:22 - those other files that come with
12:24 - repositories like this uh let's go ahead
12:26 - and get back to actually customizing our
12:29 - prompt so when you download these
12:31 - repositories um you can just pick and
12:33 - choose what you want from these files uh
12:36 - that you want to use for yourself so
12:37 - specifically we're going to be grabbing
12:39 - these files that are needed in order to
12:42 - customize our terminal prompt so also
12:44 - first of all before you do this uh if
12:46 - you currently have dot files that you're
12:48 - using for yourself like The Bash RC
12:51 - files or bashore profiles uh then you'll
12:55 - want to move those to another location
12:57 - or be sure to back them up so that
12:59 - they're safe so that if you don't like
13:01 - any of the changes that you've made for
13:02 - any reason then you can just restore
13:04 - those back so with that said I'm going
13:06 - to go ahead and just start grabbing a
13:08 - few files from his repository here so
13:12 - I'm going to go ahead and do a CP to
13:14 - copy and that uh repository is located
13:18 - in my downloads folder and files master
13:22 - and what I want to grab out of here is I
13:24 - want to grab the bashrc file and I'm
13:27 - going to put all of these in my home
13:29 - directory so I'm going to go ahead and
13:30 - grab that bash RC file I'm going to grab
13:33 - the
13:34 - bashore profile and I'm also going to
13:37 - grab the
13:38 - bashore prompt so now I'm going to go
13:41 - ahead and close down the files uh from
13:44 - his repository and I'm going to go ahead
13:46 - and open up the ones that are on uh
13:50 - within my home directory so the one
13:53 - specifically I'm going to open up the
13:56 - bashore profile and I'm also going to
14:00 - open up the bashore prompt file and
14:04 - again I'm going to go ahead and set this
14:06 - to the bash syntax okay so if I go over
14:09 - here to this bashore profile uh then
14:12 - remember we have these checks in place
14:15 - so that it only tries to Source these
14:18 - files if they exist so it's not a big
14:21 - deal that we only grabbed the bash
14:23 - prompt file because these other files
14:25 - just won't meet these conditionals and
14:27 - it won't try to do anything with them
14:29 - and I'm going to go ahead and leave
14:30 - these other customizations in this file
14:33 - uh but you can read through these
14:34 - comments and if there's anything that
14:35 - you don't like then you can just go
14:37 - ahead and delete that section from the
14:39 - file okay so this bashore profile does
14:43 - Source our bashore prompt uh so now that
14:48 - we have these files in place if I go
14:50 - back here to my terminal and I quit out
14:52 - and open it back up then these changes
14:56 - should take place okay so now you can
14:58 - see that our prompt is customized uh I'm
15:01 - going to go ahead and minimize a couple
15:03 - of things here to get a few things out
15:05 - of the way now this looks similar to uh
15:08 - how we had it customized in one of our
15:10 - previous videos uh but this is a little
15:12 - bit more powerful than the ones that we
15:14 - made before uh so for example if you
15:16 - remember we had that code in our bashore
15:19 - prompt. file uh that should display
15:22 - Branch information if we're currently in
15:25 - a git repository uh so let me go ahead
15:27 - and navigate to an old get repository
15:30 - that I used in a previous project so I
15:33 - think that was in projects and demos get
15:38 - done and that was stash demo and you can
15:42 - see here that we're now currently in a
15:44 - get repository and you can see here
15:46 - where it says that we're on the master
15:48 - Branch um so also let's go ahead and
15:51 - open up the if I do an LS in this
15:54 - directory I have this one file in this
15:56 - get repository so let me make a change
16:00 - that file really quick and I'll just
16:02 - make something really simple here return
16:06 - a * B and save that so now if I go back
16:09 - and clear my prompt out now you can see
16:12 - here in my prompt that it put an
16:14 - exclamation point here uh to show that
16:16 - we have uncommitted changes in our
16:18 - Branch so this visual feedback is a
16:21 - great thing to have in your prompt so
16:23 - just knowing what branch we're on at a
16:25 - glance without needing to type it in
16:27 - over and over that's a huge plus so
16:29 - really if you were happy with a
16:30 - customized prompt like this then you
16:32 - could just stop there uh but really
16:34 - quick let's take a quick look at how we
16:36 - can customize some of these values uh
16:38 - just slightly and that should kind of
16:40 - get you on your way to being able to
16:41 - customize your own prompt in any way
16:44 - that you want so I'm going to go ahead
16:46 - and just let this take up half the
16:47 - screen here and I'll go into my bash
16:51 - prompt here and go down to the uh PS1
16:54 - values okay so let me just make a couple
16:58 - of changes here uh so first of all the
17:01 - yellow value that I usually use uh is a
17:04 - little different I like to use the value
17:06 - uh
17:07 - 228 for the green value I like to use a
17:10 - green value of 71 and for the blue I
17:15 - like to use
17:16 - 153 and I'll post a link to this color
17:19 - chart for these values in the
17:21 - description below uh so that you can see
17:23 - where I'm getting these values from and
17:25 - now if I scroll down to the PS1 values
17:27 - here I mostly like how this prompts
17:30 - already set up but for the sake of
17:32 - showing how we can change it let's just
17:34 - make a few adjustments here so let's say
17:37 - that instead of wanting this at here um
17:40 - let's just take this out with these
17:41 - spaces and let's just put in an actual
17:43 - at symbol and also I really don't like
17:46 - this lowercase w for the directory uh so
17:49 - if we look in the terminal then you can
17:51 - see what this lowercase w does is it
17:54 - tells our prompt to show the full path
17:57 - to where we currently are but whenever
17:59 - you get deep down into a directory
18:01 - structure uh you can see how this
18:03 - becomes really long and right now when
18:05 - this is just taken up half the screen
18:07 - it's causing our prompt to wrap around
18:10 - so instead I'm going to change this
18:11 - lowercase w to an uppercase W and what
18:15 - that's going to do is it's only going to
18:17 - display uh the last part of this path
18:19 - instead of the entire thing and lastly
18:22 - here just one last change uh for this
18:24 - get prompt uh instead of this Violet and
18:27 - blue I'm just going to do a blue and a
18:30 - blue and I'll save that so now if I go
18:33 - back here to my terminal uh to apply
18:35 - these changes I can just run Source on
18:38 - my bash prompt file so I can do a source
18:41 - and that's within the home directory and
18:44 - this is bashore prompt okay so now if we
18:48 - run that then all of the colors should
18:51 - be updated and we also have this shorter
18:55 - directory path now so that's looking
18:56 - good and if there are are any additional
18:59 - changes that you want to make to
19:01 - customize your prompt then hopefully
19:03 - after a few of these videos then you'll
19:05 - feel comfortable just kind of hopping in
19:08 - here and editing some of these values to
19:10 - whatever it is that you want them to be
19:12 - okay so I think that's going to do it
19:14 - for this video I hope everyone found
19:16 - this walkth through useful a lot of
19:18 - people have been asking me to make a
19:20 - video on how I customize my command
19:22 - prompt and I could have uh probably made
19:25 - a very short video specifically on just
19:28 - that uh but I think these dot files are
19:30 - so useful that I really wanted to show a
19:33 - bigger picture of what all can be done
19:35 - with them so if you have the time go and
19:37 - give some of those other repositories a
19:39 - look and see what all they have to offer
19:42 - there's a lot of uh great aliases and
19:45 - and functions and tips that people put
19:47 - in there and it's all very well
19:49 - commented and documented and it's also a
19:51 - great way to learn a lot more about
19:53 - these types of files but if anyone does
19:56 - have any questions uh you know feel free
19:57 - to ask in the comment section below uh
20:00 - be sure to subscribe for future videos
20:02 - and thank you all for
20:09 - watching