00:01 - so what the map method does is it runs
00:06 - every element in your array through a
00:10 - given function and then it returns
00:13 - whatever that return value is it adds it
00:16 - to a return array so for example let me
00:21 - just go ahead and show you what if we
00:23 - had an array of numbers here and let's
00:27 - pretend that this array of numbers that
00:29 - we were getting in was was some money
00:33 - and we wanted to add tax to every one of
00:36 - these elements so if I wrote a function
00:39 - here and called this add tax then I can
00:45 - pass in the element
00:46 - then
00:48 - I can return
00:51 - let's see I can return a dollar sign and
00:54 - then we can add this element times let's
00:59 - say that we want a six percent tax so
01:01 - let's do 1.06 and then we'll just do a
01:06 - two fixed here on the end of two so that
01:08 - it keeps that to two decimal places and
01:12 - then let's uncomment out this mapped
01:15 - variable here and let's set this equal
01:18 - to
01:20 - array18.map and we want to map this
01:23 - array to this add tax function
01:27 - and save that and output this to the
01:30 - HTML
01:32 - and now you can see that the original
01:34 - right here all we had was an array of
01:37 - integers 10 20 30 40 50 and now this
01:40 - mapped version is every one of these
01:43 - elements run through this add tax
01:47 - function which puts the dollar sign on
01:49 - and Returns the tax value of all of the
01:55 - integers that we had so 1060 2120 3180
01:59 - 4240 and 53 dollars so yeah that's
02:03 - that's pretty cool
02:05 - just to
02:07 - show you another example here if we have
02:10 - an array of names
02:14 - then I could do a function called to
02:19 - Upper
02:20 - and then pass in the element
02:23 - and I could just return the element Dot
02:28 - to uppercase
02:31 - and
02:33 - comment out this varmapped and then set
02:37 - this equal to array 18 dot Matt and map
02:41 - this to the two upper function save that
02:44 - and let's output this
02:47 - to the HTML and save it and now you can
02:51 - see whenever I Echo out this mapped
02:53 - variable it is this entire array but all
02:56 - of these are now
02:58 - have two uppercase applied to them so
03:01 - you know writing something like this as
03:04 - uh is a lot more readable and a lot
03:06 - cleaner than doing a bunch of for loops
03:09 - and running through your array and and
03:11 - doing things to every element that way
03:13 - plus you don't have to worry about these
03:15 - out of bounds exceptions and things like
03:16 - that you know if I go in here and start
03:19 - adding stuff to the end
03:23 - then you know it will just take care of
03:27 - that automatically so yeah the map
03:29 - function is very useful if you have a
03:31 - lot of data that you have coming in
03:33 - through an array and you want to do and
03:37 - you want to do the same thing to every
03:39 - element in that array then the map
03:42 - function is definitely something that
03:44 - you want to check out
03:46 - um so that is the map method
03:50 - so I thought we could take a really
03:51 - quick look at how to change some of
03:54 - these methods together you know there's
03:56 - a lot of useful useful methods that
03:57 - we've gone over but uh you know
03:59 - sometimes uh they don't meet all your
04:02 - needs so you can actually
04:05 - um change some of these together and do
04:07 - some pretty neat stuff so in this
04:10 - example we have an array of 10 20 30 40
04:14 - 50 and we have that same ad tax method
04:17 - that we had before but instead of
04:18 - returning a string
04:20 - now we are returning I'm going to make
04:22 - sure that this is a number here we're
04:25 - returning a number
04:27 - that is the
04:30 - um the number times the six percent uh
04:33 - sales tax and then so let's go ahead and
04:38 - look at this I'm going to call this
04:40 - result 19.
04:42 - and let me copy that and output it
04:45 - through the screen
04:46 - so if I do what we did before taking a
04:50 - look at the matte method if I do
04:53 - array 19
04:55 - that mat and then map that to the add
04:59 - tax function and then printed that out
05:01 - you can see that this is 10.6 21
05:03 - everything that we expect it's all the
05:05 - numbers but now say that each of these
05:08 - were individual items in a shopping cart
05:10 - or something like that and now not only
05:13 - did we want to add the tax but we wanted
05:15 - to Total all those together well I could
05:17 - do a function called sum total and I
05:22 - could just do the previous value the
05:26 - current value and this will be used with
05:28 - the reduce function and I can return
05:31 - previous Plus
05:34 - current
05:35 - and then down here I can just do dot
05:39 - reduce and just chain this onto the end
05:41 - of our all right the result that we
05:44 - already have then do reduce sum total
05:48 - save that and you can see we have 159 so
05:51 - all these added up together is 150 and
05:54 - plus that six percent sales tax that we
05:57 - put on there is 159 result another
06:02 - common example you might see if
06:05 - uh if you want to reverse a string in
06:08 - JavaScript you can do uh let me just do
06:10 - a stream here and I'll do
06:12 - let me uncomment out this output here so
06:17 - if I say please
06:19 - reverse me
06:21 - then this string we can split this now
06:25 - split's not a method we looked at
06:27 - because that is a string that's a method
06:30 - for a string not the array but we can
06:32 - split this and what this does is it
06:34 - turns this string into an array that we
06:36 - can work with now so now we have this
06:39 - array of characters down here called
06:41 - please reverse me and now we can just do
06:44 - what we did before with our arrays we
06:46 - can call Dot reverse on this
06:49 - and save that and now we have the
06:52 - Reversed version of that array and then
06:56 - we can just
06:58 - call the join method that we looked at
07:01 - and join that back together and now we
07:03 - have that this initial string here we
07:08 - split that then we reversed it then we
07:10 - joined it back together which gives us
07:12 - the original string reversed so you know
07:17 - things like that are pretty neat
07:19 - um so yeah I know this video was has
07:22 - been getting kind of long but hopefully
07:24 - it was useful useful for you guys and
07:27 - you know you learned some neat stuff
07:28 - about JavaScript arrays and how to
07:30 - manipulate them you know if you have any
07:33 - further questions feel free to ask in
07:35 - the comments be sure to subscribe to
07:38 - future videos and tutorials and thank
07:40 - you guys for watching