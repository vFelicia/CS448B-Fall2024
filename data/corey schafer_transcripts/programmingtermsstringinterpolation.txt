00:00 - hey everybody how's it going uh this is
00:02 - going to be another programming terms
00:03 - video and in this video we're going to
00:05 - be going over string interpolation now
00:08 - string interpolation is U probably
00:11 - something that you are already using
00:14 - maybe and uh but you just might not know
00:17 - what it means um but if we look at
00:19 - Wikipedia um how they Define string
00:22 - interpolation is the process of
00:24 - evaluating a string literal containing
00:27 - one or more placeholders yielding a
00:29 - result in which the placeholders are
00:31 - replaced with their corresponding values
00:34 - so basically what this is saying is that
00:37 - you're using placeholders within your
00:39 - strings that then get replaced by the
00:42 - real values uh later on so let's go
00:46 - ahead and take a look at this and actual
00:51 - code so that we can see what's going on
00:53 - now the example that I have pulled up
00:55 - here is not an example of string
00:57 - interpolation this is actually uh called
00:59 - called string concatenation and the
01:01 - reason I want to show you this method
01:03 - first is because this is a method that
01:06 - some people use and I want you to see
01:09 - the benefits of using uh using string
01:11 - interpolation uh over uh concatenation
01:14 - that is sometimes used so you can kind
01:17 - of see what I'm trying to do here I have
01:19 - a name value of Corey an age value of 28
01:23 - and I'm trying to uh print out a string
01:25 - that says my name is and then put in the
01:28 - name and I am put in the age years old
01:32 - um so if I run this now you can see that
01:35 - I get an error so okay I have a type
01:38 - error cannot concatenate string and int
01:41 - objects now I am using python for this
01:44 - example but don't get too tied up in the
01:46 - language that I'm using because this
01:48 - concatenation and interpolation
01:50 - comparison is uh going to be uh the same
01:53 - for most languages that have string
01:55 - interpolation um so anyways so I see
01:57 - that I have this error here can not
02:00 - concatenate string and in objects it's
02:02 - because I have an integer age here uh so
02:05 - I need to cast this to a string before I
02:07 - can um make it part of before I can add
02:11 - it to a string so then if I try to run
02:13 - it you can see now that my spacing is
02:15 - off and this is a common problem with
02:17 - string concatenation is that it's not
02:20 - entirely obvious that we need spaces
02:21 - here because it just adds the name
02:24 - directly to this string and there's no
02:26 - space here so if we add in a space then
02:28 - I'll have to put in a space between uh
02:30 - the beginning and ending of this one and
02:33 - then at the beginning of this one but
02:34 - not at the end here save that and run it
02:37 - and now after a little bit of tweaking
02:39 - we get the result that I was hoping for
02:43 - now let's compare this method of string
02:45 - concatenation with string interpolation
02:48 - so up here at this greeting this is the
02:50 - example I had before and if you remember
02:52 - I had to add in these space spaces I had
02:55 - to cast this integer to a string and
02:58 - then I had to put in a space here okay
03:01 - now if I save that and run that you can
03:03 - see that that is the result I was hoping
03:05 - to get um but now let me comment out
03:08 - this line and un comment out this line
03:10 - using string interpolation so like I
03:13 - said before in the definition string
03:15 - interpolation is just using placeholders
03:18 - uh within your string and then replacing
03:20 - those placeholders with the values uh at
03:23 - a later time um and right here we're
03:26 - doing that with this uh format method
03:28 - here and so first of all let me go ahead
03:30 - and run this so that you can see that
03:32 - this does work so I just ran the code
03:34 - and you can see that it outputed the
03:36 - exact same thing now you can see that
03:38 - this string is much easier to read uh
03:40 - you can see where the spaces are um
03:43 - these little brackets here uh in Python
03:46 - is how you do uh the placeholder in the
03:49 - string and then within this format
03:52 - method this is where we're passing in
03:54 - our values and uh these just go in in
03:56 - the order that they um are are seen
04:00 - within the actual string so name goes to
04:03 - the first placeholder and age goes to
04:05 - the second placeholder now these don't
04:07 - necessarily have to be in order um you
04:09 - know you can mix these up if I take this
04:12 - first part out here and I put age and
04:15 - then um and my name is and then I can
04:20 - put name here and then within format I
04:24 - can do name equals name age equals age
04:29 - and now you can see if I run that I get
04:30 - the result that I expected even though
04:32 - these are out of order in the format
04:34 - method because it knows to fill in these
04:37 - specific placeholders uh with these
04:39 - specific values even if they're out of
04:41 - order so as you can see using string
04:44 - interpolation is uh first of all it's a
04:47 - lot easier to read I can see exactly
04:49 - where these uh spaces are and the then
04:52 - the placeholders for the values and not
04:54 - only that but it's less prone to errors
04:56 - too like like I was saying up here you
04:58 - had to actually C passed this value to a
05:00 - string and you had to add in these
05:02 - spaces uh that you know this is only one
05:05 - line of code here but say you have
05:07 - hundreds of lines of code you may uh
05:10 - miss a space here or there uh but if you
05:12 - use um this string interpolation then
05:15 - you can see exactly what the string is
05:16 - going to look like um it's pretty much
05:18 - like a template and these values are
05:21 - hardcoded into this file but this is
05:24 - great whenever you're receiving values
05:26 - from a database and then you know if you
05:29 - have a web page or something you can
05:31 - just write out your HTML and then you
05:33 - can put in um these placeholders for
05:36 - your HTML just like a template and then
05:38 - it'll pass those values in at a later
05:40 - time whenever uh it's whenever it's at
05:42 - runtime so like I was saying before uh
05:45 - you may already be using stuff like this
05:47 - uh you may already be using string
05:49 - interpolation and just uh didn't know
05:51 - what the term was um so now you know now
05:54 - if it comes up in a conversation or if
05:56 - you're uh talking to someone and they
05:59 - mention string interpolation then you'll
06:01 - know what they mean um so yeah hopefully
06:03 - this uh video is useful for you guys uh
06:05 - if you have any questions just ask in
06:07 - the comment section below and be sure to
06:09 - subscribe for future programming term
06:12 - videos and uh thank you guys for
06:18 - watching