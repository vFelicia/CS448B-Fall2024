alrighty guys welcome back to another discord tutorial and in this one i am going to be showing you how to write custom commands now by a command what i mean is in discord what you can do is you can have a special character and there are some default ones if you use the forward slash you can see the discord builtin commands now you can essentially on top of these builtin discord commands you can pretty much make your own custom discord bot to listen to custom commands now some popular ones that people use are the exclamation mark and for example you can have a command called exclamation info to show info about your server or the bot itself another one that i'll just show you real quick before you get into it is on the new boston discord server if you use the greater than symbol and there are a couple different commands that you can use but anyways this is our custom one where you can do something like status and this tnb bot is hooked up to the new boston blockchain so it can display some information about for example your blockchain address uh your balance um some other things as well but anyways what i'm trying to say is in order to create custom commands all you do is you pick a special character whether it can be really anything that you want and this just signifies to your bot of hey this bit of text is going to be a command and then you can write your custom command and your command can basically do anything that you want so all right sounds fantastic let's go ahead and get started so unlike before whenever we were working with the discord client what we are going to be using is a command object so that is from discord.ext we are going to import commands and then we can name this object anything that we want but we will call it bot and this is equal to commands and the class is called bot and the first thing we need to do whenever we initialize this object is we need to pass in a command prefix now what this is is the special symbol we're going to use to denote a command now again like i said this can be anything that you want a lot of people use exclamation marks greater than signs forward is the one that discord uses by default so in this tutorial what we're going to be using is the exclamation mark so we are going to be writing commands like exclamation info or exclamation punch you know whatever we want to name it now unlike before at the end of these where you had client.run it's pretty much the same thing except we are going to do bot.run and this takes the token as well and i actually have a new token let me copy that and paste that in all right so this is the basic structure now let me go ahead and start by writing a simple command and then i'll talk through exactly what it's doing so we can actually name these commands anything that we want so i'm going to make a command called info that's going to be called whenever the user types in exclamation mark info and in order to do this you just write async def same as before we're just making a function and then the name of the function is going to be the name of the command so we're going to just be calling this info and we are going to be passing in something called ctx so first of all let me leave a comment right here to show a sample of how to invoke the command and that is just by typing exclamation info that's what's going to trigger this bit of code right here but another thing that i want to talk about real quick before i move on is this ctx object that got passed in this ctx and i'll leave a comment since i'm going to be sharing the source code on github this is the context object and what this basically means is this object is going to contain information about how the command was executed all right so what the heck does that mean that's kind of generic well yeah it kind of is actually so in order to test that this bot is actually working first of all and to learn more about this context object let's go ahead and say whenever the user types exclamation info that we're just going to print out some properties about this context object so we'll say context dot send because the send function is actually a property on here that we can actually send messages out to the channel and that is the same channel where the command was invoked from so we can actually send any string right here but what we are going to do just so we can learn a little bit more about this context object is say we're going to send out context.guild which of course is the server and just some other things right here we can say context.author which is going to be the person or the user who triggered the command and then we'll also say context.message.id so again all i'm doing right here is saying whenever the user types exclamation info we're going to print out a bunch of stuff about this context object and this is just to give you guys a better idea of what this context object is now before i just go ahead and run this there is one other thing that we need to do and that is to use a decorator to wrap this function so the the decorator for this is bot dot command and that is singular not plural and all right so what this decorator is basically going to do is it's going to look at the function name in this case it is info and then it's going to listen for this symbol followed by this function name and it knows whenever it receives a message with that to trigger this function so let me go ahead and run this when this is actually don't have an on ready but i think we waited long enough so either way i'm just going to do exclamation explanation exclamation yeah i think that's it info and there you go so this again triggered the info function which printed out the guild author and message id and again the guild is tnb tutorials remember guild is basically just discord server the author of course that's me who wrote it in the message id is this long string of numbers all right fantastic so we learned the basics probably stop that now of how we can make simple bot commands so what else can we do with the spot well let me copy this because this is the basic structure of how to make a command and let me go ahead and make another command um let's pretend for this tutorial that we are going to make a some kind of game and in this game we can like fight people or something i don't know just kind of making this up on the fly but we'll say we're going to have a punch command and what i like to do in these commands is i always like to include just a sample of um kind of how to invoke it so we can say in addition to just making commands that you just call straight up and no other information these commands can also take in arguments so for example you can have punch but unlike this right here where you just typed info and that's it you can include additional information such as let's say we want to say whenever you run this punch command you can include someone's name and then it will print out uh you punched justin or something like that so again remember in order to send messages from this context object you can just do await context dot send and then here you can print out whatever you want to display in the uh discord server so we can use f strings to say whenever someone invokes the punch command we are going to take this bit of information after it and this bit of information everything that comes after it this is going to be passed in as another argument called a r g so this arg is basically what came after this punch command in this case arg is equal to the string justin so in the string that we want to print out we can say punched oh not just punch arg all right simple enough let me clean this up and let me go ahead and run it so we can actually well we don't need to copy that so let's go ahead and run this and once it's running we can say okay punch justin okay punch justin and just to make sure that this is working with any argument we can say punch uh betty all right punch betty so there you go that is how you can have a command that takes an argument as well now just to show you guys a couple other cool things and that is how to take multiple arguments let's say that we want to have a special command that um let's say double punch okay so the first thing i always like to do is leave uh um an example of how to invoke it so we say what double punch is gonna do is instead of taking in one person's name we are going to be able to take in two names because this is a special thing where you can actually use both your fists to punch two people at once it's pretty awesome i mean not the brag but yeah so okay how do we do this well whenever we want to take in multiple commands then what we can do is just separate those into either r1 r2 this is just standard naming convention but it doesn't really matter the name you can just pass it in as a comma comma separated list of arguments and let's say in this example instead of just being able to punch one person you could punch justin and hassu for example now in this uh string that we want to pass out we can say double punched and instead of arg we're going to have to say you double punch arg 1 and arg2 so again uh this is just uh saying that whenever you want to have a custom command that takes multiple arguments you can just pass them in right like this and then just like before whenever you use your argument somehow you can just either print it out in a string or do whatever you want to it but let me go ahead and rerun this because this now includes the old double punch command so let me run that and pop open my bot and say double underscore punch justin and jesus and the bot says you double punch justin and jesus and again just to make sure this is working with some other people say double punch uh betty and schmedy hate these two people double punch betty and schmetty there you go yeah they deserve it oh betty and schmidty okay now the last thing i want to mention in this tutorial is what happens when you have a command and it doesn't just take in one argument or two arguments but let's say that there's an unknown amount of arguments that take in maybe one maybe two maybe 50. so in our game what can we have that does this let's say there's a there's an attack called roundhouse kick and whenever you roundhouse kick people you can either roundhouse kick one person or two people or you can either roundhouse kick like five people at a time and one kick it's pretty awesome so let me just go ahead and copy this method right here the punch method or excuse me a function and then we can rename this to roundhouse kick all right so first of all the example is not just going to be a punch it's going to be roundhouse kick and instead of taking one argument what this does what we are going to do is take star args so this is going to pass in all of the arguments that we have after roundhouse kick as a list and that list is just going to be referred to as args so for an example i can roundhouse kick justin and sue and magnetic and christy and this really doesn't matter how long it is but you know just for the sake of documentation don't want to have it be too long so remember whenever we print this out we're going to be taking in a list now we need to convert this list and again this is these are individual list items we need to convert this to a string so how do we do this well let's just say that we want to turn this into a string separated by commas so we can have a variable called everyone and we can say that um this is pretty much how you convert a list to a string we are going to join the iterable args so again all this does is it takes a list of items and it converts it to a string separated with a comma so now every one is a string and then in our f string what we can do is we can say roundhouse kicked everyone all right fantastic let me just clean this up and i'll copy this to make sure that um i typed the right thing and let me just go ahead and run this actually i can just copy this entire thing i actually like to copy this because then you make sure that your documentation example is working correctly so either way let me go ahead and run this and once that is ready i'll paste that in and we are going to roundhouse kick justin hussoo magnetic and christy let me run that it's just funny watching it output that roundhouse kick justin hasou magnetic and christie and just to test let's say we want to test it with three other people uh betty uh we'll say joby and hannah all right roundhouse kick betty joby and hannah and i don't know about you guys but i'm really destroying these people i mean i'm really awesome at this game uh pretty much crushing everyone i go up against pretty much because i have no competitors but either way enough of me bragging about how awesome i am at this game that is the basics of how you create a discord bot that accepts custom commands and before i go i do want to mention something that really isn't a discord related but whenever you are choosing a command prefix remember that people are also going to be running these commands on their phone now some of these symbols are kind of hard to get to so if you do something like tilde greater than or equal to it may be a little bit annoying to get to if you have to click through a bunch of symbols so i would try to stick with the more uh common symbols but either way that is kind of uh just a ux type of thing so for now thank you guys for watching don't forget to subscribe and i'll see you guys later