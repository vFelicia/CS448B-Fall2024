what is going on guys welcome to your 25th C++ tutorial and in this story I'm going to be talking to you guys about a really cool feature of C++ not only C++ this is basically in all computer programming languages but it's called the switch statement in the switch statement in your computer programming career is going to save you a whole lot of time and headaches so let me give you guys an example of when you would use this say you have a variable like age and you want to test the age of the user and you had a bunch of different um like statements you want to print out depending on how old they were so if they were 16 you would say congratulations here's a new car since you can drive now if they are 18 you would say go buy a lottery ticket if they are 21 you would say go buy some beer so you have all these different values that you could apply this same variable so with our knowledge so far we can build a program like this doing this if age equals 16 let's go ahead and type her body and then after this if age equals this yadda yadda if age equals that and then that well all those if statements are getting pretty old so wouldn't it be cool if we could combine this all in kind of a compact statement well it would be cool well unfortunately we can so on with the next tutorial in the next store I'm just kidding we actually can do this and that is through the use of something called a switch statement now in order to use a switch statement here is what you do type the word switch now in parentheses right after that write the variable that you want to test well we want to test the value of age so let go ahead and type age right in there now after this go ahead and add the body to your switch statement now inside your body you're going to give it all the values which you think age is equal to and we're going to be giving it in the form of cases so pretty much we're saying this in case they enter 16 but don't write in case it's only case so in the case of 16 and then write a colon now after this colon you write whatever statements you want your computer program to perform or computer program to perform you're the computer programmer this is computer programming there I got to straighten my brain so encase the value of age equals 16 let's just go ahead and put something stupid out on the screen like see out hey you can drive now and go ahead and end line why not and after this add a keyword that says break now I'm going to be talking about break later on because it's easier if I make the whole program first before I talk about it now after this we can write something like alright what if the case is 18 then what are we going to print out then um see out on the screen arm go buy some lotto tickets because you can do that at 18 now in line and of course after this at that break statement that we don't know what it does yet but we will and let's go ahead and give it one more case why not in the case of 21 the best one um let's go ahead and see out buy me some beer and go ahead and end that line so now you can see through the use of this switch statement it basically saved us the trouble and the time of making a bunch of different if statements so instead of three different assignments foot foot foot three different if statements we only had one switch and we just tested a bunch of different cases so the last thing is default and what default means is if none of these cases were true if they entered a value like two or something like that it ran through all these cases was equal to 16 nope 18 nope 21 nope so what do you want me to perform by default and of course you don't need like default 2 because it doesn't have a value it's just if all of these values failed then what want me to do by default by default we'll just write C out armed sorry you get nothing because 16 18 and 21 that's real bit where the important stuff happens everything else is just the birthday so let's go ahead and end that line and one thing you might notice um whenever we build and run this you're saying our rights sorry you get nothing because you're two but before you go ahead and go and run this why did I add a break at the end of default and what exactly is break well this break keyword right here pretty much means end the switch so we're saying all right why would I want to end it why does it just keep you know going through the rest of stuff well the reason you had break after each case is because of this say you had 16 and you wanted to test it we know that whenever it ran it printed out hey you can drive now and that's because we tested age and age is equal to 16 so in our first case it's say hey this is a match let's go ahead and run this bit of code right here so since we got a match in our first case there's no need to test this one this one and we're know we're not going to run the default because this is the only one we were on a run right here so what break says is break the switch it pretty much saves your program the trouble of having to run through the rest of these cases because it's not going to be useful to run through the rest of them as soon as you found a match so let's go ahead and say we had 18 in there what we would do is it runs it and it prints out go buy some lotto tickets since we have that break in there it did this all right in the case of 16 nope you're 18 in the case of 18 bingo we have a match so let's go ahead and print out go buy some lotto tickets and break out of this loop so no need to test 21 and no need to use the default since we broke out of it we found our match so again what break does is it basically saves you from going through the rest of the loop and why do I not have one at the end the default because by the time we get to the end of default it's at the end of the switch anyway so why would you need to break out of it if you're just going to exit out of it after the default anyways so that is basically a switch statement it basically takes a variable and test the value against each one of its cases 16 18 21 if it isn't any of those values it runs the default now I have three cases in this example but you can have one you can have a thousand you can have a million if you want and yeah that's all so anyways that is how a switch works and that is what break is and I just want to mention one more thing before I let you guys go break I'm using it in this example of a switch but it's a keyword that we're going to be coming across a lot in C++ programming not only with switch so whenever you see it later on whenever we're doing you know just regular loops or something I just want to let you guys know it isn't only limited to the switch statement we can actually use this all throughout C++ so whenever you come across it they'll be like hey isn't it supposed to go around that because we're not so for now thank you guys for watching understand the switch and once you do you're ready to move on to my next video so like I said thank you guys for watching don't forget subscribe and I'll see you guys in the next video