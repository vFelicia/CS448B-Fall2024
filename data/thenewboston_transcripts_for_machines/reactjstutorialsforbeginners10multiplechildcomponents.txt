all righty houses welcome back and in this video what I want to do is I want to show you guys how to properly use multiple child elements so right now up to this point we've been developing this program where we can kind of edit comments and we're going to be able to remove comments and we can kind of keep going with the you know techniques that we've been using but I'm going to tell you guys right now in a few tutorials we're going to run into a problem and that's this what happens whenever we want to do stuff like rearrange these notes put them in a different order what happens when we want to just have more control over them well this is the thing right now we have a bunch of independent comments this is a comment this is a comment and this is a comment now even though we can set properties and states on them we learned all about that they still are independent in other words they don't know about each other so this comment hi my name is Bucky it doesn't even know that this comment exists there's no way that they're connected so whenever we try to do stuff like rearrange these since they don't have an idea of each other's existence it's going to be really difficult for them to change order they only exist in their own universe so in order to have more control over them as a whole instead of just individual comments we need to pretty much surround it in a parent container or just think of it like a manager where you can kind of manage all the pieces so what I'm going to do is I'm actually going to set up a board component and you can think of the board component as this blue surrounding container right here now this board component is going to be made up of all of these comments and since we set it up that way it's going to be aware of every single one and it can move them around change your order delete them remove them and it's a much better system than just having a bunch of Standalone objects so let's go ahead and do that and in order to make another component let me just minimize that so it's a little bit easier to see so here's my comments right here you can make as many comments as you want and I'm only going to make one called board so I'm going to have one board and we can stick you know a dozen comments in there uh three however many we want so in order to make a new board just call react create class stick this as object now this is another thing that I'm going to do I'm actually going to have an array in here and this array is essentially going to be equal to each comment so again in this board we're pretty much going to be able to reference each individual comment and manage them all in that kind of way so let me just write get initial State make sure I write that correctly and this is going to be a function and again all this is going to do is it's going to return an array of comments so again you can have as many states as you want but I'm only going to be you know making a really simple example so there I go and let me just add three different comments so I'll say I like bacon um want to want to get ice cream why do I always think about food I think something's wrong with me and I'll say uh okay we have enough comments now all right so our initial state is essentially just an array with three strings of text so remember whenever we actually make a comment component all we do is we just use comment and then we put a string of text right here so it's going to be really easy so now let's go ahead and actually make those now whenever we make it remember we have to use the render function so the render function and again if you have multiple functions you need to separate them with the comma this is going to be responsible for returning whatever HML that we want to draw so the first thing I'm going to do is since this is on multiple lines surrounded with parenthesis is I'm going to make a div that's going to represent this entire board and actually what I can do is actually just take this and copy it right here so this is the HTML that it's going to return and now whenever I render I just have to write board like that and it returns this so the class name is board and instead of just having these comments I actually want to make comments based on this array so I pretty much have to take this array Loop through it and for each item in it I want to stick it inside a comment right like here so I'll delete this I'll do it the long way all right so what I'm going to do is is in order to do that in JavaScript if you aren't familiar with mapping we first need to reference to this comments array now remember it's a state it's not a property and the reason it's a state is because it's going to change so this state and then you write the name of it which is comments and then what we can do with JavaScript is we can actually call a function called map now whenever you use map what you can do is you can throw in a function in here and it will call it for each element in the array so whatever function we write right here um it's going to call it on this one and then this one and then this one now the arguments for this function or parameters are item I so again like I said this map function is going to take this array and it's going to Loop through it and for each item it's going to treat the text as item and I I can actually change that to text that might be a little bit easier and for the counter it's going to be equal to I so zero then one then two then three then four tomato tomato so for each of these iterations what I want to do is just create a new comment so I just want to return and remember sure I got that capitalized comments comment now whenever we make a comment All We Do is we add the text in between and now we're good to go so this is going to work just fine however here is the one issue that we have right now we're just creating a bunch of comments but we still don't have any really unique way to identify each one the reason that we set up this new kind of Architecture is because we wanted this board to kind of be a manager for all of the comments so in order to have control over these comments we need to give them a unique identifier now the main way that you kind of do this is you actually use a key so in react a key is a way that you can uniquely identify each child and you can actually give it an ID or ID number or whatever you want but this is kind of the standard way and we'll take a look at a couple tricky things later but for right now there you go so again we made a board and all this board did it is it took an array and for each item in the array it generated a comment so now this board it actually owns all of these comments pretty cool huh so now if I refresh this we can see I like bacon want to get ice cream okay we have comments now I like bacon want to get ice cream okay we have comments now so essentially it's the exact same result as before but now even though the user doesn't really realize it we now have a lot more control over the items or comments in our program