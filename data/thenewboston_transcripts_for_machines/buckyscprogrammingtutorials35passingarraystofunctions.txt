what's going on guys welcome to your 35th C++ tutorial and in this tutorial definitely don't want to miss this one because I'm going to teach you guys how to pass arrays into functions and there are a lot of weird tricks that you need to watch out for so make sure that you pay attention to every single detail so let's go ahead and make a really simple function I'm going to make it really easy the only thing it's going to do is print out an array you know one by one so far array was like 4321 eight it will print out 4321 eight really simple but you know it's a nice clear example so let's go ahead and make sure you're working outside your main function right here and call it anything you want I'm just call mine print array and it's going to take some parameters the first parameter that's going to take is the array itself that we're going to pass it in so let's go ahead and say we're passing it in an integer array go ahead and write int and then give your rate a name the array and whenever you pass an array into a function you need to write those square brackets right after it if you don't write those square brackets it's going to think that you're going to try pass in a variable and we want to tell our compiler no our first parameter whenever we use this function is going to be an array hence the square brackets so what people typically do whenever they pass an array into a function they usually want to pass in the size of the array too because you know that's information that you definitely need to know later on so just go ahead and name the size of array and this is of course going to be how many elements are in the array so now like I said this is the easy part let's just go ahead and build a function that prints out on you know each element in the array so for int x equals zero because remember we always want to start at a zero so that's never going to change the only thing that's going to change is this second thing we need to pass in X is less than size of array so check it out we can go ahead and write you know later on when we create our array instead of using size of array x is less than 10 or X is less than 20 but now whenever we use this function we can pass in any array and any size we want and it's going to work perfectly so instead of setting this equal to a number like 10 15 5 I like to set equal to a variable because then it's a lot easier later on and of course X plus plus incremented by 1 so now whenever we pass in an array it's going to loop through each of its elements 0 to the last element so now let's just go ahead and print out on the screen the array and of course for here we plug in X and endline so now once I fix this right here what we built is a function that bit basically takes two parameters an array and the size of the array we needed this information because whenever we created our loop we needed to know how long to make that loop last and of course for each line all we did is we print out whatever element whatever value that element is equal to so now let's go ahead and prototype this function right now because remember we're going to be using the function right here in the main but whenever it tries to use this function it's not going to know that it's a function that we built in less we prototype it so let's go ahead and copy this and if you remember from like I don't know the 10th tutorial something around then if we prototype it now we don't get an error message whenever we try to use this function because it knows that it's a function that we created so let's just go ahead and make two arrays to work with int Bucky and we'll set this equal to a 3 injury and go ahead and add any three integers you want um 2054 and 675 sounds good to me and actually let's go ahead and make another array just to make sure our program is working fine I like to name my arrays names and I'm going to name this one Jessica and she's going to hold 6 integers so set this equal to get that elbow way and 54 on why do I use 54 L time 24 7 8 & 9 and how many is that 5 and another 199 good go so now we have 2 arrays Bucky which has 3 integers and Jessica which has 6 integers so whenever we want to use this function that we just created just go ahead and type the name of your function print array and give it the two pieces of information needs but you know I have to begin this story I said that there are a couple of tricky things that you guys need to watch out for this is one of them you might think in the first parameter you might type Bucky or Bucky square brackets or Bucky square brackets 3 but actually the only thing you type is the name of that array so of course you well how can I explain this you already created an array called Bucky so now whenever you pass it in it knows it's on the right you don't have to tell it that you're passing in an array because obviously if it created it already it's going to know so that's why whenever you pass it into a function you don't use those square brackets at all and of course the second piece of information it needs is how big is this array so let's go ahead and make sure 3 and passing 3 4 here so now let's go ahead and build and run this program and check it out 20 20 54 54 675 675 and now let's go ahead and use this for Jessica just cut array again with no square brackets and six so let's go ahead and build and run this and it looks good to go 54 24 seven eight nine ninety nine pretty good so one last time here's what we did in the very first line of code we built the function prototype because if we didn't have that prototype let me just go ahead and comment this out and we try to run it we're going to get an error message so this error message pretty much means this our writes I did this I did this and now you want me to do this what the heck is print array so when we do include that prototype and try to run it it knows that Oh print array is actually a function that you guys built alright so now I'm going to run this and I know to look for a function so anyways that's what prototyping did in the main we just made two arrays and in this line we just called that function and passed in the array name and the size of the array so then whenever we called Jessica six it went down here to print array for this parameter it was Jessica and for this parameter it was six and then it looped through it pretty much looped through a loop six times and said all right for the array which was Jessica print out each index of that array zero to five and that would give you your six elements so this is basically how you use an array in a function and the only couple things you need to watch out for is this don't forget to prototype your functions don't forget whenever you are making your function itself to include the square brackets but whenever you use the function in your main program do not include the square brackets because your compiler is smart enough to realize that whenever you use Jessica it obviously is an array because you told it right above it so as long as you remember those simple things you will be good to go and that is how you use an array side of function so it's kind of complicated at first but if you just do it like two times you'll be a pro at it so that's all I have for you guys for this story thank you guys for watching and don't know when we talk them out in the next tutorial but it's going to be cool so I'll see you then