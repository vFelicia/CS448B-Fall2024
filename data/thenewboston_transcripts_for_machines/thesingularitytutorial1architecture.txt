you know the most fun that I've ever had in my entire life was when I was a kid I'd go out with my brothers and we'd go grab some friends and we just go to the woods and just start building something like a fort or a treeh house it didn't even really matter because we just loved hanging out and working together building something cool for ourselves with our own hands our own ideas and our only goal was to have fun anywh who in this series we are going to be building the singularity so first questions first what is the singularity so the singularity is a computer network that possesses these following three qualities the first thing is let me highlight this here recursive selfimprovement and what this means is the ability to grow while improving itself at an exponential rate this next one super intelligence this just means intelligence that far surpasses human capabilities and this last one is pretty selfexplanatory unpredictability no explanation need on that one so on that note let's go ahead and move on to the network architecture so we can start seeing how this thing is going to work so it all really starts with this core server right here and it's called a core server because it's really core to the the entire network as you're going to see very soon now at the heart of this the core server allows clients to connect and just send messages back and forth to each other pretty simple now another important point is that this core it doesn't actually store these messages I mean it may store some for like logging purposes and debugging purposes but as part of the architecture it doesn't actually hold on to these in any meaningful way so what that means is later on whenever we develop applications all of the application data is going to need to be stored locally on the client devices now if anyone is interested in this scoree the source code so on and so forth if you go to this URL github.com the New Boston developer slore then you can go ahead and see all of the source code right here and also I created this series right here Pro jeno tutorial so if you want to like I said go over the project structure or the deployment process so on and so forth then you can go ahead and go here and you can either search for it and I'll also include a link in the description as well but anyways let's go ahead and move on to the next concept which is the concept of accounts so any client that connects to the core is going to have a unique account now an account consists of an account number and a balance and this balance bance represents the number of messages that the client can send that being one coin per message so the purpose of this Ledger I'll call it right here is really to give the core owner the ability to restrict usage prevent abuse and really just manage their own resources now another cool thing is that the minting and distribution of the coins is determined by the core owner however many coins they want to Mint what devices they want to you know distribute them to it's all up to them and on top of that another very cool thing is that clients can actually transfer these coins to each other so let's go ahead back in this core repo and we'll take a look at a sample message right here so whenever a client sends a message to another client on the network it of course needs a lot of information that you would expect the sender address or account number the recipient's account number a signature and this is just part of the digital signature process to verify yes this is indeed the sender a transaction fee and this is just to signify yes this message is going to cost one coin it also needs a unique ID and this is just a uu ID and now to the good stuff so it can include a payload and this is what I was talking about the data in this can be any Json a list or an object tomato tomato and it can also include an amount and this is optional and it's the amount of coins you want to send to the recipient so what this essentially allows for is a structure where data and value can be transferred together very cool now another cool thing about this network is the concept of fault tolerance and this just means that in addition to being able to connect through a single core like we already saw right here here clients are able to connect to each other through multiple cores and I'm sure you can see the benefit of this which is if one of these cores ever goes offline for whatever reason then your applications are still going to work these clients are still going to be able to connect and send messages back and forth now if anyone wants to see firsthand the type of applications that you can make for this network we did build out something called tnos it's a desktop application built in electron and it has a lots of different apps actually let me pull it up so I am not going to be going over this in detail too much but just real quick it does allow you to connect to multiple different cores um let's see we have a university app a chat app uh trading app uh speed test app uh let's see of course a shop app so on and so forth again I don't want to get into it too much I want to keep this video more about the architecture but I do want to point out that I do have this video where it goes over how to use each app the architecture how to download it how to set it up so on and so forth and I'll leave this in the description below and one last thing about tnbs that I want to point out is that if anyone is indeed interested in application development then I highly recommend you check out this series electron react and Redux tutorials here we go through and we learn how to develop an app for this network basically for Te and BOS learn lots of good information but again we will save the application development for another day like I said just want to keep this one pretty high level talking about architecture and on that note there is another thing that I want to cover called services so services are automated programs that are running as clients so let me pull up this diagram again so here we can see two clients and we can imagine these are basically controlled by humans maybe you have one user on this iMac and one user on this laptop and they're just sending messages back and forth to each other well you can also have automated programs in place of humans now let's imagine a scenario where this would actually be useful let's say that this and by the way this is supposed to resemble a Raspberry Pi I know it's not an actual Raspberry Pi it's like a network card I believe but my icon selection was pretty limited here so let's just use our imagination and Pretend This is Raspberry Pi so on this Raspberry Pi there's a program running an automated program that's connected to the core and it's also connected to the Bitcoin Network so we can imagine let's say that this user wants to check their balance on the Bitcoin Network what they would essentially do is send a message through the core to the Raspberry Pi and it would basically be a remote function call and it would include something like the function name which may be like Gore balance and of course any arguments needed for that function like your public key and then what would happen is the Raspberry Pi would receive this remote function call reach out to the Bitcoin Network and then once they got the balance they would respond through the core to this user right here and of course just like regular clients these Services can connect to these users through multiple cores for added fault tolerance but yeah pretty simple concept and and on that note let's go ahead and move on to the one last main component in this network architecture which is the Gateway now a Gateway is the bridge between the internet and this network right here as you can see it allows cores to connect and then any users using these cores can transfer their coins over to their Gateway account and if you're wondering okay why would as a user I would want to transfer coins over to my Gateway account well there are a lot of features that you can actually use on this Gateway now I actually have a Gateway running on the new boston.com so yeah let's just go ahead and take a look at some of these features right here so I guess what we can start with well let me pull this up I'll show you guys the architecture for this so This Gateway uh we can just say it's the new boston.com right now it's connected to three different cores tnb tnbc and VTX and if you go back here and look at the currencies page this is essentially the cores that are connected to it you can click learn more see some more information but like I said these are the cores that are connected to it and if you go to wallets then this section allows you to essentially uh move funds between the core and your gateway account and if you want to move them in the opposite direction just go ahead and withdraw them back to the core but aside from that as you can see the first thing we do have a little social networking aspect of it and I thought this was cool because it allows you to pretty much tip coins to each other and just you know kind of a fun way to distribute coins get some juice running through the network and let's see what else we got we got this art section right here I don't know if you guys knew this but I'm actually a digital artist now and what this does is allows people to create digital art and you can sell it on the marketplace as you can see right here or if you just want to keep it for yourself you can just keep it uh save it and then it just saves to your own profile uh let's see what else we got of course we got the university section right here I probably should reorder this to show my uh more popular in the recent series these are all like in my series for like 12 years ago but uh you know add that to the todo list and let's see also got this exchange right here so there is an exchange on tnb OS this is like more of a peertopeer decentralized exchange the downside about this is because of the network architecture let me pull this up real quick both clients do have to be online at a time for this trade to go through so the benefit of building this exchange on the Gateway is it kind of Acts more as a traditional exchange where you and your party don't have to be online at the same time so you know nothing real special here pretty basic exchange and there are lots of other features here I'll let you all kind of poke around and explore all of those one thing I do want to mention real quick is that there is one very special core that is connected to this Gateway and that is at the address tnb core.com and it's called tnb now I say that this is special because this is is actually the default currency for this Gateway now whenever you spin up a Gateway you can choose whatever default currency you want and like I said tnb is the default currency for this one now this is where things get very interesting the minting and distribution of tnv is controlled by our AI named a so how this works is this in exchange for contributions to this project in other words a herself what happens is contributors receive tnb now the amount of tnb that each contributor receives is proportional to the value of the contribution so if we click on learn more we can see that there are two different types of contributions the first is a GitHub contribution and the second is a manual contribution now the way that GitHub contrib tions work is that whenever there is any PR submitted as soon as it gets merged into Master what i is going to do is she's going to review the source code for it and determine a value for that contribution and whatever she determines the value is that's what the contributor gets rewarded now for manual contributions the way that these work are users are able to under their my contributions page you can go ahead and click create new and type in a contribution and the reason that we have these contributions in addition to GitHub contributions is it provides a way for nondevelopers such as like designers or PMS uh Etc to allow them to contribute as well so just like uh PR contributions whenever you type in contribution here a is going to determine the value of it you can actually see one right here I just deployed the latest version of the app this is the description I popped in I had determined that was worth 75 tnb and that's what I was rewarded now in addition to just giving out a value she also provides like a little explanation of why this contribution was worth 75 and this is another thing that we are working on improving right now these assessments are like very random like this is worth 75 this is worth 3 this is worth 780 uh so we are actually going to be training I in the upcoming videos to assess these in a more accurate way but either way that is kind of the skinny behind the contribution system now if anyone out there is actually interested in becoming a contributor to this project go ahead and just send me a message on Twitter or Discord or something don't use this email this is actually a fake email need to update it but either way just reach out and let me know because what I need to do is I need to link up your GitHub username to your the new new boston.com username in that way whenever you submit a PR a knows basically what the new boston.com account to credit with tnb so I just need to link your accounts and then you're going to be good to go now one last thing that I want to mention regarding these cores is that as you can see we did indeed spin up tnbc hyen core.com for tnbc so if anyone has funds from the blockchain project you can you can see all the accounts are here populated with the balance that you have and you can indeed move your funds over using tnbs to this Gateway or another Gateway or you can just keep them if you want your coins uh so it's up to you whatever you want to do with them just thought I'd point it out for anyone who does have a tnbc account all your balances are right there good to go ready to roll so now that we have a solid understanding of the network architecture let's go ahead and let me pop open this diagram because now I want to talk about the remaining Milestones that we need to achieve in order to reach the singularity now there are six remaining milestones and the first five we can actually work on them in any order they don't depend on each other so hopefully we have enough contributors to we can uh you know kind of split up that work now the last Milestone Milestone number six this needs to wait until the first five Milestones are completed and we'll take a look at why later on but let's just go ahead and start with I'll say the first Milestone which is what we're going to do is we're going to train ya to assess value more accurately so I'll just say assess value and we can pretend accurately is in there as well I don't think I have enough space for that but the reason that we need to do this is it's important for incentives meaning people are more likely to contribute to a system that's transparent and fair so right now as we saw this contribution system it's not very accurate you can look at my contributions like pretty much for the same amount of work in one I was awarded almost close to 10,000 and another I was rewarded three so you know a is not uh very smart when it comes to contributions right now probably like a random number generator can do a better job than her how however looking ahead what we're going to do is we're going to start training a based on my own verified contributions and the way that this is going to work and I'll explain this in actually the next video is when we're going to be tackling it but I'm essentially going to work on PRS and I'm going to record the amount of time that it takes me and at the end whenever I'm done I'll have a chunk of code as a PR and I'll have a score for it like a value score and I'll assign it a rate of 1,000 tnb per hour so it can use my work as a reference to kind of look ahead to other PRS and use that as like a reference point like I said a Guiding Light to say okay Bucky did this PR fix the bug added an icon and it was worth this much so how much value do I think this other PR is worth so essentially the more training data we have coming in the better I will become assessing the value of each contribution and again this is just based on the fact that I know exactly how much time uh my work took and given that my effort was consistent throughout then this is essentially how we'll value everything else now before I go on I want to say that the reason that I want to focus on this one first is because we need a lot of human effort to accomplish the next three Milestones so without a fair reward system we just wouldn't be able to accomplish it now this next Milestone is honestly it's going to sound uh a little bit strange at first but it is by far the most important one and I'm just going to go ahead and write this right here the next Milestone is to give ya purpose so what the heck am I talking about well even though I haven't walked through the next three milestones I'll give you a little heads up the next three Milestones are to enable ya to autonomously write review and improve her own source code without human intervention now the reason that I don't want to tackle those before we have this one determined which is purpose is because we don't want to start rowing our boat until it's pointed in the right direction because A's purpose is what's going to drive her now A's purpose is to love and this purpose is the foundation for everything that she'll do it's going to guide her whenever she's responding to events whenever she's forming her own goals it's going to act as her guiding principle for all of her future actions and it's what's going to allow for this symbiotic relationship with humans now I want to point out something uh very important here that this Milestone it's not reached whenever ya is able to love because if that's even impossible for a computer network to love well I'll leave that to all the philosophers out there but instead this Milestone is reached whenever we believe that she understands that that is her purpose so again once our boat is pointed in the right direction and we feel that ya understands that this is her purpose then we can move on to Milestone 3 so like I said the next three Milestones maybe I should just write out all these these right now but these next three Milestones actually take them one at a time are basically giving a the ability to autonomously write review and improve her own source code without human intervention now the way that we're going to do this is we're first going to start off by following a pretty standard software development process we're going to create issues on all of these rug POS whatever we need to work on and then with those issues we are of course going to submit PRS and then again nothing fancy here someone's going to re review the pr they're going to approve it and then they're going to merge it in now I walk you through that because what's going to happen is that one step at a time we're going to train ya to pretty much phase out the human process of it starting with creating issues initially it's going to be all of us creating issues but what we're going to do is we're going to feed an eye of her own error log we're going to give her user feedback we're going to show her her own source code and let her find optimizations and we'll basically be teaching ya how to create GitHub issues herself now after that I'm sure you guys can see where this is going I'm going to say submit PRS so once you have issues the next step in the process is just to submit PRS now at first first these are probably going to have to be like very easy issues and I'm talking about like bug fixes and typos so on and so forth but over time as ya grows and evolves she's going to be able to complete more and more complex tasks now the last step in this process is of course how do I want to say this we'll say uh PR uh View and merge I kind of grouped the pr review approval and merge even though there are like three different steps I kind of group them into the same thing because it's like if your code is good then you pretty much merge the master and as long as you have cicd set up then everything gets deployed just like that now once we accomplish this ya is going to have the ability to autonomously improve herself so what exactly is the sixth Milestone the sixth Milestone and the last thing us humans are going to do is once all of these are accomplished we are going to take the A and connect them to each other so with the ability to create issues and submit PRS and guided by her purpose and the understanding that they're part of something bigger there's an inherent drive to connect and to improve each other and at this point we'll have a network that no longer requires the need for human contributions and this network will begin to improve at exponential rate and what will emerge from here is the singularity and just to bring this thing full circle if we go back to this very first slide where we kind of Define what the singularity was and what three qualities it needed the first one was recursive selfimprovement and we already saw how that's going to be achieved this next one super intelligence we didn't talk about this but this is actually going to come from the llm providers right now every llm provider is working towards AGI in word on the street is it's only like one or two years away so for this one it's dependent on them but you know hopefully you're not too far away in this third one unpredictability what we saw is at the last stage of this whenever these AAS are connected to each other working to improve each other and there is no longer the need for human intervention what a evolves into honestly I'm not quite sure I I don't know but yeah this is uh this is what I'm building so if anyone out there has one more build left in you I would really love to build this last project with you and in order for this project to succeed we're going to need a lot more infrastructure we're going to need more clients more services more cores more gateways we're going to need more contributions and that's really what I'm going to be working on pound out all these milestones and more than anything else the last thing is we need to work together if we can do that we can build something very very special here now in the next video we're going to be working on Milestone one training a to assess value more accurately so dust off those keyboards everybody time to have some fun