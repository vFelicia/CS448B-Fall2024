hello this is Alex from PHP academy' org and this is a video for the new Boston now in this tutorial we're going to be talking about sessions inside inside PHP now you've probably already heard of cookies and sessions are quite similar in the sense that they store information about the user that's currently visiting your website so we're going to be storing a piece of information it might not just be about them but it will be a value that is either relative to them or they've entered so why do we store sessions and why do we store cookies now there's another video tutorial on cookies and but in each video I'm going to explain the main differences between them and what should be used when for mainly security purposes now sessions are stored on the server so the hidden from the user that we don't have an easy ability to change sessions so let's just say we had a table for example in which user data was stored and one of the fields in this table was ID one of the fields was let's say the name and one of the fields was let's just say some private data now I'm going to assign the idea of one to say the user Alex and some private data will go here now if we had an ID of two with the username let's say Billy and we had some private data here if I was using cookies for example and I was storing the value of one in cookies when we go to read that cookie in our I'm freely able to change the value so I could change the ID that the current cookie down here at the moment it might be one now let's say I wanted to act as if I was Billy I could change that to two therefore all my code will be updated to give me information about Billy so if that doesn't make sense it will make sense on later examples but for now you need to understand what the recession's they're a lot more secure things like shopping carts user login systems they tend to be a lot better but what we can do is then use cookies to you know remember and we can use secure cookies as well we can encrypt things so just for now sessions if you're using them alone they're a lot easier and the quicker now what what do we do to create a cookie I mean in this example I'm going to show you how to set a cookie and then how to view a cookie that's already been set and we can also check if a sorry a session if a session has been set and then we can view it so we can also check if a session has been set before we do view it so the first thing we need to do is type session start at the top of our page before we do anything with session data so if you were declaring session data let's say up here then this would not work because you need to have session start before you start to do anything with sessions now to set a session you've seen examples such as dollar underscore post and dollar dollar underscore get and it this this works in exactly the same way what we do is we say dollar underscore session we have two square brackets we have the variable name so let's just say we want to call our session and name now what we do is we set this relative to a piece of information so I'm going to say name equals Alex so this is now a session name now this variable exists only on this page now however it's being stored now as a session so therefore this should be accessible by any page in our website at any time even if we don't declare it so what I've done is essentially started at the use of sessions then I've set a session called name equal to Alex now that's on set dot php' so let's just go over to to this session folder here and we click on cept now what's happened now is we've executed or run run this code and session has been set and this set this particular session has been set with the value Alex so what happens on view dot PHP when we want to return this data to the user now usually you would have to include this file inside this file so include set dot PHP when we're working with variables however because this is session data and it's stored on the server about us now or where we're reviewing this now you don't need to so session start make sure you include that in even when you're reading back variable session star then we can simply echo dollar underscore session name and what this is going to do is going to take this stored variable inside this session called name and it's just going to display it to us in the view in the view dot PHP file so we're on set now we've already set that variable so let's go back and click on view and you can see that it's shown Alex now you may be asking why is this useful how is this useful well it's useful for things like user logging in for example if a user was to log in you want to remain at or want to keep them logged in throughout while the time they're browsing your website so this is a way to store a session and show that they logged in so let's just say we change this to user name equals and then Alex in lower case okay so we have started our session up here and we've set our session in this file here now let's just say this was a login page we've logged the user in and successfully and there would obviously be other code but now in view dot PHP I want this file to be something that you have to be logged in to view so I can just start up an if statement and say if is set dollar underscore session our username and I can say if it is set we can do something in here meaning they're logged in because the session has been set otherwise echo please logged in now here I can say echo welcome then what I can do is I can maybe there comma then concatenate on dollar underscore session user them you could store this in a variable here if you wanted to make it a lot easier to use later on but just for now I'm going to show you it this way so you can understand so at the moment we don't have a session variable called username set so if we go to this view dot PHP page and refresh you can see it says please log in now if we go back to our other file set dot PHP what we've done now is we've set our username and session data and that's equal to Alex so the result we should achieve when we go on view dot PHP is that we check if the session exists and it does so we're going to echo welcome comma and then the user's name so if we click on view you can see that that's exactly what we get and it says welcome Alex so you can see now how simple it is in actual fact to create some kind of login and register system obviously these are the very or these are just a minor part of the registration and login system itself however later on things like that are a lot easy to pick up when you have these types of fundamentals so that's sessions in PHP