hi there this is Alex from PHP academy.org and this is a video for the new Boston uh in this video I'm going to be talking about mathematical or um arithmetic operators inside PHP now what we mean by um arithmetic operators if you're a mathematician if you uh know anything about maths you'll understand that these are plus minus multiplication and divide um in PHP we also use modulus uh which you may have heard of we use an increment and a decrement now let me just talk you through each one of these addition uh mul addition subtraction multiplication and division are easy modulus is where you take two numbers uh for example um 3 and 10 and we give a remainder so we say 10 / 3 is going to be uh three and then that's a remainder one so a modulus of 10 and three or 3 and 10 would um equal one uh an increment is simply increment a value by one uh and a decrement is simply decreasing a value by one um so these are more uh PHP based in terms of uh the symbols as well as uh the multiplication and the division um so let's just get rid of this and we'll go through it so the first thing we're going to do as an example is we're going to take two numbers and these are going to be inside um variables in fact in actual fact first what we could do is we could create a variable called sum and we could equal that to a number and then we need to add say or multiply or subtract another number from it so I'm going to say 10 and from this I'm going to add 20 remember your line Terminator at the end so all I've simply done is is straight away just put a number in there with no uh no uh quotation marks around it I've used the plus symbol and I've added that to another number so now what we can do is we can either type Echo here which I wouldn't recommend or we could come down and Echo out the value of sum remembering your line Terminator so what we need to do now is um preview this in our browser to see if we retrieve the result we want which should be 30 so sum should now at this point of the program be equal to 30 and then what we can do is Echo the result by just echoing out the variable sum okay so let's just refresh and you can see we've got the value 30 here now this is exactly the same with uh the minus um operator so at this point the value of sum is going to equal minus 10 uh so let's just double check that works by refreshing in our browser you can see that it's equal to minus 10 so you've already seen an example of um variables but now we've automatically um this variable has become a minus figure so um everything's very easy to work with um we won't run into too many errors we can also obviously do multiplication so we can do 10 * 20 if we refresh in the browser we get the result of 200 which is what we expect uh and that's obviously using an asterisk we can also use um our forward slash for division so 10 / by 20 and we're going to receive receive the result 0.5 um so these are basic arithmatic operators um what would be uh a lot neater and easier in this case especially in larger programs would to would be to have two um variables so we can have number one uh and I'm going to make that say 100 and let's just get rid of this line here and this line here so we're starting with one variable number one and a number two that's going to be called well that's going to be equal to let's just say 50 and then I'm going to create another variable called number three and I'm going to equal that to two so now what I can do is I can start to create a long constructed um mathematical operation if you like with this now there's a few notes to point out because what we want to do is we want to as with standard maths um put some operations some of these mathematical operations in as a priority so for example if I was to create a new variable called result and I was going to say number one added to number two and I want to divide the whole of this by two so all I can do is say divide number three so what this is actually reading out as is 100 because uh our variable number one is equal to 100 added to number two so our variable number two is equal to 50 and I'm going to divide this by variable number three which is equal to two now in actual fact the way this program or this result is going to work is it's going to perform this that I've selected in blue first then it's going to add number one so if we think about this uh reading it as a human um we might say number one add number two that's going to be 150 um and that's going to be divided by number three which is the value of two so we should receive the result 75 now let's preview this in our browser oh we haven't echoed it out so Echo result that's probably the most important part so refresh we're actually retrieving the result 125 and the reason for this is we're performing the operation number two divided by number three um so that's uh 50 / 2 which is 25 and then we're adding 100 so we're receiving the result 125 now as with normal uh mathematical operations the way we go around this is we prioritize different parts of our sum so we're going to enclose this in Brackets so everything in Brackets is going to be um is going to happen first and then we're going to divide by number three so you can see by just the addition of these brackets we refresh and we receive the result 75 now let's move on to um the modulus and we can see how this works so let's have a a number one and we'll have that as 10 and we'll have number two and that's going to equal three now we're going to have our result equal two number one now the way we use a modulus is with the um percentage sign so we're saying number one mod number two so that's 10 mod 3 and with a result we should rece receive uh number one so we're basically saying what is the remainder of 10 ided by three and the remainder is one so this is useful um in some aspects of development uh when you you need to um come up with a remainder of a number uh for very various different reasons but you'll you'll probably experience that a bit later on um now let's just take away all our variables except our number one what I want to do is here is I want to create on a new line say number one ++ now if we were to Echo out number one now we've actually incremented number one by one we don't need to assign this to anything we can just say number one ++ and I'll explain the reason for that in a minute it you can see that we've got oh oh yeah Echo number one sorry so if we refresh we've got 11 now why do we need to create this command or this uh variable increment on its own the reason for that is this is a shorthand notation of number one equals number one + 1 so if we refresh we' got exactly the same result however number one ++ is just a quicker way of doing that that now the the times that you need to use this increment and of course we can do decrement as well which is two minus signs as opposed to two plus signs um that will give us the result of uh nine so we've decremented by one and then will decrease by one the reason we do this is because in Loops sometimes we need to keep track of how many times the loop has run um so we use say a figure we might use a variable called I or a variable called uh n or anything really but we want to increment to each time the loop happens and doing this is just a much quicker way of instead of writing number one equal number 1 + 1 obviously if you wanted to increment it by five you would do it this way so if we refresh that would then read 15 but um this these are basically the standard operators that you're probably going to use on a daytoday basis if you're programming perhaps not the modulus uh but um particularly the uh the basic sums the addition the uh subtraction multiplication division and the increment and perhaps the decrement