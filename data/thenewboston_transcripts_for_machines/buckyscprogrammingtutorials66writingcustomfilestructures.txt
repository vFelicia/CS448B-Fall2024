alright guys welcome to your 66th C++ tutorial and in this tutorial I'm gonna be teaching guys how to make a custom file structure to work with your program because whenever you build your own custom program you just don't want to use any file format you know playing offtheshelf format you want to build a custom file structure so that it makes it easier for your program to work with your files and I know you guys don't know what I'm talking about now but trust me you will by then in this tutorial so the first thing we need is an idea actually before we get started let's go ahead and say that we wanted to make a game like Sim City or whatever where we had a bunch of different players or a bunch of different characters and we wanted to store all the character information and the text file well the first thing we need is of course a text file so go ahead and put of' stream and we'll just name it like the file good enough I guess and we'll just go ahead and create a file called players dot txt now remember if this file already exists then C++ is gonna look at it's going to open that one but if it doesn't exist yet which it doesn't let me go ahead and pull up my directory see no players that text since it doesn't exist already C++ is going to automatically create one once it sees that it indeed does not exist so let's go ahead and the first thing I want to give is we're gonna be making a program basically to enter the character information you know say we wanted to build a bunch of characters ourselves well let's go ahead and give the user an ISO prompt about what we want them to do so see out not mmm close but you know not close we'll just go ahead and put enters enter players ID you know maybe they have a name for each player and maybe they have like a bank account money or something simple enough and then go ahead and end that line so this is just gonna print some text out on the screen telling them what to do so we're gonna enter a number a name and another number the first one's going to be the ID number the second one's gonna be their man like Bucky and third one's gonna be like $48 in their bank account so I'm stupid like that and now what we wanted to do is we're gonna be working with something called an endoffile marker now before I go on let me say this every file on your computer when C++ opens its gonna look for the end of file marker this is pretty much the end of your file it's I mean no weird complicated explanation it's just a little symbol that goes at to enter your file to tell C++ you know how long your file is whenever it's reading your file and it gets that end the file marker that's where he knows where to stop it's pretty much telling C++ where the end of your file is simple as that now what we can do is we can explicitly enter and end a file indicator and I'll show you guys how to do this later on but basically whenever you hit control hold down control and his Z on your keyboard if you're working with Windows this inputs and end the file marker and I know it's kind of a weird way to do things because if there was an end of file marker button on your keyboard it would be a lot easier to see but if you're working with Windows then hold down control in his E and this puts the end of file marker and so we'll just go ahead and they probably don't know that so we'll just go ahead and put press ctrl + Z to quit the program and you know stop inserting characters or whatever so go ahead and in that line I know that's a little weird but we need it or this program would just keep running forever so now we need three variables that are temporarily going to store this information just go ahead we'll make the ID number an integer and we'll make the name a string of course and we'll put the money since it has decimal points like four to eight dollars and 87 cents we'll go ahead and make a double so we have three variables ID number name and money now what we need to do is we the user want to be allowed to enter this information whenever this program is running so let's go ahead and make a while loop because we really don't know how many characters the user is going to enter and here's what we do remember any time you want to get information from the keyboard aka from the user you use CIN and then the first thing they type in is going to be stored in the variable ID number the second thing they type in is going to be the character's name and the third thing they type in is how much money the character has so the user is going to be able to type characters information you know maybe five different character informations and then we want to be able to store in a file so this basically the user is going to be able to type in as many characters as they want so this loop is going to be true as long as they don't get to the end of the file and how do you know you get to the end of file because of this weird controlz thing so basically whenever the user enters information we now have an ID number unnamed in some amount of money so now the only thing we want to do is we want to insert it into the file so of course remember just like before in the last Oriels we write the file object and this is pretty much a synonym for players text so they can be used interchangeable they can't be used interchangeably but whenever you're looking at it just assume that this means player is a text so anything we insert it just gets directly inserted into the file players out text because that's the file associated with object right here so the first thing we want to insert is the ID number and then just so it looks nice and pretty just go ahead and insert a little space and then the next thing what did we have a name and then a little space after that and then the last thing is money and line and let me make sure I got number space namespace money and line okay so it's good go so basically well let's go ahead and run this program and see what we get it says reenter player's ID name and money so let's go ahead and make a couple players for this you know Sim City social community game whatever the heck game were making so the players ID is gonna be like 1 and the player's name is gonna be like Bucky and the money I have is like 65 dollars and 47 cents go ahead and press Enter add another character the ID is 2 the name is Sara and she has 43 dollars and 21 cents and let's make one more 3 is Sofie and she has two dollars and fifty four cents now let's go ahead and press well we can just go ahead and press ctrlz right now and sometimes you have to press ENTER and then your program is going to stop sometimes you can just hit control Z and it send a file sometimes you need hit control Z enter so anyways I hit control Z that signified the end of the file and of course when I got to the end of my file I couldn't insert anything else so my program quit as you can see right here so now if you go up to your documents you can see that you have a text file created called players text so let's go ahead and click that and you can see at the well basically it inputted exactly as we input it does that make sense no well too bad you can see that it wrote to the file exactly what we wanted to exactly in the format that we wanted to so basically what was going on is this we first created a file that we opened and whenever we open it we have access to that file we then gave the user a nice little prompt showed them how to input the data and I mean made three variables so we could temporarily store the data now the user was allowed to fill in the variables ID number name and money and whenever we had those variables populated with values we just stored him in a file using whatever format we wanted to in the format we wanted to store min was the ID number space name space money and then once you got one character or one player inserted just go to the next line and do it again so that way on the next line it was ID number name money on the next line ID number name money so that is how you can have you know a way of storing data into a file formatted how you want it so you're saying all right why would I want to format it like this well maybe you wouldn't but whenever you know the structure of how your file is formatted that way whenever we open the file to read all the information in we know what format it's gonna be and so that's why you want to create custom file structures because custom file structures make it easier for your program to work with files if they know where the data is going to be and also what type of data is gonna be there for example in our game we knew that that first row was always ID numbers that second row was always names in that third row was always and by the way row I mean column that third column was always the amount of money so I mean it just makes it really easy to program this way so that's all I have for you guys for this tutorial I know this was kind of weird with this controlz thing I probably should have made it without it but hey you guys learned something new I guess so thank you guys for watching don't forget to subscribe and I'll see you guys in the next video