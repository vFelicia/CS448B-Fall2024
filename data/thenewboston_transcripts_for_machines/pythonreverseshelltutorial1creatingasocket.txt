all right hoses welcome back to another awesome video series in this one I'm going to be showing you guys how to create a reverse shell using python so I assume that you guys already know what a reverse shell is if you're watching this video series but for those who are just curious and you know maybe you just want to practice with some python what a reverse shell is is basically a way that you can connect to someone's personal computer from anywhere in the world so let's say that you were in China and your friend in Texas had a problem with his computer and he wanted you to you know connect to it and you know access it and find out what was wrong maybe had some weird files on there well by default computers personal computers that is they're set up in a way that makes it very difficult to connect to it directly so what are some of those problems first of all your personal computer that you're sitting at right now it doesn't have a static IP your IP address is not only not public but it's Dynamic it's always changing so even if you had the IP address you couldn't access it and even if you could it would just be changing all the time so it would cause a bunch of problems now even if you were on the same network then you would still have a lot of these issues because even if you knew the IP address from your local network and you can access that computer you still have a bunch of firewalls to get through from your operating system builtin security um um you know there's also like port forwarding issues tomato tomato potato potato whatever so basically what I'm trying to say is we just can't SSH into someone's home computer like we can a web server so that's where a reverse shell comes in handy so basically we can't access home computers they're just not set up that way but what we can do is set up a server and have the target connect to us pretty cool huh now now since they are the ones who initiated that connection then your operating system says hey what's this connection oh wait a minute you initiated it it must be fine so since you initiated it you have all the permissions and everything is golden now once you're connected to the server and I'm going to be showing you guys how to do all this what we're going to do is we're basically going to give it commands and then your computer or the target is going to look at those commands run whatever we tell it to and send back the result results so it's basically a way that we can get shell with any computer in the world even if it's not a server freaking awesome so if you guys are like when would I ever use this well in that example helping out a friend you would definitely use it and also let's say that you were a system or network administrator and you need to access a bunch of computers remotely you could do that and also one of the more popular ones although not very ethical this is how hackers actually gain full control into your machine so what they do is they create one of these and get you to click on it maybe they like hand out a CD in front of like Walmart or you know just send you a USB drive drop it in front of your um school or work or whatever like oh wonder what's on this plug it in your computer now they got all your crap so hopefully you guys can use this technique to do something ethical and also from a malicious point of view now that you're going to know how they're created you're going to what to look out for and well you'll be better protected so there's my little rant and now what we need to do is we're going to create two files so all this is is two files one for the server and one for the client so new python file and I'll just call this server.py and let me just create them both now so new python file client.py all right so so basically we're going to have two really simple Python scripts this one we're going to have running on our server now this one is the one that hackers would put like on a CD or a thumb drive and this is whenever the user sticks it in their computer and runs it this is the one that connects to the server so basically two ends of you know a conversation now I'm just going to be running these both on my own local computer to test and then at the end of the video I'll put it on the actual server to show you guys that it does indeed work but for right now I'll just run them both for my computer whenever we're developing them so first of all let's develop the one for the server the one that's going to be sitting on a server somewhere so what we're going to do is we're going to first import socket and import CIS now a socket in case you guys don't know is basically a way that you can have two computers connect to each other or have a conversation so that's all it is and sis right here this is basically so you can run system commands AKA anything you would usually type into a command line you can run it from python as well it's pretty neat so the first thing we're going to do is we actually need to create a socket so let me just write uh create socket allows to connect all right so basically we're going to create a socket on the server and then we're also going to create one on the client and then they're like hey I can talk to each other want to talk to each other well you know they're not going to say that but pretty much that's pretty much what's going on all right so I'm going to name this socket create and this is the very first function that we're going to call so what I'm going to do is actually make a try catch or try accept whatever you want to call it and we'll write Global host Global Port not import you fool and Global s all right so basically we're going to have three Global variables this one is going to be the host in other words it's going to be the IP address of where you want to connect to now remember since this socket is being created on the server it doesn't need to go find some random IP address it's just whatever that own machine's IP address is now for the client you actually need the IP address of the server so for here the host we're just not even going to fill it in cuz it's just going to be itself now again whenever we make the client we actually need the IP address of the server but we'll get to that later now the port I'm just going to wrate 9999 if you guys don't know what a port well I explained this all in my networking tutorial so it's basically a way that your computer can identify what data is coming in so at your computer right now you might have Google Chrome open you might have Skype open you might have you know I don't know some other random Netflix open so whenever all the data is coming in it's like all right is this like Skype data or Chrome data where is it going well the port helps to identify which one is which now 9999 isn't a wellknown Port so we can just use that for ourselves don't use any common Port like um I don't know don't use like 443 or 80 or 20 or 22 or 21 whatever so there you go so you know nothing special it doesn't need to be 999 but I might as well just make it that and now this s right here this is going to be the actual socket or conversation between the computers the server and the target machine so what we're going to do is we're just going to write accept socket air as MSG all right so we're going to try to create this socket right here now if it gives us an error for any reason then I'm just going to say all right take our error and we'll just save it as a variable MSG and we'll just print it out to the user and I'll say uh socket creation error and we'll just print out that error message right there all right so this is our function that creates the socket right there now after this what we actually need to do is we need to bind the socket to the port so we said okay right here we're going to allow This Server to connect with another computer and now we need to say okay well give me the host and the port and we'll actually save that for a next tutorial this one's getting kind of long so I'll see you guys then