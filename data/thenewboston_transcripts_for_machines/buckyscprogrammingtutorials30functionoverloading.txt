what is going on guys welcome to your 30th C++ tutorial 30 tutorials that's like a milestone or something and in this tutorial I'm going to be talking to you guys about function overloading what it is why it's useful and when you would use it so let's go ahead and say we wanted to build a function to I don't know maybe we wanted to have the user input a number and we just wanted to print it out on the screen really stupid function but really simple so let's go ahead and make two variables we'll make an your variable a and we'll set this equal to you know 54 and we'll make another float variable and remember a float is basically a number with a decimal point so we'll use like 32.4 yada yada something something stupid so now we have two different types of numbers an integer and a float well we have a function that we are going to build called print number so let's go ahead and call this function and again we didn't build this yet so if you're looking where did print number come from we'll build it in a second so we're going to go ahead and try to use this function for both of these variables print number a and we're going to try and print out B too so then we say all right now we're going to go ahead and build this function to print out a number so we go up here uh it's not going to return anything so we just going to be void of course it's named print number and then we get to this part right here all right let's go ahead and think first second if we go ahead and put int X then we're going to allow it to pass in integer so this is going to work but this isn't going to work so I know what I'll do I'll just put flow X well then this is going to allow me to pass in this number but then this number isn't going to work so how do we solve this little puzzle roer right here well we do this through the use of something called function overloading and function overloading is the idea that in C++ you can build more than one function with the same name in this case we're going to build be building two functions called print number that take different types of data depending on what you pass in for example we're going to build a print number right here that takes an integer value and just go ahead and see out I am printing an integer and then go ahead and print out the integer X and then in that line well that goes ahead and takes care of the integers that the user might enter and now we can build another function with the same name which is print number again if you double click it you'll see the exact same name the only difference is it takes a different type of parameter this one takes a float number instead so now whenever we call this method and it has an integer it's going to use this one and whenever we call this method and by Method I mean function I sorry sorry I keep switching on and off but uh I teach too many program languages to keep it straight so whenever calls a function with a float it's going to use this one it's smart enough to automatically know what type of data you're passing it in so this one is going to print out C out now I am printing a float which is X and nline so as you can see these functions are basically identical it just runs whatever pretty much whatever type of dat you pass in it looks for whatever function is appropriate for that type of data and it uses that function so let's go ahead and build and run this and check out what we get at first we passed in an integer 54 so that's why I used this one that took an integer and it said I am printing an integer and after that we passed in in the same function a float which was 32.4 so that's why it chose this one now I am printing a float 32.4 so as you can see function overloading solves the problem of having one function so check this out instead of trying to explain to our boss that they need to use a bunch of different functions depending on what type of data we can make them happy and say all right anytime you want to use a function just go ahead and use this print number function and put in any number you want this is going to be behind the scenes stuff that they don't have to worry about they don't know that we had to make two different functions just cuz they were annoying and they couldn't understand that they needed to work with different types of data so we're going to make it really easy for the user through the use of function overloading now whenever the user enters a number like 54 we already have a customized function that is smart enough to realize that they are entering an integer and prints out that value but if someone another user like user B enters a float then we of course can handle that too because our program knows it's smart enough to realize that we're passing it in a float so that's why it chooses this so basically whenever you use a function your computer program is going to do this it's going to look for a function with that name a print number if it has more than one choice then it looks what type of data are you passing it in well if I pass it in a float it's going to look at this one does this print number take a float nope it takes an integer does this print number take a float yes it does so I'm going to use this one right here so that's why whenever you create a function you need to write the uh name and also the typee of data that you're passing in So then whenever the user tries to use it it knows what function to use so that is basically all function overloading is it's basically making programs that are really simple for the user even though they might take us a little bit of extra coding hey when we want to build software and we want to sell it for a million dollars we're going to want to make sure that it's easiest for the user to use as possible because I mean when we become a millionaire this extra function is not going to be a real big problem for us so that is how you make a million dollars and also that is the basics of function overloading basically many functions with the same name just different data types so thank you guys for watching don't forget to subscribe and I don't know what I'm going to be teaching in the next tutoral but I got a feeling you guys definitely want to check it out so again thank you don't forget to sub and I'll see you in the next video