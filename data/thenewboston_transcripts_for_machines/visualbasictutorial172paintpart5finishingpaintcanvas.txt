hello YouTube Sam here from youtube.com/ onli gamer for the New Boston and in this tutorial we're going to continue working on the paint program um and you can find this in the book beginning Microsoft Visual Basic 2008 U by Theon Willis and Brian Nome um once again I have to give credit to them for this I'm just teaching you guys how to do it and going through the concepts so if this doesn't look familiar to you then you may want to move back and find the tutorial that you were just at so we stopped right here um on our select case Graphics tool and we set object Graphics items equal to object Graphics Circle so after we do that um let's just go ahead and end our select because we don't need um anything else um it looks like it's already there so we'll go ahead and come down below and select so now what we need to do is just add that a object to our array list so we need to check if an item was actually returned so if well not return um if it's set equal to something that isn't null so if Graphics items or um object Graphics item is not nothing then go ahead and do this now we're using a double negative here so if it isn't nothing or if it is something and not equal to null then what we want to do is add that to our array list so Graphics items. add and we're going to add object Graphics item let's see here so you can see that um it tells us right here that it is it may give us an error at run time but it won't because it checks to see if it isn't nothing so let's say um a possible way of it not equaling anything if it goes to the select case and we haven't used Circle pin then object Graphics item is not going to be set equal to anything so it'll run this if statement and check to see if it isn't any if it is something then it'll add it to the list and this will prevent an error from happening now we could also do this by using uh a try catch statement but this way works just as well too so now what we need to do is type me. invalidate and you can see it says invalidates the specified region of the control um adds it to the controls update region which is the area that will be repainted at the next paint operation so basically what this means is that we're telling the program that paint canvas has been uh invalidated and that it needs to repaint itself so it needs it says something has changed we need to update and repaint paint canvas because we're in the paint canvas class class right here so we invalidate it so that it will update our paint canvas control so now that we've created everything um let's go ahead we'll come into our form one. VB design and you can see that all we have to do is we can right click on view code you can see that we don't have anything inside of class form one and we don't need anything so we'll go ahead and run the program here's our p VB looks like I was missing some stuff there so let's come over here to our paint canvas. VB design and we need to click on the lightning bolt to bring up some events so the first event that we're going to look for is mouse down so if the user clicks their Mouse down then what do we want to do so let's see here Mouse down so when the mouse is down we're going to check to see what which Mouse uh they have which button they have clicked so if e dot button so e is the event args and it's a mouse event args so with our mouse event ARS we can check to see which button has been pressed now e can get a little confusing some sometimes and I completely understand if you don't fully um if you haven't fully grasped this yet but later on um you'll start to pick it up and and it will come easier to you so if e do button equals Mouse buttons. lift then what do we want to do well we want to call do mouse paint a do mouse paint is going to take some arguments so we're going to need a mouse event ARS so you can see that paint canvas Mount down Mouse down already has um a mouse event ARS in that it has been created when you click the mouse down so we'll just pass e to that so the E that we're passing to that is this e right here um that happens when the person clicks their Mouse down so wherever their Mouse clicks down it's going to get the X position and the Y position of this e right here um that is in the sub U paint canvas Mouse down so if they move the mouse then we also want to paint something so we'll go to paint canvas. VB design and we want the mouse move event so let's find it here so we'll double click on Mouse move and once again we need to create that if statement so if e do button is equal to Mouse buttons do left then what do we want to do we want to do mouse paint and pass e to it now e is the mouse event arcs that happens whenever they click down so when they move their Mouse down this e right here is going to get updated um so you can access the X and the Y position of the mouse by using the event arguments so when they if they click down it'll paint and if they move the mouse it will paint as well so hopefully everything is um up and running now so now if we try to run it you can see we got paint. VB okay okay one more thing here we need to come into paint canvas. VB and we need to find the paint event so under the paint event um basically what Payton does is it runs and it repaints uh the paint canvas now this is this may be a little confusing to you but when you have this Graphics object right here um or this PT event args and what you can do is you can draw to your control so whenever paint canvas is painted what we want to do is let's use a for each Loop so for each object Graphics item as Graphics item in graphics items we want to go ahead and draw that to the control so we'll type object Graphics item. draw and then we'll do e. Graphics now um we'll go ahead and run this and then I'll come back and explain this to you so here we have our paint VB and you can see that we can draw and it starts drawing on our circles and our lines now we've got this ugly flashing and we'll learn how to fix that um in the next tutorial so basically what this does is we have a four each Loop so it's going to go through each item in our Graphics items array list so for every Circle that is created um it is in this Graphics items and it has um different values to it such as the X position and the Y position um that it can use so we've got for each for each of the objects in our array list of type Graphics items what we want to do is use object Graphics items. draw and you can see here and we have our draw um it'll fill an ellipse um at with the black brush and use the current rectangle so it's going to draw that and it's going to use e. Graphics so I've got e as paint event ARs and all paint event arcs have a graphics um that we can use to draw stuff to the control so if you have any questions uh leave them in the comments um once you've done once you're done putting this code in go ahead and move on to the next tutorial