what is going on everybody welcome to your seventh C++ tutorial and in this tutorial guys I'm super excited because we're finally going to begin building our own custom functions however before we begin I need to ask you guys a question that I've been meaning to ask you last oriole since I got this new compiler do you think this text is too small too big or just right I don't want it too small where you guys can't even read of course but I don't want it too big where in the future where I build complex programs that all text is just going to run off the screen so anyways for YouTube viewing is this too small too big or just right let me know get back to me leave me a comment thank you see you later and it's sora just kidding alright let's go ahead and get to the meat and bones of the story which is building our own custom function but before I do let's go over some terminology real quick I think I went over this and like the second sooro but let's run through the skin tutorials or see tutorials listen to me functions are made up of pretty much the same basic parts the first part is the return type and this is pretty much if you ask for anything back when you're done building your function this is what you get back this main function gets an integer back so that's why it says enter right there after that you have your function name which is pretty much the title of your function after your function name you have parentheses which can or cannot be filled with information depending on if your function needs parameters in order to run we cover those in the last two tutorials so this one main takes no information since it's called from your operating system and of course after all of that you get the body which is pretty much the instructions for your function I think I went over all that in the last couple toriel's but anyways if I didn't then when I build this one right here you guys are clearly going to see what's going on so anyways we have this main function right here so let's go ahead and outside of it let's build another function make sure that you don't build on the inside right here or you're going to get some pretty effed up error messages so I'm going to build a function called Bucky and it's not going to really do any calculations or anything like that all just going to do is print something on the screen so we're not really asking for anything back we're just telling it to do something so since we're not asking for any information back go ahead and write void this is the computer equivalent of nothing that's what void means actually that's kind of like the life's equivalent I guess they mean nothing anyways enough of me talking next we need to give this function name you can name anything you want except if it's a cuss word you can't do that well I'm just getting you actually probably good but anyways I have to say that for legal purposes you guys actually believe that you can name it a cuss word if you want go ahead I dare you to alright now I'm going to be building a function where we pass it in a number and it just prints out a sentence like my favorite number is blank whatever number you put so I'm going to pass it in like five and it's going to say my favorite number is five all right so in the parameter list we need to give it the type of information we're going to be passing in in a temporary variable that is going to hold the place of that number so of course we're going to be passing in an integer and just go ahead and we're going to call the integer X in the body so you guys will see what this means in a little bit look at this every time I hit my mouse it moves to the left slightly look I'm not even touching there right now it's moving on its own I probably should get that looked at let me just move that off the screen for now but anyways let's go ahead and start building this function body using namespace STD which stands for sexually transmitted disease and let's go ahead and the only thing we want this function to do is output on the screen my fave number is and then go ahead and write X right here and then go ahead and in that line because if you don't it's going to bother me so what's going to happen is this whenever we use our function in the main program we're going to say like Bucky using the number 20 so that 20 is going to be converted into the variable X so now whenever we use X in our body it's going to go through everywhere in this body and wherever it sees it X is going to throw in whatever number the user passed in so if someone passed in the number 30 is going to say my favorite number is 30 if someone passed in the number six is going to take that six convert it to an X and say my favorite number is six simple enough so you're saying our a we are ready to begin using this function how on earth do we use it let's go ahead and build and run this and see what problems we get so far let's see let's pass it in four and see what happens what the heck that's not what we wanted to do I know what's going wrong right here it's this all right let me explain whenever we need to use a function we need to call it from our main function and this is why your operating system doesn't just call every function to begin with it only calls your main function that's it's one job so in our main function we need to say all right we have another function here named Bucky that we want you to use so in your main function let's go ahead and write Bucky and let's go ahead and for that information write 20 since you can see in this function header it takes one integer and so whenever we call our function we're going to pass in one integer simple enough if we didn't have this right here what would happen is this our program would call main it would say using namespace standard C and get return zero and just end it wouldn't even look at this at all so that's why we need to call these functions we build inside of main pretty cool huh but if we build this right now then we get another error and check this out there's error right there that says Bucky was not declared in the scope what the heck does that mean what this means is this anytime you build a function yourself you need to make something called a funk prototype and function prototypes are the easiest thing in the world to do go ahead and copy your function header copy and under include go ahead and paste it without right there so instead of writing the variables name all you need to write is what type of data you're going to be passing it in so if you have like in X right here just write int if you have in x and y it's going to be int int you never saying all right I understand how to do this but buck you why on earth what I need to prototype a function if we have the entire function created down here well check this out whenever we create this C++ program our program is going to do this it's going to go main and then it's going to look at Bucky and say xx is going to say whoa easy Bessie is this like a builtin function that I'm supposed to be looking at in one of these libraries or are you trying to like make xx equal to the variable Bucky or what the heck is going on here what function prototype does is tell our compiler all right listen compiler when you get to this don't freak out and don't give us a bunch of error messages our prototype is telling you that it's a function that we created ourselves and this is the information it takes so don't freak out just note that it's a function we created ourselves so just use it properly so you know listen to me I had a very stern voice when talking to my compiler so anyways that's what a function prototype does and yeah let's go ahead and run this in we definitely shouldn't get any error messages now so anyways it says my favorite number is 20 so now everything is working perfectly our very first function we built ourselves is successful so one last time let me explain you guys what just happened we prototyped our function just to tell our compiler all right we built a function named Bucky and it takes an integer so whenever you come across it don't freak out next our operating system Old Main because it does that every time it did all this stuff and then it said RA I'm going to use the function Bucky with the parameter of 20 all right simple enough so now from here why need to do is call this function and whenever I see X in this body I'm going to throw in the number 20 because that's what they told me to do so all they want me to do is print out my favorite number is X which I'm going to say is 20 and then in that line so it prints it out and then it just Waits and ends the program so anyways that is how building your own custom functions work and that's all I have for you guys for this story if you don't quite understand yet then trust me whenever we start building more function functions it's going to become so easy that you're going to look back on this store and be like man that was some kitty fifth grade stuff so anyways thank you guys for watching don't forget to check out my brand new website I'm super excited about it and check out my farm too so nice thank you don't forget to subscribe and I'll smell you guys later