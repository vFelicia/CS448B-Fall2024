all righty mates welcome back and in this video I want to show you guys the spread operator now the spread operator is actually kind of confusing just to kind of explain so instead what I want to do is just get right into the examples because once you see it you're going to see how useful it is and kind of how awesome it is to so I'm just going to go ahead and make a function and this function is just going to take in three numbers and add them all together so add numbers so I'll say a b c which are going to be three different numbers and we just actually let's just not a even returned them which is log them out so a plus e plus 3 or plus c embarrassing all right so let's say that i have an array of numbers called nums and this is equal to i'll say 3 4 & 5 now anytime i want to use this function with these array elements i mean we know what to do we go nums that would be 0 and then let me do it the long way first 1 & 2 1 & 2 oh my god this is a pain in the butt already so let me run this and check it out we get 12 by I mean just looking at this there has to be an easier way of kind of taking all these and throwing them right in there I mean why do we have to use all this stupid syntax right there well before we couldn't we had to do it the wrong way the way I just did but now with es6 it allows us to do that using the spread operator so anytime we want to use a spread operator or in other words expand an expression or an array we just use three dots and then the name of the array so what this does is instead of treating this as an entire array it kind of splits it up into three parameters that we can throw inside a function so now if i refresh this you can see that we still get 12 let me just change this to something else to show you guys that it did indeed work 14 so isn't this syntax a whole lot easier I think so so again anytime you want use the spread operator just have three dots and then the name of the expression or the array that you want to spread out now in addition to just kind of taking array elements and throwing them into functions you can also do something like this so say you had an array of meats this of course was equal to the two best meats in the world which were bacon and ham and then you had another array called I know food so what you wanted to do is you wanted to take this array which consisted of apples and then Kiwi and then rice and you actually wanted to make a brand new array so you just actually console.log so alright so what I want to do is I actually want to make a new array or let's say that I just wanted to take these meats and add them to my food array but I wanted to add them right after apples so I wanted apples bacon ham Kiwi rice well what am I going to have to do I'm probably gonna have to like slice and then push I don't know let me think about this I'm probably going to have to iterate through food and then after I get to the zeroth element I'm going to all right there has to be easier way that I can just join these two arrays together right well believe it or not there is so anytime you want to take elements from one array and throw them into another one to pretty much make a brandnew array all you have to do is this after apples just go ahead and spread out meats and that's it that's all you need to do so what this does is it takes these elements and it combines them with these elements and then we get the result apples bacon ham Kiwi rice so how easier is this rather than you know iterating through and then iterating through this and adding each element and then tacking on these ones using a like push or something I mean all we have to do is pretty much spread it out and plop them in so that's what the spread operator is basically a way to take a JavaScript expression which is most of the time in array spread it out into individual elements and then we can use it however we'd like so the guys for watching and I'll see you guys next time