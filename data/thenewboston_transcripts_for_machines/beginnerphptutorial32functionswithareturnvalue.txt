hello this is Alex from PHP academy' de org and this is another video for the new Boston we are dealing with functions with return values in this video if you haven't already watched the other two videos on functions do so now what we're doing is we are asking the question what do we want to do if we want to say to a function inside a function we don't want to necessarily echo the contents of a function L and for this we use something called a return return value we return a specific value or the value that's calculated within a function this can be a string value this can be an integer it can be anything any any variable that we can return now the idea of the program I'm going to be the small program I'm going to create in this is we want to create a function that divides two numbers but we also want to create a function that adds two numbers and then what we want to do is want to create a sum similar to this so we want to add ten and ten together for example of five and five together and the result of this operation would be ten add 10 which is 20 divided by five at 5 which is 10 so the answer would be 2 20 divided by 10 is 2 so this is what we want to do however if we're creating a function here called add and we are taking two numbers so number one number two and we're echoing out number one plus number two what we're doing is we're outputting this result to the browser we're not storing it as a variable we're just simply outputting it now we could say create something like result equals and then we could say echo result however we're not changing any we're not really changing how the code works all we're doing is making it longer for ourselves so what we really want to do is we want to be storing a result but then instead of echoing it we want to be returning the result now you don't always have to return or even echo or anything in a funk a function can purely work in itself and not display any output it doesn't need to display output however we're returning the result of this now look what happens when I go to add two numbers together we add 10 and 10 we're putting a parameter we're putting an argument in here which is 10 that's equal to number 1 and then 10 which is equal to number 2 here so the result is going to be basically 10 in this case add 10 and we're returning the result which will be 20 so I've called this now what's going to happen absolutely nothing and the reason for this is this now is equal to 20 but we're not doing anything with it we're calling the function we're supplying it with arguments but we're not doing anything with there so in fact what we can now do is echo out the function in itself and what this is going to do is it basically means we can either use this as a variable on its own or we can echo it out to display it to the user so this will now echo out 20 to the screen and what this means is that I could say add 10 10 plus a hundred and echo that out so what we're doing is we're including this function the cooled function inside another mathematical sum so now let's refresh and we should get the result 120 which we do so you can see now though instead of occurring a value we're returning a value therefore we've got so much more freedom now to use this as a variable in itself so the example I showed was we had an operation here which was 10 at 10 should really be displayed at this 10 at 10 and 5 at 500 and the result of this is going to be 2 so how are we going to do this we need a function to add which we've already got we've got a function to add up here which we can use for this and we can use for this we don't need two different functions we can add 10 add 5 at 10 and 10 at 5 at 5 and it will produce the same result with the same phone but now we need a function to divide so we create a function to divide exactly the same way as we've done we supply a number in here so number one number two now these values here these variables here are superficial they're not actually declared variables they're just telling you what well they are but they're just telling you what we need to read it so you can name them the same name we've called number one and number two here and we've called it number one number two here so we can do exactly the same thing result result equals number one divided by number two and then we return the result okay so now let's run this program to make sure we don't have any errors which I don't think we will do no now we need to take the original sum that I wanted to achieve and we need to put it into practice with just these two functions and it's simple we need to create a variable called result or you can call it anything you like and we're in fact let's call it sum and that is equal to divide okay we need 10 open well we need a value here and a value here so what we can now do is add something inside this function so we're adding 10 and 10 and we're adding five and five but we're dividing 20 now by 10 so we've declared or with called a function within a function instead of occurring at returning values so now down here we can simply echo sum so if you look carefully the logic of this you'll understand how this can be done so now let's refresh and we've got our result of to which we required from the star so this is basically how to return a value in a function and you can see how useful it is instead of just echoing something out or just performing an operation we're actually returning something for the user or for to use as the variable as a whole rather than just a function to echo out the result of what we've done inside the function