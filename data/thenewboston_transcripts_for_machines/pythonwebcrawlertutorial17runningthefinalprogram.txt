the really cool thing about working with threads in Python is you already understand the concept of it you create a bunch of workers and give them a bunch of jobs but the awesome thing is you don't need to specify hey this thread needs to do that job that thread needs to do this job all you do is you create like x amount of workers let's say we're going to have eight and then as long as they have jobs they're going to start doing those jobs automatically it's freaking fantastic and I'll show you guys how awesome it is so we say create uh worker threads and these threads by the way they're going to die uh I'll say will die when main exits so again you know how whenever you're running your program it's going to take like one or 2 minutes depending on the size of your website if you're like all right well something went wrong and I'm just going to close out of this but crap now I got a bunch of threads running in the background have to probably go into the command line and stop those well the cool thing is I'm going to set this up where if you ever want to terminate your main program then it's going to call all the spiders as well so pretty cool so Dev create workers and you can name this create spiders or create threads or whatever you want to do and the reason I like naming it create workers is because I like just giving it a generic name because then whenever I making other programs I can just copy out of these and pretty much just paste them in and change like one line of code so you know pretty much just for laziness so all we're doing in this is we're creating eight generic spiders so I'll say 4ore in range number of threads so if you want to create eight write eight if you want to create 16 write 16 since we're going to let the user specify earlier I'm just going to write number of threads right there and if you guys are like whoa whoa whoa why did you write your variable as a underscore instead of like X or num or anything like that well usually you have a variable right here like X whenever you want to do something with this value so this is just going to be equal to 0 1 2 3 4 5 6 7 however I'm not using that number in like a formula or an algorithm or anything I just want to Loop through eight times and create my threads I really don't care what that is so the convention is whenever you need to do that just write an underscore and it kind of disregards that value and it lets to you know continue using a range for Loop whatever you want to call it so we're going to Loop through this eight times and what do we want to do each time well we just want to create a thread so I'm going to make a variable called T and how do you create a thread just call the threading module thread and whenever you call this thread class the one thing that you need to pass in is a target so you're making a worker what is this worker supposed to do and that's the last function that we're going to create and that's just going to say work now again we didn't create it yet so that's why it's giving us error but all we're doing is we're going to create eight workers and the only thing that they can do is this function right here which is work so whatever we put in there is actually going to be the job of the thread so pretty cool now this is optional but I actually want to make it a demon and again that is just ensuring that it runs as a demon process and it's going to die whenever the main exit and the last thing you need to call for your thread whenever you create it is start so now we have one more function to create which is actually work because right now what essentially we did is we created like eight workers and they're just standing in the factory and are like uh what am I supposed to do now and of course we have the todo list in our hand but you know we need to back like hey do these things so that's what we're going to do so all this work function is going to do is do the next job in the que one day I will learn how to type Q without having any typos so work is going to be really simple we're just going to set this equal to true and what do you want each spider to do well this is actually really easy just go ahead and grab one of these items from the list and that's actually in your thread Que now so URL equals q.g so it's going to get the next item from the thread que which is essentially one of these links and now once you have those links that need to be crawled just call spider do crawl page and as you see whenever I um call Crawl page it takes two pieces of information the the first one is just the name of the thread and that's just so whenever you're running this program we can display the user thread five is cing the Forum thread 8 is cing the Buy's profile page whatever and the second one is just the URL so how do we get the name of the thread well it's actually um a cool piece of python that's already built in to the threading module threading current thread name so each thread already comes with a name and you can name it something special if you want but just keep the default name and the URL is the page that we want you to crawl and the last thing the last line of code for this entire program is Q task done now again whenever you have a spider you give it some work and whenever it's done with that job it just needs to say hey I'm done working on it and again that just tells your operating systems that says hey I'm ready for the next job now and it helps free up some memory if there aren't any more jobs and again all of this is taken care of behind the scenes with the threading and Q modules but there you go essentially all this program does multithreading wise is it creates a bunch of workers and then it creates a bunch of jobs and these are the jobs and as long as there are more items in the list then your workers or threads are going to keep crawling all right now check it out actually said that that was the last line but we have two more lines because if we just run this right now we created all these functions but we didn't even call them yet so we just need to rate first what do you need to do we need to create workers because who the heck is going to craw who the heck is going to do our work if we don't have any workers and crawl which pretty much means create your jobs or make your todo list whatever and you can even even keep this right now but let me just go ahead and delete it so check it out right now I don't have any project directory I don't have any of those files nothing like that however when I run main that first spider let me go ahead and stop this right now so that's what that first spider did it cwed my homepage right here and it said hey all right I got 20 links in the queue and then we created a bunch of little threads and as long as we had jobs item in the items in the queue they went and they did their thing so each one got an item from the waiting list crawled that page and added it to the queue so look at that and now in like what was that it was running for like 4 seconds maybe all of these Pages have already been crawled so it already crawled 15 pages on my website and it already discovered all of these links man I can't even scroll with my middle wheel all right 861 more pages to look at so this bad boy is fast and it looks like it is working beautifully and also I posted all of this source code on my GitHub page so if you guys just go to github.com buuy Roberts make sure you follow me I don't know it's going to be somewhere around here it's not there for me because I'm already logged in can't really follow myself but if you click spider right here or you can just type in this URL then what you're going to see is here is all of the source code let me bump that down a little bit you guys might be able to see a little bit better and uh yeah so I already have a bunch of people working um if you guys are like you know what this can be improved that can be improved then submit a poll request and I'll review it and you know it'll help out so it's a pretty cool Community project it's actually getting really popular I did I had no idea that you know a WebCrawler so many people would actually use this and it would be this popular but I just posted this a few days ago and it already has like 68 Stars 23 Forks bunch of people working on it so yeah uh thank you for everyone who's contributed thank you for everyone that will contribute in the future and uh yeah let's go ahead and make the best spider ever