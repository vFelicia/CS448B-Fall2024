alright guys welcome to your 54th tutorial and in this tutorial I want to talk to you guys about the derived class constructors and deconstructors basically I want to figure out this riddle whenever you have a constructor in addy constructor in the mother class does the daughter class also inherit that constructor well it inherits everything else so is that constructor and Deconstructor included well your short answer is no it does not inherit the constructor and D constructor from the mother class Gore does it I guess you're gonna have to watch and find out so let's go ahead and first make a constructor and B constructor in the mother class so let's go ahead and remember in order to do that just create a function with the same name mother and today mother for the D constructor now let's go ahead and set this up and I guess we'll build the constructor first mother mother and all we're gonna have this constructor do is like C out I am the mother constructor explanation point emphasis on that crap and now let's go ahead and do the same thing let's copy this because I'm lazy and remember dat here tilde so that's the D constructor and just write mother let's get rid of the IMD it's tacky she's a mom mother D constructor so now we have a mother class that has a successful constructor and D constructor so now whenever we create a mother object like mother MA it should build the object so and I messed up something right here some other mother let's see what I messed up oh here it is right here and L you need that because end is not keyword so let's go ahead and run the skin and now whenever I create a mother object you can see that the object gets created I am the mother constructor and whenever the program comes to an end object gets destroyed mother Deconstructor so our mother object works as expected I guess you could say whenever the object gets created this runs and whenever it gets destroyed this runs we already know what a constructor and B constructor does so now let's go ahead and build a daughter object now remember at the beginning of this tutorial I promised you guys that the mother constructor and the constructor even though the daughter is inheriting all the stuff from the mother I promised you guys that it is not inheriting the constructor and D constructor so let's go ahead and build the daughter object if I can type daughter and we'll just name this like Deena because that's a nice name so let's go ahead and build and around this and see what we get whoa whoa whoa Bucky Bucky I think you lied to me it said I'm the mother constructor I am the mother constructor Bucky you mofo you son of B you told me that the daughter is not inheriting the constructor from the mother class so why on earth would it run this constructor twice well let's go ahead and actually build a daughter constructor and we'll see exactly what's going on we'll see if I actually did lie or if I didn't so in order to build daughter constructor let's go ahead and build daughter parentheses and also the tilde daughter for the whoa what the heck is that escape the heck is ahead I do not know how that got there anyways let's go ahead and do that and actually instead of having to copy this I'm just gonna you guys should not do this by the way I just close your eyes for this part and just going to change this to daughter and copy this always bad programming practice because you always usually mess up something but hopefully that should run just like that and now the mother class has its own unique constructor and D constructor and the daughter class has its own constrictor and D constructor so now whenever I run this you're saying alright so you lied me obviously the daughter did in fact inherit the moms constructor so now that it has its own construction and Deconstructor i should see just two constructors and 2d constructors run from the mom one from the kid so let's go ahead and build this in what the heck is this crap six things popping up all right Bucky you need to take a timeout and explain to me what's going on well in order to do that I'll make it real simple for you guys just comment this out right here and run this program again and now we see once we just built this one daughter object actually let me go ahead and take this out completely and now XS out and build it and run it again now we see that even we built even though we built one daughter object it's still running that mother constructor and the daughter constructor so what the heck is going on Bucky alright now let me take a timeout take a deep breath because I got some explaining to do when I told you at the beginning of this story that the daughter does not inherit the mother constructor I wasn't lying I was telling the truth even though the daughter is not inheriting the mother constructor the mother constructor still runs so basically here is how your program works whenever you start this program it says alright I have one daughter object that I need to make so the very first thing I'm gonna do before I do any of my own crap in this daughter class the very first thing this program is going to do is it's going to invoke the base classes constructor so it says alright daughter you have one base class called mother so let's go up to mother and we're gonna in and we're going to invoke the mother constructor before we even do anything with the daughter so that's why the very first thing we did was invoke the mothers constructor and then after that we were able to invoke the daughters constructor so basically whenever you use a class it sets up all its base classes before it does anything on its own class so that's why whenever running the starter object it sets everything up on top of it before it you know did the daughter stuff and another thing I want to point out say you weren't only inheriting from a mother but say there was a grandmother and a greatgrandmother and there was a huge hierarchy well it's still the same thing if that was the case then the greatgrandmother would get done first and then the grandmother and then the mother and then the daughter basically the very top class is gonna get done the constructor is gonna get finished executing first on the topmost class and this is because like I said whenever you have a class that inherits from another class it needs to set up the class above it in order to make sure everything is going to work inside it so the daughters gonna say RA I need the mother in order to work and the mother didn't say alright I need the grandma in order to work and the grandmas gonna say alright I need the greatgrandma in order to work and that's the very top so that's why the greatgrandmother it would be set up first but in this case we only have a mother and a daughter a very simple explanation so that's why the mother gets set out first because in order for this daughter class to work the mother class needs to be working first so that is why the mother constructor gets called first like I said the daughter class isn't inheriting it's just setting it up so that's why this mother constructor gets ran simple enough so that's why the mother constructor gets ran and then the daughter constructor gets ran but then the daughter D constructor gets called first and then the mother D constructor that's kind of weird you're saying alright if you're gonna set this class up first then you might as well destroy it first right well that's not the way it works it goes mother daughter daughter mother it's kind of gets sandwiched in there so here's what's happening with the rest of the program whenever an object gets destroyed and remember we only had one daughter object in this program and here's what happens whenever an object gets destroyed its Deconstructor gets called so Deena's Deconstructor got called first and whenever your program saw that this Deconstructor get called it sets off a chain of deconstructors the kid caught after it so if there's were you know a huge family the daughter would get the daughter would die first and then the mother and then the grandma would die and then the greatgrandmother so it gets kind of built in a reverse order then thighs but that's how it works so basically one last time whenever your first say you had an object like the daughter all of his space classes the topmost base class gets instantiated first it takes care of the uppermost class first because it needs every class needs class on top of it to work in order for that object work so that's why mother got called even though we weren't inheriting it we needed to set it up before a daughter could get set up now whenever this program ends the first thing to die is this daughter object and once this daughter dies is going to set off a chain of death throughout the family the mother is gonna die then the Grahams gonna die then great grandma's gonna die then Osama bin Laden's gonna die because that's what happened yesterday and that's what day it is and in case you guys are watching this like three years in feature that's what date is today May 3rd Osama bin Laden was declared dead yesterday or two days ago whenever they announced that so anyways I think I'll just in on that note because I'm getting way off topic now and I probably confuse the guys enough so I thank you guys for watching don't forget subscribe and again if you want to check out my tutorials and organized fashion check them out on my website they're all nice and laid out for you guys so thank you guys for watching don't forget subscribe now see eyes later