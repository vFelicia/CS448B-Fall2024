what's up guys welcome to your 63rd C++ tutorial and in this tutorial I'm going to be showing you guys another example of exception handling so let me go ahead and I want to cover you know one other little Inky dinky thing it isn't a main concept but if I don't cover this I'm going to you know it's like OCD I need to cover it or else it's going to bug me for the rest of my life so let me go ahead and first what I like to do is this whenever I'm working with exception handling I like to set up the framework first so I like to go ahead and put try right there and after this put catch with my parameters right like that and that way whenever we get you know typing a bunch of code in here I don't have to go search and be like all right what's this curly brace go to what do these parentheses go to it's really easy if you set up the outside first and work your way in then that way you don't get confused so let's go ahead and in this program I just want to build a really simple calculator I'm going to have the user input two numbers and and I'm going to make sure that the bottom number is not zero because remember you're not allowed to divide by zero or else the you know your computer is going to blow up so what I like to do first is uh well before I even do that let's go ahead and just start with the program so let's go ahead and make two variables in Num one and I'll save in Num two for later so let's go ahead and give the user prompt like C outs and we'll just say something like enter first number in line and now let's go ahead and give them a way to enter that number into num one and by the way I read this a couple days ago and maybe this will help you guys um understand this arrow and this Arrow the arrow shows the direction that information is Flowing now whenever you output something it goes to your computer screen so this text is going to your computer screen now whenever you input something it gets inputed and stored as a variable on your computer so the text that you enter is going to be stored in a variable in your computer you see where the information's fing to your computer screen to your computer basically the information is Flowing to the user and back into the computer pretty cool huh so I probably should have said that in like my second tutorial but you know 63 tutorials and I guess is better late than never so now the user entered a number and it's stored in the variable number one so now let's well might as well just copy this right here and copy this and paste it right over here and we'll change this to two so enter two it's going to be sted two and enter second number pretty good so now after this what we want to do is it really doesn't matter what number they answer for you you know number one as long as it's a number but number two it does matter because the second number cannot be equal to zero because if you remember from you know fifth grade math class or whatever you can't divide by zero it's illegal the math Gods will not allow it so let's go ahead and have an error message pop up whenever you TR try to divide by zero and we can just go ahead and put a simple if statement if num two is equal to zero let's go ahead and throw an exemption we'll just throw the number Z and now what we want to do is remember if number two is not equal to zero that means that the numbers that they entered were valid so we'll just go ahead and print out the answer on the screen num oneide by num two and in that line so basically if they enter zero is a second number we're going to get a error if they enter two valid numbers it's just going to print out the answer by dividing the top number by the bottom number so if we do indeed get a error remember in the last tutorial I taught you guys that you can pass in a number to use as like an error reference number and you can just write something see out you can't divide by X and that way whenever we throw zero it's going to pass zero in as X and it's going to say you can't divide by zero so let's go ahead and run this and see what happens enter the first I'm going to first run a program that works perfectly enter 32 for my first one enter 16 for my second one and 32 / by 16 is indeed two as we can see here so my program is working beautifully but let's go ahead and say that we have an idiot that's going to you know never knows how to use the calculator and is going to try to divide by zero okay 32 okay everything's going good so far but then I'm going to try and enter zero is my second number and whenever I try to hit this and solve this riddle we can see you can't divide by zero so as you notice as soon as you get an error message it basically just jumps right down to this catch block right here and it says hold on you did something wrong here's your error message you can't divide by zero so now the little itty bitty thing I want to cover in this tutorial is this you can have multiple catch blocks to catch different types types of error messages right now the only type of error message I showed you guys is an integer error but you can catch a double um you can actually catch a character if you want you can catch any different type you want now aside from covering that I don't need to show you guys you know the different types of error messages you can catch but what I do need to show you guys is this little thing right here dot dot dot you're saying what the heck type is this a dot dot dot okay I understand that I can catch you know ins and characters whenever you just want any error message to be caught for example you don't know what error message is going to happen in this Tri block but anytime any error message occurs you just want it to be caught right here then you can use the dot dot dot so dot dot dot is pretty much the all encompassing the default catch so basically if you have an so basically anytime an error message is thrown it's going to be caught by the dot dot dot no matter if it's an INT character yada yada yada so with that being said this is the catch that you see most often I just wanted to throw you guys um the piece of information that you can indeed catch specific types of error messages but this is the one you're going to see more often so let's go ahead and try and run this and it says all right and one second I did something wrong oh I see what I did I actually tried to pass an x and x is no longer existing so let me go ahead and try to run this one more time and you see it says enter first number 32 and then we try to divide by zero get error message and we get that default you can't divide by error message so typically you would want to write something like this it would probably make more sense but anyways I just want to stress you guys that aside from Catching different types of error messages you can also catch general error messages mes and that's what we're going to be doing most of the time so now that you understand that you understand most of everything there is to know about exception handling there are a couple other things that uh I don't even know if I want to cover or not there's like passing in objects that you can catch and also um you know inheriting from exception classes and default messages and stuff but I really don't know if I want to get into that I mean we understand the basics so um in the next tutorial don't know if I'm going to be covering more about exception handling or you know jumping into the next topic but either way it's going to be amazing so if you have any questions check out my Forum the new aon.com forum and uh yeah I guess I'll see you guys in the next video