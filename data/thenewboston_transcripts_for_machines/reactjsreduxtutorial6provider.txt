all righty hosses welcome back and in the last video we set up our store here right now we only have a little bit of data stored in there which is three users me joby and Madi so the next thing we have to do is we need to figure out how to take this store and pass the data along to our components so it would probably be a good idea to make some components if I'm going to teach that so I'm going to make a new directory right inside Jas and I'm just going to name this components so let's go ahead and first component I'm going to make in this video is just the app component now sometimes I name this layout because this component isn't really going to have any brains or do anything really smart it's just going to kind of lay out my other components so well I actually don't want to name it layout because it's not really convention most people just name app so while I'm teaching I might as well stick the convention but again that's all this components can be and of course we need to import react since that's kind of the tutorial and all right so since we really don't need any brains or any kind of fancy functionality what I can do is actually just use the shorthand version and I'll say cons app and just set this equal to fat arrow alright so if you guys never saw this syntax before this is a cool new syntax that we got with six for people who were too lazy to write the word function basically this is any parameters that you want to throw in in the function body goes in between here so all we're doing remember all a component is is just a function that returns some HTML just part of your website so in this component what I'm going to do is I'm going to take all my other components to stick them right in there again like I said that's what we're going to be doing eventually but for right now um I'll just stick some placeholder components so this application like I said is going to be a list of user names on top and then you click one of the user names and it displays their biyo or more detailed information on bottom so on top I'll just say this is where the user name list is going to go and then under that actually let me make a horizontal rule which is just going to be like a line across and then I'll have another heading and I'll say like a user details alright so we got our basic component made and now whenever we include this in another part of our application we actually need to say that this is the part that we want to export so I'm just going to say export default app and there you go now one last thing I actually want to do right here is you see this s CSS file whenever you use this styling you actually need to specify where you want to put it so if you just put it in your main layout then you're going to be able to use it in any component so in order to do that all you do is hit require why is nothing popping up here all right require nothing all right so what I'm going to do is require and how do I get here go up to alright so it's an S CSS and it's called style a CSS so basically we're taking this file and by the way we're just going to be able to kind of use it like normal since it's already going to be converted by my build tool and we're just going to be able to use our styling anywhere throughout our application pretty sweet eh so now that we got this component built and taken care of let's go ahead and hop back into our main and minimize this so it's easier to see where I am our main index.jsp and all right so the point of this video was to figure out how to take our store and pass it to our main application in there for all of our components so how do we do that when we look at this diagram again we basically need to do something like make a provider in the provider makes the store or all of your data available to all containers which are just think of them like components for now alright so how the heck do we make a provider well in order to do that you just go ahead and import and by the way this is the easiest thing ever it's almost too easy to be honest you just import provider from react life in redux alright so in react Redux there's an object called provider and all you do is you take this object and actually it's probably just easier if I do it alright so check this out first what we obviously want to do is we want to take this component and display it in our application so to do that we need to go ahead and import app from components app actually want to name that lower case so refractor rename app I like having my files in lower case alright so any time we want to use this app all we have to do easy stuff you guys have seen this before is just include it right here so this is going to do is it's going to take this component and render it in our target route and it's not displaying because what is wrong with my reducer I think I got a feeling all right so yeah that's what happens when you don't export it so I'll say export default all so again even though we included this file right here whenever we include it we need to say what we're sending out from it so we made this but then we didn't write export so we weren't actually piping it out so there you go remember to do that and now that we have that taken care of we can kind of fix all the bugs recompile boom there you go so again we made this app component which doesn't do anything really smart yet and we said include this and render it as root but right now we have the store which is our storage for all of our applications data and we have the separate component they aren't really connected anyhow now I remember that I said in order to take all of your storage and kind of pipe them to your components you need a provider so how do you use this thing called a provider well check this out cut your main component right here and you see this provider object that we just imported that is actually be able be easier if I break this up in a couple lines that is your new root component so inside here just go ahead and throw in your app and now this is how you actually set this up using react Redux but there's one other thing like ten more characters we have to type and that's this you need to make a property called store and set this equal to whatever this store is right here so again that's all you have to do to use your provider and if you look the provider makes your store all your applications data available to whatever is inside which is your entire application now whenever we make any other components since we're going to be sticking them inside here essentially what we're doing is we're taking the store and making it available to every single component so now every single component every single container is going to have access to all of our applications data pretty sweet huh so there we go that's all there is to it again a provider it's like two lines of code how easy is that to understand and setup so still a little ways to go before we actually start displaying our users in here but I mean hey we are getting there there's a Redux stuff it really isn't hard is you probably thought it was so for now thing guys for watching also if you want to donate to my patreon I'm saving up to buy my grandma a George Foreman grill oh so many lies all right so yeah I think guys I'll see you next time