what's going on guys welcome to your 302nd C++ tutorial and in this tutorial I am super excited because I'm going to begin talking to you guys about something called an array so enray is basically one of my favorite parts of C++ because enray is basically a variable that can store multiple values and you can do a bunch of cool things with them and uh like I said it's one of my favorite Parts dealing with C++ so let's go ahead and get started like I said an array is basically a lot like a variable but instead of just storing one value like 8 or 20 or you know 87 it can store multiple values so if you're saying all right that's kind of weird but let me go ahead and show you guys how to make one in order to make an array you First Rate what data type you're working with let's go ahead and make a simple integer array next just like a variable you type something you want to call it I'm going to call my array Bucky because it's pretty cool name and now right after this with no space in square brackets you go ahead and you write how many numbers in this case how many integers do you want to store in your array so let's go ahead and say five so what the compiler is going to do now is it's going to create an array that can store five integers so whenever you run this your compiler is going to set aside some space to hold five integers so we saying all right so now one array can hold five different integers pretty cool huh so here is how well there are a lot of different ways you can create an array but the probably the most basic and easiest to understand is called an array initializer list and an array initializer list is basically just a list of numbers and you have to put it in between these uh squiggly brackets I don't know the technical name for them but they're above the square brackets on your keyboard and in between it you write a comma separated list of five numbers so let's go ahead and print out like um 66 75 2 43 and 99 and that is basically all it is to create an array so we went ahead and we created an array called Bucky and Bucky was able to hold five integers and whenever we gave it its five integers we had to put it inside something called enray initializer list so we have five integers 66 75 2 43 9 99 so now whenever we want to use those values you're saying all right say I wanted to print out one of these values like two or something so let's go ahead and see out um Bucky okay well I can't do that because if I just say the array name it doesn't know exactly what value I'm talking about here so in order to let C++ know what value you want to use from that array uh we have to use something called the array index so let me tell you guys this first when I said an array is made up of a bunch of different values the technical term whenever you're working with array is called elements and all they are is values but you know we have to be professional here so we're going to call them array elements so 66 is one Element 75 is one Element two is an element so on and so forth so whenever we want to index a specific element in R we go ahead and rewrite the index number inside our square bracket ETS so you might be thinking all right the index number for this one is one this one is two and this one is three so let's go ahead and try to print out Bucky 3 and see what happens let's go ahead and end that line and we should be expecting two right here so let's print it out and check it out 43 what the heck I thought it was going to be two okay so 43 is the fourth one not the third one so what's going on Bucky well the reason that it printed out 40 3 is because whenever we're dealing with computers I don't know if you guys know a lot about binary and zeros and ones but you know how people start counting at one 1 2 3 4 5 6 7 8 9 10 I learned how to count to 10 well computers they start counting everything with zero so whenever we create our array this first element even though it would be number one to us to the computer it's actually element zero so let's go ahead and print out Bucky zero and as you you can see whenever we run this we get the number 66 so whenever we are referencing indexes or excuse me elements in our array we have to remember that our array starts counting at zero so 0 1 2 so this is actually the two index so let's go ahead and print out Bucky two and now we go ahead and we get two right there so again the basic things I want you guys to remember is this an array is basically a variable that can store multiple values the easiest way to create an array is this write the data type write your array name and then write however many elements you want your array to hold and we stored five integers in this case so that's why we passed five integers in in something called an array initializer list so basically whenever we create Bucky 5 we're telling our computer all right Bucky is going to be holding five different values so compiler go ahead and set aside some space in our memory to hold five integers so that's what it did whenever it created this line and aside from from that I want you guys to notice this each value in the array I say value sometimes but technically they're called an array element and in order to reference one of those elements we use something called an array index and the first element in every array is index zero so if you wanted to print out 99 it would be 0 1 two three four so Bucky 4 whenever we ran this program is 99 pretty cool huh so that's basically the most simple way I can explain arrays to you guys again I said that one way to create an array was to use an array initializer list in the next tutorial I'm going to show you guys a different way to create an array and it's a lot cooler way so if you don't quite understand arrays yet and don't quite understand why they would be useful then just stick around and uh I trust me what did I say I trust me of course I trust myself and trust me you guys will in the upcoming tutorials so again thank you guys so much for watching and I'll see you in the next tutorial