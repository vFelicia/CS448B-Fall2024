hi this is Alex from PHP academy' org and this is a video tutorial for the new Boston now in this video we're going to be talking about SQL injection but first of all going to be talking about what it is and we're going to be creating a small program that's going to check a user name and password so we're going to be creating a program that's going to select a row from the database where a username and a password both match therefore logging a user in successfully so if you haven't already looked at the user system tutorials go back and have a look at how we log users in otherwise if you don't really want to do that you can follow through anyway and have a look at what I'm doing here so I'm going to be explaining what SQL injection is and then I'm going to be giving some small tips to predict protect against there so we're going to have some serverside tips and also tips in our code that we can use to help prevent at least against SQL injection there are obviously many methods that you can use based on form validation etc etc adding slashes where quotes are but we won't worry about that for now we're just going to chop it about what SQL injection is now if you've already looked at queries you'll know that a structured query is something that we use to retrieve information from a database or inserted data we can also delete data etc etc so when you're supplying a command or an SQL statement for example to say select data from a database we do something like this so let's open an SQL tab here now you see that we've got let's just go back so we can see you can see that we've got user name and password now if I was to select a row from this table we've got a database called a database and a table could users we've got an ID field a user name field a password field in an email field which isn't relevant to this tutorial nor is so much the ID field here so user name and password let's go ahead and create an SQL query that's going to select a username and password so we start with select and then we say select we can select the ID from we supply the table that we're selecting from so users here we're so select ID from users where username make sure that's in apostrophes user name equals Alex and password equals past 1 2 3 for example so I'm going to copy that into my clipboard so I can use it later on when I click go you can see that we've returned one row we've retained the ID of the row where the username and password both match now for example if I was to copy and paste this back in here but change the password slightly so la for example as the password you'll notice that we won't return any rows ok so MySQL returned an empty result set now in PHP we handle this using the MySQL num rows function and what we do is we say if if our query so based on the users input of the username and the users input of the password if the MySQL query or the result are the numbers that are returned the number of rows that return are equal to 1 or greater than or equal to 1 we know that we've successfully logged the user in because they've supplied information which makes this query work so if you like I said if you don't understand at this point it's a good idea to go back and check on the the username and sorry the login and register tutorials where we where we set sessions for our users we perform this kind of validation but what we do need to do is protect against SQL injection now let's take a look at what SQL injection is let's just browse our database and we can go back to our text editor so let's um let's say get rid of these tags and let's construct the query that we've just done so we've got to select ID from users where username is Alex and password is blah let's just say up here we have username equals and dollar underscore post username and we have password and exactly the same thing but this time we are selecting password now these are presumably two fields that we have in an HTML document that are HTML on the page that tip that a user can enter their username and password so they can enter absolutely any value they want into here be it an alphanumeric characters just numbers we can have characters anything we want so the user has submitted their own data which then goes into this query and we've seen this by just literally substituting in variables here and here now this query will then select a username and password from the database that her user has supplied so let's say that they enter username I'll just put it here so let's say the username they enter is Alex and the password that they enter is passed 1 2 3