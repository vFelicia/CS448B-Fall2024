hi this is Alex from PHP academy' org and this is a video tutorial for the new Boston now we're going to be continuing with XML and I'm going to finish this short XML series with looking at an example from the YouTube data API now I've got the YouTube data API page if you like up the it's in the tools section of Google code so the URL is here if you want to have a look at this as well so I'm okay let's come down and we can have a look here we've got several options and what these different options are going to do is generate XML documents for us so we can so we can grab data specifically from where we want some is going to enable or use author or thent ocation but we're not going to be focusing on that we're going to be focusing on just dumb simple features of this so here in the you're in the another tab I have a specific feed for a specific video on YouTube and this is denoted here by the videos forward slash and then the video name itself so were to replicate this for yourself and test it for yourself just simply take the the name of the video so we'll have on YouTube we have watch and then equals and a value here so we're I'm sure you know what I mean it's just the unique code that identifies each video so if you take this and pop it into this URL you'll be presented with this data regarding the video so if you look carefully you can see things like let's go and have a look here let's pick something out the way might find useful okay so here up here we've got the title so you can see here we've got the title tag start starting here we've got some attributes on to this but we don't need to worry about that for now but for now we've got title here and ends title here so the title here you can see it's contained within these tags you've also got the content here which is create your own guestbook using PHP and MySQL database that's essentially a description or that sorry the content that's relative to the description side of this so we can take the description from it as well and there's various other aspects we can take from this but in this tutorial we're just going to be focusing on getting the title and the description and displaying them on our page so let's go ahead and open up context okay so the first thing we need to do is we need to set a variable which is going to hold the data about this so I'm going to say video is equal to and remember we'll be using this simple XML underscore load underscore file function and in here we can simply take we don't need to use a local file we can use external files as well so if we come into here and copy and paste this here the this generated XML file and come back into our text editor and paste that in there what this will do is it will create our object from this function reading this URL so we don't have to load in a far specifically it doesn't specifically have to be on on in our room in the directory or in another directory on our web server but we can specify euros as well so now what we want to do is we want to come down here and establish what we want to say so I'm going to echo out title and I'm going to break and then underneath here I'm going to echo out the title of this in fact let's append it onto the end of here to save space and we'll create it all on one line so what we essentially want to do is say video and then we want to say and then greater than so we're taking a specific tag from this XML file so the tag is called title so as you know what we do is we say title like that so it's saying video title now if for example this was a list of a list of video so this data here may be a list of say most popular videos what we could actually do is we could loop this in a for loop so for example if we had more than one title tag on a page we could create a loop a for loop as we've seen in the previous tutorials from our from our own XML files and we could actually read in several titles then what we could do is read in say several descriptions and then we could link the user to these most popular videos so it's very powerful because we're maintaining a data structure these popular videos will update themselves and as we've seen before as new tags are added an old tags are removed our script is going to keep up to date with these because it's using the exactly the same structure so that's something to bear in mind if you're going to play around with the page that I've already shown you here and you're going to say most viewed videos or most recent videos for example or top rated most discussed you've got loads of different options but for now we're just focusing on one video as an example so vector it out the video title let's see if that's worked first of all we're going to put this in bold and upend the break once there so we can view the description as well so go back to our page and refresh okay so you can see that we've got title we've broken down we've actually displayed the title from this XML document so you can already see how powerful this can be in taking specific elements about videos now for example let's say this video name changed on YouTube and it completely changed to something else what's going to happen well our XML is going to update itself so therefore our code is going to equal the same value that's specific to YouTube so as well as some being able to easily access these tags we're also keeping uptodate with everything with the tags themselves when things might change on YouTube so now what we can do is we've broken down and I'm going to echo out exactly the same thing gonna say strong strong this time I'm going to say description this is the last example I'm going to use but I'll leave it up to you to go and play around with different values things like that let's just move this code on to outside of here so we do exactly the same thing when we say video and this time it's content okay so we're now what we've done is we've grabbed the start content of the description let's go back to our page and refresh and you can see that it's given us a description of the video and as I explained before there's various other tags you can you can take from this specific file itself so we've got things down here like the duration we've got the thumbnail image so where that corresponds to the video itself we've even got been rating for the video and the number of raters so there's a vast amount of information that we can take just out of this single XML file and that's the powerful thing about XML is that lots of websites do use it in the API so you can just grab data quickly an update you may have come across websites say for example in YouTube the index different YouTube videos and display data about them and in fact actual fact they allow that users to comment on them videos from their own website but that's a whole different thing that said the YouTube API itself so you'll find that Twitter and other social networking websites or other websites may produce their own XML feeds more specifically we have news feeds from websites as well in XML format so XML is a really really widely used standard that allows you to maintain a specific structure to your code the code itself and actually echo out things from it and which will constantly update depending on the the updates from the website so that's taken a brief look at how to load in a file from YouTube for a specific video here and grab the title and the video content from from this XML file