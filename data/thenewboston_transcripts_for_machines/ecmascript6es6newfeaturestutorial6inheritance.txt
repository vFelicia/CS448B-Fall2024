all righty guys welcome back and in this video I'm going to show you guys how to use inheritance in es6 very easy now I'm guessing that like 95% you guys already know what inheritance is but for those few who may not be familiar with it it's actually really easy to understand so I'll give you guys like the real quick 30 second overview so say that I was making a computer game and I wanted to make a bunch of enemies so I made a ninja enemy and this ninja can move left move right and he could attack so I made three methods in that class now later on I decided to make like a I don't know an astronaut and me or a wizard I guess the astronaut is not really a great enemy so this wizard and me he can move left and right and attack so I made the same methods in there and then later on let's say I made the astronaut and he also can move left and right into that so basically I had all these classes with duplicate code it was the exact same code they could all move left and right in attack now my numberone rule of software design is never repeat yourself if you find yourself repeating yourself then you're probably doing something wrong so I thought wouldn't be cool if we could take all these shared functions all of this shared functionality stick it in one base class and then we can just include it whenever we needed it well that's what inheritance is basically making one base class that has functions that you share and then you can just include those functions rather than typing them over and over and over again so let's say that in this example who's texting me right now right in the middle of my video anyways let's say that in this little demo right here I was making a game and this game had a bunch of different types of people maybe like Sims or I don't know a computer game whatever so I had programmers and it had construction workers and nurses basically a bunch of different professions now all of these people or all of these professions had some common attributes they all had a name they all had a age and they all had a weight no matter what profession you are you all have these same so instead of just typing this code in every single class what I'm going to do is I'm going to actually make this a base class or the parent class and I can make other classes that inherit from it so I'll say class programmer and again I don't want to have to type all of this code again so what I can do anytime I want to include all the stuff in here is I can just use the keyword extend now the class you right after this is saying re go ahead and grab all the code in person and bring it into this class that's all of those so now even though we don't have anything visually to see in programmer there actually is all of this code right here and just to kind of clear things up you see that this person has a name and age and a weight instead of just display way I'm actually going to make display name and display age so I'll say display name and I might as well type it I was going to copy it but let's copy this part so all I want to do is I want functions to pretty much output their name and age all right so even though we can't see it whenever we make a new object from the programmer class we can use display name display age and display weight since we pretty much took everything from person class and brought it in using this extends or inheritance pretty sweet huh now there are a couple little things that we need to watch out for so this parent class or the class to inherit from it's technically called the superclass so some people say that this is the parent and this is the child but you can also refer to the parent is the superclass so whenever we set up the constructor in the child class here I'll show you guys how to do this so it's basically similar to the one before but instead what we wanted to do is this inside the constructor what we're going to do is we're actually going to call the parents constructor so how do we do that we actually use the keyword super now the parents constructor since a programmer is a type of person essentially we need to create a person's though it takes a name and age and a weight so we can just pass those in right like this now additionally to just setting the name the age and weight of a person this programmer has an extra attribute and that's language so I'm just going to say that a programmer also has their favorite language which can be like JavaScript or Python or C++ or whatever so just like before what we can do is this so check that out so actually what I am going to do is kind of start showing you guys a little demo here so of course Sally is just a regular person she's not a programmer at all so we know that we can display her name her weight and her age so let me just go ahead and run this and verify that all right sally has a name in age and a weight looking good now if I make another variable called Bucky another object gets us more technically called and instead of just being a person he's actually a programmer then what do I need to pass in well I need to pass in a name and age in a weight and also his favorite language so his name is Bucky Roberts and what's the next parameter age 87 weight 987 pounds and his favorite language javascript now check this out display age and I'll just do display name and actually let me separate this with a little line so you guys can see what's going on so of course we know that Sally stuff prints out fine but Bucky's information also prints out fine now if you look inside this programmer class which Bucky is indeed a programmer we don't even have the methods display name and display age so how come Bucky was able to use those well that's because whenever we inherited from person class it pretty much got all of the methods inside here and this isn't technically how it works put but essentially behind the scenes it pretty much cut them and pasted them right in there or copy and pasted them I guess it's slightly more technical and another thing that you can do is you can actually give a programmer custom functions as well so I'll say display language now say console.log print out their favorite language so whenever I run Bucky display language of course it prints out JavaScript now again only programmers have access to display language not a person a person only has access to these three and a programmer has access to those three plus whatever it's in or excuse me whatever is in its own class so that is the basics of inheritance again before es6 it was super complicated but thank God for es6 makes things really easy thing guys for watching and yeah I'll see you guys next video