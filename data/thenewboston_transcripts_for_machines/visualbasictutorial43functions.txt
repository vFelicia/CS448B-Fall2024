hello YouTube Sam here from youtube.com/ onli gamer for the New Boston and in this tutorial we're going to be covering functions now functions are very similar to Subs except there's one main difference functions return a value and what this means is when you call that function it's going to give you a value back and you can set this value to um anything that you would like uh we're going to be using some of the primitive data types for our function in this tutorial so let's go ahead and get started and make a little demo application so go ahead and click new project I'll resize this here Windows forms application and we will call it functions and go ahead and click okay and we'll wait for that to load okay so we're going to open up our toolbox here and we're going to find the button now I'll just add the button to the to our form we'll set the text to run function we'll go ahead and scroll up and we'll set the name to button run function okay so now that we've got that done we're going to go ahead and double click on run and you can see it opens up our event handler for button run function click and we're going to go ahead and make a function so we're going to come down here below our private sub button run function click and what we're going to do is we're going to create a function so just like a sub we're going to start out with either the private keyword or the public keyword now since we don't want another class to access this we're going to call it private and then we're going to use the keyword function and then we'll just name this solve math we will add empty parameters and now after this you have to specify a type for your function now since all functions return a value they have to return a certain kind of value so what we're going to do is use the as keyword and we will just use double so what this means is that our function solve math is going to return a double and then we've got in function here and you can see that we get a warning and it says function solve math doesn't return a value on all codes code paths so what we have to do is we have to return a value so what we'll do is we'll just return 20 uh 13 ided 5 so what this is going to do is it's going to take 13 ID 5 and give that back to the person who called that what we can also do is create a couple variables so we'll just do num one as integer and we will set it equal to um 23 and then we can declare num two as integer and set that one equal to five and then what we can do is instead of returning 13 / 5 which will give us an answer something like uh 2 point something we can just do num one / by num two now if you wanted to you could also create another variable that was called answer and set answer equal to num1 divid num two and then return answer but we don't really need to do that so we're just going to return num1 divided by num two and since there's a possibility that we're going to get a decimal number by dividing we're going to go what we did was we declared our function solve math as a double so now if we go ahead and come up here to button run function click we can go ahead and type messagebox doow and then what we can do is we can call solve math so what this is going to do is it's going to print out the number that that is returned from solve math inside of our message box and now if we go ahead and run this we can click run and you can see it gives us 4.6 now instead of just displaying this inside of message box what if we want to save that value for later so let's come up here and we'll create a variable so dim answer as double and we will set it equal to solve math which is going to get the math path 23 / 5 and then we can just print out answer and if we go ahead and run this it's going to work exactly the same we click run and we get 4.6 now with functions you can have a function that is a double an integer a string a character a boine whatever you want so go ahead and make a couple functions um test them out and once you got that down go ahead and move on to the next tutorial okay so as I was saying go ahead and make a couple functions and uh practice that and then once you got that down move on to the next tutorial and um in the next tutorial we're going to be talking about passing values to functions so that you can use values outside of that function uh which is U very useful and you're going to be doing this with mostly all of your functions so um thanks for watching guys and stay tuned for the next tutorial