the first thing I'm going to write is um current file current underscore file and that's going to equal dollar server and remember this is an acts as an associative array and the value we're going to give this or the key we're looking for here is um script file name so let's just um let's include that in index oh include that in uh yeah we'll include that in index up here PHP so require let's go back core. in.php and now here we can just Echo that just to test it's working so that is current undor file and let's go back and refresh our page okay so current file is index.php um let's go back to C Inc I think what we could use is script file perhaps no um I think we can do um script name oh script name refresh there see what we get okay yeah this is fine so now what we've got is um the the location we want to um we want to submit a form to because at the moment we're on index. PHP um however if I was to say um just as an example that we're not going to end up doing this but in login form if I was to require core. in.php and then I was to Echo the current file um let's see how this changes so at the moment we're on index.php and that's showing us index.php but because this is dynamic it's going to update when we change the page um okay maybe not let's uh oh right sorry yeah we need to go to login form. in.php and then that gives us this value so if the login form is included in index.php then whatever we write um in here is whatever we write for the form action is going to be displayed so let me just give you an example of that first of all um let's uh open up PHP tags and I'm going to Echo current file now you might be thinking well we haven't required the core. in.php file in here so how on Earth can we gra use this variable well the answer is we've we've required it in index.php and we've also required sorry not connect we've required um core uh here but what we're going to do is we're going to um include login form. in.php um we going to include login form. in.php so then it will read it still from here so think of this as a long page with these included now getting your head around this structuring system may be uh difficult but it just means that everything's kept neat and tidy and you can reuse things etc etc so let's refresh and see what happens let's go back to index.php okay so what we've got up at the moment if we view the page Source you can see form action equals and we're going back to index.php even though this code exists so even though we're inside uh login form. in.php and we're echoing the current file because this is included within an index.php what we're doing is we're still um we're still uh taking this this file name so we we're submitting the data back to index.php which is still going to be processed in login form. in.php so it's quite hard to understand but um eventually as we go along you'll you'll get it if you haven't already so we've done that now what we need to do is um specify our username and password uh login Fields so let's say username and we create a form field here basic HTML so typ ex text and the name of this is going to be username and then we want the password which is another input type this time it's password uh and the name is password so we type the type of this is password just so it's uh sort of starred out by our browser and then uh let's create um a submit button so type it submit and the value of this I'm going to say log in so let's go back and refresh our index page okay so you can see that we've got this login form now okay so the next thing to do um is process what's going to happen when this login form uh is clicked um so we can view we can view an example of what's going to happen on the index.php page even though we're processing it inside login form because we've included it so let's first of all check if um the username and password have been set meaning the form has been submitted so you may have seen this example a few times before so we're saying if is set and we're wrapping that in Brackets and we're specifying this post data here that's coming through uh and we're saying and is set dollor poost and the password as well needs to be set and then inside the block we're checking if it's empty or not so we're first of all saying is it set and if it is we're executing this block or or running this block and now we're saying if not empty Dollar in fact no we can predefine we can uh redefine the variables here re reinitiate them into another variable so username equals dollar poost username and password equals dollcore poost password okay so now we can say if not empty username and not empty password do something otherwise do something else so the the something else will be uh you must Supply a username and password and the if it is entered is we'll just put for now okay so let's um see how this works so uh we'll click index index.php refresh that page click login and it says You must apply username and password now what we can do is type something in Click login and it says Okay so we're on index.php but we're processing what's going on inside login form. in so we're keeping the index file as clean as possible and eventually we're going to put this into an if statement into a block which means if the user is logged in we don't want to show this login form otherwise we want to show the login form