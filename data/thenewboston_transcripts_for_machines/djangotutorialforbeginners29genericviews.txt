alright guys welcome back in this video I want to talk to you guys about generic views so first let me explain what they are so basically whenever you make a website or go to a website you're going to notice that all the websites that you go to kind of have the same pattern they either display a list of objects or they have details about one object to different pages so if you think about a website like YouTube whenever you search for video it just has a list of all the videos that you can scroll through and find your video and then when you click one it has details about that video of course the player and all the comments in related videos whatever so what about on a website like Facebook well on your newsfeed it has a list of everyone's post and then you can click either you know someone's profile or picture or something and then it has details about that object so again it all comes down to two things a list of objects in details about one single object so I'm sure no matter what website you think of they always have these same patterns now on our website that we're making right now we're kind of doing the same thing the home page is just a list of all of our albums and it's going to be the cover photo and you know the artists and stuff later on whenever we design it properly but it's basically a list of all of our albums then whenever we click one there's details about that individual item so the album logo and all the songs tomato tomahto so since Django realized that people were just creating these same patterns over and over and over again why not help them out and speed up the process a little bit so just a heads up before this tutorial I pretty much clean out everything in the index.html and details that HTML and I got rid of all the favoriting form because that's not the proper way to actually favorite songs that was just a little example so I pretty much stripped everything down except you know just displaying the bare basics like on the album name and you know the song titles and tomatoes so there you go just want to give you guys a heads up so now with that being said I'm actually going to go ahead and delete this so just go ahead and delete everything to do with favorites and actually let me go ahead and delete everything inside views and I know you guys are like scream like oh my god what are you doing we spent like 20 tutorials learning about those everything I learned is deleted guys I promise like I said you guys are going to love me after this so instead of the way we've been making views before which were basically functions what we're going to do now is we're going to make something called a generic views so from Jango dot views import generic now we also need to import albums so from models import album art so in this is Errol I'm just going to make two generic views oh sorry got black long alright so the first one is just going to be a list generic view which is going to list all of our albums and the second one is going to be a detail generic view which is going to give us details about that individual album so it's going to be the exact same as before to the user but we're going to write a lot less code so how do we make a generic view well instead of functions we actually use classes so for the home page since it's the next page I'm just going to say index view now the type of view we use we actually inherit it so there are a couple different types of course in this tutorial I'm going to be teaching you guys about the list generic view and also the detail generic view but remember on the index page is just a list of all of our albums so we're actually going to inherit from generic list view alright so what we need to do now is the first thing we need to specify is what template we're using so over in templates index.html of course we're using index the HTML to display the albums so I'm just going to go ahead and write template name and set this equal to music / index.html so that just says whenever we get a list of all of the albums plug them into this template right here pretty easy now there's only one other thing that we need to make in here and that is a query set function so basically we're going to say we're going to make a function called get query set and all this is going to do is we're going to query the database for whatever albums we want and in this example we'll just go ahead and get all of them so returned album objects all and guys you know what this is actually it this is all you need to do for this generic view now before I run this I actually need to complete the rest of this code so that's all we need to do for the home page and let's go ahead and make the details view now so detail view and again whenever you look at the details of an album it's not a list of things it's just details about one object so the generic view for this is generic where is it detailed view right there and this is even easier so since you're not actually getting a list of objects all you need to say is okay first of all what model or what type of object are you trying to get the detail of and we'll just say the model equals album trying to look at the details for an album and the last thing is the template name just like this so whenever you give me that album what template do you want me to plug it into and that's just the detail view or detail template right there so detail the HTML now the only other thing or the only other file we have to change is this URLs right here now of course I just want to delete this first of all since we're not even using that anymore the favorite so not a whole lot is going to change in this file but a couple things I want to point out that are very important is this you know how I said that each URL pattern has to be hooked up to view function well right now we're using these classes I mean this class doesn't even have any functions or methods inside it so what we need to do is instead of these functions we actually need to reference on the class and then convert it to a view so you just review for each one and then you write the class name which is index view and then since you actually need a function you just call as view so we're pretty much saying hey we're using a class but since you need to view just go ahead and treat it as a view so we're going to do the same thing right here so the class of this was detail view and of course as view now the last thing I want to point out is whenever you're using a detail view it actually expects the primary key so we're pretty much going to give it the primary key of one if we want the Taylor Swift album or two if we want the myth album so instead of album ID here I'm just going PK for primary key and that's it so now check this out hopefully one of your refresh we should see huh you see I thought we're supposed to get a list of albums right here but we got nothing and the reason for that is the last piece of the puzzle you see whenever you query all of the albums right here it's pretty much going to return a list of all of your album objects but it returned it but it didn't know what variable to store it in so we could use it in our template how did it know that it was supposed to be called all albums well by default whenever you use a ListView it's going to go ahead and query this and it's going to return it in an object called object list so if you just want to name it object list and check it out refresh this and boom roasted everything looks fine now one other thing that you can do is if you actually made this and then you gave it to your web designer and he was like and I hate this name object list why can't you just name it album list that's so much more intuitive like shut you can actually do that if you want so again the default name whenever you return a list of objects from the ListView generic function is going to be called object list but if you ever want to override it then you just have to do this make a variable called context object name and again by default what's happening is it's essentially equal to this object list but you can change it to anything you want like all albums and now you're a list of albums you can just refer to as all albums just like that so refresh and everything is good to go so again one last time there were a bunch of patterns that people were using over and over again whenever they're making websites mainly displaying a list of objects and displaying the details for a single object so instead of having to write all those functions like you always do instead what you can do is use these generic views so it's a lot cleaner and check it out we now made to entire web pages and look how cleaner this is than just using view functions so thank you guys for watching and we're going to subscribe I will see you guys next time