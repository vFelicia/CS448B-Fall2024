hello YouTube Sam here from youtube.com/ onli gamer for the New Boston and in this tutorial we're going to continue working on my favorites so uh before we get started I just want to give full credit to the authors of beginning Microsoft Visual Basic 2008 um by theorin Willis and Brian Newsome published by rocks um because I don't want to take credit for this they made this program I'm just using it as a teaching tool so that you guys can learn um about programming and how to and a lot about objectoriented programming is which is what we're focusing on uh in these tutorials so let's come over here to favorites viewer YouTube and we'll add a class so if you don't know where we are right now or what we're doing then you may want to move back to the start of this series so we'll just call this class web favorite go ahead and click add so here is our class web favorite now we want to be able to dispose of um items in web favorite and we want to be able to use the using keyword so that we can cons serve resources and memory so in order for us to be able to dispose um and use the using keyword we need to implement I disposable so when you press um when you press enter after typing implements I disposable you can see it adds this region for you and that has a whole bunch of stuff and you don't really have to know what that does you just have to know it'll allow us to um dispose of objects that we create from this class so now let's go ahead and below the I disposable support inside of our web favorite class let's create some public variables so we'll make a name so public name as string and we'll do public URL as string so the name is going to be the name of the favorite um the name of the website and the URL is going to be the URL of the website so let's go ahead and create a method and we'll call it load and this is going to take a an argument so the argument is going to be file name as a string so in order order for us to be able to open and read files and write to files um that we're going to use with file name we're going to have to import system.io so Imports system.io so now we can open files and write to them and read them and so on so now we need to make some variables that we can use um in this method so we'll have string data as string and what this is going to do is string data is going to hold the contents of our favorites file now the your computer has a file in it for Internet Explorer and it stores all of your favorites for you well it doesn't store all of your favorites let me rephrase that it's got a folder that sto stores all of your favorites um and these are stored in different files each so the string data is going to hold the strings that are in those files that contain your favorites and then we're going to do we're going to create a an array of string so string lines as string now the favorit files that you have on your computer they are split up into different lines let me just go ahead and find one for you so you guys can see um what they look like well uh it looks like I couldn't I can't find a way to open the text of these uh file right here without creating a whole new application that will read all the text but basically what um is in these URL files these internet shortcuts is it has the base URL and then um and this is all separated on different lines it has a base URL has the URL the icon file the icon index and other stuff that has information about the URL of the website so we'll go and close out of that so the string line lines array is going to hold each of the lines in this text file that we're going to load it's not really a text file but we're reading the text from a favorite so let's go ahead and we will start adding some more so we're going to need a variable called string line so String Line we're going to be using string line in a uh for each Loop to go through each of the lines in string lines array so now that we have some variables initialized we're going to declare object file info as a new file info and then file name so what we've done is we've created an object um it's called object file info and it's a type file info and it says provides instance methods for this creation copying deleting moving and opening of files so file info just gives us a whole bunch of Stu that we can use with files and we're going to get the file info for the file name which is passed to this method right here so now what we want to do is set name equal to object file info. name. substring so we're getting a substring of our file now name is going to be the name of the website so this is going to take some arguments we're going to have our start index which is zero and for our length we're going to do object file info. name. length minus object file info Dot and now what we need to do is get the extension for it so we can do this by typing object file info. extension. length Okay so let me try and EXP explain what this does we've got our name variable which is going to be the name of the website and we want to get a substring of the name of the file file name so file info contains the info info for file name so we're going to use the object of that and get the name of the file um which is the whole file um and it doesn't include any paths so let's say we've got google.url that's our file so we're going to start at index zero which would be G and we want to go to this ending Index right here so we want the length of the file name let's say we have 10 minus the extension so minus the length of the extension so URL would be three so it's going to be 10 minus 3 so it's going to go from zero to let's say seven so it would just give us Google and then no extension length so the name is just going to be set to the name of the website so let's go down below this and add some more code so what we're going to do is we're going to split um all the data in this text file into different lines so we'll do string lines our array and we're going to set that equal to string data which is the um data uh everything in the file so we're opening that file and getting all the text from it and we want to split it so string data. spit and the first argument is going to be an array of characters or we can use another overload that has an array of string so we've got separator as string so we need an array of strings so we'll create a new string array and inside of these curly braces we want to tell it um where to split the items so it's got an array and the first item is going to read the full line and then once it hits an end line um we wanted to create a new item in that so we'll type control characters control chars it says the control characters module contains constants used as control characters so we want to use CR LF now crlf stands for carriage return and let's see what else stands for carriage return and Line Feed so basically when there's a new line uh we want to to um split it split that so the first item in our array is going to be the first line um in the string data the second item in the array is going to be the second line so whenever there's a new line it's going to create a new um object in that array so for our options what we want to do is just remove any uh duplicates so we'll do string split options do remove empty entries so if any empty I mean if any entries go into our array that are empty it's just going to go ahead and remove those for us