so let's say we might may have a a public type and this might equal let's say 18 to 25 so this is the type of a savings account I have just as an example we could say ISO or whatever so 18 to 25 is the type of account that exists at the moment and when we create this alyc savings we can also then we can also then grab this type because we've created it as a public property we can take this type of account and we can echo it out however this is not going to be available in our bank account class because we've created an extension of our bank account but with this additional property which is only available to use inside this class here so let's go ahead and test this we'll test it with both we'll test it with bank account and then with the savings account so if I was to say under here Alex or echo rather echo let's get rid of our balances echo Alex and then type so we're trying to echo the type of account that I have in my normal bank account now because we've only extended our bank account and and specified this additional property in our savings account class when noting it's not going to work we're going to we're going to return an error so we've got undefined property bank account type that's because our property doesn't exist within our bank account class it only exists within our savings account so let's get rid of that line there we can't do that unless we've already pre specified it up here in which case it will automatically be available in savings account and I'll show you an example of that in just a moment okay so um let's go ahead and say Alex savings and now let's echo out the type of account so echo alik savings and the type of account so let's go ahead and refresh and you can see that we've been we've been displayed with the value of eighteen to twenty five is which which is what the account we specified up here so now what I was talking about earlier is because this is only available in savings account which is an extension of bank account we can't use it with bank account but if we did want to use it with bank account we can cut that from there we can put it in there and now what happens is this is available for each for each instance we create so what we might do is we might create a new bank account and then we might say we might give it a specific value and we'd need a method to do this so we could create a new method called in fact no no what we can do is we can come down here and we can say Alex type now let's let's do it through a method so we'll come up here and we'll say function public function we need public function set type and this is going to set the type of account that we're currently dealing with so what we can do is once this function is run and we take in the type here let's give it another name just so we don't confuse it with the property name so set type input we can now say this type equals input okay so set the value of this type here to the input so what we can do is when we now create a new account we can say Alex sets type and we can set the type to let's say 18 to 25 current and now with our savings account we can do exactly the same thing because we remember we've extended all methods and properties so we can say Alex savings set type super saver okay so now what we can do is we can get rid of that we can now echo out let's say the balance and the type of account so I'm going to say echo Alex first of all Alex and then I'm going to say type and then I'm going to say has and then I'm going to say Alex display balance okay so what this is going to do it's going to take the type of account and then it's going to say housing a certain amount of balance that's in there and we can append a line break on there let's just test this one in particular first let's refresh you can see that 18 to 25 current has balance 80 so let's go and get rid of this dot if I put that oh yeah okay so I've got covered the dot in there so that's a refresh so 1825 current has balance 80 now what we can do is because we're extending this we're extending the method and the property like before we just set the property inside here we can echo out Alex savings and then we can echo the type out remember this is a property not a method so we're just echoing out the raw public property so if we would set this to private we wouldn't be able to do that we'd have to create a method in order to return the type as we do with display balance so now let's go ahead and say savings type and we can say has and Alex savings display balance and we'll put a line break just on the end of here to keep things neat and let's refresh so we've got 18 to 25 current has balance 80 and supersaver has balance 3000 so in this tutorial we've looked at adding another method in another property and also extending a bank account and demonstrating how we can create additional properties in here I haven't shown method but is exactly the same way as you do a property you just pop that straight into savings account and then that's unique to savings account however every method and property and bank account we can now use in savings account and I've also given a short example and so I encourage you to sort of play around with this create new methods and properties inside your savings account and bank account or whatever classes you're creating for whatever purpose you're creating them for play around and see what you can do and can't do and we can guarantee that after you've got the hang of this objectoriented programming in general will become a lot easier to grasp