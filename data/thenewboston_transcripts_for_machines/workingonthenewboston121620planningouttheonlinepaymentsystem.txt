all righty and apparently we are live let me get everything situated wait for it wait for it and actually let me share this on the old slack how you guys doing today or tonight whatever time it is oh wish i say in my slack message uh streaming working on the payments say working on online payments we've been working on online payments beautiful okay now what are we working on today online payments re james what up okay okay let's get to work so i don't know if you guys noticed but i got some lights now all right holy crap you're alive i am okay so anyways what i was planning to do today was work on our online payment system so actually i have it right here uh one second let me respond to some comments james welcome uh reed james okay two of them life king cole d what's up life of king from india india is representing here okay so anyways we are rolling out some versions of the marketplace and this last version is going to be accepting actual online payments but before we get that we're gonna roll out this version right here and all right so i'll walk you guys through the gist of it so whenever you log in uh there's gonna be a little login button right here so this is already logged in you're going to go to your profile and then you're going to see your test completed and your listings so this is the part that we're building out now the listings and the listings are just going to be any items that you have in the marketplace and let's see all right so this is all uh in being designed by the way so nothing's finalized i actually just saw this link in shouldn't even be reviewing it yet but i want to check it out okay so this is where you go to add a new listing actually why don't you just do this if i'm going to review it and if anyone has any comments leave them in the chat and then i can leave them on figma all right so you log in you go to your listings page and you see your listings now uh this is how the system is going to work where essentially whenever you are a new user you're going to have to have your products reviewed however once you become a trusted user like you sold 100 items or something then you can just add your items directly to the marketplace and this is so this is all new to me as well so let's go through together all right so this is draft means you're just started working on it you didn't publish or submit it yet this is live meaning it's in the marketplace and then this is rejected meaning something like well it could be something like porn but also some little things like if the pitcher doesn't match a description like if uh it's a bike and you describe it as a cat this freaking cat with bagels probably okay so all right just filtering okay now to add a new one hey what's this listing thing so this listing all right i might want to step back so the new boston open source development community is working on a digital currency and we are going to have a marketplace and let me see if i can actually pull up the marketplace itself and i don't know if we have it anywhere but either either way it's going to look pretty similar to this right here and our designer just submitted these wireframes for review so i'm just going to review them real quick in this little stream what i want to do is work on this online payment system but for now real quick i just want to go over this all right so adding an item you add your title images you can remove them one thing i don't see let me see if there's any with multiple images in here since i don't see a way if you upload multiple images then you can reorder them for example to see which one's your main image but again this is still early in development we really don't need to worry about that much okay price description title pretty simple stuff and then after that what do we got down here so pending tab how did we okay so this is for the admins i think but how did we get here all right so anyways this is okay so this is for the moderators and apparently they're gonna have another tab it seems like and then pending is right here any approved then you're rejected i'm oh so this is just to show you who the moderators are i suppose in their little stats it's interesting how okay very cool so i guess if you're a moderator you go to this review section see all your pending ones you can see the images title description the price the user and then you can accept and reject them i don't know what would happen when you rejected or approved because and this is the thing we were discussing last meeting where whenever you reject it if it's impending right now the moment you hit reject it should technically be in this reject section now we can just pop it out of here immediately and move it to the reject section but i don't know okay so hover very cool very cool when you reject you give it a reason why you rejected it so they got a little bit of feedback and it's pretty cool so if it doesn't fit one of the default then you can just specify your own reason okay very cool very cool very cool very cool all right let's go through these watching a lot manish what up uh is this part of the series with other crypto videos i haven't had a chance to watch them yet no this is just a random stream i had some work to do and i was like i don't want to stream it all right what's this listening thing for the marketplace oh gee traces of nuts what up use waves boxer okay mystics guy uh very cool very cool very cool okay all right now let's get down to business so what i would like to do in this stream is work on the online payment system so essentially when any website any store wants to integrate then they're gonna say like uh accept payments online and we have to build the back end for that right now now what i did before this is i actually researched some other um i don't even know what they're called payment they're not payment processors they're something like that but we couldn't really use their model or it's not exactly what we were looking for because a lot of the payment systems they accepted bitcoin which was the most popular one now the thing about this is that it can't really apply to ours because bitcoin takes 10 minute transaction times and we want our system to act more like a credit card not on the back end but kind of the feel of it where you have your order and then like you added items to your shopping cart and you go to the order screen and it says submit your payment here whenever we submit the payment we want it to like hit the users and hit the user's ui in less than three seconds probably so with bitcoin since it's so long it's a whole different flow in a lot of different other currencies as well in night strike bg said let's talk about consciousness you guys cannot get me off track today all right yeah so bip bit pay is one uh skylar and coinbase has one i think it's called coinbase commerce or something but yeah the the flows were just a little bit funky when i tried to port it over to our architecture so i got a couple things in mind okay so the main goal is to make this as easy as possible for the user the secondary goal is to make it as easy as possible for the developers so who's ever going to be integrating and of course later on this can be like any website shopify or whatever but for now we're just going to assume that someone has a regular site that they have control of the back end and the front end so another fun fact is that right now the new boston.com in that marketplace that we're designing it is using uh django django arrest framework on the back end and on the front end single page application with react and the first implement a little implementation of this is going to be tested on our website so all right let's get down to it beautiful beautiful bucky's back good to see you man saruvanthi good to see you too be using memo hey uh sky what is that uh memo method i i saw you mention in a couple times but i didn't uh see where you posted it or if it was a document or a slack message or what and lower the amount of keys needed all right so here's what i was thinking the crappy thing about accepting online payments is that unless you want to like rewrite a huge chunk of your architecture then you essentially need to do this whenever someone's ready to pay for an item you need to take their order information which is like eight products three of these two of those and you need to map it to a payment on the network now inherently these two things aren't related like someone's random products that they're selling and also like the blockchain network so what we're going to do is essentially create a new account each time since when you create a new account you get a random account number and that random account number can be linked to the order so basically whenever you receive funds in that account which match or exceed if they want to pay more than the order then you know that the payment's verified and you can send the items or like give them the digital download whatever you want to do all right oh the memo oh so uh mr skies yeah so just like your bank account whenever you have a little description with each payment some people call it memo some people call it uh notes i heard or even just a description so that's what he was talking about and yes we are working on that and okay we're doing two things and then i'll get to it we're updating the blockchain to include memos and we are also um updating the blockchain to include indicating which transactions are transaction fees or which payments are transaction fees so we can kind of uh just help filtering another cool thing i know i said that that there was one more than i was going to get to it but i was talking with uh christy and some other people about this where right now we have a very fast uh block time so whenever i send something over the network you're gonna get it in like a second or we'll just assume you're overseas a second or two now the cool thing about this is that because of that once we add a memo we're essentially going to have this public messaging app so if you just format the ui a little bit differently then you can send someone onecoin in a message and then it's it just essentially becomes a messaging app now if you add a little bit of encryption to that and i didn't get into any of this i didn't even it was just a thought but we essentially have a secure distributed encrypting messaging app so that's down the road a bit uh not what we want to work on now but yeah there you go yes okay stripe why not use stripe js api because they do not accept coins yet not like we've been talking or anything but uh one day i'm sure they will so let's see let's see let's see so i got a couple notes here and let's check it out okay so another thing that i figured is that whenever these stores sign up i don't want my camera to shake whenever these stores um want to start accepting payments we know that we're going to have to create a key pair and someone's going to have to keep track of that signin key however we figured that they probably don't want to do that because it involves either setting up additional tables in their database or setting up cache or some file system or something however we can have the banks do it and the cool thing about this is that banks are already set up on the network banks are already set up to listen for transactions and they're hooked up to all the confirmation validators where they can say if you were expecting this payment now we know that it's confirmed and the idea in my head although this is subject to change according to your guys feedback but essentially stores in online shops are gonna register with these banks and say hey i'm listening for this payment so the bank is gonna say okay i'll let you know whenever it's confirmed and then the bank is gonna be the one to create this signing key and account number and they're going to return that to the store essentially saying that this is your like um a payment code but it's just an account number and then the bank is going to be able to listen no additional logic needed it's already doing its thing and then once it hears a payment for that amount then it's just going to notify the online store and the online store can choose whether they want to use web hooks or whether they want to use web sockets the bank is pretty flexible in that matter so the store is just gonna stream that information down to the user and gonna have a pretty nice ui all right now uh ice cream says bucky come to india sometime i want to go to india i don't think americans are allowed in now because we've been pretty silly with the virus but yeah okay mr sky you can save time by just using javascript to run a check for a memo it would save you lots of lodging so i believe what he is saying is that okay so instead of just putting something in the description of the payment like hey this is for ice cream or something to put something related to either the like a order information now once the store would hear that then they would know that on this confirmation block which is a valid payment it was related to this order however it gets a little bit tricky there because the store is still going to need that information now that information they can't just listen to because they don't want to hook up to confirmation validators essentially they would become a bank however what they could do is listen for that from a bank but then i think they would still need to manage their own signin key would they and he said you can put the payment code you put the payment code was paid via the memo hmm oh i see what you're saying that the store is going to give you a like an order id we'll just say and then whenever you pay for that order on the client side you can let me think about this so whenever you pay for that on the client side you essentially listen for your own confirmation block and then you would forward that okay let's get this you put the payment code was paid via the memo and then they would scan bank cs and handle their own keys yeah another thing about the architecture is that we set it up to be pretty efficient where banks don't listen for your transactions and they don't really like save them in their database unless you are a user at that bank and they indicate if you are a user if you ever sent a transaction through them so at that point in time the online store would have never sent a transaction through that bank and the user also gets to pick their own bank so the one that the online store was typically using and the one that the user was using would be a little bit they would most likely be different banks all right let's see store generates a code uh we'll just say it's an order number scan blocks for memo transactions and amount yeah keyboard is a thing so that's another thing as well where i figure that someone could just keep saying hey i want to order something i want to order something like just trying to spam the network and then these online stores could just continue creating keys and keys and keys and keys but they would never be paid but it would essentially be a way to bloat the bank's database and re james says sorry for the dumb question but what is going to be stored on chain in these cases so the way that this is written in the way that i uh i'm going to show you guys is that we really don't need anything stored on the chains because as long as the online store is able to have an order number which has all your order information and they relate it to an account number then they can listen for payments on that account number and then once the payment is complete then you know that the order is validated so let's just go ahead and mark it out and we'll get up my lucidcharts thing and yes mr skype please uh can you actually put that into google doc and send it to me on slack it might work out and in the meantime i'll get going with this early version so i actually created this my own shape library and if you guys have never used lucidchart before man lucidchart is probably the only company that i would uh do a sponsorship for just because i love their software so much genuinely all right so we have a bank right here and i got on my little primary validator key pair look at all these little amy since bob seven dollars okay so let's get the client out here too right in the scaling oh there we go all right zoom out a little bit how do i join slack if you go to the website the new boston.com you can either click join community all right get notification here join community or on the home page there's actually a slack icon on one of those blue charts so pretty cool all right so let me look at my cheat sheet here which is just my own notebook okay so we probably need a new shape for online store what about this this kind of looks like a store and what font size is this eight i gotta make sure all my font sizes are the same or make me frustrated okay and what story should what color should the store be avi avi green looks good okay so check it let me think let me think this entire stream is just gonna be me thinking not talking at all okay so pay the bank for a payment account yeah like this so the client isn't really brought into things yet what the store is going to do is it's going to pay the bank and let me get my sweet little arrows so store is going to pay the bank for a payment account and should we bust out these keys yeah why not the keys are coming out don't even that big though come on bucky let's knock it crazy here okay so here is the idea and here's another thing lochtar i agree okay so this is another thing that we need to consider that whenever the store wants to register with a bank for payment services let me straighten out my cam that the bank isn't just going to offer these services for free they're going to want to have some incentive for why they would be doing all this work for the store so there are a couple different models that we can run with one is pay per transaction so essentially whenever the store has an order that they need to process that they would just pay like a coin or two or it would be configurable but whatever the bank wants to create or configure it as another thing is that the store could say kind of like confirmation services that it would be paying for time so maybe it would say uh let's if you process transactions for me for the next day or two then i'll give you 10 coins and to charm introductory video i can see on digital currency if you go to my youtube channel i have a digital currency tutorial digital currency tutorial series there we go but anyways in this model we're gonna assume that this store is gonna pay the bank like one coin each for transaction so this was my idea and then i want to get your guys feedback on it so what the store is going to do is it's going to reach out to the bank and it's going to say hey i have order i need process it so in that case what the bank would do and i can probably get rid of this let me ungroup this ungroup and get out of here phone and i will call this what should we call this payment account terminator maybe order account yeah let's go order account 10 and then okay that's a little funky size okay so general idea is that whenever the store reaches out to the bank then the bank is going to go ahead and create an order account now the bank is going to store the signing key and i did like this behavior because i don't think the store is going to want store the signing key uh oh okay i should probably mention this so the store is actually uh the back end let me bring it like this all right store api just to make it clear so this is a store api which is the back end and we might as well do this uh the client is gonna say something like i want to place in rotor so the client is going to say something like i want to let's say i want to order a tshirt so the client's going to say i want to order a tshirt to the store api and the store is going to reach out to the bank and say i need an order oh man this uh gotta make it purty all right there we go so the client reaches out to the store and says i want to order a tshirt assuming they already figured out price and everything and a car make sure it was in inventory everything's good to go the store's going to reach out to the bank and say hey i need an order account which is essentially a temporary account that the store can use so the bank is going to go ahead and create this order account which is essentially a new account with a new signing key the bank is going to manage the signing key since uh banks have to be secure anyways already hooked up to the network no need for the store to mess with it at all actually let me think skylar might have oh no not yet all right so the bank is going to create this order information and then let me see so the bank will store the signing key and that will be encrypted so then what we can do is and by the way in this flow uh how should i draw this maybe this is a bit easier take that move it over there move this over here here here you're here there there there and boom roasted peanut butter toasted oh that's pretty cool a new feature lucidchart okay so the client is going to say yo store want to order a tshirt the store is going to say you need a payment account the bank is going to generate that hold on to the signing key and by the way these two stores are the same they're just different here because if i keep drawing arrows to the same object and things get kind of messy so just know that all right so what the bank's gonna do is create that and then it'll take this account number and send it back to the store now the store needs so the store is going to need to for this account number to the client because that is the account where the client needs to pay so the store can get that and this is all just going to be http let me move this over here actually so client makes a request to the store this is interesting so how long is is this fast enough to just stick over http or https i guess it would be but i'm thinking if we need a websocket in here where when the client reaches out the story they create this going to make a request to another server they're going to create an account number no additional requests needed so this should be very quick and they're just going to respond with this and it doesn't even involve querying the database or anything so yeah we're good right now this should take less than a second ideally and dave love said so it's not a store where you buy shoes it's the back end so this would be it could be a store where you buy shoes it's essentially just the um api it could be a shoe api all right so then the bank creates the account and then the store might put on some additional information and then the client will see this account number and they will know what to pay all right so let's put some text in here we can say um pay 100 coins to account abc and we'll say that this was account abc all right so new account abc gets created and the store let me do this let's think of everything we need all right very cool so the store already have the order information and we'll just say that everything is contained in order one two three the account that it has to pay is this newly generated one which was account abc and the amount that they need to pay is a hundred coins whatever the items cost now huh okay this is where things get interesting so let's map this out first shall we huh because we're gonna have two payments going on here the first is that if we decide to go with the architecture where the store api so we can go with it where let's say that the bank wants to charge one coin for every order processes so hmm this is interesting as well so let's say that the bank is going to charge one coin for every order that it processes if that is the case so earlier i was thinking that the store whatever the online store was would have to submit a payment to the bank first and then once the bank accepted that payment then they knew that they could kind of uh follow along and process the order information but now i'm thinking that it may be easier just to tack that payment onto the users payment so if they were intending to pay a hundred coins for something let me zoom in here so you guys can see as well so if they were intending to pay 100 coins for something then the store might just charge them 101 and then whenever the bank received that payment they already controlled the signing key and the account number and they would send a hundred to the stores account their separate account and they would send one to their own now i guess the only downside of that is there's a potential that the transaction fees from the primary validator might be more hmm okay so we got a okay we got a couple funkiness going here said have the bank respond directly to the client rather than going through the store api twice so that would be possible so something like this where if the bank responded directly to the client so if this information of transaction improve went right to the client then the client would still need to submit that data to the store somehow and let me open up what mr skye sent simple payment processing using memos the idea is to scan the chain for memo codes that are made for transactions surgery's payment transactions which should have matching memo code memo memo code and then the stores back in scan for its account number amount and memo code okay so so for this so sky will this be a new account that they generate so store generates payment transactions what should it oh i see so they translate uh or they create that section of the block and user sends fun to the address uh what is this a newly created address uh one second we might have some people asking questions about here okay so the store has a main address and they just keep that address throughout the entirety of their existence and they will have a memo code which is essentially like an order number and the user sends so the store generates that portion of the block and it puts the memo code in they give it to the user and i assume that the user can just review everything to make sure it's legit the user sends funds to the address putting in the memo code all this information so they would see a form that looks something like this with i'm sure some stuff would be prepopulated the stores back in will scan for its account number okay now this so the store itself can connect to any bank and listen for those notifications those confirmation blocks for its main account number just like you can on the account manager yeah so i don't even know if they would have to do any proactive scanning if they just hook up a websocket and listen storing the full transaction having the bank generate new keys will cause chain bloat this is definitely true okay lowering it to just scanning itself this requires complex well okay i like that you don't create anything new and you scan there's nothing there then you means you didn't get paid the banks are being paid each transaction regardless of method used for the store to keep an eye on its own keys so i guess in this case the store would never need a secret key online because you can just generate your account locally and then add that account number to the store for the address that you want to be paid to and then no signing keys would ever have to touch the public network at all so this could work now that we understand the basic process let's go ahead and pick some holes in it if we can find any and also what do you guys think about this it is a scan chain for memo codes that are made for transactions okay so the store puts an order number again i just went through this but i you know it's uh it's a big project so i want to make sure everything's perfect so the store can essentially generate the entire transaction itself not the block and not send it but it will generate all that useful transaction information for what fees should go to who now here is the thing so the user is going to be using their own bank assuming that they put pay from their phone or account manager or whatever so the store is going to know the primary validators fee however it's not going to know the bank fee so the bank fee is going to be it's going to be known by the app so that's irrelevant coins are going to be so pretty much everything is going to be prepopulated okay very cool now the store okay so here is the thing chares ali let's see let's see oh what i get is we would want to have some sort of clone of account manager as chrome extension we received the amount from cart and add that order id memo to it yeah even if we don't get fancy on the ui it's really just sending coins to an address and sticking in a memo code so worst case scenario they have to copy and paste something three times okay like the account manager and bin connection can be left for the user to select you know what this actually might be pretty easy the core logic of this is just like the account manager where the store instead of a user already gets notified of all its incoming payments and then for each incoming payment it would just have to keep track of the order id or the memo code and then i guess it would involve a little bit more logic because if the user wanted to split it up across multiple payments like if something was 100 coins and then they wanted to pay 70 from one account and then 30 from another account then the store would just say that this is pending or partial payment received until the full payment was good to go okay very cool so it's going to listen that so i guess uh on this the store can either long pull if it doesn't want to mess with web sockets or it can just uh hook in to its normal account any bank using a websocket and then process it that way okay so mr skye is saying that they could still use the same membo memo no matter how many wallets they used to fund yeah so memo is essentially just saying what order is this for and as long as you have a confirmation block that you can send to the bank and i mean excuse me to the store for their account with a memo saying that it's for this order number then you should be good to go can anyone find any holes in this logic greg youngers okay so let's diagram this up so i don't think we need this come on thing scrolling all around all right so the client is going to say to the store i want to order a shirt and the store is already going to have an account number so it's going to respond by saying send amount to send a hundred coins to we'll just say uh account store one two three order number abc okay if you want that tshirt then you're gonna have to send let me separate this so send a hundred coins to store one two three in reference and i'll put memo here order number which it will be the memo would just be abc so what the client would do and take note that in this example the client in the store and not only in this example but in real life the client in the store would most likely have separate banks and we can keep them separate anyways just so we can kind of diagram out the most complex flow and then everything else should be relatively easy so the client is going to do is it's going to go to its bank include that's not what i wanted to do so the client is gonna send it to its bank and i think that's all the client actually has to do cloud up in here we'll say this is the network okay so the bank is going to send their transaction to the network why is this turning blue let me look at comments alright goldengamer yo may please play make a quick recap on the whole project we are trying to do i don't want to spend an hour trying to understand what we're doing are we hacking also when is the day we use the plan so i guess um we are working on a digital currency and in this stream we are planning out the online payment system so online stores and shops can accept payments for coins all right so this flow we have a client who wants to order a tshirt so they say hey store i want to order your tshirt and the store says yo yo if you want this tshirt then send 100 coins to this account and make sure to include in the memo the order number which in this case is abc so the client says i so it formats that transaction and sends it to its own bank which gets processed on the network now over here what's gonna happen is you're gonna have this network which for some reason is more bold of an outline than this one what's going on with that that's bugging me all right so this hmm don't know what up of that but yeah an online api okay wouldn't the store request from the bank uh yep so it is going to so come on arrow all right something's funky going on with my arrows okay so on the other side of things and actually throughout this entire process the bank is going to be listening for this transaction what is going on with my lucidchart all right so the bank's going to be listening for this transaction and then once it gets it i may want to separate this out and let me uh i want to read these comments frequently i know it's uh some of you guys don't enjoy when i'm reading comments but i want to make sure i didn't miss any detail so what is the currency going to be called it's going to be called coins we're going to keep it nice and simple and also i called it units first just when i wrote the original white paper which later turned into docs and then we were thinking of uh some other things as well but eventually everyone just started calling it coins like hey how are your coins doing or send me some coins whenever we're developing so it's just like okay seems like a natural good fit in love karsh says the client will make the payment on store website once payment is done bank will get feedback to store website for a successful payment why not chart out how an online transaction currently works and then enter digital currency part of the process into that chart so our architecture is quite a bit different so it wouldn't pour over so nicely and i'm getting notifications from david saying i'm alive now okay so anyways client makes payment to the network payment gets verified confirmation validators send down confirmation blocks to the bank the bank is going to route that to the store and the store is then going to receive a confirmation block for payments yeah i really don't think it's that hard sky did i miss any key points the project stream do you have a quick second to explain it very briefly so yes in this stream we're just working on our open source digital currency okay very cool now we can probably start coding this huh so now we have to add memos in all right so mr skye looks correct store makes memo client sends dress bank verifies now one thing that we do have to do is this in the actual ui how is this going to work where the client says i want to order a tshirt since i'll show you guys the ui right now sec let me get my window up all right now let's think about this practically and let me hmm i don't know how to add another screen in here let me remove this for a second uh stop screen share screen application window account manager okay so let's walk through this where i go to a website i go to a website and i see a tshirt and then it says okay if you want this tshirt then you're gonna have to send me um a hundred coins to store for this order number so i'm gonna go to my account i'm gonna hit send coins and then how tedious is this gonna be so i'm already gonna have to paste in the account number that's cool and then i would just need to set the amount 100 and then make sure i had another field probably a text area or input for the memo i actually think that's not that bad so i guess the only change in the flow would be the memo and then i send that and then what happens is i hop over to the site and then i would see a spinner or something and then when it's paid it's paid it's pretty cool all right very cool i think we got our architecture down so first of all thank you mr skye for that uh we really need to get on this alright alright alright alright alright so i think what i need to do now is now that we got the main diagram in place the main flow what i need to do is take a little bit of time take a little bit of time and plan out the uh coding architecture so dars said scan a qr code or send them a link that automatically populates the data and memo memo can become long it's not a bad idea either so yeah we can definitely have a qr code and i think qr codes have enough data storage where they can store all this information but yeah so we'll keep this uh stream a nice little mini stream and we're gonna roll with this and i'm gonna take a little bit of time and architect how this is gonna fit in i need to dig through some code it may not be that interesting but yeah i see another comment where bitcoin yesterday broke alltime high i think it was over 21 000 so that's pretty cool uh big fan of that okay so i'm gonna get going and i need to do some other stuff too some more boring things one more question can i explain okay so uh yeah like i said nice little mini stream and i will probably announce my uh next stream another thing is that i do want to keep this youtube channel mostly focused around uh programming tutorials and not be like a stream heavy but i am going to be streaming on twitch quite often so if you guys are interested in hanging out watching these streams which is mostly going to be around like uh planning the architecture building things for the digital currency network i'll keep my youtube more geared towards what people are more interested in but go to my website uh find the twitch in the community or social section and then yeah let me actually send you guys a link real quick before i peace out one second one second okay so my twitch is this www.twitch.tv slash the new boston that's the theme song just made it up all right so anyways yes i will see you guys hey might not might even stream later tonight who knows all right so thank you guys for watching and i will see you guys later