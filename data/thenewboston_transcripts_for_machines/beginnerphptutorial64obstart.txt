hello this is Alex from PHP academy' org with another video for the new Boston in the last tutorial we looked at the header function and how we can use it to change headers and we use the more common example of relocating a user to a specific page now we're faced with this problem where we have output before our page or before our PHP code therefore this header functions returning an error so let's just have another look at that we're saying cannot head a kind of modify header information headers already sent by this page and we're saying on line eight so we're calling this on line eight now there's a simple way to resolve this and to solve this problem we use a function called OB underscore star now this stands for output buffering start and what this function does is it turns out put buffering on now I'll show you how we write this in our program or our code rather and then I'll tell you a bit about the function and why we have to use it and what it does so I'm going to create some PHP tags as well up here before my output and also before the code that uses the header so this is going at the very very top of my page before any output and we use OB underscore start just cool simply on its own with no arguments applied you can also pull this up a bit so it looks a bit neater so it's all on one line okay so OB star will not output any and anything on the page what will it will but it will be the page output will be stored in an internal buffer rather than as headers so if we have some page content on here let's say my page this is my page let's just uh let's say redirect equals false so we don't do a redirect and let's run the page so before we have this cannot modify header information with a simple change up here ob start actually yet let's change this to true so we do redirect with a simple OB start called at the top when we refresh now our page is going to redirect so if you're receiving this error and that we've had before we use this let's just get rid of that if you're receiving this error here then you need to consider using the OB start now at the end of the page it's always good practice to use another function which will clean the output so we say OB end OB and clean and what this function does is clears the output buffer but doesn't actually give us any contents back so when we refresh this that's still going to redirect and if we change redirect to false so we're not redirecting and we refresh go back and refresh okay so if we use OB and flush and we refresh we get the page contents out so if the redirect is false we're not redirecting but we're still displaying this even if this is not redirecting if you are redirecting the page if you're redirecting the page you'll just need a B and clean and what this does is it won't output anything on the page there's no need for that so OB and flush will put well okay so OB start is storing the output in an internal buffer an OB and flush is flushing this buffer but then producing the contents back onto the page however the way you think about it if you was a logo user out you don't really need to display anything you just need to redirect them maybe to a thank you for logging it or you know see you soon page or something so as it stands this is like this then we change this to true and we successfully redirect the user to another page this can also be an an internal file as well you can say page equals index dot PHP or page equals bi dot PHP or anything so it doesn't have to just be a URL it can be a either your URL or a file within your web server