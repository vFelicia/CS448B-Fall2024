hi this is Alex from PHP academy.org with a video tutorial for the New Boston in this tutorial we're going to be looking at the hide effect in jQuery now the hide effect allows you to call this function uh appended to a specific element on your page in order for you to hide this particular element essentially what this does is sets the visibility in CSS um so it cannot be seen so it's not visible so what I've done is I've set up a basic page and we're going to create a couple of elements and then use this effects. JS file to trigger um the click of a button and then hide these specific elements so the first thing we're going to look at is a plain div so if we create a div and give it an ID of aore div and we write some text inside here when we go to our browser and refresh our page you can see that we've got just some text inside here now let's go ahead and create a button at the top of our page and we're going to be able to click on this button and hide this particular div so let's go ahead and create the button so we need an input type button and we're going to give this a value of hide and then we need to give this an ID as well because we need to use an event handler to actually well for when the user clicks the button um we need to handle this event so I'm going to call this a button so inside effects. JS which is included on my page as well as jQuery we can go ahead and start writing the code so the first thing we want to do is actually handle the event when this button is clicked so we use hash because we're referencing an ID and then we write a button then we say dot click which is the click event handler so when we click on the button this is what will happen we produce a function from this and inside of this block here um we've written the function out with a parentheses at the start of the block and the end of the block inside this function here we write our code so now what we want to do is we want to actually hide this div so the first stage of this is again to actually reference this element so I'm just going to write hash referencing this by it ID and the ID is aore div then we use dot to actually carry out the hide function so if we were to just write do hiide and then empty parentheses um you'll notice that when we actually press this button the event handler is called and we actually hide this element so let's go ahead and test that you can see that the element has disappeared from the page so now that we've hidden this div there are a few parameters that we can give to this hide function in order to change some settings the first one is the speed in which it progresses and we can even either give this in a textual representation or a numerical representation for example we might want to hide this fast now this will automatically um this will automatically show uh some kind of animation with this uh the hiding of this so when we click hide you can now see it sort of scrolled up into the corner now if we were to choose slow for example this will slow down the animation and you can see that it slides up slightly slower now what we can actually do is give a numerical representation in mincs so if for example I was to choose 1,000 this would represent 1 second so now when I click hide it takes 1 second to disappear we could obviously then increase this to say 5,000 which would represent 5 Seconds when we click hide you see it very very slowly disappears now there's an optional parameter and this is the easing um of the animation so let's just choose slow for now easing by default is at swing um but you can choose linear and what this does is it just changes the way that the animation happens and the easing of the animation so if we were to choose linear we get a slightly different effect uh and it it hides it slightly differently um let's just test that in our browser and you'll notice that it's it's quite hard to notice with short pieces of text um but if you were to compare them with say larger text it just eases the way the animation um starts and ends now furthermore there is a third parameter we can give this and this is the coolback function so if you wanted to feedback something to the user once the animation had been complete or once this uh div in particular had been hidden you can then append a function onto here so if we create a function and then again and a start and an end block and we just bring this down to here what we can do is then we can do something that will carry out an action that will tell the user that we've successfully hidden this element uh once the function has been called so I could say for example element hidden so so what will happen now is once we've clicked this button the element will be hidden slowly and in linear fashion it will then use a callback function and this will alert the user that the element has been hidden so let's go ahead and test that out when we click hide you can see that after the animation completed we have this alert box element hidden now the reason we have coolback functions is essentially so we do something after a particular element the majority of functions in jQuery support uh callback functions so let's say for example you gave the user the option to hide a particular element but you wanted to save this later on so when they logged back onto your website it would actually still remain hidden you could use a callback function to perhaps add a value into a database uh table or in fact you could store this in a session so there's a there's a um wide variety obviously of use for a coolback function it just depends on if you need it and what you're going to do with it