what is going on ladies and gentlemen welcome back to another fantastic tutorial series my name is Bucky Roberts and in this course I am going to be teaching you guys how to use react with Redux now before I go any further I just want to mention this in order to understand what the heck is going on in this video series you first have needed to watch reactjs tutorials for beginners this is my very first intro to react series and in this series I teach all the basics of react what it is what it's used for all the fundamentals so once you watch this tutorial series you are ready to move on to this one so this one is kind of part two in a way so like I said this one is going to be covering react and Redux now before I get into what the heck Redux is and why we need to use it I first need to talk about a little problem that we have whenever we try to develop a single page application so that's kind of what react is it's a library for making single page applications now this website right here it isn't one this is just my website the new boson.com but say that I was thinking about making this a single page application so all right I need to kind of start planning everything in my head so let me just talk you guys through this so I know that whenever we use react the different parts of your website are pretty much just called components and and each component has a little piece of memory with it and we just call that state so this playlist on the left I could probably make that a component and then this video player right here could definitely make that a component um maybe this progress bar and these buttons that could be one and maybe this little input form right here that could be a component and all of these different components they each would have their own State their own little chunk of memory to manage for example what videos to display um how far the progress bar was you know blue and how far it was gray and maybe this form needed some state to remember what user was posting what question so basically if I'm trying to plan this in my head I'm thinking of all the things that can go wrong and all the things I need to take care of already I mean the user they're going to be doing a bunch of stuff they're going to be clicking buttons they're going to be favoriting videos they're going to be asking questions right here and then of course I have to manage all my States I need to have a state or an object to you know keep track of all the videos and then another one for the active video and then another one for the progress and then okay there's just a bunch of stuff a bunch of different parts I have to make and on top of everything on top of everything once that's all done I need to figure out how everything's connected how everything communicates with one another how whenever you click an item in this list it displays a video right here and you know what I decided that this is just way too overwhelming I can't deal with this I'm just going to go watch Orange is the New Black for 16 hours like you usually do and you know what I'm done programming I I can't handle this well what if I told you guys that there was actually an easy way to set all of this up that no matter how big your software project was no matter how many different pieces you had involved that you could actually architect this or set it up in a way that you can manage everything easily so even though you may have a bunch of different components and they are all communicating with one another and connected in these weird kind of ways that you can actually set this up to manage everything beautifully well ladies and gentlemen that is what this tutorial series is about and that thing is called Redux so what I want to do now is I kind of want to give you guys a really brief overview of Redux and talk to you guys about all the different pieces and by all the different pieces I mean like there's just like seven different pieces so it's going to take like 3 minutes but at first if you guys are like you know what this is just it just looks like a overly complex way to manage your piece of software well this is the cool thing even though it may seem kind of confusing at first the thing is like I said no matter how many pieces you decide to add to your application later on no matter how complex you think your software is going to be it all still fits in the same architecture so at first it may look a little overwhelming but this is as complex as it gets no matter how big your app is this is all there is to it so with that being said let's go ahead and get started