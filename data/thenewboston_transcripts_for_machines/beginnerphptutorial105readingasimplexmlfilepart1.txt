hello this is Alex from PHP academy' org back with another video for the new Boston so you'll notice that if you've already watched my introduction to XML video you'll notice that I've already have retained the structure of my example and I've put it into a file called example XML so I've put it into an XML file and what we're going to be doing in this tutorial is just reading in different elements of this data so you can see that we've got our root tag here which is important this must exist in every XML file you create we've got our producers as a root tag and we've ended our root tag obviously at the bottom and inside here we've got a tag here called producer and we're ending it here and we're doing the same three times and inside we've got elements name and age for each producer so what we can do is we can inside PHP once we've opened this XML file successfully we can say grab the age of the first producer or the name of the first producer and vice versa weakens or so on and so forth we can say name and age for the second producer or the third producer and what we're going to be doing is inside out in next PHP file we're going to be loading this file in and accessing it as if as if it were an array we're loading this in as an array if you like or rather each each element in this or each level to this we're going to be accessing using this symbol here so we've got a hyphen and a greater than sign and then each each child if you like so we've got producer here and so on and so forth into it so you can have many parents and children blah blah blah we're going to access using array so let's go ahead and open up our file I'm going to create a new variable called XML and I'm gonna be using this function called simple XML load file now simple XML a new feature introduced in php5 that allows us to open a XML file using this function and really easily access each element of our XML file so you'll see how simple it is in just a moment so here we are going to specify example dot XML so now we've successfully opened up our XML let's refresh our page and see what happens so we've got nothing at the moment because we're not returning any values so now let's start to think about returning some values so we need to think about this carefully we don't need to include this producer's root tag anywhere because this is just a root tag of our document it's not important but what we can do is access each producer now because we've got these tags here and then elements inside so let's go ahead and say XML in fact what we'll do is we'll say echo XML and then we're using a hyphen and a greater than sign now we're going to say producer because this is the name of our tag here and you need to remember that within XML everything is case sensitive so if this producer here had a pay the same with this one here or capital P rather and the same with this one we need to give it a capital P when we go to access it and inside here let's just save that father okay so XML producer now we've got square brackets because we're gonna choose which producer we want to echo data for so eating the producers ear over and then we're dealing with arrays so we've got 0 1 or 2 so just for an example I'm gonna leap straight to the second which is going to be 0 1 so let's put a 1 in there and now we need to access the tag that we want to display so I want to display the name and the age of this second producer so now what we can do is say no then we can cast it on here we can say age oh sorry age okay so that's it that's all we need to do let's go back to our more let's recap what we've done so far we've opened up our XML file we have echoed out our XML producer and the third and location one which is the second producer remember we start at 0 and 1 and then we're coming out the name and the age which are the two tags inside here so let's come and refresh in here undefined constant age let's have a look at this oh yeah that's because yeah that's because we've put a space in there okay that subs that you find what we can now do is just say age there as well I believe work No okay so we'll have to we have to redefine this here so we'll have to say echo out the name and then we can concatenate on I think we probably concatenate on XML producer one age so let's give that a refresh and see what happens okay yes so now we've got Billy and then 16 so let's just put a space in here so it looks a bit nicer today is even so we've read out the we've read out the second producer from this file and we've read the name in the age so however many tags we add in here we can we can produce them to the user so now you hopefully are starting to see why this can be useful we're transferring over data in a structured format that can be read in using a program like pH or sorry code through PHP it can also be done with other sort of web web development languages and it could also be done with software so it's a really really useful tool okay so now what we want to look at is how we can loop so we can produce the names of all the producers so let's get rid of this code what we want to say is we want to say 4h so we're using our for each statement here and inside here we can say for each XML producer as and we could just give this a variable name so I'm going to call this just produce up so for each XML producer so we're using X ma to open the file so for each one of these producers which we've named as a producer we can grab this data the specific data that we need so what I'm gonna do is I'm gonna say echo produce over and we're just referencing it from this producer here for each producer as producer with air coming out the name first of all Oh name and then we're coming out produce age so we're saying we can pop the space in there is and then on the end we can just put a line break so for each of these producers in here produce a one two and three at location 0 1 and 2 we are echoing out the producer name and then we're saying is and then producer age using this variable here for in our for each so if you don't know how for each loop there is a tutorial on it go back and have a look at that and that would make sense but for now if we refresh you can see that it's produced all three so now you can really start to see how useful this can be with things like YouTube videos in the example that I used in the introduction to XML I showed some showed some YouTube XML output now what if you wanted to display say all tweets from a selected user on Twitter or you wanted to show all videos from a selected user on YouTube you can use exactly this to do that because you're loading in this XML file and you are showing the output using this kind of loop to take each producer in this case as a single variable and accessing each element or each tag of this whatever you want to call them in in sort of like a couple of lines rather than that in individually so you might want to say add in now I mean we've defined our structure we've defined how this is structured so we know how it's structured but let's add another producer in we've added another producer in now so when we're reading back this data we're then just updating the data without knowing this how many elements are exist within this structure so the whole point of this simple XML tutorial is showing you that no matter what structure we have within what as long as we know the structure no matter how many different pieces of data are in there we can grab every single piece of data and do whatever we want with it echo it out store it into a database store it into a file put into another XML file or like I said before just simply echo out to the user and display data like this