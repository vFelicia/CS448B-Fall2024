already all welcome back to another video and now that we have the basic application framework taken care of in other words we have an icon that we can click and it displays the app what I want to do now is start building out the UI now when creating apps I like to build out the UI first before I write any of the like JavaScript react Redux logic and the reason for that is because once I have the UI and then I go in and start you know testing out building out all the logic the UI X is like a really clear visual indicator to verify that these things are working correctly now some people write the code first and then add the UI and after that but for me it's just a lot easier to build this way so with that said like I said I'm going to be working on the UI first and the way that I'm gonna approach this is I am first gonna write some very basic containers just to get the main structure kind of appearing on the screen and then once I have the main structure then I'll go back to each of those components and start styling them with you know the right colors and font sizes this and that but kind of like building a house you build the framework first or the foundation in the frame and then you can go in and you know paint the walls and add the carpeting so and so forth so with that said I'll show you how I am going to lay out this basic structure of course this main container right here I'll keep it a flex and what I'm going to do is just stack everything up into a single column and for those things that I'm going to stack I'm going to break it up like this I'm going to have one container that's gonna contain all these components and I'm going to call this the top and then under that I'm going to have this container which I'll just call probably connection status now under that I'll have this and this is going to be a simple one I'll call it the main button under that I'm going to have this timer and then under that I'll include all of these components into one container called history so one two three four five I would say like main containers that we have to build and then once we have that like I said I'll go back in kind of uh style everything looking nice and pretty but that is what we're gonna do so let me go ahead and get started all right so to do this I'm gonna go in my speed test and go in containers now the first one that I want to build is just called top and that is going to be for this or should I say these items right here and for making uh this container again I'm going to Nest it inside this containers directory and for each of these I'm going to create this component file and we already talked about what all these are the only thing I have to do here is just replace this component name with top and this is just going to be basic text right now and then this is also going to include a Styles file so once I have this very generic container I'm going to go ahead and import it into my top level container right here and in order to do that I'm just going to import top from apps speed test containers top all right so this is pretty much what I'm gonna do for all of these kind of top level items I'm going to make one more real quick just so we can kind of get the hang of it and then I'll probably just fast forward the video so you don't have to see me do the exact same thing again and again and again but you know you can just stick around with me for a little bit so under this top section right here we're just going to have this connection status so I will call this connection status and actually copy this because we're going to need it in just a second so of course same as the top directory it's going to contain two files one is this component file for index and then it's going to contain a Styles file which we're going to be filling out a little bit more later on but that's good for now and I can just copy this as well all right so we're going to import connection status from this location and all right so right now these are appearing side by side and that is because this top level Styles file or let me actually close this up so this is my top um level component and this is the related Styles file and by default whenever we display by Flex they're displayed in a row but we can do Flex Direction Chief Flex Direction column and that's going to make sure that those elements appear stacked on top of each other rather than side by side so now that you kind of get the basics of what I'm going for build out simple containers just for now and just plop them all in this top level one I'll go ahead and fast forward the video so you don't have to you know see me doing the same thing all right so we have the top then connection status then it's going to be the main button under that and then the timer right under the main button and then at the very bottom we're going to have that history table and there we go so now let's just check okay so our top section connection status main button timer history beautiful now I know I said right after this what I was gonna do is go through each of these components one by one and kind of do the HiFi styling of each but before I even do that let me just kind of Shuffle things around a bit and kind of lay these out so you know kind of the spacing between them is a little bit more realistic I also want to bump these up to the very top since you can see by this element I want the very top section to appear at the very top of the app and not just floating in the center so let me go ahead and do that right now so to get all of these items floating to the top of this div what I need to do is go in my Styles and for Justified content Center this is actually going to be Flex start and that should bump it to the top beautiful and I also want to change my background and let me just copy some of these colors from one of my older projects so the background color I'm going to have this blue right here and for the primary color for this fonts I'll change that to this white color again I just have uh one of my older projects on the right side of the screen right here that I'm just stealing some styles from and another thing that I want is for the height to be a little bit taller than the width so for the height again all of these are probably going to be finetuned later on but for the height I'll say 80 and for the width I'll say 60 percent and since we are using percentages this is going to be kind of um relatively to the parent or responsive in a way but yeah that looks pretty good so far and I also want to add some padding so padding say 24 pixels and another thing that I want to mention is that even though I'm hard coding in these hex values right now what I'm going to do once all this is done is I'm going to go and convert all of these hardcoded values into like a color theme in that way we for example whenever we change the text color or background color we don't have to go and change it in all of these we just have to change it in that one location now normally I would do this beforehand for example if we had a designer and they had a style guide I would lay everything out beforehand but since I am the lead developer and product manager and designer and everything in this it doesn't really matter that much since I'm the only person working on this code so this works for now but again if you're working with the team you probably want to standardize these things a little bit beforehand so okay you got that padding a nice layout so now what I want to do is go through each of these and just get the basic spacing for it so for the connection status this is going to be a little bit far away from the top but not as much as the padding so maybe 12 pixels from this top section so the connection status the styles for it I'll just say margin top 12 pixels all right looking better now for the main button we probably want this quite a bit aways from the connection status since it's like the the center item the main piece so I'll say margin top 48 pixels how's that look all right not bad not bad for the timer we can do 12 pixels on that's and for the history to try 48 and then we'll see how everything looks together margin top 48 pixels and how we looking all right pretty good so yeah just to get like the uh generic spacing again all of these are going to be tweaked but once I start styling everything I want it in roughly the general area that it's going to land up so all right now that we got that taken care of let's go ahead and start with the top and kind of dig deep into the styling of this so let me actually make this a wee bit bigger since we are going to be styling everything and all right so I'll show you how I'm going to structure this top section right now so this top container is going to contain both of these elements right here however the way that I want to structure it is kind of like this so I want to have a card and I'll have the card contain these components so I'll have a card on the left and a card on the right and just to kind of show you this let me send this to back and get some background in here something like this so this will be a card and I'll have two of these don't mind my uh chaotic styling right now but in one of these cards I'm gonna have the network info something like this so in one of the cards I'm gonna have this or excuse me the account info and the other card I'm gonna have the network info and then both of these cards I'll render in that top section right there but this way I can kind of split everything up correctly so I'll make a card component and then I'll also separate this into its own component and the reason that I'm doing that is because we are reusing these kind of cluster of elements right here and we also have it right here and in addition to those two places for the account in the network whenever we click this pencil icon and we need to select from one of our devices or accounts and networks then we're going to be using that same exact styling again there but anyways because we're going to be reusing kind of the same generic layout with the logo on the left and text on the right that's why I'm kind of splitting everything up that way but for right now I just want to make these uh basic cards and then we'll get our top laid out just close everything close all and then in our top so in here we are going to be sticking two cards and we'll style those in just a bit but before we even do that we can actually just style this so I'll say it's going to be displayed as Flex and we don't need to do Flex Direction column because by default it's a row and we want those cards to appear side by side now another cool uh it's not even a trick just a CSS property is a gap and what this allows is well it's actually a pretty good description it's not what I meant to pop open one sec okay so this Gap property in Flex elements is just the Gap that appears between these items right here and I actually didn't know about it till recently before what I used to do is I would say like the left card has a right margin of 12 and the right card has a left margin of 12 and it was just kind of a pain so whoever came up with this property uh thank you for saving me a lot of time and then aside from this I just do want to do Justified content Center and the last thing is just width I need to explicitly say this is going to be 100 and the reason for that is because this top I want this to expand basically the full width of the parent so the cards kind of take up the full space and aren't just floating in the middle I just think it looks a little bit better that way but anyways this is how our cards are going to be laid out and now let's go ahead and create those cards components so the way that I like to structure my applications and I'll show you how I did it in chat is I have the containers directory right here and that's the one that we created in the last video and I also have a components directory and I think a lot of react applications do this but the standard that I'm going for is that containers are typically the higher level components that are typically hooked up to Redux now components are again these are all components but as far as naming convention goes these are going to be um like display only components and when I'm writing components even though I break this rule sometimes I try to pass in only primitive data only so strings number so on and so forth and it just kind of helps separate or organize things where all the Redux is in here and all the display is in a directory called components so I don't know it's been working out so far so let's go ahead and follow that design pattern so I'm gonna make this uh directory called components and in here I'll make our very first component and that is going to be top card so this top card component is just going to be like any of our other ones oops and we'll just make a dummy component right now with some styling that we will fill out a little bit later on but yeah this is good right now I just want to have something that we can import and show on the screen so we'll say import top card from apps speed test components top card now that we have that again we're going to have two of them one for the account one for the network and this is probably going to be a little bit funky until we get some background action going on here but there we have our two top card components and these are both displayed in the top container so now that we got these let's just go ahead and uh make the styling a little bit prettier now before we hop into our style file let's go ahead and think about how we want to structure this so actually in addition to all of these I do want one other thing in here like a heading of sorts so something like this so this is going to say a device or account something like that and then this one right here is going to say Network but I say this because whenever I'm structuring this top card and deciding what props to pass in what we'll do is we'll pass in two props the first one is the text for the heading and the second one is we're going to be passing in whatever react component we want to display Under The Heading and we'll just call this content or something and the reason that I want to pass in a component rather than all these individual pieces is because whenever we let me copy this and show you whenever we first boot up the app for the very first time we're not going to have any network selected so we're gonna have to have some empty state all right come on all right so we're gonna have to have some empty State and I don't know exactly what it's going to be but it's going to say something like uh select Network I don't know maybe it's going to be a link or something like this but either way um by allowing us to pass in a component rather than like a logo and this and that and uh an action icon we can just say give me a header give me some content to display under and then it's going to be flexible enough for both of our needs so because we'll keep this here for reference and okay so pop in back open the top card pretty good huh all right now let me actually go ahead and write these style components first so the first thing that I'm going to want to do is create that heading and I'll say this heading can we can make it a heading but I'll just go ahead and make it a dip for now maybe not the best practice but uh yeah just the way I styled this and now let me go ahead and copy this color from my other project and I'll say the font size can be 13 pixels and the font weight can be 500. all right now to use this for the heading even though we're going to be passing in a custom prop which is going to be a string for this just to get something appearing on the screen I'll say heading right there and let me just make sure this okay good to go and now under this heading is where we will have our content so the contents we don't want to add too much styling here since we really want the uh the component that is passed in to have all the styling but we do want a little bit space between the content whatever our component is that we pass in and the heading so say margin top is 12 pixels and then just do something like this content here and let's see how this looks all right so these are our cards we have our heading on top and again this heading is going to be it's going to be either account or network whatever we decide and our content and all right so before I go any further what I want to do is actually just style this card as in the entire container and let me do that right now so the container or the card itself will say that it has this slight blue background there you go I don't know if you can see it yet but uh this card background has a slightly different shade of blue than our main or primary background and then after this I want to add a border radius as well since uh the square cards weren't looking that great and let's see yeah let me just display as Flex because we have two items in here the heading and the content and they are always going to be displayed in a column so might as well just kind of standardize so display flex and then I can do Flex one to stretch it out the flex direction we want to make sure that's a column because remember by default it's going to be a row since I want those elements to stack on top of each other there you go and for padding so everything isn't just butted up against the edge we'll do 10 pixels 14 pixels and we'll see how these cards are looking all right looking good look at that okay so I think this is pretty good right now for these top cards hmm actually what I probably can do is I can create the element for this huh so this is actually pretty interesting so we know that we have this heading in the content section right now and we're flexible to pass anything into the get this on the screen the content but what I want to do is actually take these three UI elements and I want to make a separate component out of this and I do not want to include this action button in this component right here and I don't want to do that because like I said whenever we click this it's going to pop up a modal and that modal is going to have a list of these accounts or networks and whenever we use that UI that is not going to have this action button on the right so I'll create a component for this little layout right here and I'll call it like identification since that's really all these labels are if you see in both the whenever you add an account and or you add a network all of this information including display name the logo and the identifier it's really just like a label for yourself to easily identify this stuff so I call it identification oh can't talk today but yeah with that said let's go ahead and get started so let me go ahead and pop open this again get rid of that for now okay so we're going to be creating two more components one is called identification make sure I spelled that right and the other is well we'll get to that in a second so for the identification just go ahead and create a new component you type that out again so call this identification and this style file and for this identification component it's just going to be this right here so since this is the component I'll have a flex layout and I can just keep the default it's not going to be stacked as a column it'll have this image on the left and then this text on the right and then inside this text I'll break it down into uh top text right here in bottom text right there so in identification the first thing I want to do is for the main container I'll just display it as Flex and then actually might as well create these separate elements right now so for the image again this is not going to be a div it's going to be an image tag so we can just say style.img and I want the image to be circular so I'm going to do border radius 50 percent and then I'll just do uh I'll give it a height of 36 I think that's what the size of those other ones are height width so this is going to make sure that it's always a square circle and then since I want a little bit of space between this image and this text right here I'll add a margin right keep clicking open the wrong thing embarrassing so say margin rights is 10 pixels it should be good for now all right so now let's go ahead and stick that in there so s dot image and and since that's an image tag we have source and just to test let me go in my GitHub and actually I can just get it from here I just need like a sample URL eventually this is all going to be coming from Redux of course but for now just get some dummy data in there give some alt text location there we go and then to the right of this is where we're going to have our text so I'll just say that actually maybe I'll do this so I'm gonna have a main div for both of these and then I'll have uh divs inside them for the top and bottom just so we can get our main layout taken care of text and I'm gonna have top text and then Quantum text all right so our main layout is just gonna have two components an image to the left in the text area to the right and inside the text I'm going to have that taut text now even though eventually we're going to be passing this in dynamically as a prop as content for now just to make sure everything is looking right we'll say Imports identification perhaps speed test components identification and for the content that's we're going to have our identification and now we should have something on the screen looking good all right so now let's go ahead and just style this top and bottom text for this identification and check it out so for the top text we can have this a whitish color and let's go with 14 pixels and for the bottom text we can keep the default color for this we'll say the font size a little bit smaller maybe 12 pixels and because I want the bottom text a little bit bumped down say margin top and we'll say uh two pixels all right and now let's actually let's add some sample network data in here so we'll say tnb the New Boston Network again all of this is uh can be programmed later but just want some realistic data sometimes you have like lorem ipsum or dummy data and it's just uh it's like not the right content length or I don't know you have to go back in later and tweak things so looking good and now top card change this to network all right so yeah everything is uh hard coded in for the time being but that's the basic structure we're looking for now another thing that I want to do and this may seem like Overkill but I think it's going to work out is that we are not going to be actually passing this identification node in here directly even when we have a network for example we're either going to be passing in this uh like empty State as you can call it or this network component however instead of just passing it in kind of like a raw dog in it I want to pass in something where we can have this layout and this layout right here is just going to have this component on the left and then another component on the right hand side but I want to space them so they take up the full width of the card and again like I said it may seem like Overkill but I'm gonna make another component just for this layout so in this component so I'm going to make one more probably called spaced items and again the only point of this is just so I can have a nice layout to space out two things evenly all right so let me close these for now and what is spaced items going to do well for this main layout what we want to do is we want to display it as Flex uh Flex Direction row since things are going to be appearing left and right and for the items I'm going to want those uh Center aligned and this is the vertical alignment sort those lines so the vertical vertical alignment is going to be centered and for Justified content that's going to be space between and what that's going to do is pretty much just make sure that this section appears to the left most as we can in that this icon appears to the rightmost as we can and just take up the full width of the card basically all right so there we go and now what I can do is probably this so I'm gonna have a left div and a rate div and probably an icon as well but this should be good for now so yeah in here in the space items I'm going to say left and then this is going to be right and in that left section I'm going to move this identification component over again all of this stuff is going to be passed in dynamically but for now just hard code everything in okay and now that we have our UI elements being rendered in the space items component rather than hard coding into this top card what I'm actually going to do is this all right so I know this looks kind of cluttered but as we kind of build this out I think it'll make sense why okay so check it out so now in this card we're passing in the spaced item component and in the space item component we can have two components one thing on the left which is our identification and one thing on the right which is going to be that pencil icon so let's go ahead and figure out how to do that pencil icon right now so what we can do is we can replace this right text here and okay so again this is going to be being in being passed in as a react node however for the time being I'm just going to hard code this in to show you how to work with icons and then it's going to be a piece of cake to pull out in just a second so in tnb OS I already have material icons installed so from in the packages at ndi Js we want to pull out the icon that we want to use and everything is prefixed with MDI oh look at that pencil right there so in order to use one of these icons actually let's go ahead and make this a styled component in uh save the time so in the styles for here right under styled components what I want to do from actually MDI react I'm going to be importing the icon for it and I'm going to call it you which is kind of a shorthand for unstyled MDI icon and this is just the icon component now the reason that I want to import it right here in style components is because well I'll show you in just a second actually let me let me write this out so it makes sense so I'm gonna create a style component called icon and what this is is it's a styled version of this component right here so whenever you work with styled icons you don't always just have to style HTML elements right here you can actually style other react components and this just like kind of applies additional styles to them on top of any styles that they already have just uh naturally I guess you could say and for this we're going to be adding some CSS in here in just a bit but just to kind of get everything hooked up on the right hand side I can then say display my icon right like that uh it's gonna take a path and that path is going to be pencil and for the size of this which it also takes I will say that this is going to be 28 pixels so again this is the exact same thing then if you were to do something like this this is perfectly valid as well however the reason that I structure it this way is because we want to apply our own custom styles to this icon and what are those Styles great question so the first thing I want to do is I want to give it a border radius of 50 make sure that this appears circular and the color of this I'm going to be using this like gray blue color and I also want to give it a padding of four pixels just so the icon isn't butted right up against the edges and because I have this padding of four pixels and the card itself also has padding it's going to look a little bit um it's going to look like it has too much padding on the right hand side so to kind of compensate for this I'm going to do margin right and I'm going to take away those four pixels of padding so okay border radius color margin right padding and another thing that I can do actually let me see if it just displays right here okay so this is the icon right here and what I want to do is whenever we hover over this I want to change the background of it and also the color and I also want to change my cursor right here to a pointer just to give the user some indication that they are indeed uh hovering over it so in order to do that I do amp sand hover State and for the background actually let me get this background in color background in color a nice some shades of blue and for the cursor I'll just do pointer all right so now when I hover over it you see we get this cool little hover State and just to spice things up a little bit I'm going to add a transition so it kind of Fades rather than popping in just makes a little bit look a little bit more professional and they'll say 0.15 seconds now when I hover over it well you probably can't tell but uh I can it's subtle but there's this fade rather than just you know popping to this different state makes me feel a little bit more professional you know so I think that this is probably good for these top cards the only other UI element that we really have to write for these top cards is whatever we decide to do about our empty State element right here but we'll actually save this for later on once we right around the time we actually hook this into Redux and the reason for that is just because the way the uh I am building out the UI right now it'll be kind of a pain to have this identification UI element and then an empty State both so we'll save that for later don't have to build out you know every single UI element just in this step so yeah in the next tutorial we'll go to the connection status styling and then kind of just work our way down from here and once we have everything styled then we'll start hooking everything up so on that note thank you for watching and I'll see you next video