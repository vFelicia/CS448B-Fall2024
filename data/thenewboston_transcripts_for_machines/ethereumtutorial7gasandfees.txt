alrighty y'all welcome back to another tutorial and in this one we are going to be talking about gas now i'd like to start things out by telling you a story and that is the story of whenever i first started developing on the ethereum network so this is me right here uh this is back in the days when i was gray and i had no face so either way i opened my laptop and learned some ethereum decided to connect to one of these nodes and i'm like okay i know how this works i'm just going to write a smart contract i'm going to deploy it to the network and then let me just tell this node hey can you go ahead and run this and the node responded to me and cannot run i need gas and i'm like okay well i got gas then nude was like not that kind of gas talking about ethereum gas and i'm like okay this is weird so so you're telling me that in order to run this that you need something called gas and with gas you will then be able to process these transactions and it's like yup and i'm like wait a minute am i talking to an ethereum node right now what's going on so either way i decided to do a little bit more research online so the very first thing that i learned is that when measuring gas it's typically measured in guay rather than whey or ether and just as a reminder one gray is equal to one billion whey so back to this gas situation here now i know at the beginning of the tutorial what i said is that in simple terms gas is really just the fee required to send transactions on the ethereum network now more technically gas is the unit that allows us to measure the amount of work required to execute some code on the ethereum network alright so what the heck do i mean by that what i mean is this whenever you are trying to execute some let's say smart contract on the ethereum network not all smart contracts require the same amount of work and energy from these nodes for example let's say that you had a very simple smart contract and all it did was like add two numbers together maybe that would take let's say one guess now let's say you had another smart contract and you're making this you know your own multisig wallet with nfts and i don't know whatever you want to put in a smart contract but it took a long time to actually process all all this logic so in that case maybe that smart contract would require three gas so we see somehow that the complexity and the amount of effort and energy it takes to run these smart contracts is somehow related to the quantity of gas that we need however we still didn't talk about what the heck gas is and on top of that how the heck do we even calculate how much gas is required to run these smart contracts so it turns out that in ethereum every single operation that gets ran on a smart contract basically anything that you can do in a smart contract has a related cost now i'm sure the url might change over time but if you type in something like opcodes for the evm or opcodes for ethereum you're going to find a list of the current prices and let me scroll down and show you what's going on here so we'll get to the details of this in a minute but just check this out for the time being so the name is essentially the name of these operations and gas this column right here is essentially the gas cost of these operations all right so let's figure out what the heck this means like add three gas uh multiply that looks like it takes five gas so what does this all mean so what this means is that later on whenever we start actually writing smart contracts and by that i mean actually writing the code for them typing on our keyboard every single operation that we can include in our code it has a cost for example whenever we have two numbers and we want to just add those together it's going to require three gas so this is just example code that we're going to see in our smart contract this is the name of the operation and this is the related gas cost so again that translates to this name and this gas cost over here and just another example just so you know we had two different ones for multiplication this is what it's going to look like in our actual source code and of course this operation this little asterisk right here if you're uh familiar with programming then that means multiplication and the cost for this is five gas all right so this is starting to make sense the more complex your smart contract is the more operations it has and each operation is going to require more gas but now we still have the question of well what is the price of each one of these gas i mean is it one way is it a hundred gray so we know that if we had a contract with just these two operations in it for example that it would require a total of eight gas but is that like um a fraction of an ether is that like 20 ether like what is that so check this out unlike purchasing something in real life that already has a price tag stuck to it in the ethereum network users actually specify their own gas price when sending transactions now this price that they specify it represents the price per unit of gas that the user is willing to pay now miners can choose whether it's worth it for them to accept this transaction so in this sense try to think of gas not so much as something with a fixed price but more like a bidding system now sticking with our gas theme it's kind of the equivalent of going to a gas station and saying hmm i'll offer you 5 cents a gallon for this gas in that case the gas station owner is just going to pretty much ignore you or laugh at you now if you go to the same gas station and say i'll offer you 28 dollars per gallon of gas then the gas station owner is gonna you know even if they're serving a customer they're going to push them out of the way okay okay whatever you need so that is pretty much what's going on in the ethereum network where people are essentially going to bid to get their transactions processed and the miners are pretty much going to prioritize those by who's ever bidding the highest amount now the average price of gas is actually determined by the overall demand for the network resources and a very cool resource that i use quite often is etherscan.io gas tracker if ever you just want to know the current price of gas then you can go here and it'll tell you right now it's hovering right around 145 gway oh hopped up to 162. look at that now in addition to gas price we also need to talk about gas limit so whenever you send a transaction on the ethereum network what you're going to do is you're going to both specify the gas price which we just talked about and this field called gas limit so gas limit is the maximum units of gas that you're willing to spend on the transaction now another thing that i want to mention is that when executing a transaction nodes are going to keep track of the gas being used compared to the total amount of gas that you said is allowed so if execution cost ever exceeds the amount that you specified is basically the maximum amount allowed then execution is just going to stop in other words the notes are just going to stop processing that transaction now there's another thing that i want to point out and this is something that may confuse you if you're looking at examples of you know calculating this online and that is there was something called a london upgrade in the ethereum network and as part of this upgrade it actually changed the way that these gas fees are calculated so i just want to point this out we're going to be taking a look at how they were calculated prelondon and also post london but again i want to mention this because if you're looking you know maybe you forgot this video and you want to go back and look for a reference of how these things are calculated if you're seeing two different formulas and you know your head's blown up about why is there two different formulas it's likely because one was prelondon and one was postlondon so anyways let's get into this example and again this one right here we are covering prelondon however is useful to cover anyway so the max gas fee in other words the maximum amount you're willing to pay for the entire transaction is equal to the price of gas again this is something that you specified how much do you think is needed to more or less convince that gas station operator and then the gas limit is how many of these gas units you're willing to spend so just to hammer this down we will say that if you set a gas price of 100 gway and you specified a gas limit of 8 units of gas then this would equal a maximum gas fee of 800 gray now i say maximum rather than just the you know hardcoded gas fee because if this transaction let's say that you specified it for this actually let's say that a node was processing this transaction and after running the entire logic in the smart contract it realized that you know what um it actually only costs 600 gwei that 200 additional guy is not just something that you overpay it's actually returned to you as the user so again just want to hammer down this is the maximum gas fee for the transaction but it's often higher than the actual gas fee now starting with the london network upgrade every block has a base fee and this base fee is the minimum price per unit of gas for inclusion in the block and this base fee by the way it's automatically calculated by the network it's not something that the user specifies themselves so whenever you see base fee you can just think the minimum gas price and by the way another fun fact is that whenever a block is mined this base fee is actually burned in other words this amount of ether is actually removed from circulation so with this base fee there's actually no more of going to that gas station in air quotes and saying hmm i'm going to offer you 5 cents a gallon since there's always a fair minimum gas price now on top of the base fee users are also expected to set a tip and you may often see this as priority fee sometimes but whether you call it a tip or a priority fee it's the same thing so what is this tip well if you go online it's going to say that the tip compensates miners for executing and propagating user transactions and blocks and is expected to be set automatically by most wallets now what that means is it's pretty much just a bribe to miners in other words miners are going to prioritize the transactions with the highest priority fees or in other words bribes ahead of all the other ones and they're going to do this because this fee right here remember this doesn't go to the miners this actually gets burnt or this ether is removed from circulation so the miners are going to be able to keep this tip right here so of course what they're going to do is as transactions come in they're pretty much gonna sort them by highest tip to lowest and the ones who bribe the miners the most pretty much get their transactions processed faster than the others now to calculate the total transaction fee you take both of these and you add them together and then you multiply it by the gas limit now this gas limit is just identical to before it's just the limit that the user sets so again just to wrap everything together total transaction fee is equal to the sum of the base fee plus the tip multiplied by the gas limit now the last thing that i want to cover is this idea of max fee per gas so what the heck is this max fee per gas because i mean things couldn't get any more complicated right well check it out it's actually not that bad and it makes a lot of sense uh once you learn about it so max feed for gas is the absolute maximum that you're willing to pay per unit of gas to get your transaction included in a block now under most circumstances the actual fee that you end up paying is actually going to be less than the max fee per gas alright so it seems like this system was working all right before so why would we ever want to include a max fee per gas so imagine this scenario imagine that you sent a transaction up to the network and the current base fee was would you say one one way so you added one away here maybe you added whatever for a tip and you sent it up now immediately after sending that transaction to the network what the network did is it recalculated the base fee so it's now twoway so now you have a transaction up there floating around the network which is pretty much incorrectly funded so what's going to happen to it i mean is it going to get dropped or is it going to fail or is it going to become stuck is the base fee going to go back down and then it gets processed i mean there's a lot of unpredictability here so that is why this max fee per gas was introduced so essentially for a more predictable transaction settlement it's typically considered best practice to set a max fee to pretty much anticipate the possibility of an increasing base fee now just like in the last example the difference between the max fee per gas and the actual fee is refunded back to the user so the user doesn't need to worry about overpaying beyond the base fee whenever their transactions are executed so just break this down by max fee per gas it's pretty much saying this is the maximum i'm willing to pay now the actual fee is what you end up paying and it's usually less than this so the refund amount is basically pretty simple math uh the maximum you are willing to pay minus the actual fee and that's the amount that gets refunded back to the user and on that note i believe that's all we need to cover on the topic of gas and fees and by all we mean to cover kind of laughing when i say that because i know i just talked a ton of information in all your heads but uh yeah i think that covers gas and fees so thank you for watching don't forget to subscribe and i will see y'all later