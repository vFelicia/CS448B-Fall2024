here so after everything we've already looked at now what we're doing is we're actually putting the vet the data that we're typing into here into practice and we keep creating this query which is selecting from a database where it equals something and then a wildcard so a for example returns Alex Garrett and Alex Malcolm because we have a and the rest is a world card now as I start to type Alex space we're still matching the first 1 2 3 4 5 characters of when I type of G Malcolm will disappear we're not have an EM Malcolm will stay there so we're basically updating this now depending on what's typed in so we can then type Dale and we can do the same with Devon type G or M we can do with Craig Craig the only one in the database if we type now okay this is another problem that we've we've got if we go back to nothing now what's happened is it's selected everything that doesn't equal nothing and then a wildcard so this all of this is classed as a wildcard now because we've got nothing in front of it so what we need to do is we need to create an if statement in here to say if in fact we can do it above this here to be a lot better so if not empty search Oh God search text then run all of this and let's indent that so if not empty search text then run all of this and let's bring this all in to make it look a little bit neater okay so let's go back to our page and refresh and see if we fix this problem so I took can type Alex Garrett Alex Malcom you'll see that as we go on then our results disappear so let's go all the way back to the start and you can see that everything disappears and we don't just get a list of everything up there so we've learnt in this tutorial again how to create our Ajax request here but we've added we've added in this get parameter here so we've added in a variable that's called search text then what we've done is we've done our usual we've sent this request and on the key up so we've we've included this onkeyup event and then every time a keys as released from the keyboard so we press down and then up we run this find match function and that goes through to our request our Ajax request brings back the value from this from our PHP file in which we've connected to the database and searched for relevant names using our wildcard character just at the end here and then what we're doing is we're returning this value to a results div down here so essentially we created what you would normally find doesn't autosuggest now like I said at the start of the tutorial we're not including how to make this look pretty or incorporate sort of the white the most widely used or widely typed values I mean by all means go and try this for yourself because it's quite easy all you need to do is modify your statement to say something like where where count or amount searched is oh no you wouldn't say where you'd say order by so you could order it by times searched for example if you were keeping track of how many times this value had been searched so we also need to bear in mind that when you want to submit this form it will actually submit to where you said where you want it to submit if you were to put the action in here so the part of the find matches on key opps fine but you can actually add an action to go to another page PHP for example and you can say search for Alex guarantee so yeah alex karras there press ENTER and it will let's go back and refresh that so Alex yeah okay so it's gone to another page and you've still got your search text variable in there so you can you can create this as normal but what we've done is we've talked about how to do this with the fire match function here which is going to then return it to the div and of course this div you can use CSS to attach it to your form if you're good at CSS even if you're not have a look look it up and see if you can find anything to do there you can also think about creating these as hyperlinks so they automatically search for you so we could do something like let's say we were submitting to another page eventually you can create hyperlinks in here so you could say a href equals another page dot PHP search text equals and then you could have you could have the query row name in here as well so what you're actually doing is you are creating a hyperlink out of this so hopefully that makes sense to you let's just go Alex right so what you're getting is you're getting a hyperlink now and if you look at the bottom of the page you can see that it says another page dot PHP search text equals Alex kara if we hover over this one at the bottom it says search text equals Alex Malcolm so you can actually predefined links that will then submit to your original search page so if you had this as a search field you can have it submit so there's plenty of things you can do with it but for now this is the basics of an autosuggest type thing it's also to just type code in PHP