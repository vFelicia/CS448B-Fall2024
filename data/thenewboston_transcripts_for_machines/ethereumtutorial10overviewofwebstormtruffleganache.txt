all right y'all welcome back to another video and in this one we're gonna be talking about truffle now this video is not to be confused with the other video i have of myself just eating truffles on my other personal youtube channel but this one we're going to be talking about the truffle development tool for ethereum smart contracts and on the website it doesn't really give you a lot of description of what it is just as sweet tools for smart contracts and it's kind of vague to understand really what it is at first glance however it's kind of an accurate description because there are indeed a lot of tools included in this not only an entire development framework but project templates there are easy to use scripts for compilation and deployment and really lots of handy tools that we're going to be covering one by one but any hoot go ahead and go to trufflesuite.com and another thing is i usually make my own content for these tutorials however for this one specifically we're going to be changing things up and following their quick start guide actually went through this and it includes everything that i think is great for you know getting started getting to learn truffle so instead of trying to reinvent the wheel we're going to be going through this so if you get lost or if you want any of the code then if you go to truffle quick start it's all going to be there and on that note let's go ahead and minimize this now before we get started writing any code i do want to mention that there are going to be two prereqs for this and that is you need to have git installed and you also need to have node node installed i'm not going to walk through those processes because i'm assuming if you're a developer especially writing dapps in you know a lot of javascript code you probably already have those two things installed but if you have any questions then go ahead and hop over to our discord and we can help you out there so anyways once you have get and node installed then we can go ahead and install truffle so how do we install truffle so let's go ahead and run sudo npm install minus g and this means globally truffle now i am not going to run this because actually i already have it installed but what i am going to do is cd over to a directory and this is just where i keep my projects it's on my desktop a little projects folder and i'm just going to create an empty directory and then we're going to be uh putting the code in there so i'm gonna call it metacoin again this is from the quick guide so now that we got that installed let me go ahead and open that and by the way whenever you open this you can actually use any ide that you want i'm gonna be using webstorm but if you have another one then that's fine too so go ahead and open and just pull this over show you guys what's going on so i had it in desktop projects and that was called metacoin go ahead and open that all right so now we have our project open again just a plain empty directory not even a single file right now now what i'm gonna do is pop open my terminal and by the way webstorm comes with a builtin terminal it's pretty much the exact same thing as using this just a little bit more convenient since it's baked into the ide and once you have a terminal open whether it's baked in or not what we can do is we can run the unbox command and what this is going to do actually let me type it out so truffle unbox metacoin so what this is going to do is essentially use something called a box and let me pull up the truffle website to show you what boxes are so truffle boxes are well there are actually a couple of things their example apps or project templates you can kind of think fit like boilerplate that you can use whenever you initialize a new project it's almost like create react app if you're familiar with that so if not you'll see in just a sec what it's going to do but we are going to be using a box called metacoin which is basically just like a very stripped down bare bones mvp um project so let me go ahead and run this and might take a bit all right directory is not empty even though it is i think there might be some hidden ide files in here so either way just gonna hit y and all right so let me expand this in case there's any juicy output so what did it say preparing to download it downloaded something it had some temporary files set up the box okay and then at the end it said uh you have some new commands now truffle compile truffle migrate and truffle test huh interesting so let's take a look at what just happened so now in our project if we expand this we can see that we do have indeed some source code files in here specifically three directories one called contracts one called migrations and one called tests then we have get attributes a license in this truffle config javascript file so let's go ahead and start with this contracts directory and see what's in here so as you could guess pretty similar to remix is that in here we have our solidity contracts so whenever we create new ones that's where they're gonna go now unlike remix we also have this migrations directory so what's in here so migrations are javascript files that help you deploy contracts to the ethereum network and that's all we have to understand for now later on we're going to be getting our hands a little bit dirty and taking a closer look at that but right now that'll be fine and the last directory is this test directory and of course you could probably guess these are the files that you're going to use for testing not only your application and by that i mean your javascript files but testing for your solidity contracts as well now for git attributes license we can skip over this is related to git this is basically just saying that if we push this up to github then all of our source code is going to be under the mit license by default feel free to change that and this last one truffle config pop this open take a look at it real quick this is actually an important file of course your truffle configuration file for the project and this has settings related to the solidity compiler what version you're using um what network you're deploying to so on and so forth and that is the basic project structure so with that in our heads let's go ahead and try to run some of those commands that we got suggested from truffle right here so the easiest one to get started with is probably truffle test and again you can use this command to run tests not only for solidity files but also on javascript files and i'll show you the syntax for this let me clear my terminal so anytime you want to run a solidity test and we'll pop open this file real quick so again i know we only wrote one smart contract and there's a lot of syntax that you know we have yet to cover but just showing you that this is indeed um a testing file for solidity and anytime we want to run these tests then what we can do is we can run truffle and then the command is test and then what we can do right after this is just write the path to the testing file so i'm going to start with period that means my current directory where am i going to go well the tests are in the test directory right here and the file is called test testmetacoin.sol oops type in the wrong place here testmetacoin.sol so again truffle test and then a path to the file that you want to test hit enter and all right so it looks like there are two tests in there and they both passed so that's fantastic now another thing that i want to point out again you can probably guess this too but for testing this javascript file you actually use the exact same command which is very cool about this and that file is called metacoin.js so again truffle test and this last file path argument it doesn't matter if it's a solidity file or javascript file go ahead and hit enter and run that and all right looks like there are three tests in that javascript file and those all passed now some other quick commands we can touch on is first the compilation command or in other words how do you compile your smart contracts and that one is truffle compile so you hit enter so again that was the command compile your smart contracts and at the end of that you should see a build directory with some artifacts in here and we're going to be digging into these understanding exactly what those are in well probably the next tutorial but for now i just want to kind of cover the basic commands so let me pop back open my terminal and cover one more and that is truffle develop so this is a pretty interesting one because what this does is it creates and runs a builtin personal blockchain that you can use for testing and development and also in this process it gives you this interactive prompt and it makes it a little bit easier to run commands since before whenever we wanted to run any of this these commands we have to pretty much write truffle before so truffle test truffle compile so on and so forth however whenever you are in this interactive prompt you can essentially leave out that truffle keyword or command at the beginning so for example whenever you just want to compile you can just write compile and it works exactly the same as before just you know save you some typing time now the last command that i want to go over right now is migrate so what migrate is going to do is it's going to deploy your compiled smart contracts to the blockchain so let's go ahead and hit enter and alright if we scroll up a little bit so up here we can see a little cost summary says you deployed three contracts this was the final cost and some other info that we'll be getting into a little bit later some transaction ids and addresses of our deployed contracts but again just really wanted to mention that the migrate command is what you're going to use to actually deploy your contracts to the blockchain now if you really wanted to you can actually just develop and use this consolebased blockchain that came with truffle develop however there is a much better tool actually let me close out of this and that is this right here where'd my browser go all right so there's another tool in the truffle suite called ganache and it's pretty similar to the truffle develop blockchain where it's just a blockchain pretty much a virtual ethereum network that runs locally however a key benefit to this is it comes with a much nicer user interface and it just makes developing on the blockchain much easier so go ahead and download this and i'm not going to show you how to download it it's uh pretty simple and also i already have it downloaded and once you do you are going to get this program right here so what we can do for now is just hit quick start ethereum and again this is just going to create basically a very simple like virtual ethereum network virtual ethereum blockchain and similar to remix it's going to come with some sample test accounts and your mnemonic is also right up here and we're going to need that in the future actually so some key things to point out is that your server you can see it right here it's running on localhost and it may be too small for youtube video but it is on port 7545 that's the default port and we do have to remember this because what we need to do in our project right here is essentially say hey we are actually running a new development network that we want to connect to from this project and that is this little simulation network right here so in order to configure our project to point to this ganache instance again i don't even know if i mentioned that but this is called ganache what we can do is hop over to our truffle config file and right here where it is all right and i believe that okay so just had to uncomment this too since uh that's where the closing bracket was but essentially uncomment this development network and this is gonna have your host again this is localhost it is on port 7545 the network id we don't have to worry about right now and also make sure you uncomment this since it's the closing brace for this so now that we are presumably hooked up to this development network let's just go ahead and verify a couple things first and that is okay looks like all of our accounts they haven't been touched they each have 100 each all right we got our genesis block no transactions and no contracts on our blockchain either so pretty much verify that this is indeed a brand new blockchain so in the terminal what we can do now is we can run truffle migrate again we have to include the truffle keyword right here because we are no longer in that truffle development tool and let me go ahead and hit enter and what this is going to do is it should migrate that contract and it looked like everything went our right so if so then that would mean that it migrated our contracts over to the blockchain created by ganache so okay this is promising first because pop this back open and we see 99.99 eth so something happened that cost one or point zero one eighth around that so now let's hop over to blocks okay nice got some more blocks now and transactions all right nice so it looks like that was indeed successful now the last thing that i want to do is show you how you can interact with not only this deployed contract but kind of the blockchain overall and that is using a tool called truffle console now i'm going to hit enter and at first this is going to look like the other tool that we just had open truffle develop however there are a couple key differences the truffle develop tool that always connects to that truffle console version of the blockchain whereas truffle console what this does is it connects to an existing blockchain and since we configured our project to point to that ganache blockchain what it's going to connect to is this one right here so how can we verify that it's working well let's go ahead and try to get a reference to these accounts so if we can print out this account number then we know it's connected to the right blockchain so how do we do that we'll pop this open again and alright so a lot of the syntax we're going to be covering in more detail later on again getting into the weeds in the upcoming videos but for now just a real simple uh demonstration let's go ahead and create a variable called accounts and again this is javascript syntax let's go ahead and wait and just type in web3 dot if dot get accounts and again i know i'm kind of running through this be like what is a web 3 what is eth what is this git accounts function yada yada but kind of just to go over the basics of truffle right now so i'm going to hit enter it says undefined now hopefully all of our test account should be stored in this array right here so just to verify that let me go ahead and just log out accounts zero and okay so 0x009 it starts with and 5426 looks like it ends with and it looks like 0x009 and 5426 would you look at that so there you go there is your basic overview to truffle again there's a lot more to it but we are going to be getting into the weeds covering everything in more detail in the upcoming tutorials so for now thank you for watching don't forget to subscribe and i will see you in the next video