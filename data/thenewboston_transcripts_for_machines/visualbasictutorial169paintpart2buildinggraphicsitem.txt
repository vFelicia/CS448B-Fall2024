hello YouTube Sam here from youtube.com/ onli gamer for the New Boston and in this tutorial we're going to continue working on our paint program um which uh like I said before comes from the book beginning Microsoft Visual Basic 2008 by Theon Willis and Brian Nome uh published by Rock so I just want to give them full credit um and if you don't know what this is um then you may want to go ahead and move back uh to the first tutorial to where we start building this program uh otherwise you might get lost so we have our must inherit class Graphics item with our color is filled and rectangled so let's just go ahead and make some public methods or subs subs can also be referred to as methods if you didn't already already know that uh you may have been confused in some of my previous tutorials when are called Subs methods so we'll create public must override subd draw this is going to take some arguments so we're going to need by Val Graphics as Graphics so they're going to need to pass a graphics object to this draw Sub now you can see that it says must override so what this means is that every class that inherits from gra Graphics item uh must override the subd draw so they must must have um another draw sub for themselves or else they will get an error and they won't be able to compile um so what this does is it lets uh let's say you make a um a couple classes from Graphics items you have a different draw for each one of those but if you create a um a variable of type Graphics item um in your form one. VB um and it is use polymorphism to use let's say Graphics Circle if you call Graphics your graphics Circle object. draw um it's going to run because Graphics item also has draw now if that confuses you a little bit um that's perfectly fine um you'll learn about more about that later on we've done that in some previous tutorials uh polymorphism is a simple concept but sometimes it can get pretty confusing um so don't worry about it right now if you don't understand that so let's go ahead and create another sub so Public Sub set point now all this is going to do is it's going to set the point um where of where we're going to draw our Circle so this is going to take some arguments so we're going to need the EXP position and we're going to use it an integer and then by Val y as integer and we're going to need the graphics size so B Val Graphics size as integer and then we're going to need the color so B Val Graphics color as color and then we're going to do um Graphics is filled so byal Graphics is filled as boine okay so now we're going to set the we're going to create the rectangle um that we declared up here so we got public rectangle as a rectangle now when we create a rectangle we're going to have to make an object of it so we're going to say rectangle equals new rectangle so we're creating a new rectangle object and this is going to take some arguments now what we're going to use is we're going to use um the X position the Y position and the width and the height which is the second of the two options uh for creating a rectangle object so we're going to use x which is passed right here and we're going to subtract it we're going to subtract it um we're going to subract graphic size divided by two from it so let's just make sure it's Graphics size so it's going to be x minus graphic size divid by two so it's going to take our our point x and it's going to take away the size of the graphics which um is we haven't created yet I believe it's going to be an enumeration um that's going to have either like medium small or large so this math right here is a little complic at you don't really have to know how it works um you can play around with this number right here divid by two and see what it does uh so basically what it does is I'll try to explain the best I can instead of when you click it's going to draw a circle uh down like when you clicked in our previous video with the square it created it at the top left corner of the square and everything went down um and to the right from that well what this algorithm right here does is it makes so when you click you're clicking in the middle of where the circle's going to go instead of the top left corner so we're going to do that for the Y as well so y minus graphic size ID two so this is going to do the same thing to where you're clicking in the middle of where the graphics is going to be drawn uh instead of the top left corner and then we're going to do for the width we're going to do graphic size and then for the height we'll do graphic size so what this is going to do is it's going to give us uh A Perfect Circle each time so let's say graphic size is equal to let's say uh 10 this one is also going to be 10 so it's going to be a 10x10 rectangle um and when you draw a circle inside of that 10x10 rectangle which is a square you're going to get a perfect circle now if you didn't use uh the same sizes right here you would get what's called an ellipse and we don't want to have to deal with that so we're just going to be making um a bunch of circles by using the same graphic size so we have our set point our X position our y position the graphics size and we're going to have the graphics color which is a type color and then the is filled which checks to see um which tells this set Point um if it's going to be filled or not so go ahead and put this code in if you haven't already um and before we're done we're going to have to add uh two more things to this uh sub so we're going to set color our variable color up here equal to graphic color and we need to change this to Graphics color so it's going to set our color variable equal to whatever they pass to set point so that color will be updated to the new color and is filled is going to be equal to Graphics is filled so it's going to update the is filled is filled boole um to the new one that is passed to our set point so if if you have any questions please leave them in the comments I'll try to monitor these and solve as many problems as I can it might be a little hard with 200 videos um so just be patient and once you're done putting this code in go ahead and move on to the next tutorial