hello YouTube Sam here from youtube.com/ onli gamer for the New Boston and in this tutorial we're going to be taking a look at cues now cues like an array list is a collection now there are a bunch of different collections in um Visual Basic uh such as uh hash tables there Stacks uh list dictionaries order dictionaries uh string collections uh bit array collections um we'll go into some of those but not all of those in these tutorials so let's go ahead and take a look at a cue so we'll go ahead and click new project and we'll just name this project collections because I'm going to be looking at uh teaching you guys uh several different collections using this same project so go ahead and click okay so we'll wait for that to load and now we're going to do is we're going to view the code for this and we will zoom in some here so now what we're going to do is we are going to create a q collection so we'll type private and we'll just call it q and then we'll type as keyword then we will use the new keyword and then we'll type Q so what we did is we created a private queue which can only be accessed in form one and we used as New Q which means that it is an object of Q and if we can create as many Q's as you as we want and they're going to be independent of of each other so what Q's do is it's a way of storing um objects because when you add an item to your queue it takes the um argument object and it uses what's called fifo or first in first out such as a line at a ticket booth the people start lining up and the first person who got there is going to be the first person to get their ticket and then get out of there so let's go ahead and uh add some stuff to our CU so we'll type Q Dot and to add something to our Q we just type NQ or we can't do that outside of a sub so we'll go ahead and double click on form one so when form one loads we will type Q do in Q now if you read the description it says adds an object to the end of the system. collections. Q so it adds it to the end of our line we'll just call it a line because lines are first in first out so since the end of the line there is no uh there is nobody or no object in front of this uh item this will be the first one inside of our Q so q. NQ and let's just see the first one in our uh in our Q so we can add as many as we want so we'll add two two we'll add three and we'll just add four okay so now that we've added some stuff to our queue it's going to be first in first out so if we take something out of our Q it's going to take out one and then it'll take out two so the way we take stuff out is by typing q. DQ and it says removes and Returns the object at the beginning of the system. collections. Q so it's going to remove this object right here or whatever object we um tell it to and we're just going to leave this um with nothing inside the parameters so q. DQ is going to return the first object which is one so now if we type message box q. DQ and then we'll just go ahead and convert that to a string and if we go ahead and run this you can see that we should get the value two because we started off by declaring our Q we added the value one to it then two then three then four then we dced and since it's first in first out it DQ's one and then if we DQ the next one it's going to be two it Returns the value two to us and then we just converted that to a string now if you don't want to take the item out of your q and you just want to look at it and without removing it you can use q. Peak so let's go ahead and run this and you can see that it gives us two so it peaked at the value at the next item in our list which is two now if we type message box and then q. DQ it's going to give us two as well because when we typed Peak it did not remove it from our Q it just looked at it so let's go ahead and run this we get two and then we dq2 so Q's are um they can be useful you may not find any practical application for them when you're first starting off but you may later on and it's useful to know them so I'm practice with some cues um remember that they are fifo F IO for first in first out and I once you know how to make cues and how to use them go ahead and move on to the next tutorial and thanks for watching