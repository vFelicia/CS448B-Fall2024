hi this is Alex from PHP academy' dog back with another video for the new Boston now in this video we're going to be looking at different string functions inside PHP and how you use them and why they might be useful so we're going to go for you through a few string functions in this video in this video the parts of this video and we're just going to use an example string along the way so let's go ahead and create our example string so I'm going to create a new variable called string and this is going to be equal to a particular string so for example I'm going to say this is an example string so we're going to be doing a few things with this particular string along the length of the videos that we're going to create and we're going to be creating new variables which use these functions and apply these functions to this particular string so first of all let's go ahead and look at string word count now you can imagine why this may be useful in particular situations you might want want to count a certain amount of words maybe through user input or through database use etc etc but I'm sure you can find a use in your own web application but for now this is how you use it now I'm going to create a new variable called string word count and this is going to be equal to the function name which is string oh sorry STR word count now this function takes three arguments in total only one of them is required and the one that is required is is the actual string itself so I'm just referencing this variable here which is equal to this string here so let's go hat down here and echo this out and then we'll talk about the different arguments we can give this function to perhaps make it more useful to us okay so let's go ahead to a browser and refresh the page and see what we have okay so we get a value of five returned when we echo out the the result of this function so you can see that we've got one two three four five words the fullstop doesn't count that's not included in our list of words we can specify things that we want to class as words maybe symbols later on but for now this is how many words are in the string now let's go ahead and look at an argument we can give this so we can give this term this the second argument as zero one or two so I'll go through each one and explain which one which is which so zero is what we've already seen this just returns an integer value as we've already seen with the amount of words in there with no other argument specified one will produce an array where the key is equal to the word itself so you know we well the key is irrelevant in this orbit just be the default so it will be zero one two three four five and then each value of each key will contain the word in the string so what we're actually doing is we're creating an array and we're almost splitting this up so let's go ahead and try and echo this out and you'll see that we'll just get a value here of array this is because it's now stored as an array after we've given this argument so what we can do just for just a really quick is we can use this print R here and enclose the word count in this and this will display all the elements of an array Oh smell that wrong okay so print are let's go back refresh and now what you can see is we've got 0 1 2 3 4 and these all these keys that we've been returned equal the words that we've words that we have so we're not using an associative array here we're using just a normal array and we've got this is an example string without the fullstop like I mentioned earlier so that's how we're going to put our results into an array now if we use a string with the argument this is going to return an associative array now as you can see here we've got each key is as normal so we start at 0 and we're ending at 4 what this will now do is it over the key will equal the position so the key will now become an associative value it will have the position of where each word starts and then the value of each key will be the word itself so let's go ahead and refresh this now you can see 0 that's a position this the word this is a position 0 is is it position 5 and is at position 8 example is at position 11 and string is at position 19 inside of our string here so they're the three over three different arguments you can give in this or the three different values rather you can give in this argument and there is a last let's just change this back to yeah we'll change it we'll leave that one the third argument that we can give is a list of words that we want to include as words so by default a fullstop will not be included as a word so because this is part of string here what we could do is come in here and specify a fullstop for example inside our single quotation marks so a specifying the fullstop is part of a word so now what's going to happen is let's say we return yet will return one and we refresh you can see that we've we're still giving back an associative array even though that zero for example and we'll just echo out this what you can see that's happened is we've still got five words but if we then go back and sorry print our if we then go back and change this value up here to one or two so we're producing either our array or an our associative array you can see that instead of just string we've got string with the full stop on the end there so now let's go ahead and separate this full stop from the from the word string and refresh and you can see it's given us five different or six different words