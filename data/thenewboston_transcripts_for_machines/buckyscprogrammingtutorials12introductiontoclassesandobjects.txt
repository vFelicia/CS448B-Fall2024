what is going on guys and gals welcome to your 12th C++ tutorial and in this tutorial I'm going to be giving you guys an introduction to classes in objects now classes are basically an easy way to group all your functions and variables and the group a bunch of stuff together for example people like to group similar functions together in the same class for example if you had a bunch of functions you know maybe working with temperature or you had a bunch of other related functions you might want to group them all in the same class it makes them easier to work with later on so then you know if you have like a thousand functions you say all right where are all my temperature functions cuz I need them now oh they're in my temperature class so that is kind of the usefulness of classes and the basics behind that so let's go ahead and in order to create a class we go ahead and make sure you're outside your main first of all I want to say that so I'm going to create mine before my main and in order to do this go ahead and type the word class and now after this go ahead and add a space and name your class now people typically name their class with uppercase letters and I'm going to name mine biy class just like that and now go ahead and add curly braces in a semicolon at the end now everything all your functions all your variables all your crap goes inside the body of your class right here so basically all your crap that you want to go in the class goes in the class body just like that and I believe whenever you create a class it's called declaring a class but um you know if your teacher ever asks you make sure you say that they'll probably be impressed so before we start adding a bunch of functions and stuff I want to talk to you guys about something called an access specifier now sometimes you want to make functions that you can only use in your class and sometimes you want to make functions that anybody can use out inside your class so if you want for example the main to be able to use your functions inside your class you need to make your functions public if you don't want Maine to be able to use the function inside your class then you would use something called private but we're going to be going over that later for now just remember whenever you use the public access specifier it says that you can use it outside of the class so in order to use that Public Access specifier just go ahead and type public with a colon not a semicolon just a regular colon and this means that anything you put after this you're able to use it outside of this class so if you didn't have that then you would only be able to use your stuff right here and what's the use of that if you need to put it in main so anyways make sure you add public it's called an access specifier if you're taking you know C++ test or something so now let's go ahead and we create a function just like before let me just go ahead and print out something on the screen so um it's not going to make any calculation so it's just just going to print something out so void I'm going to name it cool saying and it's not going to take any parameters a really simple function here and all it's going to do is print something out on the screen now I got to think of a cool saying um preaching wow totally messed that up preaching to the choir I think that's how you spell choir not sure hope I don't look like a fool in front of all my subscribers so now just go ahead and end line and so all this function is going to to do is print out preaching to the choir on the screen simple enough so now you're saying all right this class is looks good to go we have the class declaration class body um we have public and we even have one function in our class this is a pretty sweet looking class so let's go ahead and use this right now well now I want to talk to you guys about the other part of this tutorial I told you guys I'm going to be talking about classes and objects I already talked to you guys about classes now I want to talk to you guys about objects an object is how you access the stuff inside of your class for example why do you need to make objects at all why can't you just write cool sayings just like this and use it just like that well whenever you're making big computer programs and you have a bunch of different classes and a bunch of different functions in them you may have this cool sayings you may have a function that says cool sayings inside Bucky class you may have another function cool says inside tuna class you may have another function cool says inside a class temperature class well how does C++ know what function you want to use well it needs an object and an object basically tells it what class you're working with so in order to create an object it's basically the same as creating a variable you go ahead and you do this you type the name of your class which is Bucky's class and then after this you give your object a name and I'm just going to name mine biy object just like that and go ahead and add a semicolon and now this object Bucky's object you use this kind of as the key whenever you want to access the crap inside your class so now instead of just writing um the function name we have to write the object name first like biy object and then in order to access anything in inside the class we need to use a DOT separator and a DOT separator is basically our way of accessing the variables the functions all that stuff so as you can see we'll put the dot separator up and it already knows that we're what we want to do we want to access cool saying just like before just type the name of the function and empty parameters and Bam Wham thank you ma'am we now have a full working program so let me run this for you real quick to show you guys that it's working make sure I don't have any errors and then I'll talk to you guys through it one last time preaching to the choir works perfectly pretty cool huh so anyways people make classes in order to group similar functions so if I had you know a program that just had a bunch of cool sayings I'd have cool sayings cool sayings one cool sayings 2 I'd want to put them all in the same class for now we only have one function because this is just an example so we have a function that we put inside the class and make sure to make it public that means that main can use it as well so we have a class and we made that by making public and through a function inside it pretty cool so now we wanted to actually use that function that's inside the class well we can't just go ahead and write cool saying because if we had a bunch of different classes it wouldn't know which function named cool saying to use so it wouldn't know what class we wanted to use so in order to use that function we needed to make an OP object of that class so we're saying all right we're making an object called Buy's object and it is from the Buy's class class so now whenever we use Bucky's object it knows that we're going to be working with Buy's class so we use Buy's object cool saying and that knows and that's basically our way of telling C++ that we want to use the cool saying function and we want it to come from Buy's class since we use Buy's object so that is why you need objects classes and yada yada all all that stuff so that is your basics of classes and objects and why you need to make objects before you can use the stuff inside your class so I know this is kind of confusing um but this is the basics behind object orienting programming so if you understand this then if you understand this tutorial then the rest of your programming life is going to be a whole lot more simple so watch this tutorial watch it again watch it again until you understand exactly how to make classes and exactly why objects are useful and once you do you're ready to move on to the next tutorial so for now thank you guys for watching you guys have no idea how important the information you just learned was so anyways thank you guys for watching don't forget to subscribe if you have any questions about any of this feel free to ask me on the new boston.com Forum so uh yeah enough of me talking I'll see you in the next tutorial