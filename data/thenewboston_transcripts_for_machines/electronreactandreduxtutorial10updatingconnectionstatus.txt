alrighty and welcome back to another video and in this one what we're going to be doing is working on this connection status component however before you hop right into that I want to mention a few updates I made between the last video and this one so the first one is I built out this network select modal and I figured that I didn't really want to make a video about this because the logic is pretty much the exact same as the select account modal and it just felt a little bit repetitive wanted to uh save you guys some time another thing that I did is I added a little bit of scroll logic as you can see a little responsiveness so you see when the screen is wide that these two top cards they are displaying in a row to the left and right of each other and then I just have it where if it gets to a certain size a break point I think it's 900 pixels then it just turns to a column instead and then the last little change I did is you know how I said that we were gonna break out that edit button component since we pretty much had uh I don't know just to dry up the code a little bit so I now have in components this edit button where you just pass it on click Handler and of course that is this button right here this pencil icon so with that being said what we're going to do is start working on this connection status component and for this what I want to have for the logic is we already track which devices you're connected to there's a plain fine overhead don't mind that and the connection status for a certain Network because remember like I said that I can be connected to this iMac through multiple networks however whenever we're writing the speed test app we just want to check if the connection exists over a certain Network so that is in where is it Network account online statuses so it is keyed by the network ID and then in here we have the account number for the device and it's going to say if it's online or offline for that Network so of course whenever we write this component we need at least two connection statuses is it connected or is it disconnected now I'm also going to include a third connection status something to display here called invalid and that is just if you don't have either one of these selected for example you have a network but no device then I'm just going to display it invalid here because I don't know it just field a bit strange saying disconnected if you you know you don't even have the proper information to determine the connection status so on that note let me go ahead in first and foremost start adding those types for connections so I'm going to make a new type file and I'm gonna make a new enum and I'll just say connection status so again that is connected and this will just be equal to string connected and then I'll make one for disconnected and invalid disconnected and invalid in case you don't have one of those items selected all right looking good that's all we need in here now let me just go ahead and Export this connections or connection status and the reason that I want to put it in here rather than in the component itself whenever you write it is because we're going to need it in a couple different places so on that note ready to move on actually let me keep this open so of course we're going to need this connection status and also the Styles file eventually however what I'm going to do before I start writing any code in here is I am actually going to make a new hook and this Hook is going to basically say that for the active account number and the active ID active account number in Active network ID I mean then it's just going to return a Boolean to say are you connected to this device through this network or not now I want to make it a hook rather than just writing it in this component because we're actually going to be using this same logic for the main button too now for the main button we'll say that if you are not connected then we're going to disable this button because of course it doesn't make sense to you know enable the button if you can't can't send any requests to any other device so since we're going to be using that same logic in this component and also in this component right here that's why I want to split it out into a hook so on that let me just go ahead and make a new directory and I'll show you how I set up my hooks say hooks and for the hook naming convention I prefix everything with use and oh no I just really like that pattern so I'll say um make a new typescript file I'll say use is connected all right and now let me go ahead and import everything we are going to need all right so to make a hook I'll say const use is connected and this is going to be equal to actually a function that's going to return a Boolean right now so export default is connected and another thing that I want to do before I even start writing out the meat and potatoes of this is go ahead and make a new type file index and kind of like how we set up the types or the store where we have this index or excuse me not the store these uh types right here where we have this index file and it kind of Aggregates all these just to make the Imports a little bit cleaner that's the same thing that I want to do with hooks so I'm going to import use is connected from apps speed test is connected and then I'll just export that all right so this is the basic structure for how we're going to be writing all these hooks again I'm just going to name the file whatever the hook is and then just export it right here now with that being said let's go ahead and write this so the first thing that we need to do is for this hook we need to pull it in the active account in the Active network so to do that is let's say const this is equal to a u selector for get active account number and then do the same for Active network all right so pulling in the active account number and Active network now from here once we have those two values again like I said what we need to do is we need to check in Redux under system Network account online statuses because again this is keyed by the network ID which is going to be the Active network and then the account number under it which is going to be our active account right here and from that we're going to pull the value to see if it's online or offline so let me go ahead and make another pull in the network account online statuses and those are pulled in from this selector right here now for the return value what I can do is just use a memo and for this all right so for the first bit of logic I'm just going to say that if you don't have any active account or any network selected if one of these is blank then we're just going to return false off the bat because if you don't have a key piece in that connection then there's no way that it could possibly be connected be connected I mean so if no active account number or no Active network ID then I'm just going to return false now aside from this if you do have both of these pieces of information right here so let me go ahead and select I do have an active account now an active network ID then we're going to go ahead and look in here to see what the status is so otherwise what we want to do is we want to return from Network account online statuses and we want to key it by Active network ID now another thing that I'm going to do is I'm going to throw in a question mark right here now the reason that I have this and this probably isn't going to happen too often but it is a situation we need to look out for is there's going to be times where you have an active account number or Active network ID in your speed test app however that doesn't exist in the system data now if you're like well when's that can be the case because whenever we select one of these we're essentially selecting from the system data well the situation where that would happen is let's say that you have an active Network selected right here the New Boston Network well if you go in here in your system data and you delete this right here this is going to delete it from the system data however it isn't going to update everywhere in all these different apps and kind of look for this network ID so we need to account for the fact that we can indeed have a network ID as our Active network ID that doesn't exist in the system anymore so that is why we're just including this question mark right here to say if you don't have this then you know it's undefined don't flip out or anything like that well if we do have it then under Network account online statuses the next thing we need to do is key in the active account number and then to see if this is online or not we're just going to say is this equal to online status Dot online now if this is true then it's going to return true and of course false false yada yada simple stuff and that is our hook logic to say are we connected to this account over this network so now that we have that what I want to do is pop back in here into my connection status component and we can start right in this logic all right so let me go ahead and import that hook we just wrote and that's called to use is connected from apps.speedtest dot hooks now another thing that we're going to need is actually this right here both of these values the active account number and get Active network ID and then the last thing that we're going to need to import is this connection status type and what I actually want to do is import the connection status from apps test types however because this type is called connection status in that this component I'm working on is also called connection status what I'm gonna do whenever I have these naming conflicts is I just import it as t T connection status so this is the type connection status and then this of course refers to the component all right so now let me sort this a little bit okay so I want to pull in these the active account number and Active network ID because remember we can't just use this use is connected on its own because in our connection status this use is connected Boolean or this Hook is pretty much going to say are we connected or disconnected however the reason that we need to pull in these is because we need to check if one of them don't exist at all and if they don't then we're just going to say that this connection status is invalid so let me go ahead and say the const is connected is equal to this hook right here and now we can go ahead and write a function to get our connection status so if const store it in your book called connection status and say use memo and the reason that I'm using a memo is because I don't want to have to recalculate this on every render only if one of these key values is changed so just a little bit better um I don't know performance I guess of course this function is going to return one of these connection statuses right here so I'll just type it out to make sure returning right value and also maybe I can steal this as well all right so just like here whenever we didn't have one of those active count numbers or Active network ID we returned false we're going to kind of follow the same logic here however instead of returning false since we need to return one of these connection statuses in this case we're going to return connection status invalid now if we do have an active account number and active ID then all we really need to do is convert this is connected Boolean to either connected or disconnected connection status so I'll say return is connected if you are connected then I'll say t connection status connected is the status that you want otherwise T connection status dot disconnected is what we're going to be returning let me just update my dependencies and all right good to go so now this connection status memoize function is going to return one of these properly and now from here let's see well the first thing we're going to be doing with this is we'll pass it along to this icon and eventually in here we're going to accept the prop of the status and depending on that prop it knows whether to display a we'll say a green value for connected a red one for disconnected and we'll use gray for invalid so since we're going to be doing that I'll pass along in status and again this is throwing this error because we didn't type this out but we'll fix that in just a second now another thing that I want to do is I want to write the function to render this text right here so we'll just say connected disconnected or maybe for invalid I don't want to say invalid that's kind of weird maybe I'll put a dash or something so I'll say const render text and this is just going to be let me make indexed text all right so I'll have each of these Keys be either okay so for connected I'll just say connected let me just copy this save some time now for disconnected we'll just render the text and disconnect it and then if it is invalid I'll just write a dash like this for some reason I just think invalid feels a little bit I don't know weird so return text and the key of this is where you at all right so in here I'm gonna do render text all right I think our text is good to go uh we are passing along the connection status to this icon now let's go ahead and style that icon right now so in that Styles file we are going to need the connection status type and we don't need to import it as that and then we passed it in as status so in here we'll say status is going to be equal to connection status and again what happens whenever you're using sound components is it's actually going to pass all these props through however we don't need to type in everything out because uh well in here it doesn't really care about all those different props so this is kind of just typescripting to make this happy and by the way um another thing I noticed is let me see if I can pull this up um in one of my earlier tutorials I was typing this out and I said vertical height and vertical width uh of course vertical width doesn't even make sense those two words together so that's actually a viewport height and viewport which I just thought that was a kind of funny thing whenever I was editing but either way let's get uh back on track here so what I'm also going to be doing is importing this CSS snippet right here and the reason for that is because in this I can actually delete this color and what we're going to do is we'll say for these props that are passed in what we'll do is we'll check the status and we'll say if the status is equal to connection status dot connected then what we want to do is return a mixing and I already have these mixins written now we don't have to do it this way and use mixins like this what we could do is we could just say like something like this like the color property and do all the status logic right here however in my experience every time I did this I always end up adding more properties and it's just a little bit more repetitive so using mixins I just think is a little bit cleaner even though we're only working on one property right here it seems kind of repetitive but I don't know I just like this format and it saves me from having to go back and kind of like rewrite this logic and separate it out into mixin so now the cool thing about this is we can add different properties right here but uh I think we're just gonna stick with color but anyways it's my little spiel you hear that noise I think like people are throwing garbage down the garbage Chute so all right so if the status is equal to disconnected then I just want to render out this disconnect and mix in and again all this is doing is just changing the color of the button and now last but not least I'll say if connection status is equal to invalid then I want to do this render this invalid mix in which is going to turn this icon to great now I'm getting an error right here and this is just say that not all code paths return a value and it's just kind of a weird thing because um I guess the style components aren't smart enough or typescript whatever this combination is to know that this is indeed always going to return to Value so to fix this all we have to do is just write return here and we'll be good to go and I think this actually might be it okay so let's check it out all right this is pretty good right here so it says disconnected and let me just verify okay I'm not connected to my iMac right now and now let me just get rid of one of these and that should be invalid and remember the text for invalid was this little hyphen and then let me actually uh give me a second let me pop open my laptop because I just want to test that connection status again so one second booting open my iMac is uh booting open tnb OS right now so there we go popped open and all right cool so you see it is indeed connected and make sure this is working I'm not connected to my Linux desktop and now let me just go ahead and shut off tnbos on my iMac all right looking sweet so there you go there is our beautiful connection status component and let's see what we got up next all right so next up now that this is taken care of we'll go ahead and hop and start working on this main button right here