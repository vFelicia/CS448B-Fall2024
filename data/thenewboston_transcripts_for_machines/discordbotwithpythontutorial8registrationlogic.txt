all right guys so in the last video what we did is we accepted this registration command and then we said okay whenever you register we're gonna look at the account number and then if it already matches an existing user that's already registered we're just gonna send back an error message that says already registered and if not then and this is the logic that we're gonna be writing in this tutorial and it basically says that if they are trying to register a new account number like they should be doing then if the user already has an existing registration then we're just going to update that with the new account number that they're passing in and if the user just doesn't have any registration created yet then we're just going to create a brand new one for them either way after this send them a dm with the instructions on how to verify that account number now before we dive any deeper what i actually did before this tutorial is i pasted in this little structure right here and these are the three type of objects that we're going to have in our collection so we already know what a user is a user is the end object that we're all trying to get to this is the ideal state and that is a connection a verified connection between a discord user and with you actually have their like primary key unique id in this field right here it's underscore id so what we are using as like their global unique identifier this is going to be their discord id and of course their account number is their account number on the blockchain and they are going to be able to verify and set this to whatever they want and then like i said in the first tutorial the logic the default logic for this is just that they can have a balance and deposit coins and goes to it however in this system you really don't even need a balance you can just have them pay for things directly or whatever but anyways this is the structure of a user object now i say this because each discord user can have one user object in the spots database and they can also have up to one registration now a registration is kind of like an attempt to set this account number to the registered users account number so again what we are going to be doing is we are going to be passing in a register command like this and the very first time that we do it let's say that bucky's discord id is this since i don't have any registration at all it's going to say okay as long as this is unique and it passes validation and whatnot then i'm going to create a registration for bucky with this account number that he's trying to register and this is going to be the random verification code that we're going to use later on now the next time i update my registration it's going to say okay you already have this one and if you're trying to have a new account number then it's just gonna replace the existing registration object for this user with a new account number so now that we understand all the details nitty gritty let's go ahead and complete this code so the first thing i want to do is actually pluck off a property from this context object and that is just because i'm going to set it equal to a variable only because we're going to be working with it later on and i want to give it something more descriptive naming and that is discord user id and this is equal to context dot author dot id so i just want to be able to use discord user id as a name so that's why i did that and another thing that i'm going to be doing and by the way this is kind of uh irrelevant but i noticed in the last tutorial that i called this variable account name so i renamed it to account number kind of embarrassing there but anyways so the next thing that we're going to be needing for this upcoming logic is this right here this random verification code now this is something that we're going to have to create ourselves so let me go ahead in utils.disc and let's go ahead and write that random verification code function right now so we are going to want to import random because well for obvious reasons and let's say we are just going to call this uh generate location code all right generate verification code and just as reference for what this is going to do pretty obvious but generate a random generate random verification code okay so the first thing i want to specify is what are the available characters that we're going to be choosing from and from string we can have the ascii uppercase and then we'll just do string digits as well so this random verification code won't have any uh lowercase letters but that's fine and then we are essentially just going to get eight random of these characters and then pretty much return that so to do that we're first going to make an iterable that we're going to join together and this iterable is just going to be 8 random characters in order to do that you can do random.choice and for this you can say we're going to be choosing from these characters which are just uppercase and digits and then we just have to iterate to get eight of these so for underscore in range eight all right so we're pretty much gonna loop over a random loop eight times and generate eight random characters join them together in a string and just return that and that is going to be our verification code so let me make sure that this is clean and we'll pluck this over so let's see from utils discord we're going to import generate verification code and now what we can actually do is generate that right now so i'm just going to be lazy and say that our verification code is going to be equal to the return value of the generate verification code which should be a random 8 character string and now let's plop back in and see where is it there we go okay so again just to double check our logic uh what we have this point is a valid account number so now what we can do is say okay does the user aka the discord user and we're going to check that by the id do they already have a registration object meaning that did they attempt to register before and if it is yes we're just going to update it if not we're just going to create a new registration for them either way we're going to end up with a registration object for them either an updated one or a brand new one so with that being said let me pop open pycharm again and we can do this so we are going to run a query on the actually do i if you didn't have that yet no i don't think i do okay so in addition to this users collection we are also going to make a registrations collection and we'll just say registrations and another thing i want to point out is if you look in my database i don't have any registrations collection right now i only have a user's collection but the cool thing like i said about is that once you try to add an object to one of your collections and that collection does not exist then it's just going to go ahead and create it for you on the fly so that's why i don't need to like go back and explicitly create this collection so anyways with that being said we now have a reference to our registrations collection so we can just run a query on it and i'm going to be storing the results in a variable called results and what we are going to do is we are going to call a method called update one now check this out i want to show you guys what's going on so even though only one of these paths we have where we need to update this registration number what we can actually do in this method is we can call let me see if i can show you guys there is a flag that you can pass in called upsert and what this means is that if you are trying to update a document it's technically called and that document doesn't exist then it's going to go ahead and create one on the fly so the naming of this is a little bit misleading because it's kind of like create or update you can think of it as so okay so the first argument that this takes is the filter of what you're trying to look for and again if this matches it's going to update it if it can't find it in the registrations collection then it's going to create a new one so we can just say the unique identifier is going to be equal to the person's discord user id since for all these registrations that's how we are identifying who they belong to that's the id this is going to be the discord user id all right cool cool cool cool now maybe you found it maybe you didn't but either way what we want to do is this in i don't know how familiar you guys are with but just to show you guys the syntax whenever you say you want to update some properties or set them you use the dollar sign and the command is actually set and then this is actually the key of an object or a dictionary and then the values you put in here are what are going to be applied to this so it's it's a little bit strange syntax now that i think about it and i also think that i am a little bit too nested here okay there we go no it looked funny but essentially it's going to look something like this so the account number for the registration is going to be equal to the account number that got passed then and remember by this point we know that it is valid and after this we are just going to set the verification code and i'm going to copy it from up here to make sure i got all the you know correct syntax correct spelling and whatnot and the verification code we want to set it equal to a verification code so this command is valid however like i said since we don't just want it to say update it and if you can't find it tweak out when we pass in the upsert command that is equal to true what this means that if you can't find it for example someone's trying to do this or register for the very first time then just go ahead and create one okay now with this query the reason that i took this and i wanted to store the results it's because the result object it actually returns a property called modified count and this is how many objects it modified so this is either going to be equal to one if you updated someone's registration or zero if you created a new one so the reason that we want to check this is because we are going to send back a response from the bot that either says registration updated or registration created and actually because i'm super lazy here i'm just gonna copy this i mean come on this is a little too lazy but either way okay so this first one is if something was modified in the registrations collection that must have meant that a registration already existed and therefore the registration updated message is what we can send back now if okay how are we going to do this it's probably going to be multiple lines so let's do this so for the description text we can just say something like uh your registration has been updated we can say something like um with a new account number but that's getting a bit too wordy so we can say to complete registration follow the instructions sent via dm all right so if they are updating the registration to have a new account number this is what we're going to send back otherwise we are going to send back a similar message but instead of registration updated which you should say is we can say registration created and then all right so this text we can say uh let's just do registration created and we can have the same description right here where it's a complete registration follow the instructions via dm okay so that is pretty cool pretty cool and then the last thing that we actually need to do after this is that we always need to send them and let me plop open my chart again so no matter if they're updating or creating a new one we are always going to send them a dm in that dm remember it's going to say send onecoin to the bot account with whatever the random memo is that we generated and since that is the same for each of these flows we can just make that function right here or we can say send verification message now let's actually go ahead and code this as a separate function in our discord utils so this is going to say let's just say send send verification massage message okay and what are we gonna need to pass in here so it's gonna say to complete registration send the following and we're gonna need okay the bots account number the verification code and then their account numbers so we're going to need the context we'll say registration account number and registration verification code and then for this we'll say send verification message uh and we can say dm verification there we go that's what i do in my head when i can't spell something i just say really slow okay so now let's go ahead and create another one of those beautiful embeds and we'll just name it embed it's going to be equal to a discord embed and then the title of this is going to be account registration okay now the description can be something like to complete tradition please send the please send the following transaction and yeah we probably could have made this a little bit more dry since i feel like i'm repeating myself but um either way this is fine for now and i missed the comma right there and let me clean this up okay beautiful so remember this is going to be dm from the bot saying to complete registration then it's going to give the commands for this user what they need to fill out in this whenever they send coins to the bot to verify so if you remember how to add fields if you do in bend do i say embed in bend add field embed add field okay i can't talk today but whatever and then the first thing is we're going to say the name of this one is going to be from and then we want to say that the value of this is going to be equal to the registration account number because remember we want them to send this from the account number that they're trying to register so that we can prove that they indeed own it because only they know of this secret verification code and then just for formatting i'm just gonna say inline is equal to false and then we're gonna include three other pieces of information in this embed so due to mega laziness just gonna copy that three more times now this next one is we're gonna say who should the transaction be going to well it needs to be going to the bots account number and if you remember from settings we have the bot account number right in here so in discord utils you can say from config.settings import bot account number and then two bot account number okay there you go and then for the memo we want to say the memo is going to be equal to this let me show you you guys can see it this registration verification code that's that random one that we generated so that needs to be the memo and for the amount we're just going to say that the value of this is just going to be one and that just means uh you just need to send one coin now the last thing we need to do is we're just gonna send it as a dm to the user so a weight dot author dot send and i think that's something new that we didn't talk about yet but anyways let me see if i can okay so you see send in bed right here where we're taking the context object and we're saying context.send well we're doing something a little bit different here what we're doing is we're doing context.author.send now the difference of this is that whenever you do context.send it's going to send the reply to the same channel discord channel that the user was typing in now whenever you do context.author.send this is what's going to send the author a dm or direct message so you know if you guys are ever wondering how to send a direct message that's how you do that and last but not least let's go ahead and copy this because we need to import it and use it so back in main.py my discord utils all right so we imported that and last but not least we can just say await send verification match message and the context is equal to context and the registration account number that is going to be equal to the account number that they passed in and then last the registration verification code is going to be equal to the random verification code just like that so now we have our logic designed where we are now ready to test this bad boy so let me go ahead and copy this and i'm going to run this and it said away outside async function and that's probably because in this i need to make this async okay yep in that uh little function that we just created i use the await keyword but i forgot to uh prefix this function definition with async so that's what the error message is coming from going to run this again and it says ready now let's well first i want to show you guys this so i'm going to refresh this and we see that we still don't have a registrations collection and if we go to users the collection and refresh we get nothing so basically our database is as empty as you can get it now back in discord what i'm going to do actually let me make sure i got the right account number so i'm going to copy my account number that i am attempting to register and i just want to say register apple's first make sure we get error invalid account number beautiful so now let me go ahead and register this account number which is a3 yada yada my account number and then it says registration created now that's pretty good because that's what we intended to do the very first time i'm making registration and now if you saw my dm this tutorial bot is going to say account registration to complete registration please send the following transaction from my account to the bots account and this was the random memo that it created or the verification code and then it just said amount one now just to test the full logic because we also have it said okay if the user accidentally typed in the wrong account number or they just want to you know register another one of their blockchain accounts with a spot then what they can do is they can type in register again and then they can paste in a new account number and instead of saying registration created because remember it's not uh being created for the first time even though i didn't pop this open it already existed in there then once it already exists in here then it can just go ahead and update it and that is why it said registration updated and then it gives us this new uh prompt this new dm saying okay instead of this account number we received your new one you can now send your verification message from this and uh just to show you guys in what's going on so right now we have a registration that starts with a db so in here it is db the text might be a little bit small but it says it so and i just want to show you guys this since i forgot to pull open the first time if you register a new account number then in if i refresh this you can see that even though my id stays the same because this is my discord user id that the account number and verification code those did indeed change so now i got instructions to say okay i said this a couple times about now but this is what i have to send to the discord bot however if i just send it right now then it's just going to be a donation to the discord bot because we do not have the logic written where we can actually listen for these transactions coming in and then do something once we receive them so that's what we're going to be creating right now