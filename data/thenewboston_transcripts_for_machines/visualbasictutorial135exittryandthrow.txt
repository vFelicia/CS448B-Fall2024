hello YouTube Sam here from youtube.com/ onli gamer for the New Boston and in this tutorial we're going to be talking about the exit try statement and if we have time we'll also be talking about the throw keyword so what the exit try statement does is it's basically like any other exit statement like exit sub Exit 4 or exit do all of those will exit the current uh statement that it's in so let's say we'll go ahead and type if index is greater than or equal to let's say my array. length and I think it's minus1 so if it's greater than or equal to my array. length minus one what do we want to do we want to exit the try so let's go ahead and run this and if we did this right um it's going to exit the try um before it prints one I it would exit after it prints one but you still get the uh idea of what it does it will just exit the statement and it will go past this catch statement right here this it will not see this and it will go to the line of code that is right below it so it goes below the ENT TR and runs whatever code is right there now uh exit TR is a very simple concept just like any other exit keyword so what we're going to talk about now is throwing new throwing exceptions so we'll just type um if index is greater than or equal to my array. length what do we want to do we want to throw and you can see here that the description says throws an exception within a proced procedure so that you can handle it with structured or unstructured exception exception handling code so this will just throw the exception before the exception actually happens so if an exception is about to happen let's just throw one right here and we'll handle it down here in the tri catch statement I mean the catch statement so we want to create a new exception and we will throw an index out of range exception and for our parameters we can add a message so we'll just say um okay so we're going to throw a new index out of range exception and it's going to say you don't try to access memory that isn't there so now what we're going to do is we're going to catch that exception so we'll type index out of range exception and for for our code we will just sew that in there so ex Dot and what we're going to do instead of two string we're going to get the message for that so it's going to show our message that we typed in right here so let's go ahead and run this you can see that when we click add all it's it says you don't try to access memory that isn't there now the message will not show up if we just do ex do2 string so we go ahead and run this and it's going to give us the same stuff that we did last time and it looks like it did show up it says um system. index out of range exception you don't try to access memory that isn't there so it gives us the type of exception whatever message that is thrown with that exception and then it shows us all the information about it uh sorry I thought I thought that wasn't going to be there but uh it was so if you do two string it's going to show you the information and and the message now it's more um it's better coding to just show the message to the user uh so that they don't have to see all of that stuff right there that they most likely will not understand now sometimes what you can also do is throw exceptions just to get yourself out of some code um I wouldn't really recommend this but sometimes it is a valid way to get out of code so let's say say you're doing an operation and if something happens in that operation you want to throw a new uh exception and you just catch that exception right here and just leave that blank and what it's going to do it's going to exit whatever operation you're doing right there and then come down and start at this line of code now you can also have multiple except multip multiple catch statements um when you're throwing new exceptions and you can throw exceptions um anywhere you want your program but just keep in mind that it's going to make your program crash um so let's say we'll go ahead down here and we'll throw new exception and for the message we'll type hi I am an exception so for this to actually show up what we're going to have to do is right click on try catch and click build so we're going to need to run the debug uh not the debug we're going to run the release so if you head over to your Visual Studio 2010 uh live um project folder right here so we got libraries documents Visual Studio 2010 projects here's our Tri catch project if you go to the project and then you go to bin release you'll see your program right here go ahead and open that up and this is the release form of your program it doesn't offer any debugging capabilities so if we go ahead and click add all it says an unhandled exception has occurred now this is built into Visual Basic and it handles exceptions for you so that they the user can either continue uh pass the exception or quit and you can see that the message right here says hi I am an exception and that's the message that we sent to it when we threw that exception so we can just go ahead and click continue because nothing bad is going to happen and we can go ahead and close out of this so go ahead uh practice with the exit try statement you can also practice um throwing exceptions um in your program or in your try statement and uh once you're familiar with that and you're not going to forget it go ahead and move on to the next tutorial