ah right yeah so we got our template set up looking good and check this out so whenever we click read it's going to take us to the details view for that Taylor Swift album whenever we click skatepark is going to take us to the details view from that band that I you know I knew in high school but check this out whenever we go to the URL like forty three hmm you see we don't have an album with ID of forty three yet our web page is going to try to display this and that's usually not a good thing because what we want to do is if the user or if we go to a website and we don't have the resources to actually display information we want to send a 404 so I know you guys have been in those websites before it says 404 error that means that I don't know like maybe someone made a post and deleted it or maybe someone like had a item on their shop for sale but it got sold out so they just deleted it basically a 404 means we don't have the resources to display or it got deleted or something like that now that's the proper way to do things so that's what we're going to want to do in Jango so in order to use these four or four messages you do this so from Jango HTTP import HTTP 404 art so let's go ahead and make it for that details view so the first thing I'm going to do in here is just make a details template so new HTML file I'll just name it a detail alright so we can get rid of this for now in our details template we won't worry about what exactly is inside there right now but we do know that we're going to want to not return this all right now instead of just returning some HTTP response without even checking if the ID is valid what we want to do is we want to try to query the database and we want to see if there's album with the ID that they typed in if there is then we can just go ahead and display this template but if there's not then instead of sending back a normal respond so we want to send back an HTTP 404 response so what we do is we make a try accept statement and I'm just going to first go ahead and try to get their album ID so say album equals album objects and you remember how we get a specific album just one of them we either have to use PK or ID doesn't really matter and this is going to be equal to whatever ID they passed in so we're going to look for the album with the ID of one or two or seventyfour whatever now most of the time as long as the ID is valid then this is going to work perfectly however if they type something in like 700 and we can't get that item then what it's going to do is it's going to generate an album does not exist air so we'll say except album does not exist that means that hey arm that album you know maybe it was a typo maybe it got deleted or whatever but we don't have it in our database anymore so how do we handle this well to send back this 404 response it's called raising not raisins it does sound kind of get the raisins HTTP 404 and this is actually a function where you can pass in a message and then that message gets displayed um included in your 404 so I say album does not exist alright so hopefully they don't get that but you know they might who knows now another thing I want to do is just use this shortcut because that's a lot faster than you know what we learned before and I'll show you guys even a cooler way so you know how before what we did is we made this context which is basically information that your template needs to work and we set it equal to a dictionary well any time you have variable and you don't use it multiple times you see how we just use this one other time then what you can actually do is you can actually just take the value of it and use that instead so variables are just for whenever you have a value and use it over and over and over again in your program whenever you don't and you just use it once then you should probably just set equal to the value unless the values like something big like you're reading at a document or something so for this we're just going to throw in the album information and boom Russ that everything is good to go and actually this import right here HTTP response we aren't even using that for anything since we're just using render for everything so we can just delete that clean up our code even more and let's clean this up even more while we're here all right so look how condensed our code is yet we're learning more funny how things are alright so in our detailed view we probably should you know show something what are we going to show what is through this album so we'll just show the default view or the default string representation of that album and oops almost forgot this is the detail that HTML so this is the template that we're using for the detail view and all right let's so let's go ahead and refresh this make sure everything is uptodate and check it out so whenever we go to this URL music slash one it displays red taylor swift skatepark slash myth and we can do this all day now if the user ever tries to do something stupid like go to 54 then it's going to say page not found and this is our 404 response now this is what I was talking about elbowing does not exist if you want to give them a little clear indicator of why they are getting this again this is optional but it's always a good idea to do so there you go noise made this is actually a pretty fun app if he asked me alright so so far we learned a bunch of stuff how to use templates for form messages but still there's a lot of crap to cover so yeah I think guys for watching don't forget to subscribe I will smell you guys next time