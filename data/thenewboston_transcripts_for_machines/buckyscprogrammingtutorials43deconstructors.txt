what's going on guys welcome to your 403 C++ tutorial and in this tutorial I'm finally going to be explaining to you guys those things called deconstructors you know whenever we created a class and it said automatically create a deconstructor or whatever and we had it unchecked well I'm going to explain to you guys what they are um when they're used and then you know when we're creating a class from now on we can understand what they mean so the first thing I want to say is a deconstructor is basically code that runs automatically upon the destruction of your object and that's a technical term for it but basically at the end of your program when all your memory is getting freed up and your program's ending and all your objects are getting destroyed and you want a less little bit of code to run that's when your deconstructor is going to run so you know as soon as you create an object The Constructor runs well as soon as it's deleted the deconstructor runs so that's basically you know when that happens so let's go ahead and first before I even start talking about a deconstructor let's go ahead and type some code into our Constructor like um C out I am the Constructor and make sure you spell it wrong and then end that line so now we can see if we go ahead in main.cpp and create come on keyboard type regular and create a Sally object so Sally um so and then after this we really fire truck are you really going to run right behind me in the middle of this tutorial no that's not annoying well that was kind of annoying but anyways continuing on so we went ahead and we created a Sally object now as soon as we create this object our Constructor is going to run and all our Constructor does is shout out I am the Constructor on the screen so now we go ahead and type another line of code like see out um OMG what DF is this on my shoe or something stupid like that and end that line so let's go ahead and run our program so far so our object was created and it shouted out I am the Constructor automatically we didn't have to call a specific function it just did Auto automatically and then our program ran that said OMG WTF is this on my shoe so now let's go ahead and add a deconstructor Now to create a deconstructor it's as simple as this the name of your deconstructor is the ti day and that's above the tab on your keyboard but under the Escape it well that's where it is on mine if you look left of the one um you see that little squiggly sign it's called a till day I think at least that's what I call it so go ahead and type that and then type your class name which is Sally so basically your deconstructor looks the exact same as your Constructor except it has that little squiggly toaday above it so now let's go ahead and create the the body of it and again it's the exact same as your Constructor except it has that little squiggly til a right before it so another thing I want to point out is this whenever you're creating a Destructor it has no parameters no matter what you can never give it parameters also it never has a return value you can't even give it void and aside from that there's no deconstructor overloading you have one deconstructor and that's it you can't have different versions of your deconstructor so basically it's a PL really another fire truck are you serious this is going to run right past me you guys hear that yeah I'm just continuing on with my toroes and I really don't feel like redoing it so sorry guys so basically whenever your object is first created your Constructor is going to run and whenever your object is automat Ally deleted or you know um destroyed I mean that's a technical term for it your deconstructor is going to run so let's go ahead and type some code and see out I am the deconstructor and make sure you type that very wrong and then go ahead and end that line and let's go ahead and take a look at our main and I'll explain to you guys what's going on our first line of code we created a Sally object so right after it right around here our Constructor is going to get called and our Constructor shouts out I am the Constructor so then after this it goes ahead and runs the program OMG WTF is this on my shoe so the next line of code is going to be is going to be this excuse me now after this line of code is running it's going to see that it got to the end of the program whenever it gets to the end of your program C++ automatically destroys all your objects so by default automatically it's going to call your Constructor for this object right here so let's go ahead and build and around this and see what happens I'm the Constructor OMG WTF is this on my shoe and I am the deconstructor so as you can see it automatically called the deconstructor and Constructor for us so another thing I want to point out is when your program is finished running that's when your deconstructor is going to get called so again your Constructor and your deconstructor you don't have to explicitly call column like you would another function inside your class they get called automatically and again remember whenever you're creating your Constructor it's basically a duplicate of the Constructor except you need a little til a right there and unlike a Constructor you can't overload it it can't have parameters it can't have a return value and make sure you don't even put void as the return value it's basically a dumb down very simple function so that's the very basics of a Constructor and a deconstructor and later on I'm going to be showing you guys why deconstructor is useful other than just printing out stuff on the screen but for now just understand the concept and I'm going to go ahead and help these fire trucks put out a fire so hopefully in the next tutorial they will stop running past me but for now thank you guys for watching don't forget to subscribe and I'll see you guys in the next video