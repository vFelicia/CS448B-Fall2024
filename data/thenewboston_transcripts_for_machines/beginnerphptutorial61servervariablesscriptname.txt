hi this is Alex from PHP academy' de org and this is a video tutorial for the new Boston now in this video tutorial and the video tutorials that are going to come after this and in the short server series are talking about a predefined variable in PHP called dollar underscore server now you may have seen this before if you've dealt with PHP before server is a predefined set of environmental information and it allows you to let's just go back to up it allows you to access certain information about the page the user requests that have been sent for example so in this video we're going to be looking at the file name and how it can be useful to us now how do we go about doing this so I've already shown you the the variable name which is dollar underscore server so it's much like things like dollar underscore post and does underscore session so if you're learning PHP for the first time you're probably starting to see some kind of resemblance to with all these so what do we do if we want to echo out or display to the user the current file name of the PHP script that we're on now you wouldn't necessarily in everyday applications want to do this because you know the user can already see the file name and we're working within the next stop PHP at the moment we've got this error because we haven't specified anything but yeah we can already see the script name so why would we want to do this well it's useful for us when with doing things like submitting forms for example you specify your the the key inside of here so I'm going to say script underscore name now what this is going to do is it's going to take the script name and it's going to apply it into a variable so I'm going to say script name you can just echo it out straight away like this but I'm going to put it into a variable so it's just a bit easier to see what we're doing so we've got the script name here and we're using the predefined server variable and this is the environmental information that we're we're putting through so we've got script underscore name in capital letters now we're echoing this script name so let's test this and see what we get okay so we've got forward slash series forward slash server forward slash index now you can see this corresponds somewhat to my URL in the sense that we're not including the domain name at the moment I'm working locally on my computer but we we don't include the we're not including the domain name so why is this useful now let's say we wanted to submit a form but we didn't know the far the name that the the name of the file that the user was actually currently on for example let's create another file and we'll put a form in and we'll have the action of this well we'll leave the action out that's the point so method equals post and in here we'll just create a submit button equals submit name equals submit and value equals submit now I've given this a name so you can keep track of when this button has actually been pressed so let's save this as header Inc dot PHP now what I'm going to do with this is I'm going to include it in the top of my script so you should have already had a look at the include function already so heading PHP now what this is going to do is it's going to include this inside of our script so let's just check that out and see what happens okay so now we've included this button here now what happens if we want to I mean at the moment I've left action blank what happens if we have another page so I'm going to create another PHP page here another page dot PHP what happens if we had another page and we were including this file as well so header Inc dot PHP now what I want to do is I want to have let's just get rid of this for now I want to submit this this form but I won the action to be updated depending on what page I'm on because if I was to say have this button here but I had let's say if is set dollar underscore post submit echo we could say anything really process one this process might be say registering the user if that makes sense let's just copy and paste this over to the other page but we can now call this process to so on index.php we're dealing with process one and on here we're dealing with process two however we've got the same form so what happens if we want to say submit it to and this information the button come back to index.php or on this one the button to come back to index another page dot PHP so in here I could type index dot PHP so we've solved half of our problem so let's refresh the page and I click Submit and it comes up with process one but now if we access the other page you can see that when I click Submit we go back to index dot PHP however what I want to do is stay on another page dot PHP but process this here so how are we going to go about this well the answer is simple we've already looked at this we've already looked at this script file name or script name so what we can do is we can specify a full filename so we could say a script name equals and and this could be relative obviously to server and in here we could type let's say um script name now what's happened here is we have we've created a something that's going to be dynamically updated depending on what page they're on so this header include is included on index and another page but when we run index this will be different and we're on another page this will be different again so let's change this action here and update it dynamically so we can set PHP tags to to put this in here and we can just echo out scripts name so now what's going to happen is whatever page we're on let's just view the source you can see that form action equals another page dot PHP there with the long live filenames that were with directories that we're currently in however when wait on index.php you can see that it's automatically changed again so obviously this isn't going to work at the mic well it will because the way everything's set up so let's go over to another page and we click submit and we've done that so we've used the same form to process but on two different pages now how will this be useful in a real life application now let's say this submit button had a form field which was username and password and you wanted to log your users in but keep them on the same page as they are you could use a form to log your user in everything could work out so you find and then what you could do is using this variable that we've we've set here you could redirect them back to the page that they submitted the user login from so most websites you have the username and password at the top of the page and you will return to the page that you are currently reviewing before you logged on so that's a really useful way of using that server predefined environmental variable