hello YouTube sam here from youtube.com slash on live gamer for the new boss Tim and in this tutorial we're gonna be looking more at ArrayList now if you remember in the previous tutorials we looked at remove add remove at and add range and now in this tutorial we're gonna be talking about trimming a rayless to a certain size so that it behaves more like an array and it is a little bit more efficient than an ArrayList we can set the capacity of the ArrayList and we can also use binary searches to search for a certain value in our ArrayList so let's go ahead and get started let's go ahead and set the capacity of our ArrayList now what we can do is down here we can type my let's do it under form one load so we'll come over here and now what we're gonna do is gonna type my ArrayList dot and you can see here as I've said before there's a whole bunch of stuff here you can I Charlie encourage you to look at this and see what you can do with some of these functions and subs and so what we're gonna do is we are going to set the capacity so my ArrayList dock capacity equals let's just set it to you we have 1 1 2 3 4 5 6 7 8 9 10 11 so let's just set the capacity equal to 12 or let's do a lemon so now if we go ahead and run this let's type message box and then we will type my ArrayList dot and then we'll type count so what this is going to do is it's going to get the count of the items in the array list and it's gonna return that as an integer so we'll just go ahead and convert that to a string so if we go ahead and run this here's our program and if we click display array list we get 11 because we said that capacity to 11 now if we set the capacity to anything else so let's do 20 we go ahead and run this it's going to give us the count of 11 because it's not giving us the capacity of the ArrayList it's gonna go ahead and give us how many items are in it now we could go ahead and add nine more items to my ArrayList and then the capacity would be full and it wouldn't let you add any more items to this so let's just do my array list dot capacity so if we go ahead and run this it should give us the value of 20 so we get 20 right there because we set it to that and then it'll go and add all the stuff to that so what we can also do is what's called trimming the ArrayList to the size so let's say you have an ArrayList you don't know how many items people or your program is going to be adding to that array list and you want to let them add it to until let's say a certain point in time and then you want to make it to where they cannot add anymore what you can do is you can trim your ArrayList to the size of how many items are in there so once they're done adding items it'll go ahead and trim it to size so we set that capacity to 20 then we added 11 items to it so what we can do is type my array list dot trim to size so the capacity is 20 but when we trim it to size is going to take that down to 11 because there's only eleven items in there and if we print out the capacity you can see that we get 11 because we've trimmed it down to however many items are in there so that's some pretty simple stuff there and for the last thing that we're going to learn in this tutorial we're gonna learn about the binary search so we'll come up here and we will just declare a variable so private index as integer so now what we're gonna do is whenever they click the button button list items we're gonna get the index of a certain item in there using a binary search so let's say we don't know the index of an item and we want to get that so we'll just type index equals and now we're going to type the name of our ArrayList so my array list dot and then we're gonna call binary search and if you read the description of this it says search is a range of elements in the sorted system doc collections dot ArrayList for an element using the specified compare and something else there but anyway what you need to get from this is that inside the arguments you're searching for a value now this could be a string or a number or a data type an object and so we'll just go ahead and search for Sam so it's going to search for Sam and it's going to return the index to us so down here we'll just messagebox index and we'll convert that to a string so if we go ahead and run this click display array list looks like we're getting an error here failed to compare two elements in the array ok so I found our error here and what we were doing wrong you can see that we added Sam to our ArrayList but when we add range my array add all the items in my array you can see that Sam is already existent in that so I'll just go ahead remove this right here and then we will stop the debugging and we'll go ahead and run this again and we will click display ArrayList and it returns the index of seven so I'm go ahead and practice trimming ArrayList setting the capacity I'm doing binary searches and whatever else like I taught you in this tutorial and once you got that down go ahead and move on to the next tutorial and thanks for watching