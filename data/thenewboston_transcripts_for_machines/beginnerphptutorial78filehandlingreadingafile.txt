hello again this is Alex from PHP academy' dog producing this video for the New Boston now in the last file handling example we looked at a pending data and we created this form here which appended data to the end of this file here and so far we've appended four names now what happens if we want to read in this data I want to read in each name and display them to the user and what we're going to do is we're going to create this inside this process here so when they submit a new name it just reproduces a list of the current names and I don't want to reproduce a list of it line on a line by line basis I want to produce it separated by commas now you may look at this file and think how are we going to do this because they're not separated by commas they're on a line by line basis well we have various functions that allow us to open files and read in on a line by line basis now remember using the for each statement we can use that again here so what I'm going to do is underneath here I'm going to create a little section for myself to read this file in in fact we can do it under the F close it probably be a lot better so let's create a variable could read in and this is going to be using the file function this time we're not using F open we're just using file and what we can do is we can specify a file here and we're going to specify the file type of R so we're reading that data in so that is obviously going to be names.txt so let's just add another name to the list and just double check if this works properly and so Sandra click Submit expects parameter two to be long oh okay okay so let's get rid of that so we're basically just reading this in we're using the file function to read this and there's no need to use this because we're reading an underlined by line basis we're using this file function rather than F open so for now just stick to this file function and we're going to read it in that way so let's refresh that actually that that will have written so let's just check back on that okay yes we've got signed rather to the end of the list so our goal is to read it read the file in which we've done now what we want to do is use for each okay and we want to say read in as name okay so or or or f9 we'll call it because it's the name within the file so now what we can do with standard notation with the forage we can echo out this F name each time and then what we can do is we can append a comma onto the end of it so the process goes we a start a variable called read in we use the file function to read in this names txt file what this will do this function will do is it will read in the line reading the file sorry on a line by line basis there are other ways to do this but they're a bit more complicated however this is the easiest way possible now what we're doing is we're using a for each statement and we're using the array that's been read in and we're using this array each element of this array as F name then we're echoing our f name with the comma so above this we could write current names in file and then that should echo them out now you'll probably notice that when we run the script we're going to have an extra comma after the list so let's just try and add another name to this and see what happens so I'm going to take down and I'm going to click Submit now you'll see it says current names in file Alex comma Billy commerce Stephen at the moment it's not looking to gray so let's just tidy that up we need to first of all see what's going on here now alex has a space oft where as does Billy as does every other name in the list and we can use a function called trim to trim this down and this removes whitespace from the start and the end of our name as well as any other special characters so just by adding this function around the name as we echo here we can see that it's actually if we add another name in let's say Josh submit you can see that it's removed that white space now what we can do is we can just get rid of or add a space in after that we'll add another name in let's say Dale okay so now you can see that it's displaying properly now what we need to do is we need to analyze this problem we've got with a comma at the end here so as well as reading a file in in this tutorial we want to actually read it improperly and display things properly so we need a way of counting all the elements in this in this text file and we can do that with the count function so I'm going to create a new variable here called read in count and that's going to equal count a function count and we're going to input the read in array which is created from this here so we're counting the values in the array now what we can do is get rid of this and we can start an if statement here now I'm going to say if count doesn't equal read in count and we're going to say echo comma and then space after knee afterwards sorry so what's happening here we're counting the element in the array and each element in the array is a name so we're counting the names essentially let's just declare this count variable up here as zero okay so if count which is this here doesn't equal reading count then echo that then we need to count plus plus at the end so we're incrementing this count value each time this will be 0 1 2 3 all the way up to the amount of names that are in the list then when we reach the last one it's not going to it's not going to show the comma so let's add another name in let's say pizza click Submit oh it actually has okay um so let's fix this so if countless look think about this logically if count doesn't equal reading count if count is smaller than greater than yeah it'll be smaller than so if count is smaller than reading count let's have another name to the list just do Daniel this time and click Submit oh dear okay hmm one change that to one perhaps oh I think that might be the problem we'll just keep adding Daniel there we go okay so after a bit of fiddling around um what we've done is we have created a variable called count and assign the value of 1 then we incremented this each time but just before this we've created the check to see if the count is smaller than the amount of elements in this flask the amount of names and and if it is smaller then that means that's fine we can get we can echo out a comma otherwise if we've got to the last element in the array then we want to not not we don't de Becque or a comma because it's silly echoing a comma in the end so after this tutorial and me making a couple of mistakes and correcting myself I'm sure you've learnt a thing or two so that's the end of this tutorial about reading in files with PHP