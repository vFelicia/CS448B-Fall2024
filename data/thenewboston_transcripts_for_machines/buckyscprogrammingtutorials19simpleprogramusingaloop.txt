what's going on guys it's Bucky and welcome to your 19th C++ tutorial and you know what all these nice little quick examples are fine and Dany but let's go ahead and build a program that is actually somewhat useful a program that you can use and you know maybe your teacher assigned you something or maybe your boss came to you and was like you know what Bucky I want you to make a program that allows the user to enter five different numbers and then I want you to total the numbers for them but you have to use a wall Loop so we're saying all right no problem so here is how I would go about making this program and by the way this is some nice little programming tips you start with the basics of your program and you do it in little baby steps so first of all I want to make a loop that runs five different times so what I would do is make a loop int X set this variable equal to one this is just going to be the looping variable while X is less than or equal to to five let's just go ahead and print out something to make sure our Loop is working see out x n line so that's going to print out X and you know how I said that in order to add one to X each time you go ahead and write xal x + 1 well you can do that but let me let you guys in on a little secret if you go ahead and write x++ this is the exact same as writing X Plus x = x + 1 it's just a quicker and easier way to do things and that's actually where the name C++ came from they wanted it to be C and you know anyways that's the history of C++ it came from an old language called C and they added two little plus signs to it thought it was cute so anyways that's your history see but what we're worried about is making sure that we have a working Loop that runs five times so let's go ahead and run this so all right 1 2 3 4 5 our Loop is working perfectly we can now move on to next step and by the way this was just a tester line we don't really need that in our program so they're saying all right our boss told us to make a program so the user can enter five different numbers so we already know that the cin is the way that the user can enter a number but we probably need to store that number in a variable so let's go ahead and store that number in a variable number and since we don't know the value yet we can't set that equal to anything yet so what we would do in order to to have the user enter a number five times is inside this Loop go ahead and write cin number now our Loop is going to run five times and the user is going to enter a number each time before the program quits so what I would do now is test the program again just to make sure it's working all right 43 54 66 2 and three enter our program's done so now we see not only do we got a loop that runs five times but but we also have the user enter five different numbers so our program is working five and dandy so far so we're saying all right now what's the last thing he said oh yeah he wanted to find a sum of all those numbers and print it out to the user or something so we're saying all right now not only a number variable but we need another variable to hold the sum or the total of all those numbers so what I would do is go ahead and put int total and by default their total is going to be zero because they didn't enter any numbers yet that's what we know so now what we can do is this you might be thinking this so just go ahead and set total equal to number but whenever we run this it's not going to work because say they enter 10 the first time where then total is equal to 10 okay it's working fine so far but the next time they enter eight and we were expecting 18 well this isn't being added to total total is now being changed to eight so instead of being 18 it's just8 so this isn't going to work so what we need to do is do this total equals the old total plus the new number so now what happens is this whenever they answer 10 it's going to be 0 + 10 total is equal to 10 the next time they enter 8 8 equals number so 10 + 8 equals a new total of 18 so let's go ahead head and once this Loop is done running let's go ahead and just give him a nice little print out on the screen um your total is total and might as well end that line why not so let's go ahead and run this program and now let's go ahead and run it and make sure it works so let's go ahead and put 10 enter 8 enter two enter five enter five enter your total is 30 so all right let's go review this one last time it seems like everything is working fine let's just go ahead and make sure well I guess I can cover that up that says end line there now I'm covering it up so basically the first time the first thing we did is we got a loop that worked then we wanted to have the user enter a number and then we did something with that number so what happened is this the first time the user entered a number it was 10 so the total which was Zero before is now equal to 0 + 10 so now total equals 10 the next number they entered was 8 so now the new Total is 10 + 8 which was 18 the next number that entered was two so 18 + 2 now total equals 20 next number was five now it equals 25 the last one was five also now it equals 30 so this is basically saying all right take the new value of total and set it equal to the old Value Plus the number that they entered and at the end we just said your total is 30 works pretty good so let's go ahead and just to make sure that it's working good let's really test this add some big numbers like this why why do I keep entering the same number each time and that so you know okay I'm not going to check this in my head but you guys can go ahead and check that out on the calculator and if it works then it means we just built the best calculator on Earth so I'm actually going to go ahead and copy this and email this to Microsoft and hopefully they pay me you know just a couple million dollars for it so you go ahead and what I want to stress in this tutorial is this not only this is how you build a basic program to you know it's just an example of why a while loop would be useful but also whenever you're building programs take it in baby steps do the most basic thing first and then once you got that working go on to the next step and then on that working you can go on to the final step and now we can do something like maybe we can find the average of all these number or maybe we can um find the product or the quotient or something stupid so again take your program in baby steps that way you don't try to build a whole program and then at the end when you got 10 different errors you're saying all right what went wrong so that is the basics of not only how to be a good good programmer but also how to use the wall Loop in a meaningful way so for now thank you guys for watching um like I said just going to go ahead cut this and paste it to Microsoft and uh yeah I'll see you in the next tutorial when I'm a millionaire