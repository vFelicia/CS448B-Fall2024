well is up guys welcome to your 14th C++ tutorial and in this story I'm going to be going over constructors what they are and why they are useful so first of all I want to tell you guys what a constructor is a constructor is a function that gets called automatically as soon as you create an object so before what we could do is we could create an object and use that object to call functions from our class well now as soon as we create this object it's going to call a funk funk ssin code constructor we don't need to explicitly use that object to call a function it's going to do automatically so you're saying alright Bucky you talk to talk time to walk the walk show me an example well creating a constructor is incredibly simple to do so it's basically the same as creating a function with a couple weird rules first of all I need to tell you guys this constructors never have a return type so you don't need to type int or void or string or anything like that the only thing you need to do is type the constructor name and the constructor name is always the same as the class name the exact same so let's go ahead and copy this and paste it right here and that's how your C++ program knows that it's a constructor because once it comes across a function with the same name it knows that that is the constructor so let's go ahead and we'll add no parameters and in the body what do we want to happen as soon as we create this object we didn't have just you know maybe it will print something out on the screen like this will get printed automatically pretty cool huh so now we have constructor that's going to get called automatically as soon as you create an object interesting all right you keep saying that but what exactly does that mean well say we have an object from Bucky class named Bo well before we would have to write Bo yadda yadda yadda whatever we want to use from it but now as soon as we create this object this constructor is going to get called so let's go ahead build and run this and see this will get printed on Mac app will blah blah blah automatically so you could see that before we needed to use that object to call functions but this is a special function called a constructor that gets called automatically as soon as you create that object so you're saying all right that's pretty cool and interesting but why what didn't I just you know print this out on the screen or something else what's the use of a constructor why would you even want things to happen automatically well typically people don't print things out in their constructors actually if you see anyone printing something out in their constructor then they're idiots and you should slap them inside ahead because constructors the main reason that people make constructors are to give variables an initial value so for example this class has a variable called name but it might have another variable called age height weight favorite color favorite sports theme have all these variables so as soon as you create an object from that class you might want to assign a bunch of values to these variables right now so in order to do that here is what you do whenever you want to take a value and assign it to a variable you need to add a parameter in your constructor so let's go ahead and assign a value to this name right here and in order to do that we need to pass in string and just name it Z or something so now what we can do is we're going to be passing it in a string to be setting it equal to name well we already have a function that does that called set name so in order to do that just go ahead and call set name with the parameter of Z so now later on whenever we want to use our constructor our constructor can take a parameter as well and for our parameter let's just go ahead and write something like lucky bucky roberts and now what's going to happen is this as soon as we create this object it's going to call a constructor with a parameter lucky bucky roberts so it's going to go up see if it has a constructor oh I do and as my parameter I need a string and for a string we give it lucky bucky roberts so anytime has saw z it plugged in lucky bucky Reppert so it says all right your constructor you told me to set the name equal to lucky lucky Roberts so it basically set the name equal to lucky bug you're Robert so pretty much lucky Bucky Roberts got passed into Z which got passed in X which got passed in the name so that's why our name was lucky Bucky Robert so now that our name is lucky bug you're Everts that gets kind of repetitive saying that but anyways we can just go ahead and you know print it out on the screen or something so of course to access anything in our class use the object and of course the get name just like that function so let's go ahead and build and around this and we have int main we got a problem here hold on one second we find it oh I see what the heck how in the world did I do that for some reason I must actually hit paste or something but I copy the word name outside my class I just wrote the word name randomly in the middle of my program so remembering not to put words randomly in am over your program or else it won't run so now let's go ahead and build and run this and check it out lucky lucky Roberts so that is the basics of a constructor how they work and also how you can add a parameter to your constructor and basically the only times you wouldn't want to add parameters to your instructors is whenever you're taking those variables that are inside your class and you want to set them equal to values initially so that is basically why a constructor is useful whenever you have a bunch of variables in your class and you wanted to set them equal to values initially on that is how you can do that so here's that example and you just printed it our name so simple enough so aside from this I guess I have time to show you this one thing you might be thinking all right so I have an object from this Bucky class named Bo and its name is equal to lucky Bucky Robert so does that mean later on if I were to create another object from the Bucky class name like Bo too and I set this name equal to armed what's even dumber than lucky Bucky Roberts um Sally Mick salad that's that's what's on my mind right now so does that mean that I'm going to overwrite this one well let's go ahead and print out armed bo2 dot get name just like this so let's go ahead and print it out and see what we get lucky Bucky Robertson Sally Mix Aled so why wanna stress is this whenever you create an object from a class each object has its own set of variables so this object Bo name is lucky Bucky Roberts this object is named Sally Mix Aled even though they're from the same class it's not like changing the same variable so even though we set this BL to equal to Sally mixed salad it didn't overwrite this they're just from the same template pretty much so anyways what I wanted to stress is that you can create multiple objects from the same class and they don't overwrite each other they're just a sign they're they're assigned they're each set variables am I saying that right they're each assigned a set of variables so yeah I just wanted to stress that before you get in to objects in classes more and you get confused so anyways that's just a little side note stick with constructors and then once you're good with constructors you're ready to move on to my next tutorial but for now thank you guys for watching and remember don't stick words into randomly middle of your program and yeah I guess I'll see you next video