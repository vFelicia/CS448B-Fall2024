hello YouTube sam here from youtube.com slash on live gamer for the new Boston and in this tutorial we're going to be covering overriding inherited functions in this case we're going to override the two string function that is that we used in the last tutorial now if you remember in the last tutorial we have the customer structure we created add customer which will create a customer object based on the first name last name and email that is passed to the sub it sets the values inside of our object customer structure or object new customer structure and then we added that structure our that customer to our my customers ArrayList and then we just went ahead and added that to this list box right here and you can see when they click the button it adds a couple customers so you can see that we got a little problem when we ran this we click list customer instead of giving us new customers name and email we get the project name the class name and the structure name so what we're going to have to do is we're going to have to override the two strings bumpkin because we use two string right here we want to string to do something other than just converting it to a string so let's go ahead and open our customer structure so inside of the structure if you remember that structures can use functions and subs methods and some other stuff they're just not as useful as classes so what we're going to do is we are going to override the to string method inside here so we will just type public so that anybody outside outside of this customer structure can use this function so public overrides so what this is saying is overrides let's see it says specifies that a property or procedure overrides an identically named property or procedure inherited from a base class so basically what this means is that we're going to use the same exact name as to string that is inherited and we're going to tell it to do something other than what it normally does and two strings is a function because it returns a value you can see here that it gives us the option to use to string it says returns the fully qualified type name of this instance so we can go ahead and press ENTER and it'll fill in everything for us overrides to string as a string because it's going to return a string and it's got in function so what we're going to do is we want to return whatever we want to be put inside of this list box right here so instead of giving us useless information we wanted to give us the user's name and their email so we'll just return name and X see here that we get public readonly property as string which is this property right here so we want to return name and we'll just add a space and a parenthesis and then we'll add their email and then we'll add more parentheses so this will just enclose their email inside of parentheses so now that we've over added the function to string now we can go ahead and minimize out of this structure right here to come down here to button one click or no add customers so what it's going to do is it's going to add object new customer to this list box but since object new customer is a of type customer our structure right here our structure has the function to string in it so when we call us to to string it's going to be calling this one right here instead of the default to string that is inherited so let's go ahead and run this you can see that when we type when we click list customer we get Sam hello and then sam da hello at programming comm John Roberts and Rachel Smith and you can see that it will add them the way we want to because we override into string and had it named in their email next to each other now if we called to string anywhere else in our program that wasn't of type customer so if we declared an integer and you've stopped to string on that it'll do it the normal way and it will convert that to a string this two string is only used for the four structure customers so when we create a customer object and we call to string it's going to use this one up here right here so go ahead and you can place overriding functions as somewhere else in your program so it can be used let's say throughout the entire class so if we put this up here it would override to string for the entire class but of course we would get an error because name and email are not defined outside of this structure but you can put an overriding to string outside of this structure right here and have it return something else so go ahead and practice a little bit with overriding functions it's a little bit hard to understand at first but you'll get it after a while with some practice so thanks for watching guys and stay tuned for the next tutorial