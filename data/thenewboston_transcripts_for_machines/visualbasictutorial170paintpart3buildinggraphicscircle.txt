hello YouTube sam here from youtube.com slash on live gamer for the new Boston and in this tutorial women continue working on our paint program that comes from the book beginning Microsoft Visual Basic 2008 by Fearon Willis and Brian Newsome published by rocks I just want to make sure to give them credit in each one of these videos to prevent any problems from happening I'm not claiming this as my own but I'm teaching you guys how to do it so if you remember from the previous tutorial we created the class graphics item so now let's go ahead and we'll come over here to paint you do and let's add a new class now if you don't know what graphics item is then I highly suggest you move back to the previous tutorial because it'll be really complicated if you don't know what it does and what's in it and I don't have the time to explain it again in this tutorial so we'll create another class called graphics circle now what we're going to be drawing with is a circle so when we start drawing with circles it's going to create a solid line so here is our graphics circle class if you don't want to know what I mean by I mean making a solid line let me show you guys real quick I want files right here and open up the finished product and I'll show you guys what happens when what I mean by drawing a solid line oh you can see okay so you can see here is my paper and when I start drawing with the circle it draws straight lines here so go ahead and close out of that I just wanted to explain to you what that does so we have our class graphic circle and you probably have already guessed know by now but we're gonna have it inherit from graphics item so we'll go ahead and come down here and you can see that when I press ENTER it automatically creates this sub draw for us it's public over I sub draw you can see here that we made that in our graphics items class and it's must override draw so whenever we inherit from graphics item it's going to go ahead and create this for us I want to press ENTER now when you're making programs in the future whenever you create must inherit class or it must override subs and you inherit from a class that has those it's gonna fill in all of those in there so you could have like a million different subs it's gonna fill in all this for you all of the must override subs so here's our draw sub and what we want to do is let's create a new brush so we'll just call it object solid brush as new solid brush and it defines a brush of a single color brushes are used to fill graphic shapes such as rectangles ellipses pies polygons and paths they cannot be inherited that's pretty much the description of solid brush and it's gonna take one argument we're going to need color so we'll type me dot color so by using the keyword meat that refers to the class graphic circle so it's gonna use the variable color from graphic circle this will prevent any errors from happening by using this right here because if we just use the word color we may get an error because that is a keyword for Visual Basic and if we have any other color variables as such as ones that are only inside subs or methods or functions this will prevent any conflict from happening and if you're wondering where did we get color from well it's in the class graphics item it's a public color of type color so now that we've created our solid brush let's go ahead and draw the circle so we'll do graphics and you can see here that graphics comes from the argument so you got draw and then for the arguments we need a graphics as of type system dot drawings about graphics so we want to fill any lips now an ellipse is basically a circle or an oval and ovals can be warped in all different kinds of ways they could be really long and skinny really tall and skinny whatever is around is going to be an ellipse and a perfect circle would also fall under that category so graphics on fill ellipse then what we want to do is use object solid brush for our brush and then for the second argument our rectangle will type me dot rectangle now once again this refers to the public variable rectangle that is in class graphic circle now you can't see it here because it's inherited from graphics item so rectangle is given to graphic circle by graphics item and then we can use it by typing me dot rectangle okay so now that we've created our graphics item and our graphic Circle classes let's come over here to paint canvas dot B beam will rightclick it and we'll select view code so here's the code that's gonna run inside of our paint canvas class so inside of this let's go ahead and create an enumeration now this enumeration is going to hold the sizes the possible sizes for the circle so we're gonna have a small a medium and a large so we'll type public you know graphics graphics sizes as integer and we'll set small equal to let's say five medium is going to equal ten and then large let's make large equal to 25 so we've got our graphic sizes enumeration and let's create one more enumeration now this is going to be graphic graphics tools and we wanted to be of type integer and we can't forget to put in numeration right here so public and um graphics tools as integer go ahead and hit enter and we'll set circle pin equal to zero so whenever we make a variable of type of graphics tools there's only going to be one option for us and it's gonna be 0 which is a circle pin so this is all we're gonna add right now in the paint canvas class so we're gonna be adding more in the next tutorial and if you have any questions about our graphics circle class or the anything else in this tutorial or in the paint program go ahead and leave them in the comments I'll try to answer as many as I can and if you understand everything go ahead and move on to the next tutorial