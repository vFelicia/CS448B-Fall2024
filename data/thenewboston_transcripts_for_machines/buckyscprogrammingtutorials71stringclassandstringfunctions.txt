what is going on guys welcome to your let's see seventy first C++ tutorial and in these next I want to say three or four tutorials I'm going to be covering more about strings now I know that I touched a little bit about strings in we've actually been using strings this whole series but I want to talk to you guys specifically about the string class now the cool thing about these next couple tutorials is there aren't a lot of confusing concepts that you guys need to understand but the string class gives us a bunch of functions that well let me tell you guys this whenever you're building a program and you don't know how to do something that you usually want to look it up in the documentation and if there's you know an advanced function in order to do something it will tell you how to do it but some functions like how to print stuff out on the screen are essential to have in your memory and a lot of those functions that are essential to have in your memory are a lot of the string functions so this is stuff that whenever your program you shouldn't have to look up so in these next couple tutorials I'm going to be teaching guys the core string functions so the good thing is they aren't confusing they take like a minute each to learn the sucky thing is that we do in fact need to learn these because if you don't know them if you do know them it's just going to make program a whole lot easier so the first thing I want to clear up is probably something I should have touched on a long time ago and that's also something that kind of confuses you guys whenever I was working with files you guys didn't really understand that whenever I came to you know a white space that whenever I was like reading data in from a file then and automatically quit reading it in and let me explain you guys what I'm talking about sit whoa Oh easy calf socks all I got cough oh there I go got some milkshake from McDonald's in my throat so say we have a string called Bucky and we want to you know fill in the string with the users data whatever the user enters from the keyboard we want to store in this variable called Bucky so we use the CIN and whatever the enter is going to be stored in variable called Bucky so now we'll go ahead and just print out something on the screen like the string I entered is and then we'll make a little space right there and then we'll just go ahead and write the variable name which was Bucky and in that line well let's go ahead and run this program and I want to clear up a couple things so now we see a blank cursor telling us to input something and we already know that if we input something like tuna it says the string I entered is tuna we understand that much but what I didn't tell you guys and I probably should have told you guys this in like the tenth tutorial but you know better late than never is whenever you enter something like tuna sandwiches are good and you say all right well that's my string of text and you press Enter it only says the string I entered is tuna and that brings me to a lot of a point that I should have covered in either the 10th tutorial in the last tutorial when I was teaching you guys how data is read in from a file whenever you using cin to read data in whether it's from the keyboard the user or a file when you're using c i end the end of the input is determined by the first whitespace character it comes across so for example whenever you run this program and you see tuna sandwiches it doesn't read that whole tuna sandwiches it reads it until it gets to it first whitespace so that's why in the last tutorial whenever we came across you know a newline character or a whitespace that's when it stopped and that's when it finished reading in the data so hopefully you guys understand cin only reads one small piece of data at a time so now that you guys understand that concept let me talk to you guys about another concept and that is well what happens when you do want to read an entire line as one string well say we go ahead and lesson name our string something else besides Buckey let's name it string X whenever you want to read an entire line of data here's what you do you go ahead and write the function get line and go ahead and write CIN and just go ahead and write X and now let's just go ahead and you know print this out on screen real quick and line and now what get line does is instead of the end of input being determined by a whitespace character like a space the end of the input is determined by a new line character so get line is going to wait till we have a new line in other words when you're working with cin which means input from keyboard it's going to wait until we press Enter or basically when we're done typing text on the line so now when we put tuna sandwiches are good and press Enter it's going to output tuna sandwiches are good and this entire third thing is the string that's going to be stored in X so again what I want to stress is whenever you're working explicitly with CIN it reads one small piece of data whenever you want to read an entire line you want to use get line sorry I still got that milkshake stuck in my throat so that is the difference between CIN and get line and how the end of the input is determined by a white space or a newline character so that's not only going to help you a lot when you know getting information from the user but also whenever you're working with files that's how it read the information I probably should have told you guys that before but hey like I said better late than other never there you go okay let's slow down for a second Bucky and I gather your thoughts and all right I'm gonna go now so now I want to talk to you guys about additional ways to create and copy strings so aside from having you know string Bucky equals Yaya oops yada yada yada and while this is a valid then this is the way we created strings before I want to tell you guys about an additional way to create strings from the string class say we want to create a string named s1 we can go ahead and pass it in a constructor of a string like hampster just like that and now hamster is going to be equal to s1 again like I said just two different ways of doing the same thing but why do we need to know this because whenever we're working at a company and someone creates a string this way we don't you know think it's something totally different or some class that they made up we know that you know don't freak out it's just the same way of creating a string so if we want to create a blank string we can do something like this and let me go ahead and create another blank string because I'm going to be showing you guys an example later on so anytime you want to copy a string you can do so in one of two ways the first way which you guys probably could guess is you can set string two equal to string 1 which is hamster now this is a valid way of copying the string but some people also want to use a function from the string class and that's called assign now assign isn't really a good word they probably should just named it copy but it does the exact same thing and that say you want to have s3 and you want to have this you know actually we have it right there it already pops up for us assign string one these two go with you know with exception of being string two and shrink three these do the identical thing each of these functions copy this string to this variable right here so again just to prove it to you guys let me just print out all these on the screen Oh print s1 s2 and s3 and just go ahead and end that line and whenever we print it out we can see that all these things hamster hamster hamster do the exact same thing so again what this line of code does is it's just an additional way where we can go through the string class and we can create a string using the constructor and what this does right here this assign is basically an alternative to copying strings so with that being said um I want to talk about one last thing and hey I guess again okay the last thing i want to talk about in this tutorial and i'm probably going to go over 10 minutes and i hate making videos over 10 minutes what i do is strings are arrays of characters they're not like arrays of characters that are not similar similar to arrays of characters strings are indeed arrays of characters so let me go ahead and make a string called s1 and i'll set it equal to oh em gee WTF BBQ good enough so now i want to stress that anything you can do to an array you can do to a string so let's go ahead and see out something like s1 and say we wanted to output one of these characters and these characters are elements in the string 0 1 2 3 so this w is s1 3 well in addition to you know having the explicit index the string class also has an ant method to say alright if we put 3 right there it's going to look in the third element in the array and it's going to find what character is at that location so it's you know a little easier to tell to someone who's like just learning programming using the app function is a little easier to see then you know using the array indexes right there so let's just go ahead and end that line and print out and whenever we print it out we can see that we indeed get a W so the point of this lesson is I want to stress you guys that strings are arrays of characters and one other cool thing I might as well teach you guys while I have the time is just like an array where we can loop through it and print out each one of its indexes we can also loop through a string so let me go ahead and put int x equals 0 and in order to get the length of a string it has builtin length function so put X is less than oh what's my street name s1 dot length with no parameters and we'll just loop through them one at a time using X plus plus so now what we need to do is just print out on the screen s1 dot at and as a parameter we can just go ahead and type in X because what X is going to do is it's going to say all right it's going to start at 0 remember this is the 0th element in the array and is going to count the length of the string and it's going to loop basically from the beginning till the end and the X is going to go 0 1 2 3 4 all the way until it reaches this as last element so that way whenever we pass X into the parameter for at instead of printing just one character it's going to print the entire string so let's go ahead and build and run this and check it out here's what we printed from before from the last lesson and now here's the entire string getting printed out OMG WTF BBQ so those are some simple string functions like I said before none of these are going to you know twist your brain like polymorphism or maybe working with files are but there's some core functions that we need to learn especially the at the length those are two string functions that you're going to see a lot whenever you're working for a company hopefully you're watching this tutorials in the hopes of you know getting a job or at least working with other people on a game project or something like that you're going to see these functions a lot so you need to know what they are how they work and also some additional ways of creating copying strings so now that you understand these concepts hopefully you memorize them embed them in your brain I want to tell you guys that there are a lot of different things that the string class has to offer aside from you know finding the length of a string so we're going to be covering all those coarse string concepts in the next couple tutorials so have no fear no really confusing topics for now and I want to tell you guys that you're almost to the end of learning beginning C++ we probably only got like 20 more videos to go so with that looking forward to I want to say guys thank you for subscribing thank you for watching my videos and I will see you guys in the next video