so we want to go ahead and create another variable here called scroll underscore height and that's going to equal text area underscore height and we want to minus the inner height of this terms text area so we go ahead and select no be just be this and then dot in a height like that so let's just go ahead and pop the scroll height into here and just call height and let's go ahead and refresh and scroll down and you can see this is 560 so the original the value that we had minus 560 is going to equal the the actual height so sorry no I'm completely wrong I could have gone and said in a high and echoed out in a high or put the text inside of here so we can go ahead and do that now and that will show you the inner height which is 164 and now what we've done is we've subtracted 164 from this original text area a text area high and then we have the scroll height which will match the inside height of the document of inside height of the text area sorry so now that we have this accurate value we can go ahead and perform an if statement but we first of all need to return the value let's just return let's just get rid up back we need to return the value of where the scroll is at so we can do this and we can match it to the scroll height that we retrieved earlier so the scroll height that we retrieved earlier is 560 so if we were to return the scroll height which is as we scroll down the the point there which where our this should match v 560 when we get to the end it's important that when we get to the end we can match it because that's why we want to show the check box so scroll top is going to equal this dot scroll top and this is a jQuery function and that's going to return the current position of the scrollbar so we can go ahead and say scroll top and we're going to put that into our feedback div so now when we scroll down you can see this value incrementing when we get to the end I equals 560 so we did some calculations earlier and got the actual height of the inside as we scrolled so the whole scroll area and now we've returned the same value so we can match this at the end yeah we can match this at the end so let's go ahead and just get rid of this we no longer now need this div just go and get rid of that as well and now what we want to do is perform an if statement to check whether the scroll top is equal to the scroll height the acura height value that we returned for the inside so we just simply say if a scroll underscore top is equal to scroll underscore height we want to disable this disabled attribute so we want to remove the attribute completely so all we do is we say hash agree which remember is our check box area or our check box element and we just want to remove an attribute from that and that attribute is disabled so now we've relayed each value into that div and displayed that they match as we get to the bottom so now as the scroll top equals the scroll height we know that we've we've scrolled down essentially to the bottom of this text area so now when we refresh and we scroll down you can see this is still disabled but when we reach the bottom the condition of this if statement will be true and therefore this check box will be enabled so this is quite a simple piece of code let's go ahead and make the height a bit bigger just to see how this doesn't affect the functionality so I made the height slightly bigger but however when we scroll down we still match it and it still is available to check so the code that we've written dynamic the updates using pretty much these two variables dual the calculation so whatever height we have the scroll area at or the text area ah it will always return this condition is true because we're returning the the most accurate values so this will work obviously whatever height or whatever width you have the text area at so quite a useful tool if you wanted to include something like this in terms and conditions obviously you can enable and disable buttons instead of check out and check box areas if you wanted this literally just to be a button you could go ahead and just replace this here with a button and then you have a value for your button so for example continue we'll just get rid of that for now and it would work in exactly the same way you can see that the continue button is disabled yet when we go all the way down to the bottom this button is enabled so quite versatile with different elements as well obviously the disabled attribute applies to almost all HTML elements so quite an easy way to do this the calculations are slightly complicated but the overall concept is obviously quite easy and you could go ahead and apply this to a text area and obviously use this in an actual real life situation which is nice because it's nice to see something that can actually be used so that's how we use scroll top and the scroll height and the inner height to calculate this and display a hidden or disabled element