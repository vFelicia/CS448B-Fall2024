I welcome back and in the last video just a little recap of what we did is we styled these top cards right there looking beautiful and in this video what we'll do is just continue chugging along going down styling one of these components at a time so the next one up is the connection status and just a little refresher of what this is going to be for this component what we'll have is a little like indicator light or pretty much just a icon and then we'll have some text on the right hand side depending on the state of this connection so that's it should be a nice easy component so let me pop this open and the connection status component in Styles file all right so the first thing I want to do is actually bump this down a little bit more it looked a little too close to those top cards and we're going to have two different elements in here so let's go ahead and display Flex they're going to be in a row by default and for alignment those can be Center aligned with one another and the first thing that we want to do is actually add that icon and to add that icon it's pretty much the exact same as the pencil icon so we can just kind of steal some of this from spaced items so to import the exact icon path we will do MDI Circle all right that looks good and then for this icon styling I really hate to type this out so I I copy whenever I can alright so we'll copy this and then I believe that's all we need to steal from the time being so we'll call this component icon as well and are great so how do we want to style this well for the color this is actually a pretty neat feature so I'm just going to hard code this greenish color in right now however what I'm going to show you in sometime in the future is that whenever we pass props into our component right here and actually let me just finish styling this will be easier to explain so s dot icon and just like before our path is this path which is just going to be a circle and for the size of this let's just say uh 14 pixels anyways what I was saying is that you know how we can pass any props into our like elements right here well because these are style components they are actually components meaning that if we have any state or props here and we want to pass them along to this component then we can actually accept those props right in here and we can not like write logic it's just some simple templating logic but either way based on what we pass into this component right here we can update the color to be like red or green or gray or whatever we want so it isn't just we have these components and we can override some Styles and it's just strict CSS it does have some pretty cool logic that we're going to be digging into in just a bit but anyways now that I said that give you a little teaser of what's to come to the right hand side of this let me zoom in a little bit I want a little bit of space right here between the icon and the text so we'll go with uh apixels right now so margin right eight pixels and now aside from that we also want some just call it text it's important the text and for the text styling let's just use in this color and we'll say uh 13 pixels see how that looks all right I believe that's it so icon on the left text on the right and we'll just hard code in connect it right now all right so nice and simple just what we're going for and now that that is taken care of let's go ahead and style this main button so let me close up these open main button component in Styles all right so for the main button it's going to be pretty simple basically just a a huge circle and then we'll put some text on the inside and maybe we'll add some cool hover properties to spice it up a little bit but for the text I actually want to say go maybe start but we can always change that later on I gotta you know kind of get a feel for things once this is live up in action all right so it's going to say go in the center and let's see for the margin top let me bring this down a little bit all right so let's and by the way um for this element main button we don't need to add like any button element or any more divs we can just style this container straight up since it's like I said just a big circle so to give that round appearance we'll do border radius 50 percent and let me actually display this is flex because just like this University app we want just this text right here to float inside the middle of this entire container so to do that we'll say display Flex and we'll say a line item Center and also justify content Center all right so aside from this let me think let's go ahead and give it a width of 40 percent and then I'm also going to include another uh property called aspect ratio and I'm going to do one to one and what this does is it ensures that the height of this element matches the width now without a border this is all going to be a little bit hard to see but before we add a border I just want to go ahead and add a color and then for the Border itself let's do one pixel solid and then we'll just borrow this color as well all right so let's see how things are looking so far Hmm this is interesting so okay oh I guess we got a couple things we have to work on but I actually never knew this before and it appears that the aspect ratio is working up to a certain point in the sense that the width of this is indeed uh forty percent and that the height of this is also kind of tracking along with that however what's happening it looks like is once we get to a certain point here it doesn't have enough vertical space to maintain that same onetoone aspect ratio just because it has more horizontal space than vertical spaces available so what I'm thinking is that maybe we can just hard code value in so let's say the width for now and if anyone has an elegant solution to this then uh leave a comment below let me know but let's say let me just throw something in there for now so with this 200 pixels I think we're going to come across the same problem oh what to do what to do actually let me do this so we'll keep this Logic for now and we'll uh leave it up to the community to figure out an elegant solution to the Go Button problem the infamous Go Button problem and like I said we have some fine tuning to do in terms of responsiveness anyways but what we'll do is we'll save that for the very end because I already know whenever I include the empty State element here for example that it's going to be a different height than these and I'm gonna have to figure out that responsive issue and we'll do the button if uh no one from the community has anything then I'll figure out a solution and then these cards probably just stack them on top of each other but all this fine tuning can wait until a little bit later it'll be better then we'll have live data anyways all right so let's see what else I can probably bump up the font so let's do font size 36 pixels and for font weight I wanna make this a little bit thinner than usual see how this is looking all right pretty good pretty good all right pretty cool and then let's see what else of course we can add in our hover state so just like before the hover property what we want to do is we want to have this background color and we're going to use rgba rather than hex because I want to tap into this opacity value all in one trabang as well and for the color of this actually can we just keep this color the same we'll just keep the text color the same unless it uh looks weird but the last thing I want to do is I want to have cursor as a pointer this is looking all right not bad not bad the only other thing I would say is if we could add a nice little transition and for this we'll say transitional 0.2 seconds and we'll see how this feels oh yeah much better maybe even uh bring this down to 200 let's see hmm I think I had like 200 better than three all right 300 sticking with it so we got some responsive issues but we'll save that for later on when we make all these responsive related tweaks for now we can move on to the timer and let me pull up what I got right here so the timer is just gonna say whenever we have a request pending and we're waiting for a response it'll just uh like live update and another thing that I'm thinking now that I'm looking at this is we probably want to have the numbers on top and maybe this seconds right under here in like a lighter smaller font so I think that'll look pretty good so let's close all these and go to our timer component and all right so the timer let me see the spacing too maybe bump it down from this button a bit so for the margin top let's go 24 pixels and since we are gonna have two elements stacked on top of each other what we can do is display this is flex and Flex Direction column what's up and then we'll say align item Center so that they look nice and aligned and then we are going to have two divs one for the top text and one for the bottom text all right so for the top text let me steal one of these colors and for the uh again the top text is going to be the the numbers or the countdown so we want this font kind of big so let's go with 28 pixels and for the font weight let's go with the 200 and the reason we don't want it too bold is because we don't want this to outshine the go text right there so that should be good for the top text now I steal this for the bottom text which is the seconds counter and for this we use a more subtle color and of course the font size is going to be quite a bit smaller we'll go 12 and just bump it down a bit so margin top 2 pixels all right so in this container instead of timer we have S top text and then under here bottom text this is going to say seconds and for some sample 1.2345 all right looks not aligned the justify content I always get Justified content all right uh align item Center Justified content Center wait a minute why isn't this aligning oh that's because I have aligned content instead of align items it's so embarrassing uh align items there we go hopefully they fixed it beautiful okay and now I think we should be good on this so now on to history all right so for the History Section what we'll have is a header and then we'll just have a table with four columns and even though I didn't show it here we'll also have a table header just to kind of label these columns so on that note what I'm actually gonna do is I'm just going to write everything in HTML and then we'll go and make the style components so we'll make this actual heading which we probably should have done for the other headings but either way uh after this we're going to have a table and the table is going to have a t head and then T body all right so four columns and let me just copy this all right so the columns are going to be accounts Network date and the speed is going to be like 0.15 seconds or whatever and then for the table body we actually need table rows and then each other these rows actually let me just create one then I'll just copy it all right so for a sample account already have on the right all right so we'll have a snippet kind of like we do for this chat where we don't want to display the full account number because it's it's well really it's just kind of long so we'll truncate it and I don't know exactly how long we're gonna have to truncate it but we'll just include these characters for now and then the network will use the shorthand and then the date well actually uh create a utility function to format our dates properly because the standard that I'm going for is internally in tnb OS like whenever we send messages or whenever we are going to log any of these tests then the date is always stored is a UTC date time object however since we have that standard we can just create utility functions to display them like shorthand or logger hand with a the time included or maybe we want to write out the days like days of the week like month Monday is mon however we want to do it we'll decide that later for right now we'll just put a sample date in and then for the speed I'll put like 1.2345 seconds all right so let me just make sure that this is all right looking good nothing breaking it looks pretty ugly right now but just want to get some sample data in there and I'll just create this other row all right so now that we got that taken care of let's go ahead and start replacing these with styled components and for this container let me check this out all right margin top uh actually let's spread this you see how in this top section right here that I had width 100 and it kind of just forces everything to butt up right against the edge I want to do the same with this history table since well I just think it's going to need that full width so in this container I'm going to do width 100 poison and then or just called the heading heading so export const heading set this equal to styled H1 all right so this heading we can have this color right here and for the font size let's try 15 pixels uh for font wait I want a little bit more bold so let's go with 700 and for the margin um I believe that headings have margin by default so I want all margins to zero aside from the bottom margin which is going to be we'll say eight pixels see how that looks so zero zero for the right eight pixels for the bottom and zero for the left and then since we have this we can just replace this H1 with our styled heading and then we can take a peek at our heading and see how it looks all right it's looking pretty good actually okay next up let me give us more room right here all right so next up let's go ahead and style this table Explorer const all right so the table I also want to have a width of 100 and aside from this another property I know I need to add is border collapse and we'll just set this equal to collapse and this just is going to ensure that whenever we style our cells um there isn't like this one pixel or a few pixel Border in between each one so if if you're ever like trying to style a cell and you're like margin zero padding zero and you still get this little space between them it's kind of annoying this is the property you're probably looking for and for the font size on this table we'll just go with 13 pixels and now oh forgot didn't even uh do this yet so s dot table get this one too and then that should all right looking good now a couple different uh things I want to do first of all I want to left line these and I also just want to give a slightly different styling from these uh the table heading from these table cells in these rows right here so let me go ahead and do that next so actually let me go ahead and make this uh the TDS and THS and then I'll add some consistent cell styling to both of those and then add some additional styling to the table heads so expert cons would just say TD equal to style dot TD and we can do the same for these cable headings and just to make sure that we are kind of uh seeing everything live all right so these THS can be replaced with s dot th you can probably just do find and replace easier than that but these right here can be replaced with TDS our own custom TV way better than these other HTML TDS and all right so now just make sure enough is breaking shouldn't change though since we didn't apply any styling yet and okay what do I want to do so for the table heading I want to make these a little bit more bold and left align them so we'll say font weight is 600. and we'll say text the line is equal to the left all right looking better and now the only thing that I want to do is actually apply some standardized styling to all of these cells whether they're uh cell in the table row or table heading so on that note what I'm gonna do is this I'll use a mix in I'll show you guys how to use this so I want to basically write a snippet of CSS and I'm going to be applying it in a few different elements right here so what I can do is just actually just rewrite the same thing over and over but since I know that if I update it in one place I'm just gonna need to update it in the other I'm going to make a consonant for that and I usually don't like to include the word styling in this style since uh I don't know something just feels weird about it however in this case the word cell styling or using this as a constant it just uh feels pretty intuitive so anyways what I'm gonna do for all of these table cells is I'm going to add a border on the bottom and then just give it some padding since I think this looks just a little bit squished together so all of these cells are going to have a border bottom and I'll just say one pixel solid I'm gonna get a color from over here all right this light gray right here and for the padding I'll say eight pixels and 12 pixels left and right so eight pixel top and bottom uh 12 pixels to the left and the right and now to apply this mixing to uh these different areas right here what we can do is use that templating language and that is dollar sign in those curly brackets now anything inside here is pretty much just going to be treated as JavaScript Within um the styled components so cell styling right there and I also want to apply this to the table headers as well so cell styling just like that now let's just make sure that those are applied beautiful and okay I also wanna yeah so um this is looking good but there's like a motorcycle outside I want to take the very first column and very last column and for the very first one I want to remove the left batting just so it's left aligned with this history word and for the right column even though it's going to be hard to see right now if we ever have long text it's gonna have this extra space on the right hand side that I don't want so I'll just go ahead and uh make another one of these actually I don't need to yeah okay I am pretty lazy so for this I'll just call it Edge padding and of course these are not the properties we want what we want to do is we're going to be applying these to the uh table data and table headings as well basically all the um the cells and what I'll say is the first child which is going to refer to the first cell or in other words basically the First Column and then the last child which is these last cells right here and that's how I'm going to kind of Select those elements so I'll say first child of each of these things that I'm going to apply to I'm going to have the padding left be zero and then you can probably guess what I'm gonna do next and that is for the last child I'm gonna have the padding right b0 and then I just need to just like I applied the cell styling to both of those I can apply this Edge padding as well so there we go and now the first child in each of these which is just the first cell has no left padding and if you saw the rightmost cell also had a little bit pattern you removed we still have some space right here because they aren't right aligned but I don't know if that'll look weird another thing that I'm thinking is I don't like how this seconds keyword is kind of repetitive however what we can do is something like this all right we can remove it from each of the table rows and just have it here in the table header that looks kind of weird too maybe if I shorten that to s a that looks kind of weird too because uh even though it doesn't take us take up as much space it whenever I'm reading this I'm reading the word speed with an optional S at the end so speed or speeds you know I don't know uh okay so ux is not my strong suit if anyone has any suggestions uh let me know but for the time being even though I really not dig in this repetitive second in every single value right here okay nothing else look good but uh if any UI or ux Pros are out there then uh let me know what to do about this little issue as well but for the time being aside from those responsive issues that we already know that we're gonna have to fix then actually let's see how this looks when I squish it down wow this go bound this go button right here is uh not the proudest UI element I've ever designed let's say this uh this go oval all right but um you know overall not bad I mean compared to this thing that we were going off of then I have to say that this is indeed an improvement so on that note now that we have the basic styling taken care of I'll go ahead and push up these changes and for the next video I actually don't even have it planned out yet maybe we'll be getting into the Redux store structure who knows um yeah even though I don't know what it's going to be about I can promise you that it's going to be amazing probably the greatest video ever made not to you know hype it up but it's going to be pretty dope so anyways uh thanks for sticking along and I'll see you next time