alright guys welcome to 72nd well we've come a long way c++ tutorial and in this tutorial i'm going to be talking to you guys about some more very useful string functions so the very first string function i want to talk to you guys about is called the substring function now what the substring function does is it takes a big string and it creates a substring out of you know a small piece of it so let me go ahead and show you guys an example it's going to be a lot easier to show you example rather than try and explain it so go ahead and make a string i'm cuming call actually i'm probably going to call all my strings s1 in this story and just go ahead and write something like OMG i think i am Craigie or something stupid like that i don't know create a new string you want and go ahead and print out s1 dot s ub STR this is a sub string function and go ahead and outline and L now the substring function takes two parameters the first parameter it takes is the beginning index or the beginning character remember strings are arrays is pretty much an array of characters so this is 0 1 2 3 4 so on and so forth so let me go ahead and put the beginning character which is 17 and the next parameter it takes is how many characters do you want to go on for so if we put 1 5 it would start at 1 and it would go 5 characters in so let's go ahead and put 17 7 go ahead and run this and we get the word pretty with explanation point 1 2 3 4 5 6 7 actually 0 1 2 3 4 5 6 I don't know it's one or the other but anyways the substring method is basically what character do you want to begin in and this is the seventeenth character and if we count seven characters one two three four five six seven is how many characters is included in the substring so basically the substring function is how to create a smaller string from a bigger string definitely useful whenever well whenever you want to create a smaller string from a bigger string now after this I want to teach you guys about another function and that's called the swap function now this is might be if you're working a lot with sorting lists or how to sort arrays you're going to be using this function a ton what it basically does is it takes one string and swaps it with another string so let's go ahead and put string one and we'll make this one make it something that begins with a a like apples and put string two and what this one does is we'll make this one like beans good enough and what we can do first is just print out the strings to verify that they are indeed working correctly so one and then we'll print out two and then go ahead and in that line so what this line is going to print out apples beans and I'll add a space after this and now what we can do is I want to show you guys what the swap function is and how it works the first thing you need is a string to apply it to and I'm going to apply it to shrink one now go ahead and call swap on this now it always needs to take a parameter and that's what string do you want to swap with it and we want to swap shrink two with it so basically saying are a swap beans with apples and now string 1 contains beans and string 2 contains apples so if we go ahead and print this out again let me just go ahead and copy it and print it out again in build and run the original strings or apples and beans but now it took the contents or values of them and flipflop them so now string 1 contains beans and string 2 contains apples again this is very useful whenever you're sorting usually you're going to run through a huge while loop and you're going to back all right if this value is greater than this value then swap them if not leave them the same and by the end by the time you get to the end of the loop everything's in a nice neat order so that's your basic of you know how to sort things but again let's go ahead and delete this and again one last time none of these things are really confusing but they're definite functions that we need to know that's why I'm going to be covering this explicitly because these are functions that you should definitely shouldn't have to look up in a you know resource or reference guide these should be function that should be stuck in your brain so the last function I want to cover the in this tutorial is the find function now like I said I want to repeat this one last time strings are just arrays of characters so whenever we're finding a substring what it's going to do is it's going to give us the location or in other words the index of where in the string that is so let me go ahead and make a string again most of these it's going to be a lot easier just to see an example so let me go ahead and make something like Hamm is spam oh yes I am and I actually made that string for a very specific reason what you will see you later on so go ahead and see out s1 dot find a m and now let me go ahead and in that line and you're saying all right so I kind of know what this is going to do already it's going to go and look through your string and find where a.m. is but check it out we have this one right here and this one right here and this one right here so let's go ahead and build and run this and see what when it returns and I forgot to do something and add a lesson and sign right there so let's go ahead and build around this again and it's going to say one so say an R right so obviously it gave me the location of this first one right here because this is the 0th index of this array and this is one so what it basically does is it gives you the starting location of the first found arm first found a.m. I guess that's all I need to say the first found occurrence that's what I was looking for so even though there are three occurrences in this string it's going to loop through and it's only return to you the first occurrence of this so remember that whenever using fine it doesn't give you know 1 and 10 and 19 or whatever the heck these are so saying all right well what if I want the occurrence of the last a.m. well there's another function for that and that's called our find this stands for reverse find you know how whenever you're finding you know a substring such as a.m. and a bigger string is going to start at the beginning and it's going to work a left to right well what reverse fine does is it works right to left just like that and it's going to go right to left and it's going to look for a.m. so it's basically going to give you the last occurrence of a.m. which let's go ahead and print this out and that is 21 so if we can see this is 1 2 3 4 5 6 7 8 9 10 11 12 3456 10 21 right like that as you can see this 21st index in other words this one right here is the first location of the last a.m. so that's the difference between fine and our fine one works left to right and one works right the left so there are some more string functions right there again these string functions our function is that you should not have to look up these are some functions that should be embedded in your programming brain so that's why I want to give them to you guys and hopefully me showing you an example of how they work help you know make them stick in your brain a little bit easier so thank you guys for watching these stories we only have a few more string functions to cover but don't skip over these tutorials because later on when I'm developing games and showing you guys how to work with 3d and cool stuff like that I'm not going to be taking time to stop and pause and cover these functions so if you know you decide to skip these next tutorials and just go straight to game development or whatever you're going to be crap out of luck so there you go thank you guys for watching don't forget subscribe don't forget to check out all my other videos and yeah I guess I'll see you guys later