what is going on guys welcome back to your sixteenth C++ tutorial and in this lesson I want to talk to you guys about something called the if statement now the if statement is basically a simple way to have your computer program make a very simple decision so before when we were programming we built simple programs and it pretty much just ran line after line after line of code without question so that's nice and all but sometimes you want to have your computer program make a simple choice for example you might have some code that you only want to run sometimes and you're saying all right why would I even put it in there if I only want to run it sometimes well for example if you're making a website and you had a message on there that said hello Bucky well you would only want to show that message whenever I logged in you wouldn't want to show it whenever a guy named Tommy loggin or a girl named Jessica logged in so you would say if the user is Bucky then say hello Bucky so you can see that unlike before when you just built a program in your granite from top to bottom now we have different routes different choices that our computer program can make and the basic basic decision that each computer can make is made using the if statement so the syntax for the if statement is incredibly simple you go ahead and type the keyword if and in between parentheses right after you're going to give it a test now go ahead and add curly brackets and if that test is true then it's going to run the code whatever you put in here if it's not true then it's not going to run the code so you're going to say all right um the test is is the user Bucky and the code would be say hello Bucky on the screen or something like that so that's basic example but of course that isn't real code so let's go ahead and make a real program that actually works so the basic what people typically do is they have a variable first of all so let's go ahead make int X and set it equal to 10 so now we have a variable equal to 10 they might want to test this to see um is this variable equal to 10 so go ahead and say if X and now in order to make these simple tests we use something called comparison operators and when you're testing numbers there are six different ways you can compare numbers I know you think is equal or not equal but there's a lot more first of all you can test is X equal to 10 is X not equal to 10 is X less than 10 greater than 10 less than or equal to or greater than or equal to let's go ahead and test it besides something other than 10 so we know X is equal to 10 if we want to test if it's the same as 10 we go ahead and write equal equal 10 and you're saying all right first of all slow down this doesn't make sense why would you not just write if x equals 10 because that makes sense well the single equal sign is they already reserved that for setting a value equal to the variable so if you did this right here it would think that you're trying to set X equal to 10 and your program is not going to work right so that's why whenever you're comparing a variable and value you need that double equal sign so this means all right test if X is equal to 10 and if it is let's just go ahead and give something stupid C out um OMG IM pritty that means pregnant and ghetto talk so let's go ahead and NL and let's go ahead and run this and see what happens build and run and on the screen that says OMG I am Bragi and why did it do this because we had a variable X and it was equal to 10 and then we said all right if X is equal to 10 then go ahead and print this out on the screen and it was so print it out but if you had something like if X is equal to you know 87 now we try and build and run it you see that our computer program didn't print it out because 10 is not equal to 87 so you're saying all right I know how to test whether a value is equal to a variable but what if I want to test if they're not equal I want to make sure that these values are not equal well the sign for that is a explanation point equal sign this means all right if X is not equal to 87 print this out and it's going to print it out because it's 10 equal to 87 no that doesn't even make sense so it's going to go ahead and print that out so that's why we get oMG I am per Iggy so aside from that let me go over the basics lessthan and greaterthan if X is less than 87 is 10 less than 87 yes and by the way whenever we have a test and that test is true we say true whenever the test is wrong we say false so it's 10 less than 87 yes 10 is less than 87 so we call this test true and it's since it's true it goes ahead and prints it out oMG I am praying now let's go ahead and be like is 10 greater than 87 No 10 is not greater than 87 so that's why it didn't print it out right there so aside from that there are two other simple ones I want to go over with you guys there is less than or equal to so if you add something like is 10 less than 10 and you just had a basic less time then you try to run it and it wouldn't work because 10 is not less than 10 10 is the same as 10 well what if you want to test the value is less than or equal to another variable well we go ahead and we have our variable 10 is it less than 10 nope or is it equal to 10 yes so this is indeed going to print out oMG I am braggy and of course there is greater than or equal to but I'm not even going to show you example because it's pretty selfexplanatory what we have so aside from testing a variable against a value I just want to tell you guys that you can go ahead and test two variables such as 43 so now we're going to say all right is X arm greater than or equal to Y aka is 10 greater than or equal to 43 let's go ahead and go and run that and we see that 10 is not greater and it's not equal to 43 so we can test two variables and we can even test two numbers like is five greater or equal to three and we go ahead and run that and we print out oMG I am pretty but this testing two values is the least common thing people I don't want to say always but I've never seen it where people had two values in here it's either one variable or two variables if we go ahead and we just had this code right here then it wouldn't make sense just to forget this whole if statement just like that unless you don't know how to compare numbers then you would have a problem then you shouldn't be watching this story but for now I just wanted to talk to you guys about the if statement and how we can use it to make a basic decision again technical terms whenever your test is positive we call that a true test whenever your test is negative and it doesn't make sense we call that false so the code inside the if block is only going to run when your test is true as you just saw and again we have two equal signs for equals explanation point equals means not equals greater than less than greater than equal to less than or equal to so now you are pro with the if statement so thank you guys for watching don't forget to subscribe and yeah see you next story