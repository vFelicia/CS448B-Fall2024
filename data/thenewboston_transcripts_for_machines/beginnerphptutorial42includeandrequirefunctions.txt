hi this is Alex from PHP Academy and this is a video for the new Boston now in this short series I'm going to be the short tutorial I'm going to be talking about the include and require um inside PHP now you may visit websites and think you know how do they get the design or the template exactly the same every for every page and the answer is that there's a preset template uh not necessarily including um using include or require um it will be using most likely but it will be using some kind of um way to include this now you'll know that I've got two um files open I've got my index.php and I've got header. in.php um now header. in.php has um a header one um on with my page so if we preview this in our browser it looks like this now what what happens if I want to create multiple pages with the same header in now let's just go and create another file and I'm going to call this um I'm going to save this here in include require and I'm going to call this um let's just say um another page.php okay so I've got all in all uh three three pages I've got index.php another page.php and header. in.php now we're going to later on in the tutorial discuss um using PHP inside this file but for now I'm going to say this is my template now if I want to write let's say Echo um I'm just going to create a variable here called um string and I want to echo my variable okay so on the index page this is basically going to Echo string uh and on here I want to make a VAR and um an echo VAR so on my index page I'm echoing string on my another page I'm echoing 10 now what happens if I want to include the same header for both of these files I want to have this my page header on both of these files I can use either the include or the require function now for this purpose I'm going to be using include and I'll tell you why just later so we do include and we we create sort of like two um either semicolons sorry either two um single quotation marks or double quotation marks you can also wrap this um in Brackets but I just tend to prefer to use this uh method and I'm just going to Simply say header. in.php if it was a directory um before I'd do that if it was in another another folder I would do that so um uh wherever your file is in this case it's in the same location as these two pages in the same directory so now what I've done is if I go back to index page I've actually included this file in the top of my um my page just by using this keyword include and includeing the file I can do that in another page as well so include header. in.php and you can start to already see how useful this is because now when I go over to another page.php the header is exactly the same now the reason we do this um in general when we're creating a website let's just say um it's no longer called my page anymore um it's called um Alex's page now beforehand I would have had to go to index.php change the header let's just say the header was up here I would have had to change this then I would have had to go over to another page and change the header there but I've only had to change it once and therefore because we've included it it's updated on index.php and it's also updated on another page.php so we've created what's called a template system where we've included our header we can also include like a footer and then a main body if you wanted or a menu it it's Limitless you can use as many encloses as you want on one page now we may want to create a page where we store variables now let's just get rid of this and let's just get rid of this now I want to Echo out VAR one on this page and VAR two on this page okay I'm not actually going to set VAR one on this page or VAR two on this page I'm actually going to set it inside the header so I open up my PHP tags in here and I type far one equals string and V 2 equals 10 you'll notice how the colors of changing this just just because of the nature of my um text editor but this is valid PHP code so now I've declared these up here uh let's just comment these out for now and you can see what happens when we refresh another page nothing's displayed and when we come back to index.php uh nothing's displayed now let's uncomment these and refresh you can see string on that one and you can see uh on another page we said we have 10 so we're back to original however we've declared these variables we' we've assigned values to these variables in our header page which we've then included now let's say we want to only run this the rest of this page if um this file exists we want to check if this file exists we want to kill the page if we can't find the this header file because if we're echoing out variable one on this page and variable two on this page without this header file it's useless because we haven't declared our variables so for this we simply use require rather than include and you'll not notice any change to it whatsoever let's just refresh does exactly the same thing and if we go back to index.php it does exactly the same thing however let's change this back to include and this change this back to include and let's say we specify a file here that doesn't exist so non or doesn't exist PHP and let's just copy and paste this into here so doesn't exist. PHP doesn't exist okay so if we refresh we get an error okay whereas here we're echoing out um a variable and we can display this by saying bar 2 is something and we here we can say bar one is that so if we refresh we're still echoing out V one is but we're missing the variable because this page doesn't exist however um if we were to um choose require okay and we refresh watch what happens to this it disappears because we've retrieved a fatal error and the fundamental difference between require and include is that require just handles the uh errors differently so if we can't find the file and we've required it it kills the rest of the page we we just kill the page off so nothing else after this line here is executed it it it kills it off therefore well the reason this is important is because if we needed variables and we need this variable in this case to display this whole sentence properly we require header. in.php and on here we require header. in.php now um because we've required it and it does exist everything works out fine so it's just a way with a require to ensure that uh you're you know you might be in including a core file that has a list of variables that you need to use without your program and because requiring includer useful in the fact that you can include a long file with lots of variables that you need to use on maybe lots of different pages require ensures that these variable this file does exist therefore the files are required include is more for design based uh choices so for example you might want to include a menu your website doesn't necessarily have to run without a with a menu um you don't want to kill the rest of the page if you maybe don't have the menu file available so you just need to make a logical Choice whether you use include or require but for now that's both them inside PHP