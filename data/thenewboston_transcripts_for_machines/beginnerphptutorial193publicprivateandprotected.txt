hi this is Alex from PHP academy' de org and I'm back with another tutorial for the new Boston now in this video we're going to look at different properties in objectoriented programming inside of classes we're going to be looking at the public protected and private property types now let's go ahead and create a new class I'm going to create a oh sorry I'm going to create a class and this is going to be called bank account and inside this class we're going to address some property so we're going to create some properties in here so let's say we're going to create one and we're just going to chop and change around with the public protects and private so let's say public balance equals three thousand five hundred so this is a balance of a bank account I've shown this in my previous examples and some of the other tutorials using this code here in which we create a bank account a we were either able to put deposit and withdraw money and also apply it to multiple users so if you haven't watched that tutorial already go back and watch that and you'll probably understand this one a lot better so our properties well our property for now is balance now let's go ahead and create a method so I'm going to say public function display balance and what this is going to do is it's simply going to return this balance now if you haven't already come across this this here is a representation of the class as a whole so what we're doing is we're taking the balance and bear in mind we're not using a dollar sign here we don't use a dollar sign when we're taking a property value from a class so we're saying out of this class as a whole take out the balance so we're returning this balance value which will be equal to three thousand five hundred so now what we can do is outside of our class we can create a new instance of it so let's say Alex equals new bank account Capital a they remember it casesensitive so alex equals new bank account we don't need the parentheses there and then what we can do is we can say echo Alex display balance okay and remember the parentheses because we're dealing with methods so we're echoing out the displayed balance of this account so let's go over to our browser and check this out okay so you can see that we in our browser we have the value 3500 that has been written back to us so what we've essentially done is use this method here to return this value here this property value and then display it using by calling the method if you like so now what happens if this data type is changed to private for example now let's go back to our page and just with this simple change when we refresh this time okay right I see why so what we've basically list list let's go ahead and change this program around so we've got public balance to start with and what we're doing in here is we're displaying the balance but what we can do okay so what we're going to do is we're going to instead of use this function I'm going to demonstrate the the public protected and private by just echoing out the property inside so what we can do is we can say echo Alex balance now let's go ahead and see what's happened so at the moment we have our property set to public now let's see what happens see what happens if we set it to private and we refresh you see that we've got a fatal error cannot access private property bank account balance in now you'll notice that we've got these two little colons here as well for a static value like this we can also do this like this so let's go to colons there and it produces exactly the same result at the moment oh no it doesn't okay yes so don't worry about that for now yeah well we'll leave that out for now not the point of the tutorial so we're trying to access this private value but we cannot so let's change it now to protect it and press f5 you see that we've now got another fatal error cannot access protected property bank account balance in it tells us what line we're on so there are different naming standards to distinguish between different different private protected or public so let's go ahead and say public balance or just say balance so a public variable we usually be denoted balance and then you will have camel caps and but the first the first word if you like will have small letters so balance of account for example would denote a public variable so let's go ahead and refresh this okay and balance of I count every up let's just update that let's go ahead and refresh and oh no okay so oh right okay yeah so sorry um let's go ahead and just put var in there and refresh so we've got three thousand five hundred now let's go ahead and change this to underscore balance okay you can see that what hot what's happened is we're saying oh no undefined property there let's go score balance and refresh now the value stayed the same but we've got an underscore balance here and for protected properties we use an underscore and then a t so it's just a mess of a naming standard if you like for your variables to distinguish between them so it doesn't actually change anything but this is how we name different things so if you remember if you remember that public is starts with a small B well in this case and then we'd have camel caps afterwards a private would just have an underscore before it and it protected would have an underscore and T so you can see that with the with the public key word we're able to access the variable outside however with a protected or private we're not so let's go ahead and call this method again so display balance and let's go ahead and refresh to make sure everything's working properly okay so three thousand five hundred now let's change this to private so what happening now is we're returning the value inside here and it's a private data type whereas before we it didn't last let's check what happens okay so it comes up with three thousand five hundred so it's allowed us to use this private balance within our class so now let's go ahead and change this to protect it let's come in refresh and you can see that this time it's still displayed it so you can see that while we're accessing things inside of our class protected and private of both going to allow us to do this however public is going to allow us to access it outside now why do we do this what's the reason for our public protected and private keywords now if you were to have a variable inside here such as the bank account balance that you didn't want to display allow to be displayed on its own you can set the type to private and this means that the the integer as a whole or the variable in general as a whole can't be accessed outside unless a method within returns that value so for example balance we want to keep as a private value so we can't say we can't say echo Alex balance so this line here will work because we even though it's private the method inside of it is accessing this variable we're not accessing it from the outside so we're calling a method that is accessing this variable this property rather but however echoing out Alex balance is not going to work because we are trying to access it from outside and it is a private property type so that's just just basically a bit on properties just so you can get the hang of why we do them why we give different property types to properties and a bit of a demonstration on what works and what doesn't