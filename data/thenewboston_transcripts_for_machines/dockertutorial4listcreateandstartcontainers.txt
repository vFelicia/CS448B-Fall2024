alrighty guys welcome back and in this video i'm gonna be showing you guys how to list create and start containers learning some more docker commands so let's just go ahead and dive right into it now the first command is docker container ls now this ls command is to list all of your containers now by default it only shows your running containers so i'm going to hit enter and we see that these are actually column names and we don't have any containers listed because we don't have any containers running right now now if you let me go ahead and actually well i can run like this to compare all right now if instead of just running docker container ls i run docker container ls with this a at the end dash a this is a flag to show all the containers that have ever been created so i'm going to hit this and let me expand my window so you guys can see all right it's a little bit better i have to make the text big on my terminal so you guys can see on youtube but it's it takes up a large portion of the screen so it's kind of funky whenever i'm recording but anywho let's just jump right into it so now we see our containers and these are the containers that we created in the last video and i'll walk you guys through what each of these columns mean so this container id as you can see this is just a unique idea it's created from a shot 256 hash and it's just that it's just a random hash that docker creates for you as an identifier for the container just an id number nothing fancy the image you guys can probably guess what this is is just the name of the image that was used to create this container this command column this is actually the default command that was ran whenever you created this container and created again this is just the date and time that the container was created this status and let me slide this bad boy over so you guys can see the rest of this all right so the status right here is the status of the container of course pretty uh pretty selfexplanatory there but this actually is not going to make a lot of sense until we talk about the life cycle of containers but that's later on down in a future video for right now just um you know this is the status of the container that's good for now now these ports right here which we don't see any this is also we're going to touch on this more later on but in case you just want to know exactly what they are it's a list of container ports mapped to the host and last but not least the names column is the names assigned to a container now fun fact we can actually specify our own name now if we don't specify our own name for a container then docker is going to create a random one for us and that is why you see these kind of weird looking names right here just a random name if you want to override that kind of like you can a default command you can but that is the basics of the columns whenever you list out your containers now the next two commands i want to talk to you guys about are the crate and start commands now you guys can probably figure out just by the name what these do but you're probably scratching your head because okay these commands apparently are going to create a container and then start a container but didn't we already learn how to do that through this run command well believe it or not this run command is actually a shortcut for these two separate commands if you do create plus start it basically is the same thing as running this run command now what's the point of having all these commands which apparently do the same thing well let's go ahead and break it down right now so instead of run i'm just going to go ahead and create this hello world container now real quick what this command is going to do is again to be specific it's going to create a container from this specified image and it's going to prepare it to be ran on your operating system but it's not actually going to run the container itself so whenever i run this you see that we now get this back right here okay what the heck is this did someone just hack my computer not exactly so whenever we just run the create command what does it returns the id of the container that was just created now we can see this or verify it if we run docker container lsa like we just did a few minutes ago and all right i forgot all my uh my screen size issues again but what was this up here faac35 and we can now see faac 35 this is the id of that very first or most recent container created 23 seconds ago all right fair enough now another thing that i want to point out that i probably should have just right then was this now aside from just saying that okay yep that's the right id this is the container you created now 50 seconds ago the status is now created huh that's interesting because all the rest of these containers that we created that were created using the run command their status is exited but this one is just created all right wha what exactly is going on here now believe it or not this concept may actually be easiest to understand if we just go ahead and run the start command itself so before i run the stark man i'm gonna go ahead and copy this container id and another thing to note is that whenever you're referencing a container you don't actually need to copy the entire id you just need this little snippet so let me go ahead and run this command which is docker container start now i'm going to include another flag which is dash a in dash a in this case it means attach or basically print any output from this container right into our terminal if we didn't include it then you just couldn't see any of the output so i'm going to start this container right here which is f a a c yada yada tomato tomato so now let's go ahead and start that and okay it looks like it kind of just did what run did earlier on but now let me go ahead and run this command again which lists all our containers and all right so this was a container we just created and ran and before huh that's interesting let me scroll back up here so before it said status created but then after we started it it now says status exited so why did that happen well this container whenever it runs it has one simple job it gets created it runs or starts and its only job is to print stuff out on the screen and then it exits it's it's a very simple program kind of a worthless server if you want to think of it like that but that's kind of the mini life cycle that happened so again just to reiterate some of these concepts the create command what this does is it just creates a container from the specified image and it prepares it to run on your operating system now the start command just starts the container it's basically like starting or booting up your computer after you installed an operating system or something now the run command is a shortcut to type both of those together where if you just ran the create command and then the start command right after since people just kept doing that all the time over and over again docker just unified that by creating that run command and that's where we're going to be sticking to most of the time but that is your little knowledge of all those commands and the last thing i want to do before i let you guys go is just show you guys a quick trick not even trick just a command to um clean up all your containers so we already know that okay if we list out all our containers we get all this stuff now how do i clear those out well if you run docker system prune and then you can just use the flag all and this all just says remove all unused images not just dangling ones and again i don't want to introduce too much stuff in this tutorial but a dangling image is just one that is not tagged and is not referenced by another container again you don't need to know dangling containers or tags or anything like this just want to show you guys how to clean up all your containers for now you'll understand this in the future video but for now let's just run this yes verify that that is what i want to do okay look you got all this memory back very cool and now jeez drag racing going on inside now if i run this command again you'll see all your containers are now cleaned up so a lot of information in that tutorial i'll give you guys a little bit time to absorb that but again thank you guys for watching don't forget to subscribe and i will see you in the next video