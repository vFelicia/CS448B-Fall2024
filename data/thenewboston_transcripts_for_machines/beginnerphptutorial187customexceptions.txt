hi this is Alex from PHP academy' are all going to back with another video created for the new Boston now in this exception handling video we're going to look at throwing more than one or catching rather sorry more than one exception that might be thrown so we're throwing more than one exception and we're catching more than one exception we're going to give these exceptions our own name so I'm going to use an example of connecting to a MySQL database you probably already know that to connect to a MySQL database use MySQL connect you then specify the server name the host the host name sorry yet the server name the username and then the password and then we're also going to incorporate this and select database function MySQL select database in which we just specify the database so the first thing I'm going to do is create some of our variables that we're going to be using within these functions just to keep the code clean and easily modifiable so the MySQL server in my case is localhost the MySQL user I'm going to say host Ashley Spezza so host is localhost the user is root and the password in my case is unspecified I don't actually have a password linked to this root account so now I can specify the database so MySQL DB and that is equal to a underscore database this database does exist within a table so when I use the when I test out these exception handling handlers I'm going to change route to Alex so we don't connect properly to our server and then for database um we're just going to append a one on the end just so that gives us an error about our database as well so how do we go about redefining or renaming these exceptions now we do this by creating an extension of a class that already exists and the class is exception so what we need to do is we need to create a new class we need to say class and give it a class name so for the database the database arm exception I'm going to call it database exception with just capital D in the capital e and this is going to extend to ease the extends keyword exception and then we just put two records that we don't need to specify anything in in here at all so what we're doing is we're taking exception and we're extending this into our own class called database exception so we're basically taking everything from exception and using that in our own class called database exception and I'm going to copy and paste this code down if I will write it out again so I'm going to say class server exception and that's also going to extend exception and then we just do two and curly brackets there so I'll put this one at the top because we're going to be connecting our database first then we're going to be our server first then we're going to select our database so let's set up our try and catch block but this time we can add another catch on the end so we've got two catches in our try and couch so what do we put inside each of these well we just say exception no we don't we say catch server extension and we'll call this X and then we exception and then we say catch database exception II X as well and in here we can echo out error messages specific to each exception thrown so what we can now do with a server exception and data exception database exception is we can throw these inside our block so the first thing to do is set up an if statement we're going to say if we can't connect and we're going to silence this so we're not going to give any errors out from my SQL by default so MySQL connect and we put in our MySQL host our MySQL user and our my ask you our password if it doesn't connect or if we're not connecting remember silencing this we are going to throw new server exception and then we're going to specify am an error message so I'm going to say could not connect to server now I can say else if and we can say not and we get them a silence in this MySQL select dB and again we're selecting we're connecting to my SQL DB which we've already specified up here and if that returns true so if if it's not if we can't connect then this will return true need to throw a new data base exception okay so remember we've got we're catching our server extension and database exception and for that we're going to specify the message and in fact we could probably yeah we'll say it could connect to database or could not select database okay so now what we've done is we've created or an if else if statement and we have said if we can't connect to MySQL so we can't connect to our server using our credentials up here and here then we want to throw a new server exception which we've already predefined by extending our exception class to this that we've named ourselves and we've done exactly the same with database exception we've extended this class and we're now dealing with a named class called database exception with that we've called ourself so we're doing exactly the same thing we're saying if we can't connect that and throw a database exception now we can set up each catch from what we want to do for each catch so if we can't connect to our server for now we're just going to print out us an error message obviously you could do whatever you want it to in here but I'm just going to demonstrate this with an error so I'm going to append on the e^x variable that we've created from this class and from that we're going to specify the function get message which will get the message that we specified when we threw the exception now what we can do is do the exactly the same for our database exception we can say error and then e^x get message so this means we're a now we've now thrown two different exceptions and we have two different actions for each exception thrown so you can now see how this can can actually be useful in everyday applications so let's first of all connect to our database we'll say else okay connected so let's come into our page and refresh now the credit n choose R fine so we've been connected now let's play around with changing them so let's change a root to Alex and what they should do is we should throw a new server exception and we should have the error message could not connect to server' so let's refresh error could not connect to server so that's successful we've successfully thrown this error okay so let's change that back to root and now let's say a database once we've appended a one on this database doesn't exist so now let's refresh and you can see what we've got an error saying could not select database so what we've done in this tutorial is we've extended and the exception class to two class server around so we're using parts of this exception class for ourself and by doing this what we've done by defining them here what we've done is we've been able to throw two different exceptions by naming the classes ourselves we've created a custom name for our exception so we've duplicated this exception class essentially that's what we've done we've connected to our database which you should know how to do and you should now know this works so if we don't connect with throw a new exception otherwise if we don't connect to our database we throw a new exception as well otherwise we say that we're connected successfully and we've got our catch blocks down here which give out an error just as an example but otherwise you could choose to take an action depending on which exception has been thrown so take this play around with it see what you can do with it and see how you can apply it to your own applications