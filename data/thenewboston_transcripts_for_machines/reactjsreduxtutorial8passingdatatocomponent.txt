alright guys so before I actually display my list of users right here what I wanted to do is reiterate exactly how we got here and how we are taking this list and using it in our component because this is actually the hardest part of redux so if you guys understand this then you essentially figured out Redux so it really isn't that hard so what we did is we made a reducer and a reducer is just a little piece of data that we want to save in our application now every reducer that we create every little piece of data we need to combine it into one big object and we just name that object all reducers so then we take all of those different pieces and we make a big master object called our store so again all the store is is a bunch of data any data that you want to store in your application we're just going to save it an object called store that's it and right here what this provider did is it took all of that data and since we wrapped up with it right here pretty much every single component has access to this data right now so that's it now you may be asking are right so why don't you just pass it all in why do you need this right here well the reason we have to map state the props is because we usually don't want to pass in every single bit of data I mean right now we only have this list of users but later on we're going to have movies music forum posts blogs you know a whole bunch of stuff so instead of just taking all your data and passing it into every component what we're going to say is actually just take the users and pass into the users list that's really all what cares about it doesn't care about your movies at all so that's all does connect your main state or part of your store and pass in to a component as its properties easypeasy so now what we can do is instead of these list items we can actually display these users and let me get rid of this clean it up a little bit so what I'm going to do is I'll say um this creates list items looking good so again all this function is going to do is instead of trying to write all our functionality right here it's just going to go through get each item in the list which is a user and turn it into a list item and I'm not going to print out everything I'll just print out like their first name and last name something that the user can click on so you need to return some HTML so anytime we want to loop through part of our state again remember we can access this as a property called users so this dot props dot users is equal to this list right here so again since we want to loop through it we just have to call a function called map so map is going to loop the Revue array and for each object in there or each user or just say actually let me go ahead and do this actually I'll use a shorthand version so for each object treat them as user and for each user what do I want to do well I just want to go ahead and return I'll list item so list item and I'll say user dot first I didn't name it first not first name right yep user that first user dot last so it's going to make a list item with their first name and last name now I don't know if you guys remember this from the last tutorial or the last video series but anytime you make a list of items each of these have to have a unique key so for the key what I also did is I included a user ID for each one now since all of these first names are different you can even use first names just anything that's different but basically this key in this case is equal to user dot ID boom roasted so now if this rear Enders check it out how beautiful is that so again what we can do is we can take in any piece of data from the entire application and we can pass it in to user list or any component that we want as a property and then with those properties we can pretty much do whatever we want with them we can display different bits of data we can add event handlers which we're going to be doing soon and man that is one beautiful piece of software right there mmhmm now another thing I want to point out is remember any time we make changes to the store say we add a new user this component automatically gets updated we don't have to call a special update now function we don't have to do anything weird that's the awesome thing about reacting Redux all we have to do is omit in action and whenever it changes the store whether it's a button a slider it doesn't matter it automatically changes the view to reflect your data properly it is incredibly beautiful so yeah thank you guys for watching and also I don't know if I mention this if you guys want to donate to my patreon account I'm actually saving up for a grouchy sandwich so yeah thank you guys I will see you guys later