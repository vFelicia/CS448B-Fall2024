what's going on guys is Bucky and welcome to your twenty six tutorial in C++ in this tutorial I'm gonna be talking to you guys about something called logical operators now let me go ahead and build a simple program right now say we were the owner of a nightclub and we wanted to calculate whether a person was allowed in or whether they weren't so first we looked at their age and we're gonna make sure it's you know over 21 because we don't want to get sued and the next thing we're gonna be looking at is how much money they have because we don't want to allow poor people into our you know 5star nightclub so let's say they need more than five hundred dollars so let's go ahead and make this like person has six hundred and fifty dollars so we can test this like this if H is greater than twenty one and if money is greater than what I say five hundred um where would I just hit insert where the hex might insert key on this keyboard this keyboard is really my stuff now that look about it so it took me like five minutes to find the insert it was actually by my upanddown arrows that's weird so anyways mmm now that we had our nice little break we can go ahead and just write something like C out um you are allowed in and make sure you sell it with a nine and you and make sure you spell in ion or else this program just won't work so let's go ahead and run this and see what we get we are allowed in because we indeed are greater than 21 and we have more than 500 dollars so resent alright pretty cool program maybe I'll open up a nightclub now but check this out this can get kind of confusing after a while because this brace goes to this and this goes to this we're pretty easily distinguishable but what if we had five different tests that we need to check what if we had 20 different tests well one little mistake say we had this over here or program I'm still going to run fine but it looks like this goes to this and this goes the main or something who knows where this one goes I mean putting a bunch of if statements inside other if statements is not always the best idea so we have a better way to test two or more things and that's through the use of something called logical operators and this allows you to make all your tests on a single line so here's what we can do in this case go ahead and make your if statement and then might as well make our C out right now like you are allowed in explanation point with endline and in our if statement go ahead and write your two tests like what do you put age is greater than 21 and whenever you join them you use this logical operator and and and now go ahead and write money is greater than 500 now let's go ahead and run this and check it out same results a whole lot less programming so what and and means do this test and do this test if they're both true then run this bit of code and since they both were true it ran this bit of code if one of them was false say we only had you know four dollars like that well yeah this test is gonna be true because we're greater than ten to one but this is gonna be false because four dollars is not greater than 500 and whenever you run it we are not allowed and check it out and also if both the tests are false like we're only two and oops right or wrong space for that say we're only two years old and we only have four dollars probably from the Tooth Fairy of course we are not gonna be allowed in the club not cool but you know we're two yearold who needs to go clubbing one there too anyways so basically a double + sign means this test all these tests and if they're both true then you can run this bit of code but if one of them is false or both of them is false then we don't run it simple enough huh and I say and with this test in this test but you can also have an and in another test and even in an in another test and it's just gonna run all of your tests and make sure that they're all true so the only way this bit of code is going to run is if all your tests and this is true so if we're saying all right I understand that logical operator all the tests need to be true in order to run but what if you say this all right I'm you know not the most professional nightclub owner so I'm gonna allow them in if only one of these tests is true if they're over 21 then they're allowed and of course or if they have over 500 dollars I'm gonna lie to allow him in because you know if 20 yearold walks in with like 8 grand I know he's not 21 but I think we should let him in anyways so say we wanted to do that make sure only one of the tests is true what we do is use a logical operator called the or logical cooperator and that's if you see above the enter key on your keyboard and hold shift you get these two little things I call them pipes but I think some people call them pipe lines tell you truth I don't know what they're called it's like a straight line up and down as you can see but that's what little that's what it is and two of them in a row is the or logical operator and what the or logical operator says is this unlike the end where this one and this one had to be true only one of them has to be true and the other one can be false and it still runs the bit of code so check this out we pass this test is true 26 is greater than 21 but we don't have more than $500 so this is gonna be false so true and false so we run it and it allows us in even though one of these was false but if both of these were false say we're only 6 years old it wouldn't allow sin so anyways what you have to remember is this that and at logical operator both the tests have to be true with the or logical operator one of the tests have to be true and another thing if both of the tests are true and or it's gonna run your bit of code so let's say you were you know 64 and you had you know a crapload of money it would run and even though they're both true it would allow you in any way so with the or this one or this one or both of them have to be true and with an and this one and this one has to be true and of course you can add another or test and another or test and another or test and when you ran program like this it's going to run through all of your tests and as long as one of them is true for example this one could be true and all these other ones could be false and it was still around this bit of code an order basically means look for at least one that's true and if it's true run the bit of code so now that I repeated that about eight hundred times you guys should understand the difference between an and an or logical operator and when you would want to use one versus the other I guess it depends on what kind of nightclub owner you want to be but for now that's all the code on I'm going to do so thank you guys for watching this tutorial don't know what I'm gonna cover in next tutorial but if you click on the next link you can see so thank you guys for watching and I'll see you then