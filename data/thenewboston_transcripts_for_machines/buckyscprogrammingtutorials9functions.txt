what's going on guys it's Bucky and welcome to your ninth C++ tutorial and in this tutorial I'm going to be talking more about functions now I talked about this a little bit in like I don't know a couple tutorials ago but I want to talk about it again because I really want to stress what functions are and why they are useful in C++ programming so if you remember a function is basically a computer program is made up of a bunch of functions right now we have one function right here and basically the job of a function is to do something so inside function we can give our program a bunch of separate instructions all followed by a semicolon so our main function that we already learned is the starting point for every computer program every program starts with the function main so this is one function right here but let's go ahead and create another function and in order to do that go ahead and separate from your main so before we're coding everything inside the main function but now we want to create another function so go outside main right here now the first thing that we need is a return type and this is whenever people build functions they usually make a calculation and give you back something for example if we had a function to calculate the speed of my car it would give me back a number if we had a function to UM calculate my weight it would give me back a number well sometimes functions make calculations and sometimes when they don't make calculations just as like printing something out on the screen it doesn't really need to calculate anything so sometimes functions are going to return a number to you in that case you would use int and sometimes they just do stuff like print something out on the screen and don't return any answer to you whenever a function doesn't return anything to you just go ahead and put void and this means you know function just go ahead and do your thing and I don't want anything in return so the very first thing you write is the return type of the function so this one you see it return a number but this one is just going print something out on the screen so it's going to return void so after this you go ahead and you name your function this one is named mein and you can actually name it anything you want this function is just going to print something out on screen like I said so I'm just going to name it print something pretty dumb I know but hey it's my function I can do what I want so after this you see that I added two little curly braces and those are actually called parameters um whenever your function needs additional information you add parameters but we're going to be covering this in next tutorial for now just remember to add them and add nothing in between them trust me I'm going to be covering this in next tutorial and I'm going to make real easy to understand but after these parentheses go ahead and add two curly brackets and just like I said before this is the body of your function for example if you had a function called make peanut butter and jelly inside your body you would have a set of instructions like get out the bread next instruction put peanut butter on one slice next instruction put jelly on one slice lastly eat it well in the body of our function we give it each instruction about what we want this function to do so in our function called print something the only thing that we want this function to do is print something out on the screen easy enough we already know how to do that so let's go ahead and see out oops there we go and what are we going to print out on the screen just right like ooh I am text on the screen it's very feminine function we have here but anyways then just go ahead and end the line simple enough so now whenever we use this function we're going to whenever you use a function it's called calling the function why they did that I don't know but um just remember whenever I say call the function I basically just mean use the function so whenever we call this function all it's going to do is print out ooh I am text on the screen simple enough so let's go ahead and remember since our computer program starts with main we need to tell it in main that this is the function that we want to use so in order to use or call a function all you do is this just go ahead and write print something empty parameters and a semicolon so again anytime you want to use a function just go ahead and type the name of the function empty parameters and a semicolon but check this out whenever we try and build and run this we're going to come and get an error this with this little red rectangle means you can't read my error message because it's down here but says printing something was not declared in the scope and you're saying all right what did we do wrong because Bucky told me that this function is built perfectly which it is but whenever it tried to call it or use it right here it didn't understand what was going on so why is our compiler kind of confused well the reason is this computer programs work from the top down it starts at the very top line and it runs downward until it gets to the very end and then it quits so whenever our computer program was running it said this all right include this file done use this done okay now start with main print something Oh what the heck I never seen that before is this a function or trying to make a variable or what the heck are we doing I don't know what this means well that's because whenever we created our function we created it after we use that we need to tell C++ before we use our function that is actually a function so we have a couple ways of doing this probably the easiest way is just to do this go ahead and cut it and then above your main go ahead and paste it and now C++ is going to think like this all right I'm going to include this simple enough I'm going to use this easy enough and oh you made a function called print something now okay I'll remember that so now whenever I call my main and I come across this thing called print something I know that it's a function that you created so that's why whenever I build and run it now it's going to run perfectly without any errors so that is basically how a computer program works first you need to tell it that you are actually creating a function before you can use that function so if you just try and use it it's not going to know what it is if you didn't create it first sever saying all right I just remember to create all my functions before I use them okay you can do that but let me give you an alternative method of doing this if for some reason you like your main at the top and you like to create your functions after well we already know that whenever you try to run this we're going to get an error but there is one thing that you can do and this is called function prototyping and all this is is this trust me it's the easiest thing ever go ahead and select your a turn type your function name and the parentheses and go ahead and copy that now above your main and under your using go ahead and paste this this is called the function prototype and it's pretty much a copy of your functions header and it basically is saying this alright whenever you run this program now go ahead and include this include this and then we're going to this is called prototyping a function this is pretty much telling our C++ program this alright later on you're going to come across something called print something now whenever you come across it we don't want you to freak out like you have before something us a whole bunch of error messages what we're telling you right now is we created a function called print something but you have to go find it and C++ is going to say oh all right now whenever I try to run my main and I come across this function instead of giving you error message I'm going to know that this is a function that you have somewhere in your program so I'm not going to freak out I know this is a function I know to handle it accordingly so check it out whenever you try and build and run this it works perfectly so that is why you need to do one of two things before you use your function in main one you can prototype it or two you can just go ahead and make your function before main either way whenever you run this function in main it needs to know beforehand some way that this is a function so those are your two different ways of doing that and again in order to create a function go ahead and type the return type the function name and the parameters and again I'm going to be talking about these parameters in the next tutorial so as long as you understand this and the basis of how to create a function and how to use them in main you're ready to move on to the next tutorial so thank you guys for watching don't forget to subscribe and I'll see you guys in next tutorial