so if we um if we typee in say Alex and pass 23 we've got Alex and pass 1 23 now let's type in this value that we typed in earlier so we've got um we've got a uh semi sorry we've got a single quotation mark a space or and uh two single quotation marks equals single quotation mark uh let's go ahead and press oh no we'll put it in here as well so there we go let's press enter you can see these values have been transferred through literally so nothing's changed we've transferred the exact data that we've typed into the form now this is the reason that our SQL can be modified so with as it stands at the moment if we had these uncommented we could run um a query query of our choice so let's go ahead and um uncomment this now we've um we've processed our query um if something was in here now to delete something or modify something then this is deadly however in our user login system we are creating an if statement to check how many rows have been returned because if the username and password don't equal the same thing in this in the same record then we can't log the user in because their credentials obviously don't match and we will have an invalid username and password combination so let's go ahead and create this if statement let's go MySQL num row so we're calling this function which is going to count the amount of rows returned by this query here so we can type in query run there so if the MySQL num row um return from the quer are greater than or equal to one this means that the credentials match both the username and password so we can echo login success usually we would do this um at this point in here we would process um some kind of uh session uh to equal the ID from the database but for now we're just using this as an example so otherwise invalid um username password combination combination okay yeah so let's go ahead and try this um with the values that we submit so I'm I'm going to keep this um I'm going to keep this open and I'm going to break down again okay so let's go back and go straight onto our index.php file let's type in Al and a wrong password so pass 456 now we've got Alex Alex as the username pass 456 as the password and we've returned the message invalid username and password combination because nowhere in our table do we have Alex and pass 456 as the uh username and password so now what we can do is uh we'll go and submit some uh correct data so Alex and pass 23 these uh match here so we've got Alex as un name and password 2 2 3 as the password click submit and it says login success because we've successfully submitted the username and password that match inside of our table so now let's go ahead and use this example that we used earlier by writing um a um semi uh single quotation mark or double quotation mark equals double quotation mark and what this is going to do is it's going to structure our query as we discussed earlier and it's just going to put into here and the password as well that or that equals that so that's going to go into our query and uh we're going to return uh more than one row therefore the user is automatically uh logged in so let's go ahead and um click submit okay so you can see that the username is um is uh single quotation mark or single quotation mark single quotation mark equals single quotation mark and the password is also that as well and now you can see interestingly we've got a login success here so this is a real problem when it comes to our user our user um login system if you like because what we've done is now anyone can type these values in and unfortunately they can log in as um a user um when they maybe don't have access so how can we protect against this well I'm going to show you three different ways now that we can protect against this uh specific specific error for your own queries you might need to slightly modify this um but now I'm just going to talk about this so we can get the general idea of how we can start to protect now the first problem we look at is the um is the single quotation marks the single quotation marks need to be escaped in order for them not to work so for example if we were submitting um let's go this if we were submitting the data like this and escaping that that that and that so let's copy and paste that into here and we click submit you see that we get an invalid username password combination so we need some way to escape the different characters now there's something in PHP and something in the php. file which I've just opened here if you don't know how to open this or don't know how to edit things from it uh you can find a tutorial on that as well what we have here is we have magic quote GPC and you can see the comment just above it is Magic quotes for incoming get post or cookie data and what this is going to do is it's going to escape like I've just written here um these automatically when you submit data so it's not foolproof because we might not be submitting through um a poster a get or even cookie so uh let's go ahead and um turn this on and in a moment we're going to turn it off and all I'm going to show you how you can also also uh include this if it's it's automatically say off on your server so let's go ahead and restart um Apache from our xam control panel so remember every time you make a change in your php.ini file you must restart Apache okay so um let's come back to our page uh and wait for Local Host uh right okay so our our our server has been restarted and we've turned magic quotes on so now let's go ahead and do exactly the same thing and click submit now you can see that without doing anything we've automatically now escaped well we did do something we changed the value in php. inii but what we didn't do is change any of our code and this has automatically given us some sort of protection against SQL injection