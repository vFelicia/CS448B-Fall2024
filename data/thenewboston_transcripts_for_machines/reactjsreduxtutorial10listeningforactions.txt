all righty hoses so in the last video we learned all about action creators and actions so now let's go back to our trusty diagram and figure out what we have to do next actions and then we need to figure out reducers wait a minute mate I thought we already learned about reducers in like the first tutorial we already took care of that and all reducers are are pretty much just part of your application just anything that you have to contain in memory so how the heck did we get back to this oh wait a minute I guess there's a little more to it than just a piece of memory that your application has to hold on to it also says it takes in actions and updates part of application State huh that's interesting and that brings me to the last point that I want to make you see these actions right here these actions they don't really do anything or manipulate anything in a smart kind of way all they are is just telling your application hey something happened some user event some action it occurred that's all they just make an announcement to the world and then they're like all right I did my thing now it's actually up to the reducer to determine how that action is going to change your application so this reducer is actually the smart part that says okay whenever I hear this announcement how is that going to change my data so in this case we have one action whenever the user clicks one of these names that's the announcement that gets made so then what we need to do is we need to say okay whenever that happens display their info under here now for this application I'm just going to say that the user that's currently selected we'll just call that the active user all right so last piece of the puzzle let's go to our reducers and check this out so this is the data that we have so far we have three users stored in here now of course eventually we're going to need to make one of these the active user and that user gets displayed on the bottom right here so let me start thinking about this I mean we can have another one another field called active and we can set it equal to true and false but we really don't want to do this because we really don't want to change this piece of data because right now I mean later on we may add a functionality to kind of add new users and delete users but hey we're just starting to learn react so we really never want this user list to change we're always going to have three users no matter what one is the active one so what I'm going to do is I'm actually going to take this reducer this piece of memory and I'm going to leave it alone however we still need to decide who the active user is so how do we do that well I'm actually going to make a brand new reducer and I'm just going to name this reducer active user so again all this piece of data is going to be equal to is essentially whatever user got selected so again we have two reducers two pieces of memory that our application needs to be aware of the first one is a list of all the users and the second little piece of memory is what user is currently selected what one is the active user and this is going to change so we're going to set it up a little bit differently than this right here it's actually going to be really cool so of course this is going to be a function and again its job is to listen for this action so whenever it hears the announcement user selected it's going to say oh um all right what user was selected and that's the active user that's all it does and by the way one other thing that I want to mention whenever any action occurs no matter if it's in this file another file anytime any action occurs that action automatically gets sent to All reducers all right that's an important concept to kind of remember so if you're saying wait a minute so you're saying my action is going to be sent to this reducer even though it doesn't really need it anyway well yes does it matter no because this reducer is going to return the same piece of data no matter what and the majority of your your time most of your reducers are just going to ignore these announcements these actions however what you can do in some reducers is you can set it up to respond to these actions appropriately so how do you do that well let's finally kind of get to it so might as well put this at the top so export default function and we'll just say State equals null all right so let me show you guys something else real quick let me delete some of this crap clean it up do I need my diagram still I'll keep my action all right so you know that I said a million times that all a reducer is is just a little chunk of memory that your application needs whether it's a list of users the currently selected user whatever so whenever we create all these little bits of memory we need to kind of put them together into this thing all reducers yeah we already learned that before why am I saying it again I'm saying this because even when your application first boots up this little chunk of memory it needs to be equal to something wait a minute you don't have any user currently selected yet well we still can't just return undefined or else we're going to get a bunch of Errors so what people usually do is they give this a default value and the default value just has to be anything it can be equal to you know a blank object it can be equal to zero it can be equal to anything just not undefined or else you're you're going to generate a bunch of errrors so with the new es6 syntax you can actually just set a default parameter right here or if you want then you can just return um uh you know a blank object or you can give it like a default user like saying when you're at first boots up just give it Bucky by default whatever but that's an error that a lot of people come across and they don't know why so I just saved you guys the trouble so there you go so again what this is going to do is it's going to take an action as well so right now we only have one action right where is my action so right now we only have one action that can occur user selected but eventually in a fullfledged app we're going to have a bunch of actions menu open Button clicked user deleted message sent a bunch of these little announcements going off so what we do in our reducer is we need to say okay what announcements do we care about so you pretty much say um if it's user selected then do this if it's message sent do that and you have like a bunch of different if statements if this if this if this however whenever you have a bunch of different if statements it's better just to use a switch it's like a more compact way of writing a whole bunch of if statements so what we're going to do is we're going to listen listen for the action type so again that's just the announcement that got made and I can actually copy this so we'll say in the case that the announcement or action was user selected what do we want to do well all we want to do is we want to return remember we have to return some piece of data that's what a you that's what excuse me a reducer is is just a little piece of data that you want to return so this is the active user reducer so what are we going to return well we're just going to return the payload because the payload is the user that they clicked on and this is the easiest thing ever so all we're going to do is return the action dot why say playlist how did my fingers do that automatically it's weird sometimes I just start typing and I think I'm going to type like bucket and I type like ham sandwich I'm like how did I do that all right let's get back on track here Bucky and break and it won't give it a default and I'll say return State all right so if there was no announcement well I'll say this when you're at first boots up then we're just going to say State equals null so we can say blank object but I'll show you guys a cool little trick that you can do later on whenever you hit null so we'll say State equals null when your app first boots up it just returns State now later on whenever they click one of these users then it's going to hear this announcement it's going to hear this action and it says all right what do I want to to return I need to return some piece of data whenever they selected a user well all I'm going to do is return the payload which is the user right there easy enough so this reducer is always going to return the same list of users we're not touching that everything's perfect there and this one is always going to return the user that was last selected this is beautiful so now again all we have to do is add it to the all reducers so import what am I going to name this we'll just say uh active user reducer from reducer active user and all right so whenever I use this in my app I'll just refer to it as active user and it is equal to the active user reducer which is essentially this function right there beautiful