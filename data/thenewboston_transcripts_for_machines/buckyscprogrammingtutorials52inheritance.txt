alright guys welcome to your 52nd C++ tutorial and in this tutorial I'm going to be talking about something called inheritance now inheritance is a topic that confuses a lot of people but I'm going to be giving you guys a really simple explanation and showing you guys a really simple example of what inheritance is now inheritance is the idea that you can inherit things from another class for example say you have a class that has a couple functions in it and a couple variables in it and you wanted to make a new class that also had the same functions and variables in it well instead of you know copying them all and pasting them all into your new class you can just inherit from the other class and whenever you inherit from another class you get all the stuff you get all the functions and variables so let's go ahead and make two classes file new class I'm going to make one class named mother and this class is going to have a couple things in it well it's going to have a function in it for the sake of this tutorial so let's go ahead and create this add it to project and I'll press ok and now I'm going to create a new class called a daughter now what the daughter is going to do is inherit this stuff from the mother so go ahead and press create yes and okay so the first thing we need to do is go to our dot CPP copy this paste inner main and also go to our daughter copy this paste in our main and then copy all this and paste it and paste it so now all our dot CPP s look the same that's why I like doing all my tutorials so let's go ahead and our mother header and actually in both our header files take out protected and private because um I didn't tell you guys what those mean right now so let's forget about it for now they're actually pretty important when we're talking about inheritance but like I said in this story we'll just want to give you guys a really simple example so before I go on let me give you guys the technical terms see we're going to be inheriting all the stuff for a mother and we're going to be putting it in the daughter class but now the technical terms if you're on a test or if you're working for a job or something whenever you inherit from a class this main class that you're inheriting from is called the base class so in this example mother is going to be the base class now the stuff that does the inheriting the daughter that gets the stuff this is called the derived class so the base class is the class with all the stuff in it and the class that is going to get all the stuff is called the derived class so let's go on and start typing our example so let's go ahead and throw one function into the mother class and we'll just you know void say name so this is the Robert's family we're dealing with so let's go ahead and build this function right here right here all right we don't have anything in the constructor because the constructor is annoying now let's go ahead and build this void mother say name function and all this function is going to do is see out I am a Roberts because that's what my mom shouts all the time and she doesn't know how to spell so that's why I have to add some typos in there so now if we go ahead in our main CPP we can build an object called like mother named it mom and what mom can do is say name and of course it would say I am Roberts on the screen and say you wanted to build another object a daughter object and we'll name this Tina and you wanted Tina to have that same function because I mean she's Roberts she should be able to say it well right now whenever we build it it doesn't work because Tina doesn't have that function only the mom does so saying RA I know in this case go ahead and copy this put in the daughter header then copy all this crap put it in the daughter CPP and it should work fine well yes you can do that and it'll work fine but I got an easier way to do things and that is through inheritance now whenever you want to use inheritance all you have to do is this in the header file whatever class you want to inherit the stuff from right after the class name put a colon and then right after this write the word public and then write the class you want to inherit from which is mother now we're going to be talking about this keyword why I put public right there basically it means um all this public stuff is going to be public in here but we'll be talking about later there's a couple of weird things but you know just put public for now so basically what I'm saying to C++ is this alright in my daughter class include all the stuff from the mother class so what it's going to do is go over to this mother class go ahead and grab this function right here it's not going to grab the constructor that's another silly role but it's going to grab any public variables and any public functions and right now we only have one public function in that same name and it's going to throw it inside the stoddard class so now this daughter class is in hairatan from the mother class so now check it out even though we didn't explicitly write that same name function in here it inherited it so it's there even though we can't see it so now let's say we want to take away this part right here and we try to run this we don't get any errors and now the daughter is able to use that same name function so again what inheritance is is this whenever you have a class and you want to inherit the crap from another class you can write a colon and then public and then that name of the class and what this does is it takes everything from this class and it sticks it in this class so this is called the base class and this is called the derived class whenever you inherit everything from the base class gets thrown in the derived class so now even though we can't see the same name function it's there so that way whenever we created a daughter object the daughter object was able to use the mothers functions even though it wasn't explicitly written in the documentation or dot CPP file whatever the heck you want to call it so that's why we were able to run this daughter object and use the same name function on that so that's what inheritance is it's basically inheriting stuff from another class but you know how I said that there are a couple weird rules like you needed this public thing and whenever you inherited it grabbed all the stuff from this mother class and throw into the daughter class well that's not exactly true I don't want to say I lie to you guys but for the sake of this tutorial I just wanted to make a simple arm there are a couple weird exceptions in whenever you inherit from another class it doesn't actually grab everything Aronian grabs a couple things and also you need this public keyword or out some weird stuff will happen if you try to use protected or private and that's what I'm probably going to be talking to you guys about in the upcoming tutorials but for now what you have to remember is this inheritance is basically grabbing another class and throwing all the stuff in to a derived class so this is called the base class this is called the derived class that's what inheritance is pretty simple huh you inherit this stuff from another class that's all it is so now that I talked about that we're ready to move on to next tutorial so thank you guys for watching don't forget to subscribe hopefully you understand the concept of inheritance if you don't watch the video again and I will see in the next tutorial