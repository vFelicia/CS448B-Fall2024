so let's go back to our database so we can monitor what we're doing here and click back on users okay so we're going to start by opening our text editor and we're going to connect to our MySQL server and then connect to our database so I'm not going to be doing this properly because in this video I'm just demonstrating SQL injection so I'm just going to use a standard MySQL connect function it takes three parameters if you haven't already looked to this I do have another video on it so go back and again have a look at this my username is root and my password is just blank and I'm going to say MySQL select DB and this is a underscore database so let's just echo out a confirmation message here just to check the we're connecting successfully so let's refresh there and it to do that okay so we've got an OK message there so we've successfully connected to the database let's start creating our form so we need to take a username and a password with value and we're doing this I'm going to put both fields equal to text values so you can see what we're typing in in our password field so I'm going to say form action and I need to set a property for method as well and the form action is going to be index dot PHP we're going to come back to that and the method is going to be post ok so we want user name and we want to take an input and the type is text the name is a username and that's it so now what we can do is say password we'll bring this down a line even though we're not breaking down the line we'll just bring it down for all right neatness we'll set input type is text name equals password this is the users password and then again we'll just line down and we'll say add a submit button here it's a very basic HTML form that we're creating let's just preview it in our browser and yeah we've got user name and password so we can type something here and we can type something here ok so we can see the password you'd usually set it to the type of password so you can't actually see the password but for now we're going to we're going to set it to text so we see what we're doing so when the for resubmits we need to first of all check if at the posted you slim a post with posted password are set so we use the is set language constructor we say is set post username and oh sorry and so we use our and operator and we say is set dollar underscore post password so if these are both set we can now assign them to our own variable so username is going to equal dollar underscore post username and password is going to equal dollar underscore post password so let's just echo these out so we see we can see that this is this is giving us back our input so I'm going to type a in here and B in here so what we should get back is just a B next to each other okay yes so our variable two successfully being picked up using the post username the post password so you can now get rid of this echo so it's good to test your program as you go along now I'm going to say if not empty username and not empty password eko okay so now let's test this and submit nothing okay nothing happens now let's test submit a and B click Submit okay so we are checking just doing some basic form validation the username and password must exist okay so now what we need to do is we need to structure our query so our query is going to equal and like I said if you've already seen this you'll know exactly what we're doing the query is going to equal select ID from users much like I demonstrated just about five minutes ago so select ID from users where username equals something here and password equals something here so let's just put them in apostrophes so where username equals something and possibly become something this is obvious it's where username equals user name and password equals password so now we can create a new variable called query run and we can run this query so MySQL query and actually process that query through pH sorry through MySQL now this is the dangerous line because what we've done here is we've processed this query and so far we've given absolutely no protection whatsoever to protect against the SQL injection and I'll show you in a minute we're going to look at something inside the PHP dot ini file so the PHP configuration file which which doesn't automatically escape characters such as a single quotation mark so usually when you submit data with a single quotation I can automatically put a forward slash in front of it as a security measure but at the moment I've got it disabled in my PHP ini file so that's the first way we're going to look at protecting against SQL injection so let's first of all just comment out these and let's go ahead and echo out the username and we'll break down the line and we will echo out the password as well and I'm going to show you exactly what I mean now remember earlier we talked about quotation marks inside inside our queries and quotation marks are deadly as far as query goes because what people can do like we like we and looked at earlier is end a specific statement if you like and and create something else so we can add or key words in and we can end different in different lines or n different like we're equals and we can end here and then start something else and then end here again just like I demonstrated earlier