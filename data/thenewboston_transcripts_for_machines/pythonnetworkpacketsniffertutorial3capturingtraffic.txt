alright guys so now that we got the basic functions taken care of to handle and unpack just a simple ethernet frame what we can do now is we can start working on our main function so this is essentially our main program and all it's going to do is it's essentially just going to be a big loop and this loop is just going to run forever as long as their programs running and it's just going to sit and listen for packets to come in so it's just going to keep looping looping forever waiting for packets to come in and whenever they do we're pretty much going to extract all the information from it and display it to the user or do whatever we want with it so that is what we're doing essentially and before we can actually start that loop we're just going to make a simple socket so we need a socket of course so we can have connections with other computers so I'm just going to call it connection will sockets dot socket and if you guys don't know about sockets or anything like that then I recommend you check out my Python and reverse shell tutorials or there's another Python series I made recently I'm talking about sockets but there's kind of a lot to cover but I talked about it all in that so all right so the first one is just AF just the packet and suck it where you add just a raw data and suck it dot in T just three art so if you guys know about sockets then and if you watch my other tutorial series you know what those first two arguments are this is the last one I actually didn't talk about this last one make sure that it's compatible with all machines again making sure that bigendian littleendian converting it properly pretty much making sure the byte order is correct so we can read it so after this once we have just a raw socket we can go ahead and start our main loop now remember our main loop and actually go ahead and call Maine now so I don't forget it alright so again what our main loop is going to do is it's just it's just going to keep looping and looping an infinite loop looping forever and just going to listen for any data that comes across now once it comes across we're going to take raw data and make that variable and also the address and we're just going to write receive from and the biggest buffer size that you can have is 65535 so basically that's what we're doing we're taking our socket whenever it gets something whenever it sees information we're just going to go ahead and receive it all and then we're going to store it in the variable data and address and why is this indentation go ahead and format that alright are you freaking happy now art so that's what we're going to do and remember this is just the address of wherever it's sending to or the source and this is the actual data that we're going to be passing into ethernet frame so remember this function right here is going to unpack it all and pretty much give us the cool information of whatever we want so remember the Ethernet frame it returns four different chunks returns the destination the source the Ethernet type or Ethernet protocol and the actual payload or the cool stuff inside so what we can do from here is just write something like that's the MAC and source MAC and then what am I going to call this let's just call this a 'if proto and the actual data so now we can go ahead I'm not that lazy all right so Ethernet frame raw data all right so again what we're doing is taking that data that comes across the network and that's just the pulses of ones and zeros passing it to our function and we're going to extract all of that stuff and store it in nice awesome variables that we can use so now let's go ahead and make sure that this works up to this point by printing something out so let me just print out like a Ethernet frame oops knocked over my mouse I actually have a vertical mouse if you guys look on like Google Images type in vertical mouse it's like this weird tall mouse but I need to use it because I started having like carpal tunnel symptoms so I'm sure no one cares about that so I'm just going to keep going on methods order now all right so for this what we can do is we can just print out the destination the source in the protocol because we're going to be dealing with the data later because there's a bunch of stuff we need to do to it so I'll just write destination and then I write source then I'll write to proto who is sexting me in the middle of my video art so I'm just going to format this in the video for min all right so if you guys never seen these curly braces before basically they're just placeholders and you can format it in kind of weird ways but what I'm doing is I'm just going to have placeholders right here and what's going to go in these placeholders well just whatever you wrote right here remember in this point the MAC addresses are properly formatted already thanks to this function right here so what I'm going to do is I'm going to go ahead and let me go ahead and open a browser and refresh some page and check it out all right so right now what we did is we extracted the destiny the source and the protocol so this protocol right here this 8 that's the one that we're really concerned about because that's just normal um what you would think of is just like normal Internet traffic so that's where we're going to be focus on focusing on but right now it looks like everything is working fine but now that the boring Ethernet data is taken care of what we can do is we can start breaking up the main payload and start trying to figure out what websites they're going to what information they typed in you know whose Facebook profile they were looking at all that fun stuff so that's what we have to look forward to I will see you guys in the next video