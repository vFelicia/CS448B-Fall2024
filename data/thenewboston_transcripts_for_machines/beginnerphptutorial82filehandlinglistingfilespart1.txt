hi this is Alex from PHP academy' dog back with another video for the new Boston now we've already looked at file handling and how to you know open a file have a look at the contents however what we need to look at is how we can read a specific directory and list all files so you've probably already already guessed there's going to be a loop somewhere in here to loop through the contents of a directory and display each file and what we're going to be doing is we're going to just be displaying this as a list and then we're going to create a hyperlink for each file so we can click on it now first of all let me explain why this might be useful let's say you were creating some kind of file based photo gallery and you wanted to have several folders for example let me just take this just take a look at the directory structure that I've chosen I've got file dot PHP which I have opened in my text editor and I've got this files directory here now inside here let's just put a star in there we've got first file dot txt second file dot txt and third file dot txt now what we're going to be doing is we're going to be looking inside this files directory and listing all files now what happens if these were images you may have you may want to create a PHP script that searches a particular directory for a list of images and then displays them on a page so you can adapt this example that I'm going to use really really easily into your website and for your own purposes so we're going to be using two different functions we're going to use in the open directory and the read directory now you probably guess the difference between the two the open directory function will actually open the directory and load it into a handle much like we've done previously with loading a file into a into a handle then we can do something with it with the read directory we're going to put this into the loop and create the read directory as another variable so the redirect tree is going to read the handle which is then going to equate to another variable good file so you'll understand probably a bit better when I go into the example and show you so the first thing we need to do is set up a variable called directory and I'm doing this simply so I can reuse this over and over again in my program now remember the directory that we want to open is file so I'm going to just pin files there I'm not going to include any trailing slashes or anything like that I'm going to let my my program handle this later on especially when say you were releasing this too releasing some kind of script that use this to the public you might want to create a variable such as file to read or something now you don't want your user to have to think oh do I need to put a slash there or a forward slash here or whatever so you just want to have this as a single single string with no other symbols in just to make it a lot easier for you and anyone that might be looking at your code so now what we want to do is we want to create a handle for we're using the open dir and open dir function so we say handle equals open dir and obviously we're going to be opening the directory that we've just specified but then what we're going to be doing is appending on a forward slash so in actual fact when you read it in here the directory is going to look like that but we're just leaving this up to this line of code now we need to ensure that this returns a true value so we need to ensure that this actually does open before we continue with the rest of our code otherwise the rest of our code is going to be invalid so what we need to do is put this in an if statement much like we've put in a few other things like connecting to a database for example or or just anything really we want to return true so we can do this we can set a variable at the same time as calling a function so if this is true then we need to go ahead and continue the next step now just for just for purposes of you know aesthetics making it look nice so I'm going to echo out looking inside and then I'm going to put the directory name just here so I'm going to say directory like that so it'll read looking inside files this is another reason I didn't do slashes because it we're just going to specify the directory as plain string you know how we how we want it to look and what we're looking inside and I'm just going to append a break on there I'm also going to enclose this directory text in inside single quotation marks let's have a look at it at the moment okay so this is looking inside file so I want just single quotation marks on the outside of this to ensure that we enclose it so I'm going to put a single quotation mark there and escape that character so it doesn't interfere with the start or end of our string and I'm going to do the same just after that break and then put a escape string there a state character there I'm sorry so now let's refresh and we can see that that's just been enclosed in single quotation marks we can even then just add a colon just to make it look a bit nicer okay so we've established our little welcome or a little message telling everyone what we're doing now what we need to do is we need to actually read the directory so this is slightly different we're going to be using a while loop so let's come down a bit and we'll set up the skeleton for our while loop now inside here what we need to do is we first need to assign the variable file to reading the directory because what's going to happen is file is then going to exist forever every loop it's going to exist for each element or if each file in our directory