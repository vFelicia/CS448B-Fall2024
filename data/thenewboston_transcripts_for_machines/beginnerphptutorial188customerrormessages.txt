hi this is Alex from PHP academy' de org and this is another video for the new Boston now we've already looked at our custom server and database exceptions now what we're going to be looking about is coming into our extended classes here but taking some information and outputting some useful information so what we've done is we've created errors in route and a database so I've changed route to Alex and what that's done is if we refresh and we're saying could not connect a server and if we if we are changing a database and appending or one on we're saying Canucks select database now what I want to do is give them a more specific error so I want to say what line it's on and what file it is from so again this may be a useless example but you can understand then the concept of everything so what I'm going to do is I'm going to delete this and we are just going to echo out a custom error message depending on our server server exception and database exception I'm going to be changing these functions names names in a bit when we've redefined them so up here at the moment we've got nothing within our brackets but if I pull these down we can start to define custom functions inside or methods rather because obviously in objectoriented programming which is this is part of we are looking at methods we're calling the methods so what we can say is we can say public function we can say show a specific and again we're going to create a block inside this as well so here is going to be our error message so what this is going to do is it's going to echo out in fact it's going to return and what we want to return is the first of all the line number that we find the error on and then the file itself that we're actually in which is going to be index.php so we want to return this we use this it's not a defined variable that I've defined anywhere this just means this in general here this and we're going to say get line okay get line so we can make it look a bit more user friendly error on on line something so this line here and then we're going to say append on some more text in this get file so now what our error is going to read is error on line and we're appending on the line that this has been this error has been thrown on so error also thrown well to make it make a bit more sense so error thrown on line something in this file okay so let's just test that and then we'll create another one for the database exception as well so at the moment we if we refresh it looks like we're connected apps that you find so we need to change this remember here this currently says get message and that's a echoing out this message here so let's delete these and we'll create purposely create a server error we'll see what happens nothing oh yeah okay so it's because um we want this function show specific we want to take that from our exception that we're thrown so we're going to say show specific okay so now let's refresh okay so we are showing that an error has been thrown on line 21 in and then we echo the file name out so a custom error message where the exception has been thrown is successful so it reads error thrown in line something in so let's just double check everything I know the file name is fine because we can see that here we're working with index.php even though it wasn't previously shown with area so wherever thrown on line 21 let's go and have a look to see where the error has been thrown so the throw new server exception is on this line here and you can see that down here in the corner it's line 21 so we're successfully showing the right information so now what we can do is do the same thing for database exception we can create a public function show specific and we can do exactly the same thing so it can return error thrown on line and then we say this get line okay so remember this is a this.get line here and this get file here is a method within exception however because we're extending this we're actually putting it into use in our server exception which we've them which we've called ourselves or named ourselves rather so this get line and then we append on in and then we append on to that this get file okay so now that should do exactly the same thing let's return this to route so we don't don't throw an error for that I mean remember we need to change this to show specific okay so let's change our database information so we throw an error for this refresh and now it says oh we've missed out a little space there let's pop a space in there to make it neat so we've got error thrown on line 25 in the same file obviously so let's go to line 25 and check where the error has been thrown so the exception has been thrown mother it's this line here which is database exception so you've probably guessed that the line that is thrown er is 25 so you can see but that by extending our exception class we can create our own methods inside to use data from our exception class there's much more than this you go on the PHP manual you'll be able to find a lot more methods inside and properties you can take from from this exception class and put it into your own and then we've thrown our exceptions ourself using catch twice while we're throwing twice so that's how you're going to extend our exception out your exception class and how you're going to catch multiple upset exceptions with your own custom error message