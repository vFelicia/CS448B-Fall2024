hi this is Alex from PHP academy.org with a video tutorial for the New Boston in this video we're going to be taking a look at the has traversing uh function in jQuery and we're going to be searching a particular element for sub elements or children of that element and we're going to be using the unordered list as an example now I'm going to create an example that's more perhaps more relevant and we're going to use this in an if statement to check if a UL has any Li uh elements within it um and we're almost going to be creating it in the theme of a menu Builder so for example we're going to create a menu one and let's go ahead to our browser you can see that we've just got menu one there so we're going to be creating a menu one and the menu is going to be made up of UL and Li elements so for example we could have menu item one in here and that would produce something like this now let's go ahead and just go ahead uh let's just go ahead and style this uh quickly first of all uh so the uh UL is going to have padding of zero and margin of zero uh we'll just leave in the um well no it automatically gets rid of the uh the circle Graphics but there we go so we'll have uh a menu like this where we can go ahead and add more items so for example menu item two but what we want to happen is we want uh a default message to appear if if no liis exist within an unordered list so at the moment you just see nothing but I want a little message to uh appear under here that says uh there are no Lis and we searched this UL element for children uh elements of Li type so inside ext.js let's go ahead and just set up our document uh once it's ready so document. ready inside the function to be run when the document is ready uh now what we want to do is we want to use each to Loop through each Ur on the page because we might have say more than one menu uh so let's go ahead and use a selector and select uh ul and then we want to say do each so inside here we create we uh run a function for each LI or UL element on the page so for example we could say this do append a just as an example you can see that oh no a hasn't been appended so sorry that's this like this so uh you can see that a has been appended there if we go ahead and we create another menu so menu two you can see that a is again appended after here so let's just get rid of that for now we'll you know be showing an example a bit later so uh let's forget this line here what we want to do is for each uh UL element we want to uh first of all I'm going to create a variable called this selector um which is equal to this this just means that we don't have to keep using dollar sign and this and then what I want to do is create my if statement and my if statement is going to be or the condition is going to be if An Li element exists within um or if An Li element doesn't exist within some a u UL parent I want to go ahead and you know create the message empty menu so I say this selector dot has and this is where we're using has now and we can specify a particular um element in here like Li we can use also use a variety of other selectors so if you're using if you want to check has and want to check something like uh contains for example you can do uh just any selectors that are relevant to what you're doing will uh should work so we want to say uh do length which will return uh length and if that is equal to zero that means that An Li element doesn't exist within uh the current L that we're on That We're looping through so uh we're checking for Lis and if that equals zero we know that they don't so we can go ahead and say this cell. after empty menu so now what's going to happen is because we don't have any elements in here once we Loop through this uh UL we are checking if it has any Li we're returning the length which essentially will return um you know the length of how many it does have uh so for example if we had two it would would return a length of two um in this case we wouldn't run this line but if it did equal nothing which it does at the moment uh that is equal to nothing and therefore we uh return this line so when we refresh now you see that we've got empty menu now if we go ahead and actually create some Li elements in here so menu item one you can see that that will disappear and we'll have menu item one instead now I understand that this isn't really a you know relevant example in terms of actually um a website you might have because you'd be in control of the code however if you were creating some kind of plugin that required Li elements to be within a UL uh parent you might actually want to include has to make sure that you know your plugin is being structured properly on the front end uh so it's extremely useful in that sense uh I'll just go ahead and add another one to this and create another menu uh just so you can see so I'm going to create some empty UL tags there uh when I refresh we've got menu item one which has got uh menu one which has got menu item one and menu item two and menu two which is empty menu uh as soon as we then go ahead and add some more elements to this so Li Li menu item one you can see that that message again disappears so it's quite easy uh or useful for validation within like I said plugin building if you're making someone you know follow a specific structure uh on the front end with regards ards to the HTML you might want to use has to double check this uh and maybe feedback some information to the user based on uh what the front end contains so that's quite a useful way of using it uh but for now that's the has uh function in jQuery