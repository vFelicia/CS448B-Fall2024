what is going on guys it's Bucky and welcome to your second advanced udk tutorial now in this tutorial all I'm going to be doing is I'm going to be going through all of the collision properties that we need to know whenever we're placing k actors so with that being said it's not going to be the most exciting tutorial what I'm going to be doing is pretty much reading through the properties and telling you guys in simple terms what they mean so you know not really doing anything cool like blowing up any tanks or anything but whenever we're working with K actors and say your actor isn't working exactly how you wanted to i'm going to show you guys how to tweak the properties so might as well just suck it up go ahead and get started so the first thing that we want to do is we want to know how to access the properties so in case you forgot go ahead and select your k actor remember this is just a plain old static mesh this is AK actor that we can blow up and move around and go ahead and hit f4 now the first properties I want to talk about are the collision properties so go ahead and expand collision and collision component which is basically this object right here and expand collision again you think they could put in a few more tabs there now let me go ahead and talk you guys through this so this is pretty much the collision properties of your object in collision is pretty much what can bounce into it what can affect your object so I'll just read through them one by not one now the RB channel is basically every object you can pretty much give a family and whenever an object belongs to a family let's go ahead and take a look at some of these families like a default of gameplay physics a cloth you pretty much give it a family than other objects know how to interact with it for example you can tell your object only be affected by cloth and if this object was a cloth object then you know where's cloth right there then other objects would be affected by it so pretty much grouping it into a family can block camera well we didn't really talk about camera traces or camera movement yet but when we do this is the thing that allows it to block the camera camera block rigid body what this means is I probably should explain you guys what a rigid body is just think of a rigid body it's pretty much a solid object and I know if you were to tell you know the UDK professor this or some advanced udk easier you like well technically a rigid body is static machette the forms and yo but if it doesn't deform that it's not her you know what just think of a rigid body is a solid object and you'll be fine it's not the technical term it's not even proper but if you just think rigid body equals object trust me you'll be fine so block rigid body pretty much means block other objects block foot placement this has to do with animation don't worry about it in this RB collide this might be a better example you see how I was telling you up in RBC channel or RB channel you can give a family to belong to well this property right here says what other families should you collide with for example it doesn't collide with cloth or you know soft bodies or clothing so if we had a character who took off their socks and threw it at this statue and won't collide with it because it is not set to collide with cloth right there pretty cool huh so now let's go ahead and compress those and look at K actors so now i don't know why they you know had to separate all these properties look how many properties cheese Louise many ways the K actor is this thing itself so there are couple properties that we need to go over when talking about that so the very first thing is damaged applies impulse and what this means is our character can do damage a certain number of ways for example it can shoot this k actor with bullets it can you know maybe go up and punch it it can throw grenades at it what that damage allows us to do if we have this checkbox checked is turn that damage into a physical force so if we didn't have this checked then we could shoot it and nothing would happen but now that we have damaged applies impulse whenever we shoot it it turns that damage into a force and moves it around now wake on level start I don't even remember if I talk to you guys about this in last or above your k actor prism pretty much has two states awake and sleeping when it's awake it means it's physics are active it can move around bounce and stuff whenever it's asleep it's frozen it's just stuck there and the reason that they have this is because sometimes when you're making the game you want to be able to change the physics of something in the middle in the middle of your game for example you don't want a door to be able to move until you know press a trigger or something like that so then whenever you press that trigger you would wake it up and we would do that through coding which we're going to be covering later on now the limit max physics velocity what this is is pretty much saying give it a speed limit because we can have these objects move around our game as fast as we possibly want and whenever we check this we're basically saying all right give it a maximum speed that it can move and this thing right down here is basically your speed limit and if we have this check the speed limit of this would be 350 because sometimes we're going to be making a gaming we don't want our objects you know move around fast as light so you know just remember it's a statue so if you find that your objects are moving too fast just go ahead and give it a speed limit there so anyways that's how I'm going to cover right there but if you think we're done covering properties then haha hold your horses best because we have not even begun to cover all the properties go ahead and right click this and hit finding content browser and go ahead and doubleclick this right here and now I got to talk to you guys about all these properties as well I'm actually going to talk from this one to this run for since all these ones are something we're going to be covering later on but I'm going to be covering all the properties in the body set up real quick because like i said in the upcoming tutorials I'm probably just going to be whizzing through these k actors checking properties and I don't feel like explaining them all actually didn't even want to go through and explain all these properties but then you if I don't do it now then I'm never going to do and it's actually something that you guys really need to know so that's my excuse all right so let's start at the top and work our way down sleep family pretty much means you can give your objects different families in depending on what family they belong to they can sleep at different times we really don't worry about that one too much the bone name this has to deal with animation don't worry about that for now your understanding whenever I talk about animation fixed right here pretty much if you have this checked then it's going to turn your K actor into static mesh it's not going to move at all you're saying why the heck would I even put that at all why would I just place a static mesh well the reason they have this is because when you have complex 3d models you're going to want to sometimes you're going to want to have certain parts of them able to move in certain parts of them able to be still so you're going to have to go through each part and hit fix this is for like really indepth games for now just remember fixed basically turns it into a static mesh unmovable no collision pretty much means as you guys would guess um it won't collide with anything now here are two things that will probably come handy block zero extent in non zero extent this is some really weird language they gave you when working with K actors zero extent just think of it is like weapons like gunfire and stuff and nonzero sentence like geometric objects like oh I don't know just regular 3d models so whenever it blocks so just think of it like this block gunfire or weapons and block 3d models I I don't know why they named it that you guys should write the UDK and kind of complain about that because it's really confusing um enable continuous collision this pretty much means whenever you have really fast moving objects remember I told you that things can move like at the speed of light sometimes you're going to want to go ahead and check this whenever you have really fast moving objects in your game however if you just have a normal game with the character running around don't check that at all because there's a little performance issue your games might bog down if you have that check so generally if you're not working with like really fast objects and you really shouldn't be I'm just go ahead and leave that unchecked always full animate this pretty much it only affects skeletal mesh holes meshes so we're worried about that later on a lot of these these things will just worry about later on just don't mess with them consider for bounds you never really touches the physical material is of course the material that's applied to it the mass I think I talked about this the less massive your object is of course just like in real life but easier it is the kick around move around in the precast fishscale don't even worry about this um you know don't even mess with this that's my little tip for that so anyways now that I covered all the properties or at least all the important ones concerning a que actor now whenever you're making game in your k actor isn't working exactly how you want it to chances are it's one of those properties so I know this was a born a boring tutorial I apologize I kind of knew that in advance but now that we understand all the properties I can whizz through them whenever I'm working with k actors and I'm not going to have to explain each one every single time so with that being said thank you guys for watching and the next tour I promise will be much more exciting but like I said thank you for watching over you subscribe in oh yeah add me on Google+ link on my homepage and I will see you later