what's going on guys welcome to your 21st C++ tutorial and before I even get started with the story I just want to mention one thing that you guys probably notice already and that is I don't have return 0 at the end of my main and that is because I just found out that well let me say this in the old C++ ways you had to have that return 0 statement but now the new version or whatever whenever you don't include return 0 at the end of your main C++ just assumes you return 0 after the last statement so you know if you go ahead and type your program you can either put it if you're you know oldschool programmer or you cannot include it and it would just assume you have return 0 but for the rest of these stories I'm going to exclude it so you know don't forget that it isn't there so anyways let's go ahead and get to the heart of the story and that's assignment operators and increment operators now we already know well let's go ahead and get a variable first set X equal to 10 looks good so we already know we can do something like this X plus equals 10 and this is basically the same as writing x equals x plus 10 so then whenever we let me just go ahead and this line and print it out we go ahead and we get 20 just like that so what it does is it takes to this value adds it to X and sets equal to the new X variable so I already told you guys plus equals is a shortcut I also want to go over all of them so when you see them in program you don't get confused X well let's change this to 5 it's weird if they're the same number so X minus equal 5 equals 10 minus 5 and assigns that to the new value of x so let's go ahead and see that that is 5 now if we go ahead and see multiplies equals what this would do is do 10 times 5 and set it equal to 50 and the last one without getting in the weird stuff is divide equals 5 and this of course is 2 so what this does is basically takes the old value of x it divides it by this value and sets it equal to the new value of x so aside from that there's one more and I rarely use it this way I hate writing in like this and I hate seeing other people rate it like this because it's confusing this is going to be a bad example because ten divided by five is two with no remainder so it will be zero but if we go ahead and throw like three something like this what this does is it takes the old value of X divides it by three and it stores the remainder in one so now X is going to be equal to one right like that so those are all your assignment operators plus minus multiply divide and modulus which is remainder so now whenever you come across them in programming you'll understand what they mean so now what I want to talk to you guys about is those increment operators so let's go ahead and get new value 20 that's a little bit better it's my favorite number so you know how I told you guys that you could do something like this X plus plus and this was the same thing as adding one to X simple enough right not exactly because there are two different versions of this increment operator and I'm going to show you the difference with little differences between both so let's go ahead and see out X n line let's go ahead and run this and take a look at what happens so our initial value of X was equal to 20 and then we ran this line of code and it printed 20 all right and then we ran this line and it was equal to 21 well what the increment operator is doing whenever you write variable with plus plus after it it's going to go ahead and run this line of code and then it's going to add 1 to that variable so runs this line of code X is still 20 then when it gets done running it assigns 21 to X and then it runs this one so that's why it was 20 21 so saying are a simple enough what's the other version the other version is this whenever the increment operator is before the variable like plus plus X instead of X plus plus what happens is you can see whenever you run the program it goes 21 21 so what this does before the variable is it adds one first and then it runs the statement so adds one right here and then runs it so right here the value of X is getting set to 21 and then run it 21 still 21 21 so it's basically if your pluses are before the X it's going to add one before it runs it if your pluses are after the X it's going to run the line of code and then add one to the variable so it you know if you're building a program in you're off by one you know maybe you're running a loop or something and you're always off by one chances are your pluses are on the wrong side either this side or that side so this is a common error and it's actually something that people have a hard concept understanding but just remember where you add your pluses indicate when it's going to add one before or after the statement and if you remember like that it'll be simple enough so now you understand that you don't need a return zero you understand all these scuse me ooh assignment operators that's actually kind of a tonguetwister assignment operators assignment operators just hyman operators got it and now you understand increment operators which is plus plus X and X plus plus oh and one other thing there's also minus minus X and what this does of course is subtracts it and X minus minus but I don't need to show you guys that so just remember those four different increment operators all those assignment operators and you don't need a return zero anymore and you'll be good to go so thank you guys for watching my twenty first tutorial no idea what I'm going to cover in the next tutorial but it's going to be sweet so thank you guys again and I will see you guys later