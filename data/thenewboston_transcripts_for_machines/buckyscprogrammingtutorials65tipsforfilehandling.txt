alright guys welcome to 65th C++ tutorial and in this lesson I'm just gonna be giving you guys a couple of tips when working with files and this is you know something that can save you time as well as some good programming practice so it's gonna save you a lot of headaches in the future so let me go ahead and get started so in the last tutorial I told you guys that in order to work with files you first need to do two things you need to create a file object and then you need to associate that object with a file itself on the computer so let's go ahead and instead of doing that in two lines of code let me show you guys how to do it in one line of code so of course you need your of' stream because that's what object we're gonna be making in order to work with files and then you give your object a name like buckey's file and then you might be thinking alright just go ahead put a semicolon go the next line of code put bucky's file you know open the file you want to work with but there's the easier way to associate this object with a file now whenever you create a file object it takes an optional parameter in the constructor actually the entire constructor is optional but if you want you can go ahead and do this all in one line of code by associating a file by passing into the constructor and then whenever you create your object it's gonna associate that file with this object so for example let's go ahead and make a file name beef jerky dot txt and now instead of creating your object on one line of code and then associating the file with this object on another line of code we can just go ahead and pass the file name into the constructor and now this file is associated with this object so it's probably better to get used to this syntax unless you're making a program where you don't know what file is going to be associated with this object whenever you're running it so usually I like to do it this way just because the savings in line of code and again this constructor is optional but trust me it's gonna save you a whole bunch of time in the future so now you can do things like Bucky's file and then just go ahead and output something stupid like I love the beef and it says oh I love the beef but you know good enough and then go ahead and might as well add a new line and and then you get my cursor out of the way and then of course it's good program practice to have Bucky's file about close to free up any of our computer's resources so let's go ahead and actually watch this file get made so I'm gonna go ahead and press run and oh man and close it out but anyways you can see now that we have a beef jerky txt file so let's go ahead and click that and it says ooh I love beef and i do love beef jerky can't lie about that so let's go ahead and before I let you guys go I want to tell you guys one more thing a function that you're gonna be seeing a lot if you're working with the team of developers or you know if your teacher gave you a assignment working on the files is some function called is open now is open is a function that you can use on a file object and it's going to return true if the object is currently associated with a file and this is a way that you can check basically if a file is open and you know it's ready to be worked with so in order to do this go ahead and write if and then you do this write your file object which is in this case a buckey's file and then write your function right after it is underscore open now this isn't gonna take any parameters and just go ahead and write something if the file is open then we'll just output on the screen like uhm okay the file is open good enough and then might as well go ahead and in that line and we'll say else if the file is not open then let's just go ahead and output like Bucky you messed up and will spell everything wrong and looks good go so go ahead and in that line so now what's gonna happen is this alright we coded this line correctly and it did indeed open this beef jerky text file so whenever we check if the file is open this this is open really isn't a good name it really should be like if object is associated with a file that might be a better name for this but you know that would be a lot a lot of text so what this design is gonna do is it's gonna check if this object is associated with a file if it is which it is it's gonna output okay the file is open if it's not and we did something around it's gonna say Bucky you messed up so let's go ahead and run this and indeed we get okay the file is open sir saying all right so when would be the case scenario when the file wouldn't open well for example if you go ahead and you made you know your file object correctly but you forgot to associate it with a file right here then whenever we try to run it it's gonna say hold on Bucky you messed up you forgot to associate your object with a file so that is case scenario where we would want to check if the file is open or not and basically in programming well in the real world how it works is this you make sure it's open first and then you write all your code right here so it's a nice little check before you know you just start writing code like this this is probably would be better if we threw it inside here you know so if you wanna you know impress your boss or your teacher just make sure your files are open before you start doing a bunch of crap to him or else you know it's gonna save you a lot of headaches so with that being said and this is where I just want to stress you guys that there is indeed an optional constructor where you can associate a file with the object instead of putting on of codes and also what you can do is it's a better programming practice to make sure your file is open and by that I mean make sure your file is associated with the object before you start doing a whole bunch of crap to it it uh it's gonna save you some time and save your computer a whole lot of headaches so with that being said that's all I have for you guys for this oriole so thank you guys for watching I don't forget subscribing if you have any questions so check out my forum the new boston.com slash forum and yeah I'll see you there so thank you guys and I'll see you next video