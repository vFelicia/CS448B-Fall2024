what is going on guys it's Bucky and welcome to your 24th tutorial in C++ and in this story we're going to be covering the dowhile loop but you guys probably already knew that because I got a feeling that the title is right above this video and you know what else I do a lot I tell you guys this is probably going to be a short video and I just realized that the time is right under the video so I don't know why I say those things but it's habit I'm going to continue to say those things so get over it so anyways we're going to be covering the dowhile loop in this tutorial and if you remember from I don't know however many tutorials those go I talked to you guys about the while loop and the while loop was basically a loop that you had a test and if that test was true then you ran a bit of code inside while the dowhile loop is basically the while loop flipped upside down what the do while loop does is it runs the bit of code first and then it runs the test so let's go ahead and let me show it to you guys and you guys will understand better one means let's go ahead and get a counting variable called X and set it equal to one this is our starting point now the syntax for dowhile loop is do and then you go ahead and add some code in the body so let's just go ahead and print out X and then after this we need to increment X or else the loop is going to run forever so X plus plus and now after the body immediately after it you write while and then after this you have your test ended with a semicolon a lot of people forget that semicolon because then basic while loop there is no semicolon if it's not in the body so don't forget to put this in my Coleman right here so let's give a simple test like X is less than 10 now go ahead and run this and check it out just like the wild loop it ran the same bit of code print it out X on the screen from 1 all the way to 9 pretty cool huh so we're saying all right a couple of things are kind of weird here first of all why is this loop even useful because it seems like a bad while loop because isn't the point of a loop to run the test first and if the test is true then run a bit of code but if it's false then don't run the bit of code well people use do loop mainly for this reason whenever you have code in here and you need it to run at least one time it's guaranteed to run at least at one time and the reason is this say you have a test that is false like 99 well this test is going to come false as soon as it hits it 99 is not less than 10 99 is a whole lot bigger than 10 so whenever you run this is just going to print out 99 so as you can see it ensures that you run your code at least one time before testing it at all so no matter what this value is it's going to do it one time and then test it so whenever you want to run your code guarantee that it runs at least one time this is what you do so that's the main reason that people use a dowhile loop to ensure their code runs at least one time again if you have a basic program and you just want to loop it normally your best bet is to run the while loop or the for loop because those are your basic loops where you test it and then depending on the test you run your program so again this is basically a weird a kind of loop this is probably the most uncock Loup but whenever you come across it I wanted you guys to pick up on it understand what it's doing and why some people prefer it over the wall loop so now that you have knowledge of the dowhile loop and you guys know that it's really not that common in programming so you don't want to use it that often you at least know what it does and how I was going to say how it worked well yeah that makes sense and how it works so anyways that's all I have to cover for the dowhile loop pretty simple basically a while loop flipped upside down so thank you guys for watching don't forget to subscribe and yep I'll see you in the next video