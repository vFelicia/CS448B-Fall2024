what's up everybody this is jesse from cleverprogrammer and we are going to be building today the coinbase app with react native all right so let me show you what we're going to be building it's this app and tanner tell me a little bit about what um this app contains with technologies yeah so uh first off everybody uh i know that i'm new so i just joined clever programmer my name is tanner uh today we're gonna be bringing you this coinbase clone uh so as you guys can see we're on the splash page you can either sign in or or uh sign up so jesse if you go ahead and hit the sign up button we can walk these people through our app here i'm gonna sign in sign in oh and then which email should i use my own email yeah so you should be able to use the email that you signed up with earlier and we're gonna be using firebase authentication guys so this is going to be able to connect with firebase get us logged in and we're going to be using redux to be able to keep our users logged into the app um and as you guys will see later once we kind of refresh the app it's going to keep us locked in and we're going to go right back into the home page here so she just pulled up we're in the home page um it shows all of our you know wish list for the cryptos that we want to see it shows the latest news about all the latest crypto um and it even has like a learning section too uh so jesse if you want to click into bitcoin real quick up in the uh wish oh this looks so amazing doesn't it guys put in the comment below if you think this app looks amazing okay so let's look here i'm gonna press the watch list the bitcoin hey let's go oh my god this is amazing so is this graph like real time here sorry is this like real time right yeah so we're gonna have uh live data feeded through into this chart we're gonna have um you know all of the information about the different bitcoins that we can click into so right now we have bitcoin and we have another one and we can add you know as many as we want to the app as well so you guys are gonna see where we get the data how we pass it through how we use uh redux to keep our users logged in we're gonna be using styled components to make everything look the way that it does make it look nice uh so yeah i think that's about it right so we can go ahead and start jumping into this build oh that's cool that's cool so tanner if i want to start up making a react native app what is something i start off with right so guys first thing that we're going to need to do to start with react native is we're going to have to install the expo cli so when it comes to react native we have two options we have our default react native but what we're going to use today is expo because it allows us to build one code base that's going to convert to both ios and android so it makes it really really easy okay so what is the command that i need to use npm yeah so go ahead and say uh npm install expo dash cli oh i might have to do a pseudo to be honest so sudo npm install and then uh expo cli expo so guys this is gonna give us access to the expo command which is going to basically allow us to uh create the entire project much like using uh create react app right and if you guys know anything about react this is going to be very very similar so if you've watched the other builds uh react native is you know almost the same as using react but you guys are gonna see kind of how we replace certain components to make it so that it actually converts to what we want it to be on the actual mobile app okay um cool so after we go ahead and let the expo cli install the next thing that we're gonna have to do is say expo init and again that's going to be the same thing as using uh create react app so that's going to basically set up everything for us yeah in order to do an expo in it would i need to make a empty repository in my on my desktop for example or let me see okay i could do it here so let's go ahead and create a project folder right folder and then you guys could call it coinbase uh react native youtube okay and that that one guys the other one you're gonna be opening that one up in the visual studio code that's what we're going to be using okay so new window here okay so new window and i'm going to open that one up here and it's the coinbase this one or yeah we could open this one up here and actually we need to wait for this to happen so oh let's go it is done ocli got installed yes so what i got to do now is going to into that empty project here so we're going to say and then you can say dot and this is going to create the uh project right there in that current directory that you're in right so as soon as you guys create an empty project directory just say expo init and then dot and that's gonna say create our app in our current directory right so i'm gonna go into that one youtube okay and then here i hope you guys can see it i'm going to do expo init and that's going to create the expo project oh i have to do expo init period i think expo init dot okay yes awesome all right and then i'm gonna be choosing the blank project right this one so guys you can choose between all of these options here but choose the blank one the top one okay so enter so some of those options will require you to know typescript some of them do give you like a navigation bar and some other uh templated stuff which is pretty cool um but yeah the one that we want to start with with uh today is gonna be the blank one and so we're gonna have a very minimal uh setup so again if you've watched a lot of the other react clones uh typically we have to kind of clean up whatever react uh create react app gives us uh so there's a bunch of test files a bunch of stuff that we don't really ever really need to use um and we usually just go ahead and delete those with uh the react native app that we just built out we don't really have to do anything we just need to go ahead and get started so once that builds out uh jesse will be able to show us how we can actually launch that into a simulator uh live on our computer and kind of test out the app itself oh i love the simulator i mean it's so cool you know you see that mobile and you can see how things work we're going to be showing you guys that in a moment okay oh let's go it is done so as you can see it says here right to run your project run one of the following npm commands so we're gonna be doing npm run ios but before we do that let's look into the code that you got when you have um installed everything okay when you were finished with that installment and that's this that's this guy so here view text status bar now i'm going to be opening up that project again um let's oh sorry about that this one okay and here i'm gonna make this a little bit bigger for you guys npm run ios just like i said before so guys to be able to use these emulators if you're on windows you'll have to install android studio or whenever she launches this you can see that um that qr code right there you can scan that on your phone with the expo app that you can install on your phone and pretty much just test out the live uh app on your actual physical phone uh beyond that you can install uh android uh studio um but there's quite a hefty install with that to kind of get the android emulator and then otherwise if you're on mac you can use uh xcode and just uh easily use the ios emulator as well yeah you know routes are going to be ios or your actual phone no i'm just thinking about the joke you said the other day you know when people use android studio their laptop heats up and he's up so much that you know people could make an ag on it you know so i think it's really funny um so guys now that that's done it should where's my emulator it should start yummy oh wait so here guys on this icon press it and boom there it is we have the emulator so let's put that here next to the code okay in this screen so let me flip and then we can see how this shows when we are building things okay so there we go and oh look tanner already changed the text and now it's visible here on the left side awesome so what's the first thing our react servers guys every time we make a change we can see it live on the app again if you open this on your physical device you'll see it pop up on your actual phone the live action that you make it's really really cool that's so cool that's so cool so tanner what is the first thing that we're going to be building out where are we going to start so the first thing that we need to do is go ahead and build out uh the splash screen which is going to take us right into the login screen so let's see here so first thing we want to do we can go ahead and just replace this view right here we're going to replace it with our welcome component we don't have the welcome component yet guys so we're going to have to go ahead and build that out so if we go ahead and try to save it we're going to get a bunch of errors and react native is not shy to give you a lot of a lot of errors don't worry about it don't don't get afraid of errors you're going to see it all the time in react native so we're going to make a folder i think called screens and then with a file called index is that correct exactly exactly so uh right that's the first thing we need to do so we have our uh welcome component here and then we have our welcome component being brought in as you guys can see we're going to bring it in from a screens folder so let's go ahead and start building out this directory that we're going to use so first thing we're going to need is a screens directory and the next thing is going to be pretty familiar to you guys we're going to need a components directory um and then we can go ahead and just already add the resources directory as well so in react native it's pretty standard that we're gonna have actual screens and then components aside from that right so we're going to bring in the com little extra components into our screens now in react native we have to build out a navigator and it's basically going to be a stack of these screens so that's why we have to build it out the way that we do so the next thing we want to do is go ahead into our screens folder here let's go ahead and create an index file oh sorry about it okay cool all right um and in our index file we're going to need to basically just uh export the welcome screen that we're going to use so we're going to say export everything from uh welcome index right so we're gonna have another folder inside of here inside of our screens we're gonna have another folder and this is gonna be our welcome folder and then in that folder we're going to put another index file so you guys can probably tell already we're going to actually separate all of our screens into their own separate folders eventually we'll have a home folder a login folder everything that we need in this screens folder right here and our initial index file inside of our screens is where we're going to export each one of those screens themselves all right so let's head back into the welcome index file and guys just like in react we can use very little shorthands so we can say rnf and this is going to create a react native function based component so if i hit enter on that boom it fills it out for us we're saying export default function and the first thing that you guys should notice is that we're not using divs and we have to use a text box to actually get text to our screen the reason being again in react native it's trying to basically build out all of these components to work for both ios and android so we have to be very specific and use specific types of components that are pretty much provided for us that kind of allow us to build up these things if we use a regular div like we would in react it's just not going to work for us okay guys so just to make sure that this works we can go ahead and just say coinbase in here and save that so if we i think you might have to refresh the simulator so how do i do that how would i refresh it oh um one thing you could do is just go ahead and close it off in the terminal and then just rerun it with npm run ios and then put dash c so that we're clearing the cache when we run it right so npm run ios dash c like this is that usually what needs to be done in react native or so a lot of the times uh and right now it's really not that important of a step um but once we start using redux to have that logged in state we're gonna have to pretty much always clear the cache to clear their logged in state um until we at least put in like a log out button or something right right right so i refreshed it everything works again um looks like we're still getting an error so let's look back into our app here all right so we have welcome from screens index so let's look in here we have thank you or maybe maybe you need a folder welcome steady it's because right here i forgot to name this uh the right way so i think we need to name this welcome and uh in just a minute guys we're gonna have to take in some props because we're gonna have to build out the navigator but for now let's just try to make sure that this welcome screen works are you by the way i don't see you typing tanner are you in my screen are you sure are we on the live share yeah it should be um it should be in the screens welcome index all right right right right right yeah so all i did guys was change the name of the function instead of export default function index we changed it to welcome um and at this point if we refresh our uh simulator then we should get an update like this so i also changed here in app.js we first had only screens but now i changed it to okay i'm gonna put on simulator again here i put welcome here because of the folder here okay so this should be this should work now yeah so screens welcome index yeah that should should be working um here try closing out the emulator before you restart it okay so i'm closing it out and i'm restarting it here and if you're on your physical device there's actually gonna be a notification uh on your phone where it has a refresh button and that'll actually reset that for you okay so it's starting it up here it says starting metro bundler okay okay and now it should get opening okay open up the iphone that's where you can see it and we closed it just now so let's bring it here next to our code it's opening up now expo all right hmm it's a sale component exception component exception by the way it also says log23 component exception element type is invalid expected a string so which page in page um render application.js in line 54 so what is this logo one warning react create element type is envelope expecting a string hmm do we okay okay yeah i think i know what's happening okay what do you think is happening so first okay actually that looks good so i'm gonna go ahead and just delete this and okay nope hmm okay guys so let's try something really quick so if you're debugging like this tenor what is something what's the first step you're going to be looking at uh the first thing that i'm going to try to do is just put everything into a view kind of just like in uh regular react when we try to make sure that everything's like in a fragment or something so um but that didn't seem to help so um yeah i can't see the error message too clearly uh what does this say so it says component exception element type is invalid expecting a string for building components or a class function for composite components but gut undefined you likely forget to export your component from the file it is defined in and or you might have mixed up default and named imports so this welcome here something is not going correct with the export maybe so here index export default function should it be something with this i think i know what it is okay great all right guys so in our welcome folder let's go ahead and create a new folder i mean a new file we're going to say welcome yes all right so this is where i'm gonna want to put my actual component so let's move that into our welcome.js file okay i'm gonna open that one up here yeah yeah all right and then in the index file we actually want to say import welcome from uh let's see i might have actually forgotten a step so let's create a pages folder inside of welcome and move our welcome dot js into the pages okay welcome to gs we're going to move that to the folder pages and then i'm going to open it up here yeah so as you guys can see we have kind of like layers of uh index files as we kind of go further into the screens so we have a folder for our welcome in that folder we have pages so we're having pages out of each screen uh so it's you know layers upon layers that's how we create our apps so let's hop back into the index.js within the welcome folder jesse excuse me the what did you say uh index.js inside of pages okay welcome pages index.js and we're going to say import welcome from pages forward slash welcome all right so we're going to look into this folder grab our pages component import it into here so that our overall index right here is going to grab it from this index so basically we're kind of passing it up through all of the layers of folders and this overall index right here this one's sitting inside of the screen so basically what that's going to do is grab all of the different pages that we create right so we're going to have our you know paint our login page all of these are going to be exported from this overall index page sitting inside of the screens folder so at this point if we save everything good be able to refresh our app and get the results that we want so i have to do this right by the way i could also do i could also open up the terminal here in the visual studio code right so but so starting metro bundler pressing this one again here okay so now everything got refreshed here this one is like this so that's good now it says import welcome from so now it's complaining about this import here okay so what does it say it says none of these files exist screen slash welcome slash pages so we're sitting inside of welcome we should be able to look into pages and find welcome all right guys so again right when we're working on react native we're going to see a lot of errors so it's pretty much just kind of reading through the message that it gives us and trying to figure out what exactly might be going wrong and we have kind of already you know a huge kind of we're going into folder upon folder upon folder so we got to make sure that everything's pointing correctly so let's hop back into welcome.js uh jesse yeah in pages okay all right so let's just make sure that this looks clean i think it looks clean we have a proper component here we're saying export default function capitalized welcome so let's hop back up to the next index file okay this one how come if we maybe i missed this but how come we have two index files yeah so pretty much uh you know we're kind of going up this ladder right now so we started with welcome.js then we're going into this next index and then the next step would be kind of going up one level to that other index okay and so pretty much what's happening is you know we're creating all of these very separate pages within these very separate uh screens and so we're having to pass it up through the folders to get to this overall index file that's going to export all of the screens okay great so i did realize though inside of this secondary index i think the one that we're in right now we need to explore so guys there's no point in really uh creating our components if we're not exporting them so we're going to be exporting okay trial and error trial and error so now we should be able to refresh the app and hopefully this time it'll work okay so let's see npm run ios dash see okay it's starting up this looks good starting metro bundler okay we can click on here this one is good i would try closing out the iphone again and then reopening it oh this one click on then open it get it open it again does it only open when when you when you restart it like this i guess so because i just closed it but we have to open it up again yeah so once you close the simulator you'll have to rewrite all right okay let's go come on come on come on oh there we go opening up expo this is the address of the expo okay guys and this is an iphone 8 model you can also use uh iphone 12 or all kinds of models okay so let's go it's opening up the project and that's it so what does this actually mean because what confuses me is like we're importing welcome but now we're exporting it so what does that mean tanner yeah so pretty much that index page that you're in right now is really just kind of like a middle man to actually pass it up to the next index page so what we want to do is just have a general overall index page and we'll see it come together in just a minute okay um but this general overall uh index page is going to allow us to basically say hey grab whatever from pages so that we don't have to keep diving into folders and saying all right grab it from pages welcome ah right so this is like a like a general layer inside of the app basically inside of our app like we're using that second index uh the js file like a um like a general layer okay um now i think there are no errors now so let's continue yeah so we're good and you should i can't see it too well but you should be able to see coinbase sitting up in the actual notification bar up there any notification yeah it's actually here on the left it's actually mixed up with the wifi signal it's not big indeed but unfortunately guys i cannot zoom in on this iphone here so let's continue okay we got it here the coinbase awesome so let's head back to app.js and actually no sorry we're gonna go back into welcome.js yeah so this text so there's a couple things we need to do inside of this file here um so this is gonna be our splash screen so to get that text outside of that status bar we need to use what is called safe area now this is one of the examples of a component that only applies to ios and this is something that you kind of see a lot in react native where certain types of components either act differently or only apply to one of the two os's now as you guys see we have an error because i did not import it so let's try okay let's we're gonna have to up here where we say view and text from react native we're all gonna also say safe area view so this one only applies to ios but as you guys see the coinbase text is now no longer overlaying with that uh status area oh why is that oh that is what it's meant for oh this is real oh that's sick that's dope so this tape area basically wraps your code and says you know don't touch uh you know this top area this status bar area and if you're on an iphone 12 you have that knot right so we don't want to go past that notch so that's what safe area allows us to do is kind of stay within a safe area now again that one's only for ios um there are some things that only only work on android only work on ios or are done completely differently if we wanted like to add a box shadow to something in android we would say elevate in ios we would say you know shadow this shadow that you have to do like four different things to actually get it to work so there's a lot of differences here that's cool that's cool okay all right so the next thing the next thing we want to do uh here in the welcome screen before we move on is first we want to bring in some props and we're not going to see this come into play quite yet but once we build out our navigator we're going to have a automatic prop applied to any screen we include on our navigation stack so we're going to take in some props and we're going to first unpack our navigation we're going to use some destructoring here unpack navigation from props and this is going to be automatic guys we're never going to see us manually pass this into welcome it happens behind the scenes by our root navigation tool so we'll see that in a moment next thing is we're going to create a custom hook and this is going to be for setting buttons visible or not so as you guys you know can tell when we load up an app we have a splash screen it takes a few seconds and then our login screen appears so that's kind of the effect that we want to get here so we're going to say visible set visible so this is going to be our custom hook and we're going to say use state so let's import that so we'll comma it in up here yeah so where we say import react from react you state yeah and we're also going to need to use effect okay there we go so we're gonna say use date and we're gonna say false because we don't want it to show up originally but after a certain amount of time is when we're going to set it visible so the next thing we want to do yeah by the way can you speak up a little bit like in your volume with your mic is that possible or maybe you talk closer to the mic yeah is that better i guess so yeah i hope so yeah i'll pick up the game just a little bit how's that yeah i hope so yep awesome cool so next thing we want to do is add this use effect so let's clean this up a bit we don't need everything in here we don't need a variable that's going to change our use effect we also don't need a return and we're going to change the effect as well so let's get rid of that all right so what we're going to do in the use effect is we're going to set a timeout and in this timeout we're going to have our uh callback function that we're going to build out inside of it and once our time is up we're going to set visible to true so what is this timeout used for like what do we want to what what are we trying to set visible or not yeah so we won't see it right now but in just a moment we're actually going to add some buttons down here uh and they're going to be in an area where we're basically going to say you know if visible right so we're gonna have this kind of conditional rendering yeah and then we're gonna you know have some buttons um and this is gonna allow us to log in sign up whatever we want to do right so the initial kind of effect that we want is to say okay we have our splash screen with no buttons you know it takes a couple seconds we're loading in the app and then we show the button right so it takes about two seconds because that's what it happens here right you give it two thousand so awesome yeah cool cool cool and then i just added this text right here to say clone now guys we have to make sure we have these text boxes if we just say you know like we would sometimes i mean it's not good practice but you know in basic web development or using react we could just say clone or whatever we want to say as text it's going to throw all kinds of errors where we do it that way and react native uh let me go back there we go cool all right so this is gonna be our splash screen next thing that we want to do jesse is we want to style it out uh we're gonna head back into the resources folder and we're gonna start creating uh some styles resources so let's see actually if you want to go ahead and uh kill the server real quick yeah oh and guys when when we're in react uh native we actually have to kill the server every time we want to install something new i don't know about you guys but when i'm working in react i never really kill the server i just npm install whatever i want to install uh in react native it almost never works you usually have to kill the server first so jesse if you want to go ahead and say npm install we want to install react native responsive fonts oh so wait so i'm going to go to oh so i'm going to go to our project and excuse me what did you say npm what yeah so say npm i mpmi and it's going to be react react dash oh excuse me react dash react dash native dash native dash responsive dash font size all one word oh font size like this yes great and that's it i gotta execute this now yep okay go ahead we're gonna install it and guys what this package does react native responsive font size is it gives us two main functions that we can use the one that we're going to use um will allow us to calculate a font size based off of uh the basically the screen height right so obviously everyone has a different type of phone we have 80 000 screen sizes when it comes to phones so to basically say that we only want one font size would be kind of uh an error in the developers part right so this package basically allows us to you know uh calculate that font size based off of screen height so right now we can barely see the text that's on that phone but once we install this it's going to be a little bit easier to read um are you sure this is the this is the package because i got an error it wasn't the right pack i couldn't find that package now put it in your uh chat as well if you want to copy from there in the skype chat wait i can't open that one now let me see okay here i think it's here aha here i think oh yeah it needed another dash at the end before font size actually okay oh yeah yeah so no yeah that's okay so guys so it's empty so you don't have to do sudo i don't think that was a previous thing i had before but npm i react dash native dash responsive dash font size okay now this looks better yeah okay so while we let that install if you want to head back over to our resources folder um i just added a file so we're gonna have a file in there called colors.js great now this is another pretty standard thing for react native you're typically going to have a separate file somewhere that's going to store all of your apps colors that you can use across the entire app so guys we're going to say export default and we're gonna just say colors now typically when we see export default it's usually like a function based component or something uh for us oh look it's just gonna be an object i found out how to make this bigger let's go okay oh okay here we go hey hey all righty nice colors all right so the first one we want is gonna be white it's pretty standard uh so we can just say f f all right next thing guys we're going to say primary blue this is going to be our coin base blue oh that's royal blue yeah we're going to say oh oh so this is the colors that we have so far we'll add a little bit later um let's hop back into our uh welcome no yes our welcome js page oh this one here yes and actually right click well actually i'll do it uh we're gonna add a style dot js file to our welcome folder so not the pages but the welcome uh so we're gonna say style.js if you can click into that yep here yes all right guys so in this one we're going to start using a style sheet so we're going to start creating our styled components oh we're going to say import style sheet from react native and this allows us to kind of just build javascript objects that will apply our you know more or less css to our components um and this is another really standard thing for react native because you're not going to use css pages uh the next thing we want is rf value and this is the function that we're going to use from that uh react native react native uh responsive fossils right so that thing that we just installed we're gonna use rf value now this is the one that will calculate based off of screen height i think there's another function in this uh package but i don't remember its name so all right so then we're going to say import colors from wherever we just created colors so we're going to go all the way back up and go ahead and grab that resources folder and then grab colors there we go oh cool next thing that we want to do is go ahead and say export default style sheet now guys you've seen this at the bottom of react clones we're going to do it in its own file and then just bring this file into our welcome page to import all of these styles okay so let's first create our container there we go all right so we're going to say flex equals one uh and this is pretty much just gonna say that our splash page is gonna take up the entire page and we're gonna set that background color to colors so we're gonna look into that object we just imported and go find primary blue oh so this is super handy actually basically to have a template of colors for your whole app so this is also this is just something you gonna be able to do yeah this is also something you use for example if you want to have a light and dark team in your app yes sick yeah i love that i love that let's go come on come on yes so yeah typically guys you know sometimes we'll have this colors folder and it's actually going to have some stuff at the top that's gonna you know it's gonna use some react native features that will determine if your app or your phone is in dark mode and it'll change all of the uh colors so it's really really cool um so then we're gonna have our main view we're gonna say flex one again we're gonna say align items we're gonna say center and then justify content center oh this is going to be pretty standard for any splash screen uh right we just want the logo or the text to be dead center of the page with whatever kind of uh themed color background that we have so then we want to create our text style as well and we're going to say color and guys this is pretty much these are pretty much css objects but in a javascript type format uh which allows us to style everything in react native right because we can't really use css pages in here by the way tenor it seems like your sound is getting softer or somehow maybe sorry guys is that better um no it has to be a little bit louder i think to be honest okay a little bit louder or maybe can you go come closer to the mic is that possible because i'm really loud i think yeah okay i just turned up the game again a little bit is that better it's still a little bit soft i don't know how to fix it maybe talk a little bit louder i don't know yeah just uh i'll just have to talk a little bit louder okay is that better let's just keep going okay all right guys so now we've created our text style as well we're gonna say colors and set that one to white we're going to make it bold and we're going to set the font size to rf value of 35 so again this is that function that's basically going to calculate our font based off of screen size so all right let's save that file let's head back into the welcome.js file jesse sorry yeah this file which well welcome.js welcome to js yes all right and then uh we're gonna start styling or we're gonna start adding the style so first thing that we need to do is go ahead and import it up here at the top we're gonna say import style from and we're going to go up one folder and import our style there we go alright so our safe view we're going to make this our container so we're going to say io equals style.container all right because again guys this is an object right this entire thing is just an object and we're accessing all of the objects within our object so it's just objects so we're going to say style and look into the style object and grab our container object all right and then our view this one's going to be style equals uh style dot main view all right wow this is cool this makes sense though it's so clean too you know oh yeah and then we're gonna oh what's that the heck i don't know what just happened um and then we're gonna assign this style equal style text style to both of our text pieces there we go whoa and that's about it so i don't think the app is running right now if you want to rerun it yes let's do it i'm so curious on how it looks now already so whoop i'm gonna go here i'm gonna stop the server okay and i'm gonna refresh the page page okay so yes awesome so i'm gonna open up the emulator again it's starting up right now and oh oh i think we have a primary background color i'm gonna make this bigger again guys and it's blue and everything is centered how cool looks this guys oh my god so clean dude so this is our splash screen guys next thing that we want to do is create those buttons uh that are gonna show up after you know a couple seconds so we're gonna have this initial splash screen it's gonna wait a little bit we're gonna be loading up the app and then we're gonna have some uh buttons kind of just come in at the bottom which are gonna allow us to access the login and sign up pages so um we're gonna have to create some button components and i want to explain in just a little bit uh why we're going to do it the way that we're doing it so first thing we want to do is go into our components folder we're going to create a new folder this one's going to be button right and then inside a button we're going to create button.js so new file button.js yes all right guys so once again we can say uh rnf react native functional component wow yeah there we go pretty clean there i love it so we're going to take some props and these props are going to allow us to kind of have different buttons across our entire page now the reason that we're creating a custom button component the way that we're doing it uh rather than just you know importing button from react native is because if you use button from react native it's going to be very very plain and very very default and only controlled by android or ios we have no control over the way that they look when we do it that way so we're creating custom button components so the way that we're gonna do it is called or is a component called touchable opacity right now this is going to be a a type of object or a type of element that react uh native supplies to us that allows us to have full control over the way that it looks the way that it appears but it's also going to have touchable feedback right so when we click on it it's going to have automatic opacity applied and as you guys will see in just a second i can actually just tell it how active we want it to be right so we have to say um active opacity equals we're going to pass in 0.5 so it's going to go halfway uh opaque opaque what is that word right yeah so no i think it's correct it's going to be 0.5 opacity period there we go um so right when we click on it it's going to get a little bit opacity and we're going to be able to style this out however we want so we're going to have different buttons across this entire app we have blue buttons white buttons all these different buttons uh we don't want the default you know android material ui whatever and we don't want the default ios because then we have no control over the way that they look so we're creating our own button components so up here we're going to say const and we're going to destructor our props so we're going to have our text because again right we want to be able to use this button everywhere we want oh my god my screen just locked there we go okay jesse can you still hear me yeah i can hear you i can hear you i can hear it you can hear it clear yeah yeah yeah all right guys so we're gonna need text because we're gonna use this button everywhere it's gonna be reusable button component so we're gonna have a text we're gonna have an icon we're gonna have disabled um and i think that's it for now we might have to add to that later but we're gonna destructure this from our props all right next let's get rid of this text what we're going to do is say if we have text we might not have sex so if we have text then we're going to pass in the text into a text field okay guys so let's go ahead and load up the text in here i'm just going to copy this line because what we're going to do is actually just something very similar we're going to say if we have an icon then pass in icon well actually we don't want this to be text right so we're going to say image now we're going to have to import this and this comes from react native as well but this is basically gonna be like our uh you know standard image tag it's just a little bit different in react native so we're gonna come up here to the top and say where we say view and image we're going to also say i mean when we said view and text we're going to also say image and i don't think we imported touchable opacity so we need to do that as well we can get rid of view because we're not using it here all right so i overwrote view with touchable opacity we also have text we also have image now we're going to say the source of our image is going to be the icon next we're going to say resize mode and this is basically uh you know like background size or whatever we're going to say resize mode is going to be contained okay we don't want it to like expand past our button or anything like that so i think that looks pretty good for now and the next thing that we want to do is going to be very similar to when we created our splash page we're going to have to uh basically import and export this in a separate index file right so in our button folder yes in the button folder here in our button folder yeah we're going to say index.js and there we go uh we're gonna go ahead and import the button and immediately export the button oh again in that layer yep so the same way that we're doing our screens guys is the same way that we're gonna do our components um where pretty much you know when you look at you know the standard kind of imports when we say import yada yada from react and we use this kind of destructoring or whatever we want to call this um sorry i actually moved to the welcome js page that's my bad um but yeah when we typically import stuff from react or react native and we're saying use effect or view text safe area right we're only really saying one thing we're importing it from one place so this is the way that it works right we have one index file that's basically importing everything that we want to use and then exporting it back out so that we don't have to keep saying okay go into this folder go into this folder go into this folder we're just gonna have it in one place and destructor it from there cool yeah okay awesome yeah by the way your mic is your mic close by or not yeah it should be i mean it's like right here okay this is better if your glaze but it's still quite soft though so try to speak up and i might be really loud so yeah okay sorry um i'm just gonna keep adjusting the gain there okay cool so let's head back to the index.js in our button folder and this is going to be where we import button from the button.js so we're going to go into the index index.js yeah we're going to be here yes perfect so we're going to say import button from the immediate file button okay and then we're just going to immediately export it so we're gonna say import i mean export button as default there we go okay next thing that we want to do is also create a style gs file in that same folder so inside of the button folder we're going to say style.js and we'll come back to this in just a little bit but for now we're going to say the same thing that we said in the last one import button from button and then export button as well wait in which file are you now you're in the welcome i am in style.js inside of the button right here yeah there we go so this is going to look the exact same as our uh after mentioned index yes there we go okay so we're going to say button as default there we go this is in components ah you're in components okay yeah yeah so inside a button we also have style.js and that's what i just created wait wait button.js sorry i'm like i'm confused so button.js and the style.js yeah style.js so you're here that i just created yeah okay great oh what just happened there we go okay cool so yeah it's right now uh for now we're just gonna have it the same as our index.js file and then we're going to come back and add the styles in just a bit so the next thing that we want to do is inside of the components folder we're going to create another index.js and this is where we're going to pretty much officially export our button right so same way that we did our screens we're passing it up in layers all right so you should see now a index file immediately inside of the components folder there jesse in the folder like here yeah so index the bottom one the bottom one here yep yeah there we go cool so in this one we're going to say import button baton there we go that sounds very familiar um there we go all right and then we're just gonna export button right alright so guys this is pretty much what i was talking about you know just the same as when we import stuff from react native when we import stuff from react uh this is you know typically we're just gonna see a destructor version of it up top where it's gonna say you know let's import use state and use effect from react well this is basically how that backend looks we're basically just saying bring everything into an overall index file even though we have folders upon folders upon files all of this stuff we're just gonna have it all exported from one file let's save that one and let's save the other index okay cool thank all my stuff to save now now at this point we can go back into welcome.js and add the buttons oh so we're going to go here yep and then so this is where we're going to say if we have a visible selection and let's create a view first right because if you guys are familiar with react you know that we can't have multiple items just sporadically anywhere without like a fragment at least um so the the next best thing that we have in react native is just this view so we still have to render it um so we're gonna say button so we're gonna have to import this from the top so we're gonna say import button and as you guys can see we're just destructoring it and we're gonna go look inside of oops we're gonna go look inside of components and that way we don't have to do anything like components button button all that stuff right we just say components oops come components there we go all right i need to wrap that in a string there we go all right so now we have our button so now let's come down here and pass in some text or buttons because remember guys we needed all of those props so this first one is going to say get started oh yeah and disabled is false there we go all right and then uh copy paste it we're gonna have another button this one's gonna say sign in okay and this one's also gonna be disabled uh false and we'll be back because we're going to add some on press so in react native we can't really create like a tags or links or anything like that we create buttons and then we say on press you know do some sort of navigation thing so as you guys see up here we have a navigation prop and that's going to be automatically created by the the navigation component that we create in just a moment so and the navigation component can kind of be thought of as like a react router basically okay so next thing that we want to do is go ahead and start creating this uh navigation component so i'm gonna go ahead and delete that on press that i just made because we don't need it right now but we'll be back so now let's go back into app.js jesse yeah and by the way you do have an error um is that something we should be looking for right now because it's looking for the files i believe um what does it say the import of the button at line four as welcome.js here button from okay so boom boom maybe i forgot an extra oh refreshing yes oh nice look we got the get started and the sign in okay cool there we go there we go app.js yeah so if you guys missed that i forgot to go up one more folder to import the button um and then jesse you should be able to actually click on those and we should see some sort of opacity oh on those buttons oh no button okay i'm going to click on it you see that it's very very slightly guys i hope you guys can see it but when you press on it it becomes a little bit lighter and that is that opacity that we um stated here i think in colors right or in styles here in style but button here and button.js that is this particular opacity yes awesome cool let's go we can kind of see it all come together and that's going to basically allow us to have automatic visual feedback from whatever element we say you know touchable opacity cool cool let's go let's go so what else what's next so let's hop back into app.js and we're going to remove this welcome screen and what we're going to do now is actually just create our root navigation so because if we just leave that welcome screen right here on the app uh js we're we're just going to be stuck on the uh splash screen forever right so what we wanna do and we're gonna break it for now because we don't have this yet um but we're gonna create our navigation component and this is gonna allow us to jump from screen to screen right uh so here's our component we need to also import it so up here at the top uh we can get rid of the import welcome we're actually just now gonna say import root navigation and we're gonna get that from we're going to get that from a navigation folder which we have not created yet navigation there we go and we're going to call it navigation there we go guys so now let's go back over here to our folder structure we're going to create a new folder at the base of our app and this is what's going to be called navigation okay and then inside of that uh we're going to create the root navigation component so we'll say new file root navigation.js now this is probably the most important part of your react native app because this is how you're actually going to get from screen to screen without this you will never go anywhere you'll be stuck on one page for eternity so let's go ahead and again say rnf go ahead and create our function based component um and we need a couple things so first thing that we want to do is actually you want to kill the server jesse oh kill the server we're going yeah we're gonna go ahead and install some stuff okay we're gonna go install some i'm gonna make my screen a little bit bigger i'm gonna zoom in okay whoop like this this is my terminal guys oh this is too big actually i like it i make it smaller a little bit smaller okay like this and hey i have to oh it was very wide okay whoop like that okay how wide was it already like this i zoomed in i just sent you the command that we want to use okay so guys we're going to say npm i and we're going to install two things right now so we need react navigation native and renek react navigation stack so once you paste it in we'll see what that looks like oh this i pasted it in oh strange okay sorry about that aha like this okay moment guys here it is boom npmi there we go at react nate dash navigation slash stack and then at dash navigation slash native okay so that's the full command guys so these are uh you know pretty much the goto uh for creating your react native navigation so once you install these uh what they're gonna provide for us is the navigation uh container and then the navigation stack that we're gonna be able to actually get around our app with great we hop back into the root navigation js file here all right so let's go ahead and import those what we aren't going to need is the view and the text from react native because when we have our uh root navigation component we don't really ever put any like real uh like forward facing information or anything in there right we don't have any view we don't have any text so we can go ahead and delete that so what we do want is to actually create our navigational stuff so we're gonna import navigation container we're going to get this from at react dash navigation native okay guys and then just kind of copy paste that real quick because the next thing that we need is create stack navigation and again i kind of mentioned this earlier but all of the pages that we create they're basically just a stack of pages on our app you know we can swipe through them or whatever and we could actually physically swipe through them if we had a specific animation but we don't need that for this app but the point being is we just have a stack of pages and we need a way to get through them so we're creating this navigation stack so let's change this one from native to stack there we go guys all right and then we have that being exported that's good now next thing that we want is to create our stack so we're going to say const stack equals and we're going to run create stack navigation all right next thing that we want to do is we don't have any of these uh viewer text anymore so let's go ahead and say navigation container and that's what we just imported and this is going to wrap our stack so next thing that we're going to do is say stack that console that we just created and screen now guys pretty much oh wait i forgot one step so let's delete this really quick uh we need first stack dot uh navigator there we go now this guys is pretty much like using uh react router where we have this kind of overall wrapper that's going to hold all of our pages so in react router you would probably have like a route here right here right well what we're gonna do is say stack dot screen and these are gonna be all of the different screens that we can access um and we we're pretty much just gonna keep creating these for every new one that we need crap so this is actually a selfclosing tag so i made this wrong so there we go all right so this first one its name is gonna be splash and we actually have to give them names to be able to access them the next thing that we want to do is give it a component so we're going to say component equals welcome because that's the only one that we have right now and that's going to be the one that we use for our splash page all right cool guys so at this point um and jesse i don't think the server's running right now um let's see no i don't think it's not no it's not running so npm i i no sorry npn run ios c okay now it starts up again it's gonna start up the metro bundler this will come up okay then open up the simulator see on the right on the left i mean okay this goes well hmm it only shows me this um let's see so stack screen let's see and then let's see what's in the app okay so we have our root navigation from navigation and then export default root navigation screen component ah well probably because i have not imported the welcome screen uhhuh yeah that makes sense yeah yeah yeah it's probably important probably a little bit yeah let's say import welcome from let's go up one page grab our screens folder and grab welcome okay let's see where it is in the page okay so you're welcome is here in these screens welcome wasn't it here welcome like this pages so that should don't you need slash pages um if you look here at the file structure no because it should be grabbing from that index page that's sitting inside of the controller yep like this so let's see so welcome welcome from screens welcome yeah we might just have to reload the app again yeah so try try closing out the emulator again we can try refreshing it closing out the emulator starting this one up we npm run ios i'm not sick of it yet so it's okay so let's go starting metro bundler then ios simulator oh there we go oh whoops now it's on my on my other screen let's grab it from there so whoop let's put it next to our code and let's so that that's what hap that is what happens though when you close it you have to like reset i have to resize it for you guys again and all that but that's okay you guys can see it here now so guys by the way if you are a fan of um tanner's teaching he is one of the teachers and that's why he became our newest team team member okay he is teaching at our full stack mastery boot camp okay our eighth online uh eight month online program where we teach you how to become a full stack developer today we're going to be teaching you everything you need to know okay from front end back end how to build full stack apps but also one of the most important parts in our full stack mastery bootcamp that we focus on are fundamentals fundamentals okay so because guys imagine it if you build a house if you have to build a house building and knowing how to build the foundation is the most important wouldn't you agree tanner yeah definitely and i mean honestly the way i've always kind of seen it like you know with clever programmer you know you can come on you can look at the react phones you can look at you know all of that but you're gonna be pretty dependent on watching the clones and also you're only going to get the front end if you want to get these apps to actually work you know you'll learn the back end and you'll be able to do it you know naturally or on your own so i think it's really cool yeah yeah so but a lot of projects okay that we make in the boot camp we're gonna be it's always a lot of fun okay the it's always like a uh whenever we start record it's like a family you know you'll be together you'll be learning together you have so much fun guys and um i don't know maybe some of you guys have been to the webinar last week okay was amazing uh we we bring so much value and all of that i'm really proud of the program actually to be honest also because some of my students actually only being in the boot camp for two months they already landed the job of 70k dollars annual income i think that's amazing i don't know if you think so but i think that is amazing okay so guys if you are interested by the way in the description below is a link where you can book a strategy session with us okay just to see if you're interested just to see if you're a fit for our boot camp okay it's an investment but i assure you it is worth your time money and energy okay that's it let's go let's do this okay so it is actually loaded up here and it's giving me an error some sort of air yeah what does that say it says unable to resolve module react native gesture handler react native gesture handler react native gesture handler could not be found within the project oh if you are sure the module exists try these steps uh yeah we might be forgetting something oh what are we forgetting all right so we have our root navigation and we have react navigation stack we have react navigation native we have create stack we have navigation container all right where are you now which file are you now i'm root navigation studying yeah our root navigation okay so we have our screens being imported okay okay so i don't think we actually need to use it anywhere but it is something that we do need to install um so when we did react native uh react navigation native and react navigation stack uh we forgot to mpmi install react native gesture handler oh so that's my bad sorry okay so what does it actually do with just your handler so the gesture handler basically uh kind of how i mentioned earlier like we could have a stack you know of some stuff that we could swipe through you can you know you'll see it on you know apps all the time swiping through pages and stuff um it more or less allows that to happen right so you could uh but it also it does a lot more than that right so it just allows in general different gestures we can click on a button it'll bring us to a new page and kind of just allow us easier navigation right like this so i'm going to be doing npm install react native okay dash don't forget the dash guys react dash native dash gesture dash handler okay so can you make your uh terminal bigger yeah i i am boop there we go there we go there we go ah so this makes this actually assures all those swipe movements and all the movements you can make on your phone which are you know nowadays so normal um oh yeah to do that okay cool i think it's almost i think it's done all right so yeah we'll probably have to well we had to kill it off to install it anyways so we can go ahead and relaunch it yes relaunch it i'm gonna close off this simulator first okay and then i'm gonna run it again so now it starts up again whoa cool and now simulator okay why is it opening up in this because i closed it so let's see what goes on here so i'm gonna make it bigger for you guys and other than that tenor what what is the next thing once if once this is solved what is the next thing so once we can get past this error we will create our uh login page or at least start linking together the login page right right it stays black though so what does that mean is your emulator broken bro well it says you're opening on iphone 8 here it does say this on line 15 okay failed to build javascript bundle because of why because of nat react and native screens okay yeah okay so i thought that was gonna happen i sent you a couple more things to install so we can go ahead and kill it off again all right we have to install a lot guys we're not done yet okay we're not done in the terminal yet okay terminal gotta work hard today okay so that said got set guys that's okay so we have to install some more so we have to install this and um it's gonna be called a lot of the stuff that we end up installing we don't really like tend to you know import or use but they're pretty much dependencies on uh the navigation system right so with react native navigation it does require quite a bit to actually work and be able to navigate through all of your different screens right right so what does this gesture uh command do npmi react native reanimate it um it's just one of those like random dependencies to be honest with you like i don't really i've never really like used it in depth or anything so okay okay okay so that was done pretty quickly so this means it's all good okay so we're gonna do the next one okay the next one is gonna be react native safe area context which you know yeah save area context okay this one right and the last one and this is one the i think this is our last error was about this okay so mpmi react native screens that's a lot of packages is it normal in react native to use a lot of packages i would say so um especially when it comes to like the navigation component aha right right i feel like a lot goes into that so i'm gonna close off this emulator so are you sure tanner that we have installed everything that we need that should be yeah um it should be everything okay great well if it doesn't we'll just find it out that's what a developer does right so npm run ios dashie okay metro bundler starting up oh it takes quite long comparison to okay there it is nice okay hmm that's getting heavy man oh the app's getting heavy i hope i hope this is a good sign though that we saw that screen with apps oh i think something's happening something's happening okay cross our fingers that we don't get any errors well 100 okay oh but i think we we should be in our root navigation okay so in the notification folder root navigation file and then at line seven it says this is not a function create stack navigation is not a function so we are importing create nav stack navigation from this oh so i think we also i don't think we installed this one to be honest it's because i'm dyslexic oh so it's gonna be creax create stack navigator we're gonna change the import as well and that should fix it nope nope now but by the way did i i don't remember installing this did we did this did i install this one yeah i put it in with uh the native one i just gave it to you as one line all right okay okay good good good good just checking both at once so create stack navigator from react navigation stack that looks good this should be good you know what a lot of the times when we have an error especially when it's kind of like a a deep root error in react native um you'll have to completely refresh the app [Laughter] so guys we're we're teaching you we're teaching you the real life scenarios here okay it's not even scenario this is just how it is okay so we're killing that server again but that's okay we just got to keep doing going okay in development and when you're studying you know you just gotta keep going so here it's starting off again yeah some of those errors they're gonna be pretty persistent and react native so you really just gotta get used to refreshing it sometimes the air is gonna be there shoot i didn't close it off before i killed it i'm sorry learned that the hard way guys stay with us okay this is just how it's done okay so it's going to start up and then start oh that mean emulator to do okay what does the black screen mean we had that before that's usually not a good sign um did anything pop up in the expo terminal like you did last time no says running build yep running application man that's an ios thing got a black screen of death um yeah i guess i mean the the code compiled correctly so i would just try to reset the emulator again really this this time let's run uh npm run ios with dash c so where they're clearing the cache yeah oh i've done that also the previous time was that not necessary like this right um yeah let's do that make sure we close out the emulator yeah it's closed it's closed okay let's go a e oh it came up oh oh i'm seeing something that i like no black screen that's good no black screen um real quick hop back into root navigation i added something that i'd like to explain real quick nice rude navigation all right guys so this line right here a couple lines right here uh screen options right we're not really passing them in right now but basically this is kind of like and well actually it applies to android and ios but a lot of the times with these like default kind of like material ui and stuff like that oh actually our app is up finally yes we see there up at the top you guys see that white bar that says flash that's what this screen option right here is for to hide that ugly bar that we typically get with default uh ios and android apps oh so the stack screen has a default of that the white bar oh yeah oh yeah wow that's almost like that's almost like default on you know react ts like when you have to remove all the margin and all that in your whole app exactly okay so guys let's go in right here in our stack navigator um and we're pretty much just gonna say screen options and we're gonna say we're gonna pass in the screen options uh object that we just created and pretty much tell it to hide all of those headers so it's going to affect all of the pages we don't want any headers anywhere wait it's head or shown uh screen yeah there we go yeah yeah because you want to pass in the object not the key only yeah got it great great there we go so we want to fasten this object that we created um and there's other stuff that you guys can look into as well i mean if you wanted to keep that bar you could and you could change the background color you can customize all kinds of different stuff um but for our our purposes and especially on a splash screen we definitely want to hide that so tanner if i would want to know what kind of properties i can pass into navigator or you know stack um where should why should i look up the documentation so react native and expo both have their own documentation and even so much as actually for this particular part there's a specific documentation that we want to go to so we would go to react navigation so if i would look it up at google what would i say react navigation yeah actually just type in react navigation yeah it'll be the first link it's gonna say reactnavigation.org yep and then head on over into that say read the docs um it's going to tell you how to install it the stuff that we already did where we installed react native native or navigation native um and then it's going to tell you all kinds of different things so there's tab navigation which is that bottom bar that you can put into your apps kind of like on instagram um and you can pass in different icons into that you can have all kinds of different pages linked to each one of those icons but what we're doing is using it as a router right we still need it as a router to even get to these pages regardless of having the tab navigation at the bottom or not okay okay yeah okay nice so screen options we're passing it a value of that screen options object which makes that white bar hide or actually disappear at the top here so what's next so next we're gonna start building the login page so while we're still in the root navigator we're gonna import it we haven't created it yet so we're gonna get uh some errors oh yeah curly braces there we go so let's import login from our screens and we're going to have uh an off section so this is going to have login and sign up so again right we can just destructor this we don't have to keep going in even further so i like doing that and then down here where we have our stack screen let's control c oops there we go create two stack screens here guys um so this one we're gonna rename so we're gonna call it login and we're going to pass in that login component we just imported and the next thing that we want to do is also uh go back into our screens page so we have a welcome folder we're going to create an auth folder um so create folder auth and then in off we're going to create a new file and this is going to be well actually first let's see yeah sorry no that's okay yeah we are going to create a new file is going to be that index.js so again this is the pretty similar pattern that we should be getting used to where when we create these uh folder systems for these different pages we're going to have well different screens we're going to have different pages in each screen and we're also going to have that overall index to be able to export all of the different pages all the different screens all in one place right so where do you want me to go now so in screens inside of auth there should be an index.js right by the way you do we do have an error but we can look at that later okay so yeah so that's your login page we haven't created it yet aha so auth index yep going to go ahead and import the login page so this is going to be errors on top of errors on top of errors because we're we're importing login in so many places and we haven't created it yet right guys yeah yeah all right so let's import login and let's export login right eventually we will also add sign in as well origin or login i don't know where it came from our computer is speaking gibberish all right so in our off let's create a new folder and this is going to be login login there we go and this is going to need a login.js and a index.js right guys so very very same thing that we did with our welcome page we're just going over the same patterns so let's create a new file in here we're going to say index.js inside of login guys yes and you can probably guess what we're going to do we're going to say import login from login and then export in curly brackets log in as default as default perfect cool and last thing but certainly most definitely not least inside of our login folder we're going to create a new file capital login.js so we're finally going to start getting rid of that error oh we're finally going to be making the login component itself itself yes oh again guys r n f boom all right cool so what do we want in here first we want buttons so let's go ahead and say imbor that's very same button component that we created we're going to get this from all the way up should be four one two three four yeah okay so go up about four times and grab components all right and then right here where we say import view and text from react native we're going to need a safe area because we don't want our input fields to kind of intertwine with the status area and then we're also going to say scroll view as well now guys in react native if we've had an entire page of content that exceeded the total height of our screen like if you have an iphone 12 or whatever and it goes past this the height of your screen you can't scroll to see the rest of it without a scroll view it will not allow it to happen so uh we'll demo this with with and without well actually there's not enough content on the login page to really demo it but you guys will see it later we'll demo it without the scroll view when we create uh the the dashboard so let's first wrap this in a safe area view and then go ahead and put in a scroll view as well so these are gonna be our containers uh and next thing we're gonna have is just a couple of views to contain the text and the button for our login page so we have a view here and this is basically just a div a more advanced div that react native uses to kind of generate our content and then here let's say sign in to the coinbase hey six so now let's go ahead and create another view underneath and this is going to be our button it's going to be selfclosing there we go all right so we're going to pass in some props do you guys remember what our component looks like we need tons of props we're only going to pass in two though for this one so we're going to say text equals sign in and disabled equals false perfect okay so let's save that save that and last but not least we need to go ahead and create an on press event for our um button on our welcome page so if we head back over to welcome.js we're gonna go ahead and create an onpress event in uh welcome.js wait wait wait sorry i was not i'm not at wacom.js i should be here sorry i was still at the button okay okay yeah there we go all right so this is going to be wait which one did we just create sign in so yeah on the sign in button because we just created the login page we're going to say on press equals and here we're going to use a little uh callback function so we're going to go ahead and say navigation now this is where you see it coming into play that navigation we never passed it into this component but we did however call that component from within our navigation component right so just creating it calling it into that navigation stack automatically gives this component this navigation uh object we're gonna say navigation.navigate basically a link right so we're gonna go ahead and pass into this navigate function we're gonna go ahead and pass in log in that's going to take our app to a login page it's going to go ahead and find whatever it can with the name of login so if we head back over to root navigation root navigation whoop yep yep so you guys see the names there that's how we access these components so on the stack screen we say name equals login and that's what we just passed into that navigate function there so we can kind of see it all coming together this is how it's gonna uh kind of play out and i'm feeling like we're missing one thing let me check through some of these index files i believe welcome in our welcome no in our screens in our screens we're in the screens folder in the screens folder on that very top index well it'll be it'll be the very bottom yeah this one um so i think that's an auth so even further down yeah you can close off and we close welcome it'll be the last one right this one there we go yep in that one we want to go ahead and export uh the login page we just created so now is where you'll actually see what i meant where we're basically just going to have one index page exporting all of our different screens and components oh all right so auth oops auth index is automatically correct oops um auth index is automatically grabbing the index page from the auth file or auth folder which is exporting login and then that top line is exporting the index from the welcome folder which has our welcome component so everything kind of ties together and exports out of this one page so it's kind of like a gateway um cool cool i think that's pretty much that so let's uh let's try to reload the the app there oh okay so let's close the app first here okay um npm run ios okay see if it starts up it does okay yeah and then simulator okay it's still thinking we didn't get any abs well no no death oh uh what does it say so none of these files exist screen slash auth slash pages slash login screen off pages login and what does it say which uh file is throwing that error no it doesn't actually um but where did we import login into into the index that index this one wait which file is it when it says your screen oh wait i think i know why guys yeah so remember remember in the welcome folder the first folder that we have in there is pages yeah yeah yeah yeah yeah i messed up so yeah if we open up the auth folder we don't have a pages folder yeah by the way there's no indeed yeah yeah yeah yeah so let's create that and then pretty much just grab the login folder and throw it into the uh pages folder okay so this yeah you got there right okay boom there we go and that will require you to reload uh the emulator again right right right right okay got it so two two two okay shoot so here yeah it is already starting up oh this is a good sign usually i like this better [Laughter] well it's just part of the deaf life you know just gotta keep going so next thing that we're going to do is go ahead and style out those buttons because we left them pretty blank pretty uh unstyled the only thing that they have is that kind of default feedback the touch base feedback oh let's go look everything's working yeah that looks nice that looks slick okay let's go so let's go back to the the app.js file or where do you want to go so we're gonna go into we're going to go into the button folder in back into that style.js file that i said we were going to revisit excuse me which file um so in components yeah in button and then style js style js all right style gs so we left this with kind of a placeholder um go ahead and delete everything we don't really need that so we're gonna import a couple things this is gonna look a lot like the last style page that we created so we're gonna go ahead and import style sheet why do i keep doing parentheses there we go style sheet from react native uh and then guys we're gonna also get the rf value because again right we don't want our text to be uh too tiny and we don't want it to be too set we wanna kind of have it be more fluid based on what phone we're using so this is going to be react dash native dash responsive dash font size there we go okay next we're going to import that colors uh object that we had so let's go up a couple files our folders go back into our resources and find our colors so let me make sure that's enough so we have one two yeah i think that should be enough so just a couple uh folders up now we're gonna say export default and again we're going to use that style sheet so stylesheet.create to create our object here all right so here's where we're going to start applying some of our button styles so the plain black text that we have sitting under the coinbase clone text right there it has a little bit of a visual feedback when we touch it but they don't really look too nice right now so we're gonna say button container and let's just give this some good style let's make it look nice we're going to say width 100 now guys if we're not putting you know only a number then it has to be in a string in this kind of format okay next we're going to say height we're going to say rf value 50. okay and then we're going to say border radius so this is going to set our button to be a little bit rounded so we're going to say 10 flex direction now guys i haven't said display flex at all and yet we're able to use flex direction the reason being is everything in react native is by default display flex react native knows what's up so tanner can you by the way let's let's let's pause for what can you tell a little bit about your career and what you have been doing so far um with uh with with coding you know yeah oh you only see me that's not what's supposed to happen um yeah i mean i started coding when i was like nine or ten pretty young uh mostly just hobbyish it wasn't really like anything too serious um but pretty much in third grade we had like a weebly project and uh i thought it was extremely interesting i thought you know we can drag stuff around create websites anybody across the world with the same uh url can view it that's amazing and i love creating so i started kind of just reverse engineering all the code that i could find right because at the time you know there wasn't any clever programmer there wasn't any youtube channels no boot camps and stuff like that so i didn't have like proper guidance or anything it was mostly just let's see what i can build let's see what i can break let's see how many errors i can debug um if there's anything i'm good at it's probably debugging yes yeah yeah that was something that you should be good at that's one of the most important skills as a developer i think and what you just said you know having guidance to uh your journey becoming a developer is so important okay that's also what a lot of students say right the students that we teach they say like wow uh you guys guiding me that that takes me to the next level because some of them have been doing this for a long time on their own that's why guys you know join the community have fun interact with other people i always say one of my favorite mentors is actually um when you teach it you get to learn it twice which actually means like you're helping somebody and you're reinforcing your own knowledge okay so i think it's so amazing and i love seeing this build by the way so let's keep going but i think this is let's go fire okay guys alright guys so so we're here okay so it's up and running cool awesome so where did we leave off we say align center yeah you were standing the buttons cool so the next thing we want to do is justify content center so this is basically saying because you know it's not actually a button this is just a random uh touchable opacity type view area um so we're basically saying we want all of the text that's inside of it to go towards the center as if it was a button so we're going to say justify and align everything to the center and the next thing we want to say is a line cell center as well um and then if you guys remember that color object we created we're gonna say background color colors primary blue so our so our button here is going to be blue um let's see okay so then we're going to say button text and this is actually going to be uh the default button right because it doesn't really make sense to have a primary blue background for the button that's going to be on this splash screen but in our um button.js we're going to be able to take in some optional uh styles so we'll be able to style out all of our buttons a little bit differently we're gonna say colors dot white for the text color the font weight is gonna be bold and then the font size we're going to use that um that rf value function and we're going to say 15. the last thing that we want is going to be icon style so let's give it a height and a width using the rf value so this one's going to be 20 and our uh height or no our width is going to be 25. okay and then tint color which is a word you'll see all the time in react native especially when you do have like a tab bar or something uh the tint color is typically like the highlighted or active version so if we have an icon its tint color is going to be white okay so the next thing that we want to do is hop back into the button.js oh the button.js let's go yes awesome so up here where we have our uh constants we're going to add a couple more right now we have text icon and disable so we also want to add like i said guys we're going to have some button style you know we don't want all of our buttons to be background primary blue because it's going to blend right into the splash screen so we're going to say button style we're going to say on press we're going to be able to pass in some callback functions and then we're going to also say button text style because we're going to be able to change the background we need to change the text as well right right so next um let's see our touchable opacity i'm going to start breaking this down because we're going to have some more stuff in here so we're going to take in some attributes first we need an on press on first that's something different than on click but it does the same right yeah pretty much yeah it acts as on click but for your thumb i'll press i'll press yeah right and then style uh this one's gonna be an array where's my curly brackets i can never use curly bracket and then an array of what uh it's gonna be an array where we're gonna say style dot button container so this is going to be kind of uh that that uh that style object that we just created inside of our style.js and then we're also going to comma in button style right so the reason we want button style to be second is because we want it to override anything right if we get button style we want it to override anything that comes in uh first so by default our button's gonna have that blue background but if we pass in a different background we want that to be the case oh just like high style components work actually right yeah true inheritance but you can you can adjust that specific um component or element in this case you know you want to change cool pick and then let's see so we're going to change our text a little bit because we have some text style now so let's kind of break this down okay so we're gonna say style and we're gonna do the same thing so we're going to pass in an array now the first thing we want is that style um button text that we created the next thing that we want is going to be button uh text style and then we're gonna pass in our own css object right here so we're gonna say margin right if we have an icon so question mark we're going to set the margin right to 10 otherwise we're going to set it to zero okay guys so if we have an icon we want to give it a little bit of a margin right otherwise we don't want a margin okay um and then this is spelt completely wrong what am i doing here so this is button text and then it's style dot okay what wait isn't it here isn't it like this one button textile is that what you mean oh oh yeah so we want that one to be the second one because that's the one that we're going to pass in and then this is the one that we built out in the style js right oh okay oh yeah right you're right like this okay cool thank you i don't know what just happened okay cool so i think that looks better and let's go oh my god it looks amazing what does that error say um said visible it says can find variable disabled it can't find this in the welcome.js and disable yes it needs to be disabled oh that's an easy fix okay let's go easiest fix we've had all right so then we're gonna add some style to our image so we're gonna say style is style dot icon style guys there we go okay so right now the image i mean the uh the button is going to blend into the background because it's the same color so we need to go ahead and start passing in uh some new values to kind of take over that style so what are we gonna do we're gonna go create some style inside of our welcome style so if you go back into screens and then back into welcome and then style.js we're going to add we're going to add style for our buttons specifically on the welcome page right so very local kind of like using css module right guys if now i'm that i'm not opening the file structure on the left side whoops um you can still see here at the top where i am okay you can still see it here so we are now in style.js okay in the folder welcome awesome so let's say that for our welcome screen we want the background color rv button style to be colors.white okay and then the button two which is gonna be the secondary button there because we have two buttons on our welcome screen we don't want both of them to be primary buttons so we're gonna say button two and um well let's first give this one a margin top of 20. okay and we'll come down here and say button text style this one's going to be color and we want to actually set this one the colors of primary blue right because if we have a white background on the button then we're going to make the text itself blue so why is this one complaining here tender um because i forgot the commas separate yeah yeah yeah of course of course there we go yeah we want to make sure that all of these are common separated guys cool all right so let's see when you save a bunch of stuff okay cool uh what's the error that it's giving us oh style variable style can't find variable style did we do we pass that inside of our button.js we did not import button the style component right um so it should either be here or we can put it in the top up here we're going to say import style from dot style there we go ah that makes sense okay so it will give it better and you have double double comma at style.js so here i think was it here yeah here gone oh yeah like it never happened there we go okay oh oh yeah i can't find i saw this before aha this was install.js i have value like this yes all righty oh alliance center is not a valid style property oh i thought a line center it's a line item good one good catch amazing okay awesome well i'm sure a lot of people can relate you know so that's okay it's all about debugging guys it's all about backtracking where you came from and what you have been doing up until now so cool oh the buttons are here okay so what's next hannah so next we want to actually start passing in uh some of the styles so we need to go back to our welcome page so welcome.js welcome to js um here yep yep so so far we've passed in text we've passed and disabled and now we need to pass in button style oh i'm sorry oh oh sorry sorry sorry oops i was trying to rearrange things better for you guys but alright so this one's gonna be button uh a style dot button style uh so this is again the one that we just created uh inside of the local style to the welcome page right yep and then button text style and this one's gonna be style dot button text style it's so clean though like you only import style you only import style here at the top and then you can just use it here everywhere you know by having by by accessing those keys with the styles amazing oh let's go look i think it got applied okay let's do it for the next button button style button textile equals style dot button style 2 all right let's let that refresh a little bit okay so we have that we have that and oh let's style out this view right here right because we don't want our buttons to kind of be pressed up against that splash screen logo where it says coinbase clone so let's give this um just its own you know typical styler so we're going to say style equals we're going to say style dot bottom view now we haven't created this one yet oh so let's hop back into style.js the one for our welcome screen oh yeah oh so many thoughts style okay and then it's probably here right yep so let's go ahead and uh comma in and we're gonna say button view now we're gonna create this object um we're going to give it some let's see padding i think well first let's give it position absolute again anything that's not like a direct number we're going to wrap those in strings so we're going to say position absolute we're going to say bottom 30 left 20 and right 20. e okay and then let's go back to our welcome.js look at that whoa wow this looks already so good guys i love it okay okay so that's the get started button the white one actually right yeah so i think i might have like gave it the wrong name so i'm gonna hop back into the style.js okay so we have button side which has background color white and then button textile which has colors primary blue okay that looks good so let's hop back into welcome.js so we said button style equals style.button style and then we said buttons text style is style button textile okay okay wait maybe i can help you out i can do the oh shoot i can do this and i can split the screen on the right side i'm gonna open up the style for the pages where you were before and then on the left side i'm going to close this one up is this possible is this visible do you think this is visible like this um yeah i think that looks fine um let's see here so take us into your thought process tenor if you can right now i am sitting into a button.js just making sure i had all of the uh pops passed in that we wanted so you're in button.js okay and then we have a button text style as well so it looks like we have everything there all right so we're passing in this button textile is not lighted up though where so we're not using it's not light light it up so there's something with this one button textile oh you know what right here where i said style dot i was trying to access this style inside of the style component and uh we didn't put it there because it's uh it's a prop so delete that let's try that again so actually if you reloaded i mean we don't have to reload it but if you did you would see that it's the splash screen for you know a couple seconds we only see the logo we see that the page is loading basically and then the buttons appear um so they they're not there instantly yeah just because of the that's because of the set timeout right with the two seconds we put it on before it's visible with the conditional rendering right where was it in app or where did we do that um it is welcome the welcome page exactly so that's what happens here guys the moment this component welcome gets loaded up use effect is fired off which is a react hook okay and use effect fire is only off when the app is being loaded so that will give us a timeout of two seconds and basically within the after two seconds the variable visible is set on true which in case it is true all of this will be rendered on your app okay the buttons and all of that that's why that is happening okay cool let's go what's next so if you click which one do we create we've created login so try clicking on sign in and it should since we linked up all the navigation it should take us to a login page oh okay so i'm going to click on sign in there we go and it shows us the signin page so this is kind of and as you kind of saw it kind of slid in so this is why we had so many different stuff being uh you know installed and imported and everything for our navigation um that page just slid in that's the you know animated part and everything else that we have so we just have stacks of pages that are sliding in and out and we have that navigation stack kind of handling it all for us so the next thing we want to do is start adding some input fields to our login page oh nice i like okay so what should we make so let's head to auth pages login login.js off pages oh sorry sorry sorry sorry uh where's all pages here screen yeah okay off pages odd pages login yes and then here awesome so what do we want to do we need to import a bunch of stuff so we already have let me change this to word wrap okay so we already have our view text safe area uh scrollable view let's go ahead and add just a couple more things so we need text input so we can actually you know have some input field we're also going to need touchable opacity oh where are you at i'm not seeing you index or um in the yeah the login page oh so okay okay great i will show you oh yeah it should be i guess it's not like breaking down but i'm i'm at the top over here okay great so maybe maybe toggle word wrap oh yeah word word right right um view i think toggle word wrap yeah good idea okay there we go so yeah i just added a couple things up here just the text input and the touchable opacity okay and then we have our button ready and everything like that so let's create a couple constants um so first we need to take in some props because again guys anything that's in our uh navigation stack is going to automatically get a navigation property so we're going to say const we're going to destruct the i know how to spell that'd be nice we're gonna distract the navigation properly you sure it's navigation right yes okay great awesome that's always good we're going to create a couple uh you know states some standard stuff yeah so we do this you know in react all the time every time someone's you know typing in an input field we're updating these uh custom hooks where we're saying all right let's set the email let's set the password let's set their first name right yep yeah yeah yeah so we're gonna say email equal set email we're going to say password equal set password and both of these are going to use state and be an empty string originally right and they will be updated upon user input and we're missing one thing jesse when you come back to the top and say uh react we need to import you state there we go yes yes not state yes oh let's go okay wow that looks really good okay oh i'm gonna press the sign in yay there we go so what do we need to add we need to add uh some input fields and we need to make sure our button can get us to the dashboard once we create that so let's first under our text view here we're going to create some views inside of this view right so we have this view we're going to be inside of it and we're going to create another view okay first thing we need is a text and this is going to be basically a label for our input field so we're going to say email okay and then we're going to go ahead and also say text input a lot of the stuff that we use and actually this is going to be selfclosing so a lot of the stuff that we use you know it looks like typical stuff that we would see in react um or a lot of the typical kind of html type stuff that we would use but it has to be very specific to react native to be kind of converted the right way once it loads up in ios or android so this one we're going to say value equals that email variable that we created and then we're going to also say the placeholder is whatever we want to say so something you know like example at email aha yeah that's the one going to be visible in the input right oh yeah oh and then oh we're going to give it an unchanged yeah so on change text so it's a little bit different in react native right and um what are we going to do we're going to say grab the text that's inside of it and we're going to pass it to so this is basically just a callback function we don't want it to we don't want this to run immediately i don't know if you guys have ever run into this and react but if we don't have like a callback function here and we just simply say set email we're going to get some sort of weird loop it's going to keep trying to run over and over and over uh we don't want that so we're firing off yeah it will fire off the moment unchanged text will be triggered okay guys so always have parentheses at the front that way that won't happen it's a callback function like tanner just explained cool and this will set the email right yeah so next thing we want is to set the password so i'm going to copy this entire view right here and just paste it right below and boom password just going to change a couple values right so we're going to say password and we don't really need a placeholder i mean we could put like stars so the value for this one is gonna be password yeah guys here like this one so it lights up as you can see okay and here we're going to be using yeah we're going to be using a setter function which will set the value on the variable password because we're using a use state here okay that's just a topic of react hooks okay cool let's go i'm wondering how it looks like let's go ahead and save it and see if we get our input fields popped up did it not say oh oh we are seeing something nice yeah so uh input fields they pretty much show up invisible in react native by default right so we have to style these out and actually make them you know show up on our screen we can obviously see if we had a placeholder there that we could see an input build there we can also click into them type into them um but by default they have no border they have no outline they have no none of that annoying stuff that oh i like that better though i like that better i mean i always have to i always have to remove that that blue ugly border oh yeah i hate it okay cool so let's style this up yeah so let's um add one more thing to our button here and this is gonna be on press um what are we gonna do let's leave this um i was gonna say let's leave it empty for now but no we don't want to do that we're gonna say navigation dot uh navigate dude why can i not spell nav a gate here we go we're going to navigate to the home page we haven't created it yet but this is going to be the label that we put into our uh navigation stack right so we need those titles those names sorry where were you at i clicked yeah good okay okay so are you saving are you saving it yeah so i think that should be good nothing's gonna change yet so we need to start um styling it out let's add a little bit of uh text though so let's see right under our password are you still there okay yeah so right under our password view here guys we're going to go ahead and create another view um and here we're going to actually use those touchable opacities that we imported at the top right below opacity and in this we're going to say text capitalized uh capitalize text right forgot password okay and then i'm going to copy this and create another one and this one's going to say uh privacy policy oh there we go guys so now once we save we should see those kind of pop up and they'll have that kind of little bit of a little bit of a visual feedback once they're clicked on because of the touchable opacity oh yes oh oh forgot password privacy policy cool all right so now let's start adding some style jesse oh okay okay which file so we're gonna actually create a new one so this is gonna be in our auth in our pages so auth pages and new file style.js pages wait here this one guys this is the new one yeah let's go yep there we go so inside pages guys style okay i'm gonna go over back to the other style page and just copy everything that we had okay the other style page oh okay so we have our container it's gonna have flex one we have our background which is gonna be white this time because we're not on the splash page anymore we don't want a giant blue background so there we go um and let's see we have everything we want imported cool yeah so i just copied this from the welcome pages style page okay guys now let's add some padding because uh you know with our splash page it was just one piece of text completely centered to you know the absolute center of the page whereas this is going to be you know we have our input field we have our button and as you guys can see on the screen right now the button is touching the edge of the screen so we're gonna have some padding to it um here sorry okay so how much padding yeah i'm trying to i'm actually for now let's just add some padding top okay now this is pretty cool this is pretty cool we're gonna actually access your uh phone it's screen height right so we're gonna say platform os oh now if this equals android what are we gonna do we're gonna say status bar all right height now what is this for it's basically doing the exact same thing that safe area is doing for ios right because like i said that save area it only applies to ios if we want to make sure that on android our text or whatever else doesn't intervene with the status area this is what we want to do we want to say padding top platform os if it equals android let's add some uh add some stuff right so so tenor i have a question yeah this platform where can we get that from like um yeah actually i forgot to uh import that okay so right here where we say react native mmhmm we're also going to say import status bar using that yes now we're using form so let's get that all right so from the react native library we can check whether we're running our app on is actually an android or something else but in case it's an android we can set the current height of the status bar or we can use that or either it becomes zero right because we're using a ternary operator here guys yeah inside of that status bar that we imported is gonna have its current height and then otherwise we'll set it to zero because we don't need any padding top for uh ios right okay cool wow i never knew this was possible okay that said by the way do we need this main view yeah do we need this main view by the way because we are in the style.pages right so do we need this main view because this is not the uh yeah we're gonna keep this okay but instead of saying main viewplex 1 we're going to say flex grow one and we don't really need those so we're going to say padding top and uh do we have rf value yes we do okay so we have our value imported we're going to use that we're going to say 60 and then padding now this is one of the things that i really really like about uh react native that i always miss when i go back to react padding horizontal we don't have to specifically say padding left padding right when we only want padding left and right or you know whatever we want to do we can say padding horizontal or padding vertical and it's going to automatically do everything we need and then justify content space between cool uh text style what do we want to do for our textile let's see we're gonna say um font size value is gonna be rf value 20 okay font wait we can keep that at bold and the color we don't want it to be white so we can get rid of that that looks good okay then let's copy this we're going to use another text style and because we have like the whole privacy policy and forgot password we can change those so we're going to say text style 1 we're going to change this to 14 and we can leave it at bold too okay let me see i don't really think we need the rest of this stuff and get rid of those okay and then let's see so we're gonna need a yeah no no go ahead go ahead we're gonna need a flex row view uh so let's create this so we're gonna say margin top that one's gonna be 30. and we're gonna say flex is your neighbor dying i hope not okay i don't even know what i just typed uh we're gonna say direction equals row that's what we're styling all right guys so so wait in react native you have to give it a row as a value because usually it's a default row value right flex direction yeah and react native even though everything is already default display flex it's actually defaulting to columns so it's reverse oh okay that's cool that's interesting okay let's go so we're gonna say flex direction row and then we're gonna say yes hitler yeah yeah i items i did yes let's go all right guys um let's start adding some of this i'm pretty sure this isn't all of it but we can come back to this let's start adding some of this to our login page right so what do we got what do we got go here style yes yes so let's uh scroll all the way up because we don't have our uh style page so we're going to go ahead and say import style wait where are you at where are you okay awesome yeah all the way at the top yeah import style from let's go up and grab our style okay all right so let's see if i hop back into the style we created we created container we created main view so safe area view we're going to say style equals oh yeah and this is this one's going to be our container so we're going to say style dot container and then our scroll view is going to be content paint container style equals and we're going to pass in style.main view okay now the content uh container style it's just a little bit different it's something that we pretty much just use on um scroll views because you know sometimes our scroll view will actually like ignore some style or whatever it doesn't really act like a typical view container so we're gonna say content container style okay we're gonna give it the style of the main view okay yeah uh and then let's see so the first text right here where we say sign in to coinbase we're gonna say style equals style dot text view or text style i think that's what we named it you want to check it it is textile we're good okay okay cool and then let's see review right here this one's going to be style equals um what did we say oh we haven't created this one yet actually so we'll say style equals style dot margin or set margin we can call it that set margin so let's go back to the style.js yep in the pages guys here in the style then here's set margin right oh sorry i thought it was going to help you but all good there we go cool so set margin we're going to say margin top and this one's going to be what are we going to do 15. okay i think we're going to style those uh input fields as well right we don't want to leave them completely blank and just nothing there so we're going to give it some height we'll say rf value and we'll say 45 for this one we'll do some padding horizontal right we don't want to touch in the borders of our phone and then font size this one's going to be rf value um 15. okay cool guys uh let's see what else we want to do we're going to say margin top so that the uh text areas don't kind of like collide into each other so we'll say margin top five sounds pretty good now let's give it a border now with with um with react native we can't just simply say like border one pixel all the idea we gotta say border width as a separate entity one border radius as a separate entity which i mean that one's always a separate entity anyways so and then border color right even if we give it a border with we're still not going to see it so we got to say color dot oh what happened here is this cool is it okay no okay so border color equals colors.medium gray but we didn't create that yet right so let's head back to the colors.js in the resources folder oh all right so i'll say medium gray medium gray i never know how to spell gray properly like i never know to use e or a if you know what i think i think i used i think i used a i did no maybe like i used there's there's t called earl grey right so that way you can maybe remember it because earl starts with e so earl grey grey we gray oh yeah okay so if you want to type in uh just gray in there the vs code live chair kind of kicked me out yeah aha like this or yeah well it'll be a string yeah oh sorry okay so so you'll have to reinvite me to the to the vs code live share oh really what happened i don't know i just threw up some random air and kicked me out oh no um wait i have to click this invite oh yeah i think this is working okay you got invited that's great medium gray let's see hmm it's not giving me any other you can just wrap it in a string and then oh yeah right like this okay easy peasy lemon squeezy yo you're back in the session grade awesome so now that we have medium gray what other colors do do we need um i think we're good for now yeah medium gray here for the colors so we can head back on over to the style.js for the login page right we're there now or right yeah cool so we just need one more thing this is going to be a button view we're going to say margin vertical and we're going to set that to 20. awesome so now let's head back on over to login.js and start filling in some of these styles yeah so actually yeah we i think we started off with this one so what i'm gonna do set margin text input style and btn view okay so we're gonna be importing that here or using that here basically yeah so the last one we did was on line 20. we said style main view mmhmm so let's see we said market margin oh right yeah we did set margin that was the last time we did okay cool so we can actually copy this set margin and we're going to put it on the other view as well that has our password section down here okay and then i'm just going to multicursor this so basically you know hold down control or command type into two places here so for our text for our email text and our password text we're going to say style equals um what did we call it we said like text style text uh style input or something wait let me take a second text input style okay that'll be text style one and then our input field here is gonna have uh the text input style so that's gonna be here and here as well yes okay so we added this guys on line 29 and also at line 38. okay cool let's go let's go okay um next if you scroll down to where we have all of those touchable opacities we can kind of start passing in some styles there as well so over here we have a overall view so we're going to say style equals and this is going to be style dot flex row view yeah that one okay and then style equals uh style.link style and this is going to be our touchable opacities so we can copy this and put it in the other one as well right guys okay so i think that should be did we make the link style already oh wait did we did we not because i don't remember seeing it here no okay let's uh let's create that we'll say link style okay um what do we want to do for this one we want to say font size rf value ah there we go so tender by the way i'm a bit curious about the rf value maybe you said it but why is it handy to use that is or does it have anything to do with the response font size library or yeah so the uh that long library name that we imported yeah what was it react native response yeah font size that one yeah uh pretty much that's a function that allows us to um well i mean it doesn't allow us to do anything because we're not doing it but it calculates um sizes mostly font sizes based off of the screen's width right right so if we're on like a iphone 12 versus like an iphone 5 obviously those screen sizes are way different so uh this function allows us to kind of have that generated font size so that we you know it looks proper oh sick whoa well react native is so clean it's like it's looking at things differently like over i would say like they're like a like a horizontal view of things you know what i mean so that you know with this library you can just set all of your fonts according to the screen you are actually developing now for for the iphone 8 that we use here but it's so responsive in this way because we don't need to think about how the font size should look for an iphone 12 is that correct exactly yeah right oh cool okay so let's go font size value rf value so this one's going to be 14. there we go okay so i think that should be all of the styles that we need uh let's log let's go back to login.js make sure we have everything there login.js we put in all the styles oh right here we need to say style equals uh style.buttonview yeah that one okay i think that should be it what is that error saying oh that error is trying to install the oh wait where i think we're where i think you're forgetting you're the import style it says unexpected token on line 11. yeah importing style because i said import style and then immediately said the file name yep there we go there we go oh that should be better now nothing none of these files exist to style the js which one this one the error is here fall style sheet okay so i don't think we went out enough enough um folders i think we need to go out one more yeah i think so two three at least yeah and then can't variable find variable tech textile one so where where is that set up oh this one is in a different hmm so where are we using textile one i would look it up like this because i want to know where it's being used okay so here it's defined but here in the login.js textile one textile one oh because i didn't say style dot there we go aha see and we need to change that yeah up there as well and here too style like this right perfect there we go okay whoa awesome works fast all right so now try to go hit the sign in button oh signing button let's see if we get the new style on our login page i'm going to click it now oh okay um all right what does that one say textile one can't find variables textile one it's it's being persistent so we need to reset it oh we need to re oh is that what it is okay we're gonna reset it okay can i not reset it by hard refreshing the emulator or something oh wait look i mean there's gotta be a way to request it on the emulator yeah i don't really use macs i don't know hmm okay okay anyways we have to kill it probably okay there we go well we haven't done this for a while actually for so that's pretty good so that said there we go iphone x iphone 8 okay this is also going well that's good no errors for so far okay so what's next tenor once we have the login page and everything uh once we can have our login page oh wait wait let me sign in i'm gonna sign boom hey let's go oh my god guys this is amazing look at this look at this we got the email we got the password we can even type stuff in here okay i cannot um give my email oop jesse well yeah kind of uh keep in mind like everything you know in react native it's it's all flex um and everything has been cascading down it's all been you know column view and then that part right there under the password is where we said specifically that we want it to be row and so that's where we have forgot password and whatever else right so that's where we kind of made that row view right right so that was flex direction okay where we had row indeed okay guys so that's here button content yeah that's actually here it's actually oh no wait it's here i think this one flex row view that's the one you're talking about here oh yeah cool and wait if i press this it should have that hover yes oh holy cow so slick guys and i can just paste things in here just like a real app cool okay i love it so the next thing we want to do is go ahead and create our create account page awesome so where where should we make that should we make it here also in the login yeah so this will be another example where we kind of see multiple imports from that index um giving that kind of good example of why we do that so we're going to be back into our auth folder and first thing what we're going to do is let's see we want to go into auth pages and create a folder for um i think create account so yeah yeah so off pages new folder and this is going to be create account there we go create account yeah and then in there we're going to say index.js yep and let's see so in here we're going to say import and we're going to import it from all right oh what happened here i don't think that's necessary i don't know what if bs code is on today but all right guys so then we're gonna go ahead and just uh export create account as default because this is the index that's inside of our create account folder okay we're gonna export it as default and then we're just gonna export it with our login as well yeah like we've done with all the previous components guys also with the login you know here export login as default so we're also doing that with the create account okay and then tanner just made a create account.js file okay also in that folder create account so rn f or what was the abbreviation you use um yeah so we'll do rnf so react native function boom so we'll just save this for now um to kind of prevent any fatal errors or anything and let's hop back into index.js in our pages folder or no wait in our auth folder so to give it really clear to you guys i'm gonna go in here okay the indexing off boom all right so we're gonna say import create account from pages create account and we're going to export both login and create account awesome cool so now we have our login page and our uh create account page let's see i don't think we need anything else there cool so let's hop back into our root navigation page root navigation page we oh all right so we're gonna say import login and create account now you guys can see that kind of effect that i was saying right so anytime we've ever imported anything from react we do this whereas typically with our own custom components we're saying hey go grab this from you know folder within folder within folder now we can say hey we have all of these components all of these log in and create account page they're all very similar we want to grab them from one area okay cool so now that we have that let's create our stack for it right oh so stack screen and then instead of login you're going to be saying create account right yeah exactly so we'll say right here let's see create account and right here create account perfect cool um honestly let's go back to the create account.js create a contact.js i'm going to i put on the the word toggle or toggle rep um where is the create account where was it where was it off pages here yeah so if we wait what is the error that we're getting couldn't find a component get component or children prop for the screen create account okay yeah so we'll probably just have to refresh the the simulator then yeah yeah okay in the meantime you can go ahead with the create account i think with the code let me make it smaller okay so yeah i was just gonna test it with this uh sign up text right here but we can just go ahead and start uh building it out as well right so we have our function based component we're gonna have to import some stuff from react native here so we have our view we have our text and we have oh my god i'm sorry guys i thought we could work faster but no going fast is never good like going slow is fast that's also what we tell our students by the way in the boot camp guys going slow is fast if you focus on the fundamentals of coding that's when uh once you have those fundamentals you can do anything like for example with react native right if your knowledge of react.js is really good how long would it take to to learn react native it's it's fairly easy you know um so here oh you have to see me later oh i'm still getting that error by the way even though i closed it that's strange so couldn't find a component get component or children prop for the screen create a count hmm create a concrete comment okay so we have create oh wait so maybe in in the root should we look for oh oh oh oh there we go oh no no sorry almost um does it give the same error yeah no it doesn't give gives another error actually uh no it is the same but it's in a different area root navigation line 16 is oh let's go see i thought i thought it would happen yeah great all right so the way that it was fixed guys the index.js inside of create account in that folder um when we said yes this file right here um we say create account uh default you know export it as default i had accidentally capitalized default so now we should be good awesome okay cool so well we can't go back from the sign in page but if you want to reload the terminal we should be able to see our create account page now oh oh so okay i have to kill it i'll kill it kill it and kill it with fire okay nba run let's close it first boom all righty there we go so in android you don't have to kill it at all well when i work on my physical phone you don't really have to i have to like restart it every single time everything every once in a while you'll get a persistent error and you'll have to kind of reset it like that but uh yeah you get a notification kind of like in your notification section where you'll actually just be able to reset or refresh the app oh it's handy to work from your phone then oh but hey look it works at least it doesn't break here at this point so that's always good then sign in once it gets started no oh get started that's why we have to reset it oh oh my god okay i'm so sorry guys get started because you want to create an account because you just got into the app okay that's the whole point of it okay oh my god i'm sorry but other than that guys what's the next once we have create account it will show us what we have to we also have would have to make input in like an email or a name right to create an account so how does that go yep so we won't touch up on the firebase authentication immediately but we'll come back to the create account once we have the dashboard created right right right right right right so here we go there it is all right perfect okay close it does hover nicely but it doesn't do what we want i think yet yet okay so let's see where that goes right right sorry guys uh we did not put in the button yet so which page was that welcome page welcome.js we're going to do welcome pages welcome.js and then get started first button here the get started button we're going to say on press equals and then we're going to pass in a we're going to pass in a callback function right here and this is going to take us to navigation.navigate and where we want to go we want to go to create account oh sick that is so easy sort of like it's so logical or once it's set up it's a breeze what so apparently on press upon well this is apparently a click with the thumb but then this callback function is being called guys and then as you can see it's so easy like navigation navigate and then you just call the component that needs to come up that you want to be redirected to holy that's so cool okay now that we have this set up don't we need to oh we have already navigation that's why you added that as props in the beginning oh wow holy okay um all right let's try to click on that guess started button excuse me oh now let's try to click that get started yes okay boom there we go pushed up into that status area but we do have that sign up text yeah because did you use that sign up text in the create account yeah exactly so we can also change that and say create account does it change yes okay wow perfect perfect so what we want to do because we have all this laid out we need to import a few things up here at the top so we already have view we have text we have safe area view so now what we want is to import as well uh scroll view okay and we need let's see touchable um let's see touchable and this one's not going to be touchable opacity actually it's going to be touchable without feedback so there's actually a bunch of different touchables that we can use well i don't want to say a bunch there's like a few so we have touchable opacity we have touchable without feedback and then we have like touchable highlight which i like i like the touchable highlight one to be honest it kind of highlights the entire background all right then we want text input right we need to be able to log in um and then i think that's about it awesome okay and then let's also import that button that we created so we'll import button from one two three oh yeah button or five question mark i think components well we'll see you soon enough if that we'll get the errors we'll get the errors all right and then import of course style from we will need to create all right there we go guys now all right we have everything that we need we have all of our different components we have our button the custom button we created and we have a style even though we haven't created that file yet okay so inside of our function component here we first of course need to get our props right and we'll create a const and this is again going to be our navigation so especially while setting up your react native app it's going to be a lot of the same patterns um but every page that you want to navigate away from any page that you want to have a button that leads to another page you'll have to actually uh you know utilize this navigation from the props now let's create a bunch of um custom hooks so we're gonna need we're gonna need first name so we'll say set first name oh we'll say use date let me import that for you at the top okay there we go perfect and then this one's gonna be an empty string as a default value okay cool cool what else do we need we're gonna need first name we're gonna need last name we're going to need email so set email and we'll need password set password and then jesse's changing first name to last name for that second line there yep all right so we have first name set first name and then so forth right um all of these are going to be just empty strings to start with next we can uh get rid of this view here yeah right because the first thing that we want to do with pretty much most of our pages is make sure that we have a safe area view we want to make sure that we're not going to intertwine with the ios status area yes scroll view next thing we want is scroll view even if you don't think you're going to have enough content to actually need a scroll view or actually expand past you know most people's screens it's still good to have because you never really know how small someone's screen is going to be yeah yeah yeah some people are still using like uh iphone five so true that is true then we're gonna have a we're gonna have a view here um so we're gonna have well the title of our screen i mean this is gonna be pretty much similar to setting up our login page so we're gonna say title um or text or rather and this one's going to be create your account all right now let's create a view under this this is going to store our um our labels and our input fields right so let's go ahead and create a text and this one's gonna be first name and then we're gonna go ahead and say what do we want here what was that component called text input right so we need text input self closing and we're going to say value equals that uh that variable the first first name variable okay guys and then we're gonna set the placeholder so we know what to type in here um and this one's gonna be first name or whatever you want right it could be john smith oh wait first name so we only need john there we go all right and then we're gonna say style equals style text input style okay now we haven't created the style page yet yeah it's going to be a lot of the same stuff okay so can we also this view or with the import can we also steal that from the log from the login or i mean we'll just copy everything over okay because i think it's best to kind of keep everything pretty local kind of like when whenever you use like css modules and stuff keep everything pretty local um especially with when it comes to react native right so for this view we'll say um style.set margin voila okay yes what else do we need here so the safe area we're going to do the same thing that we did before we're going to say style equals style dot container okay and our scroll view remember guys this one acts a little bit weird so we're going to say style uh or content container style right and this one's going to be main view main view huh yeah so by the way standard i'm wondering about this prop like why does it have this specific name because i don't remember you using this one right or am i am i asking a weird question i think we used it in the login page um we use it in one page yeah so the scroll views are just a little bit weird sometimes um you can apply direct style on them but just you know because it's just in general uh a strange type of component so you have to say content container style and it's pretty much gonna force it to take whatever style you pass into it right right right right yeah because we are using it in login as well indeed and okay let's go to the next view what kind of style does it need um so that one we don't really need a style i think we're good there um and then this text we're going to say star style equals spelling style dot text style okay good good good text input good okay and what do we want here we want to update the first name so we're going to say on change text and again right we need to make sure that we have a callback function here so we're going to take in the text i mean this this by the way is just an arbitrary label guys right this could be anything it could be the event object it could be whatever we want to say yeah so text uh and then we're gonna go ahead and say set first name we're gonna pass in that text cool all right so that's one text area we can go ahead and kind of copy this view yes so you guys we're going to be needing last name for that email and password with those views yep so we can kind of just go ahead and code all of these out this one's gonna be set last name there we go yep good yeah good good good looks good to me we're gonna set email and we're also gonna set password email set email password password perfect there we go so now we have all of our sections right guys so i'm gonna go ahead and you know show the title of the page create your account uh text or the uh first name text input for the last name email and the password cool let's see so i think all of those are going to pretty much have the same kind of style so that's good and then we're going to need one more view underneath so this can actually be in a separate view down here oh so that is outside of the of this view right okay great so this is gonna be one of our custom buttons all right guys so we're gonna say well first let's say for this style equals l dot button it's going to be start with disabled and it's going to be false okay so now what we need to do oh look look look look look oh hey it's there hey let's go create your account okay guys just like we have we made here oh you know what i just realized it is sharing the same style file i don't know why i didn't realize that but the style file is not in the same folder but it just did you yeah it's going back up so we don't even have it inside of the login folder it's actually just shared between right smart smart smart smart smart very clean because so guys here look create your account okay that's what happens here oh i can even swipe it can you see that so but first here first name last name email and password and the button has start just like tanner made here at the bottom this one here that looks sick oh okay cool let's go so what happens now if i would fill in some data in here and i would press start what would happen what should happen so right now we don't have anything really linked up eventually we're going to get some firebase auth kind of linkedin so that we can you know actually start creating some accounts and then we want the button to have that uh that navigate prop that we always have and we want it to push us to the dashboard right now we don't have anything linked up yet so okay okay well maybe that's also something i know you want to do now or maybe we should do it later i think that's going to be after we create the dashboard so right now let's go ahead and start adding um well we have one more piece of text that we're going to add okay um so let's see okay so let's see so kind of like we did with our login page we're going to go under the password field under the password field uh wait the login page the login create account page oh no okay i was in the right i was in the right file okay good where's the password password is here so under here or so let's go ahead and um just like we did with the login page we had you know that kind of like uh forget forgot password and policy stuff so what we want to do is kind of have like the legal agreement type ordeal right so you know if you're 18 yada yada so we're going to say view here and in the view well first we're going to style it so we're going to say style equals l equals style.section and i don't think we've created this one yet so we'll have to go back and create that and then we're going to say used to be capital so capital text there we go um and this is going to be i certify that i um 18 years of age or older right yes and and i agree to the okay and we'll leave it there because what we're going to do is highlight some of the other text to be blue okay so this is still going to be inside of the same text field or text area we're going to go ahead and create a touchable without feedback without feedback and in it we're gonna have kind of like a secondary text field so let's give it a style we're going to say style equals and let's see um so we already have a bunch of different text styles so far so we'll say style equals uh link style 2 that works mmhmm for sure it's going to be user agreement okay yeah so what does this component actually do attachable without feedback so it would allow us to kind of create those custom style buttons or custom style links without having to use the default react native button component that we can't style but also without having you know too much visual visual feedback right so we have the touchable opacity which you know we can change the opacity to but then we also have a touchable highlight which would basically have like some sort of background that we can assign um detachable without feedback is usually used for like links so in this particular example we're saying halfway through this paragraph user agreement it's going to be blue text you're going to you know that implies that you can click on it and take you to whatever user agreement you know maybe it's pdf i don't know some sort of website so it'll be a link uh you don't really need a feedback there so okay cool cool that's explained that's thank you for that explanation okay let's keep going use your agreement what else and then we're gonna say and and let's copy this touchable right um and we're gonna change this one is going to be saying the same but we're going to change it to privacy policy there we go how do you spell policy like that for sure all right that's pretty much it for this section now what we want to do is go back to the style.js inside of our auth folder mmhmm floor pages styled scs this one i mean wait wait wait which one did you say this one right yeah yeah that way perfect so let's see so we have textile up here on line 17 right so kind of just to be a little more uh direct and keep everything together we have textile textile one textile so we're gonna add text off to here okay uh this one is gonna be flex 1. we're going to go ahead and set the font size we're going to set it to again rf value right guys and we're going to say 15. let's set the color to colors dot medium gray now this is going to be that entire text area that we just added so we want it to be wait what is this why does it keep doing that yep all right yeah so this is going to be kind of like that uh you know disclaimer text or small print or whatever you want to say it's usually some sort of smaller light gray so that's how we're going to see that and okay so now we want to add the link style to and where did we have the link style before here below so i have link style at the bottom let's just copy that and this is going to be the second iteration and we're going to just make it a little bit bigger than the last one and i think that's about it that should be good awesome and then if you guys remember we created a section as well so we're gonna say section here and this is gonna be a margin top of 20 with a flex direction what of row right because by default we're already in column with react native so we want to change it to row at this point we should get the text showing up and we shouldn't have any errors so let's see oh there we go there we go okay we need some spaces but yeah but we need some spaces but other than that it works okay and the links okay they don't have the i thought they might have to hover but other than that i have the feedback because we said touchable without feedback um so there's gonna be immediate links to whatever you know you would link them to um but yeah we can add some uh so let's go back to create here we can add some like spacing there so the overall is called style section and then let's see we just give you the space oh those spacings yeah definitely definitely um but i forgot wait is it right here yes i forgot to say aha this is going to equal style dot text style two okay oh yeah there we go so now we're gonna give you a great text yes it's a little spaced away from the input as well and it just in general looks how you would expect so it looks pretty nice looks pretty clean okay cool cool so what's next this looks really clean like this component is complete right just create an account component or do you need to add something else to it no i think that it looks good man it's clean it uh pretty much is finished for as far as this one goes right so later you know we're gonna start kind of implementing the firebase authentication as well um right now you know we could just basically send it all the way over to the home page um once we start creating the dashboard just so we can get everything built out before starting to implement uh you know authentication and redux and all that stuff okay so yeah we can go ahead and add the dashboard to the stack navigator okay um yeah let's do that as the last part okay because um yeah okay um the stack navigator so root navigation okay yep so guys at the top here um and again just like always we haven't really created this file yet but we're gonna say dashboard over here dashboard and we're gonna say from and we're going to grab this from the screens and we're going to have a home section okay now for now we can just comment this out and then we'll come down here copy this stack paste that in change this to the name of dashboard dashboard and this one as well wait is that what i called it yes yeah yeah yeah that's what you called it there we go all right and then comment online out as well so this is going to kind of be a save spot kind of a a clean close right so we have our login page we have our a signup page we have everything ready to get into the app and then we're gonna start building out the dashboard the authentication and everything else and actually viewing the cryptos and their pages and their graphs and all that cool stuff yeah amazing so i think we're gonna be this is where this is what we're gonna be ending with right tanner so i think this is it for today guys i hope you really liked it please smash that like button if you like and of course if you're interested in joining our full stack mastery bootcamp okay our eighth month online really really cool fun boot camp okay whereby we teach you how to become a full stack developer please click the link below in the description to book a session with us okay and i'll see you there and other than that thank you so much today for for tanner for doing this with me it was super fun and we'll see you guys next time bye all right bye