but the last stream ended up getting cut off and it was it just was kind of heartbreaking hopefully this one is gonna work but I don't really know where this is streaming though like it's an absent one I know but that's from Facebook it's actually not streaming to YouTube because on YouTube you would have to create a whole new event it's not streaming is it on YouTube or we live on YouTube we live right now we're on youtuber live we're live okay guys so nice we're getting some people back also I don't know what happened guys the live stream broke and it also broke our heart but we're on part two and we're just finishing up this is where we're at right now okay look look we've finished we so far we set up the react app using Create react app we set up firebase we set up react router we build the navbar we built the banner we built the product component we introduced react context API we set up at the basket button we build checkout page we even built a subtotal component and right now guys we are at the part where we are going to add the login functionality and then deploy the app so with that said let's get right into it let's do it let's go what we have is we have the login page right here and we basically want to now let's go ahead and style everything and then what we gonna get connect firebase to our react app okay so in order to do that what we need to do now is go ahead and so if the firstyears Connect firebase so I'm gonna go ahead and create a firebase yes so firebase dot J s yeah and basically why now inside of this snippet what I want to do is I've got a nice little neat little piece of code that you guys would have seen in other examples so firebase so here we go so I'm gonna go ahead and we need all config so right now if we go into firebase com Kazi hello yep I'm here so if you go on to firebase.com all my bad my bad okay here we go you know I just complain my babies are Frankie all right all right five days calm and this drop in the config oh yeah I got that I mean I have a copy since the start of time yeah so we just need that at this point now so we basically want to paste that in here oh nice awesome there we go and basically what this is gonna do guys is we need to go ahead and in the terminal now we need to do NPM I firebase so that will install all of the firebase dependencies so if you're going to go ahead and do that cause II so NPM i5s also we go yeah so now we're gonna do is this watch hockey bass keeps asking this question we should probably answer it he says what if there is no connection when developing with firebase is there some kind of emulator that runs locally yep so if is if you're regarding your so for cloud function so any sort of service work yes there's an emulator for database I believe there is an emulator for database they have a lot of support for offline so even if you have set everything up and then you start pushing it they are into your database it will actually sort of queue it up so it will queue up all of the pushes and a really really clever way and then when you get an internet connection again it will push that to the database and we even sync this off timestamps it's really clever how it does but they do have a bunch of emulators yes they do good question so now what we're gonna do is we have all of the keys so we have the keys here and let's go ahead and we've got so these two things right here at the bomb are basically setting up a database instance we don't actually need the DB right now we can go ahead and get rid of that we need the authentication so here firebase toss okay and what we're gonna do is let's go into our login ojs and let's go ahead and stop so what we did right there guys is we actually just connected firebase to our react frontend so it's that simple okay it's really that simple to get that working so what we're gonna do here is I'm gonna basically going to add a class name so we're sticking to our BEM naming conventions for saying class name login and here I am saying I want to have firstly I want to have a link at the top so I'm gonna copy a snippet here I want the link at the top to basically be it's a link that goes back to the home page and it's gonna be an image and the source is all this is guys it's a link to you it's an Amazon picture so again I'm gonna double line it so you guys can just copy that if you'd like so I'm gonna double line this right now so there you go you see that all on one page so you can pause it there and you can copy that out so this is essentially just all it is right there is actually just the I'm just opening up one my local so that is actually right now is the Amazon logo so you should be able to see Kazi that you can see the Amazon logo somewhere are you ready the NPM stop oh yeah yeah here we go somebody said this spent five hours today on creating a nav bar with flexbox awesome it's that logos up nice awesome nice so what we're gonna do now is go into login doe CSS and make that not look so ugly so cuz that looks really nasty right now so I'm gonna go ahead and where we have that at the moment I'm gonna say width so I want that to be a fixed width because we don't ever want it to get bigger than a certain size so login logo and I'm gonna say it is a width of a 100 pixels so with 100 pixels and here it is object fit contained so again we're gonna keep the aspect ratio and what I'm doing now is I'm adding a margin left and a margin right of auto so that it centers actually front for now just leave it there just leave it like that for now what we're gonna do now is so we have the Amazon logo right I'm gonna show you very clearly how we do this so we have the Amazon logo here and then I'm gonna have a container so I'm gonna say div don't login container and this is gonna have all of the forms and everything that we're gonna have so the sign in so inside of here we're gonna have a h1 which says sign in so sign in and if you save that you should be able to see it on the screen to say h1 sign in we're gonna have an email so here I'm gonna say h5 let's just we're trying to build this form here exactly that you know cool so now I'm gonna say so before I actually have this I'm gonna say forms I'm gonna surround the whole thing inside of a form so that way we get that whole inter functionality so here we do this and we'll say email and I'm gonna have an input field okay and then I'm gonna have another h5 and I'm gonna say I'm gonna have another h5 and I'm gonna say password so it's gonna be password and here I'm gonna have another input phone so I'm gonna copy that paste it and save so now we have rough outline of sort of some email and password login stuff and then what we're gonna do is actually have a signup button so you actually wanna have a button underneath that so button and this is gonna say sign in okay so we have the button to sign in so you can see we've already got like an outline for a sort of basic signin form okay it's very simple and on Amazon's website this is a little bit of cherry on the top so we have the form and they basically have this where it says by signing in your agree terms and conditions of use and so blah blah they just add that little authentic I was in touch my even yeah yeah you know like once we get it styled right it look really nice and then we have the button and here we'll say create your Amazon account exactly so cause he just showed on the screen and what our I can go so this is how it looks right now and let's show what it would look like after yeah so we're gonna go from that to that you know so let's go ahead and start that so right now we have the login the CSS so the first thing I'm gonna do right now is go ahead and go to login so here and I'm going to style it by giving it a background color of white because right now it's on a gray background so I'm going to say everything should be white right so that should have actually Scalia everything should be white but I need to give it a height of a hundred view height so that will actually calculate how big your screen is and then it'll give it a white background right so here that should have popped in so you should see a white oh yes is that white background you know it's a display flex let me do that first so say display slacks and that's also dear so if I do that oh these stars getting applied as I think now so right now the stars aren't actually getting pushed onto there so let's see so we've got login I've got log into CSS Logan no CSS 100 view i lastname login pulling it in okay again went if I change this 200 and fix 50 does that change now why is that I'm not sure we're not doing NPM NPM stuff we are doing NPM running way yeah we're running okay so let's go ahead and change something else then so log in container let's go ahead and start styling that so let's do this and we'll fix that in a second so log in container they say the login container should have a width of 300 pixels because right now that text is way too long so if I save that see if that restrict okay so it is applying styles so we'll get to the bottom of why that's happening so right now 100 view high I'm saying display flex and I want to do flex direction column because I need to basically I want to have have everything in a column so we'd use that and then I want to say a line items in the center so I should walk so that's really straining me debug this quickly one sec so what I'm gonna do by debugging I'm just right clicking I'm clicking inspect and I'm just checking to see that my class names were added so right now nothing was actually added for the class name login so it's interesting because it's not actually picking up that that class name and that is because oh okay there we go yeah so this is a very easy mistake to make guys he's here as his class name the capital and so before it was this oh yeah is insane right Chaplin yeah yeah so and now if we do that it won't make it gets the stars that we had it yeah oh yeah Lauren caught that he's like class name type oh oh nice that's amazing I love that there miss miss also caught that awesome that's nice to see everyone's like clued into weewee when says are you a web dev are you okay so we've got the log in now so what we're gonna do now is we've got login logo right but that's touching the top I don't want it to touch top because it doesn't look very great so right now I'm gonna add a margin top and bottom of 20 pixels so margin top Obama to me pixels and you'll see that it gives that gap at the top which is what we want the width is good and what is a good okay so now what I'm gonna do is I want to style this inside of this box all right so the first thing I'm gonna do is for the container I basically want to say the I wanna say display flex so I'm giving it a display flex and that will put everything inside of a row so you'll scrunch everything up right which is not nice so we want to basically say nope make it a column instead so it's its column so now everything sort of using the Mac space they can we want to say that the padding around everything should be 20 pixels because we want to kind of Pat it in a bit and if we want to say they should have a light gray border so a light gray border around it so there you go so even just adding a little border immediately sort of makes it pop a little bit more and the height we have to fit the content okay so now I'm gonna do is or the height actually didn't change anything so we can get rid of love so now what I'm gonna do is I'm actually gonna use some I like to show different ways of using CSS selectors so previously obviously what we could do is add class names to everything but I think it'll be beneficial to you guys to see how I can target things which you like direct children of this and like first child of something else so in this case I want to target all of the h1 elements so for example this one the signin element right so in order to do that that's inside of the login container so here now what I'm gonna do is I'm gonna say login container the first child which is a h1 so like there eh one child of a logging container I want the font weight to be 500 and the margin bomb to be too many pixels if I saved that look what happens it finds it and it stars it you know and what I'm also gonna do now is show you how you can also do nested so like for example here we have a form and I want all of the h5 elements to be styled so I but I want to basically only use this class name to style them so I'm saying go and find the login container go and find the child which is a form and then go and find the h5 element as opposed to giving every single thing a class name so I'm showing you both ways as to how to do it because I find I think they'll be useful to everyone so now I'm gonna say is there some saying go to login container go to the form beneath it and beneath that form get the h5 and I give it a margin bottom so if I save that notice how everything should get a little spacing all right I'm gonna do the same thing for the input now so if I go here I'm gonna do the same thing so I'm giving the input fields a bit taller because right now they're too small give them a margin bottom so it doesn't touch the field below it too closely but a white background and a width of 98 and the reason why I'll show you 98 in a second is it will make sense because right now there's some padding to consider around the the sort of input fields and as a rather than adding padding and things like that 98 perfectly aligns with the current Amazon account bun so we can just go it up and it works pretty nice the next thing we want to do is the P tags so the P tag I'm referring to is this disclaimer so what I'm going to do is basically add a margin to the top so it's not touching that signin button and I want the text to be a little smaller so what I'm gonna do here is go ahead and start that so we've got the margin top of 15 pixels and the font size of 12 pixels here so if I add that there you go excited to come together and the Sign In button and the register button are the last two things and I will go ahead and give them classes because we've got a few of those so I'm not going to just mess around too much with those buttons so in this one I'm going go ahead and give this one login signin button and for the register button I'm gonna go in and give this one this log in register button okay and then what we're gonna do is I'm pretty much gonna apply the exact same styles that you saw earlier to the buttons but so the first one I'm gonna do is a signin button so this is a snippet of what we've seen earlier so remember we had that gradient border color we had that background orange and these are the same values that we saw earlier so you can save this and look what happens to that sign in the signin looks immediately Amazon like it looks like the Amazon saw signin button right so it's really it's time to look there and then what I'm gonna do is I'm basically gonna use similar styles but I'm gonna not have the background color so I'm gonna do that for the register button so now if I save that you see we get like a very nice contrast we get an immediate signin bomb which is the sort of call to action that you're gonna you want the user's attention to go towards but if they don't have it the secondary function is to create an account okay so what we can do at this point is for the input type here we can do email and for the input type here we can do password and for the button as it's inside of a form we can do type is a submit alright and that will give you that sort of typical form behavior when you click enter it will submit and what we need to do now is hook up two functions so I need an on click login and an on click register so here I'm gonna have on click on click and here I'm gonna have login board when they click signin right and then the other one you're gonna have for creating an account exactly so on click here would be on click is register okay so these are gonna be local functions so I'm gonna go ahead and create them at the top song as a const login takes an event and i'm gonna do a dot prevent default because guys if you have a form and you submit that form it's gonna cause the page to refresh so in this case if I click signin it's gonna cause the page to refresh and react we hate refreshing so we get the event that gets fired off so here this is actually an event so I can rename it to event and you do prevent default this will stop the Refresh so this stops the Refresh so you have to include this line yeah and then we're gonna say login stuff so do login stuff to do the login logic yeah so there we go diligent login logic there okay then we're gonna have another function so I'm going to copy this and this is gonna be for the register and this one again it would be prevent default do the register logic okay now this is where it gets very crazy as to how powerful firebase is okay so the first thing we do is go over to our firebase console you know over 205 sponsor and go to authentication alright so go to authentication and on in order to get this working like we need it basically if you go to signin method and go to email password and just enable it's that crazy guys if you just enable that and you click safe like it's lit every other platform authentication is like takes forever and here is like just going able it yeah it's insane how that works so we do that and now what we're gonna do is that's all that we need to do on the backend so we go back to our code and this load up localhost on the right so people look what's running awesome so what I'm gonna do now is I'm gonna say for the login Lord logic I'm basically gonna have it so that we do Aust so remember what I did in when I stopped the firebase so when I saw a firebase ice we exported this earth module and this is everything that we need in order to handle the logging in logging and that stuff so now what I'm gonna do is here I'm gonna say auth dot so I have to import that firstly so I'm gonna import that from our local firebase so here I'm gonna say auth dot and then basically we have this amazing function that's built into firebase and it's called Auto sign in with email and password so it couldn't get any more straight for guys like here and what we're getting is but here we need the email and we need the password right we need the email and we need the password oops you know on the parser but we're not currently tracking this from my input our inputs right so we've got the input here and input here but we need something to keep track of that so basically before we do that we're gonna use something called state inside of react and the way we do that is basically the shortterm memory so here I'm gonna set up a variable so it's basically how to write variables in react so here I'm gonna write a variable which will represent an email and that we need a second method that comes alongside it and that's called same and that's how we update the value here we say use state and the initial value is blank okay so I'm gonna do the same thing for the password and if you want to look into this more there's the react Docs for this is for the use state hook the react stalks are amazing and they pretty much explain and give you examples of how you use the use state hook and it's really really gonna help you out so now if we go over we need to import this so I do this you stay and there we go now I've set up two pieces of state now the magic here happens I love that comment man this 1000 is underrated thank you so much so now if we go to the input right so we need to map the values here so the first one we're gonna do is we're gonna map the email value here and we are gonna map the email the password value here so your password so if you just try and type in cozy notice how it's not going to let you it's not gonna let you change anything so if you try and type in and while I type in yeah it's not like you type in right yeah okay so it's not like you type in so at this point what we need to do is because it says usual Oh whoo ha ha useful so that we've mapped it but the the value is blank and it's constantly being mapped out so we need to listen to an unchanged so unchanged is the magic and basically what we do is we get the event and we say every time we type in we're gonna say set the email to event oops event dot target dot value what this is basically saying oh come on event dot target value there we go I'm gonna tell you the value and basically what this is saying guys is that when you type in I want you to basically go and grab the latest food that was in there and push that into the email variable and rerender and do all this or clever logic that needs to do I'm going to do the same thing for the password so what we're basically saying with all of this is that now we have to react variables so which are basically stored in the state and these two variables are going to contain and keep track of what is typed inside of those impact fields for email and password now once we have those we can actually carry on and do what we were doing before so we can say auth dot and then we can say sign in with email and password because now we have the email and we have the password because we have these two variables up here right and what we can do is we can say so if everything actually works then it's as simple as just saying dot then and then that will give us back some kind of authentication so it will give us some kind of object back right we don't really care about what that object is at this point but then what I'm gonna say is here logged in so here you logged in successfully so we will actually want to redirect at this point so redirect to your home page okay and then here what I want to say is if there was something wrong catcher and because right now we just wanna we don't really care too much by the front and we just wanna say a lot so this will pop up a sort of like the sort of browser pop up and it will say Allah II don't message so just show a message from firebase so for example if you logged in and the credentials are wrong or something like that it will pop up with that now for the register we do something very similar so we say auth dot but here what we say is we could say create user with email and password and I passed an email and I pass a password but here what I do is I say then and I say auth because we basically if it's remember guys then is when everything goes well it's when you things went well and nothing broke so here I would have said create a user and logged in so that's what happens when you do this so here we would do the same thing as we would say logged in redirect to home page so again here I would say logged in create a user and logged in we then want to redirect to the home page okay but if anything went wrong we say cat chip so catch it and again we just want to do this where we basically a lot on the screen in a very simple easy way now that's literally all we need to get authentication up and running but with that said there are two steps now that we want to do one is the redirect we need to fix the redirect okay we need it so that it redirects to the home page if everything went well to do that that's the first thing we're gonna solve to do that react rule gives us a really nice hook okay cuz there's a really nice hook could use history so step one is redirect and also just to sort of clarify step two is going to be listening to sort of listening to if the user logged in or logged out and basically pushing that value into the data layer so listen to login let me up listen to login and we want to push it into the day Allah you know and I'll show you a really nice way that we do that so here we have the use history right so what we're gonna do now is we are going to say so the first thing to get this variable working you just say Const history equals a used history and for those of you who are familiar with browser history or like any sort of redirecting usually you push into the history when you want to redirect so here all we need to do is as simple as saying history dot push for slash and that will actually do it so a reason why we push here instead of doing a replace is that say for example when you click the back button on the browser we want them to be able to come back to the login page so you know that that natural behavior all right so we're gonna save that and I'm also gonna do the same thing here but notice how we only do this redirect guys if nothing went wrong so only if we land in the then block right so only if we land in the same damn block so only if we've successfully logged in do you want it to actually happen so that's step one so we just solve the redirect so this will actually redirect us now okay but what we want to happen now so is it will log us in yes but do we one know that we're logged in or like how do we how do we go about that because it will log us in and then even if i refresh it will actually still be logged in but what we need now is we need some kind of listener which is going to always listen to that log in log out event and if it does we need to update our data layer so that we can then keep track of what's going on okay oh yeah cause the happy birthday in the UK bro yeah thanks oh it's exactly howdy thank you bro I appreciate it I'm 26 now yeah nice wait how old are you I'm 25 I'm turning 26 in September after me huh that's it no ma'am no does that break after this damn Wow I mean it's gonna happen in eight hours is my birthday in California here but like that's funny that in different parts of the world because somebody else wished me to yeah that's why I realized cuz here it just ten twelve o'clock yeah though yeah it's yes 12 it's midnight guys so I just want you guys to take a second and just think sunny in the comments below because it's a midnight his time you guys and he's been out here grinding and streaming since what I'm almost six hours straight we're almost about to go into six hours straight so guys just let him know how much you love him and appreciate him for being here and coding and building this entire thing up for you guys cuz that's really awesome dude no I appreciate that I did and this here is it's crazy to be able to do this stuff and like the fact that so many people watching and getting involved and commenting and engaging with us it's amazing so it's really really nice yeah this is awesome people are saying happy birthday damn well true hybrid defenses thank you guys I really appreciate it Steve that was interesting he says he has spent 35 years as a developer he mostly uses typescript which also you use sunny yeah I use have yeah and then he's like react react native and preact I also coach and teach saw one of your videos the other day and I would recommend your channel for new devs thank you Steve yeah this channel would make is great for new devs and I feel like people who are probably a little bit more experienced but you know somebody would have seen five years of experience you know maybe they'll still pick up some trip tips and tricks that Sunny's got definitely and then guys like it doesn't matter if you knew all your experience I always find even if I if I I don't consider myself an X bio in react I always keep going with a with a sore beginner mindset and try and like sponge in and just learn everything I can which is awesome Matt one says honey love and appreciate you love you too saying it you're the best thank you so much Tyrone Sonny you're a legend I love that yeah that is on it all right yes okay this is awesome nice all right that's awesome so we have the log in thank you so much have enough nice so we have the yep so we've logged in right so we need a listener now all right we need a listener and basically is where we put that is inside of apt ojs so let's go over to apt or Jess and basically the reason why I put it here guys is because now you can actually see what I meant by keeping things high level right right now at this point we have every single thing such a high level we have the routing and then we have pretty much at this route render this and this this route render this at this we render these two is so clean like it's really clean intimate so maintain and come in and figure out what's going on at what route right so what we need to do now is basically we we are going to use a combination of two things we're going to use a so first thing we need the data layer so let's pull that in so we've got the data layer here so let's go ahead and do import like that so we've got the data layer and let's go ahead and we don't actually need the basket here but I'm just gonna leave it there we're gonna have the dispatch we do need the dispatch and guys what we need right now is we need the a user fact we need basically we need a piece of code so I always expand it this way we need a piece of code so a piece of code which runs based on a given condition okay so this is what we call a user fact hook and this is tremendously powerful guys like this is seriously powerful and you should definitely learn this a user fact is going to be your best friend when it comes to understanding how to rewrite classbased components into functional component it comes in really handy when you start doing that but right now I'm gonna say use effect and this basically takes a it takes a function so let's go ahead and here and it takes a function and the second argument is the dependency so here if we leave this blank it's going to run once when up come the app component loads and then it won't run again okay so it's gonna run one minute once when the app component load and it won't run again if I put basket in here for example it's going to run once when the app component loads and then every single time the basket even changes right so that's gonna be a really big deal right and that's something that we need to remember and sort of keep them keep in mind so let's go ahead and now I don't want the basket now I just went to run once and the reason why I wanted to run once is because I'm gonna create a listener which is going to be listening all the time to if the user signed in or signed out okay and if we was to create several listeners then it's going to actually sort of is going to become quite expensive and it's going to actually be it's going to slow the computer down and just make everything solve it's gonna make your browser just freak out and it's gonna make chrome go a bit crazy so what we're gonna do now is we are going to do this we're gonna import our Earth module from firebase so go to top and import that and then what we need to do yes so somebody who said a good thing if you use a return and you use effect and the result of that will run when the component is unmounted we yes that's very correct so if you return something inside of a use effect when the components of unmounting sort of refresh rear Enders it will do a cleanup or any sort of cleanup that you need to do so we are gonna do that here we're actually gonna do that very very like very look quite like quickly now so here we have auth and then they have a very handy listener function and it's called on earth state changed now this is what's so nice guys we are logging in and logging out in a completely different component like it's a logging component and log out component it's completely different there's no sort of login logic in this Wow all right but it's inside the Same Same Same project so it picks up but what we're gonna do is every time the authentication state changes we basically say get the auth user so it gives us something called auth user yeah which is basically we can name this whatever we want but that's what it essentially gives us back so it's an authenticated user now when this comes back what we need to check we need to say if there is an auth user then the user is logged in so the user is logged in so you can do whatever you want to do at this point else the user is logged down so that's how you basically determine with this list now if the user is logged in a logged out okay now what we basically need to do at this point is say what we need to do is point is basically all we want to do is say so inside of reducer so inside of all reducer let me go ahead and clear this basket so remember we added these products we can go ahead and make it an empty basket to begin with we've already got this initial blank user okay we're going to initially got this initial blank user I'm gonna go ahead and create a new case so I'm gonna say case and I'm gonna say set user alright and this one is going to be like the only the only purpose of this is going to be to update the user when they login or when they log out okay and what this is gonna do is just going to return the current state so that's how we do this we return the current state and basically I'm gonna set the user to whatever the action dot user was so if it came in as no it would set the user to no inside of the store if the user was authenticated it would set the user to whatever the authenticated user was and that would be then in the day Alea for us to use throughout the the componentry so I'm gonna save that and then I'm gonna go over to apt oh yes so now here it becomes quite simple actually all we need to do is dispatch when we login so dispatch and I'm gonna basically pass an object here and the first thing it's gonna be type sunny you have a perfect British accent hey hey it's proper very Shack so here we need to do is need to say set user and I'm basically gonna say here I'm passing a user right and the user lam passing here is auth user because that's the one that we get back and I'm checking if it was present so I'm saying if it was present just set that response to the user object and then that way we get all of the sort of stuff so a lot of people are asking if we're using Redux in this project we're using we're actually using react context API as an alternative so that's answer that question so here we do is if the user is logged in we basically push them into the dialer else when the user is logged now we're basically going to dispatch the same thing so the same thing but we're saying the user to know okay so that's a really important point now we're saying the user to know and we need to also import user fact so let's go ahead and do that all right there we go so we said used to know so I hope this makes sense so when we login we're actually pushing the user into their lair when we log out we're setting the user to know okay and now remember guys when I said like if anything changes or for some reason it renders again what we need to mean to clean this up so this listener actually returns us something called an unsubscribe which is very nice how Google have done this why it returns or something good unsubscribe and what we can do in in in react which is really nice with these hooks is the user fact hook has something called a cleanup so you just return something from the function so this is how you do a cleanup so any cleanup operations go in there go in here alright so like even if you had a timer you would you clear the timer here or whatever you want to do and basically all we're gonna do here is just say unsubscribe that's it they say unsubscribe and that will detach the listener and then like say for example if this a prerendered for any reason it would a detach it and then reattach it with a new listener and it would do everything okay so what the now means is what we can do is we have both parts of the equation right and Daniel Dukas as well we encode thank you very much it's very clean way of doing this so what we are now going to do is we have the and this is completely decoupled guys so it's really nice and login Jess we have all of this login logic and it's completely separate the app digest because here we have a listener see see that's the way you want it you want it in completely detach and so that is not going to be attached and sort of two coupled or tightly coupled we call it so with that said now we why do I always do this to just check if everything is working what we can actually do here is we rather than getting the basket from the state I'm actually going to go ahead and get the user in the state okay and I'm gonna console.log the user so I'm gonna console.log the user so I'm gonna post love the user so now Kazi if you could so if you could just go to the actual so bring up the console and let's go over to yep so we're in the console and we should see now that so let's see the console we should see now that we have so I'm gonna go ahead and add a debug statement so I'm gonna say something like user is I'm just gonna do this and say user is this so what we're gonna do now is if we yeah so user is no can you see that right so as a user is oh right so we're not logged in right now and you see that's at the apt yes that even though we're in the login come on so now what I want you to do is if you could just enter an email a password and click create your Amazon account because remember if you actually create signin for a click sign in first and you'll see it doesn't do a redirect so so firstly it says the email just is badly formatted which is great because that's actually firebase coming back and it's at that catch statement so what we just saw there was at this point we saw the catch right so if you go ahead and add the and add the password so ABC ABC or something click sign in first so you see there's no user record so the user a million so nice that came back from fibers but if we could create look what happens it's signed it logs in right so it's actually creating an account it's logged in and if we scroll down into the into the console you'll see that the user is no longer no you can see the user should be so let's go down the user is yes and we got an authenticated user now and what's really cool here guys is if we refresh that listener will pick up basically I'm sure it stores it in the cookies but you'll see now look we actually have the listeners still logged in so the the person is still logged in right so it is very very nice ok so now what we are gonna do is that that's crazy right like it really works clean and that's as unbelievable and I if you click that and you so click that object and you'll see inside of it you've got a bunch of weird stuff I mean we don't really need to know too much of that but you've got inside of it you want email do you have the email things like display name which we used in the Instagram con but you've got the email they right you've even verified yeah yeah which is crazy right mostly cool so I'm a node says he's gotta get asleep and no worries dude this is going to be recorded so we can actually you can rewatch these things at your own pace nice so now what we are gonna do is so we've got the login working the redirect worked so now rather than saying hello cause II signin I wanted to say hello whatever email you signed into right so this just goes to show you how powerful this all is now so one way to do is I'm gonna go over to the header component so hello Jess and here instead of basket I just do user that's it I don't know what we're using this basket here no here we are so I'm keeping the basket sorry so I'm gonna get to the user as well we don't need that and basically what I can do now is you can see there's no prop drilling I just go into the data layer say go get that and what I can do now is that where it says hello Kazi I can actually just say hello and I can say here user email right and also I want to happen is I'm gonna add some really nice little bit of code now so I'm gonna go ahead and say inside of the header jeaious I'm gonna say that the link to login is only going to show if the user is not logged in so if here what I'm gonna do is I'm going to say this is some JavaScript code here I'm gonna say if there is no user so if they're not logged in then we want to push them to the login page right otherwise I want to basically have it so I'm gonna go into so it's only gonna do that if they're if they're if they're are logged in so it's only gonna push it to a login page if they're logged out so and then I want to basically habit so that if they click on the if they click on that hello cause II signin pot right I'm gonna have it so that let's have it so if I'm gonna create a function here so I'm gonna say I'm gonna have a function up here saying Const login so this is when they click on that option right now basically we're saying if there is a user so if they are signed in then I basically want to do sign out so I want to say oath don't sign out and I'll show you why right and this will make a lot of sense in a sec I need to pull in the auth module from firebase this bit is really sort of clean and how we do it so we've were all starts I now login so now basically here I have login so here we have science so right now it says sign in always I don't want it to say sign in oiz I wanted to say sign in when there is no user right so I'm gonna have it so that instead it says if there is a user I want it to say sign out okay otherwise sign in right and although this logic and it's only gonna redirect me to the login page if there is if there is no user and this login function is gonna check if they are logged in then it's gonna sign them out now this combination works really elegantly because if I save this now check out what happens so it's gonna say hello and it says cozy at the top and then it says sign out so let's make the screen a little wider so that it doesn't doesn't get to thing yep there we go and if we click sign out no boom it just signed you out and you can see now at the bottom you see it dispatched the action to set the user to know oh and then alright and if we think sign in now the two will be it'll be a true so push us to the login page oh wow which is just so clean guys it's just really really nice yeah and it's so so clean and it's a really really nice way of doing it damn yeah so I hope you like that cuz that's that's a really nice little nice finishing touch on it right and I know I can imagine the sort of use cases you can do here guys like we can have it so that like if we wanted to we can actually have it to the point where if you try to add something to your basket we could just check if the user exists and then if it if they want before you add it to the basket it could take you to the login page and do that kind of check you see but like to do all of that it would be really easy now because we have this data layer so everything so nicely and decoupled and like you don't have to bother about like if this knows about this or if that knows about that it's just everything it's completely like isolated and don't on it that's an a beautiful yes it's all isolated that's the cool part yeah and now imagine you've got a team of like 10 developers right if they're all coding on isolated things the likelihood of breaking stuff is actually not that high because all you're doing is that you everything sort of detached yeah whereas if we were doing prop drilling and we didn't use the data layer like react context API you could one simple prop change like remember when we got the item wrong for the ID it caused a whole riffraff in a big company that would become it would be really tough for like ten developers to work together if things are really tightly coupled that's why we write our code this way and we have it very maintainable and sort of understandable in this way so I think cozy with that said we actually just finished the final point really are you sure because one of the things that when I if I oh when i refresh you're right it does actually go away yeah oh if you are logged in if you yeah so your login would stay persistent but your refresh the shopping basket at the moment is non persistent because we're using the we're using a store yeah got it okay sick awesome so are we ready to deploy this now I think we're ready to deploy oh snap okay let's so let's go ahead and ring that little bell oh yeah here we go all right guys we're done with building the login page and so now I'm gonna change that arrow from a finger pointing to a check mark and we're going to be on to the next step but first we're gonna hear a little that's right we just finished the login functionality now guys it's time to actually deploy that app so at this point I know a lot of you guys are tired and I know I mean now I'm tired Sony's tired but are you guys actually excited to see this app go live and be able to actually use it yes you will be able to use it from the chat are you guys exactly and guys when you actually when we deploy this we want you guys to go and visit the actual website that we deploy check for yourselves play around with the have a play with it and if you guys like it shoot a story for it and post me in Kazi and tag us in it and guys what they think you have to do this oh yeah you guys will make my birthday like so amazing if you guys actually make a story of the app and like record yourself and Gordon tagged us like that would be amazing yeah awesome guys so at this point we are going to deploy really soon so let's actually go here so let's open your command line up so now what is it it's a firebase in it yep so firstly if you haven't done this before you have to do firebase login yeah so like a login will pretty much open up a prompt for you so I think at this point we've we've already logged in yep so weird if I base and net yeah yep and then here you have to pay really close attention guys and be careful for this step so firebase in there and then it's you just use the arrow keys to go down to your hosting and you wanna press the spacebar yeah yep and you press ENTER mmhmm for this status you want to click on yep use an existing project and you want to find your project so I think here it's clone yeah it's that one yeah I say it comes up with because of the name because it's Amazon so it's up and then here guys you have to write build right that's right build and then you make sure you write build here otherwise it will not work okay you have to use up all right here it's a single page app so yes we have to write type in why okay I'm seeing everybody's super excited Daniel is like yes Danny is like waiting to click that you know super excited always lit thanks for giving us such a great project awesome guys love to work all right so now what are we doing it's okay now we're gonna do a single page app yeah so we're gonna hit Y here that's important guys why yep okay exactly so it's done and that's it so we've configured it so we need to do to come on did that mistake again by the way which one oh okay yeah guys make so if we can fix this so make sure you're actually in the Amazon clone folder because we done yeah so here to get the together if you do end up running into this mistake all you need to do is the firebase Arcee and firebase JSON files yep and you just need to run firebase and then again and really delete the build as well right oh yeah we can delete that yeah okay and then I gonna do firebase and net yep and this will show you guys how quick it is as well so don't freak out if that happens just go down to you hosting I was saying boom we're gonna existing project boom let's go to clone Amazon clone build and then we're gonna say yes it's a single page app and then build so yeah we yeah oh so here we do two commands we do em p.m. run build so it's the first one and this will actually package the app together so it basically gets all of the stuff that we just wrote and it pushes it into build yeah and it's gonna strip out all the developer dependencies all the stuff that you don't need in the actual deployment because it needs to be lightweight all right it has to be very lightweight and like and it just strips out all the rubbish and it makes it like an optimized production build just like it says that so Steve all that wrong folder AHA oh yeah he said everybody will be pointing people in your direction nice at sick Nights awesome all right yeah so once this is done the cmp remember creating optimize production build that's taking no longer than it usually does oh there we go yeah so don't freak out so then the next thing we want to do is once that's done it will actually bundle it into the build folder if you make any changes you need to run NPM um but again together from the latest build but now all we need to do is do firebase deploy and ready get ready for this are you guys ready that's my question to you we are about to deploy do you want to see it deployed well I hope that you are answering yes and I see a lot of you guys are saying yes you would like to see it deployed so at this point guys we're gonna do a countdown all right do a countdown with us and drop it in the chat below I think this is a very big moment yeah uh 4 3 2 1 all right guys we're gonna write firebase is it gonna be firebase deploy sunny yep firebase deploy all right firebase deploy and now guys it is time it is deploying and it's hosting it's using that build to deploy it and now here is the link that's it guys I'll live so I've just sent the Musti link inside of the comment section guys go check it out and if you like it what happened what you think comments we are live you guys that is it we have done it together so great job and we are actually also done so there is that little bell that happened right now this great job everybody alright let's take some okay pool party said hi guys learning a lot from you to you awesome glad to hear that did Daniel solo solar Joey it says there's firebase offer a way to keep track of people that create accounts with the app yes it does and it's actually inside of the console so that's really cool you can check in from inside of there and you can also use the file store database to actually push the users information in real time into the database so that's also thank you yeah yes awesome Wow guys this was an amazing build thank you guys so much for being here guys this is again the final version of the app this is what it's looking like you guys can actually go and play with it you can log in you can log out you can add things to the basket you can go to your basket remove things you'll see the subtotal change there is user authentication all of this functionality you guys learned so in in wrapping this up Sonny may have learned how to use react to build this app they have learned about context api's they've use learn about firebase hosting and firebase authentic they have learned about how to use react routers so they could have pages like log in and check out and yeah it's also a sync it's still a single page application and they've also a lot about the difference between things like link you know component in react versus H ref and how link loads the page instantly without refreshing yep exactly and we deployed it live so I mean that's oh and a big thing is data layer exactly yes and the day that's a react contacts API and I think that will actually be really useful for a lot of people running through that but man there was a huge amount of knowledge bombs in this video like we went through a whole lifecycle of an app build I hope you guys found that useful we got so many comments near in the end everybody was going crazy like yes like I totally missed these comments so he had like people going yes Salani of 5 4 3 2 1 even Astron was counting down nice I love that oh wow Emmet Tyrone see was conning down he's like one Azran is like let's go legends beautiful link was there he's like yay learning from you too best of the best I love it as you guys know all this love really really baby she's no poor guys yeah Astro asks sunny can we use firebase and want to create a web app for our clients like creating crud forms using firebase and not sequel and node that's a really good question for you cause II what do you think yes yeah exactly you can definitely have you can definitely have crud functionality in firebase but think in one of the apps that we built we actually in the to do app we completely showed that the quad functionality in firebase but yeah you can definitely have that and then and if you check out a few live streams back we've got all of that so yeah so you're so good okay Mac times 3000 thank you looking forward to learning from you guys and Daniel's like clicked on it awesome you guys hopefully checked it out Abdul Basit is like big work love that a MRSA amazing guys hopefully guys checked out the app as well and had some fun with it yeah but guys at this point thank you so much for watching we love you I am starving so I have to go and eat I'm gonna grab some food and send you any sign off message I just want to say thank you so much guys for your support you guys were amazing this video and there's so many of you guys were so attentive and laserfocused and it's just so amazing to see and it makes us guys really just want to carry on doing this so I hope you guys love that and thank you so much for watching that and a big big happy birthday to Kazi that's all just dropping some the sister for machinegunned of comments in that section right now thank you really appreciate it I love this comment but law says you guys are so awesome you guys should be rated the best what I've gained here I don't think I gained this knowledge in the next two years and he says this is really react in its simplest form yes guys that's one of the things that you will learn on this channel we take these concepts we'll make them extremely simple for you and then teach you how to make an income with those skills if there's one thing I want to leave you guys like what's your next step is guys if you have gotten value from this and you are excited about all of this I want you to very seriously consider jumping into profit with JavaScript which is our program will really literally teach you all of these skills and all of these apps but the most important thing is like we handhold you actually landing jobs but there's freelancing jobs or fulltime jobs or whatever it is so if you are serious about like improving your skills and landing jobs and starting to make money with coding then definitely jump into that course definitely make sure even if you guys are on the fence go check it out and give it a read because I think you realize that there's so much more value as opposed to what you're normally used to encoding courses or boot camps we give you very personalized feedback guys and you literally have a media access to like trying to me tactic Ozzie everyone is literally there your fingertips to guide you along from start to finish yeah yeah yep awesome and all the information about that course is on that page to click that link in the description below it'll tell you how much it costs what's the program and all of those details but just make sure you go and check it out and let's see if I have it here I don't but yeah just definitely go and check it out you guys awesome thank you guys love you guys really really appreciate you thank you for being here and part of this community and on this live and just giving us so much love we love it and we'll be seeing you guys everyday on these lives and so we'll be seeing guys hopefully tomorrow that's it yeah this cause II I love your face and that is funny love you guys peace out we will see you in the next video peace