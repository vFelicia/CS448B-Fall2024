why do developers hate no code tools like seriously I don't get it every time I tell my audience a clever programmer about no code tools my YouTube video just like the views just tank every single time and I never really understood why I just thought it was because the developers are not interested or maybe they just don't care because I genuinely use a lot of no code tools in my daytoday and again I don't know what your opinion is on this but most developers just freak out I mean even on LinkedIn I made this post and everybody just starts freaking out here I have yet to find a codeless solution that has the same functionality documentation or support of coded Solutions the problem usually leads from reducing anything and my response was like not Cod less I mean using no code tools to help you and only writing code where needed and the the LinkedIn post post blew up because I don't get any like I get one like on my LinkedIn post I get nothing so for me to get 117 reactions and 16 15,000 Impressions is blowing up and I feel like I hit a nerve and lots of software developers are chiming in on it and giving me their own take and there's a lot going on it's like a war out here but I feel like none of them really changed my mind on anything what I say is coding is a tool to help you get the job done don't get married to the code I love it I enjoy it but it's a tool to get the end result done so if you could do it faster easier quicker cheaper why wouldn't you do that especially if you're trying to build your own project or your SAS and you're trying to prototype an idea together go no code as much as possible now again when I say no code I understand the complete no code tools a lot of them are trash and are garbage I get it I understand that okay I'm talking about like let me see if I can make a like a little board here for you and show it to you right so if you go complete no code like bubble it's like you want to vomit and it's disgusting okay I I tried bubble and it's horrible it's just such a awful and their UI is like so trash that's not what I mean like recently I was building this app where a user can upload a long form video and then they get short form Clips back right so they get short form videos back like bunch of them right so I'll just visualize it for you here and they and like imagine they just put one big video and they get like multiple short form Clips out of it okay that's the idea you just upload and then you get this thing now for the front end I have this juicy next UI okay I have a beauti I have Firebase working so it gives a really nice and awesome experience I have some other cool text stack that I'm using but this is like the rough idea right so my front end is react next um if you don't know what next is it's like similar to react right and this is my front end that I'm working with but trying to manage the logic and all of that stuff and you know for what I needed to do it needed to do a lot of things for example my app needs to go and first take your video that you put in and it needs to transcribe that video and so it needs to get the text out of that video that's step one right um actually Step One is uploading so you have to be able to upload your video right so how are you going to upload this video well for that I need to use some kind of storage so for that I'm like okay I'll store it in Google um Google Firebase right so I'm using Firebase to store it okay what's the next step well then I need to transcribe it so I can get the words so then I can send the words over to our AI our open AI Chad GPT bot for it to like then find me good clippable moments Etc now in order to do all of that stuff it's so annoying to have to debug in like a command line and it's such a pain in the ass and it will take you months extra of all the work that I'm doing and I just use the no code platform for the back end because it's going to take about 30 minutes regardless of what Tex stack you use this process generally takes 30 minutes or longer uh if you're doing it through the web that's why even if you look at tools like Opus Pro or anything like that they they take a while so the process is going to take time so there's no reason for me to like code this thing up so then what happens is my user just goes and I have like this crazy backend workflow where we get the footage then we transcribe it then we make meaning out of it then I send it to like a AI tool that like crops the video and does all the magic and then we do all kinds of crazy stuff with it right I do my prompt engineering and everything it would be an absolute nightmare trying to do this with just pure code because debugging would be trash like when I get somebody who has a problem to try to debug it I would have to have these crazy debug traces that would be such a pain and I have set up some debug traces and stuff but again it's so much time whereas some of these online no code tools like specifically what I was using for this was pipe dream there's other ones too like n8n and stuff but for what I wanted was pip dream and it was fantastic because it combines no code and it gives you the most power to code meaning like you can install packages and like Code full JavaScript Code full Python and so anything that could be Point click automated slash builtin interfaces with debugging is done I don't have to do any of like the grunt work the typist work that a lot of developers like to do like if you just love writing code okay look if you you're against somebody else and both of your job is to like build a tool that solves problems and you're just hellbent on writing every single line of code from scratch and the other person is writing code from scratch plus using any tools that they can find to speed up their process they're going to be 10 20 times faster than you at that point you're not a developer you're you're a typist and if you want to be a typist then by all means be a stenographer don't be a developer I think your job as a developer is to find unique problems new problems solve them why are you wasting time solving problems that have already been solved it's a waste of time solve new problems if you want to get practice go on lead code but your job is to solve new problems that's what we do as developers any problems that are solved use existing tools move the world forward faster right recreating tools solutions from scratch is just a waste of time and so I have this really complicated project with a really complex workflow it's so easy to maintain the code is so readable primarily because it's on a no code platform okay and it it just it's so smooth and easy to go through it whereas had I written everything from scratch for any developer that I bring on it would be million times harder for them to understand what the hell my code is doing it would take them so long and yes I get it once this app is performant and I have millions of users and I'm making millions of a month yes move it from pip dream if you need to if you see a performance difference to purely just next and on your own back end purely some whatever backend you want to write move it to Planet scale move it to super base whatever you want to do move it to Pure code but why is everybody so hellbent I just don't understand and anytime I've talked about anything related to no code I just get the craziest lashback every developer just loses their mind and at this at this point I don't give a I'm just telling you what works for me how I'm able to build app so fast and literally make stuff that a team of 20 developers who will just literally ruin your life charging you1 to $300,000 I'm building it on my own within a month that would take a team of developers four to five months that's all that's all that's why I'm sharing it with you do whatever you want with it don't shoot the messenger try it on on your own use tools that give you coding plus the ability to no code and again when I say no code don't piss yourself okay just hold it in hold your bladder real quick for me okay understand what I'm saying no code doesn't mean you never write line of code it just means you combine no code tools with coding tools and you use coding only for true and unique problems and use the rest to get up and running quickly and I think whenever you have a MVP you should always try to find a way to do it with as little code as possible one there's going to be way less bugs two it's going to be way easier to maintain which is let's be real what your most of your time is going to be spent on when it comes to software three is going to cost you way less four you're going to do it way faster right so there's so many benefits could keep going on and on but I would say prototype and build fast especially if you're trying to build a SAS always start off with this people are literally making hundreds of thousands a month with like low code SAS right so maybe I maybe I should say I'm a proponent of low code okay that's what I'm proponent of that's I think my favorite new genre that I'm heading into and if you guys want let me know maybe I can start making low code tutorials but I just feel like I get slaughtered on Clever programmer anytime I talk about anything that doesn't have to do with just insane amount of coding um it's almost like a fetish of some of the people like developers like they just they just go crazy having to code and maybe they just get a lot of joy out of it and I do too I just also get joy out of like finished products things shipped and users using my services and products me making money out of the products that I'm using me not charging my client $100,000 for when I can build them a tool for five grand or 10 grand and then they want to keep working with me over and over again because I'm faster than a lot of the other players because I'm using tools that already exist to help me solve the existing problems and I put my brain this thing that I have very limited of because I probably have a few brain cells but I have limited time and energy and this thing that's a Powerhouse in here I try to only put it to use on unique problems I think that's the job of any software developer I think the reason why a lot of us get good is because we want to be as lazy as possible and we want to solve things once so I think if you're a true developer you try to solve things only once you don't try to repeat yourself dry which is one of the core principles of software development and I think if you take it further you know you can call it whatever else you want um you know don't repeat solutions that already exist use existing Solutions that's my message let me know in the comments whether you hate on me or whether you love on this idea curious to hear let's have a talk I love your face and I'll see you in the next video peace