Hey you! In this video I want to talk about how can you become a self taught developer. This idea came from this recent video I made called, "The Biggest Mistake Programmers Make." On that video, Chris Hawkes posted a comment and he said, "I'm a self taught developer," and Chris Hawkes, by the way, also has his own YouTube channel and is teaching lots of people which is super cool. And he goes, "I'm a self taught developer and I've taught probably millions at this point. I've never used video tutorials for learning. I think you have to get out of the books, tutorials, your own head and just start writing code." So, I'm gonna talk about how you can become a self taught developer; my thoughts on that comment. So without any further ado, lets jump right into it. I've always wanted to put my own ad at the start of my video and at the end of my video. So this is going to be super awesome. But I have a special announcement and I do wanna say this. I've been planning to put this together for a really long time. It's finally come together and it's an unbelievable program. I'm gonna talk more about it at the end. I have something very special for you. Okay. If you've ever wanted to make your first $1,000 from programming, coding. Alright. If you ever wanted to learn how you can freelance and start earning an income from this. If you ever wanted to learn how you could 10x your productivity, learn the tools, strategies and frameworks to take your skills to the next level, and learn how to freelance with it, learn how to have more time, money, impact, on this world. Okay. If wanted to be able to do all of those things, well, I have a thing for you. I'm gonna put that at the end of this video. Enjoy this video. You're gonna love it. And at the end I'm going to show you what are the steps you need to take to jump on this thing. Lets do this! Alright, this is Qazi, also know as Papa Python from cleverprogrammer.com. It helps a lot if you're watching this video. If you could just hit the like button, it helps out the channel a lot. I'm trying to be as active as possible. This is day 11 of the coding challenge that I am doing. So this is video 11 out of 30. And if you wanna follow me along on this journey of where I'm doing a video every single day, you can follow me along and say, code for 10 minutes or 30 minutes a day. Could be something simple like that. And you can follow me at @cleverqazi on my Instagram to see more of the behind the scenes. And you can also tag me. Like go, "Hey @cleverqazi" and then like, "hashtag 30 day challenge" and I'll repost you, so that way we can keep each other accountable. It's not so much as to grow my Instagram. Which, you know, it's helping when you guys jump on. But what I've realized is Instagram is really this amazing habit building tool that I use for myself. So I want to inspire other people to use it as well. Like you can see I'm tracking my jam, I'm tracking my daily log, I'm tracking my videos and if I code I'll even track that too. Alright so moving on. Let's talk about what how you can become a self taught developer and my thoughts on Chris Hawkes's comment. So basically, Chris Hawkes is saying, "like yo, you have to stop looking at tutorials, and books and relying on something." This goes pretty much hand in hand with the last video that I made where somebody commented on the video and was like, "yeah, if I wanna write 500 lines of code, you know I can build a calculator app. And I know a lot of C and C plus plus but if it comes to making sorting algorithms or something like that or I have to write 500 lines of code." He's so proud of himself and he's like, "nah, I can't do that. I'll wait till I get those courses." So I am against that and Chris Hawkes, it seems like, is also a little bit against that concept. What Chris is encouraging people to do is, yo, get off your ass yo, get off your ass and start actually working on a project or your own coding thing. Because tutorials are going to help you but they're not gonna help you make the things that you wanna make. And as you're building the project that you're building then you can actually go back and look up those certain things. So then if you get stuck on Let's say your app needs to have some kind of sorting algorithm to show people based on their like In alphabetical order or it needs to show people based on their like, follower accounts. So you know, if you're making a Twitter clone or an Instagram clone and you wanna have like a leader board of who has the most followers, then you need some kind of like sorting algorithm and that's a very basic one, right? So then you can still go and learn that tutorial. As soon as you learn it you can come and apply it. That's how each concept is gonna be internalized. It's gonna be beyond just this superficial It's gonna be beyond just this superficial level of understanding. And I know in the last few videos I've been hammering this point home. There's a reason because it's that important. If you wanna become a self taught developer, the terrible way of doing it is just hoping you can keep learning, and learning, and learning, and learning, and learning and then one day you dream you're gonna be ready for something. Right? Let me challenge you to something. How many of your own projects have you built so far? If your answer is like, very few, less than say five or three, like of your own projects, there's a reason why you're not improving at the level you wanna improve at. There's a reason why you might be stuck where you're stuck. There's a reason why you feel like you see tutorial after tutorial but you're not really understanding it. And there's a reason why you feel that lack of confidence or that you're not earning an income from coding or becoming a freelancer or a self taught developer. Now, if you start building your own projects and you learn as you go and you take away that fear of the unknown and stop waiting to just learn all this crap; now you're gonna be in a really amazing position, my friend. And you're gonna be learning faster than you ever have and you're gonna internalize all the information, be able to apply it to your projects and that way you're not wasting any time. Because most of our time is wasted, honestly, learning lots of tutorials, going through lots of books but not applying it. How I can relate this to chess is, I had this really good friend, his name is Adil. I love that guy. But what he would do a lot is.. he would intimidate me with his knowledge of like, chess. of like, chess. Okay. So he'd be like, "hey, I learned Sicilian Accelerated Hyper Modern Dragon and in this book that I'm going through, I'm learning the endgames by Dvoretsky and I'm learning this stuff. And I'm going through 'Reassess Your Chess' by Jeremy Silman." And I'm like, what the hell's going on? You know. I'm like, this guy knows way too much stuff but I was playing more chess games than him. I was going to more tournaments actively than him. What ended up happening? My rating actually improved faster than him. And I love him to death. He was actually in California. Right now I'm in Miami on a beach which is pretty cool but I was in California in L.A. and he came there and we were on a jet ski. So I still love him. He's still one of my best friends but when it came to chess I was able to improve faster and the reason why that happened was because I was playing more actively. Okay. So he knew all this theory and knowledge but I actually had a stronger rating. Right. But then he applied himself to the gym and I was learning more theory there and he's way stronger. His squat is like 300 pounds and my one rep max is like, you know, 215 pounds. Now coming back to coding, the coding world. If you are just learning and learning theory and going to tutorials and learning recursion, going through books but you're not working on your own projects, it's really unfortunate but you're gonna kinda suck. You're gonna be able to be in a room and hold a conversation. You're gonna sound and feel smart. You're gonna feel like you can judge other people But probably not gonna have a job. You're probably not gonna have an awesome portfolio. You're probably not gonna have a lot of projects to show for it. And, you're actually gonna have a much weaker skill set. So unless that knowledge is applied it's useless. But if you wanna become better at soccer and I just started teaching you on a white board and I'm like, so this how you kick and this is the best way to kick and theoretically if you kick at a 45 degree angle this shit's gonna get lit. That's not gonna help you and you're not gonna improve. Right. But the way that you are gonna improve is if you actually go and just play with your friends, fuck up a lot, make a lot of mistakes, and then look up something. Right. And then look up, okay, how can I improve my passing or how can I impr Then you're gonna get a lot better. So this is my message for you. Shout out to Chris Hawkes for commenting on the channel. Thank you for that awesome thing and support. Thank you everybody else who's on this channel and supporting it. At this point, I love your face off but I do wanna say, in the comments below let me know what you think about becoming a self taught developer. I'm jumping in and responding to almost every single person right now. I'm very active. So if you wanna jump in and ask me a question, you know, just something for what people are consulting with me. They're paying me $500 an hour or more. So if you jump in and ask me questions I'll be more than happy to actually answer. And you'll have me, you know, one on one there. So jump in and tell me your thoughts on becoming a self taught developer. It's okay if you disagree with me. Doesn't matter. But jump in, drop something, give me your thoughts on this video or becoming a self taught developer. Other than that, thank you so much for watching. I love your face! And as always, I'll see you I'll see you in the next video! So I have launched my new program called, "Earn 1K With Python." This is a brand new program. I've had so many students tell me, "Qazi, please make something that is awesome, that's something we can afford, and something that most of the students can have and get started with. Something that's more towards beginners and also people who wanna get their first step and make their first $1,000 from programming. Because there are a lot of programmers I know who are pretty damn good but they still haven't made their first $1,000. And they don't know what's a repeatable system to get high level mentorship, high level job opportunities, internships. How do they get those freelancing deals that most people don't know about but there's a world of developers that knows about them? Right. Why is there a difference between broke programmers? Programmers who know a thing or two, who know how they can generate an income from this field. Most programmers are broke but I wanna show you ways where you can cut down the trial and error because it's the most expensive way to learn. And I have an incredible video that I want you to go and see that I put together. Okay. This video is unbelievable. This video will show you how I went from being a dumb, broke and a community college student to making $104,000 a year as a developer. I have put together a video for you that will show you not only that but it will show you how you can leverage my hacks, leverage my hacks, my morning routine hacks, my strategies, to essentially supercharge and 10x your productivity and effectiveness as a developer. And this video will also show you how to break past the barriers of procrastination and build more structure and discipline. Because that's one of the things that people lack. But most importantly, this video will show you how you can earn your first, first, first $1,000 from programming and coding as a Python developer. And this is the biggest barrier and once people cross it, it helps them learn a lot faster, it helps them commit to programming more, it helps them put more hours into it, and it helps them cut many years of taking a lot longer. And it gets them there a lot faster. So that's one of the biggest things that people don't know about. But if you can start earning an income from coding as fast as possible, you're gonna be in a position you're gonna be in a pretty awesome position, alright. So please go watch this video. It's epically put together. Click on the link below in the description and it's gonna take you to it. With that said, thank you so much for watching! As always, I love your face and I'll see you in that other video. So go click there. I'll see you right there. Click there. Do it. Do it. Do it. Ah! (Hip Hop Music) (Hip Hop Music) (Hip Hop Music) (Hip Hop Music) (Hip Hop Music) (Hip Hop Music) (Hip Hop Music) (Hip Hop Music)