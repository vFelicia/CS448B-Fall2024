Hey you, how's it going? This is Qazi from cleverprogrammer.com and this video, this is gonna basically be the ultimate guide on how to become a successful Python free lancer in 2019. I sat and I thought a lot about what were the exact steps that I took to be able to get there and how a lot of other successful developers went from complete zero to being able to even make six figures and beyond as a Python free lancer, and I tried to put them in this video for you in a step by step process. So this video hopefully will serve as like a manifesto that you can refer back to from time to time on your journey to becoming a developer. Now, this video will be really helpful even if you're a complete beginner with let's say zero months of experience coding, the zero the three months of experience coding. I will also show you how to improve your income and become more successful as a free lancer even if you're more advanced. All right. This video will also answer some really important questions that people ask like people often ask me, Qazi I am a beginner, or intermediate, in Python programing, I have no prior work experience, how do I actually start earning an income from coding? So I wanna address that question head on as well 'cause I think that's very important especially a lot of people, a lot of people are students in colleges so they don't have work experience how do they get their first internship, how do they get their first freelancing job, when people wanna see prior experience? So this video is gonna help you obliterate that excuse and help you start earning an income in your first three months of coding. Now this is not like some get rich quick type of thing, this is gonna be a very detailed process that I'm gonna lay out for you. This is gonna require a lot of hard work, but this is the clearest step by step process that I've seen anyone ever explain so I wanna do that for you and put it in this video. Now before we jump in to the content of this video, please do me a favor because we put a lot of time and effort into making these videos for you guys so the best thing, the best help you can get is if you even like the video and subscribe to the channel and make sure you hit that bell notification next to the subscription button, so then anytime we make a new video it'll come straight to you. Also, I have something really incredible for you at the end of this video and I'm gonna reveal to you so definitely you wanna stay tuned in this entire video because that gift that I have for you you're really gonna love. With that said, let's jump right into it. Hey this is Rafeh Qazi from cleverprogrammer.com and on this channel we help people become a successful Python freelancer and we help you go from zero to earning your first six figures as a Python freelancer. Now this channel we help you break out of your nine to five job, work remotely, and live life on your own terms. So if that excites you, again, click that subscribe button and jump on this journey with us. Now let's jump into this video. So I'm gonna actually break it down in four steps on how to actually become a Python freelancer. Step number one, master the fundamentals of Python. What does it look like to master the fundamentals of the programming language Python? I look at it like this, you don't have to have, you don't even have to be able to solve like super complex problems, but you wanna have some level of competency. So what are the things required there and how long does that actually take? So let's break that down. What that looks like is you start off by learning coding, all right? So you spend, let's say 30 to 60 days learning programming and you learn the fundamentals of the programming language, for example the basic structure in a syntax, what are variables, what are strings, how do if conditions work, what are conditionals, what are functions, what are classes? So like object oriented programming as well. Now once you cover most of the basics of programming, you should be able to solve problems like the Fizz Buzz problem which almost every interview will ask you, this challenges your, a little bit of your critical thinking but it also challenges you in terms of, okay do you know how conditionals work in programming? You should also be able to make games like tic tac toe, or rock paper scissors even if you can't make them from complete scratch, that's okay because most developers aren't making anything, almost ever, from complete scratch. You are actually referencing material from online, but basically can you actually use every resource in your brain to put together this app by yourself? So you should be able to put these apps together. Now, once you can do these types of tasks, I believe it generally will take you one to two months, and the reason I say that is even if you have just a few hours a week to spend, you can actually learn these skills really well. I have a free Python course, I'll pop that up over here, it's call learn Python programming by building projects. And in that course we actually teach you how to actually learn programming from complete zero and it's a five day course if you go really intensely into it. So you can actually shorten your 30 day or 60 day cycle in as little as five days, but that does mean that you're putting in probably five hours or 10 hours a day. Now if you can't put in five to 10 hours a day, then just understand that it will take you probably 30 to 60 days as a realistic time frame. So within 30 to 60 days you should be able to understand the fundamentals of Python, master them and be able to build simple applications. Now, once you've learned that, let's move on to step two where you actually start earning an income. So what does step two look like? Now let's break it down into something tangible. Now this actually came from when people kept asking me, and I also kept asking myself when I was starting to freelance in my days, I kept coming across this problem where I was a beginner in programming, or an intermediate, I had like a few months experience, but I couldn't get freelancing jobs because they were really fricking hard and required a really difficult high level of expertise like if you go on upwork.com and you try to look up freelancing jobs, and if you're a beginner, or intermediate, you're gonna have a lot of difficulty being able to actually complete those tasks or complete those jobs. Also, even some that I thought like maybe I could do, those people didn't hire me because I didn't have relevant work experience to show them. So, I'm a beginner, I don't have relevant work experience which meant that I couldn't actually go on to land these jobs. That was a huge problem. I thought how can I actually start earning an income. Is the only way that I have to wait three or four years of college, get a degree, and then start earning an income? However, when I actually looked around, a lot of my friends who had gotten degrees, even they weren't landing jobs. And a lot of my other friends were quitting their CS majors because professors went from teaching you hello world and the next week you were making like a fucking stock trading app. So the jump in the level of complexity was way too difficult so most of the people who were even graduating from college are essentially self taught developers, they're teaching themselves. So first I thought okay, I can't rely on college or the educational system to teach me programming because most of the people who graduated are actually not relying on the school system, they're teaching themselves and then just come and ace classes, and then other people cheat off of their homework. So that's what's happening most of the times, right? So I thought, okay if these people are teaching themselves I gotta start teaching myself, but I gotta be able to find a way to earn an income before I actually start applying to places like upwork.com. And then I thought, I came up with what if I start teaching people what I know so far? So in my 30 to 60 days of experience coding what I realized was majority of the people, by definition, are beginners who are trying to learn. Most of the people have very little knowledge of coding and there's a mass market looking to learn programming. And if you have 30 to 60 days of experience you're like one or 10 steps ahead of most people. Most people who would pay you anywhere between $25 an hour to $100 an hour or more for you teaching them programming. So that's where I actually started. I went to a platform called wyzant.com and I actually made a profile on there. And I also went to a platform called takelessons.com and I made a profile on there. Once I made a profile on there, what ended up happening was over time I actually got clients right from wyzant.com and takelessons.com that started hitting me up and started scheduling lessons with me. I set my hourly rate at $35 an hour and my first lesson I believe I got in 2016, December, something like that, I'll try to put a screenshot here so you guys can see and follow along. And that was actually freaking mind blowing. I'm like, okay this is insane because this is possible and people are paying me that much. When I walked into that lesson to teach this person programming 'cause he said something like, he's working on a final exam for coding. So when I came in I was actually really intimidated, I thought I couldn't help this person, but then I thought, okay if I can't help this person what I can do at least is I can try to help this person and if I really can't, at the end of the day I'll just refund him. So that's what I did, I just went in, the lesson took place at Starbucks, and we just casually sat there and I helped him with his assignment and there were some parts which I could figure out so I told him I'll actually work on it in my own time. He thought that lesson was super helpful 'cause we were trying to figure out things together at the same time. And then once I left, I actually figured out the rest of the problem on my own. And it ended up being not so complicated what I realized was those 30 to 60 days that I actually spent learning on my own, most people aren't ever learning programming on their own, they're just doing the college assignments, and they're spending bare minimum amount of time learning coding, which means that most of the times they can regurgitate information, they can regurgitate like, or just get through their homework assignment but they don't actually understand how most of these things work. Whereas when you teach yourself, you're really able to actually do these projects 'cause you learn how to think critically. My mind was blow that I was actually able to help this person, charge $35 an hour for my first student in under two months of experience. Then I asked myself the question, can I repeat this process? I started repeating this process and I started landing multiple clients. So if you do the math, if even one student is doing two hours with me every week, that's $70 per student and me actually learning programming. Over the course of a month that comes out to be $280 per student, okay, over the course of the year now that comes out to be over $2,000 with just one client. And then I thought, okay what are some levers here that I could change? One, I can get one client, that means if I can keep them for a year, that's $2,000 plus, maybe even $3,000. The second lever that I could change and play around with is increasing my hourly rate with each client. So if I doubled my rate with a particular client, or I got a new client at double rate, then that would mean I double my income by the end of the year. So I'm like okay, let's test some of this stuff out, so the first thing I decided to do was instead of doubling my rate with a client, I got a new client at $50 an hour. So now I had two clients, one at $35 an hour and one at $50 an hour, so with the two of these clients, now my income went close to like $400 or $500 a month. Then the next client I got, I got for $75 an hour because at this point now I started to get reviews and testimonials on my profile which make you look awesome. I had a great profile as well, and more of these clients starting working with me. So over the course of a month, my income ended up going from you know when I started it was $280 and then it ended up going to 1,000, my first $1,000 a month, I increased it to $1500 a month and now another thing that I wanna tell you that's really important to understand here is that not only was I actually increasing my income but keep in mind that I was doing only a few hours a week working with the people that I really enjoyed working with. I didn't have any boss, bye. (mumbles) Oh, no no, that's okay I'll let you know where I stopped. Everything's good you didn't miss me at this point. Perfect you're awesome, thank you so much, I appreciate it. I didn't have any boss, I was actually able to work by myself. Some of the clients I would meet in places that I loved going to like Starbucks or some of the clients I met online so I didn't actually even to travel for them I got to chose my own schedule, I can travel anywhere I wanted, and I was still earning an income and one of the most important things I'm gonna mention here is that it was the fastest way to grow my skill set in coding. Because every project and every student I was taking on, everyone had assignments that would challenge me, and grow my skill set. So I was improving at a rapid pace while earning an income. And over the course of six months to a year, I actually was able to scale from just having a few clients to have over 20 or 30 clients, and I was able to earn over 30 to 40 thousand dollars a year and eventually I scaled just my coaching and tutoring all the way to 70 to 80 thousand dollars or beyond every year, all right. Now this took time and effort and a lot of systematic work but it was definitely worth it and it made me go, if I want to freelance, I can choose to freelance, or I can actually be doing this earning a great income and having massive and deep impact in peoples lives, because there were students who were going to coding boot camps that needed my help. There were students who were going to high school or college that needed my help or there were people who were developers that came to work with me so they could actually get help in their own jobs. So the demand for this was massive. So this is step number two. I know we went really deep into it but I wanna emphasize how that this is the secret sauce, the secret step that just nobody every mentions. I firmly believe this is one of the most important gaps that'll take you from have no experience being a beginner to then going to that step of becoming a freelancer. Other benefits of this I wanna mention are you're gonna have testimonials, you're gonna learn how to reach out to clients, you're gonna learn how to land clients, you're gonna learn how to retain clients. you'll learn how to work with clients over the course of three months, six months, a year. These are incredibly powerful skills that once you become a better and a stronger developer, and you actually start going out to freelance, either with local clients, or you go to upwork.com to freelance, you'll be able to leverage all of these skills. Also, you'll be able to leverage the fact that you have so many testimonials and experience in working with Python and you can actually share that and that will qualify you to be able to work with other people, all right. You have experience now working on multiple projects that other people were working on. You have testimonials from people who are learning Python and they give you these testimonials that you can show off to a potential new client or a prospect. Again, this was just step two. Now we're gonna move on to step number three. Step number three is build real world projects. Now before we get to step four, which I'm gonna talk about how to actually freelance and earn an income. In step number three we're gonna talk about the power of building real world projects because before you jump to becoming a freelancer, you actually now need a lot more technical aptitude when it comes to coding and you need real world projects that you can then show it to your future clients, all right. So you have developed a skill sets of so far, okay, if you're following on this journey you have developed a skill set of retaining clients, of landing clients, of negotiating with clients, of being able to charge premium pricing, of learning how to deliver value. You have testimonials, you have experience working with Python, with other people. You have all this at this point but now what you need is you need to be able to actually just increase your skill set and have a portfolio that you can show to people, all right. So this stage is actually gonna take you quite, this is gonna be the most difficult stage so to speak, the transition between going from a Python instructor into then freelancing with Python. But what this requires is for you to build practical projects and build lots of them. So you're gonna be constantly learning programming, so I would say 20% of your time will be learning new skills in programming and 80% of your time will be actually building projects that you can put on your portfolio. So you're just beefing up your portfolio and project base here. But what I want you to keep in mind is you don't wanna just work on random ass projects like going to a CS50 course and taking it, which by the way is a great course if you wanna take it go ahead CS50 is awesome. But what I mean is try not to have a shotgun approach because you're not gonna be able to do really well when you transition over to freelancing because it's much better to get really deeply technical in a certain skill set rather than have like 50 different skills in programming and then just be mediocre at every one. It's better to be more niche and more jacked in a specific skill set. So what I would recommend for example is go on upwork.com and look at the jobs that are there, okay? So go on upwork.com, go to the search box and hit, type in you know Python and then scroll through the jobs. So go and look at the different jobs that exist. You wanna look at jobs that have a skill level of let's say easy to intermediate, so that's something you should be able to do within you know you're in your first, between your four months of coding experience, four to 12 months of coding experience, okay. So you wanna look at those types of tasks. So what do I mean? Let's say you go online and you see something crazy like build a you know application that has a redundant storage and it can serve to over one million users every month and it has a difficulty rating of expert, for now, that's no, that's a type of skill that's gonna take you like five years to develop or more. So you wanna focus on something like maybe it's a $300 freelancing task or $500 freelancing task that actually requires web scraping abilities to go to a website and get all of the pdf links from there. Or it requires you to go to Ebay and get all the featured deals from Ebay and put it in an Excel sheet. Now that's a much more doable project and that actually doesn't take that much time for you. You could literally go to one of our YouTube videos on web scraping, learn that specific skill set, practice it over the course of a few weeks or days and be able to land a client you know with a freelancing job. You want to make sure that as you're in this phase three of building real world projects, research on upwork.com what are the types of projects that you can see yourself doing? What are the ones that you could see yourself doing in a shorter period of time and then plan your learning around what's actually relevant and what people paying for right now. So if you constantly see these web scraping jobs and it's interest to you, then what you wanna do is you wanna come back to the drawing board and you actually want to spend your time learning web scraping skills. So you wanna develop deep web scraping skills. Go through web scraping tutorials, build a web scraping project. So when you go to that specific client in the future, on upwork.com or another client on upwork.com, that requires you to do web scraping, you can just refer them back to your work on web scraping and be like look at my portfolio, I'ma we a web scraping expert and I can help you with your task. If you're interested in doing stuff with regular expressions or you're doing stuff with data mining, or you're doing Python stuff with web development, you know you're interested in the web development jobs on Upwork, then go back to the drawing board and practice all of your learning around web development. We even have a course called Profitable Programmer that teaches you how to be a full stack web developer with Python. So practice and go through learning those web development skills. And then once you develop those web development skills and you build let's say Python projects using Django, then you host those projects with Heroku and you learn how databases work like postgres and stuff, now you're becoming better at web development, right, and you're building a portfolio. So then in a few months you could go right back on upwork.com and actually apply for that job and show them your experience, show them your testimonials on let's say wyzant or taklessons.com and go look at this, I can offer you the skill set I have of building these projects and look at what my clients say about me. That's everything a person who's looking to hire you needs to know. Once they see that, it's a much easier sell on your end and you could position yourself in a really premium way and charge anywhere from $50 an hour to $300 an hour, okay. If you're more advanced than 300 going from 50 to $150 an hour might take you two years, okay. It's a doable step by step process specially if you laser focus on the skill sets that are in the job market currently right now. So this is very important in terms of you look at the relevant market and then you go and plan your learning around it. Spend a lot of fucking time around looking at what kind of jobs exist, 'cause think about this, how backwards is school? Think about the school system, the thing that determines your whole life, your major, they only spend a few days on it. When I was going to college, I had meetings with my counselor like probably once or twice a whole year but those meetings determined three months or six months of my life. How absurd is that? That the thing that's gonna determine the three to six months of my life is essentially just one hour long or a 30 minute long quick meeting with the counselor that hasn't figured their own life and are here and are handing out advice to every single, like thousands of students with back to back appointments and they're determining your life over the course of like a 20 or 30 minute or an hour long meeting with you. And that's all the time that gets spent on it. But then all the other time is spent actually going to classes and putting in the grunt work. Where I think it should almost be the opposite 'cause your future is the most important thing to plan for. It's almost like you're on a conveyor belt, okay. There're multiple conveyor belts, one belt leads you into the depths of hell, the other conveyor belts leads you into heaven. Now if you actually spend a lot of time thinking about, okay this one leads me to hell, this one leads me to heaven, you quickly do a quick Google research which one is more pleasurable and you find out it's heaven, then you get put on the conveyor belt and then you keep going, right? But you have to put in the work to do that research but often times if you don't do the research correctly then you actually might get put on the track that's gonna put you in hell and a lot of pain and you know a major that you never really wanted and that's where you're gonna get on the conveyor belt and start going, okay? And then it determines the rest of your life. So the school system is really backwards. I think they should spend like 20 or 30% of the time planning your future and showing you specifically what kind of jobs will you be doing. What kind of skills do you need to learn now to be able to get the jobs you want. They don't actually focus on the jobs which is the ultimate outcome that you want, so you need to focus on them. So how can we fix that broken school model and fix it in the Python freelancing world? Here's what I would suggest, okay? Here's what you need to actually do. You need to look at the relevant projects and spend 20 to 30% of the time, you know on your fricking iPhone, okay, I don't have my iPhone with me, but on your fricking iPhone get the app upwork.com, put it on your fucking home page right next to like the text messaging app that you have or the phone call icon that you have. Put it on your home page, make it something fun, make it something exciting, so then you click on it and while you're in the bathroom or you're waiting for someone in line, or you're just hanging out, you click on the upwork.com app and you just see what kind of projects and things that people are offering real money for. So once you develop that habit and you get excited by it, automatically you're gonna be spend 10 to 20% of your time actually looking at what skills you need to develop and then wrap and map your skills, the skills that you need to develop, around, right, around the real world job market on the things that you need to be able to do. So this makes your learning hyper relevant and it makes your skill set hyper relevant. Whereas for example if you go to a college for four years they have an outdated curriculum, they don't focus on what's in the job market and so often times when people graduate after four years, they have $60,000 or more of debt with outdated skill set that you can't get freelancing jobs for, and you often can't get fulltime jobs for either, because in the software development world things move fast. So wouldn't it be cool if you were just on top of it, right, by being able to see what's happening in the market all the time? So that is step number three which is massively massively important. Just to wrap it up, step number three is build real world projects around real world market. Now, we're gonna get into our really exciting part. Step number four, how to start earning an income as a Python freelancer. Up until now, what have we done? Step number one was mastering the basics of Python so you can get ready for tutoring. Step number two was tutor with Python and you can actually scale your income from, and you can actually be a complete beginner with less than two months or three months of experience and you can start scaling your income from zero dollars an hour to $60,000, oh sorry, zero dollars a year to $60,000 a year or more. I know tons of tutors myself, well one is me, one is my friend Tenzin who actually made over $100,000 a year just tutoring, all right. And I know other tutors online that are making over $100,000 a year so you can make six figures from just tutoring if you really wanted to. Again, it's not easy, it takes a lot of work, it takes discipline and effort and consistency so please understand that it's not something that's easy but it's simple process if you follow it. All right, now, so those things you did in step two, right? Step three was about building real world projects around real market. Now step four is this step that we're talking about right now, freelancing with Python. So now that you've done all of those things you have the testimonials, you have the reviews that you need, you have completed the real world projects and put them on your portfolio and you've niched down so instead of like doing a web scraping project and a data mining project, and a data science project, and a tic tac toe project, instead of spreading yourself thin like that, you've actually worked on like maybe let's say all web scraping projects, okay. So you've specifically went and took web scraping courses on let's say coursera or Udacity or whatever, you specifically went and learned web scraping techniques from you know YouTube and now you are ready to go and start as a web scraping using Python on upwork.com. Now I'm gonna give you guys tips that are gonna be helpful for people who are getting their jobs the first time and these skills are also gonna be massively helpful for anybody who is a more advanced developer who is ready to actually start freelancing right now. So please pay attention to this 'cause this could be a gold mine for you. All right so number one, you need to have a solid profile. Now I'm not gonna go too much into details about profiles, I'm just gonna hit on like the top parts of the profile. One of the most important things you need is an epic headshot. Now I'm not giving this to you as some bullshit generic blogging one on one advice, all right. This is coming from experience and this is coming from looking at some of the best developers in the world and I'm trying to share this with you 'cause from of a position of pain too 'cause when I didn't do this right it literally cut my income in half and I doubled my revenue by just having a right headshot. What does a right headshot look like? This what is what a not right or a wrong headshot looks like, okay? Most people's pictures are gonna be like that or they're gonna be like something weird like only their forehead is showing but like the rest of the thing is blurry. You have no idea how many potential clients are gonna turn off by that because people are trying to work with human beings. They don't just want the job done they want to work with a human being that they like who can then do that job. So your skill set is almost secondary. The first thing they'll see is a human that they like or not, all right? So this is a pretty important step. So a normal like, that's it all right, that just a little smile, okay, or you can even have like the person who's taking your photo with the iPhone okay, on a iPhone you can actually use this mode called portrait mode which is fantastic. Just have a little bit of light on you, you could take your own photo or you can give it to somebody else, they could take your photo and done, you have a professional headshot. Just go outside, you have the sunlight hitting your face, take a fricking headshot, okay? This is one of the craziest most important things for a freelancer, seriously. Okay, now that you have that headshot, that's important, other things you obviously need are what value you can provide to people. So have portfolio and your projects there and have your testimonials there if you can, if you can bring them from wyzant and takelessons or some people who've met in real life if you can get their testimonials on this platform, that's gonna be phenomenal for you. Okay, let's say your profile's complete what's next? When you reach out to people one thing to never ever ever do which I see almost every freelancer out there, a lot of freelancers out there doing. 'Cause I have a lot of experience hiring freelancers I've worked with, or probably 20 or 30 people in just the last one or two years of running my business Clever Programmer, so I've hired lots of software developers to do consulting or to help build stuff at Clever Programmer, I've hired people who do our Google analytics, our Facebook analytics, who run Facebook ads, graphic designers, virtual assistants, video producers. So I've like worked with a facet of people so I have experience looking through resumes, who do we need to hire, who do we not need to hire. And I can tell you from personal experience the biggest turn off is when I get a generic response that I know somebody's copied and pasted. So often times on platforms like upwork.com it'll look like, Dear Sir, blah blah blah, maybe they'll just have your name and then they'll be like, your project seems very interesting and then they just rant about what they do, okay? And it'll be like okay why are you telling me that you do WordPress and Squarespace and WICS and all this when I specifically wanted help with Google analytics let's say, or I specifically wanted help with this Python project. Don't copy paste ever, it is not a numbers game. Let me just fix that for you right now. Reaching out to people is not a numbers game, okay. You are an idiot if you think it's a fucking numbers game. It's not, so let me just solve that problem for you. You can reach out to a hundred thousand high level people with just some copy paste answer or somebody else can reach out to like 10 people with a really solid customized and personalized message and they'll get back more responses that'll actually lead to something epic. So please don't do copy pasting, big big mistake as a freelancer. What you wanna do instead is actually send a personal message. Let's say somebody's project is, and I'll give you something specific right here on the fly 'cause I do this a lot and I do this in my business a lot and I personally send out email newsletters to you know 70,000, 100,000 people and I know what gets more opens and what gets less opens. I reach out to prospects and I reach out to people and I know what they like and what they don't like so we're doing a lot of testing here. So for example, here's something you could to that would be helpful. Say somebody's project is web scraping pdf links. You wanna reach out to them use this thing called useloom.com, this is a epic resource so write this down or go and install it right now in your chrom, it's called useloom.com and you can just click it and it allows you to make a video right away. If you send a video message to someone you're automatically like 90% more likely for them to actually see it. If you send a written message, which is totally fine as well, but automatically your chances are just so much lower of that person speaking with you 'cause in video you can tell so much about that person, like I can immediately tell whether I like you or not, I can immediately tell your level of reliability, if you are a person who I would like, if you're humble maybe or if you know what you're talking about or how friendly you are, I can immediately see those things. So use that to your advantage and it also requires less work on your end. You could sit there and write this letter that'll take your forever or you could be like hit the useloom button and just go, hey my name is John and I can help you with your, I saw that you have a web scraping project where you wanna get pdf links, that's really cool because I've actually worked on a project like this, let me show your real quick. And then while your screen casting, you just quickly show them your projects for 10 seconds and just be like, yeah it seems similar, I can definitely do this for you sir and it would be awesome if I could just have 10 minutes of you time and we could just chat, looking forward to it, thank you, John. All right, now this video message, okay, you could link it to them in your initial outreach to the prospect, okay, so you could say, in terms of typing 'cause the first thing they're gonna see is a written message. So you could just say those things, hey I put this, I saw your project, the web scraping project you have for getting all the pdf links and I've done some similar things to this and I've actually put together this personalized video just for you and whatever the clients name is, let's say the clients name is Bob, I've put together this personalized video here for you Bob, put the link to the video, and then just go, and if you have 10 minutes to speak, I would love to chat with you, but here's my resume, here are my testimonials, I've done similar projects, I can definitely help you with this. So make it very precise and then do something with low commitment, right? If you do five minutes or 10 minutes, that's really easy for somebody to get on a five minute or 10 minute call. Personally in my experience, I hire usually, like almost every like two or three or the fourth max almost interview, that person I'll just hire, 'cause otherwise it just take way too much time. So most of the people that even posting jobs on upwork.com are usually these solopreneur business owners that are trying to hire a contractor to get shit down and move on. They're not actually going through the regular full hiring process that you know a company that's looking for a fulltime developer goes through. That's gonna be a much more rigorous and a systematic process as it's maybe gonna require multiple interviews, there's gonna be a technical screening, there's gonna be a culture fit screening, then there's gonna be a negotiation phase, that is what big companies will do. But somebody who's looking for an independent contractor, they just wanna get on call with you, they just wanna see your face and quickly make a decision whether you're gonna be able to their job or not. So the more you show of yourself, the more personalized you make your message and if you put a video in there and you show in relevant way, you're gonna fucking kill it, but it's not even gonna be close the amount of responses you're gonna get versus some other random person, all right, somebody else who's just doing the same thing every other freelancer is doing. This is also what's gonna allow you to be able to actually charge a much higher income and command much more premium pricing than every one else, okay. Because people constantly ask, how do I compete with somebody in Indonesia charging 69 cents an hour for coding? That's how you're gonna compete with somebody in Indonesia charging 69 cents an hour by being more premium, by being reliable, by being somebody who the other person can look at and go, this person will actually help me complete this project, right. You can also show your communication skills because most other developers they're communication skill lack, okay. And I can't emphasize the soft skills part of development enough, that's the most underrated part which is actually gonna bring you the most amount of value. Even if you look at statistics online they say 80% of your success in your career comes from your soft skills and how likable you are because you're working with human beings. And 20% of your success in your career is actually gonna come from your technical aptitude in any given field, especially in programming. So those are some tips on how you can actually get these people to respond to you, okay. And if you've completed the first three steps that I've outlined for you, then going into step four freelancing phase is gonna be much easier. Other tips I'm gonna give you on freelancing is start with smaller projects and then build up, so don't immediately start doing, trying to do like a $5,000 contract or something like really big challenging project that you're like, oh man maybe I can't do it. Start with $100 project or a $300 project then move onto $500 project, and a $1,000 project. And then something really smart that you can do is let's say you are working on a project where are making $50 an hour and it's a really challenging project that you don't think you can do. Now this is gonna be the majority of the scenarios. When it comes to freelancing, and all this type of job related stuff, especially when you're not as advanced as fricking Raymond Hettinger or you know Rossum Guido the guy who made Python, if you're not as advanced as them, or really high level developers, most projects are gonna be a challenge for you. What you can do is if you're making $50 an hour and you feel like it's gonna be a challenging project, you could hire somebody on let's say codementor.io which is a great platform where you can hire developers on demand to mentor you. And you could pay that developer 25, 30, 35, 40, or even $50 an hour to help you on certain tasks and for you to understand how it works. So maybe you will work with that other developer for the first few hours or maybe even a week and for the first week let's say you don't make any money of working on this project because all the money you're making you're essentially giving it to this other developer to learn these skill sets and to internalize them. But then a week, two week, three week, four and over the course of a few months or a year working with this particular client now you're just making full on profit of $50 an hour. You see what I'm saying? So initially you're making an investment to hone your own skills, the company's paying you, you're putting that money into a developer who's then teaching you these skills, you're breaking even, and then after a few weeks of learning from that developer, now you can help them completely on your own 'cause now you have internalized those skills. So understand how to actually use help, right. That's what made Henry Ford so incredible he was in a court once and the lawyers were asking him all kinds of crazy questions to make him look really stupid, like trivial questions, like when was the United States created, or who was the president at a certain time, or what's the capital of some other country? And he got fed up and frustrated at one point and then he just looked at them and he said, "I can't answer these questions "for you, but I can pick up the phone "in five minutes I'll find somebody who can.? That's the level of resourcefulness you want to have because one of the ultimate forms of procrastination is actually not asking for help, trying to do everything yourself. Most developers fall victim to this. They take some weird kind of pride in doing everything from scratch not leveraging help, and this is very very selfish and this the highest level of procrastination because they're doing this to build their own low self esteem that they have about themselves so they actually can do something from scratch completely, then it will fulfill their very low self esteem and their very low self image, all right. Whereas if they think about the client and the results that they're bringing the client, you shouldn't give a fuck about how you end up doing it as long as you can get your client the results that they need, right? So if your client needs a completed project, I personally don't care if I had the ability to complete it from scratch or not, I can hire like a developer from Philippine, I can hire a developer from fricking Indonesia, I can hire a developer from America, as long as I'm profitable, I'll put them together and made them complete the project and I'll deliver it to my client or I'll get help from them to learn these skills myself and then be able to do it and then deliver the end result to my client. Ultimately that's all that matters, nothing else matters, the end result for your client is what matters. So understand that you're not as alone because what will stop you almost always you'll look at each project and you'll be like this is too hard, I can't do it. Every project is going to feel like you can't do it. That's why you have to apply for it, get accepted, and then if you can't do it, hire help from platforms like comentor.io or even Upwork or even wyzant, you can hire a tutor for yourself have them teach you the skills on the job and then be able to complete the job. So this is some really deep level stuff which is gonna help you break past that barrier of I'm a beginner or I'm an intermediate, how do I actually start getting clients as fast as possible? How do I start earning an income? What's the path for me? Because if you start earning an income quicker, it'll allow you to actually spend more time learning the skills and then you can eventually get a fulltime job, if that's your goal, or you can actually become a really high level freelancer or a really high level consultant. And eventually you could even turn it into your own freelancing business where you have other developers under you and then they work for the clients that you have and you're the middle man and you keep the profit, they do the work. So you could turn it into a freelancing business for yourself as well but that's a really really advanced level step. We covered a lot, all right, in this video, I'm gonna stop right here. Now let's just come back, come back into our bodies and come back here. So we covered a lot, I hope that you really enjoyed what we covered. I do hope you leave a comment letting me know kinda what you thought about this video and maybe what were your biggest takeaways and if this was even helpful to you 'cause I honestly don't know if this is helpful but I try to give it my heart and give you guys everything you would really need step by step to get to this process. Please also, if you haven't already, like this video and subscribe to channel so you can get more tips on how to become a six figure Python freelancer. With that said, thank you so much for being on this channel, I love your face and as always, this is Qazi and I'll see you in the next video. As you know the Python Freelancing Business Crash Course live training with me and John Sonmez has been launched. We recently opened the doors, maybe you didn't get a chance to join Profitable Programmer, maybe it was too expensive, maybe it was too big of a course. The first time we've ever done this, it's a live training program with me. Four week training program that's going to completely transform your career as a Python freelancer, where you get to watch over my shoulder of how I actually did $20,000 with one client so it's a real case study, its' very specific, one client $20,000. Show you my exact invoices and exactly what I did to land this client and the exact ad that I ran. If you have considering it, definitely click the link below because enrollment for this program will be closing very very very shortly. I put together a video for you that you're gonna find very valuable and is gonna share a lot more details of this. Click the link below and I'd to see you in...