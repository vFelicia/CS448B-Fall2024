rock paper scissors shoot did i get you if i gotcha all right guys so in this video we're going to be building the rock paper scissors app with vanilla javascript beautiful plain simple if you want to code this along with me make sure to click the link below and fork this ripple only if you fork this ruffle you can actually code it along with me why because html and styling is already done you're only going to be working on the javascript part so if you want access to the html css file already the only way to do that is click the link below and fork it and then you'll have access to the app all you have to do is just like code the javascript parts and you should be good to go now right before we actually get started make sure to smash the like button because we want this video to go out to as many people as possible if you don't know me i'm rafa qazi the ceo and founder of clever programmer i've been coding for almost 10 years now and i've helped millions of people become developers with that said let's jump right into the video alright i hope you're excited we're now going to work on the rock paper scissors app perfect okay this is you starting from scratch and now let's just walk through kind of what everything is so let's start off with index.html what's going on in here it's a very simple file with only a few lines of actual code all right some of the code is you know just doc type html html like whatever right that's default html files come with that a couple of lines of code here and uh you're gonna need to know the player score certain div ids because you're gonna need to access them so for example this button has a value remember when we did red green and yellow when we did that color app our buttons had a value red it had a value green it had a value whatever so when you clicked it you're able to retrieve its value that's why that exercise is going to be val helpful to you here no pun intended valuable for you so this is uh that's those buttons you're gonna need to know these classes so familiarize yourself with this index.html because from the javascript side you're gonna need to detect when somebody clicks this button and you're gonna need to be able to refer to these specific buttons you're gonna need to be able to refer to you know the specific things and then right on there okay so for example when the player's score shows up maybe that's a player's score div when the hands show up meaning the computer hands or the user hands they should show up here and by hand it's like computer choice or player choice the result of the game whether you won or lost that should show up here as well okay um obviously above that red button right of course it should show like above there so it should show like here end game button you're going to need this id as well and this script here just means that this index.html here is linked with this uh javascript sheet okay meaning if you ever want if you ever change the name here make sure you go and also change the name here and make sure they both match okay cool but i would recommend you don't change anything because once you're done with your entire code you should copy your working code and paste it back inside of the script okay your and the only file you need to change is a script file okay awesome now let's walk through this project step by step we're not going to solve it right now but i'm going to give it to you as an exercise but we need to just kind of go over some stuff okay so this project will have a couple of functions that you need to implement all right here we go so if you look at this there's only one two three four and five there are only five functions that you need to implement the code shouldn't be like longer than 100 lines it should be less than that probably around 70ish lines without comments and that's what you need to work on okay it's five functions one two three four five six actually sorry six functions you need to work on six functions now with each function there's going to be some documentation telling you what this function should do how to run this function and what it should return okay and then there's gonna be some other notes sometimes if and you know within the function as well so for example let's walk through computer choice well this function computer choice get computer choice randomly selects between rock paper scissors and returns that string so that should be pretty selfexplanatory what that function should do every time i call it here's an example of me calling it get computer choice and here's an example of it returning a random string rock here's another example of me calling it and it returning a random string scissors this function has no arguments okay zero arguments nada so you won't need to add in or take away arguments the arguments are already there for you to help you out here's another function you're gonna need to implement the get result function okay this is going to compare player choice and computer choice and it will return the score accordingly meaning here's an example where the human wins aka you win against the computer when you call get result and you pass it rock and scissors so this is the player choice and this is a computer choice so when you give it rock and scissors who wins is it the human or the bot that wins this case the human wins so then it should return a score of one here's an example of a human losing you call the get result function you pass a scissors four player and you pass it rock for the computer and it returns negative one because rock beats scissors and then here's another example of human draws where you pick rock for the human and rock for the computer and the score should be zero okay so those are examples of how to call this function what it should return should return a number and the two arguments that it has okay this function is probably going to be one of the most difficult ones for you to implement and uh here i i have even other notes for you to make it easier so for example when you're implementing this you're gonna need to have you're gonna need to do a lot of if else if else conditions okay because you're gonna need to check if the player picks rock and the computer picks rock then what happens okay so you're gonna need to write the code here it says all situations where human draws set score to zero so in order to write this well this should be pretty easy because once the only situation it's a draw so you could say if a rock goes against a rock that's a draw if a scissor goes against the scissors that's a draw if a that will take you forever or you could just say hey if player choice and computer joints match that's a draw so you could do it like that all right um so that should take care of all of your draw conditions then here are your other conditions so this is where all situations where human wins you should set the score to one so you're going to use a bunch of else if's here and this is a situation where you will define all situations where a human wins so a human will win if human pigs you know rock against scissors a human will win if the human picks scissors against paper a human will win if a human picks paper against rock so those are all the winning conditions go here and then all the losing conditions you can be pretty clever about it and you don't even actually have to define them because you could just say else human loses okay so these comments are there to help you kind of simplify the logic for you a little bit and then just return the score make sure you don't forget to return the score i'm going to toggle this function and close it then you have the show result function okay this function is also going to be a little bit advanced and this one this function here get result is heavy on if else conditions show result is going to be heavy on dom manipulation okay so show result is how you're going to draw on screen and show stuff for example if i go to the solution version when i click here show result is a function that's doing you know human chose rock computer chose paper you lose and then giving a score of negative one and then drawing drawing it out here okay so that's the show result function so get result will calculate who won show result will then output that the human computer choice the human choice the current score all of that stuff onto the screen so show result updates the dom to you win or you lose or it's a draw based on the score also shows player choice versus computer choice okay now here um you can see it takes in three arguments okay the score player choice computer choice so it needs that in three pieces of information and uh hint on a negative on a score of negative one you should do result dot inner text you lose why because oops if i go back here i have a div called result right so make sure you get this div by using get element document.getelementbyid get this div right store in a variable called result and then you could do result that inner text and change its value to you lose so that's what i said don't forget to grab the div with the result id so this is just a hint on how to like do one of them you're going to need to do multiple divs here then you have on click rock paper scissors so this is where what should happen when the user clicks well right when the user clicks you need to think about what happens so this function should calculate who won and show it on the screen so to give you a hint this function should call upon our get result function and our show result function that's kind of it okay that's what this function will do all right and then we have our play game function this is going to be a really important function the name is a little misleading and i'll kind of explain why but here's what it should do make the rps rps means rock paper scissors so anywhere you see rps it means rocker processors so make the rps buttons actively listen for a click and do something once a click is detected so that's what the function of play game is so all it does is just listening here okay it attaches listeners to these and once you click here it should run this function right there when i click here it should run that function right there and of course we pass in the player choice so if i let's say choose rock yeah and i click that then it calls on click rps and then it passes in rock as the player choice it and then vice versa if i choose any of these other ones and then on click rps knows what to do so i have all the notes here for you right so you make sure to use query selector to select all rps buttons right and then i have even step by step on how you can do it loop through the buttons using a for each loop add a click event listener to each button and uh this is you know um we can say add an on click and this is something that we did already with our color app okay remember we had to add event listeners on click to each update each button's on click properties to basically listen for a click and then call another function so refer to that red green yellow square app that we did okay cool so that's what play game is going to be and then um you know and then make sure that in there in play game you also add a listener to this button too so basically in play game all you're really doing is you're just updating the on click properties of each of these okay that's kind of kind of what happens there and uh last end game end game is just gonna be a function that clears all the text on the dom so if i go here and i hit this it just clears all the text so it takes all the values that you had initially set sets them to empty string or empties them out okay so i hope that you know i i really believe that you'll be able to do this we've done every single every exercise everything that we've done up until this point preps you for this project there shouldn't be any concepts that are new while putting them together is going to be harder and then there's going to be certain things that are for sure going to be challenging so do don't be upset or frustrated if you don't get this honestly i don't expect you to be able to get it you'd have to be really really freaking hyper smart to get this on your first try when i used to do these projects i never got this these types of projects on my own like right away in the start i would give it my best i would come close but it wouldn't be working and then i would actually look at the real code and then i would go ah okay then i would try it again but i would give it an honest try so make sure that you do give it an honest try and try your hardest before you come and look at the solutions and the concepts you know they'll be covered are like for loops dom manipulation variables conditionals template literals event listeners higher order functions and math.random stuff okay so um i think you're gonna have a lot of fun with this and really give it a try and then pretty soon we're gonna walk through and build this together okay so the next uh step will be us actually walking through the entire solution together but for now you should stop take a break and try to build this by yourself all right see you soon all right let's go through and code up rock paper scissors together let's go so let's go and do this step by step all right and we're going to walk through and do every single thing together so this get computer choice function over here remember we made this function that allowed us to get a random item from an array right fruit item we're gonna use very similar logic to that so uh let's go and say and i'm coding this live together with you so if i get stuck in any of these parts it's live yes i've coded it up before but now we're doing it from scratch so we're gonna get so here are the rps choices okay so we have rock we have paper and we have scissors these are the three choices that that are universally available to us right and now i'm going to just say and let's capitalize this r p s okay and now we're going to say we're going to randomly select one so random um choice okay and then here i'm going to do math.random all right and um we're going to multiply that by 3. just hardcode 3 in there because we only have three choices so this will make sure that it gets the number between zero one zero and three okay and then we're going to call mata floor on this so remember because math.random is always going to give you some like crazy number zero point eight four four four four four something right but when you floor it it'll just remove all the decimal places and then round it down so now this should give us zero one and two perfect that's exactly what we're looking for and then all we wanna do is let's let's actually call this random number and then we're going to do uh rps choice pass in the random number and that's it we should just return that okay so return random number so if this function let's see if this function is good to go and if it's working okay so i'm gonna go ahead and call this here and we're gonna say console.log actually here's even a cooler way of testing this so let's just copy this function right over here copy paste it in hit enter all right so basically what all we've done is we took this function and pasted the definition inside of our console and now let's just call computer choice let's call it again let's call it again let's call it again and you can see that every time it gives us a random choice rock paper scissors everything is random okay so this function is working correctly okay so i think that's great now let's move on to the next function this is going to be a little bit of a harder function right this is the get result and it's going to compute the score so based on the score that we give it it's going to say whether you won or you lost so now what are all the situations where a human draws this one over here is simple we're going to say if player choice is you know equal to computer choice well in that case we're just going to return a score of actually let's have a variable here here called score and we're going to basically just say score equals 0. these are all of our draws situations so now all of our drawing situations are handled now we have our else ifs that we're going to start okay so else if actually let's do it this way we're going to say elsif so now we're going to have a bunch of elsifs so what are the situations where a human will win so let's pick a situation where a human will win if a human chooses rock then let's pick a situation where a human will win where they pick paper and then let's pick a situation where a human will win if a human picks scissors okay so those are the three different situations so let's give it a try so we're going to say if player choice is rock and and uh make sure to always have everything in title case like this because if you use lower r somewhere for rock and capital r somewhere else your entire app is going to break okay so just be consistent with uh this spelling here everywhere all right let's go here and let's give it a try it's a computer choice so rock will beat scissors so this is situation one where a human wins now let's try another let's see another situation here okay so i'm gonna copy this and paste this here right so these are now we're making all the situations where a human wins and we're going to set the score to 1 in this case now we're going to have another elsif so i'm just going to copy this and paste that okay and uh let's also let's actually copy i'm going to copy this entire thing and paste it again copy this entire thing and paste it again so in the situation of rock and then we need to handle a situation of paper and then we need to handle situation of scissors so paper if a human chooses paper well what would the computer need to choose in order for the human to win let's think that think about that right so if i chose paper well paper beats rock so then we're going to pick rock here and then scissors beats paper so we're going to put paper here so now we've defined all of the conditions where a human wins so we're done with that and then the last thing we actually just need to do is define a situation where a human loses so what we need to do here is just say else score is negative one okay so now everything else is a situation where it's reversed where the computer wins but we can we can be really smart and cheeky and just say else here okay otherwise you would have to do a bunch of elsif's and then you would have to basically reverse this and put all the choices where computer wins and manually define each one of them but if you do it this way you don't have to define each one of them right and then at the end all we need to do thanks to this note this node is pretty much giving away the exact line of code you need to write make sure to return the score okay return the score now let's take this function and see if we can copy this and let's see if we can paste this function in the command line we pasted it and let's call our function get result and i'm going to give it a player choice of rock and then the computer will be scissors and let's see what happens and we get one is that true does rock beat scissors yes it does so we get back one well what happens if both are rock zero so that's perfect uh let's try let's try all these test cases right to rock scissors we tried rock rock now let's try scissors rock and we should lose scissors comma rock put make sure to put those quotes and let's run it and indeed we do lose so all of these test cases that we have written here right check out what we have written out here so this function is gucci this function is doing what it's supposed to be doing so we're good on the get result function okay so i think we're good with that so we finished get computer choice we finished get result okay now let's go through some of our um other functions that we're gonna be uh doing as well okay so let's let's go to our next function show result well before we do this before we just like do show result kind of in one go let's just attach our listeners first because that's going to be the most important thing because if if i was making this app the first thing i would do is add listeners because if i don't add listeners i'm never going to be able to see really anything happen so let's go ahead and add listeners so loop through the buttons using a for each loop okay so let's do that but first what i need to do use query selector to select all rps buttons so let's do it rps buttons i'm going to set document dot query selector all and we're going to pass it rps buttons let's go to our html file and if you see here we have rps button class right class rps button class rps button so it's not plural it's singular and let's just see if we can actually console log this out so let's go ahead and console log rps button okay and uh here we are calling the play game function so if i hit run everything should run and there we go we're seeing that we're getting three html button elements which is exactly what we expected right and now you can either manually attach a listener to each one of them so you could do rps buttons you know zero dot on click and we could say um you know just console log the uh the value we could do that rps button zero right and then you can just do that value so this is like this would be a way of hard coding it but that's not what we want to do so when we click rock it does detect that we're clicking rock when i click paper it doesn't work when i click scissors nothing works right so let's go ahead and now do what the instructions say here so it says use a loop to go through them so i'm going to say rps buttons dot for each so that will allow me to loop and for each button okay rps button i'm going to do something so for each rps button we're going to add an event listener so let's go ahead and do that now for each button on click we're basically going to say hey every time i click you i want you to call the on click rps function okay and then step four is make sure to pass the currently selected rps button as an argument okay so or the currently selected so basically if i click this then i need to pass this to on click rps okay so let's go ahead and do that so i'm going to basically pass it the value of that so we're going to say rps button dot value so loop through the buttons go through them and then for each button give it this function okay and now if i hit so if i hit run here and i click nothing is going to happen right now but let's go to our on click function and here i'm just going to say console.log and we're just going to say console.log playerchoice so let's hit run let's hit and now you can see every time i click rock it prints it out when i click paper it prints it out when i click scissors it prints it out as well so now the rps button loop is doing what i wanted to do and i'm going to just remove all of these notes because i don't need them anymore because we just essentially did all of this that it was asking okay and yeah so play again button is done on click is detecting the click so that is good now what i can do with the on click is we have the computer choice already ready to go right and we already have the get result function so we can pretty much play rock paper scissors at least in the command line like we're we're pretty much done with rock paper scissors here so i'm going to basically say con let's get computer choice get comp choice or computer choice and we're going to call that computer choice function so let's try it get computer choice and let's just console log our computer choice okay so now we should have and uh what we'll do is put it as an object so then it'll tell us like what's the computer choice and what's the player choice let's run this and click and you can see player choice is rock and computer choice is scissors i'll click again this time player choice is raw computer choice is paper i'll click here i click this one right now so it says our choice was paper computer's choice was rock so our get computer choice function is working correctly that's really good okay well now since we have player choice and computer choice guess what we don't even need to see how this get result function works we just need to call it now baby and have it return the score that's it so let's go and do con score and we're going to just say get result and we're going to pass it the player choice but make sure you pass it in the right order and we're going to pass it the computer choice all right and then we're just going to console log the score here okay and uh make sure to just put it as an object so it just looks nice let's hit run boom look at that player choices rock computer choices paper and the score is negative one meaning we lost right because paper beats rock let's run it again we chose paper computer chose rock paper beats rock so we won this time let's choose scissors and we lost because we chose scissors and the computer chose rock and we lost let's try scissors again and we won because we chose scissors the computer chose paper and the score is positive one meaning that we won okay fantastic so guys the whole thing is working you guys this is really really exciting now the only things that are left are we need to keep track of the overall score of the game so every time the score updates we need to actually keep track of that score and increment it now what we could do is we could actually create a object to actually keep track of both of those scores and we could put that object all the way at the top why are we putting it all the way at the top so every single function can have access to it because it's like a database okay so it will have all our scores we'll say const uh scores okay and then this will have a computer score okay and it'll start off with zero and then it'll have player score and that will start off with zero let's give it a more descriptive name and let's call it total score okay so this will be the total and we will update it depending on you know whether the computer wins or the player wins right or the human ones um and where will we do this well what we can actually do is we can do this inside of our get result function okay so we can actually update this object right over here directly so inside of our get result function you could pass it the total score right and then we could actually do that update that so i'm going to give it i'm going to say total score let's pass it in i changed my mind let's not do it in there because this function is very pure let's not pollute it with other things and this happens very commonly you know as a developer you go back and forth a lot because it's normal to kind of go back and forth and then decide you know what i'm going to keep my leave my code clean because then otherwise this function's going to have too many dependencies and it's going to be kind of annoying so let's leave that as is we're going to update this total score after we get it right so let's say that i on click i get the computer choice i get the score well then i update the score based off of that okay so i'm gonna basically go and say get the total score and we're gonna grab the uh we're gonna grab the player score and we're gonna increment it by whatever score whatever whatever we get as the score okay so this way for now we'll just keep track of the player score you don't really need to keep track of the computer score i will leave that to you to implement as a challenge okay but for now we'll just keep track of the player score and increment the player score okay and then let's console log total score and now let's play this game so rock so player scores negative one let's play rock again so now this time we won right so last game we lost player score became negative one this game we won all right now all that's left to do is updating the dom to actually show you one or you lost or you drew so let's go to our show result function this is where we're going to be doing dom manipulation right is we have a couple of different scenarios we have a scenario where we could say we lost right so if score is negative one then do something else if score is zero then do something right else if score is one or we could just say else do something right so in this case if we want then what we want to say is you or sorry you lose okay in this situation we would want to say you drew or it's a tie or something right so let's put double quotes and now we'll say it's a tie and here we can say u 1. now we need to do something with these strings because right now we're not telling the computer to do anything right so we're going to create uh we're gonna get the divs so let's get the resultive and this is gonna be we're gonna get this by doing document dot get element by id and i believe the id is called result let's go take a look and we have result here okay we have result we have player hands and then we have player score okay hands and then player score okay let's go back hands div is going to be document.getelementbyid and we're going to do hands and i believe this div player score we're also going to need that so let's go const player score div document i get element id player score okay just like that in the in a case where we lose right what we actually want to do is we want to say result div dot inner text i want to set that to you lose and then we're going to do the same thing here and the same thing here okay so let's see what happens now let's give it a try so i'll run this we win and i'm not seeing anything yet so let's go and debug what the problem is so resultive let's make sure that this resultive is the actual div that we want so i'm going to console.log or actually we i don't think we're calling the function show result anywhere so let's go ahead and work on that now so remember on click rps what it should do is calculate who won and show it on screen right so line 74 calculates who won right then we update the leader the total score and then we want to show on the screen who won so let's go ahead and do that now i'll do it at the bottom here and we'll call our show result function and it has a couple of arguments and you can see it's telling us it has the argument of score what other arguments do we have let's go check let's go check player choice and computer choice so we're going to give it the player choice and then we're going to give it the computer choice there we go player choice computer choice okay that's um that's effectively it that's all what we need to do here so let's give it a try now run it boom and it says you lose and it that's is that true that we lost right we got a score of negative one let's try again you won and now look it says um the score is one so i win and then the total overall game score right the total score it says is zero player score is zero now because we won and now it's a tie so everything remains 0 0 0. let's run again i lost it goes back down to negative 1. all right now i won a bunch of times dang my score is just getting worse and worse okay all good so our score is working the way that we want it to work right so what we want to do next is at the end we also want to update the scores okay so let's go ahead and do that so let's update the score div now so or actually let's do hands first because that's really important so we're going to say hands div dot inner text right and it's whatever the choices are that the player choice and computer choice so i'm going to say player choice versus computer choice okay let's run this and let's see what happens rock versus scissors paper versus rock scissors versus rock okay so that's working but it's not really easy to tell which one is the human choice and which one is a bot choice what i'm going to do is i'm just going to put an emoji here and an emoji there so here i'm just going to make a person emoji and then for this i'm just gonna make a robot emoji let's run this now when i click you can see that it shows a robot emoji uh human emoji and a robot emoji right and then all we need to do is just make sure that the score shows up like here right score score should show up there so let's go ahead and do that now and i'm gonna access the player score div and grab its inner text right and then we're just gonna get the total score and we're gonna set that total score to yeah that's actually it i don't even think we have to do anything the total score should just be this and we should be good so let's run this now this so it's bringing the total score as an object because it is an object so we actually just want the player choice score so player score let's run it oops undefined so why is that undefined let's see player player score not player choice run boom negative one boom negative two right if you want to make this fancier or whatever you could put this side of template literals and you could say your score or something something along those lines if you wanted to write you could say your score say one two zero one whatever and there you go now let's open this up in a full tab right and let's take a look at this let's play this game click rock versus rocket to tie click again rock versus scissors you won rock versus rock it's a tie i picked rock computer picked paper i lost right and my score is being updated automatically let's just play a ton of games and let's see what happens all right we're getting on a oh we lost a lot of games there right so there we go so the computer is doing a good job and uh but but we beat the computer right that's what matters we wanted the end so let's go back and now if i hit the red nothing happens so we just have to make the red button work so first let's do the following so we're going to say const endgame button and we're gonna say document.getelementsbyd and i think it's end game button if i'm not mistaken so let's go back let's look and i have a button i gave it id of endgame button so let's go back here and we're going to say endgame button just like this all right and we just need to connect it so we gotta go endgame button dot on click and on click we just want to run our endgame function that's it okay and in our endgame function what needs to happen is it should just clear all the score so in our endgame function we're going to grab our total score okay let's actually pass a total score total score right here that's just to signify that we're passing it the total score okay so we're signifying that we're passing this that's why we're making a dependency and we're getting the total score because the global variable that the whole our entire app has access to this total score okay so this function is going to take total score and it's going to set the total score of the player score to zero and then we're also going to set the computer score to zero here and we're also going to just erase everything that we see on the dom okay so let's go ahead and grab our all of our divs i'm going to copy them from here i'm going to paste these divs here and then we're going to grab their inner text and set it to empty right and then we're gonna do that for both of the other divs so paste paste double click copy double click paste double click copy double click paste and that should make everything empty so i think this should be good for the endgame function so let's go ahead and try this run it play play play play hit the red button and everything clears up run run run run hit end and you can see that everything is working okay perfect so there you go this is your entire app right let's go and try it the entire app is working hit the red button it stops starts again okay so the challenge for you is see if you could add player score player score and then computer score and see if you can see if both of those get updated as you play the game right that would probably be the best version of this app if you can make that work that'd be really nice and with that said we're essentially done with this so all you got to do now is try copying all of the code here so command a command c or ctrl a and ctrl c go back to the exercises that you know the where you were working on this javascript course rebel so go back to that and then go to this exercise folder go to script.js right and see what happens if you paste your entire code over this okay so if you paste your code over this and you hit run and you go to rock paper scissors project exercises your game should run okay just like that so i'm going to command z and undo all of this all right there we go so you should be able to paste it in here and i recommend that you do so then you have this fully working okay and then if you want to delete all the comments you can from this to kind of make it make it a lot cleaner but at this point right the whole thing is you you've done pretty much the whole thing i'm going to remove all these console logs from here just so you could see this in an easy easy to see way like this on click function you'll realize is the main function right it's the entire kind of game logic that happens that happens here and we get the computer choice we already have the player choice we compute the result based on player choice and computer choice we update the scoreboard and then we show that score on the screen so this is like the main logic of the game right this is where your main main main logic is happening so i hope that this totally made sense you understood every single step by step parts of this and this was a lot of fun for me to show you i hope it was fun for you to actually learn this and you enjoyed it but that said i love your beautiful face and i'll see you shortly that was a lot i hope you enjoyed watching that video and learning more about javascript smash the like button if you haven't already make sure to subscribe to the channel because this is a channel where we help you become an incredible developer i love your beautiful face and as always i'll see you in the next video