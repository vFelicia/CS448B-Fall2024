hey guys what's up this is Cosley from clever programmer calm where you learn to code smarter so here we are finally finishing up our rockpaperscissors thank God I can say it correctly finally I'm so sorry I've been calling a tictactoe the whole time I don't know why I keep clicking that but hopefully this entire video I'll say rockpaperscissors and if I say take tact oh I'm probably talking about rockpaperscissors so with that disclaimer out of the way let's go ahead and talk about the solution of rockpaperscissors hopefully you guys got to try it and yeah so let's just get right to it so here we have the game open and I have the solutions here for you guys now having the solution here for you guys is great but what I want to do is I want to walk you through it one step at a time okay so let's go ahead and walk through it alright choice to number so if you did the previous problem that you send bolt video that I made which is essentially you get a person and you have to number them and which place they get so if I give usain you give me back one if I give you me you give me two gives you cause you give me back three right so let's apply that same thing directly here so given a choice we want to convert it to a number okay so let's say that we were given a choice woops sorry about that okay so let's say we were given a choice like Rock you want to give me back zero for given paper you want to give me back one now certainly you can say if choice equal equal Rock right choices coming from here which is the function and if choice equal equal Rock then return zero you can certainly do that but a better way to do it is since we know we have a relationship between two things we can use the key value pair technique so the way that I would write the solution is I would say RPS and I would say if it's rock give me zero if it's paper can't type paper goodness alright here we go and if it's scissors give me back to all right and then what we want to do is you want to say return our PS dictionary and index it by the choice passed in so for example if choice is rock it goes to this dictionary RPS dictionary it indexes it by rock so it goes and looks at this key and it returns a corresponding value so this whole thing evaluates to zero okay so that's essentially the idea and since we're declaring a variable right here and then using it right down below and it's we don't really need to define that as a variable we can just put it here directly but just for reading purposes and making it easier for you guys to look at I'll leave that up there no problem again I can I can do the same technique for this one instead of having a bunch of if else if type of conditions we can have this scenario here and I want to reverse the keys and values here okay so if you give me zero you give you get back Rach if you give me one you get back paper if you give me you get back scissors so that's essentially what we do what we're doing here and this function expects a number between zero and two including zero in two so this is pretty straightforward it will evaluate to the rock paper or scissors okay this is why the function is called number two choice it takes a number and converts it to a choice all right how do we randomly generate the computer choice well that's you know thanks to the random module that we imported here we can use that to actually do this problem we can say return random nut choice and random the choice takes in some input like this like a list so we can go rock paper and scissors now make sure your spelling is correct everywhere because if you are not consistent with your spelling of scissors or rock or paper your program might not work because it's expecting specifically those things right if I open up a terminal and I go and open up Python here and we checked what that does right so let's do import random and let's do a random choice and pass it a list of things like a B and C let's see what it does and let's keep running it so hopefully you're getting the idea that it randomly picks something it's not just picking one thing it's randomly picking between those three choices so just like that you want to do rockpaperscissors because when the computer is playing he's randomly picking between rock paper and scissors right so this is a simple oneline solution now this is where the meat of the project is and this part is pretty tedious because you have to write a lot of ifelse ifelse ifelse type of conditions I'm going to show you a cool way to bypass that okay so i have example code here for you and this should be pretty selfexplanatory okay if so you pass this function human choice and computer choice if human choice choice was rock and computer choice was paper well then paper beats rock and you increment computer score by one the reason why we're saying global variable is because we want to specify we're using these variables here outside of the functions and those are the ones we want to increment okay those are the ones we want to change if you don't do the global variable thing and then you change that you're only going to change the computer score within the function but once you leave the function it's going to be the same so for example if I don't use global and I do this computer score plus equals 1 inside of the function it might computer score might be one okay computer score might be one inside of the function but when you like go outside of the function and you print computer score it'll say zero okay so by saying global we're saying hey that's the exact variable we want to use and if I change it I know what I'm doing I want to change it everywhere okay generally you want to avoid using Global's but for now I want you guys to be you know just use Global's it's fine the reason why I say you want to avoid that is because then you can have like if you have really big pieces of code with thousands of lines or hundreds of lines you don't want global to be changing like between two functions like between if you have to three different functions if they're changing it if they all have access to the same variable they might be changing it in a way you don't want so you might want to give all of the functions its own separate variable so don't like have a collision with each other okay that's kind of the reason so okay that's a little bit behind choice result um and what it takes in as inputs and how we can use that but instead of coming up with a lot of ifelse statements here's a nice little solution that we can do so essentially we can say hey if human choice um this it's a weird trick so sometimes I have to see if I can remember it as well if you take the difference between human choice and the computer choice and this is where the choice to number functions come in handy because what we want to do is we want to take their numerical difference you can't take a difference of strings right you can't do hello or 'rock here paper you can't do that so we want to make sure that these are numbers how can we do that we can say human number is equal to let's call our function choice to number function and since we already have the human choice we can just pass it in that human choice and I'll return it has a number so for example if the human was Rach it'll get thrown into the choice to number function and they'll convert it correctly and so this whole thing will evaluate to zero okay so let's leave it like that and we're going to say computer number is equal to choice to number function and give it the computer choice okay pretty simple so we have the computer number human number now we can take the difference we can say human number computer number and if there and if you take their difference and you modulo 8 by 3 and you get back 1 if you mod something by 3 you'll create a world where the only possible numbers are 0 1 & 2 okay so for example just to play us some times playing around with this group is a very good idea instead of doing all this theoretical knowledge sometimes just play around with it so like let's do 0 mod 3 let's do 1 mod 3 let's do 2 mod 3 let's do 3 mod 3 let's do 4 mod 3 let's do 101 mod 3 let's do some random number mod 3 and as you can see here the only numbers that we're getting are 0 1 & 2 you're creating a world of only 0 1 and two numbers so modulo lets you wrap things around which is kind of nice because we only have we have rock paper and scissors so we want to be able to go 0 1 2 0 being rock one being paper to being scissors and then the next one the next number we want instead of it being 3 which is not in our list we want it to be 0 again so we want it to essentially be like 0 1 2 0 1 2 0 1 & 2 so 0 corresponds to rock one corresponds to paper this corresponds to scissors then this corresponds to rock this to paper dista scissors okay this ensures that we never get a number that doesn't map to one of our existing things ok like essentially what we don't want is this because when it tries to look up 3 & 4 & 5 & 6 it won't get anything in our database or dictionary that we have so we're going to say take the difference and mod it by 3 we know for sure that we're going to get some number like 0 1 or 2 if the number is 1 then computer wins so basically what we say is computer score plus equals 1 or you can write x listed Li like computer underscore +1 um we can say else human score is equal to human score plus or plus 1 and we need to have one last condition that would be if what if they have the same choice so if human number is the same as the computer number then maybe we just want to print tie and do nothing else okay like we want it we don't want to increment any scores we don't want to do anything we just want to print tie that's it okay so yeah all right so this trick is a little weird but essentially what it allows you to do is it takes care of all the possible scenarios instead of you having to write nine different conditions or six different conditions I think it would be six because you have three so three factorial so instead of writing six different possible situations like rock versus paper paper versus scissors scissors versus rock in writing all those if elsif conditions this allows you to write like capture it all in just these three lines the logic IFI put some notes here at the bottom so you can kind of understand how the logic of it works okay so let's say that zero is rock one is paper and two scissors if you do Rock scissors mod three and check if it's equal to one essentially what happens is Rock is zero scissors is to 02 evaluates to negative 2 negative 2 mod 3 gives you back um a 1 as you can see here on this left hand side okay so if I did negative to mod three you get back a one okay and one equals one so it goes rock wins and it's true rock would win even if you just visually look at it then we have the scenario with paper versus scissors so paper is won and or actually this should be it should say scissors here and I'm sorry so paper versus scissors so you have one minus two right paper is one scissors is two as you can see here 1 minus 2 mod three let's check if it gives us one two equal signs mean check if it's equal to 1 then 1 minus 2 that gives us a negative one right this gives us a negative 1 we mod it by 3 and negative 1 mod 3 gives us 2 we check if 2 equals 1 since 2 does not equal 1 we give the win to the other side so we give the win to the righthand side in this case the right hand side is computer and the left hand side is the human choice okay so if the mod is ever equal to 1 then essentially what we're saying is that the human wins and if the mod is not equal to 1 then we can say that the computer wins ok let me just check this against my solution code that I have and yeah that's kind of what it says it goes hey if it's equal to 1 the computer wins otherwise the human wins ok so let's go back up here this looks good this looks good and yeah I think most of the code here looks good now let's first test our code let's run this guy here what's the error Oh Lu would pass in number right because that's our argument now okay so we passed all the test cases let's see if the game runs okay you picked paper the computer picked rock so you win perfect we both pick rock so it was a tie let's do scissors um yep scissors beats paper okay so there you guys go the game is now working I have shared the link with you guys so you can actually go play it there and if you wanna try again now to try to solve it after looking at my solution see if you can now try to solve it out looking at the solution so I'll have the project out the problem there for you guys so you guys can actually try the problem on your own and I'll also have the solution there for you guys and you guys can just hit save at the top left here and then it'll give you a link and you guys can just share that link with anybody that you want and so then you can share this with your friends family whoever okay guys hopefully that explains it you guys had fun doing rock papers and scissors and the next project what I would like to do is build a text messaging app so we'll have an app which can send out texts to other phones alright alright guys take care have a good one I'll see you guys in the next video