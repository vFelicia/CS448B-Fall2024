let's check out what we are going to do what's up guys so this is the app we're going to be building i'll just let this demo running so what we got here is uh some urban city driving some guy on a motorcycle there's some cars and pedestrians these guys are about to get hit and yeah as you can see the pedestrians are outlined in yellow and the car is in red and blue so yep this oregon building you guys are python super excited as you can see here the cars in the background uh some girls crossing the street here it's it's doing a decent job it's not perfect but you know it's good enough so this is some epi guys this is some tesla [ __ ] right here i'm not kidding i'm gonna take a take a look at this right it's able to detect pedestrians it is able to detect cars which is just crazy right i mean it's like imagine basically you know you got your new tesla right and you have to figure out you know what cars in front of you right you need to figure out when to stop you need to figure out when to go this is a system that something that tesla would build for their cars like who is up to build a system like that guys huh tesla autopilot man elon we're coming for you guys elon exactly we're building our own startup company to compete with you elon there we go that's how we're doing it i mean that's interesting that's the hope that's the hope exactly exactly so guys yeah it's like i said who's excited who's excited to build this drop that in the comments below this is an epic system again we are building an ai for detecting what detecting pedestrians and cars yeah with bikes and tracking exactly pedestrian car tracking and this is what this is beginner friendly right this is beginner friendly yeah beginner friendly the app is not hard at all if you're a beginner you should be able to follow along pretty easily uh we're gonna be using python and opencv so opencv is an open source computer vision uh library so that's it just python opencv and that should get this entire app finished yep guys now before we get going guys so here's what i want you to do i want you to make sure that we defeat the youtube algorithm system help us defeat the ai of youtube by smashing the like button subscribing to this youtube channel and of course of course sharing the video is that right yep yep that's it so if you want to see more stuff like this in your in your feed then help the youtube algorithm like this video and then youtube will show you more coding stuff and that's what you want right so yeah definitely do that yeah guys i mean look look how cool this this is such an awesome tutorial look at this guys it's just like it's making boxes around the actual cars and right and it's able to detect them like in real time we're talking like split seconds we're talking milliseconds this is i mean maybe not milliseconds like it's pretty good it's not quite really seconds i mean i mean i mean life is happening really fast right so it needs to detect really fast right yeah it's good like even like pretty like you can like see that pedestrian the distance for a split second at least yeah but yeah i'll just let this demo keep running it's pretty dope um oh by the way guys if you're interested if you guys like coding and um i mean assume you guys are because you're watching this video then here at cleverprogrammer we um what we do is we teach people how to become developers like we teach them how to make a living from coding pretty much so we have we offer courses we have a python course called profit with python that gives you a whole 15week roadmap of becoming a big beginner to expert and landing your first job or client with python so um check that out if not feel free to watch the free content on youtube this is this video is free and we also have a free training if you want checked out too in the description they're both down there yeah other than that yeah that's that's really good masterclass training in the description below if you want to check that out and one thing i really want to mention we we recently had a really an amazing store for my students how about you tell this aaron huh oh yeah yeah this morning so or this morning or yesterday morning i think yesterday uh we had a student land a ninety thousand dollar a year a jo um ninety five ninety ninety thousand dollar a year job uh so the story is she she lost her job due to covid she enrolled in her course she got a 45 000 a year job um through by being on the course lost that job and then a couple days later just happened just just yesterday she got a call randomly um for a job offer for 90k so twice as much really awesome there but just shows that yeah we do get our students results but check it out um other than that let's get into the code not because that's what we've got here do it guys who's excited who's excited to build an ai system like this drop that in the comment below and we're going to be doing this together guys we're going to learn this together so make sure to smash the like button subscribe and let's get into it aaron heck yeah man okay so um yep i think it's been going on long enough let me just cut this and clear my terminal and let's go to a presentation so i just want to give you guys a quick quick presentation a little bit of context before we actually start coding if you want to skip this and just skip right to the code feel free to jump to the time stamp the link will be in description uh this will take like five or ten minutes it's fine i'm just explaining um how the algorithm works and stuff so let's get started so car tracking with python okay uh with a couple cute little emojis there so first of all we're only using computer vision so you guys might have seen some selfdriving cars that have like this weird radar thing on the roof of the car and like spins and stuff it's like completely like the google one like the google one yeah like the google one and i mean that's like using lasers and radar and stuff and it kind of sucks uh but we're not doing that we're only using computer vision because that's how human works you just use your eyeballs you don't have like a laser sensor okay so only computer vision yeah and the reason we're doing that the reason we're doing that is because ilama says so okay elon musk he's a he's uh my dad i coined him as my daddy daddy elon but i'll show you sure sure okay sure computer science only and damn tesla stock is up tesla stock is up so yeah this this worked guys don't smoke though would not encourage smoking okay yeah none of us smoke anything exactly exactly uh anyways so yeah this is the little article that i found there's actually a video of elon saying it he's kind of curt about it he's like anyone using lidar is doomed and pretty much the reason for that is it's bulky it's expensive it's not effective and humans can do it with just her eyes so a car can too okay so we're gonna be using computer vision just like this and not like this all right beautiful beautiful that's really it so let's explain how this works okay yeah let's do it man i'm very curious ooh the slide didn't load oh there you go interesting okay let's keep going all right so let me get rid of this zoom thing is in the way all right so step one so how does this actually work good question this is gone one second guys there we go what happened there that's all right guys that's okay we got we got we got you know there we go but anyways so step one is to get a a bunch of car images so what's supposed to be here is actually this image but in color okay so just pretend that that's there so step one get a bunch of car images that look like this step two you want to make them all black and white so that's what it'll look like and the reason we do that i believe nazi asked earlier is because when it's black and white it just makes the algorithm faster because there's less data you don't have to worry about color data it's just relationships and you can still tell that it's a car even though it's black and white am i right that's that's not that that is true they can still take a lot of things but yeah i mean yeah and if you have rgb color right so you have to have colors i'm guessing it's going to take a lot longer to process because it's just so much more data in there and so we kind of kind of scrap that and be like nope no we don't do that initially enough actually if you look deeper i think tesla does the same thing so tesla when they actually go ahead and process their videos they process their you know their video that comes to cameras they turn that into black and white guys and we are doing the exact same thing like how epic is that you know yeah i think so i mean yeah it's the first step you've got to turn black and white because it makes things faster and tesla's all about being fast but and then step three once we have the um all the images in black and white like you get a bunch of car images make them black and white just like tesla then you're able to detect and track cars all right and basically the same thing pedestrians but i'm just using cars as the example here yeah so that's kind of the brief explanation of how it works like overall i'm gonna go into a little bit more detail here for some context and then we'll get into the code shortly so so how does the computer train the algorithm like how does it go from this to knowing what a car is in each of these images how come it didn't put the red like square like over here where it was incorrect it's actually correcting all of these yeah how does it do that so very good question yeah i mean the computer algorithm behind it we're just going to explain it um in simple terms for people to understand so very simple we use these so these little box shape things are called a hard features and pretty much what they are are like little building blocks like little lego blocks that you can you can use to define um something and that doesn't make any sense but on the next slide i'll show you how it works so pretty much we just do this let me zoom here so i can show you guys so as you can see this is a picture of a car here okay a rear end view and as you can see this little window is is like a dark patch right and this little thing down here is a little bit lighter like this area is lighter and then again the shadow is a little bit darker so what we can actually do is we can take one of these hard features like we have right here this one um like this one but inverted and we can actually say that this kind of matches right over here because it's kind of darker up here and lighter down here so we can say that this heart feature matches this location on a car better than it would match here where it's just flat or flat green up here okay so right and the way it does that is it just takes all of the pixels it just takes all the pixels in that black square and adds them up and then all the pixels in this white square and adds them up to one number which is just like a um the way to really boil down like to a single number how dark or how light that entire box as a whole is and then you can compare those two numbers to be like if those two numbers are far enough away from each other you can be like okay this this rectangle is a lot darker than this rectangle or this rectangle is a lot lighter than this rectangle and that's what is essentially what's happening here because this rectangle is so so it almost creates like a shape it almost creates like a shape basically because if it basically if it knows right darker up top white at the bottom and then i can continue on doing with that it creates like a shape and it remembers that shape basically right it'll just find that this match is pretty good when you're training the data and you're like okay this heart feature of this size kind of matches the car pretty good right okay and then we can also say likewise like i said there's a shadow down here um and this one's a little bit bigger and there's a white strip you can kind of say that this heart feature would match down here because if you cover the shadow it's kind of darker on the shadow and lighter on the bumper so you can actually see that this is also a good match for a car and then these two in um added together you can actually see that this dark window and the bumper and then this dark shadow and the bumper are kind of like these two hard features together kind of define a car even better than any of them by themselves yeah so you guys want to take a look at the shadow at the shuttle below and if you look if you look at all the other cars guys they have a shadow below as well right so that's kind of how it kind of starts to recognize that so that that honestly is so interesting like guys who's like who's who's excited to learn something like this because honestly applying this into your real world into your life is so extremely important mainly because like like you know with tesla with gm with all these companies if they are going towards this they are going towards other autopilot so just imagine right so just imagine the amount of jobs that this will create right like it's just jobs with python with machine learning that's going to create in the future in the coming future and already is is insane bro yeah yeah the uber uber's going out of business man like said that there's going to be robo taxi soon so i might already said this but if you're if you're an uber driver you're going to lose your job so you should probably become a programmer instead because then you can program the cars instead of driveway exactly exactly profit with podcast like in the description it's maybe 10 years max and then your job is done so well okay we don't know about that but let's not be let's not be so harsh but let's continue on bro i got faith in elon man like what are you doing my daddy don't do that bro end this stream right now but anyways so that's how it works the idea is these two har features match nicely for a car um and you can chain like thousands of these together and all added up all of those hard features added up will kind of match to what a car is so these are just two examples and same thing works for detecting pedestrians so i'll show that next okay okay let's go to the next slide real quick so yeah the same exact idea with pedestrians you get a bunch of images okay of pedestrians you make them all black and white you want to run all of these hard features over all these images to find which ones match in which locations and then eventually you'll train it enough for it to be able to detect actual pedestrians so for example like if you look at this pedestrian here then maybe this hard feature will be really good like if you took this hard feature and stretched it taller and put it over you can kind of say that like maybe here is like a darker person or here is a darker person darker person darker person um and then you have the white the lighter areas on the sides okay so you can kind of use that that's kind of a good match also you can see her her pants are very dark here they're basically like dark blue or black or something you could say that this heart feature if it was a little bit stretched taller too and skinnier then you can say okay this our feature matches good and same here because usually people are wearing pants and shirts of different colors so you could say that that also matches a human yeah a pedestrian so and so and so again it basically it almost like creates a shape again you know it creates it uses all those black and white boxes it counts them in and it creates a shape and knows okay so if this this kind of a shape matches right this kind of shape is created it matches a human this kind of a shape is created it matches a car or it matches a pedestrian right so that is the interface what about that can yeah you know or or an apple i don't know whatever you want anything anything you know yeah distinguishing apples from pears like that's a little bit trickier and then you probably need to keep the color in there at that point but i mean this is just a generalized explanation of course you there's always a tradeoff of accuracy and speed so yeah um it takes a lot more work to distinguish an apple from a pair than it does from a human to a car because they're just very different things sure that sure that sweet man all right let's continue on yep that's it so let's just jump into the code let's code it up hey let's go guys we're probably like 12 15 minutes in but um again time stamps in the description if you rewatch stuff or see anything yeah but let's get into the code okay guys are we still live in us we're all good we're all good we're all good we're all good let's continue on guys who's pumped to build who's pumped to build an ai system like this who's pumped to build an is system for a car and pedestrian tracking i'll jump put in the comments below and we're going to get started right now all right guys so i got the code up here and running this is what was running the the demo code it's actually not that long as you can see it's just a few lines all this here was doing all of that it was taking in the image um not the image it was taking in the um the video of the the guy the dash cam and the pedestrians and it was finding everything detecting everything and displaying it to the screen that's all happening right here right okay okay so let's just jump into it we're going to start with just an image and then we'll go to video a second um but yeah feel free to follow along so if you guys don't have vs code you're going to want to download vs code um you're probably going to want to pause this video and download it because i'm going to be going a little bit faster but download vs code get it all set up and that's it next what you're going to want to do is you're going to want to create a python file um you can call whatever you want but i call it car and pedestrian tracking dot pi okay this is the one i had before i'm just going to be copying pasting code um over to show you guys how it works i don't want to have to type it out it's the same thing pretty much but you want to start here okay next thing you want to do is install opencv so you can do that through the command pip install opencv dash python okay and if that doesn't work then try running pip install the same thing but just add headless at the end okay there might be an issue there one of those should work if you're running on a mac or linux computer if using linux you're probably already a badass programmer so you don't even need to you need to know this stuff but again you can just do a google search like how to how to install opencv on your computer if if these don't work you're going to kind of have to figure it out yourself because i can't help with every error but like i said we're we're about to cost 100 likes so let's keep liking the video guys about to cost 100 likes like the video let's and let's continue on yeah uh where was i uh yeah oh yeah install opencv so once you have that installed you should be good okay um the way you can the way you can test that is you can just put python okay and you have your little python of arm here in your terminal and um oh if you know what this is this is terminal so you want to go you can do command space on mac and then this little spotlight thing pops up and type in terminal and just hit enter and then it'll pop this up and this kind of tells you um gives you access to your computer so if you type in python then you can do stuff like hello okay yeah and then it'll print hello whatever says there or you know nice nice nice nice daddy oh my god elon is not your dad bro come on man you look very different [Laughter] no no no don't even think about it don't even think about it no no back on track so to make sure you have opencv installed you can just import cv2 which is short for computer vision too and if you hit enter then you this will happen nothing will happen it'll be fine if you get an error it means it installed incorrectly so just make sure that when you run this it just goes to the next line there's nothing happens that means it's installed correctly then you're good to get out of python you can just do control d and it'll go back here and i'm just going to type clear so that we're back to the terminal uh but once you have opencv installed and you have your python file created and you have it open in vs code we are ready to start coding okay okay so now guys guys looks like edwin edwin just gave us a one euro super chat edwin thanks so much appreciated and let's continue on yeah i think my lunch now right now i know right i know anyways so let's just start with a simple um code completed so this is little thing i like to do i put this print statement at the end of my program so that i know if it prints that the whole program completed without any errors so let's just run this first so this is the first thing that i'm going to run go to the terminal make sure you are in your desktop so pwd stands for present working directory and as you can see i'm on my desktop if you're not then um like if you're not if i'm not my desktop let's say i just i'm at my user's user file then you want to put in cd which is change directory and then just type desktop just like that with a capital d okay and then once i do that then i am in desktop okay then once you're in desktop that's where i have my files housed or if it's on if you're if you have all your files housed in a folder then you got to go there instead of desktop but for me i just have it on desktop right here that's that that's a messy messy file structure bro but anyway i'm just teaching them how to code like i don't know how to keep my computer organized this is free free content you know all right all right all right okay five five this is aaron's dream rogue off the stream knives anyway so let's run this code so the way we do that is we just write python because this is a python program and then we want to run um car i think i gotta put dashes car there we go so car and pedestrian tracking dot pi okay these little slashes into space because it's kind of silly when it when there's actual spaces like i had underscores the other file but ignore that yeah and the way by the way and the way aaron was able to get that is he simply started with so he typed in car and then he pressed tab right away right so he pressed tab and that's basically right away it autofill because you know we got autofill and yeah it tried to auto find any any files that has car at the beginning and then it gives you all the options exactly um you can just type it all the way out maybe just use underscores because then it gets rid of this nasty complicated thing with this stuff if you just use underscores and all your file names and you can just type out this exact thing and then you won't have all this weird stuff it'll just look like it'll look like like that yeah okay exactly it looks nicer but uh this video will just use this okay that's fine so when i run this because it says code completed then we should see code completed pop up here and voila it does so that that okay uncompromisingly because there's just a print statement but like i said when you're running opencv you want to run import cv2 make sure you save and if we run this now then and this prints out we know that this is working correctly if this doesn't print out that means there's an error here importing and then we'll see it but i mean i think it's going to work so you can press the up arrow key to repeat your last command and just hit enter again and as you can see no errors so that's it our program has been completed thank you very much no no i'm kidding all right so let's start with just detecting uh cars and images all right so i have a little mini program up here let me just comment this out it's a comment out in python you can just use triple quotations like that and everything everything between will be commented out and these there we go save this and here we go so it's even shorter for just an image but we're going to go through all of them one by one and explain how it works okay so let's start with this all right so first thing we're going to do is we're going to want to decide on an image of course if we're going to be detecting cars we need an image that has a car in it to detect okay so i just have an image on my desktop called car image.jpg right here car image.jpg the same one that was in the slides i was using i just cropped it out yeah the same exact image and we literally and we literally and we literally got guys we literally just got these images from the internet so don't think it's anything special it's just an image from the internet and we're yeah yeah yeah yeah yeah yeah yeah i'm actually using in this in this tutorial the links to the youtube videos i stole them from are in the description so credit to those people the guy on the motorcycle he has like two million subscribers for riding his motorcycle around cities and like revving his engine at hot chicks like it's pretty cool but all right all right okay i use a video from him and that's where i get it from so this isn't spoofed i'll go check it out there you can also use a youtube downloader to get the videos yourself if you wanna use the same videos then by all means do it so this is the car image.jpg okay right here and um that's it so the image file we have is just car image.jpg very simple okay and let's just run this this is called unit testing every time you write a new line of code or like a different um different group of code i'm a little bit ocd and psychotic and do it every single line i run it to make sure code completed prints because if it doesn't that means the line i just added screwed something up right okay okay called unit testing because you want to test every single unit of change in your code right um even you can be redundant even if it's like as simple as oh i deleted something like you maybe you thought you deleted the d but you actually deleted this that's gonna screw you it's gonna it's gonna break the code true um but yeah pretty selfexplanatory that's the importing the image there second thing is we're gonna want some way to be able to detect and track cars okay and pedestrians well let's just start with just cars okay so let's start here so these are um our image we put in some comments because comments are good it's good coding practice and our pretrained car classifier okay so this is a little bit wordy but all it is is like i said when you when you train the algorithm with the hard features and you have a big list of hard features that defines a car when they're all added up like the dark boxes and the light boxes all of those added up define what a car is like it kind of captures the pattern of what a car looks like on it in an image or in a frame of the video then you encapsulate all of those numbers and heart features in a file an xml file so um i think yeah so what this looks like i can actually open it right here okay i'll take a look if i just open this up then this is what it looks like so cartesian xml so all this is this is the result of training the algorithm this is what the algorithm at the end spit out after you put in thousands of images oh by the way i totally forgot the car images the data set that that i stole sorry guys we borrowed the hey i got it we bought it gonna die on the stream you got some water you gotta get it okay what's up get some water you know yeah i got some right here actually so okay i'm going to drink while i'm talking all right cool cool should be awesome conquering hiccups okay anyways all right so we're not actually going to train the algorithm ourselves on this on this video that takes way too long because like it takes like like a long time for a human to learn and build a habit it takes a long time for a baby to understand what a car and a pedestrian is the same way it takes a long time for a computer to learn what a car is because you have to give it thousands of images and run all the thousands of heart features at every location of every size of every orientation until you eventually decide on the hard features that match nicely for a car and then once you have all of those then you're good to go but the end result is pretty much this okay so this is just like some encoding i actually don't know how this works exactly it's just the xml xml encoding is what they use but the idea is you can generate one of these files um and it has all the numbers like these numbers are like different coordinates and different colors and different thresholds of like okay is this a hard feature is this good enough it needs to be above this number below this number and it just goes through the entire list of thousands and thousands and thousands oh yeah guys cause he called me i don't know if you guys can hear one second guys oh we got another donation dope got it yeah i'm not in the chat guys i think we overlooked that but somebody somebody uh donated uh are we still live nos yeah we're live of course all right yeah let's keep going let's give up there's no no i was just i was just talking with kazakhstan we were like you know yeah yeah yeah all right guys we're back on track somebody else donated i think we missed them the chat because we're focused on the code so we overlook that but don's keep an eye so whoever that was i don't know their name but i appreciate that very appreciate that appreciate the gesture and where was that yeah so the so this is a long list of hard features it's going to go through all of these and if the image passes all of these you can say okay yeah this is a car awesome or like a little patch of an image if the little patch passes through all these and it's it's a yes all the way through and it it counts as a car if not it's not a car and then that's how we know where they are so you're going to need to specify this file because this is what's going to tell us what a car is and what a car isn't and the link to this file is actually in the description so you can just go download this it's just a url just go file save as you can download this um it's actually just called car.xml but i added the detector for for the video so download that okay that's explanation of that a lot of explanation for one line of code but i don't just want to be like hey just download the work like nah i'm gonna explain i'm gonna explain how it works so they have an overall whole understanding that's the proper way to do stuff okay we're actually programmers i mean we're lazy half the time but it's fine um all right so moving on um now the next thing we're going to want to do is we're actually going to want to create an image within the opencv format so this here of course this is actually just a string okay car image is just a string in python but we want to give it to opencd remember cv2 and actually read the image so that opencv can actually use it correctly okay so all we're going to do is we're going to call opencv.imageread and pop in the image file the name of the image file which is just car image.jpg again car image.jpg right here so we're reading this in our program and from there we have it in here image so that image is actually now in this variable here in our program okay so why don't we just show uh i believe so the image image image read file imagery file basically like takes in the image and all the and it processes it as like data is that what it does right yep so it just read it it just reads in all the pixel data from that image file and then reads it into some double um multidimensional array so you know like a big array a double array of an array of arrays so that every pixel has its own data and then it's just all encoded into this one variable here image right right right gotcha gotcha and now what we're going to do is we're actually just going to this is not a face detector this is a car detector okay we're going to display this image so there is a um we're also going to need this just once guys so so these two lines of code that we're currently working on we got the image in our program next we're going to need to show the image so opencv has a a function or method called image show and the first thing is the name of the window so the name of the window like here is car and pedestrian tracking.pi that's what will pop up there and then the actual image won't show okay okay that shows up and then in opencv this basically just means display so opencv.weightkey you need to you need to run this line of code so that it actually displays otherwise it'll display for a split second basically one frame so like a literally a split second then it'll disappear but this says wait until you hit a key before it disappears so it kind of like this displays for a millisecond but this makes it pause and so you need okay okay okay okay it's kind of just like display by the way by the way i just want to say thanks to lars lars donate looks like a euro as well so appreciate that man and we got sony pete guys we got so many people in the comments between abdullah between kristen between checks between kant usa usma vicky right joshua so many of you guys amazing and so excited in the comments i'm excited that we have such such a great community man literally so yeah i just wanted to mention that because you know so many amazing people that's yeah well let's go ahead and continue on awesome you guys so let's just run this code now all right so again we imported opencv we got the image file we have our car classifier we import the image okay okay um and i just want to show you the image now real quick okay to prove that the image is actually showing up and is within our python program so this will actually pop up a little window with the image and that's it it's not detecting anything yet it's just going to show the actual image so boom right there as you can see this is clever programmer car detector and that's the image right okay okay and remember this this title is from here okay so that's that all right now let's just quit out of this so it's waiting for a key press if i hit space bar or any key it'll just quit out and now we can continue on all right okay so so now we're going to be coding in here because of course at the end we want to make sure we're displaying the image at the end um but now we have our image in our file okay so now that we have the image and we have a classifier how do we actually find where the car is in that image because i mean there's a car here there's a car here there's a car all down here i mean granted these are half cars so it might not detect these i don't think it will but these full cars it definitely will okay well kazzy's calling again hey what's up quasi livestream is dead is dead uh no you're not mute no it's running is it is it stream up guys in the comments can you guys it's running it should be running guys right it's running you guys hear us it's working yeah it's all good guys always good got it it's all good it's working now all right we don't want another dead livestream you know you guys it's terrible because it keeps getting cut off but yeah yeah i think we're good right i think we're good yeah we're good we're good we're good we're good man we're good we're good anyways so this is the image that's going to be read in and from here we want to be able to classify that this right here is a car so it's like if we pass this little rectangle of the image through that whole xml file and if it gets all the way to the end it's like okay cool this square counts as a car and this square does not count as a car okay okay that's what we're doing so the next step to do is to actually create our classifier so that's pretty simple that's just this line right here let me show you guys a copy and paste this and we want to create our car classifier so all it is is we run this function opencv dot cascade classifier because again we are running a har cascade algorithm that's why it's called cascade because there's a cascade a long list a long chain of our features that we're going to run it through and classifier is just classifying something as a car or classifying it as a pedestrian or classifying it as a face or an apple or whatever but in this case a car and the classifier file is what we just specified the xml file file so we just pop that into here and so opencv we're just going to create a classifier from that file and then we're just going to call it color tracker because once you have a car tracker now we can apply this card tracker to this image and we can actually find where in this image if there is a car or not so here there's a bunch but it might only it might only detect a few but that's the idea okay so we're in an image we have a car tracker now we just want to apply this car tracker to the image and then spit out the rectangles okay right so let's move on um i mean again this doesn't show anything we just have the car tracker created if i displayed it it's just going to be the image again so i'm going to move on like i said in our presentation we do want to convert it to black and white though first so let's just do that next and the reason for this is because it speeds up the algorithm makes it essentially three times as fast because instead of three colors rgb we can just focus on black and white that's it so you're simply converting basically from from color to to to to black and white yep okay question if you guys wanna why don't why don't you do why don't you do that before you classify is my question like why don't you do that before the classifier i mean you're just creating it yeah we can shuffle this up it doesn't really matter it doesn't matter okay yeah doesn't matter i mean this might make more sense because you have the image then then you change it to black and white and then create the classifier gotcha i mean we could even do this you know we could like keep away or different so like we've got an image here yeah and then we read in the image and then we change it to black and white and then we get a classifier and then we create the classifier and then but the point is what we want is we want to have this uh classifier and this a black and white image ready so once we have both of these we can do this in any order then we can pair these together and actually get the images okay nice so i mean i guess i'm going to put it back here because i like keeping all of the static stuff together because these can change like you can change the file very easily here or the file very easily here just by changing this and all this code remains unchanged right all right so here's we got somebody asking how can i how can i donate oh my gosh some of you guys are asking how can i donate dang i really appreciate that guys that is so awesome my paypal is my my venmo my only fans like i got everything just paid all of that you know yeah my snapchat no um i actually don't know how you can do that do you know nas i don't know i think kaz is got it cause he's got it he's got taken care of oh it's good yeah cool yeah or we can hook you up with something maybe there's something uh a itch like a fighter course something i don't know yeah yeah it's something up who knows anyways back to the code you guys so once you have the image right in you want to change it to black and white like we said because it speeds up the algorithm and you can still you can still tell what a car is and what a car isn't in black and white images so it's totally fine um you want all the improvements you you can have there's always a tradeoff of speed and accuracy pretty much in everything in life um so algorithms are no different so you kind of want to change like again like an apple and a pair if you go black and white it's going to be much harder to distinguish the difference um but the car and a human very easy to distinguish okay right yeah yeah that's true the way we do that is opencv you just there's a function called convert color so all you're going to do is this allows you to to convert color to black and white it allows you to convert black and white to color and there's all different kind of color encodings i'm not going to get into crazy details but the point is this allows you to convert the color stuff of an image to whatever you want i could even make it all red like have only the red channel it'll look really red and stuff like that all right so i'm not going to demonstrate that here um well let me see actually now i don't i don't want to go down that rabbit hole um the but yeah the point is you can you can convert any the color of any image so we're going to feed in the regular color image here and then all we're going to do is we're going to say we want to go from color from bgr to gray so bgr is just rgb backwards in openc and opencv rgb rgb is like you know the color of a pixel everybody should know that if you don't now you do um then they just use it backwards so it's bgr a little bit confusing i don't know what that's so weird that's that's so weird like about yeah it's like this like but wait if you didn't know if you guys didn't know rgb it's red green and blue those are the three main colors that all the other colors are made up of if you didn't know that so yeah that's that's something interesting for you yeah yeah each pixel has a r a red a green and a blue light and then it just like makes the brightness of those three different levels and the combination of those three levels can make any color pretty much if they're all max it's white if they're all off it's black okay for rgb but for gray it's just one number there's no there's no three channels it's just oh is it zero to like a hundred or something yeah yeah yeah yeah okay from zero to 100 like what's the brightness that's all it is so we're just converting rgb to gray and uh once we have that i just call it black and white because why not um now we can actually display this black and white image so let's take this and in our image show down here which was showing the color image before let's just change this to the black and white image and of course we need this to display for longer than millisecond and this should actually give us the black and white image okay so let's just run the same thing again again your up arrow key will allow you to go to the last command you ran in your terminal hit enter and voila we have a black oh my gosh okay interesting guys give give some air give us aaron some round of applause in the comments below i ran six lines of code you know i've been coding for eight years and we converted an image to a black and white image that's what we just did this is all i learned in eight years guys exactly all eight years in college eight years in college you know it's a grad school pursuing masters and everything um anyways so that's the black and white image so now that we have the black and white image we can actually apply the card classifier to that image and then we can get the um the the car um in the image out okay yeah so next thing we're going to want to do is actually detect where the cars are in the image so let's run that next okay okay so i'm gonna got it are you trying to figure out what line or line to write this on no no i just kind of want to like segment like files shut up guys well guys drop in the comments below what what line should should aaron write write the piece of code we'll see we'll see we'll see one day one day anyways uh yeah so the way you you detect things in opencv is once you have a classifier object okay a car tracker you can apply this to an image so all we're going to do is we're going to say car tracker and we want to detect multiscale so what that means is detect cars of any size of any scale okay so we're going to detect cars it doesn't matter if the car is big or small it's going to detect it matter what or even if it was even bigger it'll detect that too okay got it got it got it got it so wait some of you guys some you guys guys what other editor is this guy this is using vs code guys okay these go so like just download this code is the the most the most important one you'll ever use as a developer so yeah it looks like wait who is this so yeah just download that you should be good yep oh by the way um if you guys want to have the the the documentation for opencv um i'll link that's linked in description too so you can check all these files because there's a lot of cool little things you can tweak i'm not gonna go over all them extensively i'm just getting the app done uh but detect multiscale there's cool things you can add on to the end to kind of like tweak the algorithm to make it perform better or worse yeah that's linked in the description i'll just show it right here though detect multiscale so this is documentation again link in description just click there it'll zoom in guys yeah cool cool link in bio link in description i'm used to that you know i know i know you [ __ ] dirty millennial okay listen awesome let's just let's just let's focus on the work here okay [Laughter] like i don't like those no boring videos boring live streams anyways so um yeah detect multiscale so of course you take the image in first which is what we were doing here we're just passing in just a black and white image but then there's other stuff you can add on there's all this cool stuff reject level scale factor minimum neighbors you can read all the details here if you're interested but you don't need it for the app to work i'm not using it so that's really it so detect multiscale you just plug in the black and white image with the car tracker that we got again from this xml file which was trained with the images and the hard features so that's the whole entire holistic view and once we apply this tracker to this black and white image it'll pick out all the places in that image where there's a square that contains a car and it'll give us the coordinates of all of those cars okay okay so why don't we just print this out and see what the hell is in cars okay okay guys this is getting interesting guys this is getting really interesting all right let's see let's see let's run it and boom so again the black and white image is popping up because i still have these two lines of code down here running okay but okay that i printed out cars so all cars is just the numbers yes relative to that really yeah i mean uh i guess it's only taken two cars in this we'll see exactly where they are in a bit i already know at the time because i ran this before but it detects this big car in front and this little car on the right reason being is because these are all half cars so it's not quite smart enough to get the half car well actually actually actually that's a good question guys guys which cars do you think it will actually detect let us know in the comments below like okay man yeah i know you give it away but like this is come on bro gotta not give it away so easily you know but easy mode i mean like it's impossible to predict bro like not even us you just run the program and see what happens like come on yeah but uh yeah but anyways so yeah it's gonna detect this one and this one okay so there's only two spoiler but these are the two these are the two cars so these are just the coordinates of where the car is it just kind of like defines the square that's all it's doing okay so there's two cars one car here one car here if there's ten cars like in the video stream there's gonna be like ten of these in here instead of just two right all right so that's really it uh let's go back and now all we need to do is once we have these coordinates we just print out we just want to draw a rectangle around that car so we can actually see it because we know where it is we just can't see it because there's no rectangle drawn on the image yet wait so those so those numbers were actually rectangles is what you're saying yeah they kind of define the coordinates oh this is guys yes this one yeah interesting okay okay okay okay okay okay the top left point the top left point of the of the rectangle and this is the width the height see it's the same because it's the square this is the height it's the square yeah yeah that's all interesting okay okay okay gotcha gotcha gotcha gotcha yeah applause for that this is really cool stuff you guys don't hear you aaron you don't hear the sound of the chat here you know i'm in the chat i'm in the chat aaron you don't have you don't have the center fox but we have some amazing sound effects going on in the background just so you know it's amazing sound effects yep yep yep yep you'll you'll see it later don't worry we'll see you later oh in the stream okay i thought i thought that was like you know it was like dying outside in my background but there's nothing happening bro yeah awesome all right anyway yeah so this is just like because they're squares by default um we're detecting things within a square so this is the width and height of the square because it's the same number within height square and then this is the left the top left point in the image of where it is so from here we can be like okay this is the top left point and i just draw a square of these dimensions at that point going down to the right and that's actually where the um the car is in the image so there's two in this one okay so we have top left point and width and height okay if you guys watched the face detection video a couple weeks ago very similar we're just detecting different things and applying it differently but um same idea okay got it um so guys who's ready who's ready to see some squares and detection squares huh who's ready you guys ready you guys ready drop in the comment below and aaron let's see it let's see it bro got it all right you guys so um okay it's gonna be what's up e uh bgr so this is actually wrong let me okay let me explain this i just copied and pasted um actually let's get rid of this for now i don't wanna okay ignore this loop for now actually let me just get it straight up delete it because i wanna explain it line by line all right all right all right oops let's go logan hey so here we go here is the um the line to draw a rectangle so opencv allows you to draw a rectangle on any image very straightforward and simple so it's just called dot rectangle so opencv opencv.rectangle and then it's like okay what rectangle of what size what color what thickness and where do you want to draw that rectangle so this is all these specifications here and of course we have that data within cars so if we have the data in there then we can just print it out here okay but where you get the x and the y those are the question where is the x and y coming from uh from here so we're gonna get that data out of here so remember okay okay remember we have these here so this is gonna be x it's gonna be y y it's gonna be width and this is gonna be height and then from there we can just x y and then x plus width and y plus height and then this is the color this is the color of the rectangle and this is the thickness of the rectangle oh that makes so much sense now guys that's actually that's not that's not that's not so bad at all guys you get this like drop down below do you get that like it's actually not bad you're simply drawing a rectangle with x y coordinates and you're saying here's the height and here's the width like that is pretty pretty interesting and it's actually not that bad to understand as well you can do it like we can do it you can do it too trust me if they watch their face to text yourself this is very similar they'll probably breathe through this right now i'm just watching us bigger which is awesome exactly but that was that one was that one was with kazi you know so it's a little bit hard to make fun of him to make you know yeah he's more of a challenge anyways um so let's just actually prove that this is is working so we're gonna want to unpack um uh this so in cars it was actually an array right so there's an array here and then within the array there's two arrays within the array so let's just grab out these two arrays okay okay so this is going to be array at index zero and this is gonna be arrayed index one okay because there's two elements in this and then there's a list of numbers in there okay so all we're gonna do is say um i guess cars at zero so this would be car one okay okay and the white white car is zero white car let's just ignore the um let's just ignore the the second car for now okay okay so car one equals cars zero so if we print out if we print out car one uh car one just like that let's go here run it again as you can see we have just the first car so 375 375 that's what we're looking for and from there we just want to get the um x y within height so what we're going to say is we're going to unpack this i'm going to unpack this this this list here and say this is x this is y this is width and this is height okay okay see you guys you're still with us guys guys give us a thumbs up if you're still with us this is kind of like it's all coming together it is honestly not that difficult give us a thumbs up if you're still with us and aaron let's go let's go ahead and start seeing you know the result of all this hell yeah so um all we're doing here is we're unpacking this okay so car one again is this these four numbers and we just want to pack these four numbers into these four variables x y and height okay and then from here now this code should work so x and y is the top left point okay okay we have the we have the image you want to put it on the color image not the black and white image when we want to color on the color image um and then put the top left point x y and then the bottom left the bottom right point which is going to be x plus width and y plus height okay that's how the math works um and then from there this is just going to be uh should be red color so bgr remember instead of rgb so b so blue is zero g green is zero but red is maximum 255 is the highest value you can have so we're creating a rad rectangle basically that's it yeah a red rectangle of thickness two two pixels thick on this image at this top left point and this bottom right point that's all it is because that's all the rectangle is it's two points thanks and then you just rectangle between those two points okay so let's run this and see what the heck happens guys ready actually nothing's gonna happen so we drew it on the color image not on the black and white image but we're still displaying the black and white image so let's just display the color image which has the rectangle drawn on it now okay so now it should work so again and enter and i got the perfect gift for it look at that oh look at that oh look at that you got you don't see it aaron but trust me we see it it's hilarious look at my code yo but i'm appreciating funny or something i'm making very much fun of aaron guys give aaron a thumbs up in the comments guys this is so epic look at this we already did we just detected we actually just detected a one car like how crazy is that with how many lines of code directly directly in front of you uh i don't know one two three four five six seven eight nine ten eleven twelve thirteen lines of code fourteen lines of code guys bro learn to count man you'll count okay you learn how to count okay i'll i can't find plus one fifteen minus one alrighty guys yeah that's just as epic stuff so okay we got one rectangle now my question is how do we get the second rectangle if you guys know how to do that drop down the comments below and a lot of you guys are a lot of you guys are like whoa let's go we got abdullah in the house we got harsha like yeah we got logan whoa we got oh man you guys are pumped for this look at that you guys are pumped i love it if you don't like this when this stream is done definitely go check out the face detection too because it's similar but it's a different application it's pretty damn cool yeah yeah yeah that's sweet for car and pedestrians all right so let's let's see let's see how do we go ahead and actually like get into the second car yeah okay cool well first of all why don't we just change this because this is a very easy change we're currently looking at the first car why don't we just get the second car instead by changing so here instead of grabbing this first car we just grab the second car and let's just draw the rectangle around that so we simply do that by just changing this to grab the second car instead of the first car so second car right and let's change the two just to be clean about and that there should just change all of this to the second car instead and we'll display it to the screen so let's just run it let's see it ready we're going pretty slow but uh it's actually it's actually funny bro i'm not kidding abdullah abdullah is like in the comments like damn aaron and nas seem like siblings fighting yeah pretty much i mean like we spend pretty much every day together working on stuff all the time coding like we practically live together it's kind of annoying yeah i know i'm i'm annoying let's continue on we're here to learn right let's go yeah yeah yeah um so there that's the second car and like i said in this in this uh image this trained classifier is only good enough to train to like identify fullon cars from the back like this these half cars you can't actually get them but actually if you trained um something to detect half cars like the right half of a car or the left half of a car you could actually find a way to detect all of these as well but you have to train it even further yeah and so on or like the bottom half of a car you know something's being but right now like this pattern is what we're is what we're checking is the the full a full back of a car right church so now the point is all we want to do is instead of manually going through the array like this we just want to loop through all of them and draw every rectangle on the image for every car that we find okay so that's that's what i had before i'm just going to have a a loop and this is going to make it super super simple so let's just start from scratch i'm leaving this here for reference but just ignore just pretend we deleted all this okay so what we're going to do is just like in cars so in cars which is an array of an array of arrays we want to or is it an array of arrays we want to iterate through every subarray so we're going to iterate through this first one and the second one and the third and fourth and fifth if there's any of those so basically we're saying um in cars you want to take out the x y and the width and the height of every one of every list in there so actually i think if i just if i copy and paste this it'll be a little bit clearer yeah yeah so i think and i think and i think sorry let's cut you off so like so one important thing guys to mention one one important thing guys to mention is the way that this is works the way the whole xy wh right this right here is an interpolation like a interpolation or there's a special name for it where basically it will take the object that's in cars right it will loop for that and it will basically grab the x y the width and the height out of those numbers right so it will abstract those numbers from those different places and so that is actually in python right i think i'm not sure it's called interpolation but what it is but you're getting super confusing but no no no but but it's important because they're like okay where's this x y w h coming from right but because here's the thing it's looping through one single object so that maybe i can do like a screen brush right on show screen brush if i can do it so yeah right there right so this is the first object right so this first object is going to be on here right in here and it's going to map to the x to here the y to here the w to here and the age to here and there you don't see it but i'm drawing basically on your screen so yeah yeah yeah so yeah that's that's the really cool part about python and javascript actually does this too but i just want to explain that and so you guys know but anyways yeah let's keep going awesome yeah yeah i have the stream up on my phone looks like it's still live yeah we're good we're good number one the bottom right that's we've got 300 people in the house yo wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait which way are you that way can i punch you wait i think i can wait wait wait wait there we go go there you go hold on hold on hold on hold on ready punch hold on no no no no no no no beat him up man i wish i wish i wish i wish we could like yeah yeah yeah i wish this was like a real you know maybe he could punch you yeah that'd be good and then you want to get in the cage bro let's go man i'm ready i'm ready i'm ready man i'm ready have you seen the fight club have you seen warrior with tom hardy steve is like please punch him steve was like please punch him [Laughter] wait punch who punches the question [ __ ] each other bro they want to see us in a ring it's like logan paul in the ksi guys who wants to see a live call who wants to see a live call like that or conor mcgregor in uh mayweather we can do it like that yeah but yeah let's let's keep going we're here we're here to let's keep going bro yeah anyway so this is like the longest explanation of a loop ever yeah yeah yeah let's do it we're having fun you guys i mean we're having fun um so yeah we're to loop over all these and then within each of these we're just going to unpack the x y w and h okay so that's all that's happening there and once we have x y w and h we just want to draw all of those rectangles on the screen we can get rid of this hardcoded so we're going to iterate through every um pair of coordinates in that list we're going to get all of them and then it's just the same exact line of code here we're just going to draw every rectangle on the um screen but actually what i want to do is um a screw it that's fine what nothing nothing there was a little little flavor styling thing i was going to do but i'll do it later let's just so right here this should work so if we run this this will actually loop through both cars and draw both rectangles both both squares so why don't we just save this and give this a run um but so we just give this a run up arrow and hit enter and tada boom then we know the width and the height and then we with the width and the height and this point we can calculate this point so it's just boom boom red pixel width boom boom red two pixel width and damn that's it and that's it guys video and that's it and then for videos you just want to do this for every single frame of the video over and over guys guys if we just did this for we just did this for a picture guys who's pumped to see this for a video drop that in the comment below aaron are you ready are you ready to show this in the video because i'll be epic i get up all night coding and i just i'm kind of like bored you know but uh stuff is awesome like i'm going to send this video to eli musk if you like adopt me please you know like uh you know like big bang theory yeah howard howard everyone yeah yeah that's basically but you know pay me money pay me money i just i just did this for you you're welcome you know you're welcome yeah yeah or maybe he'll hire me who knows i mean maybe one day i'm not sure i'm not sure about it i don't know i don't know why you'll hire but aaron but anyways yeah i'll be a convenient mma fighter like joe rogan and then i'll have elon musk's smoke beat on my podcast oh man abdullah abdullah abdullah was like i put all my bets on nas thank you abdullah oh really all it's unknowns bro i think knowledge would be too scared to hit i think that's what happened to too scared not sure about that i'm not sure about that whatever whatever okay okay all right let's continue on let's see let's go now that we have it done for one image now it's as simple as getting it into a loop okay all right so um i have that here it's pretty simple to add it the only difference is you have to read a video in instead of a a video in instead of an image so let's go up here and actually change that so instead of image it's going to be a video um video okay so i have a video on my on my desktop called tesla dash cam accident so this is actually real dash cam footage from a real tesla that was running autopilot and avoided an accident okay so let's just i'm here tesla dash cam accident okay okay okay and this is just this is just a very biscuit you got from somewhere but like from youtube i think right in the description yeah it's in the description yeah yeah i got you [ __ ] like selfdriving tesla so as you can see this tesla almost it like auto drove and like got out of the lane and safely did that so we're gonna be protecting all these cars in this video okay it's almost over so that's it that's the car i have i trimmed it to that just that little clip um but that's the first clip of the video in the description if you go check it out okay so that's first thing so instead of an image we just wanted a video okay and um from there so all the video is is just a bunch of images so we can just grab out each frame of this video and just apply the same thing as we did to this image to every frame and then display the rectangles on every frame and just loop forever until yeah okay so let's do that okay so i'm really interested to see how this one this actually works out okay cool cool yeah um i'm gonna hey what's up caesar caesar in the house hey what's up copy paste it you know oh yeah that's the best best way especially the code guys i always just copy and paste don't ever don't ever create your own code i'm kidding by the way i'm kidding fine so um yeah i'm just taking a peek here so yeah we need a while loop and everything so well i'll type out this one because it's because it's short this is the first line of code i'm actually coding on the stream i copy and pasted everything up to this point okay okay pretty much what we're going to want to do is we're going to want to have a while loop okay not caps supposed to be locked and we just wanted to run forever okay because the video might be if you're driving a car you don't know how long the video is going to be like a real selfdriving car so you just want it to run forever and then at some point when the car is turned off or like it reaches its destination you could be like okay turn this to false and then it'll stop reading it'll stop reading um stuff from the camera so we're just this is just going to run forever so that's the first step now within here we want to run this same logic on every frame so again we had an image here but instead of an image we want to get a frame from the video so we're actually not going to read an image we're going to be reading a frame from a video and that's what this thing here is so let's just copy and paste this okay okay uh let's see it's indented properly so the way we do that is okay run forever until car stops or something or crashes okay yeah um yeah there we go until what the car crashes oh i don't get sued by tesla but yeah so there's in in um an open cv uh once we have the video here okay we have it's called video capture so see opencv 2 dot video capture and the name of the the file then you can just uh run this and we can just run read so all this will do is it'll read one frame from the video okay and that's a function part of it's a function part of cv okay interesting okay so once you've got another video capture object here called video then you can call dot read on that video capture object which is just the video so you're just gonna read you're gonna read a single frame from this video okay and then once it reads a single frame it keeps track of it so when it when you call this the second time it gets the second frame when you call this a third time it gets the third frame again through all the groups and that's how this is implemented and uh what it returns is it actually returns two values so the first value is if the read was successful or not it might be might be actually keep this in parentheses yeah if the read was successful or not and then the second the second value is if the frame is the actual frame so like this frame is actually the image which is just going to be the same as this so this frame here is actually what we want instead of in instead of using image and reading an image in we're reading a frame from this video got it got it got it so we got the frame here and then this here is if the frame was read successfully so we definitely want to have good code and make sure that there wasn't errors before we try to display it yeah okay and the way and the way i see it is like this biscuit this video that read basically returns an array which we simply basically map the first portion so no when you call it a tuple a tuple it's called no it's a tuple right it's a tuple yeah a tuple a tuple returns a tuple until we map the first the okay fine fine fine fine fine fine because fine it's tuple because we map the first part of the tuple to here and then the second part of the tuple is going to map to here now we don't actually see this you know but in the background that's actually what happened so i just want to make sure that you guys understand this but yeah anyways let's keep going it's the same thing as here we're unlocking a four pole here i mean it's just a four a four variable two four four a fourth ball i can't even say that probably 100 we're unpacking these four variables out of this array same thing we're packing these two values out of this array okay okay okay and this array is a frame which is itself an array it's an image and then this is a boolean yes or no yo is in the house yo what's up all right guys what's up quasi all right so next what you want to do is of course i'll just type this one out what you want to do is you only want to handle this frame if it was successful so you want to make sure you're checking so here we'll call this safe coding use protected you guys um save coding was successful i mean i there's a little option live stream it's like is this video made for kids i was like uh no i turned that i turned that option on hard so if there's any kids here you're not supposed to be here okay you're supposed to um this guy can still still learn it's fine but but yeah so here if if read is successful yeah then you won't operate on this frame okay so i'm just going to copy paste the rest because okay so um so if the read was successful okay only then do you want to continue so then at that point we'll get the frame which is here and then we'll convert the grayscale okay because if you um if you if the frame didn't read correctly okay if this returns false because the frame is broken you can't actually call this on this next step is this needs to be a valid frame for it to be converted to grayscale so if this is an invalid frame because the read like screwed up then you just want to skip this and just break out the loop okay all right just when would it ever be a non invalid frame when the last frame of a video it'll automatically end video by itself automatically okay okay if you air out or if you manually say hey stop this video yeah but wait guys we're completely late guys we're completely kidding about the kids thing if you're a kid it's okay to say a lot of you guys like oh my kid i'm a kid and i'm a kid i'm a kid i'm a kid you know i'm like guys it's okay we're completely joking about this stuff guys i mean it's it's already forgotten at this point yeah yeah welcome kids welcome to woody wonka's chocolate factory oh god all right let's that's let's keep it let's continue um oh man hi mom so where are we at yes gonna break out so once we have the grayscale grayscaled frame here the same idea of an image and black and white we can actually change this to black i'll just keep it grayscale that's the proper term instead of black and white then we have a grayscaled frame from here okay okay and why don't we just um display that so okay let's see it actually um let's comment all of this out because it's gonna it's gonna break something okay okay okay and and let's just this is not going to do anything because it's not displaying anything so we do need the display code again okay remember the display code want to display the current frame um in this case it'll be scaled frame instead of image okay instead of image it'll be grayscaled frame and it'll only get here if the frame was successful remember that you guys because else we break out of this while loop and then we don't even get to this code so it avoids the errors let me ask you a question let me ask you a question we have logan actually asked the question would it be better to would be better to only what would it be better to only use every other frame for speed yeah yeah you could do that of course you would have a little bit lowered um quality you could even lower the resolution of each frame to go even faster because just because the resolution of an image is halved like if this was kind of blurry you as a human could still tell this is a car if it was super blurry you could probably still tell it's kind of like a car you could kind of make it out you're like okay this is a highway and a car so there's many things you can do to speed it up you can down scale it um actually i'll touch on quick if you go to detect multiscale that's the scale factor actually be like okay blur this image a little bit to make it faster you can like increase factor oh interesting okay that's yeah that was good i think that was that's a good question yeah like if you have 4k footage it's going to be kind of like really hard to run all the algorithms but if you scale it down to like scale 4k down to like 360 pixels 360p or 480p it'll be a lot faster and it might still work so that's probably and that's probably what tesla does as well right because they probably scale down the image so that they can process it much faster right because you can't pass it right yeah yeah yeah there's some tradeoff between having accuracy with high resolution images and also speed because when you're driving a real car you need to have real like realtime feedback so they go as high as as high as the accuracy can be while keeping it real time because speed is speed and accuracy are both important it's like oh this car is going to hit me and then two hours later you don't turn you know you're still getting forgetting yeah yeah yeah you got to turn like like video yeah just like playing like this guy crashing before remember like like tesla here it sees this and as soon as he comes over he's interesting it's quick it's really cool yeah it's like instantaneous so there's a tradeoff of accuracy and speed there yeah yeah okay cool sweet all right sweet moving on so uh from here we're gonna display the gray scaled frame and then of course you need to have um this because this will just uh display for a split second and then disappear so we want it to stay on the frame the current frame and this actually tells us to stay on the frame for one second or one millisecond or something like that okay and then and then it'll loop up and show the second frame it'll read the frame it will if it's successful it'll turn it gray and then it'll display it the gray the gray skilled frame and then it'll wait a second one millisecond and repeat and it'll do this for every single time so this is basically you're not you're not creating a video no no i'm not creating a video okay you are so this is going to be a black and white version of that same video god the video okay okay okay okay i get it i get it okay okay okay okay uhhuh you know what is right no i don't know what blue is is it red all right i have to kill every joke bro like it turns unfunny when you say it anyways hey boom hey look at that oh this is like it's like sped up why is it so sped up because because we changed the grayscale so it can compute it faster oh okay okay okay okay interesting so it's going faster and this is the whole video the video is going and then when the video ends it automatically closes guys do you understand like in trouble cosplay do you understand how this even like displaying that specific video right because like i mean look like drop in the comments below if you understand like the way this is working right the way i understand it personally the way i understand it personally is literally right if we have the way i see it is like yes we have a video right we have a video right here what we literally do after that point is we literally we unpack the video and we go through frame by frame and then we output that frame again to create yet another basically video it's just at this time we added the video simply because we change it to grayscale so every single frame as you guys know every video right is creative it's created with frames right what we do is literally take that frame we convert it to grayscale and then we show it again and again you went from video to another video except this time it is grayscale so i just thought it was really interesting if you know what i'm talking about like drop in the comments below because that's just that's mindblowing to me you know yeah what he said yeah what i said [Laughter] all right guys so we have the gray skilled images here in a loop and it's properly looping through every frame of the video now all we need to do is run the detection code again and then from there once we have the detection code we can draw the rectangles again on the colored image and then display the colored image the colored frame instead of the grayscale frame and interesting that pretty much does it and then at that point that we also want to introduce pedestrians and use different kinds of videos with both and mix them together but that's the last step so yeah yeah let's go with that next so the next thing is once we have our grayscaled frame we want to run the car classifier on it remember we have our our i don't even have it it's uh i deleted it didn't i what cart tracker so let's get this back okay so let's get our car classifier back and paste it up here once we have the classifier file then you want to feed that into cascade classifier and we have a car tracker now so this is the pretrained data that we downloaded from this file okay now with this car tracker we can do the same thing we can just go down here and copy paste the code because laziness these types of cars especially i mean yo copy and paste as much as you can because what's the point of typing it out like you want to you're going to make a problem sure like the same time so this is literally cutting the stream length in half and we can fill it up with jokes yeah yeah okay okay okay so now we want to detect all the cars in this current frame so again um we have our car tracker up here auto highlights for us and then again we want to detect all of our cars regardless of the scale of the of the um car match and then what we're feeding in is the grayscaled frame okay because this is the current frame in black and white and black and white is much faster okay okay okay and if any and if you just just so you know guys like when we say frame a frame is simply not only motion a frame is simply just a still image it's just a image from the video right that's why it's able to detect the car so it's not actually moving it's just one image right that's the interesting part about it right we took the image out so yeah let's let's let's keep going and that's how we were able to detect right multiple detect those cards in there hell yeah what he said yeah what i said what he said [Laughter] hey no no no not hitting me let's take it outside okay we'll take it outside next time getting back to l.a i'm after this corona things done i'm back in yeah you can cough at your own pace cough at your own plows you know don't don't cough here don't cough in that way this is the stupidest dream ever but whatever um we paid like two dollars right like people have donated to us i know we made two euros we can go get coffee you can get the dollar coffee for mcdonald's hey let's go let's go anyway so yeah we have the cars here and again remember this is an array of a bunch of different coordinates of the cars so why don't we actually print out um print that out so let's print out cars and each time for each frame you're gonna see a bunch of different stuff print out because every frame there's multiple cars so you're gonna see a bunch of stuff printed on the terminal forever because it's a it's a loop so let's actually run this okay and as you can see wow that's a lot of cars detected in each frame we just haven't drawn them on the video yet you can see them all getting spit out here you know top left point bottom right point the width and the height that's insane obviously the width and the height is always the same that's insane by default and then you get and you can see some of them and you can see some of them don't even have a car yeah some of the yeah they don't have cars correctly but there is no car in that frame and it just skips it and then once it gets to the end um this when there's no frames left this actually becomes false because it can't read anymore so this actually does error out so it actually does get to this break statement on the last frame of the video and that's what you're seeing gotcha happens okay and then and then it gets to the code completed never got it that's why it's good to have this because you can kind of see got it there dope so now last step is just drawing the rectangles on the colored image just the same with the image okay so pretty simple uh we don't need print carbs anymore um and of course on the copper paste master of course two um yeah this one right i think so rectangles there we go so uh pretty much this should work now only only error is that this image is not an image it should be actually uh frame should not be image because we're not doing images anymore we're doing frames so we just pop frame in there so it'll iterate over every single car it finds in each frame and then it'll just draw a rectangle around that car on that current frame again with a red color and a two thickness got it got it so let's just run this and see what happens it's from this big guys ready you guys ready for this you guys ready all right let's see what happens actually okay uh it is not working and oh no oh man oh no oh no bueno this is not good no good it's not good no good no good reason is we are still displaying the grayscale image we actually display the frame because we drew the rectangle on the frame so okay okay little bug there actually you guys see that did you guys get that did you guys get that i hope you did yeah because it was black and like when i ran it i'll run it again okay it was oh okay so now it's working oh hold on hold on you guys are you guys ready you guys ready you're ready for this you ready for this it's black and white no come on cuz when i ran it yep still black and white okay because it says gray skilled frame here but if we're explaining the colored frame which has the squares drawn on it then i can save this and display the frame so let's go um back here this is normal frames right now clear again okay now now we're displaying the colored image with the rectangles drawn on each frame over and over and over again okay because you want to make sure that you're drawing and all right you ready ready hey let's go oh but i mean hey it's not random you can tell that it's more correct than it is incorrect like it's not just random words all over the image it's fairly it's pretty damn accurate like we think about it this is like amazing accuracy that's not nearly good enough for like real world scenarios and cars but you're we're 80 there bro that is insane this is some magic guys seriously like this is some magical stuff how how pumped are you to see this or to even build something like this especially the fact that we just built this like guys we literally just built this in like what and how many and what i mean in an hour an hour and a half and two or maybe holy [ __ ] i mean holy [ __ ] bro chill out guys i only okay i only have i only have one gift to show to show how i think we we feel like right now are you ready ready to see this i'm sorry aaron you don't see this but they will see this so only one only one way only this way oh yeah peace out peace out guys this is how we do it all right let me check this drop in the comments guys for some you'll see it it's going to be a small delay but that's all right who is that you're some random random [ __ ] girl in the crowd that's fine bro this is hilarious logan logan's like this is awesome really this is epic we got logan wow i mean we haven't even gone to pedestrians yet how do we how do we detect pedestrians and cars in the city oh wait so we haven't got the pedestrians yet no not real we haven't even touched that yet we still got to download that classifier and get that running and you have to scan across every frame from both of them yeah so that we can detect pedestrians and cars okay you can also you could train them for anything like you could train to detect nas you know um in videos and stuff if you want to that's important who would want to do that but what i'm going to do is i also want to show you some other videos so i actually have a bunch here okay let's see um i have a couple other videos that i pulled out from youtube this is all from the same video linked in the description there's like it's like within the first three or four all three of these clips are in that video i skipped some of them because it was like dark and rainy and it wasn't performing that well but i mean this is pretty good performance for stuff you downloaded off the internet of course if you trained your own hardcast classifier extensively and you let it run for like three weeks and you traded it then that have really really really good results but these are just ones i just downloaded off the internet like like i said like the car data set this was created by people like caltech the california institute of technology um but these cars all look old so this must have been done in the freaking 80s you know so like this is old data um that we're using but they did use this to train heart their hard cascade but we could go out and take our own thousands of images but i mean i'm not gonna do that sorry guys okay yeah yeah that's too much work that's too much work why why we define the wheel but it's already defined for you you know yeah yeah you know it's like use use a library because it exists but hey we got robert robin donated a hundred i don't know what might that i don't know what money that is 100 you're not euro something i don't know how much money that is it's like robin yeah anyways 100 something thank you robin appreciate it what was his name robin robin yeah appreciate that rob yep appreciate that now um let's continue on so the next step would be um oh yeah i was gonna show the other videos so let's just change up this video so this one this one is actually one where um the tesla selfdriving car actually can detected and avoided a tumbleweed so it was a huge thing on the road and it actually avoids it so let's run this footage so this happens here okay it's running in color and then boom tumbleweed where and it just dodged it bro you missed it i missed it oh man oh there it is there it is oh dang so that is insane yeah and an actual video the guy's talking and then somebody behind him actually hits it so i don't know but hopefully they're okay but it's just a tumbleweed it'll damage your car but unless they swerve they might cause an accident but if they just hit it it should be fine i hope and uh yep so that's that's another video from that clip and then here's another one i just pulled this off like randomly off the internet i just did tesla dash cam footage and i just found this video and then here this last one um is some highway footage also from that same clip so feel free to go watch that same clip that's insane damn guys how cool is that like how cool is that the fact that we just created a system that you know i mean i would say tesla like i mean obviously it's not perfect right but but the gist of it and that now you understand kind of how it works i want to point that out see how this is constantly saying it's a car because think about that there's a dark window the light bumper the dark shadow so it keeps mistaking this for a car because it has that same profile remember the heart feature of light and dark and light and then light and dark remember yeah from here so this matches these things this thing kind of looks like this because there's a dark window a light bumper and a dark shadow underneath the car see dark window light bumper and a shadow underneath the car so that's why it is it's miss misclassifying this so false that's why it's not a perfect system right it needs a lot more classification basically for this yeah i mean if you ran it super extensively you could you could detect every single car in the single image perfectly but it would take forever to run it wouldn't be running that fast that makes sense that makes sense okay cool and so that's it so these these clips are in the description um you're gonna have to download the youtube video yourself and then trim it trim out the the clips but you can definitely do that and then just name it whatever you want it's an mp4 file so make sure you download the video got it got it got it that's really it so i had those three um examples okay and one thing i did forget the show is uh yeah that's okay it's too late i already showed them the image thing yeah uh with the with that video so what should we do now so what what's the next step aaron well why don't we detect this the thing i started off with the demo where there's cars and pedestrians okay both in the same video i don't know if you guys can hear that but okay but yeah this is the original footage i showed so now we want to actually introduce pedestrians as well all right let's do it bro we got cars next thing is pedestrians then we got cats and dogs no okay we're just going to do pedestrians i think yeah pedestrians so yeah who's popping you could do cats and dogs next time but i mean i think selfdriving cars is cooler yeah maybe next time maybe next time but yeah if you're pumped to see that let's get into it actually drop in the comments below too drop the comments below yeah so what we're going to want to do is we are going to want to actually download another um classifier okay okay so we have a card classifier and that's what's doing all the work for our car classifier but we're also going to want a classifier for pedestrians and have both of them running okay okay so how we do that is we're just simply going to download another pedestrian classifier so again the link is in the description this one is actually um supplied to us from opencv by default there is a hard cascade file xml file again called our cascade full body right here on my desktop open this up so it's the same exact thing again it has the all these crazy numbers and it goes on for thousands and thousands of har features um and it filters through all of it but this series of heart features kind of matches up with what a pedestrian would look like whether they're standing or walking or running or whatever or even like on a scooter they would still co they would still be able to detect it yeah yeah so a bunch you can see it goes on forever and it takes forever to train this and actually generate these correct numbers just capturing the relationship in the patterns evil uh aval evil aval is like wow this is amazing wow oh robin robin just donated another 200 i think it's called v dollars i don't know what it's called but another 200 dang i don't know what vlogs are but it sounds like a lot thank you robin appreciate it oh wait actually he actually asked a question he asked a question actually his question was and i can't i can't put up on the screen because i don't have a for example for some reason actually show up on ecam but his question was if a different ide is used well speed and accuracy get impacted and output a different ide yeah no no reason being is this ide is just a code editor it just makes the color it makes the colors nice and makes strings orange it makes comments in green it does all that nice stuff but when you're running code from the terminal it's literally just getting this raw text file this raw python file which is just a text file that has python code in it and then it runs that python code so like i could even open up this python code i could open it in text edit okay got it like this is the code for running in vs code so it doesn't matter what you're using to edit it it's just running this raw text code it's just translating this to ones and zeros that the computer understands so actually what's running all that stuff is literally just this text file this text file is generating all of this this tracking so it's reading the file name getting all the stuff it's making the classifier i mean you kind of can't see but like yeah so to answer yes so to answer your question quickly no will not biscuit would not matter it will not impact any processing or anything like that at all zero yeah yeah zero sweet and um yeah so let's just move on to pedestrians okay so i have a video here a dash cam of dash cam pedestrians which is this video a lot of pedestrians here there's not so many cars because i want to show this first okay okay okay and what we're gonna have to do is we're gonna have to actually get the um pedestrian classifier as well so actually let's just uh grab this okay and paste this here okay so classifier file is car detector relation this should be called car tracker so actually let's change that so it's only popping up here and here but let's change this to car tracker all right okay car tracker so now it's a little bit clear that this is a car tracker and um well actually what we have two different trackers right one is a car tracker and then wait so yeah yeah i uh screwed it up a little bit so we should actually no no this is car tracker down here so this should be car tracker file oops and this should be car tracker file okay okay so ignore this let me just delete it because it might be confusing so let me grow that for now so what i did was i changed this name to car tracker file to be a little bit more descriptive with the name and then again we're just popping this car tracker file into here to get the classic cast fire which create gives us our car tracker now let's repeat these two lines of code but for pedestrians okay so for us it's going to be pedestrian file tracker no pedestrian tracker file equals this okay so it's the same thing as this line but here for pedestrians okay we have a different xml file for cars a different xml file for for pedestrians and let me just comment this again and actually i think it'll be better to keep these together so our our pretrained cats are pretrained car and pedestrian classifiers with an s okay so we have both of them here and now we can have our pedestrian tracker so this would actually be this is where we actually well actually i don't even have to do it i can just copy and paste this here the cascade classifier okay so pedestrian track is going to be this i'll just type it out this time so cv2 and cascade classifier and it auto completes for me and then from here then you want to get the pedestrian tracker file and paste that in here so that should make sense we did it once for car car file car tracker now we have pedestrian file and pedestrian tracker all right so we have both now that we have both all we want to do is detect both and every frame and draw rectangles around both in every frame very straightforward so the thing we're going to want to do is um of course for every every frame we want to run the loop we want to read the frame that doesn't change but um and then we create it we change it to grayscale okay that doesn't change either once we have the grayscale image then we want to detect cars and pedestrians okay see that we're only detecting cars right now but we want to detect cars and pedestrians so that would be something like this okay pedestrians equals pedestrian tracker okay pedestrian tracker dot again detect multiscale because you want to detect pedestrians of all scales in all sizes and we're just going to in the gray scale frame so this is just exactly the same code as for cars we're just using a different classifier okay which means it's going to give us different coordinates different squares of different um of different um which we'll call it what do you mean they have different squares different squares for like pedestrians and stuff like that yeah i get i get it yeah yeah so this is a bunch a list of cars and this is listed pedestrians that's all it is okay yeah okay um so if you guys if you guys yeah so if you guys don't know it's basically yeah we got pedestrians so we're attacking different pedestrians we're using one classifier for pedestrians right and then we're using another cluster for a classifier for cars right and that's that again is detect what that is detected through where through here well i don't think if you can [ __ ] draw but yeah you can see one for car tracker and another one for pedestrian tracker so that is really cool okay all right let's keep going let's keep going yeah and once we have these then we can just repeat the same exact process with the rectangles for drawing the pedestrians that we do for drawing the cars so it's literally the same exact thing i'm just going to draw the pedestrians in yellow instead of red okay and that's really it okay that's it that's it yeah oh man all right so all right okay pasted it the only difference is um for cars you want to iterate through all the cars again for those points then you want to draw on the current frame the current color frame top left point top bottom right of the top left point the bottom right point and make it red with thickness of two now for the pedestrians we want to again we can just reuse the same variables of x y w and h because at this point we're done with them so we can just overwrite them x y w h and pedestrians so again this is a list its own list of pedestrians then we want to draw a rectangle again on the colored frame top left point bottom right point this time we want to do yellow so this is the color for yellow so if um the green and the red are maxed out it becomes yellow i don't know and again guys it's not it's not so much about like you know red green like we simply just pick those colors because you know because why not you just pick the random colors right but you can pick any color you want right that's those zeros yeah this would be white so everything you can pretty much you can pretty much change it to anything you want yeah unimportant detail i mean to be honest in on tesla when they're doing selfdriving cars they don't even bother drawing the rectangles around the car because from this point they just know where the car is and the car doesn't need to see it i mean the car already does see the other cars or the pedestrians with this data it doesn't actually need to draw a rectangle no the rectangles are just for humans so yeah on this okay look look look in life logan in the live stream man look at logan appreciate your freaking energy bro logan says like i love this live stream this is so much helpful much nicer way to expose myself to open cv with this then arena communication you know yeah yeah apple apple is like aaron you're crushing it buddy keep it up bro you're crushing it bro what watch our video and our jokes yeah let's just let's just read this through the live stream you know that's all we do that's what we do this is the communication classifier colon colon detect multiscale detects objects of different sizes of the input image the detected objects are returned as a list of rectangles i mean this is exactly what we're saying right it's just it sounds very nerdy you detect objects in our case cars and pedestrians of different sizes because it's multiscale okay the input images are framed yeah yeah the detected objects are returned as a list of rectangle points and let me just draw them so that's it all right let's do let's see man i'm so excited to see this let's go we're going to see a bunch of pedestrians because the video we're using okay there is there is a bunch of pedestrians but not many very many cars like i think there's like one car here but all these pedestrians will all get um get identified okay so let's just go for it all right wait did i delete something ready ready where'd you delete oh i deleted the whole loop oops i was like yeah did it not work no no i didn't i deleted a bunch of the code i just typed out and then i didn't even run it yet but i caught myself okay okay okay all right let's just do this nastiness all right let's run the python file so car and pedestrian tracking dot pod and boom oh [ __ ] see it's oh deep down taking the pedestrians guys holy moly hey guys this is a wow okay okay holy [ __ ] wait so wait okay this is just pedestrians right now you guys ready check this out how cool is that how cool is that guys drop that in the comment below that is sweet oh man that is amazing all right so wow is that it that is that that's pretty much it what i want to do is i want to add a little bit of flavor to something and then add a couple other um safekeeping things that we're going to go over all right and then add a little bit of style and then and then run it on some new videos and then that will conclude it pretty much pretty consistent that's that's my face right there guys that that is that this right here is probably your face right now i'm kidding i'm not kidding like like make that face right now and as you're watching the video make that face right now you know the place i'm talking about oh okay with a chance of meatballs is that is that okay yeah exactly um bro didn't you grow up when they came out you were like 12 when it came out hey this is still an awesome movie bro yeah who doesn't watch that come on come on man incredibles is better sure come on man what people are like this is what i want to do guys what i want to do is um i don't know about you guys but in the thumbnail of this live stream i had like a little quirky styling thing where for the cars it was red and blue and then for pedestrians it was just yellow so i just want to chuck that in so all i did was i'm just drawing two rectangles here instead just you know for a little bit of flavor and just pop that in so i actually for each car i actually draw two rectangles one red rectangle and one blue rectangle so this is the word what's the reason what's the reason for that i'm just curious just because you want to be fancy yeah i just want to be fancy real quick okay fine i mean so all i did was i just drew rectangle here with the red channel max everything else closed and the blue channel here 255 enclosed but i offset it by one and two pixels a little bit so you can see it changing you know this is like this is completely useless code it's just for a little bit of you know frontend development but when you run it you can see i mean there's not that many cars here but you can see whenever a car pops up there's a little bit of blue as well as oh man a little bit of freaking put that image in the center put the video in the center oh never mind just keep going never mind just keep going you're fine you're fine like that guys how cool is that how cool is that oh you got like okay that that that makes me excited bro honestly all right [ __ ] all right i don't know let's calm down i love this ai stuff i used to i actually guys actually interesting enough i i used to do ai stuff as well for a company but we did we did a yeah so interestingly enough i'll just tell you a really quick story i i did ai for i did ai for um for actually detecting signatures detecting fake signatures so we used a similar we also used lpnc as well and we detected if signatures were fake or they were real and we had i'm not kidding we had signatures from like thousands and thousands of like images and we would be able to detect like if the images was like real or not by the way i don't really know robin robin seriously holy moly thanks again donated 400 400 v v something v dollars i don't even know i don't know robin you're the best thank you appreciate it what was appreciating donations you know oh man yeah yeah but anyways fire yeah that wasn't a fire he's like robin's like yo let's go we just hit the goal [Laughter] all right we're almost done you guys just a couple more things and we can run on some extra videos and then we can just let it run and yeah that'll complete the app you guys yeah so uh last things i want to do are actually um when you're running the the video i want to be able to actually quit the the window um with the key so guys there's a robin donated right there i appreciate it bro right there you guys can see it yeah there we go hey all right let's continue on by the way i don't see you do i see you no i don't see you oh there we go there now i see you there you are now there you go all right am i good no you're good you're good keep going keep going okay got it yeah so here on the code i'm just gonna copy and paste in a little um housekeeping here so if the q key is pressed q for quit then i want to break out of this loop which means it'll abort the uh video stream like whenever you type that key so the key for a lowercase q and uppercase q are 81 and 113. you can learn look that up online every letter and every keyboard button has its own number and you can just find it with a google search you just be like lowercase q and uppercase q what are the numbers you just put that in and um once you have these numbers then if either of those are pressed if key equals um that or that then it will just break out and we'll just stop okay and the key is automatically whatever you press from wait key because it's waiting for a key you see what i mean and so if it's waiting for a key and you press q automatically it goes to the next one and then key becomes q and it'll it'll match and that's really it cool okay last thing is you want to release the video capture so wait what is the release why release what so um video here our video is the video capture object that we got from our video file all right and it's it's constantly reading a file okay and so video is constantly reading a file so when we're done doing it we just want to release reading of the file so it's just like so it's like it's like it's like okay stream of data coming in it's like you stop basically stopping the file you're good that's insane yeah okay it says we're done reading this file just release all resources from trying to read this file so we're done okay that's really it's just a clean up like a memory management thing yeah yeah and that's really it you guys um good i don't think i missed it i'm excited to see some videos bro let's do it yeah let's go here and let's run it again oh your name is ready hey guys oh there is an error here it says key is not defined because you guys know what the key is you guys know what the problem is drop in the comment below you guys huh i think i know i know what it is do you know aaron yep of course i do not are you sure you do i'm not sure i'm not sure about that so yeah the problem is that this key variable doesn't actually exist and the problem for that the reason for that is we didn't actually set that equal to here so this does wait for a key to be pressed but it never captures that so we got to capture it in key and now when key is pressed then it should work okay back here let's just clear this out so it's nice and clean run it again and there we go so it's going hey okay if i press the q key it should quit quit sweet okay cool cool cool all right damn guys this is crazy guys this is amazing holy [ __ ] like we just created a system that detects pedestrians and cars within you know an hour two hours with some training data that's it then we didn't create we just bought it we did we borrowed it yeah we bought i mean okay you can download all this off the internet like you can download xml files for anything you probably download xml file for a cat for a dog for a water bottle for a football um or anything you can download somebody else probably somewhere on the planet has trained a hard cascade file for you somewhere and uploaded it somewhere you can probably download it and you could probably use it and do a very similar thing depending on how well they trained it and of course you can train your own too if you want to go that route i'm sure that exists on google how to do that but that's a much longer process you have to find all your own data yeah cool cool your own images guys so let's let's give you some more videos what has we got yeah so we have a couple more all right um so that was just that was that was like a pedestrian heavy let's run it again this was a very pedestrian heavy video okay lots of pedestrians so what do you guys see what do you guys see you guys see just a lot of pedestrians walking right and it's able to detect those systems and if you think about it right what would a system do you can now since you cannot detect something you basically can now tell a system hey you know if you detected it stop stop the car or hey you know stop anything you want so that's kind of why this stuff works really well you know what i mean yup so let's just do this okay so another another video file i have is dash cam cards and pedestrians because it has a little bit more mix of both this is actually the video file that i um showed you at the beginning okay so how long is this video all right okay that's a different video it's like four minutes long all right um so let's go and let's just let it run so this is the video i showed you at the beginning oh man that's cool damn guys give us some fire in the comments guys that is cool all right look at this guy's walking what is that you see how it's able to detect that like little pothole at the bottom i thought that was interesting yeah it's not perfect but yeah of course it's better than nothing better than random much better than regular and there we go you guys if you can see it looks a little bit slower because it's doing double compute power yeah yeah you see so you can think about it for tesla like a real selfdriving car think about it it has to detect pedestrians it has to detect cars it has to detect signs all different kinds of signs speed limits stop signs has to take traffic lights has to detect different night time and daytime things have to detect um rainy conditions and nonrated conditions it has to actually send those values to the car to break or turn accordingly there's so much going on so this is just scraping the surface this is pretty cool but this is just the very very surface of what actually of what's actually going on i mean in general honestly in general it's like it's it's crazy right because the amount of data that it has to process right in terms of pixels right in terms of in terms of how fast it has to do it as well it's insane but you can see what's real like i think guys what's really interesting and hold on actually no let's let's keep watching the video as you guys can see right the really interesting part is like the fact that the relationship part is like all we simply did is if we would divide a problem right into different little into certain little parts right into into small little parts right which is how do we divide this up like drop in the comments below how do we divide up this huge problem which is we wanted to detect right we want to detect like you know pedestrians and cars in the video how do we divide that well first is we found a lot of training data that's part one right two right we basically we first did training we trained uh we first did testing on the pictures individual individual pictures right individual pictures and then what happened is once we got the pictures right we were able to bring in a video we were able to take certain pictures right every single frame from that video and the next thing you know we're able to display it back to the user so but if i'm dividing this up into three or four different parts you literally just able are able to solve this humongous issue not an issue but this this crazy epic you know thing in an hour or two do you guys see that yeah just drop that in the comment below if you agree with me like seriously because that is to me is insane you know a lot of people think that this is this is crazy stuff but you know honestly you just you know just some work and you're good am i right yeah man look at it go go there i think it's slow motion yeah yeah i mean it's detecting that sign wrong but it's getting the girl it's getting some of the cars in the back yeah yeah right there right there screens a little bit yeah yeah there's ways to optimize this you can be like okay if there's like two if there's two um rectangles in the general same area twice in a row you can kind of be like okay there's a higher chance this actually is a pedestrian it's not just a random thing a random detection so hold on i want to ask you a question so somebody asked a question actually george asked the question how can i get this source code uh if i can take a look at it please so i can take a look at it uh i'll post it in the in the description i'll like upload it to like a riplet or something or it then you can download the code if you didn't type it out yourself with us yeah granted it won't work in riplet like you're gonna have to download opencv the opencv package within riplet itself and run it there but you can just get the i'm just gonna post it there for like code reasons and you can just copy paste it to your own visual studio code yeah wait but can we just put host on github or no you could do that too yeah right that's it yeah either or github's probably the proper way to do it but riplet fanboy so yeah we'll post it to github how's that that's the proper way to do it post the game you can download the code from there exactly exactly exactly so guys how sick was this how sick was that to create such an insane python tutorial such as saying python program aaron i think it's pretty dope i'm just like admiring the the work about other people admiring your work okay don't get too cocky bro don't get too cocky on this you know it's just like you know i said i'm admiring the work that other people have done bro that's the opportunity okay okay okay i thought i said admiring my work you know open your ears i mean what i wrote like 20 lines of code it's pretty badass but i mean you know yeah yeah i didn't do all the training the training that's the hardest part yeah yeah but that that to me is insane so yeah but awesome job guys guys give aaron a give aaron a round of applause in the comments right he worked on this for all of us i was you know i was partially involved in the code i was just like you know okay look at this wow holy crap he's getting these pedestrians super accurately it's like stop stop stop stop you know there's pedestrians in front yeah yeah yeah and then the bigger the bigger the rectangle the closer it is you know you can do stuff like that like if there's a big rectangle you can tell that the thing is close to you yeah yeah look at that that's insane that's cool that is so cool okay this one's not working at all this one's terrible it's like it's like i think it's just too many people man probably yeah there's too much information confused with crowds and stuff yeah if you had just people walking like on a white sand beach just a single person walking it would track it almost perfectly but just because there's so much noise and stuff it's not quite perfect yeah yeah but dude this this motorcycle driver is like freaking he's trying to run people over you know people are like how are you going his name is royal jordanian so maybe yeah something yeah i mean i never i found him this morning because i needed this video but he feels like 2 million subs it's ridiculous oh wow for riding his motorcycle he just rides his motorcycle and he records it is that it i guess so i mean he probably talks about his motorcycle and stuff too i don't i didn't really look at his channel evil evil evil is like evil evil i'm not i don't know how to say that evil was like aaron do a project with me whoa look at this truck i got that truck hard did you hear me did you hear me everyone yo it's getting it's getting the the cars in the advertisement that's funny where all the up top yeah are those even cars oh they're not even cars i don't know their cars yeah i mean guys obviously it's not perfect right this is not perfect yeah but still it's insane it's more right than it is wrong yeah that's that's a monumental task yeah hey guys let me ask you a question like what else let me say question what else would you like us to see like what else would you like us to do in terms of you know ai or face detection anything that you want us to do like let us know the drop it in the comments below right because we read your comments right so we have great ideas for you know what to come next before we have great ideas of what you guys want from us right we read those comments i am not kidding so if you got any suggestions right if you got any suggestions on what to do yeah just drop in the comments below we'll take a look at it and then aaron is just going to take a crack at it you know and then create something amazing right there am i amazing bro i mean you know just whip it up yes i'm amazing like onefourth amazing onefourth amazing yep and boom cool projects any cool ideas you guys have for projects going forward related to python and any kind of artificial intelligence then drop it in the comments too then we can consider it maybe we'll make something maybe we'll use opencv again maybe we'll use something else or else something else something somebody said so we have said idol said idols idol said to detect numbers okay we could do that actually detecting numbers like one two yeah you could you could detect you could yeah you could detect um numbers on a page like if you had a piece of paper okay you had opencv you could you could technically um scan that and then find out like all of the places where there's words like that's actually how pdfs are able to like scan the numbers and letters in it and like auto populate all the numbers in the numbers and letters is through scan it doesn't use i don't think it uses hard cascades it uses something different but um yeah same principle you can detect different letters and shapes on a piece of paper same exact principle what about somebody said somebody said sprush sparsh sparsh asked uh age detection i'm not sure if we can do that that that's a little bit harder protection yeah i mean in theory it's possible like if you had if you had like facial recognition you know how facebook can can recognize your face and be like oh this is causey this is nas this is area tag your friend automatically if it can recognize an actual independent face it can easily recognize old versus young um so yeah you could but you would take more training you would need you would need a lot of picture of old people and a lot of picture pictures of a lot of young people and to distinguish between those yeah that's true but i think it's like when you get to like you know when you're 20s or 30s it's really hard to get the exact age like if it can get an exact age it could be like it could be like old middleaged child infant you could just split it into four groups you know infant yeah kid middleaged adult and yeah elder senior citizen you could have like those four that's close that's true so guys if you want us to do like an age detection system that would be actually interesting i'm gonna make it an ageattacked air and they'll probably say like 50 you know or something yeah the thing with that is i don't know if that exists on the internet we might have to train our own hard cascades and there's other algorithms hardcast i'm sure there is the algorithm used for this um but maybe we had we had someone say hold on it's it zak said face expression detection oh like like smile sad like mad you know be like no man i'm like you smile you know yeah we could do a smile detection or smile the thing i'd be interested it's like smiling or not smiling because let's just keep it simple smiling versus not smiling faces you could have like a little people you could say like smile on top yeah that's not a bad idea we can look into it so guys anything else would you want us to create a face expression system a smile detector a smile will find a small detector system yeah you know because because that way if you guys don't smile you know we could i don't know we detect some points you know you like points for me i don't know i don't know how but we did we would detect deduct points if you guys would smile so yeah sweet i think that's pretty much it bro right we're good yeah that's it so again if you guys are interested in coding more and actually making a living from it if you're not currently doing that if you're uber driver working at a retail or fast food place or something like that yup um we offer courses here at cleverprogrammer to help you learn how to do that so we teach you a bunch of different projects in python and how to actually monetize those skills so there's a 15week program um hosted by uh qazi and um our other python expert jacob yep and then also there's a little bit of me in there we're gonna add in um some stuff in there at some point and uh we all teach python and how to actually use python to make a living from it so if you're interested in that then definitely give it a click in the description there's a free threepart master class and also um the actual course is there so you can check out both um if not then yeah just keep watching us on youtube and thanks for watching you guys yeah sweet guys and i just want to say guys is it just one one small thing guys if you're interested like i said with the profit with python you get amazing success coaches you get you know you get to learn how to make a live a killing with python right so it's not just about teaching you skills right but it's also teaching you about how to actually make money from that because that's the most important thing that you know you're going to get from a course right we get weekly training calls literally every single week you get a coaching call from a developer who knows his stuff right you have an amazing community who loves each other and you have an amazing facebook community at the same time so yeah if you're interested in you know becoming a python developer or learning python and just making a killing with python where do they go aaron they can go to the link in the description and take it out there profit with python profit on course and then there's also a free threepart master class it gives you a little bit more information about making money as a python developer you can check that out it's just about like the opportunity there is and stuff and there's some activities in there you can check it out and then you can join the course after if you want or something like that but exactly yep that options there for those who are interested for those who are not um yeah come back for the small detector next yeah the small detector all right guys awesome guys this was amazing this was so much fun guys oh hold on something evil said my heart my evil says my heart is python my heart is played my heart is python yes what about javascript bro what about javascript javascript cool too you guys you guys you guys are not you know not cool anyways but sweet awesome guys in that case i think we're done here hope you guys have a great day if you guys have well i don't know i hope you guys have a great day and other than that we will see you in the next video right aaron yep next time yeah probably probably tomorrow right yeah probably tomorrow schedule for tomorrow yeah i think so awesome guys stay tuned stay tuned and have a great day guys let's go