react basics tutorial and today we're actually going to be showing you a profit with javascript live coaching call and we're going to give you a sneak peek inside the course and you guys are going to see how our students will go about working and how they can benefit from the oneonone coaching that we go ahead and do inside the course so without further ado i'm gonna go ahead and introduce all of our crazy amazing students over inside of the clever programming community guys go ahead and say what's up you guys are live hello beautiful people let's go love that guys that's the energy we have inside the community guys so without further ado yeah honestly like and this is just the beginning like we already have 150 160 nearly 200 people live right now on youtube as well holy crap so loads of people tuning in to go ahead and watch today's live guys are you excited for today of course we are yes awesome so with that said let's go in and jump in about what we're going to talk about today so guys we're going pretty much going back to how we we normally did it and how we started to call off so um yeah today the schedule is going to be uh very simple i'm going to keep it high level to begin with and i always do that to sort of like give everyone some like a high level knowledge it doesn't matter if you're a beginner doesn't matter if you're a pro this stuff is doesn't matter and never take a mindset of it like oh i've been coding for a while i've been to loads of coaching calls you know like i know this stuff like always kind of start with that fresh mindset of like no there might be one thing that i haven't heard and that one thing is going to be the difference which makes me like a ton of money versus not no money right because honestly it's the little gems just like when you're reading a book you read god knows how many pages of a book but there's one thing you'll take away from that book that will change your life right then in most cases that's what i find when i'm reading um so in today's build but we're not build but we're pretty much going to go through react basics so right now i'm working on react basics modules inside the course so you guys will soon have access to a bunch of really really nice react modules um so yeah working around the clock to go ahead and get that that in for you guys um but yeah so with that done we're going to pretty much go ahead and and also it's going to be open q a so again this is a chance for you guys to pretty much scream like uh what is classbased first functional like what is all of this stuff i have no idea what is a key inside of a component pretty much go ahead and ask as many questions as you want um but yeah uh we actually had a few people asking questions so let's go ahead and warm up with with a few more of those so if anyone has any questions yeah feel free hi sonny yo uh so i have two questions actually since react is an spa right yeah so if if one wants any any um us suppose if we want multiple background images so there are two ways to do it either we uh we just include it in our index.css but then we will lose the functionality of having multiple multiple background for different components and uh the second way is to create a custom component that holds the background and holds the component within it just like a child component and it shows the background that we set using uh this css right so that parent child so this is to solve what problem this is to solve having a background across across multiple components yeah so the problem here is if we have two components that takes the whole ui yeah and uh i want different uh background images when those component loads okay so so what i thought is just create a component that will hold other component inside it and another component with a different background image that will hold another component inside it and that will be within a ternary statement so you can you can do it that way it's going to get messy and the reason being is because you're gonna have everything inside of uh you're gonna have a parent on the outside then you're gonna have all these children it's kind of coupled to the parent then which means that like imagine like you've got like a tightrope right it's kind of like holding tightly onto those onto the rules that you set in that parent that's that restricts your code in terms of like how quickly it can grow also we're nearly 100 people in this court which is insane um but um what i would say to answer that is maybe go ahead and instead of doing it in a way of um doing it so that i would honestly just go ahead and have it as different backgrounds for each component that you're rendering as opposed to but i don't i wouldn't really have logic of having an outside component you know like a parent component um because because i'm not sure why you would want that as in is it why is that uh because those two different components they don't take the whole window space it will take like 50 percent of space and i want different the client wants different background images for that for each of the children yeah for those two specific components okay so i'm going to go ahead and actually screen screen this out because it's actually a good client question that you just mentioned so this is something which your clients ask them guys and it's pretty much a case of they need a requirement and what is the requirement so we have also let me go ahead and turn off my uh i use flux to save my eyes when i'm working late if you guys aren't using flux by the way i recommend you use it uh it changes your screen and gets rid of the blue light the later on the day goes um okay so let's go ahead and run through it so what were you saying so we have pretty much a com like say this is our app right yeah yeah we have children inside of it so we want a background image so imagine we had a background image across the entire app right now did no so so if we had two components inside of it say this is component one component two then what are we doing what where did you want these to have different backgrounds no no no no you want this to be there's only one component in one you want this to be the background there is only one component inside yeah right so in that case i would just make like i would have app.js inside your app.css i would have a background background image and then the children would be pretty much on top yeah but i know uh the question is little bit different than this yeah so you only have one component in this the slide that you were showing yeah only one component yeah and once there is a submit button in in that component so once that submit button is clicked yeah the page is redirected using react router dom to uh to show different component okay so the old component is totally removed okay and a new component appears okay and that is small so it doesn't it does not take the whole uh whole window space okay now i want different background space for the component that had a submit button and the component that appeared after the submit button okay yeah so what you could do is you could have you could have uh okay so we're not going to get too far into it maybe send me a sack afterwards but what i would recommend is i would either use like the redox you could you could do this in redoxes and you could every time you go to a new child component you could dispatch what the new background would be and then you use that background in the parent component so in this one to be honest this is something which i need to deep dive with you on because it's quite uh it's not as clearcut as as as the initial question so i think it's going to confuse a lot of people um so so go ahead and send me a slack and we can go ahead and deep dive on it and then cannot do that directly with css i think you need to set the child property of that in the jsx itself to do that thing yeah so that's what i tried but as sunny said it it becomes quite complex and tedious it's more case of once once we re so this is a good example guys there's there's a there's a problem which seems simple on paper right but the structure of your program can very quickly make it more complicated so um that's an example where it's more about how the structure of the code is as opposed to um you know like what i would say is look into something called starred components right and they can accept props and uh and then what you do is if you combine that with the react context api or redux you can pretty much dispatch your background into into um into the this the global store and uh pull that into that parent component render it whenever you need and change it whenever you need as well that's maybe a way to handle it but go ahead and send me a slack pretty much yeah yeah actually first i will try that that context api com pulled in with material ui's uh style uh css in js syntax yeah so that can actually fix this problem that's actually a good suggestion thanks yeah awesome nice uh okay yo hey this must here can i ask questions yeah go for it dude uh cool actually this question may sound more real related to me but i think the answer your answer to it may be also available for many of us because many of us can actually bump into this issue in the future when they're gonna land some freelance clients okay basically uh uh i'm having a client who needs to build an online uh store i'm in russia and this is online store uh it's gonna uh actually target it on uh like small uh small part of russia right okay but uh so so let's put it this way uh so basically uh this um online store gonna contain a lot of items it's about uh 1 000 items in a catalog right okay maybe it's not a big one as amazon has but anyway so uh so what uh like on the general level what should i what should technology uh should i use like uh should i use the react and to use component based approach but in this way i think it's really it would be really difficult to maintain this website and to add the remove and update items and all this stuff you know or whether i need to use some um already existed approach existing solutions like wordpress plus woocommerce or any other cms that more suitable for my local market yeah uh with this payment function analysis and all this stuff two things to record two things to factor in here so uh the question pretty much is he has a client or he has some work to do to do for someone and and they're basically they have an ecommerce store with about a thousand products or a thousand worth bit of like worth of stock and uh they need to you basically they need a system to manage it now if you build things to consider right if you build this in react firebase and things like that you you not only need a front end you need payment processing you need uh some kind of like management system around the payment processing like is in your admin panel you're also going to need inventory management you need crowd functionality user management all that all that stuff is is factored in right the cost of that is quite high to go ahead and build that if they're gonna and also for you it's a lot of work now i'm not saying it's not a bad approach if you if the if the pay is right it's definitely worth doing but it i would say it's more of an experience build so what i would recommend is using something like shopify literally use something like shopify and you can go ahead and take that to a whole nother level and get every single thing they need up and running make the website look amazing using web development skills and it's very easy to maintain and it can be deployed in a custom domain and pretty much will solve their entire problem so they'll be able to have payment processing customer management inventory management uh even things even little things that we might not consider for example what happens if a product goes out of stock that needs to then modify the pr uh what happens if two people on the website one person grabs the last item and two people are on the payment processing step you see like as if you're custom coding that you need to then account for that when the payment goes through to check that there's the product was still in stock whereas shopify do all of that because it's their business right so yeah but unfortunately uh shopify doesn't work for russia for russian market unfortunately but i think i can use just different uh cms like uh as you said wordpress plus woocommerce plugin or something else so that's more suitable for my local market right yeah i would say honestly like in in terms of freelancing it's not always a case of doing the thing the doing the the build from scratch is the case of what does a client need how can i fulfill the client's needs yeah provide more value and moreover because actually the client doesn't have any id or a very technical person on the client side that's a very important thing that i need to consider because uh actually client should be able to um use that admin uh panel and update products and to manage the stuff very easily because remember once you deliver right you want your your ideal exit situation is going to be that you deliver everything is built to spec and then pretty much you can walk away and don't really have to do much after that but if you're so tied in to the point where if they want to change something they have to ask you to change a piece of code then it becomes like a it becomes a pain in the ass especially when you like you you're basically stuck to that that that job um and then they're able to do it this year yeah so which is which is going to be something quite painful to sort of go through so that's my approach on that yeah thank you thanks appreciate it awesome question by the way nice um let's take one more question and then we'll go ahead and jump into some some high level stuff um so any any more questions from anyone i believe there are freelance modules for us is that true um and when do those happen is it ad hoc or uh i need to speak with nars uh does anyone know if have you gone has anyone gone through so me and are right now restructuring a bunch of stuff so um i'm not a hundred percent right now but i'm an imma now mention something i'm an [ __ ] i'm an artist yeah he he mentioned that frank i don't know who frank is frank uh did he mention frank frank frankie oh frank oh yeah yeah yeah yeah so frank i would yeah he doesn't step in on this uh this actually live call with frank in the modules if you go down there is an amazing uh live coaching call that frank did yeah and he explains all the stuff regarding freelancing you can get one or two things from there that's what is it is it on the module side where is it yeah after after this success coaching live success coaching calls below that brilliant okay that's going to be something i really do recommend you go watch because i remember the session before that me and frank were talking on the live and frank uh dropped some amazing value bombs so even watch the one before that because the one before that led to that call and both of them were really really jampacked with value so i'd really recommend that and also just to give you insight on who frank is fits uh he's somebody that he he's got 10 years experience pretty much coding a very very awesome guy like and pretty much he hadn't done a lot of react but he didn't want the builds on youtube he did the spotify build spoke to sonos and landed a sixfigure contract of 170 oh that shot yeah oh yeah i remember him yeah so he's he's awesome and and definitely everyone uh watched that one because it's really really high level stuff from somebody who knows what they're talking about in that space um who is like he literally said yeah he landed 170k so no joke on that wow thank you thanks for the tip yeah so i even i watched that uh that live call and actually he was actually making an entire a book profile in front of you so it was like if you want some help with that too like i did because i didn't know what to do right so i i was just a beginner when three laughing so i checked it out and guys to be honest that was literally so much jam packed with value like anyone could take benefit from it like i'm sure that even some experienced freelancers would take care from it so yeah it is something that i would definitely recommend yeah 100 sunny really really valuable yo what's up uh is that sam no that's me oh joe what's up joe is uh in the planning that you're doing for the for the new um whatchamacallit live streams is there anything that incorporates what anand just talked about you know the full flash redux different flavors of using the way how to use redux because ultimately when you're trying to find a job in the market or trying to bid for the project i mean no i mean we did the amazon clone which is you know which is a good starter so now you wet your feet now yeah we need to take it we make it we need to take it to a next level where we do a lot of more redux interaction different flavors different complexity is anything on that's not being planned like in the in the modules or like a live stream so ideally so the way the way it's going to work now is pretty much working on the basics modules to get you guys up to speed with all the react stuff you know so you can pretty much run with that then combine that knowledge with things like the clones right that's my my honest advice now one thing i'll tell you is before i answer the next bit about the redox core is um i did not know redux when i landed my first job nor did i know redux when i actually created my first company which was coded in react so that's just so some some kind of perspective around the matter right you can still go such a far away without redux so that's my first thing i want to say the pattern of react context api that pattern whether you're using flux redux or react context api that is the pattern is where the value comes from so as long as you understand that pattern whether it's and my honest opinion here is a module is one thing but the clones literally doing the clones and doing the getting that pattern it nailed in so they're dispatching an action changing something inside the store via a reducer and then that being mapped to a component there's just that circular pattern in redux or flex or flux or react context api that's what you need to learn and sort of revise right so that's going to be the most um important thing but to answer your question in a nutshell yes eventually it will be a case of uh we're going to have plenty of redux tutorials and things like that i do want to flush out the different flavors because we did the sort of cutting edge redux which is very new it uses the hooks and stuff like that but in terms of in terms of the actual workspace redux you're going to have the oldfashioned classbased map state to perhaps map dispatch to props all that sort of headache right um so so we'll i think it would be something to to to look into uh i saw priyanka said what about mob x mobx is actually something which a colleague of mine recommended once before i haven't done it personally um but i would maybe say uh it's worth the read i would actually say rather than diving into mobx maybe go ahead and check out um uh check out um it's a new one that the reactor pretty much pushing it's their own estate management uh i always forget the name of it it's uh uh does anyone know the name of it is um it will come to me you'll come to me um it's a state management tony if it comes to you then yeah just just cut me off but if there's anyone who's struggling with 3dx app i actually dropped the blog today itself so you can actually like read it up and it's not like syntactical but it will give you a good explanation of what sunny taught us a few coaching calls back so yeah yeah exactly yeah go ahead and check out that as well and it's called recoil that's it recoil recoil is something new there's a state management library for react uh it's built with um built by the guys over at facebook so if it's built by facebook chances are they probably did a decent job of listening to what the community did was redux and all the other stuff and took a shot at making it themselves and they did a bloody good job over doing that with react hooks and stuff like that so um definitely something which if there's anything which is going to take off i would usually go behind facebook the guys who built react right so i'll usually step in and do that remember you always want to kind of be like taking the name like taking sort of a a proactive stance in turn and trying to um get ahead of the tech curve right for example before firebase was even popular i pretty much saw it i was like this is kind of cool this might go ahead and and you go it's worth taking those jumps because worst case okay you just practice some cool stuff right you just got some new cool [ __ ] that you can pretty much use in the website but best case it goes ahead and explodes and now you're an expert in front of the market right which means that you can pay top dollar to go ahead and train all these other people who are now coming in and that in itself plus a job is gonna make you tons of money so you see like it's gonna it's gonna really put you in a nice spot um so that's something i'd really recommend doing um but guys i always want to go through sort of um the high level stuff so before let's go ahead and jump into a quick breakdown um of what we've got here so how many of you guys right now guys and girls um have actually gone ahead and um like has anybody landed or made a single like a dollar any currency or any amount of money from coding if you have just raise your hand right i do it sonny okay so if you haven't it's completely fine yeah if you haven't it's completely fine this is why we're here right this is why we're here so if you have just go ahead raise your hand so let's go ahead and have a look so we've got victor we got pedro we got a few others we got lily okay dope yeah so and and i'm proud to raise my hand right now yeah and we got priyanshi yeah brian she's 13 years old so it's awesome right now what i want to tell you guys is it's kind of like often quite a scary topic when you're first starting out like i remember coding and i remember in the beginning i was like how the hell do i make money like i can close all this stuff but i don't know how to make any money so i always kind of nail this in in the beginning right uh so i'm going to go ahead and share my screen and we're going to do a little deep dive on that so um let's go ahead and do always forget my keyboard shortcuts so ways to make money with code or let's just say with react right let's say we're coding yeah so ways to make money with code number one right so number one is going to be and this is this is all based on your timeline right so imagine we've got a timeline for when we code so this is your timeline right and let's just put a little sort of visual indicator on it so this is when you have zero experience so imagine someone who's never coded before and you can put yourself say if you've coded three months even consider yourself at the beginning of this journey if you've coded for three years consider yourself at the beginning of this journey just for the purpose of this this breakdown because it will make sense because if you've coded for three years then you'll be jumping through this in a week pretty much this timeline if you've never coded before it'll take you three months so this is going to be three months mark right so three months at the end of this now imagine we've got little stops from here we've got one month and two months right so this is the one month mark and this is the two month mark right now this kind of put out a plan and this goes to every single one of you now i want you guys if you haven't got any plan in place right now use this as a framework for sort of setting yourself the goals for the next month right so this is your next month for the next two months and then for the next three months right where do you want to be and if you haven't got goals right now go ahead and literally grab a pen and paper or open up notes on your computer and take notes as we do this because i want every single one of you guys and girls who are on this call or even on youtube smash thumbs up on if you're watching by the way always gotta plug that but um yeah i want every single one of you to walk out of this session with goals in mind and literally written down and these sessions are going to be holding you accountable to those goals okay so so this is this is your one month mark two month mark three month mark so the first way to make money is through teaching and coaching right now most people don't even know that this is an option right so pretty much right now what am i doing i'm teaching you guys how to like whether it's coding or it's highlevel stuff in this field or whatever it is this is all i'm doing is i'm just sort of coaching and teaching like some students right now you can start this as early as day one right so literally i'm not joking like i know it's a bit it's a bit of an exaggeration but the truth is if you learn something on that first day of coding even if it's how to make a html file have some css inside of it and change the the header to blue now you know how to do that and somebody else has who's never coded before has no idea how to do that so you can already bring value to someone who has never coded before right so literally from day one you can start doing this right now what would i say in order to be successful in this start by doing it for free this may sound like counterintuitive and you're like yeah but this is making money blah blah blah no stop for absolutely free now priyank you jonah answers this question why should they yeah why should they answer that why should they coach for free in the beginning yeah so guys this this is something that i can actually resonate with so personally i too started off coaching people for free it was actually my friends okay so this is a really good way to start off so whenever you're starting off it's not about the money okay it's actually about the value that you can provide think about like if you want to teach a fiveyearold how would you do it well if you try to do that by like starting off with paid it is a high probability that you might fail okay so sometimes people are not good at teaching some people are just like they they can't receive very well right like i can so some of my i i taught some of my friends for free okay absolutely free i thought that okay so i'm getting good at this people are saying that okay they're taking some value too so how about i just start off by charging very less okay so i i have started my course with like fifteen dollars a month a month okay so it's not even like an hour it's a monthly course so it's not actually about the money from the starting it's about the value that you can provide okay yeah initially if you can get even two to three testimonials remember testimonials is key because that shows people that you have experience no one cares about the money that you have everyone cares about the experience and how much value you're providing to the other other one okay so that is the most important thing right now that i would say so it doesn't matter about teaching it for free or not it's about the testimony that you get and from that testimonial you can tell other people that okay so i've taught this person and he was this successful so would you like to just check it out okay try to offer them one free call and after that you can talk about pricing so okay it's not about the money at the beginning it's about getting the skill set in the place getting the soft skills in place and after that if you are really if you think that you're getting really good did it you can start charging yep 100 100 and literally and i'm pretty actually dropped some good bombs there guys so literally offering a free call yeah and i wrote all five because literally offer free stuff yeah literally free help if you say to someone right i know how to do this stuff but and i'm going to do it for free for you right i'm telling you the resistance to that is literally like you pretty much if somebody if it's like saying waving an iphone in front of someone and saying hey do you want this like the chances are they're going to pretty much grab the iphone i'm like sure let's go like isn't that yeah i'll take that like so do that and then what does that lead to it leads to you eventually getting testimonials right testimonials are pretty much what like if you if you're on amazon or ebay and you buy something you check out the reviews right you check out is this guy a fivestar seller or is he a onestar seller if he's a onestar seller or he has no reviews you're kind of like um should i work with him if this person's got like five thousand reviews and they're all five star you're gonna be like holy [ __ ] i trust this guy take my money right you see the difference there right and free teaching can get you there so if you guys still do not believe that this might work take an example of patch himself okay so i was i said that i was on a call with him so he told me that he offered his uh the client was his buddy okay so he just offered him he told that okay so these are the advantages of web development and there's a lot of money in it and yes it's not that hard to you can actually try it out yourself and then he said that okay so let's have one free call and after that if you like it then we can talk about pricing okay tell me would you yourself resist it if if sonny gave you a free call right now right today itself a oneonone free fortune call and then he like if he was like an amazing tutor like he is an amazing tutor we all know that so if sonny gave you a free call would you actually resist that you would just say that okay there's nothing to lose right so the other person has nothing to lose from you only to gain right and now if they like your first coaching call if you can make them make that coaching call enough good think about that the profit that you can make over time okay it's about the longterm approach it's not about a shortterm approach so that's actually the basic the main thing okay so it's like not think like again that sonny said like give a one free call to every single client that comes to you one people nothing much this one free call and then if they like you i'm sure that they will continue like there's no point there's no point of confusion at all exactly 100 and the main thing to take away from that is focus your stuff on longterm visions right so like most people are like oh this week i'm gonna do this right that's good as a starting point but you should be thinking right in in two three years where do i want to be in five years where do in 10 years where do i want to be like i want to get like this house i want to have this kind of life i want to be financially free that sort of you should set those goals first and then kind of work backwards right most people are like oh man i want a rolex and it's like no like is in you know like you could do a freelance job and pretty much like if you and buy yourself a fancy uh like i am what's that but you shouldn't do that one that's a bad waste of money and two it's not a good goal right so in this term in this sense right now the free cool yes initially you're like but it's free like i'm not going to make money no you're building your skill set which is endlessly valuable right so this will equate to however much money you want to make in the future right so like if in the beginning i all i cared about was money like i'm telling you i would have quit i would have quit a long time ago i would have been like oh well well as soon as i got hit my debugging head would have been like screw this [ __ ] like i'm done right but it was only when i started coaching and teaching and i actually started way late on coaching and teaching i should have started way earlier which is why i want each and every one of you to start this as soon as possible literally you can use communities like the slack community you can literally use the the the who's new uh channel in slack to go ahead and see um who's pretty much just joined and things like that you can use youtube so people are watching on youtube you can pretty much reach out to everyone in the comment section um you can pretty much go ahead and on facebook we have communities on facebook you have stack overflow i mean i'm not a big fan of stack overflow although the code is great but but the main thing is is you want to build that skill set right and coaching and teaching is going to be because i'm telling you if you say to me i can code in i can write a functional component and react right i'll be like cool now teach that to me and then and then i guarantee there will be some um's and ours in there right but if you keep on doing it and you get to a point where you're like this is this this is that this is why i have this and this and this then i guarantee like trust me you will never ever forget that skill and that skill will become like twice three times four times as much as valuable as it is before you started being able to teach it right so that's the first thing i want you guys to do and this is going to be something you can start immediately so you can actually go ahead and make a little bit of money from this right now i say a little bit it's all down to pretty much again this is infinite you can pretty much go ahead and and take this to like the to the sky's limit at this point like patch needed to make some income and literally he took action he started teaching and coaching and just like praying she said it was his friend he literally just reached out to his friend and was like oh you want to start coding i'll teach you and now his friend's paying him 400 a month right and uh patch is somebody i coach in literally and this is what i taught him and he pretty much did that and he's making money off it now um so that's the first thing now the second thing is pretty much freelancing now we all know uh freelancing right uh we all heard the term freelancing uh to be honest i didn't know what was realizing actually truly meant until like way later in my career and the only the only true reason why my freelancing took off was through i started teaching and coaching and my name got out and then people would share my name around and then they were like oh sonny i need this website built that's honestly how i got started in freelancing so most people think that it's through things like upwork wise and which yes they're great platforms and to be honest they're the ones that you want to go to if you're on a scale in freelancing um so so let's go through some action points actually before we go ahead and get two people carried away so sign up to things like upwork right so sign up to things like upwork uh why is that intake lessons are good so i think this kind of contributes into teaching and coaching but alright i'm here anyway so wise and take lessons make sure you've got accounts over here um also what you want to be doing is build your network right build your network because believe it or not my most of my money in this space in freelancing space has come from my network without a doubt it's literally not even comparable like you couldn't even work with your network yeah exactly your network is your net worth 100 and i used to always think oh networking's just a term that gets thrown around but i get i'm telling you guys like this has made me more money than any of these services or anything which is actually quite crazy when you think about it right so but how do we build our network it's kind of cool it sounds cool but how do you do that right so social media presence literally as you learn post it on social media right and pretty much use my account kazi's account uh nars account as examples um but one thing i'll say stay away from a problem here and this is what i see too much of guys is i see people posting for the sake of posting right and this is i'm not a fan and i'll pretty much say it's loudly i really i'm not a fan of the 100 day challenges because they see i see loads of people doing it but if somebody asked me to do 100 day challenge i would just i'm against them because yes they start off like with a good intention right they start off with like i'm going to code for 100 days and i'm not going to quit but i guarantee by day 29 or 30 you're like [ __ ] this [ __ ] i don't want to ever i don't want to post on social media ever again in my life right that actually demotivates you a lot yeah it really sucks the life the fun the energy out of it right and the truth is if you if you look at my account i mean doing the program is one thing then clicking the picture and modify it in convert takes lot of time yeah yeah it takes a long time to get social media stuff up yeah i literally i've also done once it what i've done on facebook i first commented that for 40 days uh i'll be putting every day an article yeah i did for just five to seven days seven days at it yeah and then some different stuffs happened and i thought i shouldn't do it it's it's been happening ridiculous things and yeah exactly and it gets ready when it comes to posting things like i always take advice from amanda he's a he's very cool guy and he always he's always ready to give advices yeah so i actually work very closely with amanath and um yusuf is somebody else that i work closely with uh they're basically part of the the content team on cover programmer and they're on the team for a reason because they literally are very heavily involved and they have a very good intuition for this stuff um but i remember i spoke to yusuf when he was literally starting out i remember yusuf literally was like a very sort of like more reserved person on on on instagram and i remember he reached out and he was like hey man like i'm kind of into this stuff i really like it and i remember like i literally said i was like okay cool man let's jump on a call and and before you know it i said to you so if i was like i tell you what i'll give you a little bit of a test right go ahead and build this he didn't just build what i asked him he built that plus like a bunch of other stuff and he was like i thought i'd try this out and just show you right and that's what i'm trying to say here like just from that one movement right that one step that he took which was one he reached out to someone right so i see so many people who are just afraid to reach out they're never going to take that jump and reach out me and kazi started talking through instagram right just literally just we just replied to a story and then we just started talking so never ever think that something's out of reach right always take a leap boy take a jump and always go ahead and like and i would say like if you want to start your ins your social media journey start with stories stories are better because they're more like you can just tap through it and it's very quick to go ahead and put up a story in this the damage isn't if you mess up or you put up something which you know wasn't great it's only going to be up there for 24 hours it comes back down right it's fine but the point is that like gary v says something really key right he's like we all focus on content creation right and content creation is something which takes a lot of time a lot of energy and it becomes something like if you if anyone who's done a 100 day challenge or tried to do 100 day challenge realizes that it just it sucks all of the energy out of you because it's like every day you're trying to come up with a new idea and and if you try doing daily vlogging you're gonna realize like oh my god i'm trying to make my life like super super adventurous just just to get some content for a camera right or something like that sometimes you just need a break for a day yeah you just need a break for a day but even better than that make your content creation not creation but just document your journey literally change it from content creation to documentation right literally document your journal mindset actually yeah but document your journey and before you know it you will have so much content it's stupid right like if you sat there and just set up a camera while you're working right and make a little time lapse and then you just wrote a little nice caption saying like today i worked on some stuff like this is what i worked on bullet point boom boom boom done that's it you didn't take you much effort to go ahead and do that right you pretty much you did your work and instead you just set up a timelapse and stuff and you had it up people enjoy that stuff and not only that it kind of gets you connected to likeminded people oh this guy codes let me go and follow him you see like this this this girl kind of interested in coding oh i'm a girl too i can go ahead for her like is in and the truth is is like um it's it seems very like underrated but what people will tend to do is they make like very over cluttered and over complicated posts it's like day 67 something else and guys just keep it simple keep it clean and and and you'll build your network up by doing that right now that i would like to add is that if you are trying if you like are going to do what sony said that make a time lapse what's actually gonna happen is that sometimes you might feel like okay let me just take a break let me just start out let me do some netflix or something but then you remember that okay we have a camera so it's like you remember back in like i'm in school so like sometimes my mom used to teach me yeah so i used to say that okay my mom is teaching man she's literally like in front of me so how can i try to like act cool and act smart right yeah that's again holding you accountable so that's something that i i seriously feel even now so yeah it's just a fun fight so that holds you accountable and yeah sometimes you just focus because like again pushing your heart right so you just push yourself a little bit more and you'll say okay so let's not take a break right now i'm gonna be like okay netflix afterwards at night okay so that that kind of happens yeah dude that's so true that is so true i mean cause he literally had this exact conversation yesterday over the phone we were catching up and he was telling me about how he started a podcast with amberly and and the reason why he loves it so much is because it makes them both want to do it and the reason being is because guys put it this way right if if if if you're having a conversation which is like uncomfortable or it puts you like let's say me and priyanshi just started on server side rendering stuff which i haven't touched in a while and i don't know if brienne jesus has coded it with before but no clue about it yeah but that makes us uncomfortable right so they're saying like i've done it before but it's something i did quite a while back right but it's a conversation which would be like uh but now okay imagine we turn the cameras off and we pretty much work on it it's very easy to at that point to be like uh do you know what dude we can just do this tomorrow man let's just call it a day here let's just like maybe quit here or something exactly the concept with online classes too right so like if you're just turning off the camera you know that the other person that's on the other side of this of the screen he doesn't know what you're doing so like there's zero way of you to hold yourself accountable and remember holding yourself accountable like by someone okay this somebody just tell your friend that okay so if i don't if i don't complete a few of my choices it doesn't necessarily need to be programming but see that if i don't complete a few of my chores i'll give you 100 bucks now think about it would you rather give up give your friend a hundred bucks or just complete your choice yeah that would be better to complete your choice right exactly hold yourself accountable exactly and even guys think of it in a way of like even if you did an ad even if you didn't add in the the sort of money aspect of it right just from the fact that like you have people watching even if it's one person watching right so imagine you're working and you just live streamed right now the first thing i want to say to you is get rid of that fear of giving a [ __ ] about what people think okay so every single person even when i started doing youtube i remember i was so obsessed with like oh you know like is is everything in order is everything look right is everything that's the lighting perfect blah blah forget all that stuff just talk just start just turn on the camera and just start talking yeah just be yourself because there is only so so much you're gonna you're gonna keep with that persona that you're kind of going with once you've done 50 videos i guarantee the persona drops right so just drop it from the beginning right oh [ __ ] we got cory in the house on on youtube corey if you're in the coaching call go ahead and jump in dude because cory's got a lot of uh value bombs uh like whenever morning 10 a.m i have my quality and i sleep at 36 a.m and it's difficult for me to wake up and like i'm just like i'm just gonna turn off my camera i'm gonna turn off my mic and i'm just gonna plug in the earphone and sleep yeah that's like that's that's the worst thing i've ever done but the time i sleep like but if i'm guarantee if you if i turn on my camera like i have to be super focused and yeah do my thing exactly yeah if you turn the camera you're just literally holding yourself accountable thank you corey just dropped five donation on youtube damn smash that thumbs up button for cory guys um yeah so uh atarba i couldn't agree more dude i 100 agree with you and and i think it's a case of like just by being on the camera just by like showing yourself on a camera you're going to be pretty much like already improving your your performance by at least minimal 30 to 40 percent like as in minimal to 840 and then anything above that is going to pretty much and think of it this way if you're doing that like every time you work you just pretty much put the camera on right well like and then i know it sounds a bit extreme right but like the truth is just try it guys i promise you just try it and don't knock it until you've tried it like you will see your progress go up and it's a really sort of un undermined thing but i i would i would really recommend it now actually i can also connect with that like yeah from the day i have started documenting my journey in on the instagram i always feel like if i have committed to something i don't want to be the person like who just commit to something and don't do and go back from his word yeah for that reason i just try to push myself each day and every day and try to complete that target whichever i have like so like i'm going to do this and that yeah like that 100 percent and what i've er means notice that i have that the work of ours and the the time i focus in working have increased a lot yeah exactly 100 camera shy in the beginning was that camera shy in the beginning yeah 100 dude a hundred percent how do you build your confidence uh on like getting better at cameron dude this is a really any tips yeah this is a really good point actually i'm glad you brought this up because okay so we might have thought that this is just about youtube now and live streaming right but take this a step further right so so being not only just camera shy but like let's imagine like in in current circumstances right like imagine a lot of jobs right now remote positions right so you're going to need confidence over a camera right you're going to need confidence whenever you have a conversation with a client or whether they're based in the states or something especially if you're doing freelancing you're gonna need to get comfortable on camera to talk to clients and things like that right so now in the beginning i remember when i first jumped on the camera whether it be a live stream or youtube or if i was doing a vlog or something like that i was literally the most quiet introverted person but i was a very extroverted person with my friends and out and about but in on camera i was like you know like super quiet and i was like hey guys how's it going like this is this is sunny like and you know you watch your back and you're just like oh man but i guarantee what what happens is you watch it back and you're gonna look at it and be like oh man what the heck am i doing like this and this but the second time you do it there will be a slight improvement right then the third time you do it there'll be a slight improvement then the fourth time you do it'll be a slight improvement and then after a certain point you're like you just stop giving a [ __ ] like the truth is like you just stop caring and the truth is and and it puts you in a position where you just all you care about is the actual thing that you're trying to deliver and and then you your real personality comes to the surface and that is where people connect with you everything before that the sort of persona you put on on top of it and everything is very hard but it's it's a lot easier said than done in terms of um in terms of trying to you know like it's very easy to say be yourself you know just be yourself it's it's a lot more tougher to actually go ahead and do that but the way to get past it is do it consistently every day every single day and there is no way that it won't happen naturally you're talking about cameras and being in front of a camera actually when you're like being let's say i wake up today and then i'll be like okay i want to go and teach yeah so i've got a skill which i want to teach and if we do like you said so every time we work we just turn the cameras on yeah and we just film ourselves even if we do a time lapse or we don't we don't actually post it on youtube or on social media we just record ourselves and that's it but at least you get that confidence and that you know be like okay i've got a camera i don't feel awkward having a camera in front of me filming yeah because i think it's when i've done teaching in person because i went to school and teaching schools right yeah and and it was a thing when then i thought maybe let's do teaching but with uh like remote teaching yeah and it's socially different because you don't have that interaction a human interaction yeah it's like talking to to nothing basically yeah because sometimes you know connection errors and all of that stuff exactly 100 this connection is delay there's sort of like getting over that confidence barrier and also guys like let me put this into perspective right like how many of you like literally raise your hand if you trust me yeah do you see that right like and that's literally over you like that's just my shooting videos so like that's literally a case of like if if you guys trust me right just from a video then not that's just think it's completely possible for each and every single one of you guys on girls to go ahead and get someone else to trust you right all it takes is it would be kind of hard for someone to not trust you you know like you've always been so open with us and also one more thing that i would like to add to the point of your camera thing is that see even i am not the best speaker right even i hesitate all the time like i say english is my second language like my primary language is hindi so english is my second language although i still try so it's not about like you know you have to be picture perfect some people just think that okay oh my goodness some people like they're gonna be thousands watching me like sunny or even sunny there are like millions of people who watch sunny right but does it make a difference to him does it make a difference to his speaking side it doesn't right say almost like it comes from within you so it doesn't matter if the entire world is caring about you like the amount of value or even like just you know being yourself in front of the camera that makes the entire difference like it doesn't matter if you hesitate it doesn't matter if you're not if you're not the best person to speak who knows how to speak but the thing is that you just need to put yourself in a position that yes okay i'll at least try yeah it's not about like practicing is something that's good but at least giving it a shot is something that i would highly recommend doing for anyone yeah 100 guys let me put it to you this way yeah i remember when i first went on my uh on my first stream it was not even like this many people in the zoom chat right now and let alone 300 people on youtube watching as well right like i remember it was literally i think it was 60 people right in and this was a hyped up call right this was a really hyped up call and i was sweating i was freaking out my heart was racing i was trying to find the message where i literally sent the cards i was like dude i'm like i'm breaking it i think like maybe can you come on and cassie was like i can't come on this one he was like you've got this don't worry just jump on i remember i just literally turned the camera and i was like what's up guys let's go next thing you know next thing you know like that endorphin that adrenaline rush kind of kicked in and i was like okay like i'm live now i have to go with it when you just put yourself in the position of legs like sonny did and then it just comes from within you it doesn't even you don't you know you start like adrenaline rush okay it's nothing about you know how much you're doing or like the the the accent that you're speaking in it's just about the happiness that you get from within like so many people think about it with this okay earlier no one used to see you nowadays everyone's seeing you think about yourself to be a position like a superstar or something okay because so many people are now watching you yeah that's kind of good for you too if you put it in that perspective it's gonna be easier for you exactly yeah yeah comfortable with the uncomfortable yeah literally yeah and i said that in one call actually is get get super comfortable with the uncomfortable right like as in as in get used to putting yourself and if you if you're not feeling uncomfortable day to day right then you're not doing enough period right like i have two people on the court right now who i really want to bring up because like literally like both of them absolutely amazing students and i coach both of them and they're both on there on the call right now both have actually done some awesome stuff recently and i'd love to talk about it before i do that i literally just want to go ahead and jump on because i know they joined in afterwards i'll name drop it once once when i'm about to bring them on but basically uh for those of you who have jumped in afterwards we were talking about the ways to make money with code right so the first was teaching and coaching second was freelancing and the third naturally would be the the job right so i'm gonna go ahead and say just like uh let's go and say land a job right so and then we'll we'll dive into this afterwards but pretty much these are three things which we're going to sort of talk about and then the main things are teaching and coaching can start from the getgo from the beginning right freelancing you can pretty much go ahead and start at this point or even earlier if you pretty much go ahead and push for it and then literally after the third month so i'd say both of these would be the freelancing month so you could start and do that and remember this is overlapping so this would go ahead and you can still teach at this point but after the third month you can pretty much go ahead and apply for a job and even before that if you've got the confidence go for it i would say right but there's two people i really really want to highlight and that is um my awesome students that's corey and patch right so i'm going to go ahead and bring you guys on i'm a spotlight right now and both of you guys are doing awesome stuff man and i want to pretty much go ahead and and talk about that so firstly you guys are you guys are spotlighted right now so you got the they got the cameras in you man all right let me show you here we go yeah man literally it's a patch i already we spoke about printer actually mentioned uh that he jumped on the call with you in the previous badge yeah what's up man how you doing amazing good good and what's hold on brother hey yeah we got joe yeah we were pretty much we were talking about how you went from uh from a friend who just was interested in coding and turned that into a into a client yourself so jonah to explain to pretty much everyone what like where the initial sort of like moment where the initial sort of motivation to do that came from and also like what made you like believe in yourself to take that step in terms of like i can teach him like you know like as in i'm i'm even though like i'm relatively sort of new in this space but i can i can do this like what what took you to that yeah yeah well he was uh he was like me uh as a buddy that i've known for a couple years so you know i gotta i gotta throw that in there first because it was kind of like a little easier to get him as a client as a result of that but but you know ultimately he's a straightup dude he would have said you know i don't know if he didn't want to do it yeah but um yeah he was a buddy of mine who was a bartender who lost his job due to the coronavirus and he was like dude i i sold life insurance for a month and i felt like i was gonna blow my head off and i was like i need something that's not so soulsucking and i was like i've been learning computer programming and kind of getting into that world like you know if it's something you were interested in and and i was like and he was like yeah sounds good what are the classes like and i was like dude just give me a call yeah so i hopped on a call with him and just just talked about it i told him you know he's a musician too so um i was telling priyanchoo uh yesterday i think or the day before whenever we chatted it before it was all these days it was an amazing goal yeah it was cool but i told him that uh i really enjoy the creative element of it like that's kind of what i've been really enjoying most about coding and that's kind of what makes me like chance to get up every day and to do it yeah so i told him you know dude you can work from home you can do this you can do that but ultimately you know you can't just do it for the money you got to enjoy it so you being a creative person yeah i feel like you would really latch on to the creative element and be able to make some cool [ __ ] and you know just have a lot of fun with it just playing around and stuff like that and um you know he's super super new knows nothing so i was like okay cool well that would be a good place for me to sort of like brush up on you know because i'm only four months in but you know i've put probably you know maybe about 300 hours into my learning yeah and so i felt really good and i built a ton of web pages you know i'm working on the amazon clone you know like i'm constantly practicing and stuff so i was like i could definitely get something going so what i did was i made a powerpoint presentation for him um of kind of like you know html css basics right and i was like okay i'm going to make a 10page powerpoint and we're going gonna hop on a call and i'm gonna just take him through this little presentation and break stuff down for him and and even you know i pulled up my vs code and i was like you know here's how it looks yeah and so you know did examples and stuff like that and then um that was easily you know an hour and a half long call and nice and i gave to to your point that you made on your little picture sonny i yeah i was like dude first call will be free so i'll just give you sort of like you know a foot in the door to the whole like idea of it and stuff like that yeah and i was like because if you don't like it and you're like you know at the end of it i don't know if i really want to do this seems like a lot of work i don't know if i'd be into it you didn't waste any money but at least now you know so it's like you know if i can offer that to you know i'm happy to do so and then at the end of the call he was so stoked and amped and jazzed about it that he wants to do like five lessons a week that's insane dude 20 bucks an hour so yeah dude uh [ __ ] unemployment i don't need that [ __ ] now you know what i mean so it's just like it's a it's just a cool like because again you know one way to get better at your skills is to coach and teach so you kind of like reaffirm it in your own head 100 stuff like that so that's why i was like dude i think teaching would be a great way for me to sort of like supplement my learning and might not supplement it but you know in addition to yeah um and just a way for me to like and i already got a call from another buddy that is interested so it's just amazing yeah word travels fast and and to go back really quick to your other point about about the camera is you know obviously since i do the acting thing that's one of the things that they teach you because a lot of people can be the best actor in the world when the camera's not on them but once the camera's on them and you got 30 crew members all staring at you each shot is cost like 50 000 so if you [ __ ] it up you just cost a production 50 000 so it's just like they're like all the managers and agents are like you better get comfortable on camera so i think that's definitely something to practice is like i think like 20 bucks on amazon you can get a tripod everybody's got a phone just set it up on the tripod and film yourself and just like do a little presentation and go back and watch it and you know it's it's you know it's just like programming man you just gotta practice and before you know it stuff starts to click and you start to get better and you're like all right you go from going i'm really nervous i don't know what to do i don't know what to talk about too all right what do we talk about today all right let's see here what can we you know you know and you just like you grow into it so exactly and to add to that i remember when we did the challenge patch submitted his uh his sort of um his challenge in and he gave a video with it and i remember me and kazi were sort of looking through her and were kind of watching stuff through and just having a chat and then we were watching it through and like everyone was submitting very sort of like rough videos and stuff like that and it was barely showing their face or anything and then patrick you had the laptop next to him and and and i think it was it was right it was the laptop next to you and you were literally like kind of standing next to it and you had a backdrop and you were just literally talking to the camera and you're like this is what i built and like i remember being hospital holy [ __ ] like this is like this and that stuck that stuck with us and and and it really moved fast because after that point we knew who patch was right so like literally we had watched all these other videos but we just watched one video where it just took he took a little bit more effort in doing it put himself in that position of just like you know like this is a new space i don't feel like 100 comfortable i'm going to do it i'm going to i'm going to commit to it i'm going to do it and then literally as soon as we knew who patch was after that video we're like okay that's that guy like and we knew exactly who he was and that that's like the difference between building an effective network versus somebody who's like got a thousand people on linkedin and nobody knows who he is right well she is right so there's a big difference there now an amazing stuff by the way patch so like corey on a move to to you now like corey you you've literally like kind of like shifted even my mindset in terms of like uh and sort of like the way you think and sort of the way you keep you grounded and when you when you're sort of learning what would you say has has been your like top three tips in terms of like pushing yourself pushing your sort of learning in the space and like how do you sort of balance like work and life with with your sort of progress you're coming heavy hitting right now uh thank you thank you for the kind words um wow i would say maybe top three tips um find someone who has what you want and go ask them how they got it amazing right um there's a little saying that says like if you want what we have do what we do and it's really simple in the sense that like um i'm literally gonna copy exactly what you say in the react build and then have a react product right and so the same holds true in other areas of our life if you need to know more about marketing go find someone who's good at marketing and ask them how do i do this so i think kind of that in conjunction with finding yourself a mentor all the best people in the world have coaches we don't do this alone right like uh our diversity is our strength and like unity is huge right we need other people so um i think i think the biggest thing is kind of exactly fine find someone who and maybe it's not technical right maybe you know being a developer isn't solely just about oh i can code the best code in the world because if you're hard to get along with if you don't cooperate well if you have trouble right if you have trouble communicating um that might work really well for a lot of people um but i will say that you will go so much farther if you have some of those kind of soft skills right um maybe what you're attracted to isn't like the hard stuff like oh man he's like a guru at this but like maybe it's just like how he's able to connect with people yeah because this is all relationships right and we see this in the pwg community within cp network is huge and i'll tell you like um i i really don't i don't know i i don't really like being the i like being behind the scenes i like being where no one can see me working and making sure that i hold everybody else up like that's where i like to be and some people are like front front and center they like the spotlight not me right i i don't mind coming out into it but i really like being on the back where no one really knows who's doing that but like you're a part of something that's keeping everything going right and that's just for me um and so i've had i've had people reach out to me um and i just sent off a uh ten thousand dollar contract for two sites yesterday nice and like a waiting to hear back you know and so but it's all it's like you you never really know so i guess the second thing i would say is like you never know who's watching you yeah right you never know who's got their eye on you and so by documenting your journey by putting yourself out on social media by connecting with people and saying hi and putting yourself out there even if it's scary man um people resonate and connect with that and uh and that's how some of these people have come to me um like pat said i think the other thing and maybe the third most valuable thing i i think and this is just for me personally um money is a good motive right you all gotta eat we need to pay our bills um but i will say that like for me i have found the work that i'm doing so much more fulfilling when money isn't the driver 100 and like what i mean by that is uh helping other people and giving something to them even if even if they have nothing to give me because i want you to do well i want you to be the best possible version of yourself i want you to go conquer the world and if that means i don't that's okay yeah like i'll give that to you and there's not this sense of oh i'm holding back or i'm gonna keep a secret or like oh you know i can't give you that absolutely not right i want you to be better because like we all so if i do whatever it is um and a lot of that has been my experience right working for free and and like in turn the return on investment for me has been like so valuable i get so much it's a twoway street right it's not like i'm unpaid i might not get the financial but i get so much in terms of other forms of payment right the learning uh the practice with the process that's huge so like yeah you know don't mistake the practice with the process like and if you can learn to fall in love with the process you will go so much farther than if if all you care about is the product yeah because the product is irrelevant you know um so i'll hop off my soapbox dude you took that i ran that was awesome man yeah that's awesome stuff yeah yeah i would say like to to to literally pull the the sort of like golden points from what cory said there as well like so like literally like don't focus on the monetary gain or the monetary value when you're doing this stuff right like focus on like the fulfillment right if something fulfills like you internally and makes you happy even if it literally just makes your day a little bit better right like like when patch like helped his friend out like or when corey like is literally like building his skill set or like helping somebody bring up themselves in terms of somebody who might have been introverted and like kind of getting them out of their show right like all of those things trust in that as as being like more worth like it doesn't matter if someone was to turn around and say here's two thousand dollars right for like a coaching session if you instead are able to help somebody like say for example you have an introvert guy who's like an amazing coder but literally just lacks all the soft skills right now the problem is is that yes sure they can code up the craziest websites but the thing is nobody would end up working with them because they can't ever communicate they can't ever like contact like you know that close that barrier so there's a lot more to the space than just technical skill right now in order to like build on that like literally exactly like cory said it doesn't mean that you have to be the guy in front of the camera or the guy in the front right there's there's completely like positions to be able to go ahead and take that person who's quiet and use your skills as a person who can who isn't introvert and kind of has that sort of ability to talk and and have that relationship building and pretty much go ahead and teach them that and that's going to help you trust me when i say all of the returns will be tenfold in time like give it just give it time and everything will like flood in like look at garyvee right when you look at garyvee so like garyvee literally if you follow his instagram the guy drops value after value after it's just endless like good stuff like and it's it's literally just constant value being dropped right but we never see him say like oh like you have to go like i'm charging this much or i'm charging this or this or this instead now he's so valuable because he just provides so much value that if somebody wants an hour with garyvee god knows how much they have to pay for that hour right like as in so as you see like the stuff comes naturally you just keep providing and not only your skill set going to go ahead and like and explode but you're going to go ahead and get actually a happier life out of it and that's why that's why we're all here right it's not it's not just to land a job why are we landing a job so we can actually have a better life right but what's the point of focusing on something which makes us x amount of money an hour if we don't enjoy that life right you really want to go ahead and focus on the fulfillment and then once you focus on the fulfillment and the value you can provide to somebody else then go ahead and that will trans like that will go ahead and translate to sort of some kind of gain and or change in your life and trust me it'll be one where money is not an issue right sunny to be honest that was worth legit fifteen hundred dollars without a doubt seriously whatever you guys have said that was gold and to be honest i couldn't agree with corey anymore like seriously it it doesn't matter if you guys are not like the best like if you can just help someone and if you find some kind of satisfaction in that the money is is not even a factor to be honest it just doesn't matter did uh his screen sharing it sort me oh i'm gonna go ahead and stop that yeah nice okay add on to that point again like when you're talking about it's not about your credentials it's not about if you're the best coder in the world because again i hate talking about this because it makes me feel like i'm like boasting but but as an actor when you go to go into an audition yeah the casting director doesn't care if you're a good actor if you're an [ __ ] they want to put they want to trust that the person that they're sending to set to potentially spend six months with everybody else they want to trust that that person is not going to drive everyone else crazy yeah so there's always somebody if you look at it this way there's always somebody better there's always somebody more qualified but that's not what anyone cares about anymore people care about who you are as a person and if you're a good person and and like if sonny was a dick then he'd have three participants not 86. yeah saying like the fact that somebody's such a nice person totally so open and so and so willing to help everybody and like you said i'm pretty damn sure everybody put their hand up when he asked if we trusted him because i sure as hell do and that's because he's shown that he can be trusted and all this stuff so it's i feel like it's more about that and and um you know like i said you could talk to anybody in this group right now everybody's down to help everybody else you know what i'm saying there's no there's nobody in here i can add on to you patch too yeah do it yeah yeah you know like like i don't know how many people watching have experienced this after a call right where your energy is pumped you feel super stoked and then like a day goes by and down you go that's right you feel like your wheels are spinning and you don't know where do i put this momentum you know how where do i what direction do i go i don't know how to keep that natural flow of content right how do we do that and the best advice i've ever gotten um like our our true value is in being ourselves don't try to be sunny because sunny sunny yeah don't try to be patched because patches patch like be who you are because that's the most valuable right like really for real and and likes you know uh you don't have to be anything more or less than who you are put that out there like that's who people want to get to know because let me tell you what happens if you don't and you put some fake [ __ ] out there as soon as people find out or and really you're stuck with feeling that like at the end of the day when you step away from the performance side of it that you're not connected with yourself right and all of that will come collapsing down and you'll ultimately return to who you are anyway so just stay with that at the beginning and then you don't have to change yeah right you don't have to try to do something different so i think that's a really easy way to keep stuff very naturally occurring is like just enjoy who you are man and like have fun with the process um and i guarantee like instead of looking outside yourself for something to be or someone else to be uh if you feel like you're spinning the wheels like step into yourself man you know uh like let me say like you have been waiting for you and the you later on that person depends on you and needs you right now and if you don't show up for that person right now who the [ __ ] is going to that's powerful dude that's so powerful yeah for real honestly the biggest take away from that is that do not try to be someone who you are not like do not write like if you are not like an extroverting person do not worry about it to be honest like sunny might not have been an extroverted person and if you're trying to live someone else's life no one is gonna like you're not living yours so it's kind of pointless to live your life too yeah a hundred percent and literally guys think of it this way right like we're always scared like imagine when you when you kind of like think if you want to you want to start a company right the first thing we kind of think of is like no i have this like gem right and somebody's going to steal my gem right because then like i have the next facebook somebody's gonna steal my facebook right and we always kind of have this mindset of like no it's mine like i don't want to share this thing right like now think of it this way right so firstly if you're ever doing that that's the worst thing you could do trust me i spoke to so many ceos now and every single one of them said like if i could start from the beginning i would tell everyone my secrets i would tell everyone my my idea from the getgo because it's only going to help me get there faster right now also when you do what corey said you just be yourself nobody can steal you because you're you right nobody i can't be patch because patches patch i can't be corey because cory's cory and that's what makes them special right like if you if everyone kind of like tries to mirror the person that they want to become like right which is great for acquiring skill motivation that sort of stuff but like like like corey said it's going to get to a point where like it becomes so hard and you're kind of like trapped in a shell they're like trust me and this is what i said like literally like if a kind of an extreme way of doing it but if you if you show up every day in an uncomfortable situation for me i was putting myself on camera every day right like putting yourself out there every single day it does like they've reached a point where i was like [ __ ] it i can't do anymore i can't put this fake stuff on it's i have to be myself because it's just too like intense like i just like you you build up this internal excitement and trust me it'll just pop and it's like right now myself on camera you know and that is where really the trust comes because like even when you're trying to land a client right all the client meeting is right it's not literally you sitting there saying i can code and react i know firebase i can do redux i know data layer stuff like all this is none of it is that right it's actually just building trust between you and the client in that conversation that's all it is once you have trust that the salary the money everything else is secondary but the trust is the first if you don't have trust don't even bother talking about money with that person or anything like that money is basically again like you guys said right that money is basically a lagging indication of who you are and uh what are your skills so like not just your technical skills but also your soft skills so if you guys don't focus enough on your soft skills basically it's not going to be anything related to money like you can be the best best quarter again like corey said you can be the best quarter but it doesn't matter if you if you can't speak in front of someone else right so if i couldn't speak in front of sunny right now like on the day when i actually got on a call with him yeah trust me i don't think that i would have been over here i'm i'm sure i wouldn't have been aware yeah so literally and that took brian to stepping out of his comfort zone and i remember and this is like something which both you and corey did actually so i remember both of you sent like meaningful messages when you when you did something i can't actually remember how me and pat started talking um i think i kind of uh i just think like i joined a bunch of your calls and then i was just like [ __ ] i wanna i wanna get better so i'm gonna reach out to yeah yeah i think it was like that yeah but for literally i remember like corey sent me a message which was super polite it was like a very important message it's like i hope you're having a great day full of positivity and it was literally a case of like like i want to take myself to the next level and just putting himself out there right and i read it and i and this is the crazy part right i get hundreds of messages now like i literally can't find messages from my girlfriend on instagram now so i'm like don't send me messages on instagram because like they get buried right so like and then she's like you didn't reply and i'm like just don't do it but um yeah and then literally like it got to a point where that but then those messages just find a way through like i'm telling you because i read that message and i was like damn man like i really want to you know i want to jump on a call with this guy and i remember same with priyanshi like i was on the live stream i had no idea of his age i had no idea of anything all i knew is everyone was spamming comments saying like you know it was like um i was like oh yeah like i want to jump on i want to jump on the call like let me jump in the call let me jump in and then i remember apprehensive really nice message and i was like hey sunny like i would really love to jump in the car i can't remember the exact words but it was like quite a hefty like it was like quite a message and i was like dude like if he's wrote this like i'm bringing that guy on the call like and then like one more thing i would like to tell that yeah i am not if you guys think of me on camera and if you guys think of me in real life there's actually like in school when i was when i used to be in school people never even used to like see me okay and even i didn't like like to approach people themselves again and then this was a huge step for me too because i'm not that kind of a person who is good with people i always say that because from my early ages i was like really into books and stuff and always i can to no i was like the nerdy guy as people call it okay yeah so although it didn't matter for me because i was like okay now this is something that i know and i would like to share it with the community and this that was the reason why sunny actually bought me on the call he said he told me that okay this guy's actually providing some value let me let me bring him on the call again and the moment he bought me on the call trust me it was i'm going to tell this to you sonny that i was actually typing one more message back then and if i hadn't if i didn't hit that blue button back then i could have hit the cancel button i could have done that yeah that would have been scary you know yeah but i hit the blue button just by a mistake and then i was all panicking you know like what the hell did i do just now and why am i on the live stream the next thing i know the the momentum just took me up like i didn't care i thought of sunny to be a person who who is like a god is he basically a god but the thing is that he was he was not someone who was at home from whom i was scared of because he i thought there was some kind of similarity between us he was also a coder i was also a coder and in my school to be honest like i do not find anyone else like me because they're all there's a group that i call the popular group okay like they're all super popular in the entire school and and that guy who just sits back and he does his homework and you know he's not that good with teachers and stuff too but then too it it didn't matter to me because i just tried to take a step further okay i just tried that okay what's that can happen i thought of that okay what supposed to happen maybe maybe some people might not like it and they'll just be like okay dude this might have been wrong like even even with some some things that happen on a daytoday basis sometimes it happens that you're wrong okay don't be afraid to be wrong exactly like main thing yeah literally the main thing is like don't be afraid to be wrong don't be afraid to you know like put yourself in those uncomfortable positions and the one thing is is that like if you take positivity guys like into any situation i guarantee the outcome is going to be positive for you yeah like it's because if you go into a room full of negative people but you're just that one person who is positive it's contagious right like it will change like everything and it will become like something which is a like you will shift people's mindset just like if you walk into a a room full of happy people and you're like super negative you're gonna kind of flip the dynamic in that room right so that's what that's pretty much how we started talking and that's pretty much how it blew up and that that's why literally brienne was on the court right now today so with that said guys yeah uh we're gonna uh i'm just gonna go ahead and jump into some of the react stuff now so that way we can go ahead and like get everyone involved in it and things like that but otherwise like guys i just want to say a massive thank you to to to priyanshu because he dropped some crazy value bombs to patch and well done patch for the client united awesome stuff and corey literally straight fire man like you you in the beginning you were like i'm nervous but you did you ran with that and absolutely crushed it so you guys are awesome uh we're gonna go ahead and jump into uh the react basic stuff right now and today we're going to be talking pretty much about um everything involved with like what you need to learn what you need to go ahead and do what you need to go ahead and do to get started with with reacts and some of the top things which i consider as key points right so key points that you're going to need to go ahead and cover and how i imagine like if i was to start from the beginning right now what what what what approach would i take right and and then and this is sort of like from from things i've learned from things i wish i kind of knew before and all of those things right so we're going to go ahead and jump into that now um so what i would say is let me go ahead and share my screen right so we already talked about all of this stuff so i'm going to go ahead and clear that now but the first thing i'll do is pretty much for those of you guys who aren't familiar with um how we actually go ahead and start react apps uh don't go don't build them from scratch right i know like people say yeah but it's kind of it will be useful it will be handy like don't don't do that the reason why i say don't do that is because honestly truthfully i've never had to do it uh that's the truth like in in in all the time i've been coding i've never had to go ahead and build something like that from scratch so until you need to do that don't do that right my approach would be use create react app so create react up is what we use in every single build it's the one the easy way that i would sort of recommend every single person go ahead and do right so that's the first thing the second thing i want to say is also i don't have the chat here guys so i can't actually see uh oh now i have the chat yeah so i can't see it if you manually do react it is going to waste your time and if you do not make it it's like exactly a single thing and it won't work exactly it's like the worst feeling ever you tried so hard and then also you feared so why not just take the easy way yeah literally just take the easier route because the truth is is like as as i said like you're you're going to be pretty much stuck on things which at lit tool would get perfect the file every time right and the benefit of using this tool as well as create react app is um where's it create react um is that it also gives you like the latest and greatest things when you're using react and things like that because they always upgrade stuff they always change things also and if you haven't seen like i would recommend watching the previous coaching course you can pretty much use special options with this to go ahead and set the app up with redux with with all sorts of other stuff which which if you've never used redox before it takes ages to go ahead and set that up typically or it's a very painful sort of process to go ahead and do that so in this case we're just going to copy this i'm going to go ahead and dive into it and i'm going to do it in a very practical way today so we're actually going to go ahead and literally just do stuff and i'll show you that way as opposed to sort of listing it out and drawing so it should be fun to watch as well so i'm going to open up a terminal um give me one sec also the crowd on youtube today is actually crazy so thank you guys for watching we have 260 people across youtube and facebook if you're enjoying it smash the thumbs up button guys um and get the video out to loads of people but let me go ahead and pull this up right here so we've got the terminal over here and uh just a little top tip for you guys uh if if you guys haven't got you see my terminal might look different you might have that kind of annoying squiggly crap in the beginning and then it's like takes up half the terminal and then you get to your command right i would recommend that everyone goes ahead and downloads this if you've got mac i'm not sure the windows alternative but is but like this is what you want to get if you've got a linux subsystem or mac right so it's called oh my zsh and i recommend that everyone goes ahead and grabs that when you get a chance right the installation instructions are on this page is super easy you pretty much just copy this into your terminal and it will install it for you now the reason is it's really handy when you're doing a lot of like development stuff but i'm gonna go into my desktop go into clever programmer and then i'm gonna do that command right so i'm gonna paste in that command so i'm going to go here create react up paste it in and then we got create react app my app so i'm just going to go ahead and call this one let's just say coaching call let's just say react basics react basics all right boom also alexandra's tuition i always see you uh comment dude and i always see like plus in front of your messages i don't know why is that is that intentional or like it's literally for the longest time me and cozzy was like have you seen that guy alexandros he always comments and he's got a plus none of us can figure out why there's a plus uh so let me know why there's that but um yeah so you want to pretty much go ahead and do this and this will start up the app right now um he did it again but but what i would say is while that happens right this this will become your holy bible like this is where i literally lived and breathed i lived and breathed these documentation like i'm not joking when i say that like i literally stood here like and i was doing tutorials and then i'd come back and this main concepts right here so even everyone that i do onetoone sort of coaching with i tell them to very much like just like become insane with this section the reason being is because tutorials will teach you how to even the clones they teach you how to build stuff but until you know the actual inner and outer workings of react when you get stuck in some weird debugging situations the difference between you reading this stuff and not reading it will make a huge difference as to why understanding why like things aren't working in a really good like like things might be sort of rendering in a weird way or or like you might be like yeah but i used used effect but like if i asked everyone on this call right now let me go ahead and actually do that as a test right i've asked everyone on a quote on this call right now how many of us have used the user fact hook before just raise your hand it has confused me a lot right so i have weird box i had weird bugs but somehow it sold and i don't know the reason how it got stolen still yeah so literally but but like if you've used it just raise your hand so i've used it okay so loads of us have used it right now again i'm going to ask the same question now like raise your hand if you could explain to me exactly how the user factor works or why it works that way okay so victor nice dude that's awesome yeah but literally like there's much less time from you by teaching it over and over again every build yeah so exactly so that's the first thing that one pattern recognition the repetition is going to eventually drill in a point right now compar like combine that with um and we actually had a really good question just come through on on youtube right now as well i'm gonna uh mention that in a sec by a beer so don't worry i will answer that but um yeah so so the the the user fact hook right so like we use it a lot right but then actually understanding what it does and and why it works that way is crucial and trust me when i said because a question just popped in here right saying uh hey hello like i have a question why do you always use hooks and not class components right so firstly this is a question i get all the time and and to answer it very shortly is um you have two types of components in react okay so i'm going to go ahead and quickly take a a little screen uh drawing session here so we've got you get two types of components in react two types of component right uh oh man i hate it when that happens uh freeze undo oh man what the hell it's on the other screen okay anyway two types of components yeah and then what we're going to do is we're going to say the number one is class based component right so i'm just going to say class based component now if you've ever seen these or ever used them they're kind of messy like the truth is like if you've never worked at the functional you'd think it's a normal thing but they are kind of like messy you have a super uh you have a constructor you have some likes with stuff that you do in there that you might not understand why you do it you just do it right nobody wants to admit it but that's the truth right the second thing is you have functional components right now i still didn't understand that this keyword yeah i think there's millions of developers who still don't understand this keyword so don't worry but so there's a few differences here right the main one is is that this this was around this was the first type of component right so i'm just going to write this was first type of component all right so this one was around for longer right so i'm going to just draw a line between them right this was the first type of component it's been around for longer what does that mean it means that class based components are the ones that you're most likely going to run into when you're in a production environment now that's a very very important point right so this is the one that is most so this oh god why is it always let me change the color of this to be a bit more bright so there we go so this is most likely most likely the one you'll see in a production environment right and the reason why is because it's been around for longer which means that when the company started so imagine a company started in let's say 2015 2016 yeah they would have built the initial app using whatever was available and at the time classbased components were available functional components weren't available right as far as i can remember right so but the point is that functional components came later so these are these arrived later right and all these are is they're essentially just um they're functions right so if you a classbased component it has like a lot of fancy stuff inside of it which makes it work in a certain way functional components are literally it's imagine you have some kind of input right so you have some kind of input oops input you have the function itself right so this is the component so imagine this was like the product component so the function is up and it has an output and what is the output is literally the the jsx or the uh the sort of like what you see on the screen is literally like the product uh bit of html and js like javascript that you see that gets meshed out of it right but this is essentially this is all the functional component is every single time and if you've done any of the clones this is what we use we use functional components because it's very much like it takes some kind of input in this case the input would be props so this would be your kind of props or something like that and then the output would be the actual component itself right but then yeah can we use both class based and functional paste in a single reactor yes so very good question there and that's actually something which you're going to experience right so you would actually experience this and today we're going to purposefully do it right so i'm going to even show you that um but yes so so this actually goes into um so i actually had this of this come up once before right so i joined the company and and when i joined that company uh it was a huge company so it's called tesco and they work with um a lot of it has been written in classbased components and as a result the there's a huge benefit to using functional components so before we kind of move on to that next bit i'm just going to say these are easy to understand right these are easy to understand and then but the problem is that we couldn't use functional components for a very long time because they didn't support state right now there are two main concepts in react there's state and props right so we will get into these afterwards but there's two main concepts in react with state and props now state is like the shortterm memory of components and um props is is how we customize each component so that one component is different from another component right um so these are the two main fundamentals in react um but these were these are easy to understand but the problem is that we could as soon as we needed state we couldn't use functional components anymore because they just didn't support it and then the bloody guys at facebook just changed the entire game and then and introduced react hooks right so react hooks pretty much leveled up all of our components to the point where now you can get state but you can also get a ton of other useful things right and now what you can essentially do is change every single class based component into a functional component so you can change a classbased component into a functional component now you can do it the other way you can do it this way but you don't want to do it that way yeah yeah so i just want to ask one thing that uh could we have one session just talking about you know some examples of converting a class based support into a functional based component we're actually going to do that right now after this i'll show you guys uh that's going to be really fun yeah so i'll show you guys right now after this because it's a really important thing and it's one of the the fundamentals of nailing that and most people the problem is is that yes the builds are awesome but everything is written with the cutting edge stuff the reality is that you're going to enter a company and they're probably going to have old code right which is class based now people people wonder is it worth learning functional then if the company is using class based or what i've seen in a lot of cases is people don't bother changing the class base into a functional now where where true value came out of this was when i actually went ahead and said to a company i said like i would not only implement the feature that they wanted to build but i would also take it a step further and be like okay i changed three files today all right so in my pull request three files are getting changed right so if you don't know what pull requests are david and the monster they get video i think yesterday go ahead and check that out and i think they cover a bit of gear um but um yeah so imagine like i submitted a change request or pull request and i pretty much said that like yeah this these are three files and they pretty much allow the app to now have messaging right let's just say like i've created three new files and i've changed three classbased components to messaging right now if somebody submitted that right a lot of developers are lazy they'll be like yeah sure that that can go in awesome job yeah but the developer who gets noticed by the senior developers the developer who sort of who is forward thinking and gets sort of the difference between somebody who's gonna get a 5k bonus in to 10k bonus or raise right is the one who goes actually you know what we changed three files and as well so this is going to provide the functionality that we need but we've got a little bit more extra time in this sprint or whatever so i'm going to go ahead and also change these three class classbased components to functional components because functional components will be easier to maintain right so let me go ahead and oops oh man what is this oops but sony if there are some classbased components that we never want to touch later like why would we even want to convert them functional no so the benefit here is uh i agree so there are going to be some components which like in i mean the truth is you think you're never going to touch it but there will there comes a time and point where that code will get touched again so i've touched code which has never been touched in like two three years and and it's like legacy kind of like oh man like this some kind of danger zone yeah and the truth is is that what companies do is they get contractors right so you pretty much have two types of people who work in a job you'll get you'll get the people who are um who are permanent and they sort of like you know they take pride in working because they're gonna be there for the next few years right so they're gonna write clean code then you get the contractors who sort of get paid very high amounts to come in fix problems and sort of do stuff and then they kind of go right so contractors usually work on like one to three months they get paid really good money which is why people contract but they don't really care about the state of the code after so in a lot of companies what you're going to see is that code which is like whoa how the [ __ ] did this get past like the the checks because because they they would have maybe force pushed it or they would have like got passed in some way shape or form but the point is that you're going to eventually touch some code which you never thought you would have had to touch right so the way of thinking of is if it's going to bring if this is a piece of code that you know has a chance of getting changed later i would recommend just taking the extra step and changing it over to a functional component but you have to do take care when you do that because doing that you end up refactoring a bunch of things and in the beginning i used to i got a bit over confident with this and i broke some stuff and it came to bite me back later so now i can do it very well but back in when i first started off it was kind of a tricky trait to go ahead and do but to break down a few of these things classbased components are more complex to um to maintain so they're a bit more complicated to maintain and also they have something called life cycle hooks a life cycle method sorry now life cycle methods examples of these and you're going to see these when you do tutorials and things like that are pretty much they're things like uh component dead mount right you might see this and you're also going to see another one like component wheel mount right now yes what are the difference between component did mount and wilmat i still to this day don't fully know all i know is that it depends because there's a difference like dead must be in the past and like the life cycle might it must be like some like a human life cycle right so it's just my understanding like a basic like i i don't even know what i'm talking about but correct me if i'm wrong but i think that the date mode must be something that happened earlier and now we want something else to happen yeah so you see the will yeah so so i say this this is the effect language yeah so if we have use effect so the regular code we have in use effect is the component dwell mount and the code in return is the component did amount yes so so to actually answer that question uh firstly let's just break it down so the difference between these two is this one happens before the component mounts this one happens after the component is mounted right but the truth is this actually was a bad pattern right so facebook realized afterwards this was a bad pattern it was causing a lot of people to break their code and there was another one called component should update and then there was like another one which was component get derived state from props which yes what the hell does that mean like it's kind of weird in itself the truth is i've used all of them i have i do know what they mean but that the reality is the naming's the namings are terrible right and the truth is is that like all of these methods facebook like the guys over on facebook realize that they're just [ __ ] like is in that they're not like easy maintainable like they work yeah they work but they're just like they're kind of messy so in functional components you have one right you have one ultra powerful thing and it's just called the use effect all right and once you learn how to use the use effect well the use effect pretty much replaces every single lifecycle hook so to answer your question of salva it doesn't just replace the component did mount it replaces every single yeah one yeah so component demand component will mount come on should update all the lifecycle methods it goes ahead and replaces it with a use effect and you might be wondering but how right but trust me when you when you dive into the user effect and this takes me back to the documentation so remember we were looking at the user fact uh documents over here so that accepts a function and blah blah blah like it goes through the point is that look if you actually read into this so i'm not going to kind of read over this right now because i want to just get into some coding and show you this stuff in practice um but it has things like a cleanup function so for the longest time i had been using usefx and i did not know that you could do cleanup right now cleanup is basically where uh you could run a piece of code when when the component mounts or component sort of loads that's what the use effect is good for and then it can refire when you have like a dependency change or something like that but um there was also a case of like where you you need to like for example let's say we start listening to a database or something like that when the component loads right but as soon as the change happens i needed to detach the listener before a new one got attached right now i know that might seem a bit complicated if you don't know the context or anything like that but the point is we needed some kind of way to do that and uh and previously what you had was component did unmount right so imagine like you had this before right did unmount and then basically imagine like you had some code you went to a company they had like in the component didn't mount they were like right attach a database listener and then in component did unmount they had like right detach to detach the database listener then you go over to a functional component you're like wait a sec like i know how to fire code when my component mounts but how the hell do i do it when i unmount right and then i remember i was sitting there i was thinking wait [ __ ] maybe i can't do that in a functional component and then i went back to the documentation and i realized i was like oh my god you can do it and i remember as soon as i saw this i ran it i literally ran to work the next day and i was like guys did you know that you can clean up from from from a user effect and everyone was like you can clean up from a user pack and then and the truth is the funny part is the senior developers was like what's the functional component and i was like what the [ __ ] like this is like mindblowing so so the truth is like yeah even the fun even the senior developers don't always stay ahead of the curve because they're comfortable with what they're doing and they've been doing it for so long and making money off here that like for good reason but the truth is it does staying ahead the curve pays well so so always try and stay ahead of the curve right um yeah somebody was i thought but go for it yeah yeah you said that you get a lot of value when you come convert classbased components to functional based when you are working like when you're really working but uh is it like i i started react when there was functional components so i just started writing with functional so do you think it would be good for me to just learn the class based components one like a little part of it so i would say very good question firstly um i thought so to answer your question the question is guys um so he's he's obviously started coding since react uh functional components have existed so now he can use them so should he go ahead and do classbased components or or should he not or like what where where what's the optimal route through that position so what i would say is in this position right start coding like build clones and stuff like that with functional components because you you get like you get tangible output right you get things which is it's fun it's going to work well it's going to do what you need it to do and it's going to be scalable maintainable all that stuff and it also allows you to get a grasp of react in a fun way right you're not going to get the headache of classbased components of that but when you reach a certain point where you basically start wanting to take it to that next level you're like i've done like so many builds now you know i've kind of mastered this main concept section i played around with hooks i you know i feel like i'm comfortable the next step i would say is now get used now start writing the same components that you've done with classbased methods and and start converting them methods to class base and you might be thinking that's a horrible thing to do why would i do that because trust me it will pay off like if you go into a company and you're able to understand classbased components as the junior guy right so you can pretty much do all your classbased work and all that which is kind of expected right so if you go into a company they're going to expect you to know how to do classbased components right but then if you're a master a functional component you know all the cutting edge new share they're going to be like oh man that's a really good suggestion like i because most of the people in that team will be making improvements or building on the app currently in a classbased mindset trust me when i say that everyone that every single place i went and worked in all of them were working with a classbased mindset because hook's functional components were quite new at the time and still at this point you get a lot of people who are still stuck in the classbased mindset so i would say it's going to be my optimal route to getting to that point at java would be to to do it with functional components first so you enjoy the process you get good at you have tangible output you see you have something on your portfolio and then kind of reverse engineer it and kind of like flip it and start doing classbased components that way you have fun and it'll be a lot easier to transition as well yeah yeah so adding one more point on to that i recently had an interview with a company which uh called for a react developer and the first thing that they asked is since you learned you learned it quite recently so do you know about class components and i was fortunate enough to know about that at that time so i was like yeah i know and that was important yes for that time yeah exactly so it is going to be an important thing yeah yeah my input here is that everyone should like learn class based component also like that is because like at some point of time you uh like you will face that okay you are importing or you are using some like predefined like oh something like a calendar from any of like prebuilt calendar on your website yeah so but the all the features what do you want are not available on that and that calendar is in uh like class based component yeah so when you have to implement it you should know that okay okay where i will change it where i have to like modify that one but you don't know that okay because of the class based component you cannot edit it okay that's not here yes either you can edit it or you make it by your own in the functional component so by converting that also in the functional component you should know that okay how classmates component work so that will help you so you should learn both for your understanding yeah so because like if you are joining a company and they give you a pro like project and that is totally on the classbased component and they want you to add some feature in that and if you don't know that class based component you cannot even convert that into the functional component yeah because you have to understand it that okay how this process is working when that is not a big difference when if you know the uh process you will understand it very well yeah so my suggestion is that okay when i worked on the react native i face these things because when i'm importing like so many of the like npx this one this one this one and all are in the class based component i jumped into a node modules and then jumped into that okay what is defined in that one then i jumping and i change all in the functional components yeah that helped me a lot yeah that's something that's a really really good point as in uh and guys like i really like i'm gonna repeat what he said uh if if you didn't catch it properly but literally like that's that's actually a point i would have completely missed which is actually a golden point like a lot of modules that you go ahead and pull in right like because in um and most of them like let's go ahead and show let's go ahead and show them an example of this right so whether it's like code that you're going to reuse or something like that but or whether it's um a mod for example we've all seen react flip move is something i've used in a few of the builds and it's basically a way of introducing animation into your builds right but for example this this is an awesome package right because it's it work it adds animation to your to your app but the point is is that like this one you're fortunate enough here to get a section about how to use it with functional components right but previously i don't know if they've updated in us they've actually got rid of the class based section right but the point is that before they didn't actually have all they had was the uh the class based implementation for this right so you can see they've actually kept ahead of the curve and they've got rid of the classbased stuff now but what you would see is like say for example let's go ahead and just try um react to use for useful libraries uh let's just try and find something that we can pretty much go ahead and let's go ahead and see if this one maybe awesome react components um because the point is that a lot of this stuff might be so let's go ahead and see like this random library over here um okay or let me just try this one but you see it's actually a really good package guys um this has got loads of [ __ ] going on okay again they're using react functional components so if you see like they're all moving towards react function component but i guarantee you guys i've it happens all the time i run into an example where it's all sort of classbased components this is like a really nasty classbased component no they've used like a really oldschool way of doing it but the point is they have a render here oh my god they're using variables as well okay just run for the stars if you see that but um the point is that you're going to run into to cases where they're going to have here perfect okay so they have like a classbased component right now obviously they don't have and and they still if you ever see mixins mixins are no longer used so just something to know right so mixins were something which they tried and tested they didn't like it they got rid of it also this syntax right here that you might see that was also something which was tried and tested didn't really catch on and they kind of got rid of it um and this is kind of like a way of using a higher order component in case anyone's interested but the point a single yeah so that's the point right like so that this is this goes on to add on to what elite uh said earlier so you're going to find plenty of cases where you need this code right so imagine like we needed the code that they had here right so like rather than building an entire react uh sortable element or for example like a date picker right this code right here was built by someone and it could have such a good reputation so it could have like a ton of stars and all sorts of stuff so in this case this has got 456 stars so i mean it's okay but if we wanted to use this and it's class based we need to know how to refactor this into a functional component so that way we can use it sure we could use it as a classbased component inside of our app but it's not a good practice if you've got a perfectly nicely written functional component app and then the and then this is written in classbased components it kind of gets messy right so i'm going to go ahead and jump into that that thing that we built yesterday yeah to be honest even one star on github is worth a lot more than github easily don't no but don't don't assume that because honestly when you when you're looking especially when you're trying to pull in code try and make sure that it's got a decent backing behind it for example like i'm talking about see that if i launch a library today then if i get even one set and i'm gonna be happy but if yeah if i'm if obviously if i'm going for some library then i'm always going to be like okay one thousand source minimum yeah exactly like is in like this is because i would always sort of like yeah that's true like if you're gonna push your own library then of course it's gonna get it's gonna take time to get traction but this is like this is called open source sort of contributions as well by the way like you can go ahead and say you're using this library and you realize that you can improve it you can go ahead push code to it and then you're part of the community in that way so you're contributing to open source work like um i made something in php and it got one star after a few days and i was like it made my day nice it did nice yeah yeah it does make my day like whenever i'm getting one a new follow on github to be honest it's like the best feeling ever yeah nice like i remember i see him i literally started a uh so quick story for you guys i literally started a company in 2016 like and we've sort of tried to do like a a food ordering drink ordering thing like table service app and we built everything we've done it all and i remember like we got to a point where it was uh it was it was yeah we're implementing the the payment processing part and i remember i was i was adding the code little stripe i was adding the kind of strap it was it was like a few years back when tripe was sort of like it was good but still needed to sort of iron out bugs and they didn't have something and i was sure that i was implementing it correctly and they didn't have support for something so i went ahead and built the support for it and then i submitted a pull request and it blew my mind when it got accepted and to this day i get like pull requests from stripe so i can actually go ahead and approve and deny pull requests from stripe so stripe is what we use for the amazon build it's a hugely used uh uh platform payment processing platform seriously like getting a put a question frame etc dude that's huge yeah so so that's what i mean but the truth is it wasn't a big deal to get it pushed in so it's actually much easier to go ahead and contribute to libraries and we think right so did you just go ahead and like if you're interested you can tinker with these libraries and you can get involved in it now before we kind of go too far what was that even getting followers on medium like that's super difficult and then the first block just released on player programming and i just caught like 135 followers by just one block yeah that just blew my mind exactly right now i i just like right now i got a male from medium termite i have 34 evolvers dude that's insane yeah like guys we're not going to go into followers and stuff like that just yet but the main thing to take away from it is main thing to take away from it is if stars is going to help you uh sort of determine if something is kind of you know reliable or not like if it has like two stars i wouldn't really trust putting it in your app like if i was like 1500 stars then yeah it's a lot more if there's like a million stars and oh yeah like go grab the thing i would just literally grab it in and be like let me try this because it might make my app better in some way because like one and a half million people use it anyway so i'm gonna go ahead and pull this open in our code right now yes uh sony just one quick question about classes and the uh functional based components yeah so is there any marginal performance based increment when we are using functional as compared to same code written in class yeah so uh functional is more lightweight uh functional is literally just going to be input something output class space there's a lot more stuff happening that we don't see and also when you only have one hook for example the use effect hook right we can much more use it correctly as opposed to like you might in order to get the same level of efficiency in in for example like uh in a classbased component you would need to use all of these correctly right right you need to use it more correctly but in if we use one user hook correctly it's going to be function it's going to be much more efficient so you see like we might use this but we might forget to do the cleanup process but whereas when component did unmount whereas in the use effect because you're writing the use effect it's kind of like do i need to clean up it's very intuitive it's very kind of like you're you're writing the block of code that you you would naturally think to maybe do the cleanup in that block of code as opposed to oh i did component did mount now i need to do component did unmount it's kind of like um i know i know it may seem like you you would see it every time but trust me it gets to points where especially when you've got like a product owner or somebody behind you saying we need this feature in by tomorrow it it can get very sort of intense like um and you just kind of like wanna get the best practices behind your belt um so with that said we've got the the starter template here so we're gonna do a quick cleanup we're gonna delete app.test logo and setup tests uh get rid of those go to app.css um go ahead and get rid of everything let's just make it a cleanup and i'm going to go to index.css and just quickly add a margin 0 and this gets rid of all the styling for us so we pretty much have a clean slate to start with um and then we go here and let's just say h1 hello world right and then i'm going to do command j and i like to sort of tell it in case you don't know the keyboard shortcuts command j is going to pull up your key your terminal npm star goes ahead and starts yeah what's that you need to remove the logo sony svg uh oh yeah damn um oh yeah yeah yeah nice there we go there you go nice green tick and then here we have the hello world right so um with that said now what we're going to do is let's imagine let's create a a um just call it a let's call it a product right let's just quickly create a product and what i'm going to do is i'm going to write the product as a functional component as we all know and love and then i'm going to write the product as a classbased component and show you the differences and we're going to go through all of that together right so um product right here and a product is going to take a title and fade for example here we're going to say amazon echo because it's amazon prime day right now so um i wish they would give me commission for saying that but they don't so that's fine uh amazon that consists like 1999 or something like that and then yeah that's fine for now yeah so let's go ahead and create this component so we're going to say product dot js product.js and then if you guys haven't already got this installed just type in es7 in your extensions and download these react native snippets they're going to be they're game changers like and this is something which 1.9 million people use so go ahead and get them um rfce boom you can also use rafc that will make an arrow arrow function based component yeah you can use that one this one when i'm teaching is a lot easier for everyone to remember that it's a function you know like a score of like it's very declarative but you can do our afce yes correct you can do rafce and that'll give you our es6 arrow function um but we're going to do for now rfcd and then we get this and then this takes props and then we're using es6 destructuring so to kind of open up the object and get the title on price right so we have this and then let's go ahead and say like imagine we have i'm so ingrained into doing it the correct way now that i feel like i have to always add the class name you know the product class name so here we're going to go ahead and just do a h1 a h2 sorry exactly bem naming convention um we're going to go ahead and type in like just the title for example so we're going to say this is where the title will be and then we're just going to have a very simple h3 and this will say like um i'm just going to do a little bit of a hacky sort of price in pounds right and then we're going to have some styling so i'm just going to go ahead and do a product.css very quickly um so it's very kind of close to what we would have done typically so we have product or css is amazing we have this don't worry it all comes in in like you will get to points where it will seem like you'll get to this naturally just remember understand something well and then it gets to a point where you can just do it without thinking it's like driving a car when you first drive a car your everyone is behind the wheel like kind of like [ __ ] themselves like and then you're sweating at the end of it you smell because you're sweating so much but now it's like you can probably drive a car after a while you're just kind of you know cruising along to music and you know it's the same thing we're coding right so once you've got this you pretty much product is not defined so we need to go to app oh god what we're doing here this is my get why do i want this yep we got app and then we're going to go to here and we're going to do a little control space bar trick to import it and then we're going to go back here so now it says amazon echo 199 right so i'm going to quickly go ahead and pop this on this page for a sec so we can go ahead and see i'm going to put this underneath so you guys can get a very clear visual breakdown of what's going on right so we've got the let's make it a bit more okay so now we've got this so imagine we have like three products right so let's quickly give it a very quick styling so we can say each product has a border of one pixel solid red so i'm going to make it very clear to see it and i'm going to say each product has a margin of 10 pixels and it gets a bit bigger and then they're kind of bunched up in the middle so we're going to say padding at 20 pixels so they're kind of huge right now yeah so these are our products right these are like our special fancy products and then imagine we want to so what i would say is everyone this is the approach i want to i want you all to take which is why i started with a functional component i want you guys to go ahead and build the clones and things like that with functional components and then i want you to kind of reverse engineer it so you kind of get used to classbased components in a nice way right and then you can go ahead and start projects from a um in a sort of you know in a classbased fashion just so you get used to doing i'm not saying build projects with classbased components i'm just saying the skill for it is going to be needed when you get involved in sort of in industry right so let's go ahead now and what we're going to do is we're going to have the the product here so i'm going to have the product code oops we'll have the product code here so this is a a class based a functional component right so accept some props but then let's also add some state in right so i'm going to show you guys state and props in a functional component versus state and props in a class space so let's add some state and you see very quick to go ahead and do that as well so let's actually make this very um quick to do it so let's go ahead and just do constant let's just say uh set count and we're just going to have some kind of counter right so we're going to have use state and then the counter is going to start with 0 and then we're going to have some kind of button so let's just have a button with the plus button with a minus and then we're going to have some kind of like i don't know be like a h4 and this will have the count inside of it and then when you click on the this button so on click it's going to do an inline arrow function oops we're done yeah then we're gonna say um set count to be whatever count is plus one so then now if we hit this it goes up and then we're going to have the same thing for let's just go ahead and do this again it'll be quicker we'll do minus right so now i've just done some very quick sort of hacky solution here but you see now we've got like uh just forget the fact it goes in negative numbers for now but you can pretty much see we've got a um we've got three different things here now for those of you who aren't familiar with state remember like i said in the beginning state and props are two fundamentals in react okay props are pretty much how we customize those those uh those apps so let's go back to that app.js and why is it not letting me accept um shrika into the into the waiting room why does it say that okay so here yeah i accepted him but he didn't he couldn't join i think yeah that's right okay i clicked it again but um so we've got the first product amazon echo let's just say samsung tv samsung tv and then the final one and that one's going to be 100 uh 299 pounds and then you've got a let's just say apple iphone 12 because afterwards i'm looking forward to watching that event because right now that events streaming the apple events live if if you guys didn't know that um and that's probably gonna be like twelve thousand pounds or something right because because they overpriced their products but we will love it so imagine um the imac is good like it's not worth it uh i mean i i i can't talk because i just spent a ridiculous amount of money on this laptop because because they are worth it like i i'm not gonna like they have powerful products um but it's more the user experience the best product that i've seen to be honest like i would prefer windows yeah yeah they are good products um so here we have the let's see exactly so so here we have the the props right so we have the props and then it says we've got the title and price and that's how we render out this remember the props are important because in react we have something called component based design right so i'm just going to go ahead and i don't know how you actually save this i think it's cause you showed me i think it's ctrl s oh come on s no oh i done it nice and i could do that okay so let me go ahead and wipe this now oh snazzy stuff guys we just upgraded one sec um so now i've got keep track of that so here uh you've got so in react you have class um component based design so what does that mean um okay now this is okay so you have component based design so just think of it this way right so a web page is pretty much consisting of loads of different things you have so this is our web page right pretty much you just break it up into your reusable components so some some things are aren't reusable or like we don't tend to reuse them but they're still considered a component for example the header right then we have for example the footer right so these would be two components that we typically might have on a web page and then in the beginning like you might have a banner right so you might have a banner and you might have like a sidebar kind of thing or or some advertising panel here and then you might have like four products or like some products here right so this is a really good sort of use case for like a demonstration of what where we would have it so imagine we would have um oops oops okay andrew oh i didn't know you could do that as well god learning all sorts of [ __ ] today okay so uh you want a custard you don't want obviously you don't want each of these products to be the same thing right so that's where props comes in so you use props to be able to differentiate each product from from it's from another one but the the main thing here is that you write the code once right now there's there's many benefits to doing this so this would be like product.js there's many benefits doing this because if you write the product product once and you just customize it with different props then if i change the styling of this one product dot js or product or css it's going to change it to this one it's going to change it to this one it's going to change it to this one it's going to change to this one it's going to change this one and across the entire website where we use product.js it will get changed so you can see there's immediate power there right now also it means that one developer could be come working on the header another developer could be working over here another developer could be working over here one developer or like a team of four developers could be working the products and then some other guy could be doing the header you see like it it really breaks up your app into sort of a maintainable sort of like reasonable approach um it is very very powerful and it's and it's not only because it's powerful in the sense of props and state and what you can do with it and it's fun to code in but it's also a case of teams can work together in a much easier way with react right so that's another benefit to it that's why i'm considering these as basics because they're very very important in terms of understanding we need to understand this stuff in order to even start with react okay so um i did click ok there we go so we have these three things here right now with this is our class based component so i'm going to write the in this entire thing as a class based component now and you're going to see the entire thing and it's going to look uglier than this i can promise you that right so i'm going to go here and i'm going to do product um let's just call it class dot js because i'm just going to call it like the product class variant right so what i want to do is we okay so we all know that this is what the finish kind of i know it's ugly but it's the finished product what it looks like right let's go ahead and have the um code side by side with each other so that way we can see everything as we do it right and every now and then i'll kind of just briefly show you what we're doing here so we can pretty much see that okay so we've got the product and then we've got the product class right so i'm just going to go ahead and zoom out can you guys still see that or is it too small i think i should maybe make it one notch bigger there we go still good right so here we have the product class so i actually forget how to do the to write my class based component so i use this as a little sort of neat trick so i do rfc e you know rf uh c is it oh no sorry it's not us it's rcc p there we go look at that yeah so you see that the snippets are really good because i don't even remember how to do it to write them but it gives you the things and you can even do ccp ads prop types but we're not going to talk about prop types today rcc adds it just creates the template for us so this is the template if we're going to keep it in the same export default fashion i'll do it in the same way so i have export default down here right so product class would be down here right so now you can see we pretty much have that this is the starting point right now two things to know is the differences between class based and functional firstly in a functional component you just simply have the return all right in a class space you have the render and then you return some stuff okay so that's a difference you have a render in a in a fun and a classbased component right so here what we're going to say is um let's just kind of briefly have the same thing so we're going to say class name equals uh product and we're just going to call this one class as well so we don't get confused oh let's just say let's give this one the same styling so let's just say product right so i mean it's gonna sonny um what exactly is the difference between render and return okay so i'll explain that now so um so the difference between render and return so remember a functional component is simply has inputs it does some stuff and then it outputs some stuff right so the return block is just saying like literally imagine we had like a function right so imagine we had uh and this kind of is where it clicked in my head when i kind of thought of it this way imagine we had a function here so that constant print name right and this print name had like it took a parameter called name and then all it did was return your name is um oops we need to use backticks your name is name right so it goes ahead and returns a string right and then if i do const uh my name printed equals print name sunny right now you see a function pretty much takes some kind of input right so it takes some kind of input in this case this would be like our kind of consider as a props or parameter take some kind of input sunny and then this would be like in in the same case here like this would be our props you see like but here it would just be name and then all it's doing is returning some stuff right so it's returning some stuff and then that stuff gets used elsewhere so in the context of in react whenever we render it on the screen so for example here right all this is doing is returning a block so imagine like literally it literally imagine it grabs this and where it has this it pops that in that's kind of what it's doing so it's saying right render this out and then and then because we've got the direct return it's just pretty much going to go boom and it pretty much goes ahead and when react does its clever sort of compiling and it sort of like figures everything out it pretty much goes here replaces this with that goes here replaces this with that goes here replaces this with that but changes all the all these bits with the props that you passed in so that's how it kind of writes the code out right so that's what it means by when it does the return okay so when it does the the returning stuff here um i don't know if this may be cleared up or not but the point is that it it's a function that just returns some stuff but if we go back here and um talk about the render so in a classbased component classes are a bit more complicated because they're not like a function which had just has input output right function is a class pretty much has its own properties it has its own functions and methods and the thing is with a with a class you can't just say like you can't just invoke a class you can't just say like um product uh you you can't just i mean you can't even react but typically in other programming languages you would have to say something like const uh let's just say my my component equals new product class right you would have to do you'd have to do something so make an object yeah yeah you have to kind of make it into an object and then in order to get the output of it you'd have to do this dot render dot function call yeah and then this yeah i get it i get it yeah exactly i'm glad though because it was a really good question actually because it actually made me explain it a bit more and that would then go ahead and replace this with this and that's what react is doing under the hood of of that block but you see like there's a lot more this is just straight up simpler it just has some input and it does some stuff and there's some output right it's very clear to the point um right so with that said we have that done and then now we're going to go ahead yep okay so uh i wanted to ask one question why do you use rfce instead of rafce isn't that like more es6 plus yeah so the reason why i use rfc is just because it's easier to show you that it's a function uh some people who don't know what es6 is you you do like this is essentially the es6 way um but although yes i agree with you i think it's a bit cleaner you mean you could you could take it a step further and you could literally just do this you could do export um yeah you could just do export default at this level um which is even more kind of confusing but you see you can get so caught up with making it the es6 super standard they kind of like loses the part like in terms of readability yeah sometimes this this uh is actually a lot more easier just to quickly go ahead and add a glance see okay we've got the the client you see this is very clear and simple to see so there's a balance you know like in this case using the arrow function syntax is really nice um so what would you recommend in like kind of like a professional setting um i would say just whatever preference honestly if you're going to a company and they do it this way stick with that because you want to stay consistent with their coding plans and respect that if you if they don't do any then i'd recommend maybe doing rfce until the comp until everyone gets familiar with it then maybe do i mean it depends really it's all down to preference there's no like right or wrong but as long as you're doing functional over class space that's the more important area right yeah because i just see david using r r a f c e instead i just think from a teaching perspective seeing that it says function is a lot more understandable uh than just seeing const because some people might be like i uh i'm getting lost at that point and and you don't yeah okay so with that said we're gonna have a h2 here and this one's gonna be it's going to have some kind of title right but here we don't have a title we don't even accept props at this point right so this is where components kind of get a bit class based components get a bit more confusing because here now what we're going to have is we're going to have something called a constructor and then that takes something called props and then you have to say super props i'm not even sure if you need this but to be honest at the point anymore but you'd have this right and then what you'd have to say is here you say this dot props dot title right just to be able to to get to um this title you need to write this stuff you need a constructor which which does this and then you have to say this.props.title now in a lot of cases as as yeah um you know how in like functional components we could like restructure the props into like title and then um price rating stuff right but in uh class based we have to like mention the general name props and then later we could like this dot state and then the specific um props right yeah so you have to say this firstly and then you have to say props and then i mean here you could also have it so you don't destructure and then you say props dot title prop stop price so here if we did this you would then have to do props dot but we but you don't have the this you see you don't have this headache right but here in a lot of cases and i i've seen so many people who are learning to code run into this issue and they would and i've worked with junior developers in companies and they've been like saying i'm kind of stuck my code's not compiling and it's purely because in a classbased component they just did this they did problem not not this they did they did like that on the screen where it says props dot title um but you see they actually have to have this and the reason being is because remember guys when i showed you the example earlier right here prompts my component equals new product class the reason why we actually have this is because i mean it's a bit kind of confusing to kind of wrap head around but it means that this instance of so here we actually create like a an instance so imagine that we we've basically created like a an object of this class so imagine these are a product class imagine it's like the blueprints right and then we create the an object like from that blueprint right so this is our object and then inside the class now it says this like this object so this instance dot props dot title so it's kind of like it goes to that level which is whereas a function is just like why you gave me some kind of prop you gave me some kind of input i'm going to use that input and i'm going to give you something out you see it's a lot simpler than class based but that's a good question yep so here we have desktop props.title and then pretty much i'm gonna do the same thing over here now so i'm gonna go ahead pop this in here but we can't have you see how in functional components we have set count right and also here we need to change this to this stop prop store type price here we have a problem now we don't have this functionality so i'm going to get rid of the on clicks right because we can't use set count because that's using hook stuff and hook stuff is all is literally supported inside of uh functional components only right so here it works for this because we use use state right now the first thing i want to show you guys is when we use um the use state hook the benefit is that we get the variable that we we just created for example here the count but then we also get a setter method right and the the beauty of it is that that set a method is only going to be used for the modifying the count right you can't change any other so imagine if i had another variable called um let's just call it like age or some random thing called age or something and then here i can't use set age to modify the count and i can't use set count to modify the age right they're kind of isolated so it it's going to prevent bugs because because when you see set count it means i'm changing the count right but in a classbased component you don't have that firstly in order to set up things like for example here in our first line we've set up the state here i would have to do the following to say this dot state which again it could be confusing you might forget how to write that and then you look at the state as an object you say this dot state and then you say count of zero so this essentially is replacing this right now if i want to increment on click right so let's go ahead and do onclick and then i'm gonna do the same thing i'm gonna have an arrow function right but here what i'm going to do is i'm actually going to do a block of code so here i can have console logs and all sorts of stuff but inside this block of code when i click now i actually have to say this dot set state right and then i have to do and you can you can you can actually go ahead and take the old state but i'm not going to show you guys that method i'm just going to say you do this. and you pass in what you want the new state to look like right so in this case i mean we will do this we will show the old method actually we'll say um we'll sort it previous state and then we want to use the previous state to determine what the new state would look like so it's kind of oh this is kind of weird right so like you say count and then you can pretty much go ahead and say so i want to change the count to be whatever the previous state was dot count plus one right or you could say this.state.com and you can get rid of this yeah so you could be like this dot set state and then the count is currently whatever the state is plus one but you see here the problem is is that i could then what if i'm typing and i accidentally just do this right or accidentally type in like uh i mean you wouldn't type in age here but as in wifi if i accidentally did that or if i accidentally went ahead and and did this you see like is it i know it seems like small mistakes but when you have like loads of things like for example first name last name phone number uh mobile number you see like it can become very quickly like you start mixing and matching and uh you're you're going to break something but the point is is that now and imagine say for example i had age here so every time i clicked on it so imagine the person's 10 in the beginning and as soon as you click that button the age goes up by by let's just say the age goes to 20 for some reason right but say for example here now when i click the plus button i should only be changing the count but i'm also someone added this code here that changes the age too right you see it's kind of like this is kind of like bad because like it's very easy to make this mistake right isn't like somebody could go ahead and just add this in here or if they're using like objects or arrays it gets even more like sort of a prone to error and things like that and also guys just look at the code already right look at the difference in code like the code's already kind of yeah so this one right here is much cleaner right it's literally a case of 19 lines and that's that's literally 19 lines and we've spread out the code if i wanted to get this shorter we could literally just do this so we could have you could literally have this and then you could just do something like that and then you have 17 lines of code you see and and also we don't need this here we can just go ahead and do this and now we've got i mean 16 lines of code right so you see like it's pretty much it gets it's a lot smaller and i mean and i'm not going to be again a lot of friends before but the understanding is more important right like i'm not being able to understand anything like what the hell is constructive yeah i can easily understand everything that's going on right exactly so you see like in here so someone might comment and this is again another problem what if somebody comes in here and changes like they will they went to change and they their age to like 20 or something but then they they've sort of messed up like uh they messed up one of these things or like if you had an array and they've changed it whereas here you would have an individual line for every piece of state and each individual piece of state gets its own modifier or own setter which is only responsible for modifying that piece of state right so you see they've incrementally built upon the issues and errors that they sort of saw in the past and they realized that okay let's not do the same mistake and you can see now that like if we if we had this right so now what i'm going to show you is imagine i've come into a company and they've they've got this product class right i'm going to show you how quick it is to go ahead and change all of this code in to a functional component right so i'm not going to look at the other one but i'll show you what i would kind of typically do if i was to kind of see this and i saw that okay we're using some of this stuff here and i know that we've got a set state over here and oh looks like the developer didn't even bother finishing the on click here so i'm going to go ahead and do this and say this does stay in minus one um okay so imagine already and that wasn't even the full code so yes even longer than we thought 42 43 lines of code right and you want your code to be nice and simple and short and also extends component if you forget to do that you know whereas in inside of the other one yeah here we didn't do any of that right and in some cases you see people doing this react dot component and they don't import it here so you might see that and there's something called a pure component as well but i'm not going to get into that for now all you need to know is that a a functional component is more performant than a pure component um as far as i'm aware i'm sure i yep that the most important thing by the converting of class based improvements to a functional based component is that the understanding of the class based component is extremely important like if i didn't understand what he is doing in each and every round of code over here yeah i'm pretty sure that i would mess up the entire code and update something a hundred percent one hundred percent if i understood like what is the purpose of this that constructor and what is the purpose of that render function then i think i would be personally i would be able to change the code really quickly yeah that's a really good point and you know because you said that i'm going to take it a step further and and do a use effect in here and say if at some point if i try to do that i would i would definitely get stuck at use effect thing yeah you know likely exactly the user effects gonna change right or i mean like it's you're gonna be like oh [ __ ] like i don't know how to do this right now yeah and also i'm going to show you an example of where like user effect actually went ahead and changed something which most developers even good developers with car space components didn't actually know how to properly overcome and trust me i worked with some really good developers and they still got stuck on this one problem so i'll show you so imagine like every time the count changes i want to sort of console log and say boom the count just change or this does you know let's make it interesting let's say if the count mod 2 so i think that means that if the count is divisible by if there's no remainder after it's divided by two yeah then we're going to console log and say it is odd right i think it's odd then right even oh it's even right yeah to be honest i always forget i just kind of do one and then if it's not that i do the other one yeah look at that guys he's not even a good mathematician and you know some people say that match is important yeah you don't need to be a genius of maths yeah like you don't super bad sound crazy i would literally go and do it in calculated stop using my own exactly yeah so you don't need to be a genius a mouse guys but if the count here is um is greater than uh one tick it's a currently here is greater than i'm sorry if there's mod if there is a mod after this then it is even right so we're gonna go ahead and check that this works just go ahead and try that out let's go ahead and see here boom open up this use effect is not defined let's go here and do this auto import from react okay so okay so let's go ahead and open up the console and here so if i go ahead and do it is even no i was right guys i think i was right yeah so look if it's if it's zero now it's even see so so we want it to only fire off when it's wait oh because you forgot to put a condition i'm pretty sure it's like equal oh yeah yeah yeah yeah i mean it's still it's going to check if it's because this is this is firing if you count mod 2 then i'll just be like oh it does count mod 2 and it's true if it like even fired that you have to put an equals it is firing when it when it's it's odd though like yeah i know that's what i'm saying because you said like but we could say yeah the operation is successful so it's just going to like i did that so it's true it by the way guys the triple equal to this means that it is going to be the same as integer and like it will be a string and javascript does this weird thing that he could compare yeah it's doing it based on boolean right yeah so here we have like now it's saying if it's odd yeah there we go perfect yeah so again that's a good exercise so you can go ahead and play with that so now it's odd it's even it's odd it's even right but now for example so we have this kind of weird quirky functionality right so god knows when you're going to a company there's crazy stuff that happens in component world man did mount use effects and stuff the point is that this one fires off when the count changes and then yeah and also if you didn't know you can have several use effects so i didn't actually know that until way way too late i had one problem and he fixed it with adding just one more use effect so it was kind of it was like in a date we do not know how we solved it but it was the problem that he had in one more use effect that was totally random i i was working with yeah location and like the the value went through the reducer and it was working like we console logged each and every line and when the value came out of radio sorry it was resetted back and we had no idea what was even happening there yeah it can happen and it again this goes back to your understanding of like reading up on this stuff will make the difference between understanding what went wrong and what didn't go wrong you know um but now let's go ahead and like you see the product component loaded the product component loaded the product component loaded and if i fire it off again it never fires that code again because if you if you have an empty dependency bracket it only loads once when it loads and it doesn't load again right so let's go ahead and rewrite so i'm looking i'm not gonna write i'm literally gonna try and do all of this without looking right now so in product class right so here so the first thing i would do is pretty much go ahead and see that right what pieces of state what pieces of prop so i've got one piece of state that's being used count okay so we're going to need a count like we're going to need some kind of uh use use state hook right so what i would do is i'd literally start rewriting it here i'll say const product class i don't need this anymore uh we can do an arrow function it takes props and then we can do this right now we don't need or the constructor but rather than just deleting it straight away i look at the constructor and say okay i've got age and i've got count right now is age actually being used not really it's not really used anywhere right so we don't need the age so here i'm going to do const and i'm going to start writing the hooks that i need so i'm going to need the count set count equals use state import and then the initial value they gave it was zero okay so they gave the zero here so now i'm confident that i've replaced the bits that we need so i can delete the constructor right now i remember functional commands don't need a render so i can pretty much look at the closing bracket i and this is a trick for you lot so you don't get caught up with what you know when you accidentally close a bracket you're like [ __ ] where's the other one and you're trying to look for it yeah oh yeah i know from vs code i don't like that i've used it i don't know i mean it's preference like you can use it i i personally i don't know i mean they don't use like like different colors for each one it's kind of like the same colors yeah i just like using i have it installed it doesn't even make a difference for me like i don't even care i i click on the bracket and then you can if you if you go down you see this one's actually highlighted so then i click that and i know that it's that one then and i can get rid of it and then but i mean i mean it helps a lot of people it's a very popular uh extension so now we've got the return now i don't need desktop props.title so i can go ahead and change that to the uh just becoming prop store title and then we've got the on click right now the set state now rather than doing all of this i can just go ahead and and i know it's only one line of code so i don't even need these brackets but i can pretty much go ahead and say e dot set state set count to whatever the account is plus one and i can get rid of the set state call save it and then here same thing i can go ahead and i don't need these extra brackets because we've got more than that we can just go uh set count count minus one pretty much get rid of that and now look how much cleaner our code is and we can pretty much go ahead and get rid of this right but we also had a problem right we had the um the use effect so that was a that was an example of doing it without the the so that was a straight sort of change into that but let's go ahead and undo and let's go ahead and show you how you would have those complicated weird use effect conditions that we we've added in uh in here so you would have the first one was let's go ahead and show you we've got product.js so here so we had this one so when the component component loaded right so here we can say component did mount so after the component mounts uh they might have a console.log and then here we'll say the product component loaded okay um let's do it like this and what i'm going to do now is i'm actually going to import it from our product class instead okay so it's going to be the same product but we're importing it from product class instead now so it says count is not defined online two um count is not defined on line thirty two okay yeah so here again see another headache so you gotta say this dot state dot count right so we go back and now this is the you see it works it says the product component loaded right and if i try and change it everything's working in our classbased component now okay but just to prove to you that a is the one we can say the class product component loaded right the class product component okay so everything there is still the class uh one and then for example this one is actually more tricky now right so it's actually saying uh i think this one we would use component will receive props you see and this is another issue look how many deprecated life cycle methods they went through right so they realized that one wasn't good so they went ahead and marked it as unsafe and they deprecated it and then they went ahead and changed this one so they deprecated it and then they went ahead and changed something else so now this is a new lifecycle method did update right and i don't even know which one this takes so i think this maybe gives us what do they give you with component update is it props i don't think so um but the one i used to use for this was component did should component update so you can actually determine if a component that should update and again you see like the point i'm trying to show you here is already it's just confusing as to which one do i choose right like do i choose this one this one this one if we go ahead and do component did update i think it gives you something called props and you can go ahead say console.log props um but even here nope we've got props nope okay so component did update let's go ahead and just quickly check this component did update um you know being a developer means that you're a professional googler yep exactly you become a professional googler dude and you see like look even bloody documentation is more annoying like it really does get to a point where it gets annoying um but the one that we're interested in is props and um component update so here you get the previous props the previous state and then here this is exactly it yeah so this is the one we kind of need so see it gives you the previous props and then it's saying if and again this is okay so we're not actually checking this state here as in here we're checking against our own state but what i would actually say is um oh no sorry i know so you wouldn't do it here even for this for this use case you would actually have the code inside the render block you would actually go ahead and say if count so when it renders you would have it here so i mean you can have a component did update and you can pretty much go ahead and check against props and say like if if something changed with the props then change something else but again here in the render block now it should be the same thing so it should say count so this one again if this dot state dot com and you can see well firstly now look at this we've got two we've got two things so now like some some other things bugging out and it's being weird you see but it's working but now it's rendering out twice and that there's a reason why um but the point is is that like even digging into that like it just gets to a point where it's like why like as in why do we need to know like how to do it in this way all i would tell you is like if you need to do it this way firstly you're not gonna come across a situation like this to be honest ever yeah you're never going to run into that one but you will run into situations where you've got component demand and component will unmount for example right now imagine we had a component did mount and component will unmount so component will on mount oops and then let's go ahead and say like on the component did mount this is a good example actually we could say the the component the class product component loaded and let's just say the expensive db connection was made yeah so imagine it creates that connection in the beginning right so the expensive db connection was made the expensive each time they loaded the expensive one was made right and then imagine like it refreshed or something in it and it made another one but it didn't detach the old one it's going to cost you a lot of money okay so in the unmanned you would then say and obviously these are console logs they're not actually functional code but you would have the code here what's detaching anyways like do we use that in firebase or something yeah so you would use it in firebase as well yeah so in firebase is a way we would usually have it where i did it in one of the builds i don't do it in all the builds but in some of the builds i actually show you how to use unsubscribe when you do a fire fire store listener so when you use on snapshot there's something called unsubs unsubscribe um that you can use inside of a used a use effect which gives you a very nice detaching mechanism but here could you use that in the discord clone no no no so what because i know you talked about snapshots in that one yeah so for anyone who's watched it i'll quickly give you a quick brief update so imagine we had like a user effect here so use effect and then here imagine you've got like um so imagine you had a db oops so obviously it's going to freak out because they connect them we don't have a db in this code but we're going to say db.collection and then imagine you had a collection of users and then you had on snapshot so this is kind of the firebase code that we've all may have seen but if you've done any of the clones you would be familiar with what i'm writing right now or kind of then you'd have this and then you would kind of typically have some kind of mapping so you'd say something like set users if you had some user state to snapshot.map and then you say for every doc map the oh yeah uh victor this was to answer you did the id was it no no it was your brother brett wasn't it was brett your brother or no no angel angel okay angel so so i think is brett's still in here or no i think he's gone um okay i mean if he watches it back but the point is he asked earlier about how do we map against the id and the way we would do it is we do it here you say id doctor id then you do oh god yeah and we say if we want real time database we never want to unsubscribe right yeah so but the thing is right so you might have seen this in previous ones right so where i've done this and it maps to the firestore db but what you can actually do in it to make it super efficient and optimal to make sure that it never has an extra sort of because in some trust me in some apps when it's sort of rerendering a lot this may not get detached correctly right so i wouldn't just trust firebase to handle it so what this does is this this on snapshot gives you it gives you back a function called um uh unsubscribes what you is you say const unsubscribe oops unsubscribe equals this right and then what you do is in the cleanup function so the way you clean up after a use effect is you say return and then it does it like this and then you pretty much just say unsubscribe and now you have a perfectly clean up when i the moment i use cleanup because i used to make like socket connections using yes all of these things yeah and when i used it in normally like values where you have made the db collections uh then the problem is that it set up two listener at a time and that was a problem but when i did that in return it made only one list yes exactly and now imagine this right imagine you had so when you if anyone i'd recommend all of you guys and girls want to try and do um some kind of socket.io at some point and just try and mess around with it just to see how this stuff works behind the scenes um but the point is is that like uh if you don't add the sort of unsubscribe or detach right fire firebase is really cl that they've built it very well which means that if you don't add this chances are i think they do it but the point is that i've seen in before it didn't used to do it so it's only recently i think they've added that but um if you don't do it the point is that athaba just said that two attached instead of one right now imagine you have a really you imagine your app scales overnight and you've got as soon as you go on your your facebook 2.0 feed you've basically gone ahead and created this new sort of i don't know it's called like tinder or the the tinder that we built pretty much before but imagine you do that and it's got like 5 000 things now instead of rendering 5 000 listeners it's going to render 10 like 10 000 listeners you see and then that's and that's not only ten thousand this is it's kind of like um we call this big o notation in computer science where it's like if you have a problem which it seems small with with like two users right it can get incrementally like uh exponentially bigger time space complexity right yeah it can get exponentially bigger which means you might not see the problem at two users but even at 10 000 users that problem is huge right it's not like in in proportion it doesn't just double and get bigger it gets huge afterwards which becomes like a really really big problem to to deal with like an example is that if you have a chat listener and then if you don't use it in return so what it will do like whenever you get a message it will be displayed on the screen two times yeah just because you have that in use effect and that will just set up the listener two times exactly just because they said i faced a lot of times and it took me a lot of time to figure that out yeah and exactly and to be honest that's something which like if if anyone's watching this who has experienced any of those similar issues um then then that's a really big top tip because i remember i suffered the same thing with other and like my apps started to freeze and get slow and all sorts and i was like what's going on i don't know and and obviously it's harder to debug because if you don't know what you're looking for you don't know how to debug that um there is ways of actually using the inspector to go ahead and check what listeners are getting attached it's like finding a needle in the patch yeah like when you don't know the correct tools to go ahead and find out what's going on you have no idea you just see your app getting slow for for no reason what it seems like but uh i think everyone should just read the use effect documentation because before using use effect i used to just make the listeners and just like where you define state and everything and what that did like whenever the component rerendered it just make resistance listeners listener and like yes ten thousand listener and just crash the entire page exactly 100 and literally even look at this guys in the documentation they even talk about subscription like a subscribe and unsubscribe similar to as a as a that was saying it's like a listen like as in in socket.io you would have a listener which attaches on the component loading and then when it on when it unmounts and now for those of you who are kind of new to to react and kind of aren't sure what we're talking about when they we talk about rerendering or that sort of stuff imagine when i click the account button right so imagine when i go here and i click on where's my app localhost imagine when i click this button right assume every time i click it it rerenders this component right it rerenders it because i've changed something inside of it so i've changed a piece of state it does it in a very clever way it checks it against something called a virtual dom and it checks what changed what do i need to rerender but we're not going to go too much into that but i would recommend reading up on what the virtual dom is and how it compares because it is interesting how it does it and the main thing is that um every time we do this if you haven't coded your stuff correctly for example if you use effect had um if you don't include these empty brackets for example and you just did this your code's kind of on an infinite loop right so i'm going to show you guys another example now um imagine now we're going to import it again from product because i don't want to have that again i'm going to do this i'm going to bring this code back over here i'm going to get rid of this unsubscribe for now i'm going to show you guys if with a use effect right with the user i have a question yep uh so why do you use the snapshot uh the one you use the snapshot right uh this one you mean so why do i use this yeah so what's the use of the snapshot so this is firstly for for uh firestore so we haven't implemented anything here i was just sort of showing something from build but on snapshot as opposed to get in firebase terms on snapshot gives you a road time listener so i'd recommend checking out the builds and the main thing is is that the uh on snapchat will give you a realtime sort of like listener to the database which means that if anyone adds a document inside the collection that you're checking for example if any if any new user is added it would refire this code uh automatically so it would refire the code inside of here because it basically goes ahead takes imagine like a camera pointing at that point that that space in the database if anything changes gets added it gets deleted it takes a picture of it as a snapshot and gives you the code and it says rerun this right so every time it changes we pretty much go ahead and say sunny yep like you are calling a variable like a function in that variable so it's just uh oh yeah so so to to i know it can be confusing i see a point so this on snapshot actually returns something called it's a function so this yes so this returns a function and then you just invoke the function it's kind of i remember in the beginning when i was like how the hell do i unsubscribe i couldn't figure it out but the the way is that this actually returns a function just like a function returns like it can return a string an object or something like that this just returns a function which is uninvoked um and then here we just we call it when we want to unsubscribe and it will and this function that is created is linked to this listener so we do like a function not unsubscribe or we directly just call the unsubscribe you just cuz because the unsubscribe is getting uh it's a const it's a variable which gets assigned to this and this kind of uh i wish i had the um the uh the code up but let me go ahead and try and find amazon clone um it's so snapshot it's kind of like it's kind of like what snapshot actually means like it takes a picture yep gets extracts the data and then puts it into your code exactly yeah but sony what if we are using in production and we have like a million records and like they would be changing too fast and we will get snapshot at each and everything um so didn't cause any problems well so so you said uh if we go on yeah so you have to be okay so this is where architecture comes into play so yeah it's definitely a cheating imagine if you had like 5 000 things on the screen being rendered all with on snapshot yes you've got 5 000 listeners on your screen at once it because like it's a bad build isn't like you shouldn't have that instead what you should have maybe is a on snapshot which feeds simply uh information into an array right that's pretty easy right to do that right so it's not very intensive even if it's got like a thousand records in the array it really doesn't matter what i would say then so imagine okay so i'm gonna put that into practice to show you actually so let's go ahead and say we had on snapshot and then let's just say we had um i'm going to make this a bit more simpler so this is getting a bit uh [ __ ] but we'll go ahead and do it let's go ahead and say map this to set the set users and imagine we had a data set called users right so let's go ahead and say users and let's just say your app went exploded overnight and your users are being rendered on the screen right so you've got like a million users tomorrow right and this by default was an empty array and imagine like your users filled up and and on your return block so over here you had some kind of loop which was like users.map and then it was rendering out a user right so every for every user it was going ahead and saying something like h2 user right now think of it think about what's happening here yes you might be thinking right you have to okay so say it's kind of like the word this carefully so you you see where the problem lies is that okay so if you've got one component where even if there was a million records getting mapped here right not a million let's just be let's just say like 500 if you've got a million things on the page it's never a good idea right but if you've got like a hundred things being a hundred users being fed into an array all reacts doing is is rendering out the list right but the one the difference which makes this optimal against not being optimal is for example including keys right if you've got huge lists right you should always include a key because a key imagine you've got a huge huge list being rendered on the screen um a key is basically just remember what i said so react is something where it carefully checks what it needs to rerender right now imagine you've got a list of a thousand elements on a page and it renders that the first time and yes sure it's going to take a little bit longer to do a thousand elements but imagine every single one has a unique key against it right now imagine 500 users get added or they kind of swarm in to your app if you don't have a key it's going to rerender 1500 users in that list it's going to rerender the entire list right if you have keys it only needs to rerender 500 because it now it knew that hang on the only thing that changed are 500 new records with these unique keys got added so i only need to now slot those in super clever how it works it's really really clever how it works but the point is that if you don't add keys in it's going to add it's 1500 renders against 500 extra renders right so in this case for a user don't ever use the index as well i know like some people sometimes do this they do map and then they kind of like oh i need a key i'll use i right this is a bad this is a bad habit the reason being is because this is not a unique value right when it rerenders i is going to change which means i is kind of messed up and people do use it as we can use uuid to get random things and just yeah you can use uuid which is good uh or if you're pulling it from somewhere like firebase rather than just pulling the database the data what i would say is is map it to an object like this and pretty much go ahead and do this i have data being mapped to the data and then have the id being mapped to the id field inside of firebase so it will get the document id and then here when you get the user you pretty much detach it and you say id data it's a bit confusing because we're not actually we haven't got context here but the point is that the id would be the id in the database right that really fixed my problem with the twitter clone because yeah twitter clone you pass us as a key prop you pass the text yeah and you did explain briefly how to do it with the doc id yeah and i was trying to play with it and i couldn't figure it out but now you're explaining it here yeah so i think i'm going to go back and fix it yeah no i'm really glad it helped you out dude because it's a very good um thing to kind of like it and to be honest the first time we see it it's always like you know i don't really understand that fully in this then somebody will say something or you'll see a tutorial you'll do like an exercise they'll be like oh [ __ ] wait kind of clicked a little bit and then you go back kind of play with it and then it'll click and that's that's that's the whole process in it like again and again and again you know like that's where it's going to come into play um but we talked about uh hooks and we talked about sort of the difference between classbased and functional and the kind of building back and forth between them and it's a very important skill to have right that that skill of being able to take a classbased component change it to functional and just being able to read code that is written in both functional and class based right we know now that a class functional components are the ones that we want to kind of drive towards it's where the sort of like the whole sort of um industry is going towards for many reasons that we explained about and now kind of touching base back on the main concepts what i would say is is in terms of the basics of react right all of these elements like if if i asked you to explain what jsx is right now like oh like i mean the the real answer you need to really say is this kind of it's a mush between like html and javascript it's basically html which allows you to have javascript in line right that's all it basically is but just like understanding like okay all right so it like that's what jsx is you know like in the beginning when you start off with react it can kind of kind of like go a bit over the head and kind of be like i don't know what that is um and then it even shows you examples here just seeing how it works and how you can run it and there are differences in jsx for example you can't have the if keyword in jsx right so if you wanted to have yeah you can't fit inside of jsx so for example here if i wanted to say if you would have that optional ternary thing right exactly but some people might be like if count is greater than two then do this and i'll be like oh my god my code's not working right so here exactly yeah and i think a lot of people do it right here you could either have this so you mean if the count is greater than two then render this out or you can have if the current is greater than two render out h2 is greater than two so we can just say it's more than two uh else h2 it's less than two right so you could do that right and obviously it's freaking out for some weird reason did you mean okay yeah it's just being some annoying thing but it's only what i think that we should have a call on firebase that people just get it yeah like snapshot 10 hours i think that we have we actually dropped a um we dropped a really good video on it's a snippet video on on snapshot so it's on youtube right now and we yeah so uh srikanth knows uh it's literally one that we dropped we snipped a bit out when me and carson were talking uh because what we do is whenever we drop like a golden nugget like we kind of try and capture those moments and sort of like shoot it as its own video so it's kind of like a value bomb for you um so we there is a video on snapshot right now um so we've got that guys and then we've talked about like i think what yep um sorry where are all these videos like this snapshot videos uh it's on youtube on youtube yeah it's on youtube okay thank you so i think that was my internet actually i'm not sure if i cut off on youtube but the rendering elements um so i would recommend going here checking out this components and props that we talked about the difference like look function and classbased components it will show you different examples it will show you like uh and honestly it's actually like it's the only documentation i don't mind reading right because in react i actually don't mind reading their their sort of um their documentation and also it's a very good question balor ganesh actually just said on youtube he says uh what is the difference in naming file extensions project project.js against product.js against product.jsx but he said project.jsx um it's a good question so if you're manually doing this or if you enter a company they might not be able they might have dot jsx right but if you use create react app under the hood they do some clever stuff which means that you don't have to write jsx but these files don't get confused they are jsx files so you see when i change the dot jsx it changes to react the logo right so they are jsx but because we used we use create react app they have like all of this sort of special compiling stuff that happens that goes on before we sort of like it runs and that's where we do it and also guys if you if you're considering don't ever run npm run eject it's a oneway thing once you eject your app from create react app you can't undo it so uh don't do that hey um sonny can you hear me now yeah yeah so i think what atharva was trying to say was maybe like we could have a coaching call on firebase like we could make or something like we can make a big firebase uh project using like all of the possibilities of firebase like authentication firestore and stuff like that yeah for sure i mean the best way is that like yeah i mean i'm always down for that always down for that uh what i would say is if you if for anyone who hasn't i mean i thought has definitely done a lot of the builds um but but he's literally wrote medium articles in the middle so he's definitely done the builds uh but what i would say is and they're awesome guys if you haven't checked them out really really go i recommend go check out them because it's literally the dude the the extent that you broke it down is is like seriously impressive like i was amazed when i read it i was reading through it and i was like oh my god like and the thing that blows my mind is that i remember coding that from scratch as in in the beginning and the fact you put it all into words was like my as i was reading i was like this is exactly what i was thinking as i did it like um so so vlog was instantly long yeah it was long like 21 minutes no but the build itself took like three days though yeah it took like three days uh yeah like and then they all said like technical bug issues i made the solution for the problems i faced like sometimes i had to get some core like from some part of the video it would take me a long time to just get some part of the video from the for a long video yeah is this it's true if i have a blog which has everything like like for how do i do stuff like it would be so good yeah do you honestly uh amazing amazing stuff like i went i remember when you sent me the link i was i was blown away when i when i saw that that was a really really impressive that you did that so definitely go ahead and check that out guys because it will help you guys out in terms of if you haven't done that build yet go ahead and do that alongside the sort of video and check it out because uh it isn't pretty impressive like oh cool um yeah so uh state and life cycle basically okay so going back on to the points right so we have events and stuff like that again even events and stuff like that for like here it says for example the html for this is slightly different in react and we write this right you see it's small differences like as in this is if you've come from html css javascript you'll be like yeah this is how i write my code right and then you come over to react you're like oh my god wait a minute wait what's what's going on here and then you kind of like you you see it differently whereas it gives you clear examples of how it was done before and how you would now do it right so this is something i recommend that everyone goes ahead and mask it doesn't matter if you coded react doesn't matter if you've done tutorials and builds go through this main concept and um and also priyanka and i thought maybe go ahead and drop that the link to the blog inside of the the zoom chat and also on youtube because they're i think priyanka is doing it on youtube branches doing it on youtube and maybe if you could drop in the zoom chat um conditional rendering this is where we talked about the sort of um i'll just drop the clever programmer link right on medium link it has three blogs awesome stuff dude um there's also on the clever programmer blog there's also uh blogs we posted it recently on react context api and redux if you don't understand both of them amazing dude it blows my mind like oh my god there's stuff happening though i have no idea about our times and i'm just like oh yeah okay we've got a team over here doing this now it's like things are happening so fast that like uh me and kazi just jump on calls now and we're like i'm like yo did you know we're doing this now he's like oh my god are we doing that and he's like yeah we're doing this one for this time holy [ __ ] we're doing that and uh it's it's a fun thing that to watch everything grow but it's awesome like um we just we we literally go for walks so i would literally grab my my headphones and say and cause he would go for a walk in l.a i'd go for a walk in london and we'd just talk for like an hour and sort of like align and then crack on with stuff it's awesome to see you but like the team is growing it's amazing stuff like honestly i really really love the community is that um cp is planning on releasing a blog almost every single day yeah on some really great content about like clones yeah yeah exactly so cannot give a lot of details cannot give a lot of details about it but there is there is a lot yeah right now exactly so exciting stuff yeah and in terms of like you guys wanting like everyone watching right now in terms of like learning and trying to digest and sort of going into like building your career as a react developer literally take every single opportunity that you can get to go ahead and build whether it be like well done firstly every single one of you for being on the call right now and watching and and kind of staying here right now because like i'm telling you this is going to be the difference and like the the work you're putting in now i'm telling you will transform your entire life and it will put you in a position where like it it it's not been possible to be able to like work in as react developers have such a nice way of working i'm telling you like you can work remote wherever you are in the world like my last fulltime job was fully remote like i literally used to just wake up and answer a call in the morning and and as i'm brushing my teeth i'd be on another cool and like like you have a very nice you can have a very nice setup with your work you know like um and you can travel you can do whatever you need to do and you can still get paid and do what you need to do so there's it's awesome to do that um but yeah going back to the sort of uh react basic stuff so main concepts guys i want you guys to all pretty much like master this section right like as in go through it and once you've gone through it go through it again like just read through it because every time you read through it there's gonna be another bit that you're gonna be like oh okay like that's solid because this is your foundation once you have this foundation solid everything else will be like secondary and it will kind of stack on very easily right now once you're sort of done with that advanced guides you can see there's tons of things here now even all of this like some of this stuff i mean i've used most of it but there's there's always some areas for example portals i've used portals once and there's and then there's a lot of cases where i don't use well i haven't used a lot of this but you guys can go ahead and take this to that next level um but what i would say is yeah with that done and also once you once you're sort of done as well with that there is there's a whole other section of testing right testing is a whole other area you can have testing i think it would actually be pretty cool to move into some kind of tdd uh tdd which is test driven development where you basically write your test first you write your test to fail i personally am not a fan i mean i've worked in places where it's very much tdd is everything you have to write a test first and then you build the feature until it satisfies the test um i just i mean i don't know i'm not a fan i'm not going to start a war though because we're on youtube right now and this is going to get everyone sort of fighting about tdd versus other stars of development um but yeah so this is i was thinking for one coaching call could you go like you know how you always delete like app.test.js yeah and all those other things do you think like you could go over that one time and like explain like for sure what it actually is yeah for sure i mean the main thing is is honestly truth be told it's something which i haven't touched on in a while i mean but react testing has improved a lot now uh and then it's actually something which is extremely valuable as well so it's a really good thing you pointed that out um i will say as a goal for myself to go ahead and get more knowledge in that area and eventually we'll have like the end goal guys just so that you guys know is that the the modules are going to have everything from a to z is he right there the coaching calls are going to be your way of pretty much skipping the way right you can pretty much go ahead and just kind of jump in and what i'll say is never wait for that to come around just to be like oh i'm gonna wait until you know i get it because truth be told like these are just accelerating your growth all of these extra things are accelerating your growth if you do every single one of those clones and you go through the coaching course and you pick up all the golden points off each one and you sort of put in practice you teach you coach take the points that could like uh pre on you that that sort of uh corey that patch that like everyone else that we spoke about today like take all those points and sort of use that in your development forward i'm telling you there is no way you can fail like it's going to be something which is going to drastically change your improvement in your progression from being like a from going from a junior developer to senior developer and what could be like and this is one thing i'll tell you is being in an environment and community like this is going to accelerate you so fast it's ridiculous like to the point where you'll be accelerating to a point where i remember i was around i was a junior developer and just by surrounding myself with different people i spoke to a senior developer and i asked him i remember when i was first starting out work i said how long will it take until i can get paid this amount and i remember he was like three years i'd say about three you know three and a half years and i in about a year i was getting that so so the point is that you don't need to do that you don't need to don't don't always think that the senior developers know what they're talking about and even me don't even think that like i'm i know the answer to everything always be proactive in knowing and taking an extra initiative to be ahead of the curve to keep pushing your knowledge and remember if the way to easily check if you're doing it is do you feel uncomfortable right now as in like was this session a bit kind of intense if it's yes good you're in the right place if it's no then just push yourself the extra step further and before we wrap up i just want to do one final thing and tell each and every one of you if you're not already signed up go ahead and go to react status and sign up to this newsletter really awesome newsletter and it's pretty much how i keep in it's honestly how i keep up to date with react and what's going on um so every single thing might be useful really really useful honestly really useful and look here like create react.verse next.js versus gatsby so honestly when i'm eating food and stuff i just kind of flick through my emails and i read this stuff and this is how i found out about hooks when they first came out this is how i kept up to date with all of that stuff another one is javascript status i think it is status newsletter and it's the same company i believe uh so javascript weekly yeah so you see same company but this is all javascript is supposed to react right so this is another one that i would recommend you guys go ahead and sign up to priyanshi also said like in the chat that there's apparently a node weekly or something oh nice node.js weekly let's go ahead and check that one node.js weekly um oh nice yeah nice dude i didn't know that okay i'm going to sign up to that right now boom subscribed oh i'm already subscribed there you go you know even i forgot there's proof in the pudding guys i mean but there you go like i mean my inbox just gets spammed now so you know you get that might even come to your spam like yeah i get people watching from youtube who message me saying hey i'm stuck on this bill i'm like dude don't email me man you know even david sent out emails to us and it landed into my spam folder somewhere yeah it gets buried and all sorts um but yeah that's awesome another one we've got there um but yeah guys with that said let's go ahead and we'll take maybe just a few questions and then we're going to wrap up for today's session because it has been quite a long call but uh it's been an amazing call so wrapping up uh let's do maybe five minutes max of of questions and then what what honey i had a quick question yeah so uh i mean this is kind of like uh did you get time to like try and figure out like a time that we could meet yeah so let's actually go uh message me again honestly it takes it i'm sorry dude it takes like a lot of patience sometimes with me uh it can get especially lately because we're pushing the react basics we're pushing a bunch of stuff behind the scenes which is really like some stuff we don't really can't really talk about but there is so much stuff that we're like really trying to move forward in one go so uh getting on one to one calls it's been a bit tougher than usual so i'm trying to make my way through the list uh right now my slack is red i have like a list i have like that entire sidebar is red at the moment so i'm gonna every morning i try and go through it and then the next morning it's red again so i'm like okay good question yep so um uh i was looking at uh you know i i i got laid off and i started with this new um trying to get up and running with react okay so if i'm trying to redo my resume i don't want to so if i want to start at react it will be basically starting from uh ground zero right with no like in terms of in terms of how what should i put on my resume i don't want to you know because none of the other skills that i have um would directly come into play uh if i'm looking for like a react full stack see i disagree dude i really so let's go through your previous your previous things right so uh what were your previous skills that you you're disregarding well i did like um almost like 12 15 years of uh you know i did some programming in pearl cgi this was in 2001 i did some uh some java x xsl xml yup type of stuff in 2001 then i moved over to vb6 vba yeah asp asp.net sql and the most recent was sql server you know hardcore sql server maintenance uh writing stored procedures fine tuning queries and all that stuff yeah joe i would i'd hi javascript yeah javascript but now coming to this react i don't see the like uh you know where they both meet that's why every time i keep asking you about are you going to do a a live call on on the back end stuff because i want to see where the mirroring happens so i can take this and try tied to the back end type of stuff so remember a lot of the thing things like man stack builds and stuff like that is the back end like is in a lot of that is back end it's just we use a lot of like uh yo what you would maybe be used to is sql databases uh a lot of the stuff that we do is nosql but but don't get me wrong like i said i've worked in two companies where it was sql databases um so you can have react with sql it's definitely gonna have that can happen um but what i would say in that sense is is joe your experience that you listed out there is enough for me to say to you confidently that like i would want to bring this guy on the team because he's got tons of experience in the coding space like it doesn't remember this is the one thing you need to kind of detach from it's not about the language you're coding in it's about your ability to break down problems and solve them right it doesn't matter what language all languages is just a way of communicating with the computer right it really doesn't matter what language you write in it's like two humans speaking to each other like if you get good enough it really doesn't matter if you speak the same language your body your body language your posture if somebody's speaking french but they're inspiring millions of people you can pretty much tell that that person is a good speaker right like as in uh and and what i would say to you is you can be a good art architect yeah exactly a lot of it's architecture as well so being exposed to how like how it they did things in java is going to be transferable to what you're doing now what i would say joe is my main sort of advice for you is is do things like the clones because it's going to give you tangible sort of like things and that's that's fine that's my thing on the agenda so i did the amazon clone yeah the amazon clone as many clones as you can do because the ones which are constantly actually landing jobs for some reason these ones are killing it spotify clone is killing it uh the amazon clone has landed jobs for people um there was another one the hulu clone landed a job someone um honestly that it blows my mind like it's in i think honestly i think at least what what amazon now you think i should do the spotify and then what's your order preference joe i say the the truth is do as many as you possibly can for the pattern recognition alone like as in just doing a build after build after build would literally like dial you in so hard and that you're you'll really get used to javascript you'll really get used to uh how react works on a fundamental level you'll get used to sort of how apps piece together and because i would recommend doing different kinds of builds so amazon you've done the full build right the one with the payments yeah the full stack with the stripe and everything okay so awesome coming on to the front end part with react and i prefer you to start with the backend part first like with the node.js so you will understand it better yeah and then the react.js is you already doing so you will understand the whole concept of frontend and backend and you have the good experience in database so you will be you can be a solution architect for an application in any of the company you can go with that as a solution architecture because you know the whole work around the area of that of the front end the back end and the database so all you have the knowledge exactly what i would say is just start because if you keep thinking on like how should i start like it's less likely to even work so i have to agree with yeah just think that what you want to make just think about what inspires you like for me like the facebook loan is the one i want to make so i'll just go and go and start with that like yeah because joe you're crushing it with like a lot of aspects of cp like is in the you're jumping on calls helping debugging and stuff like that main thing is is dude just start with the other builds as well like because the more you'll get under your belt you'll answer so many of your own questions without realizing you know and and a lot of them have frontend backend functionality uh some things like the netflix build was like we used apis in that but we didn't use like a back end as such we kind of just we didn't we did like communication with apis which is somewhat of a of that area but it's a lot of it was front end um but then some builds like um facebook and things like that and even the mer stack builds the man stack builds i'd recommend might be better for you because um you're going to get a a more natural grasp to what you're used to in terms of like a backend experience and then a frontend experience um whereas a lot of the other builds that i've done like discord even was a lot more sort of they're a lot more sort of cuttingedge front end front line which is why you don't actually fill the back end as much because it's using lightweight things like firebase to power it using things like that to go ahead and do it so when you put this thing in the resume just bullet it as as mock right this is not because this is not live stuff yeah right mock bills of amazon clones honestly i wouldn't but this is the thing like even a resume like i honestly like is in the resume yeah yeah i have like a you you've you've got a bunch of but i'll just say check me out at joe joe.diaz.com or something like that right and then like as in get them to to you that site like that's true that should be your primary focus not having it listed out honestly resumes the power of a resume is like really honestly like not as strong as it used to be like uh yeah exactly yeah are you kind of like um you know i i know how to make this clone stuff you want to see them come here show them yeah and don't be like put him alive because then you can also have some problems some issues with copyright and stuff otherwise changing the name and stuff so you can be like hey i know how to make the amazon clone stuff and strike payment solution etc etc and you're like you want to see how i've done it okay come contact me or i don't know hop in a meeting or look at my site then contact me and i show you i'll maybe give you give him the file that we made so they got added some proof well literally just have a video like have a video on your site like a little gift maybe that plays through and it kind of scans through your app or something and then like and be like oh don't believe me just click this button and then they click it and they're like oh [ __ ] i'm inside the app like i can play with it and they can kind of look at it they can resize it and then that is telling them so many things in one goes when they could they'll see like a signin feature which says that you know how to do authentication they'll try and resize it and they'll be like oh [ __ ] it's responsive they'll try and like um they'll try and add products and they'll be like oh so this is react but he's actually done like react context api or redux or something to get the basket functionality going and and that in itself tells them so much more than having like the one thing i hate is is having and it was part of the challenge because uh it's like a it's a good thing to have rather than having nothing but you know when people have a resume or like on their website and it's like skill level react and it's like a little bar that kind of goes across html bar across css barcodes i've seen that in many resumes i don't know yeah because it's like i see that and i'm like well what does that mean what does the bar mean yeah like yo cause because somebody's bar could be different to your kind of ranking of what the what the bar would you say it doesn't really mean anything like you could list out like 500 skills and be like i'm a i'm an expert but the reality is is that one website which shows everything and even your portfolio looking amazing if you had a portfolio saying hey i'm joe i code and react this website was built and react it was deployed on firebase that's kind of like oh [ __ ] okay like that's kind of like a straight away like a like a punch in the face it's like okay like i i'm this is proof in the pudding like um and then here's some companies i worked with or like here's here's some proof well like here's here's a build that i did and trust me the problem is that landing your first job the the tough part is is you're trying to you're trying to convince somebody to give you a job and then they're going to say to you what experience do you have and and that you typically get caught at that point because you're like oh it's my first job and then you kind of get stuck so the builds are ways of overcoming it because the build you could be like yeah so it's my it's not my first position but what i did is i actually went ahead and took the initiative i built all these clones and i'd be like oh [ __ ] okay so you can code we know you can code that's it like and then you kind of discuss and you build the trust from that yeah okay also another thing is uh work on clones that you have like a passion for that you want to do yeah not something like oh you don't because if you run into a bug or anything then you have the motivation to like drive through it and solve it exactly yeah one hundred percent a quick notice um from fast.io i don't know how many how many of you use as fast.io but um it says that free accounts will no longer be available and will only be working until december okay so after december they're just going to be focusing on a free trial instead of a full trial experience of asset io so that's even more reason guys to go ahead and then firebase [Laughter] yeah um at some point are we going to see some content around um headless cms so headless cms so i've actually worked with somebody uh who built a really cool headless cms we can definitely touch on it and do that yeah there's always like room for for doing something new um a lot of these sessions so so just to fill you in victor like a lot of the sessions are directed by you guys so there was some interesting redux which meant that pretty much we naturally went towards redux taught a bunch of redux stuff um which is why we've done loads of sessions on redux then there was sessions about um there was more sessions about like uh design work and responsive design so we did some responsive stuff so it's more it's like a very much driven around demand and what you know that what people want to kind of go into but for sure like if if like cms is something so a lot of people have asked about admin panels and stuff like that i've seen some people ask about that before so we could maybe go into cms or that sort of stuff the problem is is that the only reason why i'm hesitant with cms is because cms is a the the value that it would bring you in terms of landing the first job and things like that it was it's more of like if you're already in a sort of intermediate developer then learning cms adds to your stack as opposed to the fundamentals of really you should dial in on the fundamentals first and all that stuff and then kind of add the cms to your arsenal of weapons otherwise building cms without the fundamentals can kind of get a bit kind of you know like a little bit kind of like oh what's going on here like but it's definitely something which it's good that you're questioning it now because that's a really good thing to to get into you know i got my toes in there and and i i completely failed because i didn't have the the fundamentals of react down dude but that's that's the good thing that's a good step because like think of a kid like a kid falls over they get back up and eventually they fall over again and eventually they're what they're running you know like so so keep doing the same [ __ ] like as in if you it's good if you're failing at something because you're trying something new and you're putting yourself out there you know so so awesome i'll just get a second for cms because i get a lot of clients that want to they want the foundation down but then they also want us or want to be able to update things on their own yep oh that's a good point that's a good point so remember earlier i can't remember who asked the exact question but it was a case of uh uh a russian website i think it was max asked it earlier there's a website that you need to build and uh so remember i talked about the escape right so once you deliver the work you don't want to be tied to the company forever right you need to either build it in in a cms fashion like gabriel said like victor said like um to build that sort of implementation in and kind of uh have it so that they can then manage everything or you need to kind of actually ask yourself like okay i can either go ahead and try and build everything or i can kind of get more skilled at something like shopify or something like you know like a wordpress plus a plugin and pretty much that's going to allow me to knock out freelancing jobs boom boom boom and get them done allowing me to offload the client and actually make more money that way so it really depends on your goal and your what you're trying to work towards but i've seen people crush it with spotify and wordpress like combinations and stuff like that um if if your if your angle is towards freelance i'm not a huge fan of freelancing anymore because i don't like having several i mean i like to be my own kind of boss with my work like i don't like to kind of but whereas think of it as when you're when you're a freelancer you've got like five bosses if you have five jobs right so you have to reply to five people you have to they're really on your case at times it can get a bit kind of hectic and stuff and if you're not good with time management that can really get intense so um and like gabriel said like once once you've you've delivered the work you kind of want to have to be you want to be able to deliver it like an elegantly step away like you don't want to be like oh here's the work and run for the hills like your reputation can't so you want to keep a good vibe around a similar case of that i did once it was a company yeah i went there to buy a phone right and then they were they asked me hey sam can you um come around come around the deck and they showed me a program they have to like gesture all of the all the stocks they have and a lot of stuff right because i had to communicate with uh with a company which was far away from there yeah but from malta to japan i think i have no idea anyway they said can you put something similar to that and i said i don't know to be honest i don't i have no idea because they wanted an admin panel and then they forgot the application where they just can see the stuff but actually input stuff you had to have an admin panel right so i tried building something similar and i don't know they liked it so i gave them and then i was so afraid because it was one of my first jobs yeah i did it for free and i literally went in the shop i said here you go you have the project right away dude i don't blame you we've all been there been there literally right away it was my father waiting for me yeah outside the shop he just he saw me running he's like the hell just happened inside there it's okay i just run away oh my god yeah guys you gotta be careful with that because now you your profile is on upwork and stuff yeah hey but sonny why would you why i mean if the client is if you feel that the client needs help and uh you know ongoing basis you can still have a revenue stream coming in saying hey i will charge you x amount of maintaining for a year you know you go touch it two times i know yeah and you have a revenue stream for yourself then you just look at it for a couple of times a year and you got that money coming in yeah the thing is that i was gonna do that definitely that was my my very first thing and i said i don't want to be tied to that i'll be like okay making my first thing and i'm giving it to them now let's say after two months then something breaks and they call me to fix it what if i don't know how to fix it and i got me scared or be like what if i have other projects like i i want to make some other websites so i want to make um my own application stuff like that i can't because i thought i was thinking well i'm tied to them so i'm kind of working for them and they're my boss yeah so i go i was i was getting this frightened over there yeah no dude i mean like look it happens uh the main like like joe said there's actually a there is a a benefit to you to then keeping them on board with that start like i said afterwards to do maintenance and things like that because you can pretty much go ahead and charge the client like a maintenance fee which a lot of people do right but what i would say is for now i just changed i just switched totally now you just switch the account name switch the address just to change the address you know flew to a different fluted motor what i would say is like that like if you're going to go that approach um not not the running approach is in there with the maintenance but if you're going to go down that route i would say is you can definitely go ahead and open something like a software house so remember your network is your net worth for many reasons right not one for landing clients but two for also for for for developers who you can leverage as friends and sort of like potential partners right now imagine you get you're doing well with freelancing you're networking with other people who are doing well with freelancing there's kind of a business opportunity that kind of pops up right you have a software house kind of that comes into play now you can pretty much go to a higher level where you don't have to code as much but you become an architect right so you can actually go ahead and like bring in sort of developers in the beginning you're going to be doing the work right you're going to be doing a lot of the work but if you get really kind of a dialed in system of like being able to bring on developers them adhere to sort of your coding standards so your your projects are getting built you're sort of everything's kind of you know maintained a good standard because that's everything is your standard your reputation is going to be everything if you break i see gabriel's like yeah i agree with that because like two because remember like contractors can come in trash everything and then kind of leave and it can leave [ __ ] in like a mess and your reputation goes down to like really really bad like after that but it's going to be a case of you can go ahead and do that and i have friends who have done that uh and that and jacob i don't know if you guys know who jacob is he used to be on the channel uh but we keep in touch with jacob a lot he done profit with python for a long time jacob's an awesome guy and he's doing quite he's doing quite good and upwork i i watched his video today yeah so he was doing a demo on how to use aws marketplace api yeah so exactly yeah so he's uh he's doing his own software house right now with a friend so it just goes to show you like all you need is like he's he just got one other person and he pretty much when i went ahead and you know like started that as his journey and pretty much now working for himself on his own hours it's completely possible completely feasible and uh it's something which you guys can definitely do with that said guys that was an awesome call i hope you guys found value in that uh there was a i think it was jampacked and i'm really glad because i saw this was yeah this was actually quite this is a huge course yeah it's a four hour call um yeah this was insane yeah really really big loads of value bombs in this one and uh even on youtube and and we still have 176 people and we actually peaked at around three 400 people which is amazing so everyone on youtube smash the thumbs up button if you enjoyed it and you're still watching thank you so much for watching how many red bulls did you go through oh dude i just got my water that's it this is me am i good for her like i finished one glass and then uh that's it i got the other one there yeah we got 400 likes on youtube that's it awesome stuff guys into youtube myself and just hit the like button even i'm on here nice gabriel thank you dude with that said guys uh i will see you all next week and over on youtube we'll see you in the next build um i think everybody aiming for every single day so we're going to keep it going and yeah guys i hope you enjoyed that and i'll see you in the next score yes um yeah will we have a clone of clever programmer oh dude i mean let's wait until we hit a million subs let's wait until hit a million subs and then we'll do that okay guys i was thinking about that how to get pwg for free exactly awesome guys didn't you basically with this school i tried diverging um the course i'm doing so i went to the headmaster of the school and i told him if i could make something similar he doesn't it actually doesn't know this discourse so basically what i ended up doing is that i am a student of the school and i'm currently in the fourth grade and now i'm actually even a teacher on that school which teaches to other teachers i'm building um a similar thing of kajabi yeah just for school so only my school would be using it nice which is my mind blowing totally dope man that's insane dude hopefully i'm gonna do it yeah document your journey and let everyone know and see you and you're on socials and stuff yeah last time i was talking with joe and he said i mean we agreed on on the fact that maybe i should be documenting this stuff yeah 100 dude document it and and let us know how it goes guys i will see you all next week and uh keep working hard and remember reach out and slack if you have questions i'm going to try my best to get through all those messages okay and uh yeah see you guys next week bye everyone bye everyone everyone over on youtube thank you so much for watching guys and it was an insane turnout we still have 150 people watching so everyone who is there right now thank you and uh loads of people asking what this song is lately so i'll go ahead and find that and let you guys know in the next video but yeah we're going to be keeping the bills coming for you guys so make sure you stay tuned and as always guys we will see you in the next video peace you