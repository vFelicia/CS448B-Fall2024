hey guys what is up this is kazy from clever program.com and you are watching codeacademy Python tutorial 17 all right cool get excited because just to show you where we're at you know I'm sure you already know and you're just waiting for this part but we're at 50 about 50 something perc and uh we are currently at battleship now just a little bit of an aside something really well not really but a little sad happened I so I recorded this video that's why we're at 36% of Battleship I recorded that video um it was about 30 minutes long however it got deleted so we're just going to go through it again all right but I'm just going to focus on making it even better this time so you guys are going to get the best of everything so just ignore the 36% imagine that it's at 0% so we're going to go to part one you see all those tick marks ignore those we're going to start from part one okay welcome to Battleship because that's where you guys are and I care more about that rather than where I'm at okay so in this project we will build a game called Battleship how does this game work well this game works very simply um it's basically like a 5x5 grid and you got to hide your ship somewhere and then other people try to shoot at it and if they guess correct they get to hit and sync your ship okay just in case you've never played it so let me show you an example of it on uh the board so I've already copied this from my previous video and um we're going to demonstrate a um a board a 5x5 board using a python list within lists okay so this is a big list uh that contains these five rows here okay so this is representing kind of like a 5x5 how this list looks in reality is like this just so you guys are not confused um it's actually like this okay there are no spaces anywhere it's like you can even assign it to a variable but I want to make it look nice and look in that way cuz it's hard to read otherwise what's going on okay for human beings not for computers for computers it's still the same thing um and effectively let's say I hid my ship at uh Row three right this is let's say row two CU this is row zero and let's say this is Row one and this is row two and this is column two this is column 0 column one and column two so let's say I hid my ship in row two column 2 you would go here and let's say you took a guess and you guessed that I had my ship here and you hit that that spot you probably have 10 guesses or something like that oh actually it says right here the player will have 10 guesses to try to sync the ship and if you guess that spot then you get to hit my ship and sync it but I'm not going to let you do that I'm going to try to hide my ship really well I'm okay at this game not really I suck okay so to build this game we will use our knowledge of lists right here I'm reading conditionals and functions in Python basically what they're showing you is hey with what we've learned so far we're going to use that to create something more powerful something even something really good so that's why we're working on a project we're effectively taking the knowledge that we have and putting it to some use uh a practical thing so to speak okay um all right so I'm going to save and submit and start next lesson okay getting our feet wet the first thing we need to do is to set up the game board so is initially it was like that the only reason you saw it completed was cuz I've completed it earlier so what I'm going to do is hit reset code and simply it says create a variable board and set it to equal an empty list so what I alluded to earlier um in this part right here welcome to Battleship so right before this what I alluded to was a board right that has 5x5 so that's effectively what we're going to be doing so board but we started off with an empty list start next lesson now it says make a list what is this part over here right what is this showing me well all this does is it puts together a list with just let's say you have one o well it'll just make a list with five O's okay you see that right here makes a list with five O's so what we want is we want to create a board if we want to create a grid we need this to to happen five times so we need to create five different lists with O's in them and um and store that in a list of lists okay so for example it should kind of look like this but we need all of this to be one thing and tied together so we need to put all of this in just one list okay effectively we're going to see how we do that um they're going to show us so I'm going to say save and okay so here create a 5x5 grid um what they're doing here is just that so let's paste this code let's run it and let's do print board okay so what's going on here oh I'm sorry we have to reset this code but here's how I went about it okay I'm going to do this live for and I don't care about this variable I'm not going to use it so I'm just going to name it score you can name it I you can name it whatever you want but if I never if there's ever a time I'm not using the looping variable I write an underscore and that's how you're supposed to do it according to python conventions uh or the pep 8 that's something you guys are going to learn about later uh there's a whole thing on styling your code so right now just focus on writing code but later you want to focus on how to write clean code that other people can read and it's easy to understand even for yourself when you come back later rather than a bunch of junk for example uh sure you can say a is equal to 5 and X is equal to five on the same line but that's annoying to read and no pythonista this and they'll yell at you for it so much better is just that it's easier to read okay so I'm going to do for blank in range and I'm going to do range of five so I want this Loop to run five times right range 0 to 5 will effectively create that list up to five but not including five this is the reason why we'll Loop through five times this underscore is going to be zero the first time then one then two then three then four you get the idea but we're not going to be using that underscore that's why I named it underscore and I'm going to say print o Time 5 okay well what is this going to do you're going to see I'm sorry actually yep so you see that right there it just printed it out and making it o every time right so let's go back to how the code was and all I did was just that except I added an append to it all right so all they want us to do is use range to Loop okay so I'm I'm going to use range to loop from 0 to 5 and I'll simply say that to board right append that so now we're going to have a list containing five lists inside of it okay because remember this creates a list so we're going to keep going through the loop and creating lists inside of that and you effectively have that board that we were talking about how did this work well UND score was Zero the first time and then we came down here not like we need this zero at all and we just simply appended this list right there to the board like that then we looped again and underscore was one next time and then we appended this list right over here to the board then we Loop through it again and then we simply appended right this part evaluates to this part evaluates to this and we simply appended that to the board and effectively what ends up happening what ends up happening at the end of it is that board is equal to let me just make it clear oops okay ultimately board is equal to this thing that we were talking about earlier and this just showed us how to create a 5x5 board like that okay so this thing here uh is the same thing right that thing up there above my head in the terminal right here is the same as what the board is I just spaced it out nicer so as a human being you could synthesize that information uh in an easier way and just tell right off the bat that's five rows rather than really squinting your eyes here and going okay there's a comma right here so this whole part is the first element this whole part is the second element this whole part is the third element and so on and so forth okay hopefully that makes sense so we're going to Simply I think copy paste the code and that should be good enough and then we should just print I don't know if we have to print board inside the loop use a pend um a list containing five zeros to board just like in the example above note that it's O's not zero so actually it's an O and I do have an O I just said zero for no reason and we'll just print it for fun to see what it looks like okay right there start next check it twice so again I'm going to reset the code use the print command to display the contents of the board okay great job now that we have built our board let's show it off throughout our game will want to print the game board so the player can see which locations that they have already guessed regularly printing the board will help us debug our program so when we're creating this program constantly printing out the board will help us identify if there are potentially any errors or if we're messing up with our logic somewhere right it'll visually just show us however the easiest way to print the board would be to have python displayed for us using the print command let's give that a try and see what the results look like is this useful way to print our board for battleships so when we create a board using this algorithm right here the simple Loop that keeps appending um lists of O's to the board and essentially creating five rows let's look at it is this look nice heck no it looks hideous right it looks really really bad you have to squint your eyes to see the commas to see the rows where anything is and if you were playing a game here nobody would want to play your game if you were showing this to your friends they would not be your friends anymore bad things would happen right your family would be like we don't like this guy anymore so you want to make it in a way so it is easy on the eyes right your friends have fun when they're trying this out and even you yourself could have fun and be proud of showing them something cool so let's go back here and let's try to make this better so when it prints it out it does not look like this it looks a lot better all right so let's go save and submit code and let's start next lesson and I'm simply going to uh reset the code okay so now we're going to create custom print now we can see the contents of our list but clearly it would be easier to play the game if we could print the board out like a grid with each row on its own line first delete your print statement that's what it tells us to do then Define a function named print board and with the single argument board inside the function write a for Loop that iterates um through each row and print that out to the screen call your function on board okay just like that let's take it and try it out and let's see what happens all right so how did this happened we got five rows and we didn't get the outer list we just got the five inner rows how did that happen let's talk about it really quickly here we created the board you already know how we did that here we already created this thing that gives us essentially that okay so this Loop alone creates all of that but how did we do it so we printed it out really nicely well let me show you so this was board right that's what we created oops that's what we created and what happened was where board was we got that part right there right so we basically passed that board to our um function call right here now it went to the definition of the function with the same board and how what does that function tell uh us to do well that function tells us that for each row in there right so what is row let's actually bring that up so it's a little bit um easier to read what's going on still not really easy but so what is happening right we have that board right there and we have that board right right here so the first time we go through the loop the row is actually this thing here and then we say print that and it outputs this row right over here okay then the next time we go through the loop row is simply this row out of that list so row becomes that guy and we say print that guy and that's how you get the second row okay I'm going to remove that giant board because it's confusing so I'm going to just step you through it then the third time we go through remember it's this board that we passed into our function row iterates over this list and the next time it's the third element in the list then row is the fourth element and then finally row is the fifth element in that list and it prints it out line by line this way you don't get to see the outer list kind of cool and let's save and submit MIT and we got each row cool let's start next lesson now printing pretty we're getting pretty close to a playable board but wouldn't it be nice to get rid of those quote marks and commas we're storing our data as a list but the player doesn't need to know that and check that out isn't that amazing right over here look what they're showing you this is exactly what I was showing you guys in the last video so you can call me Mystic Mac because I predict these things right that's what Conor McGregor would say um so you know I'll take credit where it's due so um yeah that feels pretty good we were we were uh trying this part out right here earlier right and they're showing us this now so you're going to see how this is useful and literally it was these examples that I was showing as well one was with an empty space in between and then another one I showed was with four hyphens but they have three hyphens here and I was talking about creating a game and showing it nice and here they are creating battleships and showing it nice okay I didn't check this earlier but I am going through it now and I saw that they have it so let's keep going through it um okay how does this work well we have this list ABC D if we call this join weird thing uh if we call join with that space on this list letters well what it does is it gives you back a space b space c space d it joined every letter with a space in between that's what this is saying hey join every letter in the list with the space in between that's the space in between and this part is saying join every letter with three hyphens in between whereas so you can see a three hyphens B three hyphens C and three hyphens in D so we want to turn each row into o and nothing else okay simple let's go in here and let's try let's try Board of zero right if we did Board of zero what would we get we should get back the first element in the board which is that guy right there what was the error list indices must be integers or slices not tupal what is it saying oh we didn't put commas here right so that's what here we go so the zeroth element will give you that guy this the first element will give you that guy second element will give you that guy so um okay now let's called join on that list so all those O's are together all those O's are together if I called join on the entire board you'll get an error because you can put strings together but you can't put lists together right you're passing it the entire board so what it's trying to do is put all of these guys together separated by a space that doesn't make sense it's trying to do this like literally all these guys with the space that makes no sense what does that thing I don't know so it's not a string so you can't do arbitrary operations to that okay so we are going to essentially do the same thing so for zero we're going to join it by spaces and then for one we're going to join it by spaces and for two we're going to join it by spaces and for three we're going to join it by spaces and so on and so forth forth all right let's let's do just that for Row in board for um let's see I'm getting each row and for I can say numbers in row um I can say uh join numbers say print and let's run it let's see what happens okay is that what we wanted no so let's go back and debug and let's see what happened so for row and board let's first print row let's take it one step at a time instead of doing two Loops right away so you can see that we get these guys right over over here so we're getting one row at a time well let's try this let's do join on that row let's try that let's see what happens and there we go right we got the row and then we just simply joined each row and that's it and then we just Loop through and did that for every single list in the list board this is called a twodimensional AR array it's a little Advanced concept but you guys are getting access to it right now that's called a grid and that's a 2d array or a 2d list okay array in other languages it just means a list in Python okay so that is uh why it's called 2D is because you have lists within lists and for another reason that I'll show you that you can access things by row and column okay for for instance if you wanted to access that X right there right how would you do it um you would you would see what row it's in so zero 1 2 3 and what column it's in so you'd go 0 1 2 3 it's in third row and third column and the basic idea is row comma column will give you um the item you are looking for in a 2D list okay or or a grid okay this is an important note write it down or write it down by hand or write it down in your Evernote or whatever thing you use because that's important so for example I can do Board of three row and three column and I can print it out and you will see that I get back that X right this x right there so if I comment out these guys and if I change that X to something else you can see that I get that something else okay how does that work well board three this row will get me this entire list and now inside of this entire list I have to access the 0 one 23 index so right the this essentially that whole thing is this right here and to get hidden from that I just have to do three okay so I can just do that right here they're equivalent okay all right cool all right so let's try that okay uh we should just do that to our um function okay so we're going to go in here and go in here and just just do that to our function cool so now we get a nice board and remember we don't need to show the person right it says here um um we're storing we're storing our data as a list but the player doesn't need to know that remember the player doesn't need to know that you're storing it as a list you want to show it to them in a nice userfriendly way imagine if on your iPhone every time you had to put a number in you saw some kind of dictionary you don't see any dictionary in here right even though when you're storing numbers in your iPhone it's storing it in a dictionary like a key value pair but you don't see a squiggly and then only after after that squiggly you can put your name right just to recall dictionary would work like this key comma value so it's not like you have to write your name exactly right here and then put it as a string right you as a matter of fact don't even know what's going on in the back end and you just get to do stuff from a nice user interface and then on the back end it knows it's a dictionary and on the back end it knows it's a list same idea is working here effectively okay we are creating a list for the back end but your user doesn't need to know that and it doesn't look boring and annoying to the user anymore it looks nice it looks easy it's easy on the eyes I see the 5x5 really cool okay let's start next lesson uh reset code and let's check out what they're talking about here so they're talking about random that's awesome again same thing is going on here right from from random import Rand int again you guys from like import that import magical command again these people right they were staying up late at night eating ramen noodle writing this code right they probably lost friends while they were working on these giant projects and they you know their their relationships got destroyed but they did they gave all those sacrifices for us and if we don't understand this import command we're letting all of these amazing brilliant coders sacrifices go in vain you guys so understand how import works because import will change your life and why it's so important is you're getting to use Geniuses code right people who are really smart and wrote brilliant code and wrote These really useful libraries you get to just say import and now you can use all of their code without having to know how that code code Works cool so effectively what we're doing here is that from random module we're importing a function called Rand int which is random integer what it does is you give it a range and it's inclusive on both ends and it picks a point what does that mean if you give it zero and one it could pick zero and it could pick one both okay it's not that it goes up to but not including the one like how we're used to in a lot of python things so uh just to show you how this works um I'm again I could use repple it to show you but I also want to use uh other things so you know that you can use multiple things for this um and I have examples up there but I'll show you right down here from random import Rand int and effectively I can do Rand int 0 to 6 and I can keep running it yeah and you see that you got six indeed and you got zero and you got numbers in between you got 2 2 1 one 4 every time you get um it generates a number randomly whoops so it could be the same number or it could be a different number okay it's it's random it's pretty random so why is that important well check it out that's what we're going to use right this it says hide excellent now let's hide our battleship in a random location on the board since we have a twodimensional list remember we talked about the 2D list right before this we'll use two variables to store the ship's location ship row and ship column you remember I showed you list row column that's the trick we're going to use to store our hidden variable so let's say that we had that board that we created earlier right a few times times this board right here ooh not X's I want all of those To Be Strings so let's somehow bring that code back that generates that board um okay so that creates the board I don't need this for now print board okay all right so what did we do we imported the random uh Rand in function from random module and we initialized board to be an empty list then we went ahead and constructed the board which is the 5x5 grid with five O's uh in each row and now we're just going to print out that board so you can see that right over here this is a 5x5 grid just trust me and I've already shown you multiple times s so well what we want to do is we want to be able to place our hidden item in there um or let the computer pick a hidden item in there and then we have to guess where it is okay so how do we do that well check it out um what I can do is I can place hidden item and then print board after that and you'll see the difference between the two boards okay um I'm going to do new line new line so it separates it out and now I will do Board of uh row two and column 3 and I'm going to set it equal to Hidden so the O in row two row two is right here and column 3 is right over here is going to set this right here to Hidden the word hidden and you're going to see the difference so that's the top board right this is line 10 printing out the board that we constructed the regular board this prints out uh two uh new lines that's why there's a little segregation there and then this part here prints out the board and you can see 23 is actually hidden well these numbers that are generated by ourselves here two and three we need these to be generated randomly okay so we're going to use effectively what we can do is use Rand int here directly to generate a number between 0 and four and including 0 and four this means that it generates five numbers right 0 1 2 3 4 that's five numbers if you put five here that would be wrong because you can't possibly go to row six you understand because we start from row zero when we're in indexing so we can do that here and we can do Rand int of Z 0 comma 4 here as well what each time this is going to be generating some number from 0 to 4 and each time this is going to be generating a number between Z and four so let's check it out now hidden is going to be in a different position every time right hidden is here now hidden is here now let's check where hidden is it hidden is right over here okay but to make this code a little bit cleaner what we're going to do is we're going to sign those variables okay so I'm going to say random row equals Rand int 0a 4 and I'm going to say random column is equal to Rand in 0a 4 and here I'm simply going to say a random row and here I'm simply going to say random column okay and every time I print it out you can see that hidden right here is in a different location effectively every time so you wanted the computer to be automatically able to pick where hidden is so when you're playing um and you guess that location you can sync the ship so we're not going to have it actually say hidden cuz then obviously you know where it is but I'm just showing you for now how random works and how changing things in a 2d list works okay so all of that is great but what if the board is a different size it's not a 5x5 Grid it's a 6x6 six grd or whatever how do you know instead of four what to put there well how are we getting this four and how can we programmatically get it every time we'll just get the length of what the board is right and this should give you five because there are five elements in the list board right element one element Two element three element 4 and element five so length of board should evaluate to five but remember remember putting five here would be incorrect and the reason is because now Rand int is giving you numbers from 0 to five including zero and five and that's six total options and you can never go to row six or column six for that matter so what we're going to do is len board minus one and Len board minus one right and this should give us what we want effectively okay every time you'll see hidden changing every time right hidden is changing cool let's go back Define two new functions random row and random C that take that each take board as input okay they just want us to Define it as a function So Random row board and return random integer between zero and Len of board minus one and effectively random coal board that takes in board and returns random integer between zero and Len of board minus one okay that's where they got Len of board minus one call each function on board so now we're going to call each function on board and we're going to say um we're going to say random I was just reading uh just in case I missed anything in their instructions but uh it doesn't look like it random row pass it the board that we created this is the board that we created up here okay these four lines effectively or three lines of code create construct the entire board for the game and I'm going to do that I need one parentheses okay cool and we can see what this is doing join print right here we got to make sure that we do print so what is that effectively doing these functions just return an integer okay if you give them board they just return return an integer so so we give it a board we give it that 5x5 grid each containing five uh each list containing five O's strings and then what it does is it takes that board it returns its length minus one which in this case would be 0 to 4 and that simply evaluates to some random integer like let's say two and so this part might just evaluate to two and this part might evaluate to some number like zero for column and it might be some zero column and that way we have our random row and our random column and then we can later use it for whatever reason okay so for this part I'm going to stop it right here and we're going to continue in our next video so please if you haven't yet please subscribe like the video or if you could please share it with whoever you know or maybe don't share it that's maybe your secret of getting better at programming whatever the case may be this is ky from clever program.com you just finished watching part 17 I will see you in code cademy Python tutorial part 18