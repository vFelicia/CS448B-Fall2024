All right, so, in this video, we are going to talk about how append works in a list, because the last video got a little bit long, but for those of you who want their minds blown, I want to even give you a better solution for the problem with the whole splitting thing and then storing it as a product, price and condition. So remember, we had data XBOX 360, product; 150, price; condition, new. There's even an easier way to do it. I can say product, I can say comma price, and I can say condition, and check this magic out. And I'm gonna say data.split that by pipe, and boom, we're done. So now product is the first element from that list, right? If I show you data.split... By pipe... What you get is, first element, second element, third element. So the first element maps to this product right... This product right there, price ends up mapping itself to 150, condition ends up mapping itself to new. So go check it out, it's also kind of known as the concept of tuple unpacking. Really, really advanced concept, we're not gonna get to it 'til maybe an intermediate or advanced course, but yeah, just something a little fun to blow your mind, and look at how efficient Python lets you do things, right, efficiently. So, really simple way. But hopefully this shows you the power of how you can combine lists with the whole idea of slicing and all that. Now, one of the common, most common things I wanna show you is this whole thing called .append, okay? It's a method that you can use on a list. Very common method, and this is one of the reasons why lists are a lot more useful than strings or any other thing. Okay. Oh. Let me just be clear. It's not that strings are not useful, or lists are more useful, but the reason why lists are so awesome is because of that, that's what makes them unique. Okay? So, let me give you some list with... Sure, let's give you racers, or, let's do something simple. Let's do numbers. Okay? Now, there's a really easy way to grow this list, so I wanna keep adding some numbers to this list. Well, how do I do that? What if I wanna add some number to this list? I know how to access each of these numbers. I know how to slice each of these numbers and get a range. I know how to step and slice and give ranges at the same time. I know how to reverse the list. Well, what if I wanna add more things into the list? Or change existing things in the list? Well... To add things in the list, we use .append. Okay? Append... Meaning add something to the end, hence append. Prepend, to add something to the beginning. So, we wanna add something right over here in front of the five. So lemme do six, and if I show you numbers, now you have a bigger list. Let's say I wanted to add another thing. I'll just say append(7). Now if I show you numbers, now the numbers has grown bigger. You got seven. All right, so, we're using this new app that you're creating where once your friends raced, you put them in list, but let's say more of your friends get excited, they're like, wow, this app is amazing, we wanna race too so you can put us in there, but you're like, I already... The list only takes in three people. Well. Append lets you add in more people, right, so you store that data, you keep it there, and then you use append to add more of your friends into the list. What's also nicer is you can use a loop to add things into the list, okay? So for example, I can say, for i in range(100), if I say print i, well... What is that gonna do? It's gonna go all the way and print up to 100, okay? So I'm gonna stop this right here, but you get the point. It's basically... Range, right, what is range? Just to show you range of 10, that's effectively just a list, 10, okay, and then we kind of go through it and we print out each of those numbers. I'm gonna get more into loops in the later video, but just, this is just to give you guys a little bit of an idea of how we use lists. So, for example, every time i... so the first time, i is zero, then i is one, i is two, then i is three, and we keep doing that, right? So, what can I say? I can say... 'Cause, effectively, right, since this is a list, now I can explain to you guys a little more about loops, since range is really just a list, right? I'm calling list on it 'cause in Python 3.0 they hide it from you, and you'll learn why later, but, if I call list on it, it shows me what range(10) looks like, and range(10) happens to just be a list, and a list is what allows you to make that for loop, okay? That you've been making all when you were creating your original turtle games. So what happened is that... The first time going through this list, right, let's say, let's just make a smaller list here for now. When we're going through the loop, i is zero the first time. And then we call the print function right here, right? So i is zero the first time, and then we print zero. Then i is one, because it's the second element from the list, and so then we print one out to the screen, then i is two. And then you get two here, and then we print out two at the bottom, okay? So that's how loop runs, right? The indented code keeps running over and over again. So, that's really what allows you do to a loop. It's actually a secret list in the background, and so that's why you go from zero to 100 here, right? Now, if I wanted to take that list that I had at the top called numbers and keep adding a lot of numbers to it, say, up to 30, instead of keep having to manually do it, well, here's a nice way to do it. I can say for i in range... Let's see, 14, or... Let's say, or... I wanna start my range, okay... So if I just showed you, you can also give a start and a stop to a range, so let's say I wanna start my range from eight and go to up to but not including 20, or 21, so I go from eight to 20, right? So these are the numbers I wanna add, okay? So let's do for number in range... Eight and 21, and I'm not using i, I'm using the variable number, just so you guys know that you can... You don't have to use... You know, i is not some magical builtin things that you have to use. Use a variable that makes more sense. In this case, since I'm going through looping, and it's really numbers, and now you guys know that i turns into a number, it just makes more sense to call it a number. So then you're like, oh yeah, this will just be eight the first time, then it'll be nine, then it'll be 10, then it'll be 11, and then it'll be 12, right? So let's go back... So, let's replace this with just number, and then let's say numbers.append, and to the numbers list, I wanna keep appending... Each number. Okay? So the first time I'm gonna append, number's gonna be eight, so then I'm gonna append eight. And so it's gonna add eight to my numbers list. Then numbers, number, is going to be nine, and then it's going to append nine here. Then number is going to be 10, and it's going to append 10. Okay? So let's do it like this, let's replace this bad boy with number, let's run it, let's take a look at our list, and, voil√†, you see it goes from one all the way to 20. Okay? And... If these were your friends and we wanted to see... You know, in the reverse order, like, from losers to winners, instead of winners to losers in a race, I would be able to do simply this trick, which says start by default, stop by default, and then step by negative one. So, that answers that question, right? Okay. Cool. So a lot of stuff, but hopefully it's making sense, and hopefully... Lists are making more sense, and append is making more sense, right? Append is one of the most useful things. So I want you to remember append, and we'll come back to it, and we'll probably build more things with it, okay? I'll have a project for you guys as well where you're gonna get to practice it more. For now, come up with something cool, whatever silly idea or fun idea that you have, code it up, something simple, post it in the comments below, in the YouTube one or my website here, okay? CleverProgrammer.com. Either way, that's fine. All right, guys, I'll see you in the next video.