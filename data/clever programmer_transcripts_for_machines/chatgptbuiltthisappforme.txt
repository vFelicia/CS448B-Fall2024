in this video we're going to be building the open C clone but with a little bit of a Twist because this time we will actually watch Chad GP to build it using infuria to connect to the ethereum blockchain so with that being said let's go ahead and get started all right now ai is smart and all but it's not as smart as everybody thinks it is it still cannot set up the project for you so while we can write the code for you it can't set it up so still we're gonna need to run this epcli so we just run it then we'll get everything started put in your name email and then opens each head GPT the project we're going to be running now it opens inferior for you again you are still in control so if you don't have a infuro account already just go ahead make one and let's actually set it up but before that the terminal will finish running and it will open vs code for you that's where we're going to be putting everything to GPD spits at us so you can go ahead spin up the app and in the meantime just create a new API key we're going to be using the web 3 API and then putting the name however you want to make sure that you are not putting any spaces in that project name it could cause problems later and it's also just good practice not to do it all right let's go create that so that's nice over there we're gonna get back to that in a little bit there's your API key there is your and there are your endpoints and this is your app currently so it already has connect metamask wallet and all that functionality included so don't worry about that we're just going to be specifically focusing on the contract part with Che GPT so let's move on to actually writing the contract all right this is going to be interesting this is gonna be a new one so here's mychat GPT and however it's still like you've got to be like super specific so let me just show you an example I just want to give you an idea of what kind of commands you can give to chegebt and as you can see I'm using Chad gpd4 that's like a little fast a little smarter actually that's slower however it's a 20 upgrade but gpd3 which is free and available for everybody at no charge you can still do this exact same thing now what you might experience is if you're using chechi pt3 is that you want to have like tiny bite size prompt rather than longer prompts because that can only process so much text however this app can be completely and 100 built with that I just wanted to show it with this one because this fits better on a screen and I can explain it better so let me just show you so here's what we're gonna do you want to type in something along the lines of create a solidity smart that uses ERC 729 for an open Zeppelin name it nft collection like you got to be specific with it give it a name what exactly do you want it to have so the URI storage ownable you still have to understand the fundamentals of solidity encoding in order to be able to use it now we want to be using the counters as well and we want the library that keeps track of the token IDs and let me just freeze it here here we have 12 very specific commands that we want from this app so again if you're using gpt3 you can just break it down to 12 separate prompts it will be way faster you can just do it that way so we want to have a price on the of this NFD you have to specify you have to call it a constant otherwise it will not know what you want to do you want to have a struct so you still have to understand what's happening like you have to know almost if you were writing it so you need we need a struct that will contain all the data that will have two un256 holes ID and price you want to map the map that nft data right I'm sorry you want to map a number to the nft data meaning the ID to the NFC data itself we will need the Constructor that will set the name and symbol and you have to give it the values the nft collection and FTC respectively so basically the name will be an ft collection and then FTC will be the symbol but again it understands if you say respectively then we will need a function set price that will receive the token ID and will receive the prices to arguments and then we'll check whether that token exists or not and then we'll set the price and we're going to have an add nft which we'll link from in the counter and then create the NFC data object and then mint the token so it will basically generate all the right it will basically do all the maintenance around me then we're going to have a total Supply that Returns the number of minted tokens purchase nft which will complete a purchase transaction get all token Uris return all token URLs and you name it and then we will have the burn function from the inherited contract overridden in a token URI as well so let's see what GPD says and it actually gave a pretty long contract so I'm not going to just go through it right now let's just put it into our vs code so I'm going to go ahead and go to contract and create a nft collection.sol file and then just paste it there so what I recommend you do is whatever it gives you just start pasting it back into your vs code and then just keep compiling the code that way you don't have to do any of the understanding and obviously if there's a bug you obviously have to understand what's happening but you don't have to do all the thinking and everything that is involved with coding itself so what you can do is you just paste it and then just type in your terminal truffle compile and that will check it for you it will obviously compile it for you and it will spit any kind of errors or anything that you have and that's when you start debugging so there you go this one was compiled perfectly we don't even have to go through it we just know it works we know it has all the functionality however if you were a beginner in solidity I still recommend you go through the contract and try to understand what's what pick it apart because that will serve you well all right let's move on to the next step all right so now let's deploy the contract if you don't know how you can ask chegebt or if you already know you can just do it so what we always do in the Truffle extension if you don't have it free from the vs code extension Library just go in there you can disconnect all previous projects or just connect it as new ones this is an infuri service and it's so good how they are integrated because it just pops up all your projects you can just connect to open openc and now you can go ahead just click deploy and it will do everything for you so there are all your networks use the mnemonic and there you go now it's deploying so everything should be fun and it looks like we are getting some positive results there you go deploy succeeded so that looks good we can now copy the contract address and actually let's paste it into our listings.js it will be useful later so let's move on all right so in this one we're going to be setting up the contract instance so that the app can work and interface with the contract so let's go ahead and do that so we're going to be using the listings JS file and we're actually going to be needing it but let's just put it there in line 20 that that's where we're going to set up the contract instance this will help to a GPT so it's kind of like work its way through this file because we're gonna be giving it the entire thing so here's what we're gonna do put it there set up contract instance and then just highlight everything copy it and let's go over to Chrome now what we want to do is we want to set up a contract instance for our contract state in the use effect and then just paste it there so basically just tell it that hey there's this use effect I want to interface with the contract and it will just figure out the rest you can specify oh this is where I want it to be or you want to be you can also just say that hey I want to interface with a ethereum contract give me the code for it something along those lines I want you to try it multiple ways so you just have a muscle memory of like what all right just paste the file there good to go and let's see what it says all right so that looks good now we also have to make sure that we're importing the ABI and that obviously it doesn't know where it's absolutely will have to figure that out but just you can paste that line there and then just update where the API is at so now you obviously want to make sure that the location is correct so for me it's in the build slash contracts of nft collection Json and now it also gay also made this address constant so that's nice we can just replace our comment with that so that's actually helpful that it did that and now this is where this is the Moment of Truth this is where we're going to be copying over the use effect that it actually built for us so that first use effect is ladies and gentlemen that is where everything happens that's what we came here so just go ahead copy that entire thing and if you can see over there we just had an empty use effect so we figured it all out it put it there that is perfect and that should in theory work let's check it out I want to make sure that down there everything is console logging all the errors otherwise we're never going to figure out what the issue is and it looks like there's already an error and it looks like that it cannot find the map part in the ABI the so that looks interesting and that's very likely because these ABI files usually have an ABI object in them so I've used that instead of the regular API file and it looks like that just saved this whole there you have it all right so now we're going to make Chad gbt build the add nft function so let's ask it to make it so you need to say okay now let's do the Advent ft function or something along those lines normally remembers if you gave it a bunch of things and it should in theory remember the conversation you guys had before okay that was weird to say but in case it doesn't you can also just again give it to the entire file again and be like hey there's the add nft function make it so that it does this and so sometimes you need to refresh its memory all right let's see what it says so that looks good now let's go ahead and replace everything so we have something to put it put to the add nft function and we also have to replace the handle submit so it actually gave us two functions so that's nice now let's copy over the add nft to collection function so that's already there you can just replace it with whatever it gave you don't even worry about it we'll check it in a little bit whether it work works or not and now let's check the handle submit function and just replace it there let's see what's happening so open up the app and now if everything goes well technically we should be able to amend the nft so just paste your nft URI we already gave you all these things so just from the metadata let's copy that paste it there and then that and then just the price so remember because we asked chai GPT to set a price for the minting which is 0.001 eth you will have to pass in that value there so just make sure what the value is you can go back to your contract file and double check so there's the metamask popup so that looks good and it's actually pending and there's the as nft function going through and it looks like it was actually successful so let's search the nfts all right so far it's been pretty smooth let's see if fetching these nfts are going to confuse it so let's just say okay now let's do the fetch nft metadata function and let's see what it says so that looks interesting it looks like it cut in half so sometimes it happens so you can just say something along the lines okay continue or whatever carry on and it will just continue or regenerate response or whatever and even apologizes so that's nice okay so that's looking good let's copy this code over to our vs code and replace the Fetch and ft metadata function so let's see if it works and it looks like the image is missing the source property okay now we're laying like some deep trouble let's see what's happening and it also looks like that we are fetching the token URI which is not necessarily the good thing to do we should like extract the data out of it that's the issue it's not a token URI that we're looking for so we should be fetching not the object we should be fetching the you the image URI and all these things from that object so let's take a look at that and by the way we can just give it that hey this is how you build up the URL that will work for the image so let's see okay so that looks much better if you take a look at it in the previous response in the previous response we only had this stuff so basically we just had the token URI and then it just passed it back here and now that was pretty much it now in this one what it does is it actually uses that same token URI right here as we gave it to it and it actually fetches the metadata itself and there you go now we have the metadata and we actually can do something with it so like we can get so we can get pretty lazy with this stuff and we can just make it do a lot of things so we can just copy this over and you want to make sure that you highlight the entire thing and then just paste the new stuff there you can just paste in the metadata fetching itself so there's the metadata that looks good however we're looking for the image URL and you can see how it like starts to poop out it's not that smart but it's pretty impressive that this is the first time that we are actually coding something and we have to use our brains so that's pretty nuts now we have to like make sure it knows everything instead of metadata we're gonna have an image that we'll need to Fat we'll need to get the image property from the metadata and same goes for the name because right now it doesn't show up but there you have it the image is there so that looks good so far but as I said the name is not there so we're going to extract that too and now it shows up and that's as much as fetching goes all right so the last tap is that we will enable the user to purchase these nfts so let's take a look at that let's make sure gbt do the work for us so you can just say all right now build the nft or the purchase an ft function it was pit and answer back at you that looks good let's copy it over and then you can just paste it to the appropriate place that looks promising let's let's see what's up and by the way this app is built so that when you click the image it will run that purchase nft function so let's click it and it looks like to be an error and something along the lines of value must be string and it got a big number let's just make the listing price a string usually that's the listing price because way is a big number so you just want to convert it to a string that my none have been added there but it's fine and we can also remove that line from there that's not really useful we are not doing yeah it literally parses the price to Ether and we don't want to work with that we want to work with weight that's how solid it works okay so that looks good okay that looks way better and now they are over there on line 53 just make sure the value is price not price in way otherwise you're gonna have another error so now that we've cleared it up and fixed everything and again this is where it comes in that human power is still required and necessary more than ever so let's check it out and now I'm gonna hit it and then metamask popped up so that looks good and purchase is pending and it looks like it just went through and now we can just go ahead meet new nfts purchase those nfts so that is pretty much the build you can just repeat this as much as you want to that's pretty much the build thank you so much for watching and now you should go ahead and practice learning you chat GPT this is a tool this is not there to replace you but you have to be able to use it you have to be able to increase your output using tools like GPT whether you use the model 3 or the model 4 it will just make you faster so with that said thank you so much for watching and I'll see you in the next one peace