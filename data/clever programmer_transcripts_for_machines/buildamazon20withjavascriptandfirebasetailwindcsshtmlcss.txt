day three no day four of the javascript challenge and today we are finishing up the amazon clone 2.0 i want to show you what it is that we're doing right so we've got the amazon clone 2.0 that is built with javascript tail and css it is built with firebase it is built with media queries it is built with an amazing design we've got here categories right here okay so once you at some point when you when you click on the category your product should actually change you've got products right here okay these are the products that are available on amazon we've got ourselves the amazon logo we got ourselves the categories okay we have ourselves a search bar now here's the cool part i want you to pay attention to this really quickly guys okay pay attention to this this is so cool when you go ahead and click okay you see this number 50 right here i want you to pay attention to this number 50 right here let me make this a little bit bigger if you click on this add to cart which i'm going to do right now pay attention oh look the 5354 changes by itself by the way right this is live reload now libraries about live database right that's right and now if i go ahead and click on the cart right now we can see that what do we have we have 29 macbook pros which is pretty impressive i'm guessing if you want to win on macbook pro stick around guys because we'll show you how to make them work okay there's 15 nintendo switches in here there's 11 panasonic's that's right that's a lot of tech guys that's 53 000 guys that's a lot that would be good giveaways for the challenge you know okay let's not promise that we can't we can't do that it's a lot it's a lot but right as you can see for example if i decrease the number here it decreases the whole total cost not only does this decrease this decreases and so does this so if i just simply right it'll work perfectly if i could increase the number if i wanted to as well look at that it looks or just works seamlessly if i now remove something which i can it's gone i can move another one it's gone now it's just fifty fifteen thousand it all works live so let's go ahead and build this together let's finish it up remember part one of this amazon clone was in the previous video so make sure if you are just here to start out uh feel free to check out the videos before uh they will be there but if you're here just also watch feel free to watch those you can zoom thank you guys let's go ahead and make sure we have our project uh open and we'll get started right now okay so right now before we start can you get push everything for the final project oh you got it jesse thank you i'm gonna get push everything because jesse wants me to get push stuff so i'm going to say sudo this is this is github by the way if you guys don't know so for example if i want to use git and i want to go ahead and you know add something to commit i do sudo git add dot and this by the way is just old code not out code but this is called the me and js i've been working on and then if i want to commit something i do sudo git commit dash m okay and then i give it a message so for example here this is day four day four of the challenge right boom boom right there and so sudoku ad is like kind of staging the changes they're not committed yet but they're staging the chain again getting it ready and then we do pseudokit commit we actually fully commit that you know uh that piece of code and then i can do sudo get i'm only using sudo because of my computer it's a little bit dumb right now so to get push origin master and boom right so what does it mean origin by the way origin master so a few things we push now to github this is what it means when we push to github uh basically we're going to push to origin which origin is where github is okay and then master is the branch that we're going to push so our branch we're going to push is called master and then we're going to push it to github okay and that's it all right jesse you got it yes awesome so guys this is really important git github is something you definitely need when you're working a team okay so because nash push and commit everything to get i'm now able to pull it from git and then and i only have to do i only have to go into the project and basically do the command uh git pull and that's it i'll get everything all of the code all the changes that we made that's right all right so let's go ahead and get started right away i'm going to close up my other vs code and i'm going to open up a recent one which is the one we're working on which is amazon clone 2. now all of you guys that are currently on zoom raise your hand if you have the amazon clone 2 if you have the uptodate uh functionality do you guys have that yes or no you guys have the update functionality yes or no you guys have that yes yes yes yes good good good good good good good if you guys don't we have the link amanoth drop the link below if you are here please drop the link below into the chat so that we can tell show everybody the github link and they can download it okay but if we go ahead and i'm going to open up the current one so open with live server all right this is our current one you see look it looks pretty good i kind of like it i kind of like it a lot uh but of course it doesn't have the functionality that we talked about right we can't delete we can't you know add the card pretty much none of that stuff um but this is how now we're gonna make that all work so i'm let me go ahead and open up new window here just for me that's not for you guys okay for me actually because i want to see some of the code that i have as just kind of honestly as a uh as a cheat sheet i like to use a cheat sheet all the time don't judge me that's right we're not perfect okay okay nobody's perfect guys but um it's okay all right so part one where are we at well we first need to go ahead and do a few things if i go to amazon 2.0 let me go back to my index.html all right right we have this number one right here this counter it's just kind of there but if i go to the cart that counter is not there so let's first make sure that that counter is there okay and the counter is going to come from where let me go ahead and hide this for you guys hide this for you if i go to insta html you can see that we have a counter let me see let me see let me see it is a counter two two two two no not this one it's in the header somewhere card icon and we have this right there card item number you see that right there cart item number right there this one right here and it's right underneath the card icon so make sure you pay attention to that guys please pay attention that's really important all right card icon i'm going to copy the whole card item number i'll paste it even for you guys in the chat so you guys have it as well okay right there right there this is the one okay okay i'll place it for you guys in the chat and then what you guys want to do is let's go back to you know our file pages go back to card.html and then let's go ahead and put that in where put them near the card icon so if i simply just do command f and i say cart dash icon boom you see it show me the card icon is where it's at i'm going to hit enter paste it in there and boom we got it nice let's go and save that and then i'm going to give it a comment because sometimes i like to use comments it's very important guys okay pay attention to the way i'm doing this all right so we have cart icons boom right card icon all right so that way if i go ahead and save this save this in the html i don't exactly see it for some reason but why is that because i cannot okay the reason why i don't see is actually this is maybe why joe why you don't see it as well because right i put inside the card item number but the issue is where is it it's all the way here i don't know if you guys can see that it's right here you see that you need to do the positioning that's right because currently this little icon cutout number is position absolute but absolute to what so we need to give it a relative positioning for this specific dip that means i need to go back to my card icon i need to say relative using tailwind css and boom now it's there you see that joe make sure you have it just like that okay joe all right beautiful beautiful beautiful social relative so now we have that we've got that that's all looking great jesse what do you think this is the next thing that we should be working on so let's start at the start right when we are in the main section indeed when we're on the main section and we see one of those hot deals we want to buy that that's right so first let's start off with adding the button add to card okay and the logic is this guys when you click the button boom the item is in your cart so guess what the one becomes a two if you have two items so let's add all of that functionality and let's start here that's right so it's going to add added functionality for add to cart so if you go to in this.html let's scroll down and let's go to our product so we have one product right now which is this product right that's pretty much just just this product image and what do you think we should do in order to add another div for the cart well it's very simple i think we should add another deal for the card so i pretty much answer my question pun intended i know i know but that's okay it was very clear mmhmm so let's go ahead and do that jesse you want to do that right you give me a lecture oh dang yeah if you can give me your life here i need to get thank you sure that's right jesse oh damn you fancy live here fancy jesse it's it's the share of life let me see start collaborating oh it's still starting so while starting collaboration sessions you give me please be patient with me for a second and while we're doing that let's kind of create a new div okay i'm gonna say dude i'm gonna say class and this is gonna be add to dash card right there okay add to cart so so guys look at this closely it's in the inside the hot deal okay so main sections deal see that it's inside the main product so it's inside this product this is one product guys and we're going to put a add to cart inside that product okay that's what we're going to do i'm going to create that div and then we're going to give it a few different uh things so this at the car should have a text of add to cart let's go and save that i can see by the way the bottom is showing right there you see right there okay then i'm gonna do a few things we're going to give the height so let's do h dash eight okay and let's do with dash 28 boom nothing so far let's give it a background color and let's say bg bg yellow 500 so let's do this bg yellow 500 save that okay all right and then we have a bg yellow 500 to fully make it centered what are we gonna do guys well we need to add a flex to it so let's do flex okay and let's do items center oops items dash center again this is going to uh do item center oh there we go now the link is getting copied nice job jesse hey send it to jesse here for a second there you go yeah yeah yeah so that's good so that means it's center uh horizontally and then let's do vertically so actually this is a vertical vertical actually i forgot about that and then let's do now justify center to center horizontally boom okay then we're going to do text white boom and then let's go ahead and do some rounded corners okay well to give us around the corners it's just gonna be um just say rounded that's it so let's do rounded save that i'm gonna give you guys a word wrap so you guys can see a little bit better here boom there we go you see all right okay we're all good there add to card justify center it's time to look and that's pretty much it that's the art at the card is pretty much done i just want to make the text a little bit bigger so we're going to do the text md text md save and that's it that is it my friends all right also i want to be able to make it a hover so when i hover over this it feels like it's a pointer it's a cursor pointer right so i'm going to give it a cursor pointer cursor dash pointer okay so that means if i wrote this you see it's like a hand button now so boom anyways right it's a cursor pointer and then the final thing is i want to add a hover so when i hover over over this whole thing i want to be able to change the color that means i'm going to say hover again this is all tail and css hover with i'm going to change the bg yellow to not b500 to actually be 600 this is the really cool thing about telling css you can really add make this stuff so fast so for example if i just do this this this you see that's it it's already a hover and it's clickable and everything so bun done at the cart is now all done okay guys so now add to cart is add to cart is is done okay all right we've got that portion now what i want to do is actually i want to be able to add this at the card to a database but before i do that i want to be able to get the card items from my database guys because right now this is what let me go upstairs this right now is static this div is static it's not dependent any database it's not dependent on anything it's just a static html i want to be able to change that to where i get the data from the actual firebase database so let's go ahead and go to firebase right now okay guys everybody i went through firebase yesterday i'm gonna go through firebase again here so i'm gonna say firebase okay firebase.google.com great and then what i'm going to do is i'm going to say go i'm going to log in if you are not logged in make sure you log in i'm going to use my my other little thing here and then i'm going to say go to console go to console right here so go to console beautiful nice and i've got a few things so the one that we're going to work on is i think is this amazon clone 2 let me see amazon clone 2 right here okay all right and this is firestore now for those of you who do not have amazon or this firebase done i'm going to show you exactly how to do it so just one last time just to recap so you guys are not fully lost okay click add to project let's go ahead and i'm going to say amazon name your project whatever you want so amazon test if you want to okay click continue sure continue all right set an account that's fine default account firebase crew project there we go so click create project then you should be all good give it a little bit of a second and while we're doing that i'm gonna keep playing this move music and jesse just keeps trying to get into this culture it's my god my god got this okay i can i can control this code hell yeah okay beautiful let's go to so this is has been done right let's go now to uh project settings right here click on this project settings right there project settings select uh this little map right here now map what is this called like uh i'm not sure this is called like tag i'm not sure this is actually called but just select this okay all right from my web app say amazon clone i'm going to say test because this is a test one for me or you can call it whatever you call whatever great so now you have your firebase configuration that's it okay fibre configuration is done but what are we going to do now with this config well a few things we're going to go back into our project folder some of you might have fibro.js already here some you might not right if you don't have it do new file and say firebase firebase base.js dot gs sure right i already have it so i need to create it but that's it i have my firebase.js then what i'm going to do with this firebase gs is i'm going to copy everything that's from here this config command c that config and then command v that config right there okay that's it that's what i'm going to do right with this config then i'm pretty much done let's go to index.html i now need to import firebase into here so check this out i'm going to copy firebase app.js this script tag right here all right and you guys should all have that or if you don't i'm going to put it in the chat yeah boom right there and then put it is somewhere inside here so i'm going to say i'm going to put it in here right there see script tag firebase app then i'm going to copy this analytics portion which you really don't need but we'll just have it there for now and that's it and we're not done yet though honestly because i'm going to show you how to actually use the firestore because firebase is a lot of things firestore is the database that we're going to use so using firebase firestore okay so getting started with firestore let's go ahead and scroll down right there so with firestore it's telling you a few things right you need to import the actual firestore script right here you see we imported this one firebase app by the way jesse were you able to log in it's all good yeah okay great i'm labeled i just logged in now yeah okay great so i'm gonna go through this right now so firestore let's copy that i'm gonna put a few guys in the chat boom a month can we please um and include comments on youtube i want to make sure that we have comments on youtube command v on there okay so we have all these three different files we have one the initial firebase app that's the most important thing now you can see here i already have it there let's go ahead and delete that right now because i already have it there next one is we have the analytics portion i have that there too so i'm going to delete my second duplicate so i don't have i don't have a duplicate and the third one is going to be this firebase firestore so there's three things you need to include in your application in order to make the database work is everybody with it you guys understand that yes or no yeah good good all right so we got that and here you see it shows us hey you know the npm install all this kind of stuff but we're not going to do that instead we're going to do the following the one thing we're going to do is just simply do db firebase firestore so do that right now i'm going to save this okay and within that i'm going to create a new file called new file uh actually i'm going to go fibres.js and i'm going to say uh all right oh oop not the one that's not this one i'm going to copy this var db firebase firestore and this is going to make this db variable available to the whole index.html or the whole script.js when we're going to create this right now so oh that's right this db variable is going to be available everywhere that's why we're putting into like a var variable right because now if i do new file and i say script.js guys okay this is the actual script we're going to use to get the data from the firebase so now check this out all right really quickly i will go ahead and i will go to insta.html and i'm going to include my script.js inside here so let's do that right now script source is equal to script.js close it out boom and done right that's it you can see here is telling us hey how do we actually add the data you know how do we get the data like read the data so it's telling us right there right uh before we read the data from firebase let's actually add some items to the database because of course if we got nothing we're not we're going to get nothing simple as that i will go back to my uh firebase here right there oh not here close this one out i will continue to continue to console and i will go ahead and go to firestore database i will create my database i'm going to put into test mode for now just for now test mode click on next you can select the location wherever you're at so if you're in some other locations like this one i'm currently here in this u.s central so i will click enable that's right okay great so i'm going to start my first color so collection guys is a database right it's a database table that's how i think about it right a table what's a table anybody know what a table is anybody know what a table is raise your hand if you know the table is well it's kind of like this if i have this kind of table i can have rows of different data in here you see boom rows see and every single row is another item maybe this could be an item this could be an item this could be and this could be an item every single row has certain data maybe this could be the name this could be the image this could be you know maybe the url this could be the price and so forth and it continues on and every single row has the same data you see the same data now i know what i'm showing is very visual but let's convert it to actual uh data i will click start collection and i'm going to say i'm going to say items items next okay so now we're going to create our one our first row of data in our case is called a document we have a document id which basically is a unique id that represents that piece of item okay i'm just like i'm gonna say hey let's auto generate that id and now i'm gonna give the fields that i need so first field is gonna be what image okay it's a string and what is the value of the image well if i go back to my uh shopping cart oh that's not working there oh it's okay it's okay no okay it's okay i got it i'll put live server hey let's go see oh so quick oh no wait which one nice good good good good nice job guys wait let me go and open this up with live server as well nice good good good the smell one so this is my other application i'm going to copy this image address and right here and again if it looks like here on youtube you can go ahead copy your image edges as well and maybe you can paste it in uh as well i might maybe keep pasting the image somewhere else as well so i'm going to paste the image for you guys right now boom it's there okay all right it's there and then i'm going to use that one all right and then i will go ahead and go to my amazon application my firebase and i'm going to paste that in here as well guys that's then we're going to add another field called name and this name is a very simple well it's apple macbook pro all right let's go back to our firebase right here give it up a pro next one's going to be we'll do make make and that's going to be apple okay next one after that is going to be which one it's going to be the rating okay so we have the rating rating and you give it a number but let's not make it a string but make it a type number so i'm going to say 4.8 now i'm going to do 5.0 because i love mac so don't hate me all right and then i'm gonna give you the price of 1149 as well so let's go to uh firebase back we'll say price that's going to be a number and we'll do five uh two one thousand one forty nine again it's a number guys okay there's a difference between strings strings and numbers okay a string is just a kind of like a string like you know you can use a string like nazari or the actual word it's a word basically a number is a number right click save and check this out guys we have our first document in the collection this is our first row over from a database now how do we get the actual data and let me know if you're still with me are you guys still with me kind of yeah you guys still with me somebody said i just joined it's okay good good samir nice job good good good nice job match up so we have this field right here that's awesome sweet so now what i'm going to do is i will go ahead and actually go to my amazon and let's see what we can do when we go to documentation you can see this is how we get the data give me the collection users.getdata so i'm actually going to copy this with the collection and i'm going to paste it in i'm not pasting it for you guys as well in the chat boom let's go to script.js and let's create a new function called function function get items okay so jesse can you explain to us what is a function so get items guys this function will get all of the items that are inside of firebase that nas just added so um what is a function but what is a function in general like what does a function do for some people who don't know what a function is in general what a function just in general yeah what is a function so here on line three guys this is called a function well actually more technical a function definition okay this is how you define the function and this function is called get items okay so what you call the with the keyword function you're saying basically to visual studio code hey the code is coming after that that's going to be a function so you're going to give that the name oh my light went out and you're going to give it round parentheses because that means it's a function okay then when you open up the brackets that means all of the code inside of those brackets are being executed when you call the function this code how do you call a function guess what very easy you just say get items parentheses yeah and you call whatever you want so if you wanna whatever you function this name you give that's the name you call here so if you wanna say hey get item or get random items yeah yeah for example if you call it say hello then this function also needs to be called say hello does that make sense guys with the exact same decks can i get a thumbnail from everybody good good good good good so let's go and change it to edit items now of course when we name functions we are very careful with how we name them because it tells us a lot about what the function is all about okay tells us a lot about that if we just name it randomly if we name it like this good luck understanding [Laughter] that's funny right there so look guys this is a function called get items and this item is we're doing a few things we have git items we're going to be the collection if we go to our firebase we have a collection called items you see right here so because of that what do you think needs to go inside here put in a chat guys what do you guys think needs to go inside here that's right items so users we're going to say items dot get that then there's gonna be query snapshot this is a function right here this itself is a function as well it's called an arrow function and then the query snapchat is actually just a list of something a list of items so if i do console.log query snapshot right i'm going to console.log here and i want to show you something so check this out before i'm going to count this out just so you can see it we're going to call this kit items now let's double check to make sure the script is inside it is html yep that's there that's all good so now if we open our amazon if we right click and expect element on here it says what db is not defined which is fine why do you think that's the case well i think it's the case why is it why do you think that's the case over db is not defined because we have a db right here db and then we have db inside here why is it the case what do you guys think i know why the ideas that's right maria we need to import db but because we're using just vanilla javascript for now that's right that means something is not connected you guys it's a good hunch because right now look at this it's firebase.js but are we including that that somewhere no if i look at my insta.html virus.js is normally be found in here you see it's nowhere so we need to include firebase.js i'm going to say script and we need to include it after we initialize firebase right here and we can include it before the actual script.js so you need to be careful on the actual in which order you put it in put it in so go to script source papa i'm going to say firebase.js save that there we go so now we have firebase.js in there which has the configuration file as well as the script.gs and now if we right click on this inspect element console oh see we don't have an error but we have a weird something it's like nm it's a delicate it's a fire star has dogs it's like a weird data you see that right it has got like a weird data right so well when i say about weird data what is the data well here's how it's going to work let's go back to script the gs all right what's going to happen is basically we have a query snapshot that's the query that's the actual the the data that we get from here we're going to loop through the query snapshot using it for each loop then we're going to update and showcase hey what is the id of the document and what is the data for that id because why if i go to my firebase this is how the documentation is telling us to use it the doc.id then dock the data this right here represents the actual id of the row element this is the actual data for that element okay let's save it let's go back to our amazon right click inspect element oh console oh look at that we my friends have got some data this is the idea of the actual data object the one that we showcased and this is the object guys that is it all right maybe you can also show it in the fire store nuts that's right so if i go to firestore here it is you see it says p7 p7gl that's the id the same data is going to be if i inspect element console right there gl so it's coming directly from the database that is so snapshot guys is basically making a snapshot of everything you have in your firestore and then looping through all of the documents all of the items that's right that's how you take a picture yeah by taking a picture click click click anyways right so there you go so we've got that okay we've got the data which is great right because we have we have this doc data that's all gray it's all it's all good and dandy but of course we're not done yet because now it comes the hard part we need to actually use something that's on the data well let's actually use the data we have the doctor data when you do first number one create the actual item so right let's do let items i'm going to say this in an array is equal to an empty array for now okay then when we are looping through this when we're looping through this i'm gonna do the following items dot push items.push right open up the parenthesis and what's going to happen is we're going to push an object into this array right and here's the object the first this object has an id of doc dot id comma and then this object has an image right here doc dot image oh two not duct id but dot data no yeah it is no that's right it's right that id dot data dot image right then we have what name so now we have donk dot data dot name you see we're grabbing all the data from the document that we got from the firebase then we have what we have um image name we have make doc dot data dot make comma what is the last one that we have guys reading okay this is what we have doc dot data right dot rating oh and one last one's gonna be price so price the doctor data the price oh that's a lot of properties there's a lot of properties guys you see we're grabbing the properties and so now if i let's take a look at it so now after we push all this let's console the console load the item so console.log items items boom right let's take a look at it right click inspect element console array oh look at that id make name price rating everything is right there you my friends have got it you see that's literally all we had to do right all we had to do guys that's it yeah right and now we're getting the data from i know from the database right that's it goodbye have a good day so guys now that we have the data what do we do with this data actually i'm really curious what you guys think here in the youtube chat yeah so let's see how because this is the logic of the app right so um your script the js is working once your index.html loads up okay so get items being called as you can see so the items are all getting retrieved from the firebase and then what we still don't see anything in the front end right what do you guys think what do you guys think put it in the chat anybody anybody having any idea buddy hey be an idea well okay basically now what we want to do is we want to take the items we have here and show them in the actual database see or show them in the actual html that's not going to be the hard part that's right samir show the linux index.html and this is where we're going to create a function and what should we call that function i think we should call it generate items okay and once we generate items guys what is the data that we need so what do we have to give as an argument well i think it's items jesse definitely items so this is the thing guys we have a function we want to call it a function called generate items and we give it an argument of items that said we got to of course make that function that's right let's call it again function boom generate items guess what takes one parameter now i'm going to call it different parameter okay so items and once we have items like nas said we have to loop through the items okay so items dot four each item arrow function bracket open because now i'm going to do something with each item what do we want to do with each item remember when we let me go back to index.html in the index.html remember we were in the main section deals correct right here main section products right here right exactly main section products that's right nice and as you can see each main product is actually the item that we're talking about so so there's actually there's actually two ways to do this jesse okay okay so one way to do this is going to be that we simply just put the html so let's take a look let's go and just test this out okay i want you guys to see here okay so look think about like this this is the html and i'm gonna use this html to put it using javascript just take a look at this i'm going to copy this whole thing okay copy pasta command c and and that's it let's go back to the gs the cool thing is here is the following i can do let items html okay and this is a really cool way to do to do using using vanilla javascript guys this is so cool right i'm going to loop through every single item and then for a single item i'm going to say item is html right plus equal to i'm going to use something called backticks they're called string literals right right here and then i'm going to use to paste the whole thing in that's exactly oh so you're going to concatenate you're going to paste it next that's right follow up to each other yeah that's right so i'm literally pasting the whole html but this is this can only be done if you use backticks be careful guys back ticks if you use normal quotes like this it's not going to work you have to use backticks and that's found on your keyboard somewhere on the left hand side right here on the corner right near the number one okay so you can do shift that one okay so back is our stream literals and what they allow us to do they allow us to kind of use a lot of things well the biggest thing allows to do is they allow us to switch this data out and actually use data we get from us a javascript object like item here so you can see right here she has item and then she's placing item.name into the actual text that's right then she's going to place item dot make into the actual text then she's gonna change the uh keep the stars there jesse no sorry okay just change the number change the number right here right there and the item.rating is going to change the price right here as well and that's going to call item.price you see that's right and that's it but it gets even better because then look at this what about the source well the source jesse right here right let's change under the source of the actual image jesse yeah yeah yeah this one here you can do the same thing again you can do boom that's right item dot image and the image again where's this all coming from because remember if i did console log of the items here right i do console.log log items right items i just want to show you so you guys can see it okay all right inspect element and this one console boom console array one what do you guys see right all this data and so this right here is one item okay and now what i'm what we're doing here is we're doing the following here this image is gonna go into here okay this make is gonna go into here hey this name it's gonna go into here hey this price is gonna go directly into here and then this rating gonna go directly into here do you see that yes or no right and that's it guys right and so because of that we've we're creating this html dinah makely dynamically all right and now and i want to add something to this by the way guys because the price is not just going to be number it needs a format of course okay so you can do that really easily in javascript but you can call you can use something called numeral we actually need to import the first gesture you need to import numeral first jesse oh right yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah oh let's do that let's do it a little bit okay yeah okay let's do that later yeah yeah so that's right so good so then what i'm gonna do once we loop through this which is all good all good and handy we need to replace this html with what we need to replace whatever is inside this main section product with the html that we generate so for example i'm going to go to main section product right let me say the following outside this for each loop okay i will say document dot query selector selector okay i'm going to select the element dot main section product the inner html is equal to what guys what do you guys think put in the put in the chat what do you guys think what do you guys think here at line 25 guys items html that's right so now what i do items html save that my friend and then that's it look we got ourselves the array that's looking good and let's see if we actually get the general item let's go ahead and remove this console log we don't need this anymore this generate items right here is being called through here this items gets the data and then we actually create the items using html and so now if i simply just go oh look at that this is the data that's coming directly from a database guys directly from a database because that means if i simply just remove if i go back to minus html if i remove the whole main product thing this whole main product right remove it so there's nothing inside me such a product save it look it's there because why it's in the database so for example right that's right if for example i want to add a new document let's just say i want a new document i'm going to say image image let's just add a new document here guys ready let's do it right now let's join title switch copy image address paste the value here add field name also nintendo yo switch okay yeah field make make nintendo rating uh 290 waiting is gonna be two four point seven two ninety minutes uh it's a high ratings make it also into a number let's give it a 290 number save right so now we have two products and now if i go to my amazon and i refresh it oh you see it's right there but you can see now this tells us that oh doesn't work you know it doesn't work very well you know because now we have two products so we can fix that really easily if we go back to where if we go to main section product we just simply change this right here main such a product to be flex save that and that's it of course right and then let's go ahead and maybe add a margin right to the actual thing so if i go to back to my script.js let's do a margin right on the actual main product so mr5 save that oh you see now it's spaced out very evenly you have this item this item and this is coming directly guys from a database nowhere else how cool is that that's pretty sweet that's pretty awesome all right we've got ourselves the main product all right beautiful okay all right beautiful the next thing to do is let's go ahead and actually make this add to cart button work let's add the card button all right so that we actually add card items all right jesse you want to get started on the add to cart button yeah for sure oh you okay oh yeah jesse her camera just went down just oh my god i'm here still is she alive yeah it just is alive jesse didn't die no no please not awesome so where are we at now we have generated the items guys isn't that cool so i would say hmm what's up next well like i said we want to make sure that we have that to cart we're gonna make sure that the card is working yeah if we add something add to cart we want notification at the at the top that orange cart we want that to you know give the number of items that's right that's right plus we also want to if we go to our cart we want to see the products that we added to the cart that's right right here which we don't see right now no because this is static okay well we coded up yesterday that's right exactly hey jesse yeah i was gonna say okay now i guess i'll just continue okay so then what's gonna happen is we have the add to cart guys okay um now the hard thing understood we understand is we need to do something with javascript in with this button and react.js this stuff is pretty easy to make that work because you're just buying the actual thing but unfortunately with javascript is not as easy okay with vanilla javascript but this will show you how this needs to be done when you go underneath the hood underneath the hood this is actually how react gs works so in order to make this fully work it's going to be a little bit more tricky than we thought all right and how is that the case well let's take a look at it we need to make this button function when we click add to cart we need to know what card to add or what item to add but it gets a little bit tricky because how do we get this data once inside the html the data is inside the items right the actual items which is an array so to fix that we're going to create an actual element check it out okay and just pay attention here just pay very close attention don't worry so much not own documents or available own elements html element create element okay and this is an element going to be a div element all right document not this is horrible right there okay document underneath that we're going to say hey you know what doc that class list we're going to add all the classes of the actual main product dot class list dot add i'm going to add all the classes again this is using javascriptionality i'm going to say hey you see just how we have main product we're going to add the main product inside here so main dash product comma then we have mr margin right five right and then we have what um honestly on that that's pretty much it i want to say yeah that's it i'm identified that's all the ones we got so far so to create this document right it's nothing so far because all everything else is still working but here's the cool part inside here i want to say doc dot inner html is equal to the following also backticks we're going to take everything that's inside here this div product image right command exit cut it put it inside the dock yeah so we're going a little bit deeper guys it's going to be a little bit harder now but that's okay all right let me make sure that we have that okay there we go so now inside here we have that we create this div we have inside that we have the product image you know the product name all that stuff that's looking pretty good but what we're going to change now that's going to make this whole thing worth it is actually going to be the add to cart because you see how we have at the card is just an html element which we can't really do anything right now because to a string we can't do an event listener to a string all right so i'm going to default i'm going to say let add to cart element and i'm going to create a new element i'm going to say document dot create create element boom i'm gonna say this is a div okay all right and then i'm going to add all of these little uh kind of class list to it separately so i actually have this html right here or this javascript here so add to cart element that classes.ad the same thing is did it here we're do we're doing the same thing here i can copy and paste this oh what happened here there we go i'm going to copy and paste this for you guys so you guys can have it inside the zoom chat boom right there and that's it okay now we're not done yet because we have this add to cart element that's all good no problem right then check this out what we're gonna do is we're gonna say hey you know what the inner text this one add to cart element the inner text is equal to add to cart basically we're replacing this whole div as a string to an actual html element all right and this is where it gets really interesting because now look at this i can say the following doc which is the whole main product which is this one doc dot append child add to card element right oh good nothing crazy right nothing crazy but it gets even better because now look at this i say document remember this right here query selector i'm going to say document the query selector main section products that append child and then append child the actual doc which is this whole doc that we just said right here boom a pen child save that we can remove this inner html stuff save that and look it's there right we have add to cart you know right and so forth why do we have multiple out the cars because we have this add to cart it says html and we also have it here so let's go ahead and remove that save it and right there it's looking pretty good the same as before and so i know what you're asking probably at this point like nas didn't we have this before why are you telling us all this complicated stuff with the you know create element and and that's it well there's a few reasons because now i can go back okay because i have access to the actual element i can create event listeners you see it looked the same as before but before just a string this time it's an actual object and i can work with objects but i can't work with strings and so if i that's right if i go ahead and do this and i say hey add to cart add to cart element dot add event listener this allows us to add an event click listener i'm going to say on the click of this button comma okay i'm going to create a function like this boom and inside the function i'm going to call a function called add to cart and i'm going to pass in the actual item so the whole item data which is this item data is going to go directly into the add to confessionality and we're going to create the function at the card right now function add to cart boom of course it takes in one item save that that's it and now i'm going to console log right here console.log right add to cart clicked and then i'm going to show what data are we actually passing in console.log item boom now here's the cool thing add to cart is there beautiful add to cart is here let's see what's going to happen inspect element console log click add to cart oh look at that add to cart is clicked and here's the data that we clicked we clicked on the nintendo switch because i can now get the data i can pass it into our database okay otherwise i wouldn't be able to guys i cannot just pass in a string of html into database and then let the database figure out hey i'm gonna use this data this data and this data it does not happen i have to use actual data like strings you know right here like numbers that's why i had to create the whole create element thing otherwise i wouldn't be able to do it okay does everyone does that make sense guys i know this is a little hard to grasp but it's it's something we need you guys need to understand kind of sometimes okay because we now have this okay we have we're getting this data inside here we can do something with it okay and what can we do well let's figure out how do we actually add data to a firebase database so let's think about it so if i go to add data right here but we see it says add data that's exactly how we're going to do it but we're going to do a little bit a little bit differently because i'm going to say the following i'm going to say okay so db the collection the collection okay i'm gonna say you know i'm going to give the collection called the cart item card items okay that document so i'm going to create a new document that we're using with the id of item dot id okay so i'm going to create that right now so let card item db the collection id so i'm gonna do that right now actually let's do that kind of like this i got id and then i'm going to do um dot document dot i wanna say set data id i'm gonna do dot set right same thing to set the data and now here's the data okay the data is going to be what well first thing is going to be image right item.image that image comma then we have make item.make right then we have name item.name thank you jesse rating item that rating that's right then we have right uh quantity and already price but we also have to include the quantity remember how much quantity are we actually giving it right well let's think about this right let's do a quantity oh jesse a zoo quantity of just initially one we click add to card we're just any quantity of one item that quantity yeah right there that's it right set the price we have the rating we have the name make although that the question card items that dock item id and so forth all right but this is where it gets a little bit trickier because what i want to do is the following okay i'm going to go back to my uh amazon application inspect element and then let's test out what's going to happen console add to cart nothing all right well hold on let's go to our amazon database oh we have to make the collection of card items um not necessarily actually not necessarily necessarily because let's think about this card item dvd collection card items let me remove this portion right here that's set um id let me try one more time was it not add let me try it nothing let me try it one more time let's go inspect down but on this one console i think it's because we need to use dot ad so let's do that add oh let's do that add like this but i want to use a specific id so i kind of want to do that document item that id let me see so log oh are we give the item id or we giving the item we're giving the whole item oh yeah no the whole item so let me see so we're gonna do uh yeah console.log item when we click on it let's see okay amazon inspect element on this one console add to cart okay so it's adding to cart it's actually functioning but it's not doing the way i kind of want it to work mainly i i do think that that we need to add a collection called card items otherwise he doesn't know to which collection to add a document correct yeah i think we're going to do okay so in that case otherwise we first have to make a new collection joe you're doing that's good joe i like it that's good that's good so you're right so let's see so at first i want to just show you guys what if we did it just simply this way just that ad okay so i just said simply did that add that ad just how they have it here okay command c you know oh let me do this let me see hold on add to firestore with a with a custom id let me see so the duck and that's set so right there did we like collect the car items that dock let me see that should that should still tell you where that dog but then you're giving yeah you have yeah dog item id the dog item does id and the make and then you can use set if you like probably let me see the set that should work actually i'm not sure what that looking let's see command c let's see inspect element oh console yeah database nothing am i looking the right yellow base by the way oh it just didn't refresh oh it was working the whole time guys look at this i know i'll come on fire but i do think it's because you added the doc item id and no it was there it was there it was there the whole time actually oh so yeah so look we are creating a new document specific id which is this id28m and then we're sending the data for this right and so here it is it's showing up right here guys okay right here which is perfect exactly we want but of course here's the issue when i click add to cart here guys the issue is it's just going to add one quantity it's gonna it's gonna replace that one thing again and again and again look see look we also have another and again it's always gonna be quantity one but shouldn't we if we for example if i click add to cart shouldn't it add the quantity one plus one plus one plus one can i get a thumbs up if you guys agree with me on that one yeah right so it should be plus one on the quantity that's already there but here's the question what if the iron item does not exist inside the card item what if it does not exist this is weird well you have to check first if it's new that's right so you have to be a little bit smaller now at this point that's right right so what we're gonna do is a little bit different now we're going to grab that dock right here okay listen up we're gonna do card items i'm going to say let card item ezekiel do the clutch the card so basically we're going to grab a specific card item based on the item id okay we're going to say card item dot get right they're just gonna get it and then that then on the card item and then we'll do a function right like this now there's a lot of complicated stuff but don't worry we'll do doc okay and then inside the dock a few things we can do we can say check the following we say if doc exists dot exists basically if it's if that already exists right meaning we have already added our first quantity to the cart then what should we do what are we going to do plus one on top of that if you don't want we will do a card item dot update right the update that update i'm going to say update the quantity we'll do quantity right quantity and we're going to get the current doc theta right there the quantity plus one plus one right there you see so we're gonna up if the basically if card exists it's like this right it's like this kind of like this if item exists exist right add quantity to t to current one otherwise otherwise create a new card item okay that's the functionality that's the pseudo code and that's it guys so we have the if doc exists else meaning it does not exist yet it's a new one that we're going to add i'm going to say caroline.set like this boom boom card iron.set the image the make the name the price the rating and of course it's going to start up with quantity one but once it's there it's always going to increase the quantity plus one plus one plus one you guys got it so let me go and save that and let me show you guys how that works so at the cart let me see let's look at this now the quantity is one two you see right there let me show you i'm gonna show this to live to you guys i want you guys to watch this portion right here watch this quantity as i increase it on my end three four five six seven eight nine a ten that's a lot of nintendo switches how cool is that you guys did it it is now in a database and that's it right and if i add a new idea for example this is a macbook pro right look at the cart you see it just appeared right here and now this one started out with a quantity of one that's it right so again add the card one two three four five six assembly and nine and then you see the quantity is now increasing that's it my friends so we've done that and that's pretty pretty pretty much it which is really cool let me go and remove this set because we need a set right here right here right save that and our active card functionality is now working and it's working pretty darn good so now what we can do now we have the add to cart we have the generate items regain the data from there just see what's next jesse tell me hmm what's next what next what's next where you want to write that notification function or shall we go to the cards html let's make this notification i can work awesome so that means so what does that notification actually say guys put it in the chat what does it say what does it represent i want you guys to start thinking about that what does it represent it represents the amount of items that we have in our cart so the amount that we added the total amount correct so if that's right monique exactly monique number of products in cart very well so let's go to our index.html okay and let's look up that um that card and as you can see on i believe on line 45 nas has made that beautiful comment there of card icon okay and indeed on line 48 that's exactly where we're going we're going to be working with that because here look we have a hardcoded one there but it should not be hardcoded right it's dynamic because it represents the whole um everything that's inside of the items so nas what's the functionality we should write for that so let's create the functionality to actually get the card items right get the card items that's right and get the card items and then let's try the functionality to where we can actually you know generate that amount of quantity now because we're going to be smart about this you see we have card.html that both have the same data cut the html index.html right they both have the header we're going to create our own javascript file called called head.gs so let's do that header dot js all right and this header.js is going to be shared by the card.html and index.html all right that's right so let's go ahead and do that let's go ahead and go to index.html and let's include head.gs so inside here we'll do script source is equal to header dot gs boom done all right so let's include instead of html and it's included inside this card.html as well in both pages guys that's right so let's do it like this script source right cart um header dot gs boom in both pages all right yes that means now let's go to header.js and the first function we need to create is going to be a get card items so that's right thank you jesse so get the card items and this going to get the card items from an actual database right and what is that database guys guess what the collection that we already have that's right cards items by the way guys make sure that this cart items is exactly written the same way as the collection is called in firebase okay otherwise you're not able to retrieve the data okay so that said let's continue again i want to know what's inside of the fire store i want to know all of the items that are inside of it so i'm going to say on snapshot that's right but look at check this out on snapchat is a little bit different than what we had before if you go to script ngs you see before to get data we used the get.then let's try that right now and then we'll talk about what on snapchat works so let's see yeah that's a good one that's a good one so first get okay which is a function first function and then then so we're going to wait whoops not touch event then okay and then we're going to wait what was it quick query snapshot that's right so let's do query snapshot query snapshot right here okay that's right and just how we have it inside here this for each loop okay inside the for each loop let's go and open this up uh one second jesse one second so be careful with that because i need to create you to put into a function oh sorry sorry right so inside the query snapshot we're going to loop through that just how do we we did it before it's no question i'm sure that what for each right here oops not like that four each right for every single element we're gonna grab the dock right right there and of course we'll get the card items but now let's be smart about this because look we have the quantity you guys tell me how do we figure out what is the total of card items inside the card because it's definitely not two what is the equation we need to use to figure out what is the total amount of card items inside the card it is not two what is it guys well the first we have 14 nintendo switches okay i think how many macbooks do we have which is going to be 10. so that's 24. that's right but what i do know is that with the query snapshot we made a snapshot of all the items so we're looping through each document so nintendo switch and mac and from each document what do i want to get guys yes the quantity that's right so i think we should make like a variable called count total count and of course we're always gonna start off with zero so total count indeed and then we're going to say total count plus equal to the quantity of each document so doc data parentheses dot quantity so that way when we're looping through all the documents we're adding up the quantity of each document each card item makes total sense right that's right then of course now that we have that number next thing is of course that we have to do something with that number but let's first log our total currency of our calculation is correct let's go and call our function called get card items save that inspect alma on this one so guys the answer should be here 24 let's go michael there we go that's what i'm talking about are you are you in the library again nice beautiful so we got that right it's 24 because why we just added the quantities together but of course now we need to we need to do something with the quantity right we need to actually change this data right here that's it yeah so just like we were generating card items or you were generating items we also you know need to set the counter so indeed set card counter and then give it total count that means also we gotta write a function called set card counter of course with the total count okay and now let's look in our what was the class again where we had that little one where we had that heart coded let me show you a card icon it is called cart item number aha here guys on line 49 cart item number so we're gonna get this class and look now we got the hardcoded one inside of there but if we go back to our header.js let's add that in and say exactly document.queryselector and we're going to select the card item number class and then we're going to change the inner text tada with total count that's it guys hey let's go hey that's a big win for us look 24 just the way it should be 24 right now in the um index.html you can remove that one okay you can remove that one so if you go to any html remove that one we don't need that anymore sign up baby let's go let's go let's go back to head.gs okay and let's see this so so let's take a look at this okay so if i an add to cart let's do add to cart see i click add to cart but unfortunately it's not showing a new number i need to refresh in order for it to show 27 because i clicked it three times oh yeah so it's now real time right now but this is where it's a trick for us we need to make a real time that's right we need to make a real time so the real time here nas is that you know when we're adding something to the cart when you're pressing that button we said right we're gonna add something to firestore that's right and then the cart is actually getting the items from a firestore however it only does that when you refresh the page again but firebase can help us a little bit with that right that's right so let me see db okay let me see you guys you can type jesse go heck i'm going okay so db collection and now i'm gonna use the on snapshot function of firestore so instead of first getting it and then waiting for it till i got it i'm gonna remove this okay i'm gonna remove this line and i'm gonna say on snapshot and not query snapshot but just snapshot okay and that's it well no that's not totally it here snapshot for each now what is it that snapshot does on snapshot has something called an event listener so when something changes inside of the firestore firebase knows that and then it will just pass the data through and say like hey something changed in my database maybe um you need to keep track of that so to give you a technical term guys this is called the websocket all right this is called a web socket when you on snapchat it's going to create a websocket so really what's happening here is add to cart and you click on that that adds something to a database because we have a consistent web socket it's called it's like you have a kinesis for example it's like me have always having you know you guys ever used uh for example anybody use those cups you know what they're called those uh listening cups you know those like uh what are they called yeah one cup you put a strawberry you have a rope in between and then you can listen to somebody yeah yeah yeah yeah that's right that's right that's right that's right so right every time we do we do that right between the cup it's like you're always listening to the database that is what's called a websocket you're listening to any changes inside the database so what's happening here when you click add to cart because we're using on snapshot this gets triggered every single time something inside the database to the car items trick gets triggered and then that sends the update back to us to the amazon clone that's why you can do on snapshot here and then you can do snapshot.docs for each and this will always be updated every time you change something in a database all right so let me show you how exactly that works let me save that oop save that if i go ahead and click add to cart i want you to pay attention right here everybody ready pay attention are you guys ready for this you guys ready zoom in zoom in though uh well if i zoom in then it won't you won't see the me click at the cart so okay pay attention to here three two one are you ready let's see oh look at that boom boom boom boom boom it's working automatically this is a realtime database now you have a realtime connection to the database now so nas can you show that again with the coding screen oh there's no coding screen it's there no this one it's right here right jesse on youtube it's just our facebook i keep always forgetting about the youtube thing all right oh man sorry youtube so guys right so like i said we have the card items right here right we have the snapshot because we're using snapshot it's got it's like always having the connection right and if i do it again at the card one two three four watch this one two three four five it's always there and it's always going to be updated who found the really cool guys i always find this really cool anytime this is a realtime situation i'm always like you can do that you can do that in coding of course you can't coding is cool so there you go rehearsing is the best we have our functionality to add to cart okay so before we get into the actual card that you asked the card you know the actual card um app i want to do something really small right now and i wanna you see how kind of right now when i make something smaller it's kind of like um it feels weird you see how this goes outside the box right there you see i don't like that way too much right so let's make that change right now because i want to make it clean all right so to make that clean i actually want to make sure that this whole thing grabs down to the bottom okay we'll make sure it wraps down to the bottom so let's go back to our inner html all right let's go to our categories right there cyber uh not those categories popular categories which are uh da here these categories right here right and what do we know well in order to make sure that it actually fully wraps around we're going to say flex dash rap boom see when we because we decreased it wrapped the second line otherwise it's just going to keep going one line all the time like strap but because of that problem because there's a padding on the left hand side of every single element see when i when i look at this here there's a margin left and every single element let me show you here see margin left six right here that's a problem and so that's why it's pushing it like this and to remove that we're going to actually do a margin right six out of our module left check this out i'm gonna say like this so i'm gonna say like this so uh i'm gonna select this one i'm gonna do command d or ctrl d to select multiple things boom boom my trick that's right i know jesse's trick exactly we'll call the jessie's magic mr6 boom then that work out oh mr my bad save that right there you see now it's a lot better right we have space on the left hand side and we have here let's copy this to mar sj6 and let's make sure to put it all the way on the first item as well because the first item has nothing so let me go back up this first item does not have any mr6 right boom a little bit cleaner now much better but we're not done yet guys not there yet what i want to do now is i want to uh add a padding top you see how there's no spacing between right here do we see that everybody well let's add that let's be smart about that okay let's be smart about that to do that we're gonna actually add a margin top i'm gonna select mr6 again command d command d command d command d command d that way i can type all the same time much faster so multiple cursors multiple cursors that's right right and then what i'm gonna do is i'm gonna go to the left hand side click space and do a margin top dash five all right and that added everywhere you see it added margin top right here right here right here to every single element so i'm going to save that now and look at that there is no margin inside here but this created now too much spacing around here which i don't like which we can remove right now all i have to do is go to the uh popular categories and just simply remove the margin top 10 i think that's on the main section probably no no not here no this one module 5 that's under categories save that boom and look at that our popular categories are now much much cleaner than before would you guys agree with me i mean i do i don't know if you don't but it's too bad you know if you don't and if you make the screen smaller nice it would also have to be yes let's go it's becoming now a lot more mobile friendly and that's our goal is to make this a lot more mobile friendly so now look is that cool guys that's really cool we've got our index.html that's all working very well let's get to the hard part and let's work on the card jesse okay are you ready i know what is the hard part well we already did a lot of hard things so we added a functionality to the add to cart button uh once we had that we um had the notification functionality okay that is showing up in our card but now if we go to the cart page we actually want to see the items that we added correct so in our car touch html yesterday we already added i believe the nintendo switch yes but guys remember this one was hard coded yeah fully static fully static so let's make it dynamic okay let's do that jesse and as you can see the part that that knot is highlighting guess what that's the part that we're going to be making um dynamic and that is one card item one card item and guess what guys to what class are we adding card items boom cart items line 111 okay so let's do that and let's open up and make a new file called car.js so new file card.js book okay and of course the card.js where do we want this file to work guys in our card.html correct so let's link that up at the top okay so just like we linked up the header.js i'm just going to copy that one and i'm going to boop paste it in and here i'm going to say card.js like this okay uh that's it right now i'm not forgetting anything right yeah that's it the only thing we need to now import besides the gs is let's import the header.js inside the card.html to make sure that's all working all right so we got the header how the gs is centered html which is all great that's great and dandy uh but it looks like for some reason it's not updating this number i'm not sure why that's the case let me take a look at it here the card icon card item number that should work it still says want for some reason had that gs actually i know that's not working because why we don't have don't have any firebase that's right that's right so let's go back to our index.html and you see all this firebase database let me go and make this a little bit smaller so you guys can see it better let's take all this firebase stuff and it kind of starts from here command c i'll paste it in for you guys as well okay paste it for you guys right there yeah guys so make sure you have the exact scripts with the gstatic.com okay like we got different documentation yesterday and then you're gonna add your firebase.js file yeah you may have to make sure that you add that beforehand.js because because header.js uses firebase to actually get the data right so we need to include this that this right here we also need to include firebase.js because firebase.js contains all of the configuration files right so we'll do right there just doing it right now firebase.js yeah header.gs and the card.gs is right here so save that and boom you can see right there 409 is right there just how it should be we can now go ahead and remove that portion where's the card icon card icon card dash icon let's remove that from one second here this one we don't need this one anymore save that one and that's it you see now it's just 49. and now we can focus on actually making sure that all of this stuff now works the way it should be and they're actually coming from a database and not just static hey let's go so let's write some code in our cart.js file so let's go call the gs and let's write some code right as if we don't have run any code in it before well we're going to write functions again guys so by now you know the drill right so what are we what do we want to show at the cart page tell me we want to show card items right so like before we wanted to show items the hot deals now you want to show cart items and we wanted to make dynamically you want them to get out of the database okay so whoops function get heart items i'm going to name a function like this okay and of course um we're gonna be using firebase so we have everything already imported so i can just say collection cart items and guess what what do you think we should be using should we be using the query snapshot or the on snapshot and why let me know in the chat guys what do you guys think honestly what do you guys think snapchat because what if we update something what if we update something right we put it so on snapshot is like i said and now snapchat is going to have a websocket right it's going to have a live connection to database that means any update that happens to a database is going to update our application right away if you just do you know if you just do uh you know get that then it's just gonna say hey no let me just get the data currently that currently there is that one time when you reload when you load the page but then if we do you know do any updates it's actually not going to reload because it does not have a live connection to a database right well on snapshot does that's right samir on snapchat has a constant connection and dynamic updating that's right samir so i'll do it right now so i'm gonna use on snapshot and again guys it's making a snapshot of what's inside of my firestore okay so you want to map through that okay so snapshot.docs for each and then we're gonna do something with each dock of course now we want to get each dog we want to get each card item so we would have to store that somewhere right in order to get that so let's make here let's make an array and let's call that cart items okay and when we're looping through our fire store you know based on the snapshot that was made made we're going to say oops items that push and inside of here we're going to push an object inside of it with these properties doc dot id and remember you could like you want to do it the short the short way or the long way let's do it a long way for now jesse the long way okay got it so remember this guys we're gonna add all of the properties of the card item inside of there so let's check what we did at script.js because i wanna have exactly the same here like this these so i'm gonna copy paste this go back to my card.js okay and boom this is what i need so just to give you guys a little bit of an update okay what are we doing here well hey you know what we'll say hey give us the latest snapshot kind of like hey take a picture of our current database from card items for every single item that we have inside here we're going to loop through it okay and we're going to add it to our array right here but i want to give you a little bit of a cool trick guys are you guys ready for this you see how we always have to do this whole thing every single time you see how we have to do is to do like image name make rating do you want to keep doing that like it's that's that's probably tiring right all the time to just keep doing the same thing over and over again am i right give me a raise of hand if you don't do that because i definitely don't right i don't i don't either so we can actually remove all of this and make it shorter and here's here's how because we can do dot dot dot dot data and that is it mic drop why this is what is this called this is called i call the underwrapper red operator the spread operator is going to take any data which is all this data that we have right here and it's going to put it kind of like unpack it it's kind of like how you have a package how you have a you know present you unpack the present and you take out all the items from the present and you you lay them out yeah the same thing happening here is taking out all the items from the doctor data and laying them out and putting them inside the card items that is it dot dot dot is your savior right there so now that we have this let's log the items that we have console cut lock card items okay and of course we have to call the function because otherwise nothing's gonna happen okay so let's do inspect element on here right here console right console right there all right it's got two items one and two that's it guys it's all done so all done though all right cool all right what's next so again guys once we have the data what do we need to do with the data we need to generate it this is always the hard part this is the hard part guys for sure this is the hard part that's right that was the hard part this is the hard part because now you gotta add it to your html and think about what is actually going on okay but that's okay we're just gonna guide you through this okay so generate card items start at the start make the function okay function generate card items and we got the card items as an argument here okay that's my function definition now we can do this a few ways and before now i showed you you can either concatenate the string in your html or you can do it the other way um we did after with creating the elements however this time it's a little bit more complicated so let's break it down into steps okay so let's start off with this and first say like we did before say let items html and let's make this an empty string like this okay then we're going to loop through each card item so we're going to take card items for each item okay arrow function and this is going to return boom it's going to be a it's going to be a concatenation too so here items 1880 can i talk anymore items html plus equal backtick backtick okay and we're going to type inside of the backticks i don't see you typing jesse no you didn't see me typing nope here no hello okay so i'll just do in that case okay okay so we're going to go ahead i'm going to loop through every single item which we have done right now cut items down for each and then for each item which we get from here we will add the two html so i'm going to say items html html plus equal to oh there we go now it's there working okay all right now it's working jesse go ahead jesse now oh oh no i haven't there okay okay okay good good so card items we're gonna be looping through okay and um so let's go back to our card.html because that is where we had the card items right that's right the card so line 115 okay that's where we have all the card items and guess what we want to have yes we want to have one card item boom so if you can copy this nas yeah i got it awesome right and we go back to card.js guys and now it's going to paste it in here html plus equal to back to tactic tactic command v boom boom done awesome done and done so and now guys like we did before right because we're using backtick backtick guess what we can use something called template literals okay so here for the image guess what dollar sign bracket open image okay and we're calling it here item okay so you can always call this also cart item if you want um you want more clarity but we call this item now okay so it's gonna be the same this one's gonna be item that name or not that name but bracket okay item that name okay here it is gonna be make right and this is in the total cost for first i'm gonna say and then we're going to go ahead and change up the price so we'll do right here item.price okay let's go ahead and save that oh jessie just suggested just adjust it just adjust it just adjust it to see okay oh hey i don't see your code i am the price right and honestly that's pretty much it at this point the only other thing that we have to do is do the quantity so let's go ahead and change this one to quantity right here item.quantity quantity save that that's looking all good and that name and that make and then add that image and we're all pretty much good look we have the images it's all looking great nothing bad so far so now we can replace html and actually put that into our what into our card.html so if i go back to it right if i go back i see my card items what class i'm going to use to replace the inner html4 you guys tell me you guys tell me you guys should notice by now we've done this with the normal items what is it what is it it is going to which one card items right here that's right yes the card item so i'm going to copy this one go to card.js and i'm going to say document but this needs to have an outsider for each loop i will say no not inside here jesse outside the for each loop okay yeah it makes sense i'm gonna say document that query selector right that's something that card items all right dot what for each or two what we're thinking about for each inner html is equal to what is it items html right there so i'm going to say items no isn't it inside of the for loop because we want to add each item to the card items no actually it's fine it's fine like that it's fine yeah okay it's fine actually yep so there you go guys look we have 14 nintendo switches 35 apple macbook pros that's pretty good but of course one thing i want you guys to pay attention to is this total cost is a wrong cost so when we do ironed our price what should be the actual price it should be what item that price times what you guys tell me oh it would be nice though to have 14 nintendo switches for the price of one yeah tell me what is it i'm waiting for you guys waiting for someone to be in the chat to say that to it come on what is it what is it what is it what is it what is it that's right times the quantity i doubt price times quan tt yes save that hey you see oh what happened here i know that quantity my bad item that quantity right there boom four thousand dollars and forty thousand dollars for 35 macbook pros so now you know if you ever want to buy 35 macbook pros it would actually cost you forty thousand dollars guys which is not a bad price tag at all get it while it's hot because it's gonna bon it's gonna be gone pretty soon okay that's like a commercial i like apple so that means we can go to college html guys and we can remove all of these little main products so let's remove this one card item we don't need that anymore let's remove another card item right here boom by nintendo switch right and that's it yeah now it's empty and so what i like to do actually in this case i like to say i shall do like this wait time time all right um cart items or cart items right here no card yep card items from let's get db that's it save yeah there you go look at that that's it guys but of course we're not done yet because now we need to make sure that this kind of stuff works so let me go and remove this stuff we need to make sure that this works this works and this works yeah so what is what are we gonna do to make that happen what are we going to do to make that happen well guys so as you know those little arrows are called chevrons right and yesterday we used those from the font awesome library so what you want to do is you want to click on that arrow and then either your amount your quantity increases or decreases correct that also means that that arrow should have event listener right of click because you're clicking upon it and boom something needs to happen correct so what you can do plus what else is important you need to know which item you click because you want to know if you click upon uh decreasing the nintendo switch you want to you know have 13 instead of 14. if you want to up it then it's going to be 15 or 60. that's right but you have to know it because apple macbook has way more it's 35 right not 14 or 15. that's right so what we do first is we're going to add another class to um the chef front actually that right now so here line 31 pay attention guys we can say data hyphen id is equal to item dot id but why are we doing why we end data jesse why we end data why we have the data why are we doing this because when we add an event listener to this we can grab that data from this div that's right and why do we need that data yeah we need the data because we need to know exactly what cart item we want to increase or decrease that's right because of course right if you guys go back to firebase right this has a specific id and so does this and so we need to know exactly well what are we going to update are we going to increase the quantity for this nintendo or for this apple right and so that's what we need a specific id of when we click on these little icons right here right and so we can do that by simply just putting a data id inside html which we can grab later on and extract it so watch how we do that which is really cool so guys i added item ids on the left chef front and i added an item id on the right chef run so that will you know let us know what item we're going to be increasing and decreasing that's right correct so that said though this is not going to happen just out of nowhere right the chevrons they need they need to know when they're being clicked on so we're going to create event listeners okay for them so let's create a function called create event listeners okay okay let's do that right now yeah create event listeners whoop listeners okay like this and of course now that we want to call it we need to define it so here create event listeners and let's think about this guys what is it that we want to do we want to have we want to decrease we want to increase and we also want to delete those are all things that have to do with quantity right so what we do is let's do this we're going to create decrease buttons okay and what do you think these decrease buttons are equal to basically we're going to grab every single decrease a button we're going to grab it from the html and then we're going to add any click listener on that button but first we need to actually grab it so let's do it right now right so the decrease button is always the left chef run that's something that we know for sure correct so we called it here we called it class chef from left but we can also call it to be a bit more um descriptive instead of chevron left we can call it cart item decrease you see that what happens is highlighting and instead of chevron right we know that this one's always adding something so we're going to call this cart item increase okay like this that said when we're you know going to create event listeners for the buttons and we know that all of the decrease buttons all of the buttons that decrease the amount are d look guys document query selector and i'm gonna say oh i'm gonna get out all of them because look if you have more items in your card you want all left chef runs all left uh cart item decrease buttons you want all of them to be targeted right so that's why you got to use query selector all so let's do this card whoop card item decrease boom like this okay then very easy once you know how you did this for the decrease of course the increase is going to be easy okay just going to copy this paste it and then my little trick you're going to select the d e command d boom you're going to say i n increase so we have now selected all of the increased buttons you see that and of course not only that we're also going to be making the delete buttons so let's focus on that later jesse let's focus on that one later oh okay so that said guys now that we have the increase and the decrease what do you think we should be doing well like i said before right uh we're calling this multiple we're calling this buttons because if you have more items you have more decreased buttons so we're gonna loop through those okay and then for each button guess what we're gonna add an event listener so we know that something needs to be done when that button is being clicked on okay so button dot add event listener and guess what is the event guys what is the event that the button will be listening to click right the click event and let's think about this why are we using it for each loop right mainly reason b is because we have multiple chevrons we have multiple decrease buttons and so for every single button that we have here we're going to create the exact if same event listener but just with different data yeah just with different data so here i got the click okay i defined my event okay and once the click happens then decrease the count that's what we want this button to do and guess what this button hey now we're gonna be using the data set oh shoot what's that data set dot id but this data set is actually coming from where well because we're using data dash id which is right here this data dash id i'm getting the data id html gives us access to that so if i'm going to grab that button right for every single button i'm going to grab the button i'm going to give the data set the way to get the data id is to use button that data set and then whatever you want in our case it's the id whatever it is on here is what we're going to put so if i said if i put here apple i would say here dataset.apple apple understand does that make sense yeah so whatever it says on there is what we're going to grab that's why for sure and now guys we made the we we're calling a decrease count function but we haven't exactly made that yet so it's not going to do anything so let's go to the top of our of our card.js and here after the get card items let's create a function where we're actually decreasing the count okay so decrease count boom or giving that the item id now why do you think the item id is important guys oh no you tell me jesse well if i decrease i want to know exactly which item i am decreasing in quantity of right if i would click on the left chaff run of the nintendo switch i'm going to get 13 instead of 14. that's right right so guess what guys we gotta work with firestore again so i'm gonna say here card item is equal to db collection you guys know the drill card items and guess what we're grabbing that specific id card item by saying doc item id you see that now we got the specific document from the firestore now that we have that we're going to get it we're going to say cart item dot get then okay okay then and once we have that okay we're gonna be checking whether that document really exists okay like this if document exists because it might not exist might not most of cases will because it's in the actual card you know most of the time yeah but it might not so if it exists okay then what do we want to do guys if we want to decrease the amount what do we want to do we want what do we want to do we want to update the card item oh we want to update the quantity but if i um what should my amount at least be in order to decrease from it what does it do because we cannot let the item go down to zero right because that would completely delete it there's no point of doing that at that point we have to make sure that there's more than one card items right now or more quantity that we have to make sure there's more than one so that's very well said so doc dot data quantities bigger than one a and then we're going to do something now we're going to update it that's right now we're going to update it so now we say cart item dot update and we're going to update it with the following we're going to say quantity which is the you know the property inside of the firestore right what not has been making there and then we're going to say we could say minus 1 but that's not really what we want why is that guys why is that because there's no point it's like minus one from what exactly minus one from what so tommy says that's great what you have but you want yours we're now we're going through it so you want to make it a little bit more dynamic and go like this you're saying dot data quantity minus one so you want to get the existing quantity but you want to decrease one of that that's it right and that's it that's it guys so now based on that let's see if it actually works jesse we have decreased count recalling decrease count inside here right all right are you guys ready shall we test this out guys i guess let's test this out log here oh i don't know but i'm just ready to test it out let's go let's say okay three okay two one let's go wait oh let's go hey look at that and even this total cost is decreasing also guys look at pay attention to this boom damn how cool is that huh did you guys enjoy that yeah anybody here confused raise your hand if you're confused pretty much everybody that's great that's awesome but are you learning a lot there you go see so guys we have got the actual chevron it's all working really well we're decreasing the count that is it my friends so now now let's work on the increase the count right let's look at the increased count all right so the increase is not that much different from the decrease okay so let's do it increase buttons i already uh we're doing there again we're doing the query selector oh we're selecting all right chevrons all the buttons that can increase the quantity and here look increase buttons we're gonna loop through those buttons okay button and of course also to this right chef front we're going to be adding an event listener so button dot add event listener and the event is gonna be guess what a click okay and once that click happens whoops once that clink happens we're gonna fire off a function okay and guess what that function is we're gonna increase the count with this function so increase count and what do we need to know when we're increasing something we need to know which which item it is so we're going to give them that data button that data set that i t now okay guys so we wrote we just wrote this okay so now we're going to wrote the increase function because that's what happens upon the click right so awesome increase count thank you nas mmhmm we're going to give that the item id yes and then and again whoops we're going to get um that from first from the database from the firestore okay so just how we did it here we're going to the same thing here exactly and again we need a specific is id for the dock so we're going to say dock parentheses open and feed it the item id now that we have the card item we're going to get it oh get it like this and once we have it again like before we're going to check right whether that document really exists if doc dot exists okay what do we want to know guys when we're we want to add something to um we want to buy another macbook pro what is it that we actually need to do we need to update it correct but we want to update it even when even when it's zero but that's not we still want it right so the condition here should be dot data quantity is at least bigger than zero okay and then we're gonna update the cart like this boom now instead of decreasing or now increasing so what are we going to do guys let me know guys let me know in the chat guys well we're going to take the data doc.data.quantity jesse and then we're going to do plus one on that one guys okay yes that's right plus one that's right like this boom and that's it and so now if we save that let's see so let's see let's see if that works now have the increase count function right here just double check recall the increased count function here we have an event listener and every single button which is perfect if i do this now oh there's wait does it work it works let's go i do this and pay attention to this as well not only this works right not only does this work right right right here no does this work but this works as well and this works right so if i increase the count look at that fourteen thousand two thousand two thousand three hundred three six hundred and we just keep going keep going so we have everything working together beautifully we have six 56 items in our cart i know it's a lot of items guys i mean you know if you if you want the technology you want the tech you know you gotta get go for what you want yeah you gotta gotta go what you want for sure you know life's short so let's now go ahead and work on the functionality for the delete this delete button because of course we can only go to one so if i keep decreasing this number right here right right i just i can't go any lower because there's no point there's no point in me going lower only way to do is now just remove it from the actual thing so let's go ahead and instead of doing decrease buttons we'll do let delete buttons right right same thing we're going to grab every single button from the html that's inside here right like this grab every single button that's inside right here grab that from the html and we're going to add an event listener so i'm saying document document the query selector all right here that's going to grab us all of those specific html elements okay all right and then we'll do like this what is the class name called it's called card item delete right there but of course remember we have to know what we're going to get data from so what's that we need to put this data id also for the card item delete boom save that that way when we click on it we have the functionality too so let's do that right now let's go back to our daily buttons dot what card i delete right here two to two card item delete which is let me see where is it where is the reserve is it it's going to be card item delete right here command c command v to paste it in there beautiful so now we're going to grab all the buttons and i want to show you exactly what's happening here i'm going to console log delete buttons that way you understand what's actually going on when we do document the query to all and i want you to pay attention to this really closely okay so guys listen up please listen up if you're here listen up i will right click inspect that one on this one let me put the right hand side let's go to console put on the left hand side oh right here you see these buttons right here look when i do the query selector all this is what it's giving me we have what we have this one div you can see it's even highlighting it inside our html i have another div so it literally got me the html element i think if it's an object think of an html almond is like a cup right right and we just kind of got whatever is in this cup and we cannot use whatever is in that cup that's literally all that happened the same thing happens when we do when we do what the increase buttons and when we do the decrease buttons right same thing happens there so now what we are going to do is with delete buttons we're going to use them okay then i'm going to do delete buttons right dot add event listener so three buttons buttons dot for each like this right for every single button that we are going to grab from the html right so it's going to be every single button right here we'll do button dot add event listener right there beautiful we'll say click boom and i will say function okay function and now we'll be able to actually call delete count so let's do delete item and we'll pass in the what the button that data set that id all right let's go ahead and create this delete item function we have the increased count ooh let's remove this what is this i'm not sure this is this is interesting let's create a function called delete item function delete item item right here let's pass the item id boom and now jesse what are we going to do inside this delete item delete item functionality jesse well um you want of course to know which item in its total will be removed from your cart right so we can actually ask firestore to hey the document uh the item that i'm gonna give you the id that i'm gonna give you i want that to be removed okay so you can go to um wait a moment so you can either look up in a firebase documentation you know like hey how to remove a document but this is how you do it so inside of your delete account or delete item you're going to indeed you're going to target the cart items collection you're going gonna say doc you're gonna give it that specific item id and then super easy you're just gonna say dot delete parentheses okay and then we're gonna wait for that and that's it we have that delete right that's working all well give you the collection the card item do the trick dot delete and that's it guys okay so now let's try it out that means we're going to remove the element from the from the card items let's shut out right now if i will click this button let's see if it actually works three two one what oh there we go guys it deleted the item that's it and because delete the item it actually decreased the count of here and of course it decreased the total cost right that's here so now let's let's add another item to here let's go back to our amazon that you should let's go back to index.html we should really create a link to go back home let's add a nintendo switch back right which we'll add it to here let me go back to cart and nintendo back right right here let me delete delete one more time pay attention to the card count boom done you see we removed it and so now if we go back again to the html right let's add it one more time let's see boom done it's there that's it guys that's it that's right samir we're gonna we should do an a strap so guys look the decrease is working the increase is working right the delete is working there's one last thing that we need to do to fully make this perfectly functional i mean not perfectly but amazingly functional okay that's going to be this number right here this total count right we need to get hey what is the actual total cost of the sum of the all the card items so because of course you want to know that hey you know what i'm about to spend a thousand dollars on this whole thing right otherwise that'd be pretty bad so we need to create a get total count get to the cost functionality let's do that i'm going to say here function i'll say get total cost okay okay get total cost i'm going to grab the items whatever items i'm going to be given so maybe i will call this function inside my get car items because i have access to all of the items and then i'm going to call get total cost right and i'm going to pass in the items or the card items my bad oh right there okay so let's do that okay let's initially start up total cost with let total cost cost is equal to zero all right let's loop through every single item so we'll say items dot for each for each okay now for each i'm going to say like this dot dot dot oh sorry nash sorry jesse run hold on hold on hold hold on hold on hold on hold on hold the phone hold on so item okay then beside that we're going to do jesse inside that well you want to add the cost of each item so total cost and since we're looping through this yes exactly total cost plus equal item quantity quantity what is it guys tell me times what is the total cost come on it's not that hard what do we add to here to make this work you know it did i just i just said it come on no you did not wait hold on let them say it come on come on guys come on come on come on come on come on no what is it what is it i don't know we don't have the total cost that's right quantity times price we have access to the quantity one times the price so what do we do we have item dot price multiply by item dot quantity and that is it okay and this is your asmr version of the amazon clone okay then what we're gonna do is we'll go ahead and since we have the total cost i'm going to update that inside the whole the whole what inside this thing right here okay so to do that let's go back to covercut.html okay let's scroll down and you can see that this is the actual text that we need to update well to update that we need to give it a certain class so let's give it a class let's say the class is going to be total cost number total dash cost dash number okay you guys ready good total cost number okay are you okay are you ready let's go back to cart at okay prayer selector let's grab that div okay let's grab the div and we'll go and say that total cost cost number i'm kidding that total cost number right that inner text right in our text is going to be the total cost that we calculate save that and that's it now we have the price this is the total cost but let's do we're like this we have the total cost is going to be let's use string literals to actually create this there we go two looney tunes that's right there we go so like this right here let's use the tata total cost command x let's put that inside here let's also use the dollar sign to make sure that we actually use a dollar sign don't tone and boom 5 hundred and fourteen dollars is a total cost so if i increase the macbook pros to what fifty five thousand actually sixty thousand dollars sixty two thousand dollars sixty five let's keep going sixty seventy thousand dollars 73 seventy seven seventy eight seventy nine eight hundred how many people go let's do it right now how many can we go can we go to 100k 100k 100k and we're a hundred thousand dollars officially that's right guys and we have 88 car items and we are buying 87 macbook pros there you go 87 macbook pros that's it so guys that's pretty much it i mean i mean it's not it i have a few few more tweaks we want to do oh look we've got the card items they're working really well everything is showing up the way it needs to be the one thing i want to fix now is i really hate how these numbers are showing up okay do you guys agree with that one i don't like the fact that it's like there's not formatted nothing so to make that work we're going to use something called pneumodo.js so numeral that yes check this out right all right right numero sam is like you need my address i'm in my book pro guys that's right we're sending everybody macbook pros guys just kidding it's not it's not a promise at all we'd be bankrupt if we did that so let's do that right now right i'm going to copy a new.js again this is what was going to help us um actually format the numbers right it's just a javascript library that we're going to use and i will copy this one for you i'll put it to you guys in the chat those you guys who are on youtube just go to email.js and you'll see it in there okay all right beautiful then what's going to happen let's put that inside our card.html let's go to our card.html hopefully you guys can see that and let's put it underneath the header.js actually let's put it inside uh our gs like this oh what happened here nope uh copy fancy but yeah this is bad now okay there we go command c command v and so this gives us the actual numeral gs and in order to use numer.js it kind of works like this right you kind of give it a number right here you see that right there you give it a number and then you say format and then you tell what how do you want to format so for example if i want to format it in a number sign kind of like that then i just use this format so let's do that right now if i go to my card.html right and if i go to let's just say card.js i need to form a total cost i'm going to use the actual the whole thing so i'm going to say like this instead of doing the inner text i'm going to say numeral watch this guys numeral right numeral numeral i will give it a number right total cost dot format right and then what we're going to put inside the format we're just going to put this right here right there that's it oh what just happened i'm going to put that right there boom that's it so let me go and make this a little bit smaller so you guys can see that beautiful and that's it guys so let me go and save this for you let's go back to our amazon go back to our cart and look at that a hundred thousand 253 a beautifully formatted number i love the way that just works right the same thing can happen with the other stuff so let's go ahead and change the number that's here which i really don't like as well same thing let's use the numeral let's go down to where we add that which is going to be down inside the html and this will give the quantity let's also use that here so i'm going to set a sort of item price i'm going to do like this right there numeral format and instead of the total cost we're just going to use item price times i'm the quantity right there boom you see so now we can just delete all this right here save that boom 209.99963 is the cost of our whole situation you see look very clean very nice informative beautifully formatted that's so good now let's now go back to our home page and i think to go back to our homepage we should probably make a link so let's create a link right now because i'm really sick with the fact that we don't have a link let's go to card.html to link our actual um logo right we can just do like this we'll do look a shrek ashraf is equal to index.html boom like that command x and put it inside around the in the logo image boom that's it boom save beautiful right so we just put a link around our uh card image that way we can just go back so if i want to go back now we're back at home and that my friends is it and so now i can actually go add to cart again you see now this increase it to 90 right here let's format out these numbers because again i just hate the way it's being formatted right that means we need to go back to our script.js because again remember if we go to script.js right way to perform the number it's inside right here the item price all right now of course we need to include um that cdn first and numerol.js inside our index.html so let's go into html let's include it inside here and make sure to include before everything else or try to do that and we'll do it like the following cdn cloudflare ajax right here this new number.js and again you can get that from right here okay let's go back go back to here jks right there save that let's go back to script.js right here yeah and instead of using iron.price we're going to do what jesse let's say what we're going to say numeral yes and then item.price we're gonna format that so we're gonna give it a d format and then single quotes dollar sign exactly zero comma zero dot zero zero so you're giving it a format so that way it knows how to format your numbers and that's it that's it guys and that my friends is the end of the amazon clone 2.0 this has been a really really really long one but it's okay we've got this one okay i'm gonna do one last thing for you okay one last thing is just a small little thing because i want to make it look good so good all right okay i wanted to do it where oh no not complete order that's gonna take another five days to do complete order that's gonna be way too much guys so wait i want you just to show you not stripe either joe not this one i want to show you just how okay maybe in the next challenge we can do stripe i think that would be really interesting is we continue on this amazon clone right i want to show you how do we go ahead and remove this and make this mobile friendly all right oh that's right that's right so let's do that i want to show you how do we make it mobile friendly okay a few ways well if we go to index.html all right look at our categories where are the categories rather here right there right there you see sidebar and our main sidebar is here well what we can do is we can basically hide it so imagine like this when we have a small screen right let's just say the screen is small right we make this a hidden a hidden or you know display none kind of display not right it's kind of like here okay it's hidden right this is a small screen right what happens is after it becomes small after it becomes a median screen then we want to show it okay and then we want to show it right now this is how it works until when css i can tell like this you see how we have this main sidebar i can say hidden here hidden measure this out see it's hidden it's no longer there it's done adios sayonara baby let's go all right but i can say hey when it becomes median size i can say block so basically if the size of the screen is median medium see right there now it's block so it's from minimum of medium size it's blocked but then when i get to a small screen it's disappearing see and then my friends is how you make it mobile friendly that's it and so that's pretty much it my friends let's do the same thing actually let's do the same thing to our card.html okay let's go back to record.html the same thing here and put inside here so that way if we go to car.html same thing here if we make this smaller boom there we go it just kind of shuts off and that's it and of course there's more things so my challenge to you uh at this point is gonna be really simple guys i challenge you to make this mobile friendly yeah right let me say how about doing a dark mode that'd be great you guys should do that for your homework doing diamond would be amazing if you guys do that for your homework okay make that your task make that your challenge so make it a task to make it not only dark theme but also make them fully mobile friendly maybe you fully make it so that this hides right this whole thing hides this whole thing hides everything right and you just make it a simple thing a simple like a a simple uh website that's fully mobile friendly right so you can think about that how do you do that and of course it's possible guys it's possible maybe you put this count underneath it and this total cost underneath it you know as you make the screen even smaller maybe that's what you do as well that's right somebody said uh osala says i mean mobile friendly that's amazing guys so guys that's it that is your amazon clone and i want to say this has been an amazing five days did you guys enjoy this amazon cologne that probably nobody has ever seen before did you guys enjoy that yeah give me a raise of hands give me a sub thumbs up there we go that's what i'm talking about yeah this is oh day four my bad this is day four and tomorrow of course of course it's going to be day five guys tomorrow is a really important day we'll be talking about your next full stack developer roadmap okay what you need to do to get started and to take whatever you learned here to the next level all right if those who actually want to be developers those who actually want to do something from this and not just watch and be stagnant right and to take action come tomorrow okay so and that make sure you set your alarm clock for tomorrow 11 mpst on youtube thank you so much for watching those of you on zoom stay here for a little bit but on youtube that is it for youtube thank you guys thank you so much for watching hope you guys have a great day and we'll see you guys in the next video we got more videos coming up just go ready because we're not done all right guys bye bye youtube bye everybody come in tomorrow alone npc