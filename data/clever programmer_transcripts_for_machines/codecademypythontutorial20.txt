hey guys what is up this is qazi from cleverprogrammer.com and you are watching codecademy python tutorials this is tutorial number 20 so let's talk about where we left off okay so we just finished battleship recall recall enjoy that recall right that was a big accomplishment uh you should have taken some time out to mull that over and think about it and maybe even be an eager beaver or an overachiever and try to do the extra credit part okay however we are now going to move on so we are 59 complete we're about to hit that 60 mark which is amazing and we're gonna be talking about loops and loops are super exciting and this is a beautiful thursday morning i made it to my studio and i was super excited to record these for you guys so hopefully you are also having a very good time right now watching this and hopefully you're feeling really good too hopefully your day has gone well so let's get to loops and talk about it while you're here haha so they're talking about while loops right their lame jokes always sneak in and i will always make sure to let you know if they're secret jokes that's why i'm here the while loop is similar to an if statement it executes the code inside of it if some condition is true however it keeps doing it right that's the only difference between an if statement and a while loop kind of if statement it's like an if statement but it's like an if statement that keeps repeating while it's true right so while your pushups are less than 10 keep doing pushups right so for example i can do something like uh let's let's create some variable called pushups set it to zero and while pushups is less than 10 print um do one more or keep yeah do another pushup and then um if the loop ends then that means we're that if condition doesn't match and we can say print good job you have done 10 pushups right um and i can also print what pushup count we are at just to let us know what's going on okay let's run this oh oh oh why is this giving us what's happening here i'm glad that this happened i'm really glad this happened it's gonna like crash my browser oh god um let's just yeah stopping stopped okay so while it's stopping let's talk about what just happened so why do you think that happened my browser was about to crash things just kept something just kept happening on the screen up above me and apparently we lost control of the whole situation right the captain lost control over the ship and the ship just sank and now the ship is just broken oh this is bad let's close that it's not even letting me close the browser that's how bad it is changes may have not been saved leave i don't care um okay changes are not saved we just have to do it again so let's talk about while why that happened right so i did print uh pushups i said print do do another pushup right and then i said print you completed 10 pushups so you can even make a health app using this right if you want to but so why why what just happened why did this thing keep on running and essentially uh crash our computer well what happened is something called an infinite loop and that happens if your loop doesn't stop so here's what was happening okay how loop works it just keeps running something over and over again so we have this while loop and it keeps running this block of code over and over again until this condition here this condition right is false until that condition it evaluates to false it'll keep running over and over again so it goes initially push up to zero so it goes zero is less than ten print zero and it prints out zero to the screen and then it says do another push up then it goes back up to the variable uh to the line three which says while pushups is less than ten well is zero again less than ten and yes it is so it prints out another zero where it says pushups and uh it says do another pushup right and then pushups just keep being zero so if every time pushups is zero this statement what do you think it is do you think the statement is false if pushups is zero or true this statement is true because 0 is less than 10. so this statement is true every single time which means that the loop runs every single time and there's no there's no such thing as stopping the loop so what we want to do is just simply increment pushups right um so i will print out your pushup count i will say do another pushup and then i will say you know you've done this many pushups i'll put this here because in the start it wouldn't make sense if you've done zero pushups and it says do another pushup so we the first thing you do is you do a pushup so i increment your pushup count by one and then i print out that you've done one pushup and then i say do another pushup and eventually this thing the first time the loop runs is zero then it's one then it's two then it's three then it's four then it's five then six seven and then eight and then nine and then the loop stops because when it's 10 is less than 10 this statement evaluates to false so you never get um right you get 10 here but um or sorry yeah once it's false this part of the loop does not run right so that's the most important thing to keep in mind that's what stops the loop at the end and then it just goes to line nine and says you completed ten pushups so let's check it out how it works there you go one do another pushup two do another pushup three do another pushup keep going keep going keep going till ten do another pushup uh and it goes you complete it effectively ten pushups good job uh all right so that was just an example of a while loop right so let's check out what what they're talking about change the loop so it counts up to nine inclusive which means include the nine be careful not to change or remove the count plus equal one bit if python has no way to increase count your loop could go on forever and become an infinite loop so we predicted what they're going to do right and where they're going to talk about and we actually already talked about the infinite loop so you're not gonna have that problem hopefully not um okay so what they're saying is change the loop so it counts up to nine hello i am an if statement and count is count so this is going to print out uh hello i am an if statement and count is um and then where it says comma count is gonna basically put in like you know one here or two here three here something like that that's what it's gonna look like and this statement is gonna run how many times i'll give you five seconds five four three two one this statement will run only one time because it's an if statement okay and how many times is this going to run give you a second to think about it one two three four five seconds okay this statement is going to run five times because count is zero the first time so the block of code runs then count is one so then the block of code runs then count is two and then the block of code runs then count is three and the block of code runs and then count as four and the block of code runs so zero one two three four that's five times and we don't when once it says five this part evaluates to false so the block of code does not run because five is not less than five okay so they said change it so the loop runs nine uh so the loop runs and counts up to nine inclusive which means that we want to change this to a 10. that way it counts from zero all the way to nine and goes up two but not including ten okay another way you can do it is say nine here but say greater than or equal to that way it's only false if it's above nine okay so those are two ways to include the nine this is a more normal way for me hello i am an if statement and count is zero and you don't see that if statement run again right anywhere then you see hello i am a while loop and count is blah blah blah so here you see hello i am a while loop and count is zero hello i am a while and count is one hello i am a while and count is two so on and so forth and ultimately you see um count is nine and then the loop stops okay perfect okay good let's go start next lesson the condition is the expression that decides whether loop is going to be executed or not these are the five steps to the program so condition again was what i told you right every loop uh every if statement if statement is followed by some kind of condition um and while loop is also followed by some condition right in our case this part i'm going to wrap in parentheses that's our condition again important to know the terminology right so instead of hand waving just be like oh yeah i get it just make sure that you really understand that that part is called a condition so then when you refer to it or you hear about it the information is easier to synthesize for your brain you'll be like oh yeah that's the condition i know all about those conditions right let's go back okay the while loop checks to see if loop condition is true right that's what we have already discussed it checks if the loop condition is true here they created a variable called loop condition and they set it to true so eventually so in the start it's true right and then they change the loop condition to false and then it goes back here and this is false so the loop just stops so this loop how many times does it run i'll give you five seconds to answer that question five four three two one this loop runs only one time okay let's test it out boom um it's gonna give me an error because of that print statement so let's put parentheses there and it runs once almost like an if statement and it goes i am a loop and that's it if i do not change it to false then you're going to have an infinite loop right if i just say while true this loop will never stop unless i add maybe a break statement or something like this okay um see how the loop checks this condition and when it stops executing when you think you've got the hang of it save and submit i think you've got the hang of it let's save and submit while you're at it another joke inside a while loop you can do anything else you anything you can do elsewhere including arithmetic arithmetic operations so while you're inside of the if block a wild loop block you can just write whatever code you want right just like you're normally writing code except it's just wrapped in a while loop so you can do print a banana plus you can do print banana um bread apple juice bobby john i like to drink food it's a fun little sentence it could be a great password actually good luck breaking that password right um a lot of the uh just a tip for you guys who are really who want to have a really strong password but easy to remember it's actually have a phrase separated by spaces those are tremendously hard to get there is a difficulty for passwords and apparently those take like trillions of years with the best computing systems and thousands of computers combined uh trying to guess that password so those are actually one of the toughest i guess and uh it's easy to remember instead of having a password like that it's gonna be really hard to remember and it's actually not uh it's easier to crack than that sentence that i wrote above anyways so let's say we have that sentence here and if i do run it's just gonna print that well i can just do the same thing while um right i'll just make something uh condition is equal to true and then i'll say while condition then do that and then otherwise print and then make the condition is equal to false and that way the loop stops only after running once and you can see that pretty much the same thing i did outside of the loop i can do inside of a loop i can also write if statements inside of a loop which are nested by more uh if statements which are nested by a four loops which is nested by another for loop so all this stuff just builds on top of each other which is why it's so important to understand the fundamentals of it and then you can nest them together and do whatever kind of logic you want generally just a piece of advice it's not going to be so useful for you right this second but if your code is having a lot of if statements underneath it like a lots of indentations underneath each other it's called like really nested right and your code starts to become hard to reason about it's just a bad idea to have that it means usually there's something wrong with your logic if you have tons of if under ifs and loops under loops it increases the complexity of your code and also increases the complexity in terms of reading it which means your code is harder to understand and more likely it's going to produce some kind of bugs and it's going to be hard to fix those so focus on simplicity and make it so it's very readable and understandable and make sure that you can explain it to other people anyways create a while loop whoops let's just put this right there create a wild that prints out all the numbers from one to ten square uh each on their own line okay that's simple so what we're gonna do is print and it's gonna run while num is less than or equal to 10 because we want to include the 10 if we didn't want to include the 10 we would say this and num would only go up to 9 but they want the 10. so i'm going to say less than or equal to 10 and what i will say is print num squared and then i will increment num so that way the first time num will be 1 right because that's what it is here so it's going to do one square then it's going to be two then it's going to be three then four then five then six and it's gonna run the while loop block then it's gonna be seven it's gonna run the while loop block and eventually it'll be ten and notice that this is still true which means that this block of code line 4 and 5 will still run and then the while loop will say that this is 11 and 11 less than or equal to 10 will evaluate to false and so this block of code will not run okay hopefully you got that let's run it and there we go we got 149 16 25 36 49 64 81 100 right square one one you get one square 2 you get 4 square 3 squared right just to make sure we are following the math as well 3 squared that's just 3 times 3 4 times 4 right all of that so great stuff cool let's get it why isn't that okay it's kind of stuck on my screen there for a second so we go all the way up to 100 and then we stop okay start next lesson see where we're at cool a simple errors a common application of a while loop is to check user input to see if it is valid so another so basically what they're saying i'm just going to reiterate it pretty much is constantly keep running the thing while the while the user input is wrong right so you even say the word while naturally while describing that right so anytime you see yourself describing these words in english um like just keep running the program while the user is putting in errors maybe you can start thinking of there's something like a while loop working in the background so yeah if i keep typing in some wrong information you don't want to just end the program or give me some kind of error or say sorry wrong error and shut up the program you want to ask me again like please write a correct answer okay so that may be one good reason to keep running while loop in your software so fill in the loop condition so the user will be prompted for a choice over and over oh sorry i read it wrong we'll be prompted for a choice over and over again while choice is not equal to y and choice does not equal an n i think that should be an or right because you can't pick n and y at the same time so this is logically incorrect it should say or so the loop should keep on running until the user picks y or an r imagine if you were playing a game like rock paper scissors you want to make sure that they pick either r for rock p for paper or s for scissors and if they pick banana it just asks them like go again pick rps make sure it's one of the three okay so sorry i didn't catch that so here we take in the user input are you enjoying the course and while we can say here we can check for the condition while the user answer or in this case choice is not yes or no then ask for the choice again so here we ask for the choice again and then the loop just keeps running back and forth back and forth okay so i can say choice does not equal y or choice does not equal um n okay but how i would probably like to say is well not no actually this is fine this is fine while choice is not y or choice is not n keep running okay so let's give this a try did you enjoy the course bananas sorry i didn't catch that let's see codecademy youtube okay it keeps catching it so it's actually pretty smart let's try capital y okay let's try small y what it should have caught that um is there an error in my logic here let's see that should have caught that so maybe my logic is incorrect here oh right actually they're right i'm wrong because what they're actually saying is it shouldn't be the case that neither of them exist okay so here we're saying that if both of these don't exist then run this block of code okay that's the only case you'll run this block of code so here let's how do we end this okay we actually can end it so what i'm gonna do is i'm gonna copy this i'm gonna reset code oh that didn't help either let's refresh i've had some people who have gone stuck in an infinite loop of codecademy and they could never get out of it and their codecademy just freezes forever so hopefully that's not going to happen to us i think ann should fix the problem okay and now if i say y that should work okay so they were right i'm sorry i was wrong forgive me codecademy people infinite loops an infinite loop is a loop that never exits this can happen for a few reasons you guys already know about why that happens the condition cannot possibly be false while one does not equal two right this conditions can never ever be false if i just said one does not equal two that statement is true and it'll be true forever we're not even using variable names there so we can't change the value of one or two we're just using integers that loop just keeps running until you write maybe something like break that condition is going to keep giving you a true you can also set a condition by mistake that is going to be a false forever the logic of the loop prevents the loop condition from becoming false okay so here they're showing you example of why your loop might run forever so here you have this case okay count is equal to 10 to start off with 10 and they say while 10 is greater than zero so 10 is greater than zero we want to make this part false when is this part going to be false when we keep increasing count or when we keep decreasing count again to stop the loop we need to make that statement that condition false when is that condition going to be false when count we keep increasing count or keep decreasing count give you a few seconds to think about it three two one when we keep increasing count what's going to happen is that condition is never ever ever ever gonna be false because if you have 10 10 is greater than zero is true if you have 11 is greater than zero that's true 100 greater than zero is true thousand greater than zero is true but if we decrement it every time so it's like that eventually when it comes to 0 is 0 greater than 0 no is that condition false yes it is if it's false the loop stops right this condition if ali is still false the loop stops okay so just make sure first you understand which way you got to go on the number line right are we going to the right and increasing or left and decreasing to stop the loop what makes the condition false when does the loop end so here they're showing you that a possible error you can do is instead of decrementing and reducing the value of count so it gets to zero you're increasing the value of count which means that you're going to keep going up which means that the loop runs forever so i'm not going to run it because it's going to crash my browser but that's what would effectively happen just for fun maybe we can run this in my terminal and i'm gonna say paste with spaces right let's be like spaces more and you see that it keeps running forever right just keeps running keeps running okay it won't stop there wasn't a condition that makes it stop so i'm gonna do ctrl c on my mac and that breaks the loop in a terminal okay so they just showed you a common error that can happen but if i made it minus uh equal one which is like decremented by one every time and i open up my terminal and i paste all of this there well you see it runs from 109.81 and then it stops okay the loop in the editor has two problems it's missing a colon well obviously that and count is never incremented that's a logical error so one is a syntax error which is the program won't allow you to run it and the other one is a logical error which means the program won't stop you but it's a logical error it's a flaw in our own logic the latter will result result in an infinite loop so be sure to fix both before running so we are going to fix it and we're going to say count minus equal one or actually we should increment it because here count is zero and this statement is true and if i decrement it this statement is still true and still true and still true and still true and still true right so i got to go on the right side and increment it every time so i'm going to go here change this to a plus sign i don't need this comment and that should be good runs 10 times right because it starts from zero okay infinite loop so that was a lot about loops i'll let your brains explode and ponder over that a little bit go practice it right now a little bit more loops have tons of applications don't tell me you don't have any ideas look for some ideas that you can work on some basic basic problems or something you want to just create for fun it keeps asking for a name and it's if it matches one of the names of your family members it's greets them in a specific way if it's your spouse or your girlfriend or your mom or your dad whoever it creates them in their own unique way and the program just keeps running forever okay so that's one example or you can create rock paper scissors go practice loops they are actually absolutely amazing very powerful tool you go do that and i will see you in the next video clever programmer uh this is kaze from cleverprogrammer and the next part is going to be part 21. please subscribe go like up like the video give it thumbs up that helps to reach more people and i'll see you in the next video thank you