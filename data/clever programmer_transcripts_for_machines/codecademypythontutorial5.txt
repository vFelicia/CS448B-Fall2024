hey guys what is up this is Kazi from clever programmer and you're watching code Khadem e part 5 okay so let's get started we left off at functions that's where we're gonna pick up from we just got done completing pig latin i got some coffee with me hopefully you have coffee with you as well or you've already had some food in you and you're ready to you know pound through this okay let's get going what good are functions right water basically functions used for and that's gonna be the thing that we're going to figure out in this section so they've already written up some code here but we're gonna hit save and submit and we're going to continue and figure out on our own why we use functions cool so let's get started okay so here i can tell you a little bit about what's going on okay so they have a function called tags and it does these things here it takes bill it multiplies it by 1.08 it prints out this stuff and then returns bill at the end it's also dependent on one input so here you can see it's dependent on an input bill and this other function so this function is called tax this function is called tip and then once we're finished defining these functions we later call them over here so you call this function tax right here you pass in one input meal cost so it goes to this function tax bill becomes meal cost and everywhere you see bill it's effectively meal cost and it does the math accordingly okay so we're going to explore this in more depth that was just a very very very ruffled review so in some simple way how I like to think about functions is let's say you want it to store a variable right you want it to store a bunch of numbers and save it as a variable what you would do is instead of always right I've explained this before writing this big number out what we can do is we can call it some variable and now we can just refer to V or that big number as V well what if you wrote a block of code right and you wanted to use that block of code over and over again you can't call it V and say print v um sit print seven plus eight and I don't know print hello right now you can't just go at the bottom and say print V and it's gonna output you know five what is 7 plus 8 15 and then hello you know you might think this is what it's going to output on that black screen to your right but that's not actually what's going to happen what's going to happen is it's going to give you an error because it's going to say you can't assign a block of code to one variable but if you were to do something like this right you said define V and it's not dependent on any inputs now if you actually did print V like this this is going to happen it's going to print out v and it's going to print out 15 and then it's going to print out hello okay so functions give us a way to name blocks of codes and there's much more that goes into functions but this is a very simple way to look at it okay all right now let's look at a little bit of their explanation function junction header parameters and comments and then okay so hetero parameters body cool all right let's see what they're talking about so we they want us to create a function call all spam and what it should do is print out eggs so let's do that I'm going to define spam and I'm going to say print eggs boom oh they want us to write a comment or a docstring here is what they call it prints eggs to the screen cool all right let's run it boom done okay so I'm going to be trying to get through this a little bit faster because the videos end up getting very long and this course is way longer than I expected when I initially took on the challenge to complete code Academy as fast as I could okay callandresponse so we named a function and then we call it okay that's really what we do with the function here we have a function called square it takes in an input n then we define a variable called squared it squares that input that we gave so it goes N squared these two asterisks mean this in math okay so it squares the number and then it does some string formatting here so and this percent D gets replaced by whatever this n was this percent D gets replaced by whatever squared was and then after we're done printing it out we return what the value squared was okay we've set up a function square call it on the number 10 by putting 10 between the parentheses so we're going to call it on the number 10 so here's how we're going to do it if we did Square and we ran it it's going to give you an error because it's going to go back up to the function and it's going to go okay square of n then it's going to go to line 3 and it's going to say wait you never gave us an an N so it's not getting able to square anything but now if I give it a 10 that's going to go in here it's going to be like 10 squared beautiful and then it's going to say right here is 10 squared is 100 right because that's the calculation over here squared and then it's going to return 100 okay return is one of those things that is sometimes a little confusing but I will show the difference between printing something back and returning something back right now to you guys ok I'm going to do that right away okay so let's say I define some function Bob or let's make it define some okay and effectively sum of a and B all right so some takes in two inputs a and B and it just adds them so I'm just going to do return a plus B when I use some I just do this and I get back whatever values right so this is 1 plus 5 you get 6 1 plus 7 you get 8 2 plus 7 9 how this works is you call some with inputs 1 and 5 it goes in here it makes a 1 it makes B 5 and it goes a plus B and that's how you get 6 8 and 9 right here okay we have we wanted to do was what's the difference between return and print well here I can do V is equal to sum of 1 comma 5 and now V will be what what do you think V will be 6 okay but let's go back to our function we defined it and let's define it as print a plus B like this print a plus me instead of return right now if I do sum of 1 5 you still get the same looking answers if I do sum of 1 7 you still get 8 everything looks nice but if I do V is equal to sum of 1 comma 5 watch what happens if I do V now V doesn't have a value ok V it says is just V alright V is basically nothing so print just output something to the screen so this just output something to the screen whereas return actually returns a value that you can do something with right if it's a return you can also do something like plus 5 so this part will evaluate to 6 and then plus 5 will make it evaluate to 11 whereas if you do it with with just a V and you say print it's this part is going to evaluate to pretty much nothing it's going to print out 6 to the screen and then this 5 is going to try to get added to a whole bunch of nothing okay so print is not going to help you there so that's a little difference between return and print cool let's keep going all right parameters and arguments so we are now learning about parameters I gave you guys a little sneak peek into parameters let's see what they want us to do replace this with parameters bass whoops and exponent a result is equal to base to the power of exponential here returns whatever you give it plus one deserves another takes an N adds two to it okay very simple now they're showing us how functions can call functions okay so let's take a look at there example so you can see fun too is calling function one with the input M and then adding seven to it so this function calls function M function one it goes right here it does n times five so it'll take this number multiply it by five return it and then add seven to it okay so if we put in five right here into function it's going to go to function one is going to go five times five is going to get 25 twenty pot five plus seven that's going to give you 32 okay so that's how that works so let's look at the functions editor one good turn which adds one which adds to change the body of deserves another so that it always adds two to the output of one good turn okay so add two to the output of one good turn boom simple practice makes perfect let's create a few more functions for good measure the example above is just to show you blah blah blah here is the example alright it defines of a function called shout and you should use like you should verbally say these things out loud because of terminology is very important to learn okay don't just say oh yeah it's the de f thing or the DEF thing right understand the de F stands for define shout is the name of the function phrase is a parameter okay the reason why I'm saying be so specific with your terminology and learn it really well is so later on you're going to see it in books people are going to refer to it like that and then when you have to search it up that's how you're gonna have to search it up right so know me so ghetto about it and lazy and just call it Oh a thingy majiggy are in the parentheses right that's going to throw you off try to actually learn what they're called and use it cool so you know pretty much define this to yourself use the correct terminology but I'm just going to do that for you guys right here so define a function call shout which takes in one parameter phrase if phrase is equal to the uppercase of phrase then return your shouting so if basically you write something in all caps it's going to say hey you're shouting otherwise it will say can you speak up and how you can use that function is here I'm interested in shouting so if you call that function shout by passing in the parameter which is I'm interested in shouting it's going to go to the definition of the function and it's going to go I'm interested in shouting is equal equal to I'm interested in shouting that upper that's going to evaluate to true and it's going to say hey you are shouting okay so if I took this whole thing and put it here you're going to see it's going to return you are shouting okay and that's the decision process that one goes through okay first define a function called cube so define cube which takes an argument call number don't forget the parentheses in the colon how I think of colon and then hitting enter after is that it's like then so I'm defining a function and then here's the block of code that comes next okay so enter make the function return cube of the initial number so we're going to say cube reserge define a second function define a second function called by three that takes an argument called number if that number is number is divisible by three um that should call cube of that number and return its result otherwise by three should return false okay so let me take you through you guys to the logic of how I wrote this block of code right here okay so how did I figure out how to do if a number is divisible by three right how did I do this thing over here what does that mean let me show you if I did nine modulo 3 I get a remainder of zero that means 3 goes perfectly into 9 right if I did 10 modulo 3 I'll get a remainder of 1 3 goes to 3 it goes to 6 it goes to 9 and then it's like ah but I can't go into 10 so I have 1 left over that is called the remainder in math hopefully you've learned about it and if you did it with if you'd try to put 3 into something you know that number is divisible by then you'll have a remainder of 0 right like 9 modulo 3 you get a remainder of 0 so if you can see that the remainder is equal to 0 and you get a true that means that number is divisible by 3 that's how I got that line right so whatever I put it right if I put an 11 modulo 3 is 11 divisible by 3 no it's not right you get a remainder of 1 and so it returns false that's where I got that modulo 3 equal equals 0 so if it's divisible by 3 cube it otherwise return false all right um I didn't have to say else but I can I'll just say it just to be you know go along with what they're teaching but you don't have to actually say it importing modules importing modules is so fun you guys importing modules is amazing it's the concept of using somebody else's code that they have taken hundreds of hundreds of years and hours of time to write and you just use this command called part and all of a sudden you have a power of thousands of professional software developers who spent countless nights eating um you know what are they ramen noodles and writing this code for you and you got to use it by just using this extremely powerful command called import okay so learn about import this is going to be an important section effectively what this says is you just trying to use other people's code you don't want to reinvent the wheel every time if there's already some kind of mathematical crazy formula that does something you don't need to reinvent it that's partially the reason why you don't have to know all the math in the world to be a good programmer to be an effective programmer because somebody out there has already done the math you just need to steal it or use their code right don't plagiarize but try to use your code what did I say great programmers copy code or good programmers copy code great programmers steal code ok I'm not advertising for actually plagiarizing code but what I just mean is importing code and using libraries intelligently ok so they're giving an example of a square root ok so if you did the square root of 25 you're not going to get an answer back you're going to get an error what you have to do for that is import a module that uses a function square root okay square root right again let's go back to the terminology sq RT that's a function and it takes in as input one number so we gave it 25 so it takes in as input some number n but we can't use s to RT because we never defined it anywhere right we didn't do this stuff with DF s QRT it takes in some number and then you know return blah blah blah blah blah whatever right we never define this qrt so if we type this in now we're going to get an error so I'm going to do what they're telling me to do cs2 RT is not defined so now they're telling you how you can actually use import so we're going to say import math and here we're going to do math dot s QRT so this tells python not only to import math but to get the sq RT function from within meth so we're importing a library a giant library of functions which is called math and within that library we want to get the function s qrt that somebody has written and that's how we get it and then we just pass in 25 to it so the function is called s qrt we are passing 25 to it and the dot notation here is really telling us the path to that file ok so if I hit save and submit you can see that I get back 5 which is indeed the square root of 25 another way to get a square root without using this is just do something to the power of 1/2 okay that's another way it's a pretty cool way to get a square root of something all right start next lesson function imports so from module import blah so we could have said from math import sq RT and then just done sqr t 25 ok that's an example of a function import and that's exactly what they're telling us to do boom nailed it universal import this is saying import everything as a function so we can say from math import every single function and now we never have to say math dot strt or whatever we can just ask your T and we don't have to say math that tangent we can say tangent like this tangent of 9 right I forgot what that is it's been a while since I took trig let's give this bad boy a try and pretty good okay here be dragons so basically be careful when you're doing this stuff this is an advanced concept and okay we should mention it but I don't want you guys to worry about it it's just a waste of your time if you're actually starting out so there's basically saying import it's better best to stick with either import module and type module name or just import specific variables and functions so effectively what they're saying is avoid this thing with the asterisk okay avoid it at all costs and why they're saying that is imagine you created your function called sq RT or let's say you created your function tan and maybe it was for you know I don't know tandem it was short for tandem there's a something called tandem chess so it was really for tandem and you know you said define tan and it prints out you know you are playing tandem chess right but now if you did from math import asterisk or whatever and you used ten of them you know ninety like you're going to start getting some errors it's going to be like hey do you want to use this function 10 that you define or you want to use the function 10 from the math module so it's just better to say maybe import math so now if you want to use your own 10 you can just say 10 or if you want to use the math 10 you can say math 10 which tells it that it has nothing to do with you know this tan over here okay hopefully that makes sense let's continue going forward ok biggest number smallest number distance from 0 beyond strings now that you understand it functions aren't how to import modules let's look at some functions that are built into Python no modules required so a lot of stuff comes builtin right like that up or down lower STR Len right a lot of those just come builtin these are great for doing work with strings but what about something a little bit more analytic so if we're trying to do something with math right like we're trying to find the biggest number out of all of these numbers so if I gave you a giant list of numbers how do you find the biggest number now sometimes people will look at it and be like these are just for numbers but think about it sometimes you could be maybe you could work as a data scientist and you could be dealing with a file with a couple of gigabytes and you have 10 million numbers right you can't visually scan and pick the best number and maybe a lot of software's are going to fail even Excel a lot of the times will fail with file size is so big so maybe you have to use something with Python and Python is gaining a tremendous amount of popularity and you might have to use a function from Python and so how are you going to use that to get the you know the biggest number from that or the smallest number or how far something is from zero so distance from zero right in math it's known as the absolute value okay cool so you can see the math library has all these functions a cosine ache cosh a sign you know all of the ceiling cosine degrees e factorial floor like these are all part of math so you could do math sq RT math that powa TN so on and so forth so here they're using defining your own functions to figure out things and you can see how you figure out the max number is just do acts of that okay so you just call the max function pretty simple so now they're going to take you step by step all right try out the max function on line three you can provide any number of integers or float arguments so if I gave max you know five comma 10 comma negative 15 comma 20 comma negative seven what max does this function max right here is going to figure out which one the max is so you can see it's 20 and then it's going to print 20 okay this whole thing is going to turn to 20 that's what's going to happen it's not going to keep that tuple there anymore that thing in parentheses with a bunch of numbers right it's going to pick 20 the whole thing is going to convert to 20 and then it's going to print 20 okay all right minimum same deal right is going to pick negative 5 the whole thing is going to turn to negative 5 and then we're going to move on boom done absolutely we're going to use the ABS function and it's the same way right it just tells you how far something is from zero so if I did negative 100 is going to give me back 100 or they want us to use a specific value like negative 42 cool now they are telling you about this function called type which tells you to type the data type of something right so if I did type 1.4 it's going to tell me its type float if I did type of one it's going to tell me it's n and you should know these now it's an integer if I did hello this is and or not an N this is a this is the string cool okay so you can see there are examples integer float and spam int float and then string over here right string okay so have Python print out the type of an int float string value I'm just gonna save myself some time and copy those done review yes okay let's review functions so we define a function again try to speak this to yourself then hear me do it define a function call speak which takes in as a parameter or as an input a variable name message and it just returns message so it really doesn't do much it just returns message okay it just takes it and returns it doesn't really do anything and then this part is outside of the function so if you're happy you call the function speak and pass in I'm happy it goes to here and it just returns I'm happy if you're sad you used go to the function speak and return I'm sad otherwise call the function speak and go I don't know what I'm feeling okay so here a bunch of strong instructions and they want you to create your own function so let's get started define function and it's called shut down that takes in one argument s don't forget to put the parentheses or the colon then if shut down function receives and s equal to yes it should return shutting down make sure to put the capital S there otherwise you're going to get it wrong otherwise else if s is equal to no and there's a difference between one equal sign and two equal signs one equal sign is an assignment operator two equal signs is a comparator operator it compares two objects this equal sign will try to make a sequel to know this two equal signs checks if s is no okay big difference there then the function should return shut down boarded else I'm sending in the other than those inputs of function should return sorry okay fairly simple dawn next lesson modules review modules now let's see what you remember about importing modules import the module math and whatever wave so from math import sq RT s q RT function on the number three six eight nine I like to do it this way sometimes one three six eight nine crisis with it oh I didn't print it cool done review builtin functions perfect last but not least let's review some builtin functions so define a function called distance from zero with one argument let's call it number if the type of the argument so if type of the argument is equal equal to an ant or that type is equal equal to a float right the function let's do that um actually let's check something so let's do type of five equal equal to an int that gives you a true okay now so I was right string it right the function should return the absolute value of the function input done if right forgot to put the if there otherwise the function should return nope done bones okay so that was pretty great we didn't call that function so practice calling that function okay don't just leave that function they actually call it and I think that was pretty excellent I'm going to cut the video off here because it's already long enough and we just finished this entire section so I will see you guys in the next video in code Khadem e part six this is clever programmer over and out see you guys in the next video bye