in this video we're gonna be building the ubereats wet 3 Clone with nexjs we're gonna be using infuro to connect it to the ethereum blockchain now we are going to be creating a bunch of nfts that will give you discounts in this app and we will be able to check whether the user has it or doesn't and then calculate the subtotal we're also going to have a bunch of goodies in this app so with that said let's go ahead and get started okay so as usual we're going to be using the clever programmer custom CLI tool that we built for you so just make sure you are on the latest version and let's go ahead and just type in npx lover programmer pop in your email then your name and then we're gonna be selecting the solidity Uber Eats option and while that takes a while it'll also open up infuri for you so just make sure you have an account if you don't have one already and create a new new project but in the mean what meantime the terminal is apparently done and it opened up vs code so that's nice so let's just check out how the app looks like or don't and let's just go ahead create a new API key on inferior so we're going to be selecting the web3 API that is their combined all the chains that you will ever need a type of API so just name it whatever ubereats but just make sure you don't have space in between them because later on when you try to connect it to your vs code it is better not to have space in the project now it'll take a little bit to load and then this is what you're gonna see if you select endpoints that's all your RPC URLs that you will need all right let's go back to our code vs code and let's actually connect it to our vs code so if you don't have truffle already installed into your vs code now is the time to go ahead and do it it's a free extension it's just where every other extension is and just make sure you disconnect all the networks and then you just reconnect so you're starting this session with a fresh connection so go ahead straight away just connect to your infuria and uberes will pop up immediately and there you go that is everything you will need for this one now straight away let's go into our Uber Eats discount nft.sol file that is created by the CLI tool so let's go ahead and get started with that too let's set out the nft collection so we're going to be using solidity version zero eight zero so just make sure you specify that version and then we're going to be importing a couple of things from open Zeppelin so this is going to be an ERC 1155 compliant token so let's import that and also you want to make sure that whenever you're importing in previous builds we already have these issues when you're importing you want to import from open sapling contracts not just contract okay and we're going to be importing ownable because these nfts will have someone who owns them and let's actually create the ubereats discount nft that is an ownable ERC 1155 token so this is going to be a child to those now we're going to create a string that's going to be a public string and that will be the token URI and we're also going to go ahead create a Constructor this is actually like standard and ft procedures so you need a token URI you're gonna need the Constructor because that's how you whenever you're minting that's what's gonna run Constructor string memory token URI and then it's going to be ERC 1155 and then we're gonna have a mint function passing in the account the amount and this is going to be a payable minting function meaning the user has to pay for these nfts to be minted so we're gonna make sure that the user at least sends 0.01 ether otherwise we're gonna have to reject this minting and we're gonna be minting the nfts into his or her account and we're also going to be passing in a couple of other attributes alongside with the amount so with that said that is your Uber Eats discount nft let's go ahead and move on to the next step all right so let's actually set up a couple of things for this nft so first off we're going to be going ahead and opening up our Chrome and we're going to be creating a ipfs API key the reason is when you have an nft you will have to sort the image somewhere and that's usually going on ipfs now again just don't leave any spaces in the project name so there you have it and now what we're going to be doing is we're going to be enabling dedicated gateways because that's something inferior can do and it's super cool so just pop in knit your name clever programmer whatever you really want to but what this will enable you to do is that it will create a sub domain under infuro's ipfs and that is going to be your own dedicated Gateway so once you save it you can go back to your vs code and we're going to be opening a terminal but you want to also make sure that you open it under the data folder so by default vs code only opens it under ubereats infuro so basically the project and then you can either CD into so just say CD data or just open it in the data folder directly so in there's this nice little Lamborghini image and the nft Json so the nft Json is going to contain all your NFC metadata and this is what we'll be using later so let's just rename it so it will be Uber Eats subscription description again a subscription for ubereats whatever you can that doesn't really matter but that's what you're going to show on show up on openc and you can also pop in your uh sub domain so basically what we're going to be doing is inside the terminal we're going to say inferior auth this is going to be creating a variable equals and then just the project ID column API Secret so that's exactly what's happening I will just save it into your terminal session and then you can invoke it later so you don't have to always copy paste these and then we're going to say curlex post so basically an API call to using the inferior auth indication to this ipfs that impure is providing pure uh ipf is the same dot impure.io column 501 API v0 add and then we're going to be attaching the file so we're going to say that Lambo nft and the reason why and this is where it becomes important that you are in the correct folder with your terminal otherwise the lambo nft will obviously not be found so what this gun is going to do is this will just upload the image to the ipfs now we're gonna have to because ipfs cleared itself and if you pin it it won't clear that particular file so now what we're going to say is going to be another a post call but to slash API v0 pin slash add and in the arguments we're going to be popping in the ipfs we're going to say slash ipfs slash and whatever comes back as your hash as a response from the previous requests just paste that there and that should be good to go once again this hash goes right here if it wasn't clear and then you will see your pins that is supposed to be the same hash that just came back or that you just pinned so now you can go ahead and put that at the end of the link and you will also want to make sure that you are copying your dedicated Gateway because that's the reason why we have it just paste it there and that will be your URL for the image so nice that works perfectly now we're gonna repeat this exact same process but instead of the image we're going to be uploading and then pinning the nft Json file so I'm just going to go through this fast so we're going to say so instead of file Lambo and nft whereas a nft the Json the reason is for now we only uploaded the image but we haven't uploaded the metadata so now we created the metadata file but we have to upload and pin that and that's what's going to be used by the nft okay we uploaded it now let's go ahead and pin that guy okay there seems to be some sort of error oh and that is because there was a typo so if you type ifura instead of infuria that's obviously not going to work okay and now there you go it is working perfectly and now we're gonna create the pins XD file and we're just gonna paste the two we're just gonna paste the metadata location so that whenever we are creating the NFC we'll be pasting this link in there so that should be good to go let's move on to the next part oh all right so let's now start converting the US dollar values into Wei and ether the currency of the blockchain so if you're going to cart.jsx on 944 there is a const USD to way function it's going to be super simple super quick basically you're just gonna say const E equals USD USD to eth and on line 36 as you can see it's already defined what that is so you can just change that it's not the scope of this project to include the live updating so just move on now we're going to be converting it to way and that's going to be using the ethers Library so we're going to say ethers.utls.parse ether and then just pass in the eth.to string or the eighth value as as a string because otherwise it might be a because otherwise it's a number and then just return way done nowhere it's going to be even easier to convert USD to eth because we've already done that so just copy that one line and we should be good to go all right so let's actually deploy these nfts or deploy these contracts not enough these obviously so you already have your inferior set up if not you can scroll back and I'm showing you earlier how to set it up but if you're this at this part of the video just smash the like button because you've already seen that now you can hit that deploy button there and that will pop up open the little window that you can see right now and we're going to be using the girly Network so just select that and it will start going ahead and deploying and building our contract hold on a second there's some interesting things happening there so it looks like there is some sort of issues with the import and the reason is we have contracts twice so just remove the second one or first one whichever basically opens up contract and that should be good in theory all right let's try to run it again looks like it's working wait a second okay now Uber Uber its discount nft has some sort of issues and that looks like that's a typo so instead of discount you want to go with discount with t all right let's try again looking good so far okay so looks like we made that same mistake again let's fix that oh yeah two more places line seven and eight hopefully you didn't make these mistakes and you're already deployed but that's all right if you did now is the time for you to debug again interesting oh okay so there's you all right I'll learn to type at some point I'm sorry that's all right so looking good this looks way more promising and there it is I think yes okay yeah execute command finish running command so that means deployment is completed and we are good to move on to the next step all right so now we're gonna go ahead and check whether the user has a discount nft or doesn't so what we're going to do is inside of our cart jsx there is a use effect which is the check which is a which has a check discount function in there so you just want to pop in a try catch and obviously if if it fails then just console log the error and in a try Clause you just want to say provider and it will be new ethers provider and then pass in windowed at ethereum that's the code snippet that uh metamask passes into the browser and injects it in there then we're going to go ahead create the signer which is going to be provider.getsigner and we're going to be saving the discount nft address it's going to be Uber discount nft.networks five which is the Gurley Network and then dot address so we're going to be looking there and we're going to have the discount nft contract passing in the discount of the address passing in the ABI and the signer now we're going to say cons to balance equals await discount nft contract dot balance off and then passing the signer dot get signer sign in to get address and xero so we're gonna console log it and they previously declared yeah you state we're gonna we're gonna save the actual balance so set this counted and we're going to be converting whatever we get back to a number and we're gonna say balance.2 string so what's gonna happen is we're gonna get back the balance we're going to convert it to string because otherwise it's a big number and convert that into an actual number that we can work with and if that is greater than zero and we're going to be saving a true or false clause whether that is greater than or less than zero so that's what's going to be in the set discounted state so with that said let's check it out so we're gonna go ahead refresh the app and so there's one item in the cart I'm gonna go ahead connect metamask with the lovely rainbow kit and the balance is currently zero meaning that I do not have the nft so obviously there is zero discount being applied and now that's actually a mint the nft all right so let's mint the nfds so moving it into the mint nft function in cart jsx we're going to go ahead create a provider in the try clause the usual drill just fetch the ethers provider using the injected code from metamask then we're going to go ahead create a signer which is going to be provider.getsigner and then create the address structure the address so that basically the girly deployment address of the Uber Eats discount nft and we're gonna be saying we're gonna go ahead create a contract instance so discount nft contract equals new ethers.contract passing the address pass in the ABI and then pass in the signer then we're going to go ahead and generate the transaction which will be discount nft contract so we're going to be using the Min function of the NFC contract passing the user address which we get from rainbow kit by the way then we're gonna be passing in the value so that's how much we're going to be paying for the the nft so that's going to be 0.00 ether and then we're going to passing it as the payload and now we're just waiting so await transaction.weight function that's an async function take some time blockchain isn't the fastest thing in the world and we're gonna we're gonna console log once the nft is minted so let's take a look at that connecting the wallet and minting and it's actually and there you go there is the balance now mind you that is in way I believe so there you have it the nft now is minted all right now let's actually handle the purchase and once this is done we are actually finished with this app so there is a handle purchase function now inside there usual try catch because we are working with blockchain so in the try clause we're gonna go ahead create the usual provider we've already done this now it comes the address instance or the contract contract instance but this is going to be the ubereats instance on the other one so pass in the address ABI signer yada yada and now we're going to go ahead and calculate the total cart value so this is something new that we haven't done before now this is going to be this is going to reduce a function called reduce from the job from JavaScript I'm sure you're familiar with it but basically all it does is it Loops through an array and then just adds everything up or does a certain thing and then we're gonna have two variables that we pass in and basically add those two together and we are going to have a starter value which is going to be zero so basically all that's happening is we have the current value and the previous value and we're just going to add the current value to the previous value and therefore it will be summed up and we always start with zero so that is going to be your total USD value now we're going to be converting in into so that's using the USD to wave function that we've already built earlier and we will now check whether the user has the nft these content ft so we're going to set everything up for that so we're going to create the discount nft instance using the address the ABI and the signer and we're going to check the balance so we're going to pass in the signer signer's address and then zero and that will return the balance of that specific nft in the user's bullet so if the user has more than zero then we're going to be applying the discount on the total value or like the total whale total way of value that was hard to say so we're going to say total way and then just get the get 70 and we're going to be multiplying it with 70 and then divided by 100 so that will give us the 70 that we're looking for so the 30 discount and we're going to be setting the set discounted to true and that will update the dollar amount and now we're going to go ahead and create the transaction so wait Uber Eats contracts dot by cart passing the total weight value that either gets modified or it doesn't so if it does if if it doesn't it is going to be the full value if it does then it's going to be the 70 of that value and the parameters are going to be value total away gas limit a hundred thousand let's just increase it from the usual 30 000 just so we have like extra room it's also it's free so it's whatever and we're going to be setting the gas price to null now we're going to create the receipt and we're going to be waiting for it and if everything goes successfully we'll just route back to the initial page of this app so this page technically all right now let's add all these things to our cart and now what we're going to do is as you can see because we've already minted this nft the discount is already applied you don't even have to worry about it and so now we can just say place order and that's the eighth equivalent of the 4.4.90 so let's go ahead hit place that order and as you can see the loading screen works and it just threw you back straight to the home page so with that said that pretty much wraps up this build thank you so much for watching as always if you have any questions let us know in the comment section down below with that said I'm signing out peace