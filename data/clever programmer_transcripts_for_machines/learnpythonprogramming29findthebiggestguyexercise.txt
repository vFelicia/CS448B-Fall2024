hey guys this is Kazi from clever programmer calm where you learn to code smarter in the notes below the problem who's the bigger guys there so take a shot at it the solution is also there but we're going to walk through the solution right now so let's get to it I'm sorry the biggest guy who's the biggest guy okay so essentially if you read the problem it says write a function biggest guy that takes in three numbers as input and returns the biggest one so I take three numbers and I find whoever is the biggest and then I return it okay so this one gets more challenging and if you've tried it on your own you'll notice there are a lot of if else statements that you're doing also on line eight I have a bonus challenge for you guys it's all right of one line solution okay what I mean by that is like two lines right because you have to have one line to define the function obviously and then you have to have one line for the solution so that's what I mean by one line okay now it's medium to hard difficulty because you guys haven't done anything like this before so it'll be challenging if you want to do the bonus challenge and I'll go over that as well first I'm going to go through the normal way so let's define a function called the biggest guy that takes in three numbers a B and C okay or we can call it num1 num2 and num three okay now the approach that I want to take against this is I want to find who's the bigger guy between num1 and num2 okay so find bigger guy between num1 and num2 then after finding the bigger guy compare after finding the bigger guy I want to find a bigger guy between I'm sorry or let's just say biggest guy right between big guy bigger guy oops and number three okay that's kind of the approach I want to take I want to find who's bigger between num1 and num2 and then once i find these guys right i'll find like the bigger guy kind of whoops bigger guy then i want to check the bigger guy against num three and then see who's the biggest okay so with that pseudocode / english written formula let's go ahead and try to code this up so if num1 is greater than num2 then big Gert guy is equal to num 1 right else bigger guy is equal to num okay and once so now I've found the bigger guy now I just have to compare the bigger guy with num 3 okay so if bigger guy is greater than num 3 then biggest guy is equal to bigger guy else biggest guy is equal to num 3 return num 3 okay I haven't tested this function yet hopefully it's right let's let's comment out line 44 which tests our function right we want to run this function because these are the tests I've written for you guys and it allows you to test your functions and if we give it one three two it should return three if we give it 30 10 20 it should return 30 if we give it in any order should return 30 if we give it strings it should also know what to do don't worry about that you don't have to do anything extra that's just a trick you guys python knows how to compare strings okay so let's take this bad boy out for a run we got an assertion error on line 44 what's the error did we like not write this correctly it was going to test biggest it should be called guy I don't know why I have by guy but what's the assertion error oh right cut yep return biggest guy duh okay boom there you go success your code is correct okay so it says I'm running tests and then it says good job your code is correct alright that's it for this one now let's try to change this and coat it up in a better way ok let's coat it up in kind of like a one line solution so the one line solution I'm ok I'm kind of cheating it's not really a one line solution what it is is um it wants you to kind of use your previously written solution ok so you can say define bigger guy of num1 and num2 and you can say if num 1 is greater than num to return num 1 else return num2 okay so remember this was the function you wrote for bigger guy um so now let's use that function to do this problem here here's here's the nice solution so I can say return bigger guy num 1 common um and I won't actually call my function here again bigger guy of num1 comma num2 and then compare that against number three so if I run it it again says success your code is correct now how does this work well I want you to pause the video and try to think of your think of yourself how it works but now I'm going to go over how it actually works okay so this is a really nice problem here it is allowing you to use functions within functions okay well I have this guy here right so what can I do with this when I pass it like one let's say I have one three two here right those are the inputs I pass it in as you can see on line thirty two one three two so what does this do it calls a bigger guy function with one and three using the bigger guy function it finds the max of 1 and 3 so this whole thing evaluates to a 3 then it fought it tries to find the bigger guy between 3 and number 3 number 3 is 2 so then we just go back to this function and find the bigger guy between 3 and 2 and then this function will return 3 and that's your solution notice this is the key here the notes right find bigger guy between num int num1 and num2 and then find the biggest guy between bigger guy and num 3 okay so let me go back and put it like this these notes will be here for you guys when you guys reviewing the video this is the solution ok and that's it we're getting closer to starting to now work on projects so like the Twilio api project where we will be kind of coding up some stuff and you can actually make a text messaging app through that and then we will also be getting to do some make some games like rock paper and scissors okay so a lot all these functions are very important for you to learn so then you can actually use these things when you're writing your own you're writing your own code you know how to think in the correct way one thing I want to reveal to you guys is Python has a builtin function called max that kind of does this and finds the biggest number all right so you can actually just say max of uh you know num1 num2 num 3 and I can prove to you it works as if I returned look it says if I run it which I'm clicking it right now and running it it just a success your code is correct so max is a builtin function that finds the maximum between you know any numbers you give it okay thanks for watching if you haven't already go ahead and subscribe right now I'll see you guys in the next video