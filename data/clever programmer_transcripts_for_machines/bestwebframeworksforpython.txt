CleverProgrammer.com We are actually live. I wanted to take a question that somebody asked in one of my last livestreams which was, "Hey Qasi, what are the best web frameworks for Python?" And I'm just gonna add in 2019. But these are not just 2019, these are kind of however many years. So it's not necessarily, it's gonna be, I think, My answer is gonna be still the same in 2020 as well. So, that's what we're gonna talk about in this video. So without any further ado, let's jump right into it. And I hope you guys are coming in. Drop your questions in the chat as well if you're coming live right now because we are live. So once you put in questions, my friend Frankie who is helping me record this will read out your questions if they're good and then I will answer them as well. But with that said, let's jump into what is the best web frameworks. So, for me, there are mainly two web frameworks that I wanna discuss because you can go down the rabbit hole and look up all these different ones too such as Pyramid and all that but I wanna just discuss two main ones. One is called Flask. And then the other one is called as one of our students in our program Profitable Shortcut says, his name is Donny by the way, as Donny says, DeJango. but this is actually pronounced Django. So you have Django and you have Flask which are the two main ones that I wanna discuss. Now, let's talk about some pros and cons of Flask. So Flask, what's nice about Flask is that it's really lightweight, so I'll put that here, lightweight, it's really light. Another cool thing about Flask is that there isn't much magic going on so I'll like say no magic. You don't have to go too deep to understand what's going on. So, it's easy... to understand. That's another nice thing about Flask. And those are some of the main things that I wanna talk about regarding Flask. When you're coding in Flask, everything will make a lot of sense. How do you route a view will make a lot of sense. And everything is very, very simple. So I definitely wanna add that too about it, that's it's very simple. And this is something that if you're starting out, I would actually say as a complete beginner to web development, you should definitely do some stuff with Flask before continuing on to another web framework. Now, I'm not saying you can't do advanced stuff with it. You can go from being a beginner, and you can still do really advanced things in Flask. So it doesn't mean that you can't, you know, there's some really big companies using Flask and you can still do really amazing stuff with it. So, whether you're a complete beginner or you're advanced, this framework, web development framework is gonna be a good one. There isn't much magic, it's easy to understand, it's really lightweight, it doesn't come with what we call batteries included, so it doesn't come with all these different things installed which makes it, you know, really lightweight. Then we have Dejango, my friend, we got Django. Which marker should I use for this one, Hmm. Let's use green because a lot of... Django's favorite, Django's main theme color is green. What I like about Django. First of all, their slogan is awesome. It's... for perfectionists... with... deadlines. So that's number one which is super cool. It's for perfectionists with deadlines. So perfectionists who have deadlines, wanna get stuff done as fast as possible. So, Flask, it's lightweight, it's awesome, but let's say you're working for a client, and the client does not care whether you use Flask framework or Django. They just want a project completed. This is gonna allow you to do it. Django is gonna allow you to build that project faster because it comes with batteries included. So it comes in with functionalities built into it like, you know, admin. You know how on WordPress if you make a website you have access to then, automatically when you make a website, you can go and change the blog post, you can add new posts, you can add pictures to it, you can manage spam comments, you can add a captcha, and do it all from an administrator interface, you don't sit there and code PHP directly, you're actually just using a point and click interface, and Django comes with the administrator interface built in. Which is really nice when you're say working with a client and you wanna just hand them over the app right when you're done and they can just use a lot of the things from the admin interface. Okay, this is something that for Flask you would actually have to build from scratch whereas in Django, it comes builtin. Now Django is a lot of batteries included. So it's a pretty heavyweight framework, it comes with lots of functionalities builtin which is why it also comes with an administrator interface built in. So while it's really awesome that you can get a lot of stuff done faster, sometimes what happens is that it's not so easy to understand right away. And you see how I said no magic? There is a lot of what we call magic going on in Django which makes it tougher to understand what's happening because it's pulling so much stuff from already installed packages and modules and it makes your code look like magic, okay. So that's kind of why we say that. Some of the things might look mysterious, let's say. You know, they won't be how you do stuff from scratch. So for Django, you know for Flask once you learn the basics you can kind of keep going and not run into lots of problems whereas with Django you might run into these problems that are kind of harder to solve, they're very mysterious. So that's what I would say. This still works for beginners, it's not like you won't understand it if somebody's explaining it to you but you know, once you get past Flask and understand how basic web development works, cause I think Flask will be easier for you to understand the concepts. Alright, it's better to understand them. So I'll say, I'll even write this, I'll write it here. Concepts... So it's easier to understand the overall web development concepts using Flask but then once you kind of grasp it you can actually come into here and you know, I'll say for intermediates, It's kind of a stretch, even if you're a beginner, you can start to learn Django and you'll get it. It's not that difficult. And I have a video course on it as well, which is on YouTube, it's absolutely free, you can look up Python Django tutorial in 2018. Speaking of which, I might make one in 2019. I think that'd be cool. So there's intermediate and this is also really good for advanced as well. Now, I've explained to you the benefits of both of these but I'm gonna also give you my personal opinion. I don't wanna be just that theoretical teacher who gives you the pros and cons and just goes okay, you decide. My personal preference and my favorite web framework is Django. Okay, that's my favorite framework. Oh, sorry, the battery is about to die on the phone, so we're just making sure everything's okay. Is it still live, are we still getting comments and stuff coming in or whatever? Okay, cool. Sorry, guys. So, let me know once it's plugged in. Good? We're good? Cool. Okay, now, I wanna talk about why Django is my favorite framework. When I'm working I wanna build stuff fast. So this allows you to build fast. Here, because you're doing all the things from scratch, while it's gonna be easier to understand what you're doing, you're gonna be building things slow. Because you're gonna need to build so much functionality from scratch whereas here, a lot of the functionality that you're gonna be building, essentially a lot of it is gonna come builtin so you're gonna very quickly be able to put things together. So that's why it's my personal preference. It's because I care more about being able to, I wanna be more productive as a developer. And if I'm more productive as a developer, then I can build things faster. And if I can ship code faster, I have the potential to fulfill my clients' needs faster, and therefore I can get paid faster and get paid more. I can work with more clients. And that is why I like Django because it's very practical and it allows me to do things really fast. If you're completely starting out and you don't understand the concepts of web development, this might confuse you a little bit but when you're going through basic tutorials, there's a really great guide by Miguel, Miguel, what's his name, if you type in flask tutorial by Miguel, MIGUEL, you're gonna get this epic web development tutorial using Flask, it's written, and you can kind of go through it and you will really start to understand the concepts of how web development works and once you go through that and you really understand it then what you'll realize, to do the same things in Django, oh my God it's so much easier. You know how you can build models, how everything just automatically works with a database, how it understands your code between views and your models and all of that. It's really beautiful and allows you to do things really fast. And then the ORM of Django is personally I think, easier to understand and allows you to build things faster, but again, guys, that's my personal preference, everybody has their own personal preference, so drop in the chat below what's your favorite web framework? Is it Flask? Or is it Django? And why do you prefer that? Because I would like to learn from your perspective too what you like. So are there any questions coming in or anything? There's no chat? Let's see what's going on, guys. [Cameraman] Okay, Django has future, it is free to publish Is it free to publish? Yes, there's stuff coming in, I don't know why you're not telling me anything. Okay so, is it free to publish? Yes, Flask and Django is free to publish. Also, Django has a lot of future and so does Flask. Both of these have a lot of future, it's not ever running out of future. Okay, so 2019, 2020, 2021, maybe 2021 you might have a different framework but if you understand these concepts, you are gonna be fine. There are so many big companies built off of Django and Flask and they're not gonna change their framework just cause of 2020 and 2021, right? If Instagram, so much of the code is written in Django, which it is, they're not just gonna switch to another framework like that. That takes a lot of time and effort and hours of code and tons of developer time and money and so you know, they're not gonna change it til many, many years later, yes. [Cameraman] They ask, and what's better with big data? Okay, so, which one is better with big data? Again, you can choose whichever framework you want but I would personally prefer Django again, because I just get to build things faster. When you're working with big data, it's not that Flask or Django will specifically allow you to do more things with big data, for big data you have to know how to use other types of libraries like Matplotlib and you need to know seaborn, and you need to know what are those other, Pandas, so I can write that down but I just wanna keep the board like this for our purposes but you know there are different libraries that you need to understand and learn and then you can just implement them into any of these frameworks. So if you're doing big data, it's not like one is gonna favor more than the other. But these general principles that I explained here still apply. [Cameraman] Would you say it's better to start with Django or with Flask? Okay, so, if you are a complete beginner, do some stuff with Flask first. Because that will allow you to understand. You know, I said it's easy to understand and simple. So if you're completely beginner and never done anything with web development do some stuff with Flask first, that will allow you to understand how web development works, and then move on to Django and you're gonna be able to see the beauty of how powerful it is and how quickly it allows you to put things together. If you're interested in going and becoming a Django developer and becoming a full stack developer, the Profitable Programmer course that we have at Clever Programmer does help you with that. So if that's something you're interested in, just pop over to CleverProgrammer.com put in your email there and your name and I will send you these three epic trainings and I'll send you this epic masterclass completely for free. And if you decide that's amazing value and you love it and you wanna join our Profitable Programmer course, it'll make you essentially a full stack Django web developer. Alright, so that's what that teaches you. And it also covers the first few projects. One of the first projects with Flask so then you can understand how web development works and then we move you over onto using Django and becoming a Django full stack developer. Any other.. [Cameraman] Best IDE for Python? Okay, best IDE, I've explained in one of my other videos is PyCharm, I think it's really good, yes. [Cameraman] Best front end framework, Django, Vue JS, or React? Okay, so for front end framework, Django I don't think is considered a frontend framework, unless I'm wrong? This is more like a backend framework. For front end, I haven't worked with React and I haven't worked with Vue JS but I've heard a lot of people talking really good things about Vue, but in my experience, I've seen more people talk about how React works with Django. So I can't give you a great answer there. But based on experience I would say start off with React, with Django and see what you can do, okay, and then move forward with Vue. [Cameraman] Do I need to learn web development for big data? You don't need to learn web development for big data but oftentimes, web development can help you a lot. Because a lot of the things that you're gonna be doing will require you to do a lot of stuff with the web. But no, it's not completely necessary for you to do that. But you know, if I'm doing big data, and I'm trying to become a data scientist I would like to be able to have a website where I can visualize that data, show that data, store things in a database, give people the ability to log in and log out so then they can see their data, store their data, and all of that. And for that, you're gonna need to know web development. Also, web development is an easier point of entry to start getting paid and become a programmer, whereas big data, is a lot harder to get into as your first job. So if it's your first job, web development is gonna be a little bit of an easier route and it might fall in line with your goals of still doing things with big data. So that's why I'm a big proponent of start with web development first and then go on to other things like big data and data science. Anything else that we got that's good? Okay guys, we're gonna wrap it up, we wanna keep it simple, I wanna try to livestream for you guys quite often. If this was helpful, let us know in the comments right now, or in the live chat right now, if this was helpful for you. And if it was we're gonna be doing a lot more of these. And we have Aaron who's going to be doing most of the technical trainings. Are they commenting, saying some stuff? [Cameraman] Thank you very much. Cool, stuff like that will let us know what they're saying. [Cameraman] Thank you very much. Cool. [Cameraman] What about Boda framework? This was great, thanks. Okay, cool. Alright, so it looks like it's helping you guys. I appreciate you guys being on here, thank you so much. We have Aaron who's gonna be doing a lot of the technical trainings. I wanna focus on more of the soft skills and negotiations, how you can actually do freelance work, how can you actually land a job, how to deal with interviews, that's where I primarily wanna focus on, how can you have other developers and manage them to do projects for you. So the channel is gonna be turning into where you're gonna be getting the hard technical trainings, you're also gonna be getting the soft skill trainings by me. And we're also gonna be coming out with a brand new program and that program is gonna be called How to Automate Stuff with Python, which I'm really, really, really excited about and you guys are gonna find out more about it as the days progress. It's gonna be something really big, something really amazing. But yeah, with that said, thank you guys for being here, I hope you enjoyed it. If you liked this video please give it a like, subscribe to the channel if you haven't already, and as always, I love your face, and I'll see you in the next video. Whoosh!