okay three two one what's up guys I hope I'm live this is Kazi from clever programmer calm this is aaron from clever programmer calm in this video we are going to be making a craigslist app clone okay it's gonna look like this i'm gonna do this quickly so you guys can start seeing this this is what its gonna look like what we're gonna build we're gonna be doing it with Python and Django alright so we're gonna be using Django we're gonna be using Python we're gonna be using beautifulsoup and web scraping and the end result instead of something looking like this when you type in ping pong which looks like garbage it's instead going to look like this okay another thing when you type in something like a Python tutor it looks like this which is not very pretty here when you type in a Python tutor is gonna be much much much prettier okay like this so which one do you prefer this one or this one I think we all prefer this one probably people are gonna say the other one justice yeah okay cool so that's what we're gonna be building who did I do the shortcut I hope so that's what we're gonna be building what is up everybody people are excited they're jumpin on epic code is on tech boilers is on made more gear Abdulla alright guys we're gonna be building this live together I hope you guys enjoy it and then yeah if our mic or anything is off or whatever just let us know is the chat okay are you able to go into the what did you do oh by the way guys any questions that you guys have just drop it in the in the chat we were more than yep we're looking for really cool questions as well so yeah make your make your questions great guys don't ask stuff like Python versus Java I'm gonna ignore it like braindead questions don't ask them ask more beautiful questions and you'll get more beautiful answers right right right up here with with Kazi and and and and Frankie and Frankie Frankie that's right so we got code okay so now we're gonna switch the thing and we're gonna go here all right now I'm gonna I'm gonna go and do that okay so basically I I think you guys get the idea it's gonna be you can open that up again so I can see Craigslist app I'm just gonna put it here so you guys can see it it's gonna have a search functionality like this okay search functionality like that it's gonna have a bar okay and then when you type something in is gonna spit back out the end results right here like this okay that's what we're doing but there are multiple technologies that we're gonna be using in this okay so there's gonna be like multiple different things so for example we're gonna have Frankie what are we gonna have what's one thing we're gonna have in here well images images cool but what technologies are using what programming language were using Python Python oh yeah I want you to jump in this to what other what's what other technology stacks are we using not C++ cool yeah what else HTML yep unless the other one for anything HTML and JavaScript okay a little little bit right I mean when actually be coding JavaScript actually uh we're staying away from JavaScript probably nothing wrong with JavaScript but we're just not using it don't need it and then we have databases so we're gonna be using like something with databases this app oh this app is also gonna be hosted online so which one of you knows what we're gonna be using to host it online mmhm do you know sorts of an h heroku oh holy crap Frankie knows his stuff besides just Camus though hell yeah there we go so we got here oku as well and that looks pretty good right are we missing something mmm bootstrap stuff oh yeah Sofer front end we're actually gonna be using materialized yeah which is like bootstrap would not yeah it's a it's a CSS by by Google and it's it's pretty nice actually it's very beautiful so we're gonna using materialized and then we're gonna be using obviously things like beautifulsoup to do web scraping beautifulsoup I guess I should probably just write web scraping because everybody gets that yeah um yeah what else other libraries I think that's it besides Craigslist Craigslist itself but that's just the website yeah yep so that's pretty good cool so that's what we're gonna be building yup beautiful Oh check here what is happening okay we got a bunch of people jumping on here that's great alright so let's go and now we're gonna start coding this thing up guys now one really crappy thing that actually happened recently with Aaron and I was we were working on this application and we spent about two days recording we have about 12 hours of footage with the camera and 12 hours of screencast and between two days we spent probably fifteen hours building this application for you guys and what ended up happening was the hard drive that we had got messed up and so what did you end up doing the SS Dean it was an SSD actually to the shop went to several different ones it turns out that SSDs are a little bit harder to maintain and to fix so at the end of the day we we figured out that we probably have to spend about more than $1,000 to get the data back and it takes more than a week to do it as well on a $200 hard drive on a $200 hard drive so yeah so we just doing it again on live stream in two hours be much better than doing all that yeah so we're just gonna do it on live stream yeah and yeah let's let's go so you guys can follow along okay so for anybody who's gonna wanna have replay value out of this is we're gonna drop the code the github repository or whatever like in the description so you guys can have access to it whenever you want and that way you'll have the code and and and for now you guys can just try to follow along with us okay okay so we're gonna build out a new project in pycharm so I use pycharm guys you guys can use really whatever you want yeah I'm Travis guilty I've never used Python with my life but now that cause you show me how it is like vyas could know a lot of people know it yes quite is everybody knows what Visual Studio is you have Visual Studio is really great yeah and Visual Studio is very light and beautiful but it's um but it's not like a fullon IDE you know because they're just like editors yeah okay so let's open up and start a new project so I'm gonna go to my command line now let's just make sure that showing the right boat whoops yeah those are the little mistakes on and watch out for there we go yep okay so if I'm coding on this screen and there's no code mmhmm let me know okay yeah the delays is gonna take a second okay so we're gonna I'm gonna go to my github and I'm gonna create a repository we'll call it what should we call it code daddy's list yeah yeah so this is a code daddy's guys it's a code daddy's series that's what we call it we're gonna go either live or create applications together we are the code daddies this is Frankie this is Aaron this is Kazi let's go okay so I just created the directory just in case you guys don't know how these commands were working we'll open up the finder so you can see but basically I just created code daddy's list right there like that okay cool cool so we got this I'm gonna now another thing I'm gonna do is I have Conda so let's create a virtual environment oh I'll make this bigger so it's easier to see for everybody okay so now I'll make a virtual environmental Conda create name and we're gonna call this generally I like to call the virtual environment the same as the folder name so we're gonna name it that and I'm just gonna install Python 3 in it for now oh wait yes I like to create virtual environment so everything is nice and packaged in one place okay just be aware this part is blocked yeah this part of the street oh the Brea the right side just be aware okay thank you I'll kind of stay out of there yeah if it's ever getting blocked like let me know from there and also they'll let us know in the chat yeah yeah okay so now I've activated the virtual environment as well cool okay now let's go inside of that directory seedy are you kidding me what are you doing seedy code daddy's list okay we're in there and now we're gonna start creating actually I just lied to all of you guys I'm gonna delete that list because this is a Django project so we actually need to run a Django command to create that folder so what I all I did right now is I just removed that folder okay so we're gonna use a Django command now I have to see what's said Django command that we use here Django admin there we go it's like Django admin start project I just did something called reverse search which is super super useful it's ctrl R so do that like if you guys are watching this actually write that command down it's super useful for the command lines one of the most useful command lines to know control R okay control arm all right Django admin start project and we'll call it code daddy's list like that oh let's install Django pip install Django yeah you can just like run that what the hell's going on Django and command not found Django installed in the virtual environment is it when you create the virtual environment it might not be installed I did install it just now fehb install Django I miss that step yeah Django admin start project running into problems very early on jingle admin or something is that what it is okay Django admin start project oh it is you're right Django and man like that okay so now it got created we'll go to code daddy's underscore list okay now there's some kind of django Django admin this is start app or something like that some there is another one these are ones like you always kind of look up these are just to kind of kick start off the project and then once this project has started you can actually just focus on the coding part of it just start at something like start app I think start app so what it is Django admin start app app name so that's what it is okay stop the pack search Django admin start app and we'll just call it my app all right now we're gonna open this up in PyCharm this will also help you guys learn Python pretty well so let's open up code daddy's list will do a new window all right so this is what your guys's directory and everything should look look like as of now okay good point thank you for actually pointing that out because on the live stream it will actually look tiny I'm blurry and blurry so I'll go and at 20 I think this will be a lot better right I just made it huge okay now a few things for pycharm we're gonna go into project I'll go in project interpreter and I'll pick this code daddy's List environment that I made so pie chart is pretty smart it kind of detected it already so it it already kind of has it selected to that and then I'm gonna go in the build and exit build languages and frameworks I'll go in Django and it also knows it's a Django project it knows the root of the project it has django support enabled and this is the script cool this is great actually that's awesome yeah i love it okay let's some said another one move this here let's move this guy here okay so because we just built this app recently we're gonna be referring to a lot of code on our end we're gonna be referring to a lot of code from the app that we built but we'll try to walk you guys through it step by step so it makes a lot of sense to you as you're watching it okay so let's kind of build let's run the let's just run the server and see if things are up and running as of now so go ahead hi thon terminal and I'll be like Python managed up py runs server that file has a bunch of useful tools in there and then you just like call it and then it does a bunch of Django still for you so right now we're doing run server so now that we created the Django directory we can just run server and then it just starts running like it's like the basic framework as you can see right there on the screen like it's just working like our website is already up in hosted and all that yeah now it's not most yeah a local local local yes exactly yeah so our and it says install worked successfully so at this point that's the screen you should be seeing okay if you're not seeing this screen then something is off okay so make sure you're seeing that screen okay so we have this up and running now let's uh let's go and create pretty soon what we want to do is we want to create templates so then we can actually render like a basic template that's that when we go to the home page that's the template that shows up so the way that those directories work is I believe you want to create your templates file if I look at the project it should be in the root folder you should have templates so that's what we're gonna do I'm gonna go to my root I will right click here I'll create new directory and I'll say templates okay so we have templates now inside of templates I'm gonna have my app and inside of my app I'm gonna have other stuff so in templates I'm gonna do new first I'll create a base dot HTML base and let's call it the code daddy's list in the title and then we'll just say h2 will give it like testing to see if this works like that okay now this is not just gonna render automatically we have to create a view map a URL and like really make sure that it's it's working but few things we want to do in settings whenever whatever app you guys have here you want to register it in your settings so you got to go to your settings you got to register that app so installed apps we want to install our app that we created like that yeah the cool thing about Django is if you have an operating directory fool he made you can maybe just pop pop it in and then add it to the installed apps and then it's pretty much that's it yeah 99% done you might have to tweak a couple things here and there it was like I don't know I don't want to a hundred percent but I mean it's pretty much on your person yeah yeah like Django does a lot of stuff like automatically so that's what's cool about it okay there are a few things that like you should just literally copy and paste that you should have so that's exactly what we're gonna do so we're gonna go into settings from my previous project and you you want to have like this templates line and this problem you might not need the project route line but let's get this template line and we're gonna paste it here because you want your Django to know where your template is stored okay this is how Django will know and all this is saying is like hey just join the base path with templates so now it's able to find where this templates is and then we got to add this template dur to I believe here so I got a new template dirt like that okay so that's one thing you got to do template dirt and then another thing that you want to do is you want to kind of add static as well because later we're gonna need static so I like to just take care of this in the start cuz this is one of those things that's like super freaking annoying if you don't get it right so I got that static line I got my template der based or static is gonna be my style sheets and things like that so when I'm creating graphics for my web app yep we're gonna create a home view and all this is gonna do is gonna return render and request and it will render the home page so or the base HTML so I'm gonna do temp there's a templates or do I just do I think I can just do based at HTML so this is where you see this is where PyCharm is really jacked right this a string but as I'm writing it and because it can detect it through Django it's coming up and it's also telling me what the argument is right so I can also just I can also like name these arguments yep so right here so I can actually go to that file if I hold command I can click it I've wanted that encoding for like the longest time like even I just like wanted to know like where a variable was assigned or something instead of like searching but I want to see like where things are happening if I can just click on a variable be like oh this variable is set before up here or something like that that's pretty much what that is so pi chat my turn is a pretty beastly about to tell you you just actually put visual things there or what's up cuz in android it's a little bit you can't have to do it more manually yeah yeah there's like one file for everything and everything file does something different with django Django it's kind of cool because you as as soon as you do that Django start admin command or whatever and it kind of structures the stuff for you out of from right from the right off the bat so you don't have to do a lot of work by yourself okay so we got our base HTML now we got a map some URL stuff to it and then we'll be good so I'll in under this thing called my app I will create a I will create a new Python file it's gonna be called URLs okay so you should have two URLs you should have one URLs under code daddy's list and you should have one URLs not py under my app okay let me go to our URLs in the test app or sorry the my app version of this yep okay URLs cool so basically all this is saying is if somebody goes to the home page just to route the view route the view to the home view okay so if somebody goes to a path that's empty so for example this means like clever programmer calm you know that's it not clever programmer calm slash something this just means clever programmer calm so somebody's going to just clever programmer calm well then what I want you to do is go to this view that does this stuff okay so that's kind of all we're doing here so I'm gonna copy this and then we're gonna paste it here we're gonna say from import view so we can have our views and then I'm gonna say from Django dot URLs import path okay alright and then we want to do URL patterns URL patterns equal to there so this should be looking good and then what is in URLs here kind of like some similar stuff include my app dot URLs okay admin site cool so this is another important one we'll add that one right about now oh that one is there what were you what were you saying right now so yeah so I'll show you what the admin when you so I'll show you Django comes with a builtin admin okay so so I'll show you what that means in just a second so we're gonna do Python manage that py create super user oh wait hold on Python manage that py make Mayan creations Python manage that py migrate cool so now that we have migrated now let's create so this is the initial migration right you see 0 0 0 1 under Sorna initial so now we should have this thing called migrations over here now we can create a super user I will call the username admin email address this and then admin again sure cool so now if I go run server and I go back here and I go boom and I go slash admin you'll see it takes us to an admin and if I log in takes us inside on the backend and if I go users there's one user that we just created a called admin but we don't really have anything else how was it how was it this this kind of comes built in with the Python Django built into us this is what what I like about it now if I go to models right and I build like a basic thing so what is it class models that model okay so will create like something called search and I'll do models dot model and okay and basically we'll copy these two lines whoops okay so we got so basically all I did is I'm like hey create so I'm gonna create a database called I'm gonna create a model called search and then I want you to call one of the fields in there like search and I can even call a like search field but let's just say search and I'm saying make all search takes in so search imagine it's like that bar right there so all it does is it just takes in like some input okay that's it and then we should have like one that like timestamps when it was created okay so I'll go here will grab this one and I'll paste it here okay so now whenever you add new stuff to the database what you want to do is you want to make sure that you migrate it to the Python database otherwise it doesn't get stored what I'm gonna do is I'm gonna do a Python manage make migrations and then I'm gonna do CC create new model created yep now the migration is done right so we're gonna go run run server like that I'll hit refresh oh okay so now we're gonna go to UC admin py right from import models and then I'm gonna say it's something like admin dot register board models dot search something like that hold on how is this written admin dot site admin dot side to register and then from dot models import search yeah okay so now when I go here and refresh models is not defined literally it's right here oh my bad so the server stop running let's run it again so now you see it says my app is here because we I integrated it into that interface so we don't have to create an interface for it if we don't want to we can just use Django's like builtin but an interface for work or your app yeah so it's like showing us that database that we created of searches so now whatever you search it'll get stored in here okay yep so it's just kind of getting stored in there automatically and you see how it's as searches like that which is kind of wrong because if it has multiple searches it'll say like that because all what it's trying to do is just trying to put an S in front of it so for certain things it won't work like for search it searches with the es so then there's a little trick we can do which is called we go here we click class meta and then in class meta you want to do what is it verbose name plural and then you just say searches like this go back it's gonna be searches it's it models are like what's in your database yeah you can think of it like a Excel spreadsheet okay so this searches that I just put here it's a column in Excel spreadsheet called searches it's this is actually this is a really good thing that you just brought up so we can actually show it visually right so we can actually model our database code Daddy's list database right searches and then what was the other field we put in there you remember search and what else yep so there are two things that go in there so this sheet is gonna be called like search this is like the search database and it contains searches and it contains when it was created right so for example a search might be like ping pong and then it'll store and say like it was created on August 7th 2019 and and then the specific time right whatever time I down to the nanosecond like it was crazy yeah so that's how you do searches and you got created and and every time somebody like makes a query it'll get stored in okay few things when I add in something here blah blah and if I hit enter you see it says search so I go in and searches it says search object 1 you click into and that tells you what that object contains right it even has these breadcrumbs click searches and I'm gonna click into this it goes deeper search objects like right there so just called breadcrumb so what we want to do is we don't like what it's a search object we want to we wanted to just show us what that is in English yeah so I can I'm gonna do this and I'm gonna say return well the dot format self dot search okay let's see if that does the trick there we go okay so I'm just saying whatever the search was created like returned the search field of it and then it goes okay got you yep instead of like it's saying some weird thing like object how's the chat going bro like keep me up tell me what's going on is anybody asking questions what's happening okay cool nothing's going on chat okay cool so this okay so this is what's creating that string now dad is looking good the next thing we want to do is let's add wait what should we do on the next thing oh yeah let's render the front end now like the basic template that we made remember we made the base this thing so let's render this so now I should render testing to see if this works so we'll go to views it's saying it's gonna render it and then our URLs are looking pretty good so let's give it a try now nope that's not working views I want to do include and then how do you yeah so I want to I want to say something like this from my app import views and then I want to say if the path is this then I want you to include the URLs from my app dot URLs like that I think that should work there you go so we're saying if the path is like empty just referred to the URL mapping that I did in my my app you dot slash URLs that py so now anytime I go to this so here's how it works right when I go to this empty thing it goes to this view and it goes oh the path mashed is empty so then run the home function from views so now let's go to home and home says render the base HTML and basis you knows this okay so that's how would I try to draw it board yeah I think so basically like the very basic idea of what framework is just you specify your URLs right and then specify your model your data first like what kind of data you want and how it's gonna be and then you have your else and where anywhere else just go to some code and I get word renders some frontend stuff let you see email JavaScript CSS whatever you need yeah so URL to code for you so basically like URL to code and then something happens and then front end you look at that code calls the front end code which you like display some HTML line you can like write well you go to this URL run this code do this stuff call these libraries and then display all this stuff yep and then that's really it you're just like a website just consists of a bunch of URL is right so that's kind of makes sense okay so now this is rendering that's pretty good okay what what other functionality should we add now let's compare to this should we add more of the frontend let's start with that we started when you started with your to do this out okay so let's start with the frontend right yeah yeah cool there's not todo list app there's no todo list out there it's just Craigslist app there's no todo list app yeah yeah so we're pretty much gonna be doing it so now we're gonna just build out the front end of this app so let's go ahead and do that okay so you're gonna need a static folder okay which contains your CSS and then you're gonna need some frontend stuff and your index and in your search all right so let's create our static folder now and we're gonna have the style sheet in there and your static if you notice it has to be created at your root directory okay so we're gonna create static for ourselves in that root directory like that and inside of the static will add another directory gonna call CSS and then inside of here we'll have a stylesheet and it's gonna be called style okay and I'm gonna go ahead and steal my stylesheet because otherwise this tutorial will literally take 20 days okay I'll explain some of this stuff but yeah other stuff is actually not that necessary for you to know there's actually you don't even have to do a lot you actually can pretty much leave your stylesheet empty as of now okay like I'll actually say for now you could if you're following this tutorial you kind of leave your app stylesheet empty so as we're building it I'm just gonna leave it empty as if now oh and then one thing always kind of do this always like sync your project with github so I'm just gonna do it you can follow along you don't have to like do everything but you should do some of it okay so I'm gonna create a git ignore file first this is important get ignore I'll add an idea in here so it removes any JetBrains stuff and then I'll write Python and then I will hit generate so now it won't add any like dumb stuff to my git I'll go create a github repository repository new new and what should we call it code daddy's list mmhmm like that cool I'll initialize this repository with the readme and we'll do create cool now I will go like that I'll say git remote first I gotta get in it huh what the hell I had that's weird I had Xcode okay this is super annoying if you keep tapping enter really fast and then it asks for a yes or no and if you miss it then you got to start all over again this is fun if you get all into the end with the spaces then it kicks you out yeah because it knows you were trying to skip it fast so you have to hit enter all my goodness yes if you're watching this and replay to skip this part probably there goes my monetization type print to print anything else by tapping agree you're agreeing great agreed okay get in it there we go see how easy that was if your gate doesn't look that cool like mine does it's because you're on the poor version you have to get Z sa z SH s free so you get Z SH but if you're on Windows you're gonna not be able to get it which most of you are so the Windows command line sucks as pure garbage I'll throw your windows laptop out get a [ __ ] Mac you're you're gonna have so much not still sucks it's garbage you're garbage unless you're a professional developer even then is gonna give you a lot of pain so I just throw your windows computer out make your life easier or learn how to use vagrant and then you'll be in a much better position okay learn vagrant it'll help you but in between answer use baboon like get a good command line for Windows and then you have a chance okay otherwise every tutorial you're gonna try to follow you're gonna have so much trouble you're not getting able to follow it so that's why I say that all right let's continue so we did get in it and now we want to make sure that let's see what's happening here okay so dot idea should actually be ignored like this should be being ignored so now I'm gonna try again yeah now the idea isn't showing up now only the good stuff is showing up great so I'm gonna do get Ad dot git commit initial commit and then we will do get pull or git remote add origin and I will paste the URL here's the URL okay so now if I do get remote git remote V you will see that the remote the repository is linked the one that we just created remember so now it's linked right now it's empty right once I push the code all of my code should be here that's in the code daddy's list right now this is so annoying stop showing his stupid error okay git add nothing is being blocked right Oh dudes arm commands being kind of blocked or make it smaller maybe it looks good whenever ok get so that's looking good now what we want to do is git push get pull origin master I'm still probably getting blocked they're refusing to merge unrelated histories okay how about get push it was giving me a problem with basically this readme dot MD which is almost empty so I can literally go and delete this I don't I don't need this right now okay get push origin master get push i'll force the issue get push force origin master and now when i refresh all of my code should be here just like that now I'll create a readme as well and all it'll say is this is a let's do that because it's a markdown file this is a craigslist clone called code daddy's list okay now we'll add it say add readme get push origin master so now when i refresh this you will see the readme file get rendered here soon there it is so this is a Craigslist clone called code daddy's list okay I don't know why I didn't register it as markdown but whatever I don't care all right so let's go back to what we were building what part should we add now Frankie you tell me maybe the banner on the top or maybe so start with a banner yeah okay so we'll start with the banner there's like a black bar at the bottom so like it doesn't matter what happens to the webcam but it's blocking all commands that you're typing in because I don't know what Aaron's talking about dude this is YouTube yeah this is oh this is how it looks on YouTube all the ways there's a little bar at the bottom dude there's no black font you know what I'm talking about useful yeah cool so let's add the snapper yeah yeah okay okay where do we go these things we add them to the search you like preferably yourself to do all these things all these methods and callbacks that get the min and Max value or actually start doing the the visual stuff first cuz you know sometimes you start doing all the functionalities and then you get wrapped up in that and then you get a little bit confused when adding the visual parts of it right what do you do I personally is cutting off right there on the screen so it's blocking all the commands I don't know what's going on but all that on that word is getting cut off like read off here right I know why because we have it zoomed in on OBS so what I can do is just move to screen oh yeah a lot of the bottom is getting cut out a lot now it should be better no no it's gonna be completely better yeah you'll see yeah I'll come up in like a few seconds yep okay so yeah that's a good question my answer to that to be honest and you might have to come in here a little bit cuz you now work right so my answer to that is I generally like to do the backend stuff first I hate the frontend because like okay think about this right on frontend you're putting like a pretty button and then you're trying to change colors for like eight hours yeah right like that's not you're not making that much actual progress whereas on the backend you're like actually making all the progress like that's where all the functionality so I like to just do the backend and then front end like you can do it anytime that's like the easy part and then start that's not a real friend developers gonna get triggered yeah I don't care there should that's easy work okay so I'll just hire out frontend developer from up work okay so we got so let's build out the bed but I want to build like the frontend so people can see it you know everybody's watching it cuz that's they'll find it cool so let's build out like basic frontend functionality here alright so in our base side HTML what we want to add is the materialized theme okay so I'm gonna I'm gonna add that in okay so I'm gonna basically copy a lot of this code like you need static files you need load static so that that stuff just does some basic stuff I'll go here some basic stuff got it yep we're gonna call it uh Co daddy's list okay so a lot of these commands kind of just like come these are boiler plates I am here I'm linking to my stylesheet which is here here I'm adding materialized CSS so materialized is pretty cool materialized code right here okay this is what gives the style yeah it looks like this ugliest [ __ ] yeah once you have it styled materialize it won't look like this anymore you'll you can add cooler stuff you have to build things from scratch you know I hate building things right it's just like somebody spent a lot of time writing CSS and like stored it as a library and then made functions and stuff like easier for you to call yeah oh not just beginners dude a lot of developers do this [ __ ] like I'm like CSS like how long does it take to remember all the little syntax and if you're off by one little space and this and that and then you have two more like the arbitrary name of the of the field and then it's like Oh was it character size or you can rule your life away that way yeah sighs or was it character dot size or character space side like what or under slight you waste all this time for nothing yeah it's just useless gingerbeer by the way guys yeah because there's like five five ways of doing the same things yeah crazy yes it's a stupidest thing I think this is why most developers are not actually good even when they're good because they're doing stuff like I was I build better apps some of my like mentors who I was paying and they had 35 years of experience in coding and they were fast as [ __ ] they were amazing but the reason why I built better things as I just used libraries look I just use better resources whereas they kind of got off on the fact that they could build it from scratch and like write the algorithm for the CSS and I'm like feel smart or just use flexbox you know you can get a PhD degree in math and like figuring out how the Flex like you know remember we were talking about how the sizing works of the images or you just use flexbox I never use my like don't use your brain when you're coding like unless you absolutely have to like copy paste Stack Overflow it's like literally obviously you know there's a joke it says there is like beginners copy paste or something like that and then they're like pros know what to copy paste and where to paste it you know what to copy and where to paste it so you still have to be smart in like where your copy pasting and how it's working but I don't use my brain power until it's a new problem I'm solving I don't like to use my brain power for just random stuff so like all of this stuff like front like this what we're gonna be building right now most of it it's like okay I have a design in mind that kind of looks pretty and I just want to move on follow it and then move on and then where I really want to think and problemsolve is where there are unique things like the web scraping part you actually problemsolve outside of that you don't need to keep problemsolve everything from scratch so there we have it these are our style sheets that we're gonna be needing for this let's just run server for now and see what's happening style sheets working how long does it take to land your first clients web developer if you just start today um fast did you do it I did it I got my first client in three months three months yeah but you were busting your ass yeah so for normal people you have to do like 10 hours of coding every day for six months and maybe you'll get a client I just did 15 to 18 hours a day for every day for a really long time yeah so that helped me improve a lot faster you know like okay guys let's move on to the next portion what's the portion we should move on to now all right add in the bar right okay cool let's add in that nav bar so luckily the nav bar code kind of comes with this app I'm just gonna copy paste it from here this is the nav bar code so there's a container class and then a nav wrapper class okay so there these are two classes we're using and then what this is saying is that right code daddy's list the URL the link is just home the link is route yeah you know okay perfect on mobile move it right and then just write home on the right hand side and then the link should just take you to the home route cool HTML so there it is when I click it takes me to the home page click it the reason why I added container here guys is because whoops if I remove this right I have it like this when it's not in the container you see how it's just wide container just contains everything you want to put everything in a container because you want to be able to manage it later interactive well still interactive it's not that it's not interactive it's just all in container that does like this is a container and now everything that goes will go within here from here yeah you could make the container wide open like if everything's in a container you have control over that container you don't have control over well okay so guys here's the here's though if you can't wait for the source code here's the one that's already up there so if you go to Craigslist scraper it's not here but this one you're gonna have trouble making it work but yeah go ahead and use this one if you want if you can't wait this is the link just look at the link in the URL up there that shouldn't be fine okay but just wait for us to make this one that we're working on right now because that's gonna be the clean one wait somebody already started oh [ __ ] Stewart Stewart is on it okay cool so we got this now what we want to do is we want to add you want to add search bars and stuff like that mmhmm okay so we're gonna add search bars and stuff like that okay so you got a container okay we got this container right here this container should really be just all of them so like this code should actually be better the container should just be at the top right there and then everything else should just be and underneath it and then this should just not have the container like this so basically the change we're gonna make to our app right now is we're just going to remove this container and we're gonna add one container right here okay whoops like that okay let's just doublecheck this is working oh that does not look like it's working bad idea let's add this container here anyway and we'll probably gonna have to remove this container at the top yep boom let's remove dad's for now boom there we go back to back to where we were guys okay so there we go now okay so I'm gonna copy paste this part and then I'll explain it as I go okay well we're trying to do here is I get I'll put one just so you can get the idea no no no no no no no no no no no okay so I wanted to write what do you want to search for on code daddy's list we don't need that line that says testing to see if this works we're gonna need we have body right there we have body ending here and Wiser's complaining stop complaining what does it say element div is not closed okay there we go cool refresh okay that's gone so all we've done is we've added this and then we've added this okay now for this what we're using is something called flex box flex box allows you to add images where they don't get like here we'll go to code pen IO on our flex box automatically changing its size automatically and want to close it more automatically automatically it's figuring it out on a mobile device and it's keeping each thing equally separated automatically so instead of having to do some complex math flex box just makes it super easy yeah like literally coding this yourself would probably take days and weeks to get it all correct okay so there you have it right and now when we're doing this it's automatically changing everything is working now what's what would happen normally here is like these will be images or whatever so if you're having images you want them to be in a flexbox contained not super messy all over the place it contains and then it makes it just it understands how bullet points work and images work and things like that yeah so let's get out of there so that's why we're using flexbox okay so what I've done here is this part right here right over it says div class row so for a flexbox what you need is you always need one everything that's like in a row here this is one row then you can have another row so then every the second row will be like below heat this one okay yeah so we have one row and then in that row you want to put like hot what's look what's the size of the thing that you want so you could have like s4 or you could do s12 and now change the size so if I go here it'll change the size of it or if I go four it'll know what to do okay so like if you keep changing the size of it you could have like ten images in a in one row or if you change the size of it you could have only two images in a row because each image is gonna be huge it's the I'm saying to that to the number that you're right so you want to make the column debase on that right so I chose us for what's happening over here is the following this is what I did so I wanted to get this I want to get this icon hmm okay well how do I actually get this icon so when I go on components icons okay icons cool so it's like yeah like how do I get these icons right Wow if I go to lightning or if it's called flash underscore on and when I do inspect here it kind of shows like what they did to bring it so they did a material icons medium icons em right they just have the pictograms slash like icons like built in and you can just use them so for example I can just pop this icon in go to the code and hit refresh and like it's there right so that's the that's a really cool thing about it which it which is awesome you can just use but these are materialise icons so i don't even have to do anything extra I have to go to like there's there's this website for icons for frontend you don't have to go there you just get them from here and then what I did is I gave that icon a color so I gave it the specific color that's why it looks like this instead of black right and then it's called flash on okay and then I wrote some copy frags list web scraper Craigslist web scraper and then I wrote some more copied right underneath it that says scrape away right here with a beautiful gooey cool alright so now I'm gonna go ahead and I'm gonna copy one more guy from my app that I created earlier okay filter your searches we built in functionality filter based on pricing and then I'm gonna copy one more guy okay yeah just please make sure that it's good just make sure it's good if it's not good then let me know but I'm not coding there right and that's where it cuts off yeah but I'm not touching most stuff up there so it's okay I'm fine because otherwise I would have the I can't zoom out anymore of the screen so something has to give like the bottom has to give or the top has to give and I realize bottom is more important most of the times okay so we got so I added all of those in Nautilus refresh we got all the icons and everything cool so now what we need is the search bar okay another thing you want to do guys is the following we also need this script by the way and right before body tag right cool yep and then we want to put everything in a container starting from here so I'm gonna go here and I'll say div say class equals container boom pace well there we go okay all right and now what I want to do is I want to turn base a dot html' into something we can keep using in all or other templates so we want to create like a base dot HTML and then we wanna be able to just use it everywhere so we're gonna create this thing called block content and end block content so we don't have to it's according to like the DRI principle do not repeat yourself there okay so I'm gonna go in templates we will create another directory you should be called my app I guess and then inside this directory we'll create a HTML file and it'll be called new search dot HTML based hTML is gonna be the home home page and then if you create a new search then the new search page is gonna open yeah open up somewhere else yep but because beta even the new search page should inherit a lot from base HTML we're gonna we're gonna do something a little bit yeah so we have the new search dot HTML now we want to be able to create a view for it so then we can actually go to it at some point so you see how the container brought everything in in that was why we did it okay so let's go to views define what did we call it in this app new search George so request and then we'll say return ok and we'll say my app slash new search okay now we just need to create a URL for it I'm gonna go here and I'll say if anybody goes to new search like this this yeah yeah you're getting it right awesome I love it we're gonna say go to the new search function that we created and we're gonna give it a name of new search okay so now if I go to slash new search as it being rendered blank okay let's refresh it's all here so we want to do instead is we want to inherit from X we want to extend base dot HTML new search and then outside of that we'll want to say new search ok so now what you're gonna see something cool happen where the house where do the hell does this a new search Oh yep we're gonna create um we're gonna do start or wait what is it start block content or block content like that and then we're gonna say end block and I'm gonna put it in there right and now boom okay so you know how in the base we said block and the block so what's happening is it's inheriting everything from the base and anything that goes in between here it's added on right so for example if I show you the code it's pretty much gonna be the same code except for whatever is in [ __ ] sandwich in between block content and block content everything in the new search is gonna be to keep the base HTML template going yep so okay now if I do view page source probably have to come more this way if I go into page source you see how the code is the same as basis HTML yeah even the script part is here the only thing that's new is it ok so that is looking great our new search template is working but now what we want to do is we want to create like a form so people should be able to type stuff in there and then hit submit on it action is where once you submit that form what URL it takes you to so we want to do is like how does it work URL new search like this bad I think there okay and then we got to have a method and the method is gonna be post okay when you do forms you want to do not get method but post methods we will have some input and the input will say type text and then we'll say name is search and then we'll say Val Val you search something like that actually when you just need placeholder I think okay so now search with the placeholder you see the placeholder yep I don't need this guy anymore I can just have this but now we need a button so we are gonna do input type submit okay and then we'll give it a name of submit there so CSRF verification failed all that means is we just need to add is CSRF token in Django security feature and then as soon as you add it this should go away okay oh let's try again that's it you don't have to add a functionality to the button what the hell CSRF token is missing interesting it's lowercase with underscore right okay si s RF or si si s RF ya CSRF token hold on what templates new search that's what I had earlier oh maybe I just need to like start the server again there it's fixed so now it's sending okay now it's sending the actual post request I think what you can do is like you can go inspect and you can go in network and I think if I hit submit it shows you new search like what was submitted preview you can do headers and it says it was a post request 200 it got sent correctly like if I change it to a get request and I hit it you know and I click it they'll show me like preview what it was it shows me what it was and then it says probably have to refresh it or something or whatever but you get the idea right requests remote address and then it tells me all this other information with it like if I did hello and I hit enter then you'll see not only will I get this but I'm sure that I will also get the value that was in that field search so I wrote hello right yeah I just got access to that hello so that's how you will pull this data out so by just putting a button on the actual form mmhmm by default if you like did you actually put the the method to submit it or you can just choose it to submit it yep you just choose it to submit it an HTML comes builtin or that functionality from the Java class from your java classes that you made you know damn that's painful dude well we got to do some flutters stuff too at some point okay so we got this we're just gonna keep search functionality for now what does this look like okay it's got a container right so that's probably why it looks like that so our base HTML there's a container here and then it ends right here so I'm gonna end the container here that way everything is wrapped inside of that container there you go looks better now okay so we have the search functionality we have the ugly submit button I'm sure we can get a better prettier button let's look oh my god these look juicy right yeah let's use these [ __ ] the ones we hook the one you were using thanks materialise let's just make sure that it's working as expected let's go Network hit this new search pose oh wait oh there we go Fifi cool cool got it man that's nice send what if I did flash on what that work you can like add stuff because the button is like a container itself is like a little container what it is it's just a box so you can put whatever you want inside love that okay so that's great what else do we need Kazi man you demand yeah yeah will be recorded yeah guys just do me a favor guys our YouTube is [ __ ] dying for some reason I know what's happening it's that [ __ ] like here I'm gonna pull up some socialblade I know what the hell is happening guys like we're producing more content than we've ever had and YouTube is about to die look at this I have zero idea why we're producing so much content just so if you could just do us a favor please give it a like or share it or something but like we really need your help because YouTube is just choking us we're producing original content we're working our ass off to make really good content for you guys but YouTube just keeps choking us so if you could just like it and then share it that'd be awesome let's continue making this [ __ ] app I'm pumped okay materialise have any nicer search functionalities or whatever yeah or it's fine I guess a little bit shorter yeah it's not bad right it's fine freeloader Hotels preloader Oh yeah but then how do I stop it yeah but how I I want to think about it okay guys but let's let's just focus on what we were working on what's collections that looks fun components and buttons all right so we have a goodlooking front end over here somebody just sent it like that right now thank you so much appreciate your face appreciation the face buddy thank you yeah that's great okay so now we got this foreign button now all we need to do is when somebody types in should we just now get to the part where somebody types in spits back some kind of results or something okay so let's create the frontend for it we'll just do the frontend part right now so let's go how did we okay alright so let's going to views and what we're gonna hopes wrong views views what we'll do is we'll just pull data out of the search bar for now so whatever you put in the search bar let's pull that out okay okay so what we'll do yeah so we'll say new search is equal to oh let's not call it the function name because it could get pretty recursive okay yeah okay request our post get new surgery oh no I just searched yep so what we're doing is we're pulling out what happens when I go late so we're going here and we're getting this okay so this is request because it's a request and then we do dot post because it's a post request so it's a post request right that's what we do dot post and then we do not get and then we're like search okay this get is not to be confused with the post method and get method this is get as in Python dictionary get because request that post returns dictionary yep it confused me too until I just taught it I like teaching yes because you don't really like actually think about it no I know for HTTP requests it's always all caps so I when I see get I just get when I see all caps then I think HTML yeah every HTTP makes sense okay all right so we're getting this so I'll do prints search just so we can see it in the console if somebody types it in I'll do this and submit and a few few write Python tutor it's a mint Python tutor so we're getting access to it now we're gonna send this to our front end okay so I called this variable stuff for frontend I make it real easy so we're gonna call it we're gonna say search was the variable search okay later we're gonna be adding more stuff to it so let me just make the dictionary look like this okay and then we're gonna send this to our front end so we'll say con this is gonna be a context dictionary so I'm gonna say stuff for front end then well I'm gonna go into new search and I'll just say that Oh this form should be rendered in bass this should this should be getting rendered in bass I'm pretty sure because bass needs to have the search functionality and otherwise it's like silly you know what I mean yep and so now what we're gonna do is you could never get there in the first place right you would have to like hardcode type in new search at the top which it won't make much sense okay so we're gonna say what are we gonna say oh yes so we have access to that variable so let's just print it out search and now when I go here and I hit refresh and I do if I go back to the home page and I go hello yeah it's like actually writing it into HTML so now what I'll do is I will add h2 here like this I'll add another h2 right there and now look big and now what I'll do is style textaligncenter so now it's gonna be centered and now another thing I want to do is if I'm writing like this or whatever right if I'm doing Python to tur it looks silly right so what I want to do is pass it the filter called title so then what that does is that no matter how you write it it'll title it just forces like Python which you every word per like that right I'll still do it okay we're so fast dude who's making apps us fast nobody pretty ups playbacks dude if we hit thousands in the live stream every time playbacks that's pretty good it's really good and then concurrent viewers I guess we can solve this problem too at some point because if we just keep coding people are just gonna keep coming in you know oh I guess we could have told our pipe Instagram to like swipe up or something who cares alright let's go alright alright tiny reg I mean okay so know what we're gonna be doing is I'm just gonna make a simple card for you guys right now so you guys can get the idea of what we're about to do okay a lot of this code before you start freaking out and sort of panicking this is coming from a little bit of here okay well we wanted to do is we wanted to make like when we get the results back we wanted to get them in like card format so like the Craigslist picture could show up here and then the text could show up right underneath it and then the link would show up right underneath that and that would look really really cool that's kind of what we wanted to do there's like a grid of course yes so that's kind of what that's all we're gonna do right now we're just gonna like add that grid of cards that's it okay except nothing will be all of these will be you know just right now we'll have it be like this okay so test everything will link just back to the homepage for now and then it'll be like test price okay so if we go back hit refresh oops okay so we don't have an image but if we were to add another one of these guys and then another one of these guys this is how it's looking right now right well that's because we don't have flexbox no we don't have Rohit oh so we need a row above this class equals row okay okay there we go you don't have to specify columns to do that what's up you know in columns you use as four rows you do that hold on let me just see what's happening right now something is were awfully wrong okay so div div class card card imaged if those card content content okay so now this needs to end right there yeah Rhaego we're missing a closing tag for almost all of them I think right there yeah that would make sense the other makes a lot of sense there we go so this is what its gonna look like we're pretty close we can add some dummy images in so let's just go get a puppy image go here we'll grab this I'm gonna do copy image address so if I do paste it should take me directly to it I used to do that too yeah I used to do that too Thanks yep so we're gonna go here paste it and delete this then copy this and then paste this and delete this go here you go here paste enter all the dog will do puppy so it looks like we actually searched it up even though we didn't okay now we actually need to add the real functionality we've added the front end and let's add functionality for the code for the beautifulsoup part of it now so we're gonna go views I'm gonna go right here now so from Jango from PS for import beautiful soup so what's cool about pycharm is it recognizes what the hell is giving me an error so it's not even so it's not even recognizing the module so I can just hold option hit enter and it tells me is like you want to install it although I coul install it okay just got an error that's pretty good can no modulename be s for all right so let's go just I'm gonna do pip install B s4 so clearly as a model marginal ambience for yep I'm also gonna need requests library so I'm going to import requests and it doesn't know what it is so I'm gonna do install request please don't leave me errors okay good installed okay great so now we have a bunch of things installed I'm gonna create pip freeze requirements dot txt so I just created a requirements file right here that has all my dependencies that I just installed okay okay so now I'm gonna just do a git add I'm gonna do get commit and I'll say add frontend and requirements file requirements and then I'll do get push origin master so now this code is here you guys can go to this code at any time and you know see my requirements file that we just build you guys can go and see the templates to what we're doing in here base HTML everything okay okay making good progress so far guys okay so let's add let's add some beautiful su functionality now so I'll do what was the URL for the Craigslist thing that we had another thing don't actually need this okay so so let's build it out guys so here's okay so if I go to a homepage of Craigslist this is what it looks like if I type in Python tutor it builds out this query if I remove this from this ampersand argument yeah that still works and if I actually remove so this is this is like a really tricky part but I'm making your life a lot easier we're making it a lot easier because we went through this pain if I actually even remove this BBB part and I just hit slash and I hit enter now it still works okay so that's the base URL we're actually going to use now you're not gonna use this Los Angeles dot craigslist.org one it's obviously gonna be for you whatever is local to you okay from us Los Angeles is local so that's why by default by default it's Los Angeles here okay for you guys it's not gonna be that so build it out how it would be for you okay so here's what I'm gonna do I'm gonna call it like base URL or something paste it here base Craigslist URL I guess I'll call it and I want to remove the query because query can change at any time so I'll do this so then it's dynamically generated okay and now we're gonna do what does it data is equal to request dot get what tells it hmm we're not gonna worry about min and Max price right now are you yeah yeah yeah I just want to get just want to get yeah so we have to I guess build it out but right now let's just do Python tutor so let's go python tutor and i'll hit enter so let's just copy what we have here and paste it and we'll call this response okay then we'll have data is equal to response text and then I'm just gonna do print data like so okay and now let's go here let's hit refresh oh because it's probably not a request oh it's requests that get because we're using the library so there we got we got the html/css as you guys can see here so look at this okay you see what it says Ivy League tutor exclamation mark calculus algebra Ivy League tutor so it's doing it's finding it for its so we're getting that data right now yeah well now takes a search term and then it pops it into this that URL that we did up here it just pops it into the query and then it goes to that URL which is that the Craigslist URL and then it's just getting all that you stable all from that page that has all the Python tubes and it just dumps the HTML out and then from there we can get all the wicked pissah and I mean go to we can go further into further links and stuff from that HTML because everything's listed oh man it's so good to be a programmer bro so crazy do people even know how to do this not all right so we will now we're gonna try hard coded this query except now we're gonna build we're gonna use the dynamic one that we have here okay so we'll build it okay so I'll just call it final URL I guess and what its gonna be is is gonna be the base URL and also guys this is this is kind of a cool thing so you should get a it is yeah from request compact import quote plus again from request comp at import quote plus so what this actually does is if you write something like this oh yeah it'll put automatically plus signs in there yeah because it turns it into a URL because if I have this here and I knew Python tutor you see how it like automatically puts a percent twenty yeah that's what you want something to build that for you so when we get it from the search term like when somebody types in something like Python tutor here you want this effectively to turn into percent twenty yeah and quote plus will automatically handle handle like all these cases for you so don't madly manually go into the string and search for all spaces and then input a percent twenty because that's just silly and there's a lot more cases right so if I do print plus search you'll see what happens i'll unprinted will do a baba like that or wait that won't work will do python tutor on the loose see that python tutor on the loose and then there's like probably not dots right cuz that's not part of watch I don't know how you see so it's like turning it into something that'll work as a actual you know what I mean like look right it's actually work so that's the beauty of quote Plus and the final URL is going to be we're just gonna do we can just use a join method okay you are all done oh yeah so we're just gonna use string concatenation a little bit here and I'm gonna say this comma oh yeah this is gonna be base Craigslist dot format then I'm gonna do quote plus search okay the print final URL so now you're gonna see what it does are you on on it already so the search will be that that's what those little brackets if you put in a string I didn't know you knew this much broke smarter than he looks you know you know you're faster than him when he wasn't picking this up as fast right all right so let's um so now it's a clickable link that's how accurate it is okay so we're getting our final URL for so now to response we don't need to send this we just get response our final URL okay then response we'll get that data and then we can print it out which is just HTML and then we're free to scrape it's great that data for other images for the prices the text everything yeah for every single so when you scrape is it like do you actually have to report something else to scrape or is it just like kind of like you're looking for keywords and then like using the limiters to get out of to take off the things that you don't need a beautiful soup um what it does is it just takes a fat web page of just raw HTML and then it just creates an object so you can go into HTML just be like Oh find this find this tag with this name boom spit out the text find this find this image tag with all the last thing boom just print the image out so the beautiful soup takes just a bunch of HTML in and then you can dig through it using a beautiful soup you could do it by hand but why would you do that yeah yeah you did like parse you have like parse the HTML it's just like just don't do it yeah yeah I just don't like Nike but better so one basic functionality of a database that I'll yeah so so basically I'll add basic functionality of the database so you can actually go like oh cool we're using a database so also from import models okay and then we'll just do here every time the new search happens we'll do models dot search dot objects don't create and then we'll create it search is equal to search okay so what it's so what it's doing is it's going to this models here it's creating a search object where the argument is search and this search is what's gonna be fed into that object reads an object of search yep yep that's it that's it so now here's what's gonna happen okay if I do balloon I'm gonna do puppy I'm gonna do Frankie and now when I go to 127 uh slash admin searches all of it is here the power of a database yeah and now you can do like autocomplete and stuff based on most popular searches because you have all this data it's good stuff man I want to start streaming to 24 hours a day like literally nobody can keep up unless you're watching it 24 hours oh man we'll be creating a one app a day in the gym while we're at the gym okay so yeah that's looking good don't need this anymore all right now what we need to do is we need to know sort of doing stuff with the data that we're actually getting all right so let's see here this we inspect we select this tool over here zoom in so everybody can see this tool is called select an element in the patient inspect it please use Chrome never use Safari everybody very important click hover and it tells us that this is actually a result title class ok and see that result title so now yeah I have to first of all create a soup object I'm going to do soup is equal to beautiful soup I'm gonna feed it the data and I will say features is equal to HTML dot parser yeah cool that's doing is just parsing that you know yeah yeah a beautiful soup object which kind of just like in types encapsulate all the HTML data into its tags so it's like in a bunch of like nested parts in code though instead of just raw a raw string of HTML yeah it spits it spits it into the HTML parser and then yeah it just creates a beautiful soup object to easily access everything so I'll go soup dot find all where it's an a tag and then the class is actually result title is is link so I'm saying find all the links where the classes result title so find all of that and now I'll do print post titles okay let's go and go Python tutor it was crazy like doing everything in first try now it's like going [ __ ] ham I'm making it look way too easy this [ __ ] that that took us like five hours to figure out bro code and also just like I done it before yeah like I've solved this problem before this took so frickin long to figure out the patterns because you got to like study the patterns and like drilling down and that is like tricky now we're pretty [ __ ] good but like you but yeah but this is just like it's even faster yeah so now what I can do is we're getting the title so now what I'll do is I'll say print out the zero it's one okay so it's printing out only one of the items from that list so what we're getting back is actually a list of tags okay so I'm saying just print out one of them the first one that you get so you can see we're getting here result title this is the data ID this is the link okay cool so so we know this is the title right here okay how do how do we get it well I think we can just do text that text because it's just a text there it is yep okay which is really where it's a statistics tutor Excel SPS data or Python undergrad grad level that's that yep so this is how we find all the titles then we'll do something similar to get what else is there so result title the link right well the link is easy because I think we literally have access to the link so for example if I undid this stuff and we oh yes so yeah we can do dot get href like that so if i refresh this and i go here that's right there so i can click it it'll take me to that post yep that's easy so there's a result info which is another thing that we need because we need the info of okay we also need access to the result bro because yeah result well that's uh that's gonna have I think the images and stuff in there no a gallery empty okay let's go here result okay so we're gonna need a result row okay so I'm not gonna do a lot of the filtering crap because that's where it gets like really complex and for this live stream I just want to keep it like simpler because otherwise we're gonna be here till [ __ ] two am explaining what we did because it gets pretty involved so we're gonna just make the simpler version of the app and the final version you can get it from okay so we also need access to the listings where else do we use it yeah yeah so we need access to the entire listing so then we can go through it and get result title and all that stuff okay yeah this is this is the most important part remember where we had to go through all of it at the same time mmhm and that epiphany we kind of understood it like a lot later like hours and hours later so but just to put it in simple terms when requiring through this we want to go through it like the entire thing at the same time hopefully yeah that probably doesn't make that much sense to people but that's okay just take our word for it you want to you want the project and portfolio or not all right so okay here are the post listings now will you'll be able to do is you'll be able to get the result of a listing okay so if I did post listings of zero and you'll be able to get the URL and you will be able to get the price okay I'll explain this in just a second and you'll ask people to get the post text oh man the image ID part new soup yeah bro let's scrap it hell yeah I think he meant to say let's scrape his guy how fun not [ __ ] u DJ Harden you know Sam block him delete him from the back this is a this is not a democracy yeah okay so post listings of zero and you'll you'll see what it all does okay yeah print post title whoops URL price okay so I'll type in pingpong here and you'll see what I mean okay look you got the title you got the URL man's way too you know then you got the price okay oh just you know what it actually looks like on Craigslist see this is what it looks like yeah we're not here to question it it's the will of Craig Craig himself yeah there's a will of Craig himself show me you bought you God alright so basically what we're doing guys is we're getting the post listing and then from the post listing I'm we're getting the post title the URL in the price okay because whatever we're getting the post listings from the result row result row contains the information of result title the link and the price see what I'm saying okay now the now the part that gets a little involved guys is the image part so let's do that last let's do everything and make that last just how just leave the dummy image for now okay fine yeah and then fine cool yeah all right so now that we get the post listings all we got to do is just like store that data center to the front end loop through it okay so let's just do that for now so we'll create a basically we're gonna start as we go through it we're gonna start appending it to something okay so here's what we're gonna do we're gonna create a thing called final postings which is gonna be an empty list then I'll save for post in post listings final poll basically I'm going to do it is post title is equal to post dot find so this is gonna be this line basically only difference is that they're just gonna say post okay this is gonna say URL this is gonna say price and here it's gonna say makes sense so I'm just gonna loop through each post and then I'm gonna print out its text get its other thing not print out but like post title is gonna be the title yeah you're doing all this into a final yeah and I mean the dude you're really good how much have you coded couple years what [ __ ] man why are you guys so nonchalant bro like you're good like you're good no no better [ __ ] that [ __ ] you you're good smarter than you look he's really good you guys need to like own it more like you guys need to go crazy because other people don't understand like when you say it like that everybody thinks oh you you're an idiot that's what Aaron thinks when you're like yeah yeah you know yeah that code not that much like you it's like I think you're an idiot like you probably don't know [ __ ] that's why I never talked about coding with you in my whole life it's cuz if you if you know the basics of like a language you pretty much know write code all around yeah yeah catch up to it yeah okay so I'm gonna delete all these cuz uh we don't need these anymore and then I'm just gonna go here and I'm gonna say final postings dot append post post title I think I created a tuple right so it's gonna be a tuple you'll see why it's gonna be a tuple of three right now post URL and then it's gonna be like post price okay what the hell is happening he's good [Laughter] these guys because these guys woman who flex on them you know like I didn't want to code I just wanted to give them some advice how do you make money but everybody but they just how do they get but like they just really want me to flex on them so I'll flex on them and now I got my vim like look at what I'm doing different okay alright so we have our final postings now in our stuff for frontend we need to actually pass it like this just just give up dude your ears don't work alright so let's just do this I literally yelled it in his ear it's much louder for him alright whatever so we got final postings that's pretty good show me what you got stupid stuff so now I'll go to the new search folder okay and what I'm gonna do here is pretty much right here for now I'm gonna write a for loop it's gonna look pretty ugly but it's gonna be like for post in final postings okay then I'm gonna have n for like that and then I'm gonna say post dot zero good practicum practice uh you kind of have to but otherwise it's all gonna be on one line look ugly you all right okay there we go Lana everything is getting done in one try I'm loving this don't worry about it there's no API we're beautiful scooping it I mean souping it alright so here we got boom all the posts yep all the the the title right the okay well that's not gonna work cuz there's no price yeah I got a right to fix that code okay so tutors don't have a price right so basically we're gonna say if post fine it's gotta make it check first PO if if postop yeah post out fine you don't you don't need the dot Tex get rid of the dot text oh yeah good call yep so basically if it has a price because certain things don't have a price so if it has a price then do this otherwise price is equal to n /a yeah or I mean should I say post price good catch dude you're my dude but much but that's but that's the thing dude basics is where people don't have any intuition anyways let's try Python tutor there we go na na na for any of them that don't have price which is all of them but if we do ping pong will have damn damn but a boom right what yeah what seriously good car because therefore because the dudes giving his entire balcony plus a pingpong table plus centered in our parking lot man I need an Advil okay let's power through it boys almost there we should have some music man some like epidemic sound like legal don't worry don't put it now these little cult coders freak out when you put on [ __ ] music so I don't put it right now he's the beatboxer Frankie also knows how to beatbox you know what's cool about this look dude it can read PyCharm and Django I can hit [ __ ] play and they'll like run the code that's what I'm saying bro you're a little touch bar see how it's working boom see see how good it is python tutor okay there we go so now what we want to do what is this weird error I'm getting bro forget this I'm just gonna stop this one cuz I wasn't getting any errors when I was running from here Java tutor okay yeah we're there cool so we're getting all this data to our front end which is what we needed so now all we do is we just have to render it in a pretty way okay so we're gonna write this same type of for loop except now what we'll do is we'll go from here to here paste it okay remove post your post one right and what I'll do is for the link is gonna be actual link of the post that's in position one position zero position like post your post one post two okay so this is gonna be post dot one that's the URL okay this is the source of the image we don't have the image right now so for image is just going to be puppies for now they're hardcoded end again URL so this is gonna be post dot one again and then here is where the price is like that so the price is going to be post dot two and this since this is a title is going to be post dot zero okay like that now another thing we need to do is we need to wrap it in a row so we're gonna paste a row up here after the for loop ends we're gonna end the row div we can remove all of these lines here okay and that's it okay now what we want to do is some of their sizes change you see their sizes like some is like some are bigger some are smaller so what we kind of did is we kind of have like this crappy solution which is pretty much fix the height of the card and the card image so pretty much forget all of this stuff down here you don't need that but just take this stuff from up here we're gonna take it we're gonna go to our style dot CSS and paste it in here okay and this stuff doesn't just render right away so we need to actually do a hard refresh and all kinds of weird stuff need to stop running it ooh we're getting a weirder 304 so it's finding it get as 200 but it's still not showing it so this is the thing with the statics static websites like sometimes it just won't show you when you make a static change sometimes it just doesn't render until a lot later pingpong all right I'm not gonna worry about it too much right now because it should be working it isn't our style she was I don't even how we fixed that do you remember how we fixed that there was like a weird yeah it just took a while didn't you like stop the server and start again right it has to like stop and you got to start it and then it has to because I know the code is correct yeah the first time I took forever okay whatever that's that's not that important of a part so now we got to get images right for this image part is the most complex it's the most complicated this is where web scraping this is where problemsolving comes in this is where you actually need to use your brain yeah it really was so I wish you guys get to see our full video like a month later once her hard drive is fixed cuz all of it got deleted 15 hours of content got deleted but we'll try to show you what we can write here okay so some funky things there were some weird findings that we made it's almost like we had to figure out some really weird hacks so like look at this each yeah each post has multiple images and we thought it'd be as easy as like oh these images are hosted out of a URL just like the puppy image and then just how him like all listed in the HTML but they weren't like these image tags didn't even exist in the HTML web page for some reason yeah and we don't know why we couldn't they exist under this class called swipe which you can't you can't access you can never access this class from beautiful shoot directly no like beautiful soup like skips over it for some reason yeah literally like you just don't it's impossible to access it with beautiful soup like it doesn't exist so we're like okay well then how the hell did we get the images and we had the final just really convoluted way of getting it but there's like a there's like a little trick we're gonna show you how to get it and we're only gonna get one image so we're just gonna ignore all of them we're just even get the first image to keep it simple yeah even that it's still like it's this little trick that we had to figure out it's actually pretty cool yeah it's pretty insane okay so now all right holy [ __ ] dude this image is just right here oh yeah obviously they're all right here but you can never access to know because vehicle Zoop ignores that entire div swipe okay so this is so this is the first thing we noticed about Craigslist images they're hosted on this pattern where this is some ID and then they're all like under underscore 300 by 300 hardcoded okay so boom right there so this is why they're all have the same size on the page so that was like the first detective thing that we noticed also this needs to be at the bottom I chopped off on the street a little bit not from the bottom oh yeah dad the right side is yeah just maybe just drag the bar over a little bit they can see wasn't he getting chopped off even more when it was actually on the right side like that okay let's see sorry guys we have a little bit of a delay so we just want to see you guys are seeing the right things it was pretty good yeah you can see most of it hi all right so this is the URL now what we noticed the craziest thing we noticed will save you long like the long story we'll make it short for you okay there's something called data IDs and you'll never associate that with an image like why the [ __ ] would an image be on our data IDs like that's the last place you look for an image right so it doesn't make so you can't actually access this image link from beautiful suit which is super annoying but you can access the data IDs so what's what's a funky like if you have to pause it here and see if you can see a pattern here with images and data IDs you should do that right now here's a pattern we noticed everything has multiple images right so data IDs since this has three images notice that there's one two and three data IDs right another thing I want you to notice is for this first image is the same as the first ID except there's a one colon here which is not present here right but then everything else is the same okay also there are these commas that we got to get rid of because there are no commas in the actual URL right so we're like okay let's actually take this guy over here from here to here let's copy it let's go here double click go here paste it hit enter don't go here so that's actually where the image data is we're just given these IDs we don't actually have the full URLs yeah so at least so given the IDS we're like okay we can generate the actual images so we've had to create a base URL for the images just like we did for the Craigslist query yeah very similar thing we got to construct the URL ourselves it's crazy right so it's gonna be 300 by 300 like that you have you know dot splits yet man oh my god yeah wait till you see that parsing the string to get the to get the idea of the correct ID that's cool okay so we got our base image URL now what we want to do is get the image from the result you get the data ID from the result row and we don't want to get multiple we just want to get the first image we don't really care about all of them so what we'll do here is something like this so we want to say if it has an image okay so in the result image class if the data IDs exist then what I want you to do is to post image is actually going to equal two I like that okay and now we don't want to get all of the data IDs because that might be like for image IDs or five image IDs we just want to get one image ID okay so what I'll do here is I'll just print this for now I'll go like that and we're gonna go here and we're gonna write ping pong and hit enter and we'll go down here and what the hell let's see wait let me see so if post are fine if the data's I did IDs exists then you want to find so it means you get did IDs no get did IDs is a string so when you I just rang oh that's the annoying part about it this is annoying part about it it's not so like it doesn't give so it doesn't give you a list of multiple IDs it literally gives you one day ties okay right smart okay so that's what we get so now if I actually print post image which should be fine I think well since I'm gonna be printing it so many times let's just go here and print it okay it's get doing it every single time so there it is that's one string a lot of images there right this is like I got lots of I got lots of post listings so like the last post listing probably has like like many images like 12 images in 8 images something like that right so what I want to do is I wanna just get the first one well how do I get that so what I'm gonna do is we're gonna do dots split on this and we're gonna split it by commas first yeah Christ first cuz you want to split the string into a list of the things separated by commas yep so then it actually turns into a list you did good like he's good yeah so once we do comma then what happens is that we effectively get a list that actually looks a lot like we actually get a list that looks like this now so then we can actually index it by the first item and the second item and a third item so so now if I do zero yeah so now will happen is if I go here and I hit refresh advert Python tutor on the loose or else no not so look now for each of them is just giving me one but I still got to get rid of the one in so we got it now now dad split it by 1 and no I just called oh yeah call splitted by call you know you could do 1 and then ya would act the same way so we're gonna split it now by the colon so now I mean it's gonna create dad into a list so like for example first it was doing this right then we said okay give us just a first item from here so then when it ended up doing was it said okay you got it but now what we're gonna do is we're gonna say yo give us like that one colon and then is gonna give us all yeah so separated by colons so now we're gonna do that but we're gonna say give us the second element from that so there so now we're getting all the IDS right and now the post image URL is actually going to be the base image URL format it with the post image you are oh wait I D I guess so here's what's another cool thing about my charm is if I do FN shift f6 I'll change it everywhere everywhere in every file every project but like intelligently so if it's the scope is here and won't change it out here I think you already know these things okay [ __ ] kid alright so we're almost there okay so this is happening so now let's just print it before we go onto the next step print click Oh click right so this is freaking awesome oh wait I'm calling both of these post image URLs this is actually the post image ID this is the URL okay so now I have to actually append this too to the list so if we find the image this is what should happen but if we don't find the image we also want to give it image okay so the image that we want to give it is we saw this we saw Craigslist gives us to anything that doesn't have an image just like this type of thing okay so then we do that so then we say yo if you find it then give me the image otherwise give me this garbage where do these spaces come from bro okay no image or actual equals post amen your whoa okay what the hell is happening oh so then what we say is append post image URL so now there are four things that the final postings has as a tuple title URL price post image URL okay so now it's sending it to the front end so basically we go to our new search and now anywhere there's a dog crap right that is right this actually pays everything off now that he appreciates what we've done post dot three there we go so now when we go back we refresh there you go now if you click here it'll take you to the thing so much better let's dude it's code daddy's little parcels from scratch because Craigslist is untouchable Craig the guy all right now we're gonna host it on Heroku get add git commit add Craigslist search functionality get push origin master okay kids now what we need to do is we need to create this proc file okay so you copied so basically we go to the root we create a file we call it proc file we paste this we change this test app to code daddy's list like so then we go to settings and we do the following settings we go here and we add this line of code and we go here and then we add this line at the top okay like this now it's gonna need you to install pip so you got to do pip install Django Heroku okay now you're gonna run into this ugly looking error how do we fix this error oh man I'm not okay hold on pip install pip installed Django Heroku wait order my PG admin go I literally install it a few days ago okay so what I recommend is you go and install PG AG how to host Jango Heroku app you're gonna run into my blog post which is incredible it has a lot of claps on the left hand side as you can see thanks bro and basically what you want to do is you want to do all this stuff right here okay so we're gonna do that so install so this is what I said to do this the easiest way to install PG admin on your computer okay where the hell does PG admin man open it copying PG admin so I'm gonna open PG admin until then I'm gonna pip install gonna corn pip install current done pip installed Django Heroku which still shouldn't work because I'm waiting on the PG admin which is taking it sweet ass time so yeah we'll just wait damaged and can't be opened this is the part where you lost me I still know how to deploy Heroku yeah well now it's gonna be recorded so everybody can watch it oh boy I'm gonna go read that blog post take some of those those green tea mints they all suffice for now right some green tea mochi yo hook me up with the white board dude number three great oh my god are you serious hold on blow up everything prepared for this moment [Laughter] it did work before it before you even did it you already worked because I pressed it no no it's already there and for that you need PG admin basically what you need is Postgres okay if you have Postgres you're good to go but it's a nightmare to install it it's a nightmare of install pip install psycho PG you're not gonna be able to get it right but if you just download it from a GUI it makes your life so much easier just go install like three Postgres database tool that exists online and that's gonna make your life a lot easier okay and then we're gonna install everything else I'm using anaconda right now which also makes things easier this is the longest verifying I've ever seen in my whole life dude this is crazy verifying PG admin yeah we have done all of these things create a search functionality does this we have web scraping beautiful soup using materialized pretty much done with the app now we just want to host it on your Roku yeah forgot the dog pictures yeah doggies I can't ride on out of drug doggies right guys so we're almost done okay we're waiting for this thing to install because it's just taking it sweet sweet little time which sorry we're admiring our own live stream yeah somebody left for lunch priorities are out of order brah what is this everyone needs presents it's probably brought how he was like how all right ed so me by Roshan hello monkey bender hello hello goop something glub glub well they're here verifying that a purple light goes off the whole time no just like yeah playbacks is crazy but the concurrent viewers are late yeah are you serious dude like are you actually [ __ ] serious let's look up other Postgres off GUI Mac options close to us app all right guys I'm gonna say [ __ ] you to PG admin and I'm gonna install post ghost app in the meantime hopefully a little work a lot faster god damn PG admin shame on your verification is it open already wow it was installed and opened and initialized boom there we go Rafa kasi Postgres template you click into it and I'll do stuff this is awesome yeah just a session ok okay I guess Conda install psycho PG too was the answer so that works this is why anaconda is freaking awesome now let's try pip install Django Heroku cuz pip just sucks sometimes n lay you need to do something to get past it okay so this should be working now great stop okay what else do we need now we need to freeze our requirements that's important we need to Heroku login so there we go we're logging in I'm logged in now and then what we need to do is Heroku create and after this what I need to do is add a database create a new Postgres database for your app that's hosted online on Heroku so then it can store all those pieces of information now make sure you run migrations so let's do that okay Heroku run Python man make my operations can't open file huh does that mean Oh committed the file okay get Ad get commit what are the changes get and get commit get ready for Heroku get push origin master there are no migrations to make o'mara ad metaclass master huh that is a really weird error scaling dinos couldn't find that process should be logged in already oh I don't think I even did get push Heroku master yet but I that doesn't come first I don't think so 1,700 man we're trying to host it once it works we will be able to link you guys so you guys can actually see this app we're pretty close yeah hold on Deva the Divya you Frankie so we're alive this app guys is actually live as we speak it's on Heroku you can actually go to this URL right now which I don't think they can see yet can you just type that URL in can you do something okay yeah I just add it in the channel just look at it you gentle see man there it is you guys you guys can now actually go on it but if you type something in it won't work because I'm having a problem with the database Heroku run Python some problem happening with the migrate command on Heroku was just super weird so now migrate works okay so basically if it doesn't work you push first and then you migrate after so this app guys now should be working perfectly if you hit Python tutor it works wow it's online anybody can use it from any computer in the world yeah works for everything if you look up Borderlands 3 and like if you go here $360 right if you click into it it'll be $360 nice alright guys there you have it this app is completed the link isn't can you add the link in the description as well or not right now yeah can you pin that as a comment or something okay guys camera guys we hope that you enjoyed it we do that's pretty funny so really really fun thank you guys so much for watching we love your face the link is gonna be in the description the link to the github repository is gonna be in the description and I'm gonna go eat some food and advil my brain is about to explode I love you guys if you enjoyed it in the next video good