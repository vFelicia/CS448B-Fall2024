in this video we're going to be building the solidity stock prediction that with next.js we're going to be using infuro to build this app on the ethereum blockchain you're going to be able to make bats on whether a stock price will be going up or down with that said let's go ahead and get started all right let's get started as usual with the CLI tool so let's just run it email name and this is the solidity prediction dap so while it gets started usually if you're a sign up if you haven't done it already do that already create an account they are amazing and go ahead create a web 3 API just name it whatever you want to in this tutorial I'm gonna name it prediction dap and so there's your API key we're going to be using that later and then our CLI tool is about to finish so once it does it will open your vs code automatically for you so this is pretty much it this is your contacts file and let's move on to the next step okay so let's go ahead create our contract which is going to be stockprediction.sol and as usual we need our spdx license which is going to be MIT and the solidity version will be 0.8.0 and then let's go ahead start creating our contracts so initially we're just going to create all the states variables and structs that we're going to be using in this project so we're going to have an owner which is going to be address we're going to have a uint which will be the prediction start timer and obviously an end timer and we're going to have a current price and we're going to be using int instead of uint and that's because int can be negative and not just a positive now we're going to create our mapping we're going to be mapping addresses to ins that's going to be the bets and we're gonna we're gonna create an array of addresses and those will be the best and then another mapping when we're going to be mapping addresses to ewins and that will be the BET amount so basically what we're doing here with these beddings is the people who are betting we're gonna be mapping the ID of the bad Tech to these addresses and then the amount how much they betted will be also mapped to these addresses now let's go ahead and create a last check time and a is betting active variables as well the last one is going to be a Bool first one is going to be a uint then we're gonna also save the last winner and now we're gonna get on to make the struct so the first one is going to be the BET where we're going to be saving the better batteries address and the amount so it could be positive and negative as well and then the bad info again the address the amount or the better address the amount that amount and we're also going to create a Constructor so the owner initial is obviously going to be the message sender so whoever deploys the contract and then the prediction and time will be block timestamp block times 10 plus 5 minutes meaning after the contract is deployed you people have five minutes to bet on the app and then the is betting and then the batting batting by default is going to be false all right so that's it for now let's move on to the next step check okay so now we're gonna fetch all the bets that have current currently been made so we're gonna create a function get all bets it's gonna be a public function that will return a bat info array from the memory so we're gonna create a all back array that'll have a bat info struct and now we're gonna go through and loop through all the Batters so oh and we basically all we're gonna do is we're just gonna save all the attributes into all bats so what we're doing is for better amount and bat amount we're literally just grabbing all the data from every single bet and because we're later gonna be saving them that's how we're gonna be getting them so that being said let's go ahead and test it and the usual drill open up remix in your vs code and now what we're going to be doing is we're going to go ahead and deploy this contract now let's see what do we have for some reason it didn't deploy oh and that's because there is a typo on line number 10 so after fixing that let's see what we've got and we should get a empty array and that is perfect if you get that you are good to go Okay so now we're gonna make sure that users will be able to get started betting because if you remember by default the is betting active is false so let's go ahead and make a function and call it start prediction and it will have an argument that will be an INT which will be current price let's close that and it will be a public function so it will need to be the owner who starts it because obviously only the owner is supposed to start these bets and we're gonna set the current price to the current price that we pass in after that we're gonna go ahead and set the prediction start time to the block blocks current timestamp and the end time to whatever is five minutes after that so let's set that and after that we're going to set the is betting active to true now next up we're going to create a function which will be enter bet that will allow the users to make a prediction and so that's what we're going to be passing in it'll be a public payable function and will require that the current timestamp of the block is less than the prediction end time meaning the prediction has to be active otherwise we're going to send a error message now we also require that the user sends at least .0001 eth otherwise like it's just such a low amount of money that we don't take those bets seriously so that's a better amount and we're gonna save that to the message sender in the mapping and we're going to go ahead and push the better or better's address into the Bettors array and we're also going to save we're also going to map the value to the message sender's address so the current batters address and with that said let's move on to the next step alright so now we're gonna make a couple of helper functions that we'll be using later on so that's where we're going to be finalizing the prediction don't worry about that part we'll figure it out so help your functions we're going to have one that resets the last winner and that's all it's gonna do so it will be a public function and obviously the owner has to call this function and literally all it's going to do is it's gonna say last minute or equals address zero done all right next up we're gonna have an is prediction over a function that literally just checks whether the current block timestamp is more than the prediction end time meaning have we passed the end of the prediction and we'll return true or false based on whether it's true or not now we're going to also have one that Returns the pull amount which is literally just the balance of this current address and we're gonna have one that helps us find the absolute difference between two numbers so we're going to be passing into ins one of them X and Y and then we're gonna see which one is bigger or yeah bigger than the other or larger than the other and then if x is larger than x minus y if Y is larger then we're going to send back y minus X so that's literally it alright so let's finalize the prediction so we're gonna have a finalist prediction function which will take in the current price now we'll need to make sure that the block timestamp has to have or the when we finalize the prediction the block timestamp has to have already passed the prediction and time otherwise we will have to throw an error and we also want to make sure that the betting is active at this point because only active bettings can be deactivated if you're only saying now we're just going to initialize a couple of values here so just like in a regular sorting algorithm we're going to create a closest prediction a state which is just gonna be the first bet who cares and then we're gonna go to closest distance and we're gonna calculate it and we're gonna pass in the current price and the closest prediction in there and we're also going to set the winner now this is where the trick comes in because this is where we're going to Loop through all the best and we're gonna update the these closest prediction closest distance and winner based on whether the current distance or the current bets distance is less than the current closest distance so that's what we are doing here in this for Loop and then we're gonna update the winner as well you want to also make sure that the winner is always payable because you cannot reset it later you can but there are like complications with that which we don't want to go into right now after that we're gonna We want to make sure that the pool is not empty meaning at least there is one bat that has a valid value now after that we'll also make sure that the winner is not just an address zero and if those two are good to go then we're going to transfer the pool's balance and about everything in there to the winner and then we're basically going to update the last winner and then just reset everything so prediction start time prediction end time current price is betting active and everything we just go and reset it and we're gonna do the same thing with batters as well but we have to do it one by one so we gotta Loop through that and once that is done we're just gonna reset the Batters rate as well and that is finalizing the prediction let's move on to the next step all right so now we're gonna go ahead and deploy this contract so let's take a look at what the so let's take a look at what the first step will be so let's go ahead and just to connect to our inferior Network and the project should show up if you don't have it just sign into your infuro extension and you should be good to go now let's go ahead deploy again with the extension and then just select the girly Network that'll be the easiest and I believe the only one that's still working so let's see what do we got all right so now it says that in line 91 there's a u in instead of a u in so let's fix that should be good try again okay now message value something's not okay there let's check it out let's see what do we got oh we gotta put in The Ether let's try again now the current price is not okay on line 61. it would be a great idea if we if we defined it so let's do that let's try again let's see if it finally works and it looks like there's a weird error going on so we actually took some time to figure it out and basically on infuria you shouldn't really put space in the project name because that could cause errors so let's just remove the space and then we should be good to go disconnect from it reconnect and it should be good and now if you deploy again it will go through and it will be perfect so once you're done there is your contract address and if you see that you're good to go that's it let's move on okay so if we're done deploying we're gonna go ahead and copy that address and then just paste it into our contract.js so that way it is updated and we should be good to go now one more thing what you want to do is go into your build contracts and then just copy the file over into your utils folder that's your API no need to worry about it it just helps you interact with the contract itself okay so let's start fetching those bets so let's just go ahead and spin up our app so this is how it looks like everything works metamask quality connects super nice changing wallets nice okay let's go into our context I have a couple of premade functions for you so you can just go ahead and fill those out or fill out the blanks and then you're good to go so inside of fetchpets there is a try catch function it'll start working in there so we're gonna go ahead and pull in the contract using the create contract object function that we already imported for your convenience so there it is super nice it already uses it it already uses the address that you just popped in there so that's cool and now we're gonna do is we're gonna say bets equals weight contract dot get bet so we're already using the contract that we just freshly deployed so that's nice and we're gonna say formatted bats and we're gonna Loop through all the bets and each bet what we're gonna return is we're gonna basically we're just gonna organize them into like objects so we're gonna get the address the amount in a string and we're gonna get the BET amount will have because it's a big number we'll have to format it into string so that we can convert it into eth once we converted it into eth we'll need to convert it to a number so that we can fix it and make sure that it only has two decimals so that's a little nasty just pause the video and then copy and now we're going to update the you state and we're just going to go ahead and console log it so that we can double check that it works and inside our use effect that is getting fired every time is betting active is being changed we're just gonna fetch the bets and that should be good so let's take a look at how it looks like so I'm going to open up my console and there it is there is the array that is empty so that means the uh the fetching works alright so now we're going to go ahead and fetch the owner and the pool so let's go ahead and start filling that out so usual let's create the contract and then the owner will be await contract dot owner and then we're gonna go ahead and just update the you state and then again we're going to run that function every time the is betting active is being updated we also want to go ahead and close the login let's go ahead test it out and there is the contract owner address which is because it's my wallet because I just deployed it all right let's move on to the next step which is fetch pool it's gonna be very again there is your function just import contract and then who will be contract that gap pool amount and then we're going to convert it to eth and then update the price so let's take a look at how that looks also you want to fire it off in the use effect and there should be your big number there should be your amount so with that said we are pretty much good for this step okay so now we're gonna do a little bit of a complicated stuff so there's this other use effect so basically what here we're going to be doing is we're going to run it every three seconds and we're just gonna check if the betting is over so let's just do that real quick so that's your function to check if the betting is over yet or not and if it is then we're gonna go ahead and grab the is over from the or the is prediction over from the contract and basically we're just gonna go ahead and reset the timer clear the timer and we're gonna go ahead and finalize the bedding stop everything where it's at and grab the latest winner that way we can start sending the money to to the winner so that should be pretty much good to go however if the betting is not over that's the part that's being written right now then we're gonna go ahead and reload this same exact functionality again and come back to it again in three seconds so that is pretty much all it is let's just add a couple of console logs just so we can make sure that everything is Gucci and we can see what's happening so we're gonna add checking status and all that stuff and there it is it shows up that we are checking the status now let's add one more thing let's just let's let's just console log the is active so we should see a bunch of falses every three seconds and there it is it shows up and it keeps updating so with that said let's move on okay so now we're gonna go ahead and implement the start prediction so usual grab the contract from the usual place and we're gonna have a another contract interaction so we're gonna call the start prediction function in there so we're gonna turn the coin coin price into way so we're gonna attach basically 18 decimals and set the gas limit to 80 000. now we're gonna go for and go over and get the receipt so the usual result.weight and console log that just to make sure the contract interaction went through and every time we start the prediction we want to go ahead and reset the last winner so we're gonna do that as well so let's go ahead and test it out and if you can see in a little bit I just hit the start betting button and the contract interaction is going through and confirm and now it's pending and it will finish in a little bit so let's see what do we got and there you go the betting betting right now is active and basically I'm not going to bore you with that but I was sitting around there for five minutes and as you can see at the end the betting is over so that seems to be working as well let's go ahead and now enter the BET okay so let's finalize the prediction right now so what we're gonna do is we're just gonna call the contract function that we've already written so we're going to say finalize betting or finalize prediction and then we're gonna have to pass in the current coin price so that the algorithm can decide who won and who didn't and obviously in a way so we're gonna set the gas limit to 200 000. so that's good and let's see what do we got so if everything is okay the automation or the app should pop open our metamask and as you can see there it is now we're gonna go ahead and hit confirm on it and so now it's just going through and the funds will be transferred in a second and we're gonna see in the con in the console how the betting is over and there it is now it says false so that means the betting is over that only means one thing that we have to now fetch the last winner and so we're gonna do that with the usual contract interaction and we're gonna say contract.last winner that will fetch it for us and then we're gonna set it to the U state so we're gonna truncate it so that way we don't see like the entire big address we're just seeing like the important part the beginning and the end and we're gonna run that function and that should in theory go through so let's go through the whole process again so I'm going to go ahead and start a new bedding hit confirm on it and it will get started in just a little bit now the batting is active so that's good let's make some bats here now let's use a different account and make another bet and let's see what happens so you want to make sure that when you're testing it your bet is different from two separate accounts so that's something important to keep in mind and now let's use the admin account again to finish the betting and it will pop open automatically we cut it out but basically we set it out and so there it is the funds will be confirmed if you can see the funds are sent and there it is in the middle the last winner is being updated so that is the app thank you so much for watching I hope you make a lot of views I hope you got a ton of value out of it and with that said I'll see you in the next one peace