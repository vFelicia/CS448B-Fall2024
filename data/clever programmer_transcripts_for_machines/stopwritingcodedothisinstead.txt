you're sitting there you're writing your code you're working on your application but it's just not working you feel like hey i've been coding this up but i ran into a problem and now i cannot get past this problem so you give up on that coding project and then maybe you start another one and then you give up on that project and you start another one and you give up on that project so one of the things i want to talk about today is stop sitting there and writing code it's one of the things that's stopping you from actually getting better at it better at coding becoming better at software development actually has very little to do with sitting there and writing code a lot of it is having to learn how to think like a software developer like an engineer so a ton of your time should actually be spent on contemplation coming up with ideas coming up with possible solutions a lot of your time should be actually spent on documentation and research if most of your time is spent coding you're not going to be making a lot of progress because at the end of the day coding as fun as it is it gets into you doing sometimes just like straight up grunt work okay so you have to sit there and actually think about things and that helps so one of the things i see people do is they're always super antsy right and they will i always laugh with um we have a team member on the team his name is david david ricosi shout out to david he's an absolute badass in every sense of the word let me just make sure the video is working great he's an absolute badass he is probably one of the fastest growing developer i've ever seen in my entire life and he got better because he is on the clever programmer team and when you work with me you work your ass off like we just work extremely hard like it's memorial day today but we're working other people are taking days off and i don't even know how that works so um of course somebody's gonna complain about mental health in the chat and gonna be like oh mental health is super important i agree i never not once in my life said it's not important somebody like started making tick tocks and they're like he's saying mental health is not important said that zero times mental health is probably one of the most important things but also so is work ethic to become a great fighter you have to fight a lot to become a great developer you have to code and develop and think like a software developer a lot okay so i don't know there's some weird that happens sometimes on youtube and on the internet but you know if you're my people you know what i'm talking about and everybody else you can go watch somebody else's video this is my platform so i'm going to say what i want to say so david improved so fast in coding he improved he's one of the fastest people to improve in his skill and the ability to put things together but one of the things that's funny with him sometimes is i laugh because he's so quick and he will get things and he will start working on them and start coding them up i always joke with him that even if you had a door that was right there instead of just opening the door and getting out of the house he will like go to the kitchen build a bazooka rocket launcher cook up some crazy come to the front of the door and like shoot the whole building down and then get out with explosions in the back his hair flying in the air and him just feeling like a badass the problem that happens with him sometimes is that he will over complicate things but his skill level is awesome you know he's so good so even when he over complicates oftentimes he gets away with it the other way i can put it to you is for example think of like coding like a like martial art right jiu jitsu in jiu jitsu a lot of jiu jitsu is about your skill that you develop the techniques that you develop so the point is that even if you're 150 pounds and you fight against somebody who's 190 but if you're really well trained and you have the skills and you're like a purple belt and they're like a white belt even if they're way stronger than you you're going to them up and win and that's because you have good techniques so with software development you have to have good technique just taking spaghetti and throwing it all over the wall oftentimes won't solve your problem sometimes even in jiu jitsu but if you have somebody who's 220 pounds they can out muscle you okay but just because they can they you know it doesn't mean they should and just because they're still good and surviving doesn't mean they can't get better so as a software developer who can do things in a complicated way and keep making progress it's not that you're not going to get very far it's that could you get even better if you got better at making things simple and simplifying everything in your mind okay and where that comes in right like david will smoke me in speed he will put things together like way faster but where sometimes it exposes it is when david and i are working i will actually just spend more time reading the documentation and just calmly sipping my coffee and thinking about the problem and actually sometimes even white boarding or planning it david will just like run in and like just the first thing he's just coding it up he's like yeah writing code he probably has like rock music going his like hair is blowing in here he's like yeah like coated up like just going crazy and we'll spend like four hours and i will find oh after a lot of research i found out there's just an api that like solves the thing that i'm trying to solve with like four lines of code david have will whipped up like 500 lines of code two different projects one for the front end one for the back end and um he will then have to spend also another year of his life maintaining that so it doesn't mean one is better than the other because there are many times where we do need the bazooka approach and david will just get it done whereas somebody else is just like meandering and thinking david will always get it done so if you need somebody who gets it done that's david which is important but my point to you is again and my point to david is could he get even better and sometimes working hard to simplify things can be huge because now think about it like this right let me start like breaking it down so let's go over to here if let's say um david is on left side okay and maybe i'm on the right hand side okay i don't know why i'm so small but that's fine david is really tall anyways he's like six something if he's building something sure the the time that it takes him to build it might be faster than than me so for example let's just go like this and let's just say david is like done right around here whereas um you know let's just say maybe it takes me like way longer like it takes me like this long okay but i was like reading the documentation i was reading up on the stripe docs i was reading up the difference between you know and stripes have something called like product versus order versus um it's so confusing like pricing versus subscription and you're just like what is the difference like so many of these things sound so similar and where do i use and a lot of it is really counterintuitive and confusing and it's just it's bizarre and let's say that we code up something okay and and it doesn't matter which way we do it but like here it happens right so now what he's done and he solved his problem and maybe it took him one hour okay and maybe i solved the problem and let's just say it took me two hours okay or let's make it even more let's say it took me three hours let's say david solution was custom coded oh my face i'll have to put it in the middle like this okay now let's say david solution was maybe fairly custom coded okay and me i found either a library or something that helps okay so maybe i found a existing solution okay so either i found an existing solution or i took an existing solution and molded it into the project that i was working okay david spent a ton of time on straight up coding for this i had to probably spend a ton of time researching learning stack overflowing etc okay now what happens did david's uh coding skills in that time frame improved for sure for sure he probably got much many more lines of coding experience he probably ran into many more technical coding errors so maybe he got better with using the use effect hook probably he got better with uh you know how react renders components how um to actually make the back end talk to the front end and there's some like errors that he's getting into so there's things where he's for sure improving in which are really important okay but now if you look at the overall thing of what's happening is now this custom coded solution that he had to do whereas i found an online resource or an api or an existing solution made it work here's what happens as time increase as time goes on okay now on david's end his time in maintaining it or coming back to it constantly to make it work and making sure his time will keep either linearly increasing or kind of like a hockey stick increasing but let's just say it kept increasing linearly over a course of a year okay and so now let's just say this is like maybe you know 100 hours okay or or let's just say it's like 30 hours okay whereas maybe i found an online solution and so my time because those people that provided the solution or the api are doing the job of maintaining all of this so i don't have to worry about the infrastructure i don't have to worry about trying to scale it on cloud computing or anything like that i don't really have to worry about anything so my time grows very linearly very very small so like maybe in my one year i've probably spent a total of like 10 hours on this thing or less okay maybe even like let's just say eight okay but let's just say 10. okay so if we combine this all right 10 hours versus 30 hours okay so think about the total time total time now he might have spent 3x more time than um oh man i really have to really have to figure out where i belong because this is kind of crazy maybe there let's make me smaller okay that's that's a little bit better all right so he might have spent so he's probably spent like 3x my time right so that means i was 3x faster okay so let me go to i go over here 3x faster so what happens when you're 3x faster it's at the cost sometimes of being 3x slower right look at the start it took him one hour and took me three hours so i was actually much much much slower at the start but then as time progressed my thing just keeps getting faster and faster and i don't have to like use mental computation to keep this one thing up i can keep now working on newer and interesting problems where maybe he might have to keep on managing that infrastructure that he's built okay so going slow is going fast so this is one of the things i talk about very often in the world of software development going slow is the secret to going fast and sometimes it just looks like a boring day where you come in with your cup of coffee you're just chilling you're just reading the docs you're just having a great time you're relaxing you might feel like you're not doing you might even feel like yo i'm not even coding like i should get you're doing a lot and even at a software developer real job a lot of your day is thinking a lot it's sitting there looking thinking coming up with ideas okay so it pays off in the long run and that's why sometimes when i see new developers and you're really hungry to sit there and code i am too i love it i want to get my hands dirty as fast as possible but remember your job is to solve problems when you write more code and you're like oh my cracker to code it up like just you are creating problems you're not solving problems the more lines of code you write the more chances of having bugs you introduced into the world when i want to work on a chess project the last thing i probably want to do is to think of a solution to come up with it the first thing i want to do is like senior software developers what's amazing about them is they think so little the more you code the more you realize how important thinking is and you almost never want to have to think until it's time you don't want to have to think about any problem that's either solved or solvable or you can kind of take it from somewhere plug it in and go i don't want to have to think about authentication okay it's an already solved problem it will do nothing to my life if i figured it out and how to write it from scratch i just borrow boilerplate code from github i give them credit and boom my authentication is up and running with firebase i don't want to figure out how to add in social authentication of google facebook it's already figured out but if i'm coming up with an idea for a new app like when i'm working on my own youtube app and i'm trying to figure out how to make commissions for the people who are making content on my youtube channel and pull in all that data or if we have sales calls pull in data from calendly and show it in a specific way and push notifications and now it's fascinating now i'm entering a world of new problems so now i'm going to think about solving those problems now the clock of thinking begins try not to use it on everything that's out there you're gonna drive yourself crazy going slow is going fast that's one key thing how software developers think i want you guys to start understanding how to think like a software developer because that's going to be one of the most powerful things and if you're one of the boot camp students it's going to be even more important for you to know all this okay shout out to the full stack mastery boot camp fam i think we're up to almost 25 to 30 students uh for the june cohort we had martin get incredible results which was freaking awesome martin just got a job recently we had on get a job from post mates who um he got a job with uh gravity i forgot payment gravity payment something like that if somebody could look that up and drop in in the comments what the actual company is called um i've slipped the name sometimes but he got a full stack developer job and then we had dave lueck shout out to dave lueck he just joined our boot camp and in 10 days he got a job offer granted granted he already had experience with coding okay so he didn't come into our full stack mastery boot camp completely with your experience he came in with a little bit of experience but he did say and i quote um the within the first 10 days the recursion that he learned because here's what happened right he went to his job interview and they asked him to write fibonacci sequence recursively and he goes because i learned that that was the first thing i learned within the first 10 days of the boot camp that was the thing that i solved in the interview and that's what led me to getting the job so had he not done that he would not be getting that job because of a fibonacci sequence i know it's stupid i know this shouldn't be having you guys do these arcade wide boarding problems i don't even remember how to do it from scratch right this second i'll have to actually think about that it's unfair because it's not really how you're doing most of your full stack development but you have to play the game if you want to get those jobs if you want to get those six figure jobs okay so shout out dave if you're here or in the video drop a comment on this video and i will make sure to pin it but i love our students in the boot camp they're crushing it joshua another student loved this guy um he was joshua was going to lambda school and full stack mastery boot camp at the same time and then joshua started going josh i don't know if i can say this but whatever i'm gonna say but you kind of stopped doing lambda and you started going all into full stack mastery boot camp and now joshua is on a job hunt okay so i'll keep you guys updated on how his job hunt goes which is super exciting um you guys should root for him because right now he's going through the job phase and sometimes he gets a little nervous and stuff so we have to be there to kick him in the ass and also um help him but again guys these are the things that make you a software developer the willingness to keep grinding the willingness to keep pushing through regardless of what comes in your way and though one of the things that we work on with our students in our boot camp tons of problem solving and thinking they're doing so much of that on a regular basis so freaking much of that okay because without learning how to think like a software developer without having the discipline to not touch the keyboard every second you get a chance and like read documentation and get better you will not get better okay so going back to this if you're improving at a 3x rate because you're going slower in the start this is also why i say masters the master the basics because here's what the life trajectory then looks like okay of you as a software developer in your career okay your trajectory will look like this okay somebody else who just sits there and codes their trajectory looks like this okay so that hockey stick growth that's what you want you don't want to be the person that just sits there and code mindlessly all the time you want to think okay this is the other guy hmm man david i feel bad i hope you don't get offended by this david is freaking awesome okay david is not on that linear trajectory this guy has had the most exponential growth and he kicks my ass in terms of how much he picked up in one year okay and oftentimes i even go to him to ask him questions so i just want to make sure david don't be upset about this we love you i love you you're an awesome person i was just using this as an example okay we love you but this is the trajectory you want and so what happens then is you're getting three times the results of somebody's entire career or more in just your one career as a software developer and it's not just a multiplicative effect guys it's an exponential effect you're not just better by multiplied by something you're exponentially you start growing faster than the other person okay but this is where you have to suffer in the start and be okay with that because these other people are just coding they're like yeah i'm working on node.js now now i'm learning apis now i'm learning this you're like okay i'm going pretty slow i'm going pretty slow i'm working on i'm working on like my basics i'm working on problem solving i'm working on data structures i'm working on mastering arrays i'm working on mastering loops i'm working on mastering if then statements i'm making basic games really well like tictactoe i'm able to code from scratch so like these little tiny things is what you're doing in that time where the other person is like i just learned next gs now i'm doing tailwind css now i'm doing and you'll feel like you're so behind them and you'll feel like man these guys just know everything i know nothing but trust me it's that slow jack turtle pace it's where you're getting the basics right even in boxing the basics are what's in boxing there's one two one two you can be practicing your one two for a year and not get it right for a decade and still be learning okay so just mastering when i hit that two how am i gonna move okay oh i'm dropping my hands basic you'll be like oh yeah it makes sense but then when you're actually out there fighting you'll drop your hands you'll get knocked out right done so you want to bring that mindset to this where you want to get your basics so solid that you keep building on top of it rather than oh i learned python this week now i learned this other thing yeah now i'm gonna learn go cool get the basics right then do all of this but your career i want you to be increasing at this pace that i'm showing here all right and in the start that looks slow and it looks like frustrating but then the difference becomes massive over time okay so in order to think like a software developer in order to do that you need to be okay with going slow it will lead to imposter syndrome and you will think that you don't know what the hell you're talking about what you're doing you'll feel slow and that's okay you'll need to give up a lot of ego and pride and when your friend is sitting next to you and it's like i just made this clone and you're like cool i just practiced 20 loop array problems and he'll be like yeah my portfolio is sick you're like nice great job keep going awesome i'm happy for you you got this you'll kick ass and you're just quietly chugging along your friend will be like i just built the amazon clone with cause he was amazing it and that is cool and i'm sure it helps in certain ways but you're like okay i did like five um if then statement problems it's okay when you get so good at that you just become such an effective code like at writing code and even now when i think of myself when i'm like writing code there's so many times world i'll have all this complex stuff that i have to do where another software developer will write it in like 40 lines or 30 lines because my basics are so strong i'll write that same thing in one to two lines and i'm just at ease and i feel calm and i'm just that's okay but it's because i worked so freaking much to just keep working on the basics basics basics basic space and just keep working on it for the longest amount of time okay so that's all i gotta say to you um get your mind right work on going slow now that's what's going fast have a lot of patience and become that developer that grow um is at 3x pace okay maybe i'll title this video david versus the gala that would be funny so that's it i uh love your beautiful face if you like this video smash the like button subscribe to the goddamn channel and as always actually break that like button okay do me a favor and turn that like button blue and subscribe because this is the channel where you'll learn all things react react native and full stack development i love your beautiful face thank you so much for being here thank you so much for watching this video i appreciate you we're about to get to 1 million subscribers so help us get there and last but not least if you want to be part of our full stack mastery bootcamp enrollments fill out really really fast so if you want to be a part of it i do want to let you know that it's first come first serve the link is below apply okay and then we get on a call with you and we give you massive value and we will genuinely let you know if this is a good boot camp for you or if there's another program that's even better and we'll point you towards it and it's not just whether it's our program or if it's a better fit for you another boot camp or another program will genuinely let you know okay so if you're thinking about it you want to improve your career you want to get a job you want to get great results and you just want to get help and improve faster rather than like going in freaking circles for the longest amount of time because that's what happened with me right i joined um i was doing mma for like two years and i barely saw any improvement now i'm working with miguel two months in i'm training with him and he's been fighting since he was seven years old he's like black belt in almost every single um every single type of sport and he's just um he's incredible i think he's purple belt in jiu jitsu but he kills it in kickboxing boxing been doing it and he's friends with brian ortega and all these people that are actual ufc fighters and he was even fighting in um i forget where he was fighting but he was actually in a ufc cage fighting so when i started learning from miguel my skills just started flying because i was gonna spend a year or two years doing stupid onetwo combos and he just fixed it right away for me he fixed how do i shoot when i go for a wrestling takedown how do i do a single leg how do i do a double leg how do i go and switch into side mount how do i switch into full mount how do i transition out of somebody's full guard break out of it you know how how how do i get somebody's back how do i do a guillotine how do i do a rear naked choke how do i do an arm bar all those things you just and i'm getting good so freaking fast at 145 pounds i'm able to fight with friends who are like 200 pounds and strong as so that's what happens right you improve fast so if you want to improve that fast and get those types of results go get help i don't care if it's with us go get help from somewhere else but if you care about time improve i'm paying 175 dollars per session that i have with my coach because he's one of the best in the world i'm not saying you have to pay that much where you're learning from but invest and that gives you time faster it gives you your time back okay so i want you to have your freaking time back i don't want you to just be like oh i'm gonna just let me see where i can get the cheapest help because you're gonna get the cheapest results all right that's how i'm able to improve so fast in the things that i do because i'm like okay let me just keep putting an amazing team around me even when i was learning coding and software development every time i would make seventy dollars or fifty dollars an hour i would just hire a coach from codementor and pay them seventy dollars an hour and just learn from them i'm like i'm okay with having zero money left over or very little money left over as long as of course i can pay my rent and things like that but at that time i was living with my parents so i was okay with leaving zero money behind because i knew the game was just skill so if i could sk improve my skill fast then that's it then i'm good because if i have the skill of making seventy dollars an hour then i can always get a job they'll pay me seventy dollars an hour if i get the skill of making 120 an hour because i'm such a good software developer worked on my negotiation skills interviewing skills problemsolving skills algorithm skills data structure skills backend skills frontend skills and now i have permanently skill of making 130 an hour and what that basically turns out to is a high five figure eighty thousand ninety thousand dollar a year job or maybe even a hundred forty hundred fifty thousand dollar a year job right so that's how these things help you grow now we have a multimillion dollar business because we help people learn these skills and get there faster so when they get results the business gets results and it's a selfperpetuating cycle okay so long story short like you have literally zero to lose click the link below go and book that call we're gonna ask you a couple of questions okay we wanna know where your head is at if you're serious or not because if you're not serious boot camp is not for you and on that call we're going to spend 30 minutes or 45 minutes with you it's either going to be me nas or one of the people from the clever programmer team they're going to put together a fullon roadmap with you on how you can become a developer whether development is for you or not we're going to help answer your questions and then we will take on any questions you have like can you join the boot camp how much is the boot camp is it even worth it for you will you succeed in this program is it better for you to not do the boot camp we'll answer all of those for you so after those 30 to 45 minutes if you decide this is good then cool we show you how you can join the program we're partnered up with a company called client credit so the payments are going to be super easy okay and this like comes out to monthly if you decide it's not a good fit then great in 45 minutes you just got incredible value and you got off the call and you lost nothing and then you can just go back to watching our youtube videos capisce so if you're here and you're serious click the link below um book a call with us we want to help you i want to help you grow your career and we want to help you get a job and our july cohort is going to get booked out really fast okay so i'm letting you know now this video is going to come out june something right june first week of june so don't miss out if you miss out you miss out we get booked pretty pretty freaking fast okay we're trying to go no more than 25 to 30 students per cohort love your beautiful face this is kazzy as always i'll see you in the next video