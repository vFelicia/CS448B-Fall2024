this is a day in the life of a software developer so let's just get started this is my setup where I code right now and I use this screen and this screen mainly and I have these two TVs up here that I airpl to if I need another desktop or if my cofounder friend is here because we're building a software company right now he'll sit right here and then I'll blast stuff here so that he could see it and vice versa he'll do the same thing so I could see what he's working on so yesterday I basically got this software to where if you pop in a URL here it populates the YouTube video for you so for example I just did that and boom that video showed up and so I did and then what this software right now does is it takes a video that you have and if I click turn video into email it will make make an email out of this video so we'll do this and then whenever that gets done I'll be able to click here and it'll bring up that email that video but written out as an email like this and it'll give me two versions so version a currently will give me a pretty good copy but version B generally tends to be tighter and works better um yesterday I had to also build that whole thing out out I had to build out the feature where when I hit copy it copies version a of clipboard and when I hit copy for version B copies version B to the clipboard um as well as the ability to delete it and if I wanted to open it in Google Docs I can also open it in Google Docs and it makes it editable and it creates a public Google doc so that the user can see this um email and right now what's really important as we're building out this software is everything should be as fast as possible during the prototyping phase so we're trying to use platforms that are as low code as humanly possible and the reason for that is so that we could build fast and figure out if our idea is actually worth it and the market wants it and if the idea is good and we start getting users well then cool we could start removing a lot of the low code and turning it into like more of a coding application right so right now it's like let's say 80 90% on the low Cod end and it'll start going to where it's 10% on low code and it'll become a lot more code because we'll want it to be performant we'll want a lot more control and so yes so if you're a startup founder and you're looking to build I believe this is a way to go currently the software design actually looks like this so initially when a user jumps on they see this screen they sign up the next screen they see is this to log in or to sign up and then once they do that they get taken to this page which doesn't look like this it showing it to like this but it looks like this it has two different states and so once it's in a look loading State that's when the loader comes up and then we have this right so this is when user clicks here um and we have authentication working which means that if I take you to this if you're not authenticated or if it's not your email it won't show up here for you so that was really cool and you know with with this tool I was able to build that and honestly like I was able to build this in like 2 to 3 hours whereas with next it would have taken me days if not a week or two because I'd have to get Firebase set up and I'd have to get Google signin set up and I'd have to design the pages all on my own and I'd have to work on centering divs and putting things in the right places and I'd have to spend a lot more time on debugging and coding it and making sure that everything is running and I feel like when you're if you're a software developer at a company that's fine you have all the time in the world money in the world resources in the world do things as right as possible but when you are selffunded and you're a startup founder because this is a startup that we're building from scratch it's about speed and getting to Market as fast as possible so Nas and I are basically discussing that V1 of this MVP is pretty much ready we are goal is to get to a thousand I don't know if you guys could see that but a thousand users like th000 people on wait list for this and we're deciding to not put a lot of there's a lot of features that we have planned that we're planning to just like for now hold off on you know we have this entire list of what we need to do next yeah you know we got bug fixes we got hitting the back end we got adding allowing users to add in longer than 15 minute videos but we're deciding to not do that at work primarily on the core featur so it's like okay so then if we're thinking about core features what's pure core to ship it pop in the link get an email as a text that's it okay that's it so the only thing right now we're missing right now is we need to we list is there uhuh like literally we can ship this out like now we can test out a few more things we can ship this out now yeah we can make some content start putting people on the way list start sting people to start to use the software literally today the only thing we need now is like just a type form that we talk with the mon about yeah and that's it okay and for the app itself the only thing I feel like we need to do is just stress test it for like 30 minutes to an hour yeah I think we just take like I don't know how do you feel about that like imagine we took like 20 minutes or 30 minutes yeah and you just try to hit it as many times as you can yeah I'll try to hit it as many times as I can under 15 minute videos yeah and then um we can even use the same video yeah or two three videos like I would say like let's just keep doing different videos so then we have like yeah I don't know whatever like like it breaks on horos videos but like you know doesn't break on ours I don't know like you know how like all us some random bugs come up what do you feel like about that I think it's good I think it's good I think let's [ __ ] make it happen because Point there's nothing extra like anything extra that we add is just going to be like nice to have stuff yeah it's not a must have stuff yeah like even for example when we were talking about like um if I go to this page like we were talking about adding an air handling but the Dumber version was just to add in text to tell the user hey just choose a video under 16 minutes yeah make sure it's a YouTube URL and so we we didn't even like add in fancy error handling right now because we don't need to and we can we can literally just like test on desktop test the mobile um and yeah that's and that's it so I don't think we need any error handling that whatsoever just so then we got a game plan spend the next 30 minutes and let's test so so another question I have is currently we have two versions of the email get sent one is more tighter right so version a and then when I scroll down here I see version B of email yes do we want to keep that all in the same dock or do you want to separate that like hey version a so basically two different Google docs for two different versions right okay cool so let's add that feature which is going to take like 10 minutes and then let's stress test it for the next 30 minutes it's probably to take like 30 minutes no no no it's not it's going to take like five minutes yeah I'm sure I'm sure so we get that in and then we just stress test for the next 30 minutes MH and I feel like right now but before we plan the rest of the whole day out let's just do that as fast as possible and then like make the next plan but my question is is that what I'm trying to say is is it valuable to the user to have two version in separate document because it doesn't matter whether because they can miss it last time when the email was long you couldn't find a reversion B was so we should just make it get two separate docks and that's it okay that makes sense okay awesome let's do it let's do it so let's duplicate this so we duplicated this Google doc that they get and then from and then from this one hopefully you don't have any Keys here but yeah I think I don't think you do and then version this one is not going to have version B so I'm going to remove version B from this uh and then give it a little space here like that so now we got two Google Docs that the user will get okay so so we got two Google Docs and now we have to make both of them public right yeah make the top one public and the bottom one just duplicate on this um so th this right here is what creates Google Docs and then this is what makes them public all right so we just made a bunch of changes created Google Docs made both of them public then we send the text to the user that the all of them are public and now I'm going to hit merge to production and hopefully nothing goes wrong don't worry about that commit message yeah here we go merging the whole thing to production and it's produced so here's a fun version that we added we can delete emails to now FY look at that so now after all our hard work it's time to test it so I did put in an video it turned it into an email let's go ahead and uh click it's this video by the way just to show it to you this video right here and then now I click AI transforms traditional coding jobs I get the two versions and now when I hit open in Google Docs vers this email just opens up version a and then for version B when I click this this version just opens up version B which is fantastic and the texting thing we were talking about is users get a text message like this when their email is ready so it says your email is now ready here's the title of your email here's the YouTube video it was made from and here are two different versions so user can click this version and then see what their email looks like so they can turn it into an email or a social media post or whatever they want the feature I want to work on now is I want to avoid the user from abusing the app so I don't want them to be able to send in multiple requests at one time so the way that I'm doing that is on our back end if I go into our users let's say I go to this user here I am going inside this user and I'm um I added a field called the current status okay so it's like are they currently you know did they hit upload or not and this current status changes when they start uploading so once they start uploading this current status will update in the start the current status will be empty and uh on my back end here I'm just saying if their current status is empty then continue the work but if the current status is not empty meaning like something is some kind of thing is processing like this backend workflow that we have this giant workflow if this is processing the entire time then I want you to just end the workflow here and I put the reason for ending and I said workflow ended because user tried submitting multiple requests at one time don't abuse this app my guy so error handling baby all right it's 143 p.m. time to take a lunch break let's see what we have for food we got a lot of healthy stuff I love these chicken protein bites so I'm just going to have one of these bad boys 140 calories 24 grams of protein we're just going to take these guys and dump them in here beautiful there we go and what's amazing is these come from Costco they're pretty cost effective and I don't need a chef or anything you know it's like super easy and nice I could just buy that in bulk and that's it I'm just going to have that with um I have this hot sauce this is amazing hot sauce this especially this one the Caribbean one best hot sauce in the game I love spicy food so that and then just fork and I'm good all right I'm here at my desk and uh this is the hack I have to get steps in otherwise I'll never get steps in it's too boring to just walk for me and so just going to grab my snack here so now and I have been stress testing the app for the last 20 minutes 10 to 20 minutes and we kind of just started and uh within that stress test we put a we sent out a bunch of requests a bunch of those requests are going through one has failed like the one that's on the red there and uh if I come back to our app you can see that this video here Powerlifting Meets I I can see powerlifting meet this has turned into an email email actually and if I scroll out it's turned into written copy I mean right and we have two different versions version B is generally like the better and the tighter one you can see the versions right here and let's try opening it in Google Docs and it does indeed open inside of Google docs so that is amazing and we're getting the text messages as well with these links which is also really really good so it looks like it's doing a really good job I mean out of eight or 10 requests that we kind of spammed it with it only really failed one so now we're finally starting to hit some errors one of our first errors that happened is uh our claw API that we were actually using it ran out of money so we got to go and update that so our stress test how is our stress test going right now now what would you give it out of one out of 10 is it going smooth 10 out of 10 or is it not going as smooth as we thought I say it's like an eight eight to n okay not bad so it's pretty good so let's keep making we had two errors that was pretty much it but it's like even errors that's not really that like not crazy important honestly yeah so let's fix this one now it's 420 p.m. right now and I just had my second meal had a lunch break where working with my cofounder who's standing right there and we made a lot of progress on the app V1 is now ready and now we have to transition from building the software to actually growth hacking mode because we got to start getting it in the hands of people otherwise we will not never have any users so stay tuned for that so we basically just came here and we're now going to the gym headed to the this gym right over here it's pretty nice and I just got my new shoes actually my new lifting shoes so now we're it's 8 it's about 830 we had a really good day not solve the coating bug that we were stuck in was kill me man yeah so B like literally just nothing was working yeah and I had to like go step by step you know keep going you got to look good for the camera bro yeah there you go look at camera was that natural very natural it's the most natural I've ever seen you hell yeah you tired KY did not believe this 12 no damn he passed everything 13 oh [ __ ] all right so it's about 1021 p.m. right now and I'm going to basically eat dinner finish up my macros for the day um basically just plan out my work for tomorrow and we should be good for today it's 137 a.m. and I've not been able to sleep but I got really excited so I worked on something and um there was a problem that was bothering me and so I'll show you what I did so like I'm getting the titles of these videos but right now I'm getting the titles and like my AI llm system Claw is coming up with these titles but that's super inefficient cost me a lot of tokens and have to spend a lot of money to do that I'd rather just pull these titles automatically and so I decided to uh start working on a script and I started talking to Chad GPT and I was like hey is there a way I can just pull the title using python so I don't have to like you know use AI to come up with the title of the video based on the transcript because it's too much so it told me about this Library called YouTube DL um I tried this YouTube DL library but I kept running into errors and things kept breaking so I tried this for a while but YouTube DL was not working for me and then eventually I found this amazing Library it's actually called P tube it told me about it actually Chad GPT told me about it Google search and stack Overflow didn't really help out and it gave me all this code and I took all this code and I actually boiled it down to a one liner and it's actually quite nice so I'll show you right here so if you take a look at this I mean the code is it's a nice little oneliner so you pop in the URL and then you just ask for that video title okay the library is p tube right so I'm importing YouTube from PBE so you just call the YouTube function give it the URL and ask for the title and boom right there how I work 12 hours a day without getting tired and if I take this URL and I copy it and I paste it in it comes right up right there so this is why I say it's so important to be really passionate about coding and love it cuz I was in the middle of watching YouTube content and about to wind down and sleep but I love it coding so much that I thought of a problem and then I just started working on it and there are times where I'll go Way Beyond 100 a.m. to 4 5 6 700 a.m. at times just cuz I'm like obsessed with the problem and trying to solve it so keep this in mind when you decide that you're going to be coding right I want you to learn how to enjoy it and preferably you should be obsessed with it or enjoy it a lot it'll make the journey a lot easier I'm pretty much exhausted we gave it are all absolutely crushed today got a lot done on the app V1 is now ready so tomorrow is going to be all focused on growth hacking trying to get this in the hands of users and maybe we figure out this app sucks and nobody wants it that's okay too that will be very informing and helpful for us so I'll keep you guys updated on that but that's it for today and if you want to learn how to build apps like this and learn how to build stuff with AI I have a course called profit with AI that teaches you the exact things we're doing today to build the tools and apps that we are building right now the apps you know how am I using these low code platforms how am I actually integrating code into them how are we turning these things around in a day or two how are we able to go and test and validate these ideas all of that is covered in that course it shows you how to build these apps from scratch how to find the best tools to do it it teaches you with low code and code uh but the idea is to be a practical Builder so you can build Solutions today ASAP so you can go and ship them out to the market as fast and as quickly as POS possible so that you could either make more money or get a higher paying job or get a promotion at your current job so that sounds exciting to you click the link in the description below join the course profit with thei I love your beautiful face and as always I'll see you in the next video peace