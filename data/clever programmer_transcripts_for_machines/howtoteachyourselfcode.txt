Okay, so I'm gonna give you the benefit of the doubt, 'cause I don't think that you're stupid. Looking up something like how to teach yourself to code, there are a million resources. I'm sure you were able to find some. But that's also exactly the problem, because there is an overwhelming amount of information out there. I'm gonna guide you through all of the stuff that's not good versus the stuff that's actually really useful. That's what's gonna be covered in the video today. (synth blares) (audio distorts dramatically) Hey guys, what's up? This is Qazi from CleverProgrammer.com. Let's talk about how to teach yourself code. Now, teaching yourself how to code is very difficult. The number of resources out there is actually just totally overbearing and overwhelming. You have, like, a myriad of resources as soon as you search for anything related to code. Codecademy.com pops up. Udacity.com pops up. Coursera.com pops up. edX.com pops up. And oh, my god, Team Treehouse, teamtreehouse.com pops up. So, you really have a million resources out there where you can actually go and learn computer programming. So I guess you don't need to watch this video anymore because I just gave you all of the resources. I'm just kidding. The point is that, even with all of these resources, you want to narrow down your learning, because a very common problem that people face is actually something called a learning binge, which is great, because that's something that I always do. I'm like, oh, I wanna learn this, and I wanna learn that. There are like so many different programming languages out there, and there's so many different resources. I wanna be enrolled in all of them. I want to be subscribed to all the podcasts and all the blog posts, and just kind of have a fire hose and have it be directed at my brain to the point where even if it's not making sense, I would try to keep going. But my point here is to kind of guide you through all of that. Now, at this point, you might be wondering, who is this guy, and why should I follow his advice? I am somebody who has actually been through a lot of these, so what I wanna do is... Kind of cut through the crap and get you the right information so you can get started without being overwhelmed by the number of options. If you guys look up Codecademy Python, my videos are ranked number one, so I have been through Codecademy. As a matter of fact, I've been through it all. I have certifications from Coursera University, or Coursera, the MOOC, on Udacity.com, I've completed the CS50 course on edX, and I have dabbled a little bit in Team Treehouse. And I have done a bunch of other stuff on, like, so many more websites related to computer programming. I also happen to be one of the top instructors for computer programming at TakeLessons with over 30... (Qazi pops mouth) Testimonials. But, let's get done with this boring part. I have been through it, and I wanna kind of help you out, narrow your path, focus your learning, so you can spend less time researching and more time actually learning. Okay, so, before I kinda give you a good solution to a lot of these problems, I wanna discuss some common problems that exist. So, number one is almost all those other courses out there are boring as hell. They're made by somebody who's like, sitting behind a screen, with a screen cast, and they're just like sitting there and talking about something and they don't treat you like you're a human being. Computer programming courses? Well, I'm sorry, guys, I take that back, because this guy, he doesn't even know the meaning of boring. All right? (Qazi claps hands) So I'm super excited, okay guys, let's, let's check it out, all right? Let's check our this course, okay? Let's do it. (upbeat rock music) (Qazi snaps fingers) Damn! Did you guys see that intro? (Qazi slaps desk) Did you guys see that intro? What? Let's, let's check it out again. Let's check it out again. (upbeat rock music) Woohoo hoo! Welcome to the R Programming Language. Damn, boy! I'd like to... That was smooth, that was real smooth. explain why I want my students to learn the R Programming Language. Over the years, I have learned and taught a great many computer languages, including Fortran, Basic, Pascal... So I hope you guys kinda get a sense of what I was talking about. Anyways, no videos like these for you guys. He has a... 120,000 views! With 539 likes. What? 120,000 views, you guys! What? That's unbelievable. You want somebody to talk to you, guide you, and make you go through that process, because especially when you're starting out, that's what you need. I know that because that's what I needed when I was starting out. I needed somebody there to kind of almost, almost be there physically, but that's impossible if you're trying to do it through the internet, but there are ways somebody can connect with you, and one good way is that there's a human being treating you like a human being and not just hiding behind a screen cast and speaking to you in a very monotonous and boring tone. So that is... One common problem in a lot of these courses. Number two. These do not center around beginners. Okay? So a lot of these courses will be called 101, even in courses in college that are called 101 a lot of the times, but they don't... Scale gradually. The scale is kind of like broken. It's almost like a stepwise function in mathematics, which means that the lines aren't like, connected, and there's a gradual increase. It's kind of crazy, it's like... (Qazi mimics explosion) You know, it's like exponential difficulty scale. So, they say they're centered around beginners, but they take really a lot of things for granted and skip over a lot of little steps which leave you frustrated, and sometimes you think that you're dumb, because, again, I know, because I felt really stupid taking a lot of these, either blogs, like, following these blog guides, or following these videos. I would think, hey, maybe I'm just really stupid and those things that they're taking for granted, they're taking it for granted for a good reason, and I should have just known it in the first place. But it turns out that that's not really true. They should teach you those things, because there's no other way you would have learned them, and they shouldn't assume that, especially when you're starting out. So, that's one problem, taking things for granted. Now I wanna talk about problem number three. Feedback is slow as hell. Okay? So in most of these courses that you're taking, you get stuck in a problem, or you wanna try out some new idea that you came up with. But... Where do you get feedback for it? Well, the best solution that you come up with after a lot of contemplation is, hmm, maybe I'll just post it in the forums. So then, you start thinking about an intelligent way to put together the question, so that you can post it in the forums. Before you know it, a half an hour has passed while you're trying to compose this brilliant question, because, after all, you don't want those snarky intelligent people on the internet laughing at you. Do you? So, you do the next best thing, is you tell yourself, wow, this has taken me way too long, and what the heck was I even doing, thinking about posting a question in the forums in the first place? Forget it. So you give up, and ultimately, you skip that part of the course, and you move on. Well, what happens when you skip that part of the course and move on? You are missing a fundamental piece of understanding. Everything that you learn after this is going to be much weaker, and is going to... Basically not build itself on top of what you had previously learned, and therefore the new knowledge is... Really not going to be any knowledge at all, and you're going to start getting very confused with the more advanced concepts, 'cause in the middle, your knowledge is very weak. And ultimately, what ends up happening, you actually quit the entire course. Okay guys, and this is the horn tooting section. What does that mean? Well, it just simply means that I'm about to toot my own horn, something I don't like to do very much, but hey... When it's called for, you gotta do it, right? You gotta step up to the occasion, and you gotta toot your horn. I took all of those things into account. The feedback being slow, the courses being extremely boring, the lessons not being catered towards beginners, and I decided to build something that resolves all those problems. So I'm gonna show you guys just a little bit of a sneak peek into my own course. I've created my own coding school called CleverProgrammer, and I want you to just take a look at it and see what you think. (Qazi claps hands) All right, so I wanna give you a little sneak peek of my website. So you go to CleverProgrammer.com, okay? Now, let's say you go to the Learn Python course. You have the entire curriculum in front of you, okay, so you can do exercises, you can go projects, or you can go stepbystep, linearly, how I have put it together for you. So, let's say you go to Lesson Zero, right? It's a little bit slower, 'cause I'm doing a screen cast here. So, for example. Two questions. Why are you so beautiful, and what the heck was I just talking about? Today, we're gonna learn how to install Python in less than five minutes. So let's get started. (audio distorts dramatically) All right, super cool, cool guy, with the cool intro, let's just watch the intro a little bit. (audio distorts dramatically) Super dope. But that's not what's important. What's important is that... When I'm talking about coding and Python and stuff like that, right, let's say that I'm doing... Five plus five is 10, 10 times 20 is 200? You could be like, right here, and you can actually go five plus five, okay, and, for example, hit print, put printer on and hit run, and you can actually see on the righthand side, it says 10, okay? You can do the same thing for 10 times 20. 10 times 20. Boom. You see that right there. So... You get to code, live, with me while watching. How cool is that? Right? You don't need anything installed, and you don't even need to leave that space where the video is. You can actually be doing that at the same time, while he's talking, or I'm talking, and you're actually coding. So, super cool, then you can go and leave a comment below or whatever, right? That's pretty obvious. But now what isn't obvious is, let's say that you're watching this part, and you are stuck. You're like, hey, what is that thing that you just opened with the black screen? I don't know what that is. You know? That's kind of confusing me. And so you just click this button, and you go, hey, what's that black thing with green letters? (notification dings) You're truly confused. And I go... Well, that's just the terminal, silly! So, that's so simple, right? But it gives you that immediate feedback, and it ends up being one of the most powerful tools, and I have, as of now, this feature was implemented fairly recently, but even up until now, I have seen some tremendous benefits of this with students, and I'm getting countless feedback from students telling me how much they love this feature and how much it's helping them, okay? So, check it out, test this out. Maybe this feature could be helpful to you as well, okay? So that's a little bit of a sneak peek of my website. Hopefully you guys found this to be beneficial and enlightening, and awesome, and the toothorning list... (Qazi slaps hand to match each syllable) Goes on! These courses are centered around beginners. So I actually start teaching you visually. I use a tool called Turtle, which is a module, and it actually builds things graphically as we learn them, so when I'm showing you the process of looping over, we're actually making a circle out of squares. This way, you're not like, oh, your answer was supposed to be 87.69992. This way, if your turtle isn't making a circle out of squares, then you automatically know that your code is wrong, so you're getting some fast feedback. Now, another most important thing I wanted to share with you is three, feedback being extremely fast. You see that blue button at the bottom right corner? Click that, and you can speak to me directly, like we're text messaging, like we're best buddies. Okay? I try to make it as simple as possible. You can almost think of it like a mentor being alongside you as you're learning. So, this is a very powerful tool that you guys can leverage so you learn what you need when you need, okay, because that's key. So. I want you guys to sign up for the Learn Python course if you're interested. Go to the school, check it out. Okay, so. Let's say that your goal is not to learn Python. Let's say your goal is not to learn anything that is on my website, or you simply don't like me, whatever the reason may be, I wanna offer you something valuable. I wanna give you good resources and good places to get started off with. Maybe your choice of what you're learning is different, so... If you want to start off with, let's say, web development, you want to do things on the frontend, you want to do things on the backend, and you wanna do stuff with HTML or CSS or JavaScript, why are you even here? You should be at Free Code Camp. Okay? Free Code Camp is an unbelievable place to go to for learning all web development stuff. Web development, go to Free Code Camp. They will help you out, they will help you build projects, they will help you build portfolios, they are absolutely great, okay? Backend development, and if you're starting out, again, my website is going to be a really good resource for you, because Python can be used for the back end, okay, and it's a good language to start off with, and if you guys haven't seen my video, What Programming Language Should I Learn First, you guys should view that, because it'll help you get an overall view of what... What's something that you should start off with. And it'll tell you also about other programming languages and their benefits. So, hopefully that gives you a little bit of a better view of how to go about it, okay? Now, I wanna mention a few resources for you guys. Coursera is a pretty good resource, okay? But my list, my order of the resources that I recommend them in, is if there's something on Udacity, you should go to Udacity first, because Udacity, honestly, has the best introductory courses. Why? They're very highquality production, okay, and... They are very clear and tothepoint, but they're not rigorous. So they give you a little taste of what's to come and what you can do, so... You can start learning about those things in Udacity. And then you can take the next level of that course, say, at Coursera, where things are a little bit more rigorous. So at Coursera, you have a lot of deadlines, you have courses, it's a little bit more academic, I would say, okay, but not like school, because school just focuses on regurgitation and doing well on quizzes, but it doesn't care about you remembering these things and retaining this information, actually using this to get employed. Okay? So... Coursera's, that's not what I mean when I said academic for Coursera, okay? What I just mean is that... Coursera is a little bit more structured. After Coursera, something even more rigorous, but again, something, a very valuable resource is edX. So if you wanna just take it right to the next level from the getgo and you wanna have quizzes and grades and instructors and all of that, and a lot of rigor, go to edX, okay? That website has pretty rigorous courses, they're very intense, but you will come out pretty good. But again, I want to emphasize that you wanna make sure you're having fun the entire time you're coding, because that's the number one factor in getting anybody good at something. You wanna make sure you're having fun while you're doing it, because eventually, you will quit if you don't. Like... Anybody who's rational won't do those things of crazy things. You have to have fun in a way where it's irrational, right? Steve Jobs said something along those lines. Because those guys wouldn't be doing what they did if they didn't find it fun, okay?. So... With Udacity, Coursera, and edX out of the way, there are some other resources that are pretty cool, like Team Treehouse is another resource that you can go to, but I cannot personally recommend it, because I haven't... Used Team Treehouse. Anyways, guys, I appreciate you. I love every single one of you. Please. If you would so wish to remain on YouTube, go ahead and check out my Python tutorial. Go ahead and check out some recent stuff that's been going on, and make sure you subscribe to the damn channel. And, of course, if you wanna enroll, here's the link again for CleverProgrammer.com, and again, I love you guys, take care, I'm out.