everybody um let's start dropping in uh where you guys are coming in from welcome everybody by the way uh this is going to be the second act of the mern facebook clone um last time it was a bit long but this time we will be only focusing on the uh backhand uh and actually i gave you the front end just like last time with the messenger build it should be down below this description um so i'm just gonna go ahead and share my screen and let's see how we go about it so i go to youtube of course here is uh the stream oh oh yep there we go and the uh github link is down here guys who is excited let's drop it in the comments who is excited i want to know who is excited i want to know who is ready to build the facebook mirn clone with me today and who is ready uh to have this awesome build on their portfolio hey okay i see uh christina dropped some fire nice we got lots of people we got oh tommy kelly hey yo uh he actually won the kobe tracker challenge nice to have you in the house bro um whoa we got we got so many people who who can't wait to uh to build nice awesome okay friday john says i'm ready uh love from bangladesh and whoa we are at 181 concurrent viewers nice job guys guys if you're excited if you're pumped to have this facebook build on your portfolio smash the like and thumbs up button uh hit the subscribe to this video and let's get this video out there to everybody else and if you guys guys find this uh even the whole thing a whole channel uh like um informative and you got value out of what we are doing here with qazi sunny nas aaron and all the guys at team cp drop a drop some nice comments and and smash the like button so that this video and all the others can go ahead get out to everybody and we can provide everybody as much value as possible because i don't know if you know it but for 2020 we are planning to help 5 000 people to get jobs as developers guys who is excited who is pumped to have job as a developer punch it in the comment section let me know if you want to start working and earn your income as a developer uh starting in 2020 and if you want to be one of the 5 000 people who who get a jobs as developers buy clever programmers help okay nice yeah we got some crazy amount of fire and yes and whoa and me okay yeah i see lots of people want to become developers that's great okay um with that i think i'm just gonna go ahead and start helping you guys uh yup okay so now uh this should be the description that you are seeing at the moment and this is the link that you want to go ahead and click now what i will be doing is uh here it is i think this should be um public let me know guys if you if you can open this link or if i need to set something uh up hey dr mirn thank you guys thank you so much uh yeah okay so guys go to this github link and let me know if it's working perfectly if it's working good um and let's actually clone this app by going here uh smashing that green button just like the like button so literally go ahead hit that green button and there is the link that you want to go ahead and grab now i'm gonna go ahead and try to select all this and copy now i'm going back to this folder that i created for today's session and there is a project coming for pwj by the way i'm going to create a new folder i'm going to call it fb which is like facebook uh mern shantan who says nice hair dude thank you so much took me two years to grow um yeah so facebook mirn uh and back end of course and i'm gonna go ahead open up a terminal at this folder and guys if you don't know why this is colorful uh it's because i'm using all my zsh now all my zsh is a super awesome tool super awesome uh tool to upgrade your terminal it basically gives you a bunch of features but most importantly it helps you understand how to use terminal so much easier that um yeah so before using all my zetta sage i was like oh no way no terminal at all but ever since i started using it i'm like oh this is a good stuff okay now uh what i will be doing is just basically type in here get in it which initializes the git version control and now you can already see that i'm on the master branch okay now what i will be typing in here is essentially a git clone and paste the link that i got out from here oh that's a wrong color let's use this one uh so that link is essentially pasted right right over there sorry guys okay um yeah and now it is actually yeah so that was pretty much cloning the whole git project and now uh it actually created another folder so i don't know why i created that folder doesn't matter oh and i will be just uh seeding into that folder so let's go ahead and copy and just cd and boom there we go and now what i will be doing is essentially just typing in mpm i which stands for mpm install hey rookie uh hey uh atari wa we are not doing firebase um we kind of will because the front end is i mean it's it's already probably um up on firebase for you guys if you have done the uh original react uh build with sunny oh by the way let me know in the comment section below uh or actually on the right side or the left side i don't know uh let me know in the chat if you have built the original uh version with sunny uh i'm super pumped to see uh if you guys have built it uh because this actually this starter project is a little bit modified so it's not the exact same one but it's very close so like there is like one or two line that is not not the exact same it's just uh saving us a little bit of time because i am planning to finish this up um under two hours or under two and a half hours max okay uh so if you haven't done that not a problem it's not a requirement as it is down below and you can use that project to uh go ahead and work with this um work through today's session but i highly recommend so so that you will actually get the whole mirn thing done and you will have like more experience in react and stuff like that i highly recommend you go ahead and literally like uh and and finish up the build with sunny as well um you can just find it on on clever programmers youtube channel it's um oh and by the way we hit uh 800k subscribers thank you so much everybody whoever uh subscribed to uh our youtube there we go 800 thousand nice so uh the original facebook build with sunny should be somewhere around here down there okay now with that said who is ready to start building the mern facebook clone with me today let me know in the comment section uh drop some fire let me know if you uh if you're getting value out of this channel and because that's what literally gets us moving forward uh let me let me move the comments a bit yeah okay i'm ready um okay uh now it says me nice um guys please do not use caps lock because our nightbot is gonna ban you um uh anamika says i'm excited david let's go nice uh dave kumar you bro go ahead thank you bro okay yeah miles says people who don't say me are missing limbs yeah right mustafa goes uh ready let's go rukia goes me and lots of fire hey there we go guys okay let's jump straight into building uh the mern facebook clone and i think it's yeah there we go so now we have the front end project um cloned yep that's the word i was looking for and i think i just gonna go ahead and open up this uh folder in my wii s code um yup it should be it nice and i will zoom in in just a little bit let me just get everything uh working okay source and i will just open up app.js and let's actually go ahead and zoom in okay guys you should be seeing it now pretty uh decently let me know if you need a bit more zoom and hey dave kumar just dropped a nice little donation thank you so much bro i i actually remember you and and you're always showing up awesome stuff thank you so much we really appreciate you uh yeah let's continue for a great start yeah thank you so much bro okay um yeah so essentially we have this starter project right here so what i want you to notice guys is um we have this feed uh we are actually pulling in data from the firebase which is firebase.js yeah this is where your firebase config goes we will uh not worry about that okay yeah we will uh we will be doing that in a bit when we set up the authentication um let's actually do it right now so i'm just gonna i don't know if do i have no i don't uh let me quickly open up a new safari over here and let's actually open up firebase uh so now what we will be working on is essentially get this uh this project working and like have something have like an idea of what is going on because if we uh go ahead and open up the terminal and say ls and let's just go in here boom ls again because we are two folders deep okay oops okay there we go and now if i go ahead and say hey we got an other donation by sh uh sneha right i hope i pronounced your name correctly thank you so much bro uh we appreciate you a lot uh yeah uh on mo says please zoom boom uh so thank you so much for this lovely donation um yeah we really appreciate you uh and we love love you guys hey priyanshu what's up okay um let's go so if i go ahead and type in npm start uh it's gonna essentially start up the project i hope so because i've run npm install yeah there we go we are starting development server nice and we should soon be able to see it on local host 3000 now let's wait until this opens up yeah okay let's see what we got local host why didn't popup by the way yeah so it's um we can say it's not really working uh it's because we don't have the firebase hooked up um yeah so with that said let's actually work this out uh i will be creating a new project just because you guys um might need so if somebody is a super beginner with firebase it's actually a suite of tools provided by google i will be creating a new project uh just so you can you know um how to set it up but it's essentially it's oh i'm two projects away from the project limit i gotta do something about that uh yep so guys actually um watch out for this thing because once it runs out it's gonna give you a hard time for a month uh so yeah it's a suite of tools it's like nice uh nice stuff all you need to have to have firebase is a google account i'm sure most of you have a gmail account so yeah okay um let's type in here uh facebook mern that's good uh i don't need no google analytics and let's go ahead and create today's project let's see if i have any questions in here in the comment section by the time hey mustafa says yo keep supporting guys yeah you know okay uh will you show it on heroku as well yeah i can i can deploy it to heroku yep there we go uh so we are in the project that we just created and i will go to this uh this icon over there that's essentially adding a web application that's what we are doing at the moment uh let's go ahead and add the web app here you have to uh what you need to um make sure is that you check that box i forgot it last time it gave me a hard time okay if you see this that's good and now let's go ahead and type in here facebook mirn and just go ahead and register the app don't worry about uh firebase sdk and all these type of stuff we are not not gonna uh worry about that what you need to do is go to and now uh announcements authentication and go ahead and hit setup sign in method um coyote ask did i catch this live yes you did yes you did my man and what we will be doing is google uh authentication that's the one let's just hit it enable and the support email is gonna be whatever email you have yep uh david i made my first box with code tutoring uh during people let me okay and i kid you not go check one of the males cause he wrote hey priyanshu great job bro nice job okay um i think i'm gonna turn a bit up the air horn and yeah okay uh awesome now uh we are still we have 200 people in the house let's go guys drop some fire if you're uh if you're ready for today's build smash the like button if you like it and if you got a value out of any um videos by clever programmer let's go okay so yeah google authentication is already done nice and what we need to do is go to that icon hit project settings over there scroll down all the way to the bottom uh hit that config that will pull this thing up and you only need this stuff inside of the object yo uh doing react tutorial i would love to but i have exams at the moment not a problem pranav you will be able to watch this back after uh later on it's uh it's all good and firebase probably costs money right no it doesn't it's completely free uh you don't have to worry about it we guys will let you know in advance if something is going to cost you money but we haven't haven't done anything that literally costed money we are trying to focus on teaching you guys stuff that is essentially free and provides you a lot of value okay so we we don't want to break your bank okay uh now what you need to do is like essentially copy this uh snippet of code go to firebase.js delete this commented line and just uh paste it and i think we should be good to go very soon okay here we go nice um bruce bane asks whoa uh hey david will you be building the front end as well or just the backhand uh today we will focus on the back end hardly because a full moon build would it's actually a two session or two day thing um so yeah now not gonna build the front end today uh you can go ahead and search up sunny's video on that and um and then you will be you will have a stepbystep video guide on how to build this very front end all right let's hit sign in and it's gonna drop me over to that yep i'm gonna go ahead and sign in here and here we go so because at the moment um this is not we don't have a running server or something that it is attached to uh and that's why it's not showing anything but we can see that we are live over there which is nice uh so the widget is working uh the use what was that react context api is working because actually essentially these are uh these are using react connects api there we go and you can already notice the only difference uh between sony's build and this build is i changed the input form so in originally in sunny's build there is an other uh link oh no no a text box uh where you put the uh image link and then that was the thing you uploaded now we are gonna be using uh mongodb grid file system i think i think grid fs is grid file system i'm not sure by the way so we will be using mongodb grid fs to upload files so that we will actually be uploading files to mongodb it was a highly requested thing uh from us and we want to let you know guys that we hear you we are here for you and we are providing the value that you request and yeah so you guys ask we deliver that's that's how it works okay um real mobile app using javascript frank asks yeah we we are actually planning on launching a couple of uh react native uh sessions as well okay uh yeah let's go ahead and start working on the back end so out here i will be creating a new folder which i will essentially call oh that's the facebook mirror backhand oh my god okay sorry um i i i gave it the wrong name okay don't worry about the facebook mirroring backhand folder um that was my mistake okay so here is where the facebook backend project will go uh orif says you're so nice looking thanks bro uh okay so what i will be doing is opening up a new terminal and list out whatever we got i'm gonna go into facebook backend boom and clear out the whole terminal i think i'll just close these because we will worry about those later and what i want to do is essentially oh um start get version control and i can do that by typing in get in it nice there we go and i think i pulled it up yep and what we will be doing too is is pretty much just um initializing the mpm package okay so npm init there we go it's going to throw a bunch of questions and some stuff that you will never read at you so package name is actually good for facebook backend version uh it's one description um learn facebook backend project okay uh what you need to know is that we are not going to be doing the index.js entry point we will actually uh do server.js and whoa we have 222 people watching this live two to two awesome guys thank you so much for uh being here with me and smash the like button if you got uh any value out of this live or any other for that purpose um yeah okay so what i will be doing is uh type in here dot server.js nice there we go test command don't worry about it git repository leave it empty keywords author it's gonna be me cozy nice license okay is this okay yes it is and what we will be doing is installing all the dependencies at once i don't want to worry about uh any of those later and yes uh sri bassam asks if this is the package.json file yes my man this is the package.json we just have it uh ready so before we go any further let's close it up uh so it doesn't mess everything up i will um clear out the terminal so you guys can see it nicely and what i will be typing in here is npm install or mpmi and we will uh use express mongoose uh cores motor motor grid fs storage okay there is already a lot of stuff that we don't know so express is actually the server side javascript that we will be using today it's a framework uh which is running on the node.js runtime so if you guys don't know what the mern stack is uh oops wrong button uh sonny mer yeah so the murn is actually standing for mongol db express js oops can't speak while i'm typing react js and node.js so node.js is actually a javascript runtime it's a nice little stuff mongodb is the database that we will be using to store not just our posts and text and stuff like that that we did earlier we will actually store images inside of there um and we will be using something called the grid fs to store images and we will also use mongoose to connect to our database and express.js will be running on our server react is our front end nice so yep that's pretty much it okay hold on uh boom okay oh okay hold on a moment yeah there we go okay so what we will be doing sachin says david rox thank you so much bro thank you so much okay what we will be doing is type in npm install express bungles course motor motor grid fs storage so motor is basically just accepting the image motor grid fs storage is going to be the actual storage where we uh store uh our images uh grid stream is gonna grid fs stream is gonna be uh responsible for uh reading out and rendering out stuff to the user's screen uh we will also have body parser we will also have path and pusher because this app is going to be a real time okay um yep i think that's pretty much it let's go ahead and install everything and while it's doing its stuff let's actually go ahead and set up our mongodb database why is my hair coming all the way yeah okay mongodb.com now guys who has worked who worked with mongodb let me know in the chat i want to know if you know mongodb if you know this awesome nosql database let me know guys in the comment section down below because this is some awesome stuff that is highly in demand in the job market right now along with the other three stuff inside the mirror preanswer says it's the first time nice awesome so mongodb priyanshu priyanshu mongodb hey um yeah uh rukia says me um it's me because you're you have used it the first time or if you have oh no i asked if you have yeah okay i see a lot of people already have used it nice awesome okay um yeah i see a couple of firsttimers and i also see a couple of people who have already used it i work with a lot of jason says kebab it's uh pretty much the same stuff i mean we're literally gonna be storing stuff in a json format pratham says yes i used mongodb mustafa says me too i used it nice guys is it the beginning um almost the beginning you're not not too late okay so what we will be doing is so it's it's actually a freezer for those of you who are uh new to mongodb this is a completely free i mean it you you can also upgrade of course upgrade to uh paid version but yeah we will be doing using the free uh completely free stuff um and this is going this is a nosql database and this is going to allow us to store in our images and post since every single detail okay if you haven't used mongodb uh visit fail this is your button to click if you already have like me sign in is the button you want to go for um essentially it's super easy to uh set up you need an email address a password of course and then you will be guided through now because i already have it i will just sign in and yep let's go ahead and we are signing into mongodb are we using mongodb or firebase we are going to be using both but we are not going to be using the firebase database we will be using mongodb instead so firebase today is only going to be used for authentication and hosting i just came in what's he doing uh asks kion pillai um i'm doing the facebook clone um tell marks i said hi and i will be doing it in the mern stack okay so what i will be doing here so those of you who are using mongodb for the first time let's just go ahead and build a cluster it's going to be inside in the middle uh let's just go with that and you will be able to follow uh the follow up once we have the screen again i just need to go ahead and create a new project alongside with those who have already used mango db so i'm going to click new project right there um i will give it a name i will call it facebook mern clone okay nice i will click yes this is the place where you can add other members i'm not working with anybody so create new project uh radu mihai says i love learning things nice that's that's the mindset bro so anybody who is new to mango db uh was on this screen so let's go ahead and build a cluster with them uh we will be using javascript of course and this is where you want to go ahead and create a cluster now you can go with the paid version if you want to pay but we will be using it free because it's completely enough don't worry about any of the stuff going on around here yeah just pretty much leave everything just the way it is and click that create cluster button down below uh nice and this is essentially going to take a couple of minutes it says it's uh one to three minutes well it's not um it's a little longer usually but in the meantime we will be setting up network access um let's actually do it a bit later because okay let's actually do it a bit later let's see how our uh yeah so everything let's go back to the code everything is installed and what we want to do is let's first deal with the okay so if you guys can yeah so there is like 2k in the version control stash um we don't want that to happen that's because uh there is node modules and there is a meme i usually show so node modules github meme so what happens if you're not doing this step with me is where we ah there it is um that's pretty much what's gonna happen to your github whenever you push this code up uh so there is this node modules it's a couple of hundred megabytes already because we have uh we installed lots of dependencies going on here uh these are all added here and if you're not following me this tab it's gonna blow the whole thing over okay guys get the energy up let's get started coding what we will be doing first is add a dot git ignore file uh we're just gonna type in node module oops modules in here and let's save it and now that version control just went back to three that's what we want to see okay nice stuff that is uh so get ignore that was it let's go back to package.json two things that we need to do here uh one of them being is set the type to module and enable es6 uh coding in node.js now you want you might if you were here for the first time and you haven't seen any of these marine videos you might be surprised because es6 is still in experimental um in experimental state but we know and you know that ex es6 is the way uh is the is in demand right now in the job market so we will be doing es6 stuff therefore we need to type in type and select the module that will allow us to do the exact same stuff that you you yeah that you do with uh sunny so we will be importing a package from the other package um no importing a module from the package yeah that's the way and yes he makes a aliens in area 51 es6's experiment yes es6 is experimental okay jokes aside um so yeah and we will be importing a module from a package that's going to be the terminology that we will be using instead of requiring it that's it the other thing we need to do is type start in here and we will just say node server.js and add the comma at the end of the previous line nice there we go with that said uh package.json is ready um and we we actually if you you guys might be interested in why we added this stuff over here it uh it will be needed for heroku to be able to start the application by itself nice uh with the cover let's close this file as well and create a new uh file inside of the back end project which we will call uh server.js and we just got a nice lovely donation by anupam uh he goes uh oh it's just um okay it's without tax thank you so much bro um we massively appreciate you uh and stick around and be with us and get the most value out of it and get a job with us okay thank you so much by the way and yeah we love the we love you guys okay um can you make your face come a little bigger um at the moment i can't uh later on i will upgrade it's essentially it's just a builtin uh webcam but i uh new one is on the way okay let's put it that way okay now i will be closing the terminal so i can free up some space uh yeah okay um what we will be doing is essentially just uh sketching up the out the app so that we will know what to uh what we will be working with okay uh type in this is where we will be importing stuff this is where we will be configuring the application so this is the app config part then we will have a couple of middlewares then we will have some db config going on um once i learn how to type we will also have a couple of api routes nice and we will i think that's that's no no we we will have a listener nice okay okay there is a listen okay so this is how the structure of this application is going to be it's completely unnecessary to write in here if you don't want to but it just helps you a lot to see what you're working with and separate all the stuff that we will be working with okay now i have a bit of a snippet of code that i'm just gonna paste in here it's essentially just importing oh it's essentially uh importing everything uh every module from its uh package okay uh let us do yeah now i'm kind of missing that yeah priyanja i know i know guys get the energy up let's drop in the comments if you like it uh let's stop here for a moment and so let me know guys if you are finding this uh interesting if you are hyped about it if you are ready to put this application on your portfolio and if you want to have a killer project that will get you a job guys let me know who is excited who is ready to build this application with me today um and yeah on that i think um we can go ahead uh nico says story concentrating on the it's all good bro okay yeah there we go so with that said uh okay what another thing we will be doing is this this is essentially just uh setting up the all the gridifs and mango stuff this is just a nice way to doing that yeah clever programmer you are doing great job thank you so much bro uh sherry i i hope i said your name correctly thank you so much we appreciate you brother um preacher when do you sleep man he doesn't sleep uh yeah pumped up uh let's go you guys are amazing thank you so much yeah what's the use of pusher though great question uh that's a thing which we will be using to make the whole application real time uh i hope you're excited for that so mongodb is normally not a realtime database um and firestore if you remember sun is built it actually is and whenever you're like submitting something and just hit uh hit the return and and it's actually getting added to the database at the same time and it rerenders just that part that's what we will be um that's what pusher is for okay um yep i'll remove this overlay nice and push it pretty much just a little bit between front and back and right yes that is correct and it can actually transmit data but we will not worry about that just now uh we are not going to do it the efficient way later on we will uh i will actually drop a session where i'll make the application crazy efficient when it just gonna add the new stuff on top of everything but for now um we're just going to be focusing on getting the things working and we will just resync whenever something happens so pusher is actually able to push the data that was just added to mongodb to uh to the front end so yeah um okay which has a low number of concurrent collections limit it's actually a hundred uh concurrent connections for free but we will not reach that okay let's create our application and let's actually uh create our very first api route today what we will be doing is essentially just typing in uh so let's just create an application instance so const app equals express oh express boom and the other thing we want to do is const port oops uh port and normally if we just wanted it on our local server we could just literally just type in 9000 but that boring way to go about it we definitely want to go ahead and upload it to and then deploy it to heroku so we will type in process dot in the wireman dot port and two of these standing lines i don't know these names um and that's where the 9000 will go okay so it's lit it's pretty much the setting up uh so if there is a process a m file which is added by heroku by default we will use that but if there is if that's not nonexistent we will use 9000 that's pretty much it and one thing which i always forget so i will add that right now is the middlewares um if you guys have watched the messenger clone build with me i think on saturday uh yeah you can you can watch how how i uh forget about it okay so what we will be using uh what we will be doing and pasting here is uh app.use body parser json it's essentially making the app being able to read write and and work with json files the other one is just setting up the course headers okay um hey kelvin thank you so much for this lovely five dollar canadian donation massive appreciation and thank you so much for uh thank you so much for it and for being for you being here um i will make it a little smaller so i can read it out loud you guys keep giving us massive value and i can't help but share my appreciation to whole cp team thank you david keep it going thank you so much bro for being here with us we are delivering this for you and and we are happy that you guys like it so much okay nice to have you in a family by the way okay uh yeah so let's actually create our very first api endpoint uh let's forget about dbconfig just for now uh and what we will be doing is basically it's just gonna be a health check and a nice little thing uh that we create so that we know that our application is up and running so what we will be typing in is app.get a slash between these single quotes and we will have a request a response and what we will be doing is set the response status to 200 and send a hello world now guys um probably there is a couple of you who don't even know what i've done here and that's completely okay because i'm just gonna go ahead and explain everything so app remember uh this app the instance that we just created so whenever this applique app uh receives a request so we we are creating apis which is essentially um request and response and in between some logical stuff uh but yeah so whenever the app gets a request with a get method so if you don't know what get is it's basically downloading data from the database not the database from the server and there is like post put delete a lot of other stuff i didn't even know all of these just like that so get is downloading data from the server or post is uploading delete it's of course it's deleting put is essentially it's a delete and a post so it's pretty much like um it's more like uh changing something so whenever you okay let's let's put it that way so when you were um uploading a image to facebook you are using a post request that will be uploading everything to the server then to actually show it to you you will need to make a get request so that you will be able to download it onto your screen and if you are changing your profile picture um you are you you are doing a put request right i i hope it actually uh made it clear okay uh whoa we are still ha we still have 895 people with us awesome stuff guys uh let's go okay so while we will be yeah uh and and whenever we receive this kind of request on the slash so basically the root it will fire off a uh callback function which has a request and a response parameter and there is we will set the response parameter to 200 status which essentially uh says okay and we will send back hello world um kian says mine says 19169 yeah because you're just watching youtube but we are live on twitch we are live on facebook on i think two different places so yeah all in all it's 200 now stick with me guys and if you guys uh got some value out of this video hit the like button okay uh yeah there we go and we will actually make this application listen to our requests and what we will be doing is basically typing apple app.listen on the port we defined up here and whenever so so it's basically when when we start listening with the application we will go ahead and console.log that we are listening on localhost and the port which we have and i am here actually using a string interpolation or the other thing is string concatenation i think uh so i'm using backticks over here instead of normal single quotes okay um let's go guys who's who is pumped about having their own first api route let me know in the comment section down below and yeah let's go ahead and fire this server up i will be opening up my terminal clear out everything so you guys can actually see what i'm doing and i will type in nodemon just simply just like that and this is actually starting up my server and as you can see there is the listening on local host 9000 which i've defined up here okay uh nice let's go to our postman oops i need to zoom in a bit uh yep and i think i already have all the api uh stuff going on here uh yeah and just just type in localhost 9000 and because it says hello world we know this app is up and running great job guys you just created your very first own api route this this deserves two air horns actually okay with that said let's go back and let's actually jump into the middle and upload an image to mongodb guys who knows how to upload an image to mongodb drop it in the comment section drop it in the chat let me know if you're excited let me know if you know what will what we will be doing right now um and yeah with that said let's actually stretch a little because guys this is gonna be the build this is gonna be the new thing rookia goes let's go yes play says i like your hairstyle thank you uh yeah and a thoroughball asks if it's binary nope um i mean it could be binary i don't actually know how the grid fs works but yeah i i i it could be binary it um so the way it it works is essentially cutting up to 255 uh kilobyte chunks uh our uh image and it will be like cut up into small little uh pieces and then we will have everything um set up uh and it will map together the stuff whenever we are retrieving those okay now with that said uh imat goes let's do it you think let's do a tree let's do it awesome yeah let's go so what we will be doing is let's actually connect to our mongodb database by the time this should have finished and what we will be doing first is set up a database access and a network access so let's start with the network one so we will be adding an ip address where we will be able to access to this database and we will hit this allow access from anywhere and guys a huge huge disclaimer let me actually write it out okay this disclaimer do not do this in a production environment you don't want to allow access from anywhere um this is just for uh teaching purposes or educational purposes we are not we don't want to allow access from anywhere okay let's hit confirm let's go ahead yeah and it's going to do its stuff uh exactly only on testing screwed if on production that is right a thoroughbar that is exactly what is it okay nice uh let's go and set up the database access what you want to do is just type in here in the uh user field admin and then auto generate a secure password and then you want to save it somewhere very very safe where you will be able to uh return retrieve it because this is the last time you're gonna see this password and then let's go ahead and oh um let's go ahead and hit add user this is the only thing you need to worry about right now uh don't have to worry about all these rules and stuff okay and we just got another lovely donation five pound lovely donation which is a massive amount thank you so much lux and she goes i just finished react facebook clone frontend tutorial this is the place where you want to be uh there is a tiny little bit of money uh modification between the starter project down below and the sun is built um we will be covering that okay nice stuff by the way stick around and you will have a full moon facebook clone that's the way to go about it okay um okay and let's go back to our clusters it's actually deploying uh our changes which is nice and what we will be doing is essentially just connecting to our database with that button let's go ahead and hit connect your application and that is the string you want to copy okay let's hit copy and guys actually notice that there is two little uh parameters that we will need to pass in one is password and one is db name okay um we will hard code the db name and we would this is where your password will go okay let's go back to our code and what you want to do is type in here create a new const which will uh be a uri and you wanna just paste your um uri in here i will close everything out so that you guys can actually see everything perfectly and in the database is going to be the facebook database which we will be just go uh fbdb uh hi the best from stream we have crazy people um i mean i can't really hide it from for now i'll just uh yeah i just go go go this way guys don't spam the facebook clone my facebook loan okay okay yeah so this is uh this is the full uri that we will be doing and we just received an other lovely donation from south africa uh 35 zar and marius thank you so much first of all we really appreciate you brother thank you very much and he goes uh the eye is called a pipe usually ii means or exactly oh yeah it's called a pipe okay thank you so much for yeah so the name of that character is pipe okay thank you so much and yeah uh two of them means or that that is right and cheers from south africa cheers bro for staying here with us um yeah i i think it's pretty late over there i think it's around like 10 p.m or something okay uh yeah let's go ahead and now we will need two different kind of connections to our mongodb uh i'm just gonna pass them inside of here and so notice that there is a tiny bit of a difference so we will be using the first one um i can do it a much nicer way so we will be using this connection uh hold on a moment so we will be using this uh whenever we are uploading an image and it's basically going it's gonna go ahead create a connection it's going to save it to a variable we will be able to work with that and then it's going to be like delete the whole thing and drop everything now on the other hand we will have another one mongoose connect which is like a general connection and it's um it's essentially just a pool of connection and it will be used whenever uh you want to use it okay uh with that said let's actually set up our db connections okay okay i just did okay um but one thing we want to definitely do is log when both connections whenever they are up and running so we will do con uh yeah con because we defined it as quan so we will say con once and yeah once open uh we want to fire off a callback function and we were just going to go ahead and console.log uh db connected nice and the other one is gonna be um yeah uh i usually ask didn't get how how this copy is pasted suddenly without copying i actually did copy it from my other screen um yeah i'm just trying to save a lot of time and energy for you guys and i'm more like um i'm just some some snippets i just uh copy paste and some of them i type it out as it is and which whenever i'm copy pasting i am making sure that we are actually understanding what is going on behind the scenes okay with that said let's go and let's go with the other um connection so uh we will say oh mongoose.connection connection yes and again once and open we will fire off and other uh callback function which will do the exact same thing so console log vb connected and that's kind of like kind of what we want to do um yeah and if you guys see 2db connected that is awesome hey we just received that other donation by ayush gupta thank you so much bro we really appreciate it thank you so much and yep and he says congrats uh congrats team for 800k subs thank you so much please drop a react crash course more inclined covering specific topics like hooks props rotor uh redux etc we are actually gonna do that very soon stay tuned brother we hear you guys we will be doing that very very soon okay um there is some kind of russian text going on as well in the chat anybody who is russian let's respond to him please him or her okay um yep so with that said uh we pretty much have our db connection done and now what we want to do is essentially set up everything so that we for the image saving stuff okay so what we will be doing is pretty much set up the grid fs which okay actually let's create the grid fs so we will be using a lat gfs and that's going to be our grid fs and what we will be saying is grid fs equals um there's some thing going on on my keyboard okay i'm back uh so grid fs is going to be grid con dot db and mongoose this is pretty much setting uh sending the target of this gridifs so the connection database inside of mongodb uh yep and the other thing we will be doing inside of here is define the actual collection where we will save all these images so gfs.connect collection okay it's a collection um and we will say images in here so we just pretty much just creating a collection to store all our images uh inside of there hassan asks uh is mongodb supporting realtime db like the uh firebase no uh originally it doesn't but we will make it work uh real time e real timey i don't know if it makes sense uh so yeah we will be doing there some kind of real time stuff uh it needs a little bit of extra work but other than that um it doesn't support it okay so inside of connect con once there is nothing else for us to do what we will be doing is create our actual storage where we will be store all our images um okay and we will be typing in so we will create our storage and this is going to be a new grid fs storage of course and inside of there we will have the url which is going to be uri so if you guys uh just added it inside of here um i think it's a lot better to have it like in a separate um separate um variable so that you can access it a lot of a lot of other times hassan asks uh i should add extra mpm packages bro it's all up here uh these are the packages that we imported and if i i think you were the one who asked about the realtime stuff pusher is responsible for making mongodb real time okay nice let's go back and let's get to work so we will have a url and we also wanna oh not there there and we will also have a uh have a little bit of file inside of here because we're actually adding a file um and we will have this is going to be in the request we and the in the function that we want to fire off we have the request and the file uh parameters and let's go ahead and return a new promise right written new promise which will either resolve or reject uh yep and let's actually define the file name uh domain says awesome love you guys thank you so much bro we really appreciate you stick around till the very end because this is going to be some juicy stuff all righty uh so const file name is gonna be so this is where you get to uh add whatever um uh file name you ever want otherwise by bro make sure to watch it later uh and i will be creating a file name which will say image a dash and the um and and the date now in in some kind of programmatic form okay so let's go and type in image dash and this is where um the date dot now will go oh oops okay here we go and we also want the extension to display because that's part of the uh part part of the file of course so we will be passing in the path.extension name and it's going to be the file the or from from the file the original name so this is essentially just wrapping out the extension from the original file name and just chuck it in there okay with that said uh we also need to add a file info which is not gonna be um something crazy fancy so the file name is gonna be uh file name and we will have a bucket name which is gonna be and guys make sure that you know what you're doing because we are typing in images again but please notice that we are saying images here as well as here so these two literally have to be the same otherwise it's gonna be um it's not gonna work out well uh biff okay um parth says i need help with cyber security class i mean we are actually planning on dropping some security content okay uh let's go ahead and let's resolve everything boom resolve and we will say file info awesome with that said we pretty much have our storage uh done but we need to set it uh so that this is gonna be used as the default storage so const upload and this is going to be the method that we will be using to upload the file and we will say uh motor and motor is essentially a package in node.js that you can use to upload images and files and whatnot and we will just pass in this storage right so that's pretty much setting up the storage and we should now be able to upload a file so who is excited to upload a file to mongodb who has done that who hasn't let me know in the comments because let's just try to make this um lectureish thing uh transformed to a conversation where you guys are like communicating with me and i'm answering like literally i'm answering a lot of comments inside of here so guys let me know if you have done this before if you know what's happening if you're completely new let's make this a conversation let's build a relationship um yeah and i need to drink because okay so sriracha says i didn't all good bro we are focusing on beginnerfriendly stuff so i'll be explaining everything james says i did it bro yeah nice awesome oops and let's actually go ahead and build that um endpoint so what we will be doing here is i okay um yeah i haven't but i'm excited that's the way to go about it nice awesome okay uh so we will say add the post and we will say uh nude as well i'm your backhand hair fun lovely bro thank you okay so we will say upload uh image so notice that we have like two parts of this endpoint uh the first one is gonna be upload uh patrick says i'm new to node.js welcome to the family bro uh so upload we are gonna be using upload for uploading post as well but now we are just uploading the image okay so and we will be passing in the upload dot single which will enable uploading only a single file and we will be looking for this file in the file field right so let's type in file in there and we will also fire up a callback which will have the usual request response and we will set the response status to 201 which means actually created so that's the equivalent of it's kind of like okay when you're successfully uploaded something that's a 201 right okay uh yep and let's go ahead and send back the request dot file in there so that we can make sure that we um we did everything correctly let's go and check everything out let's okay so my server is restarting db connected twice yeah you can see it guys nice and let's actually check this out so what i will be doing here is copy this um boom boom okay and okay so upload image what i will be doing is have a body going on here a file like body you gotta select form data and here this essentially gonna turn to become a file so you can add in a text and you can also add in a file so i will go ahead and select a file and yeah let's go with a cozy picture boom okay so i'm ending this image and i'm gonna go ahead and hit send guys who is ready to save our first image into mongodb let me know guys in the chat i will not press this until you let me know if you're excited about it or if i'm just being alone all over here just coding and talking let me know guys if you're with me if you're at this point and if you are ready to save your images into mongodb okay who is ready to do that excited do it okay yes lots of hands by kelvin okay super excited says rukia awesome okay let's go ahead yes we are with you nice okay okay uh let's go ahead and send it let's see what is happening and guys we just have it okay i'm gonna unzoom a bit so we have it working so whenever you see the stuff that means we have everything in our mangodb so that's the file name we just defined yeah so jpeg jpg actually yeah let's go man good vibes awesome so jpg is the extension um and this is the new date that we did over there yup no it's in date that now sorry and this is the image from the beginning okay now uh what i want you to show you guys is actually let's go to collections it's just um now everybody can sit back for a couple of minutes i'm just going to talk a little and you will be able to see how it's actually uh saved into mango db so because this image is pretty low resolution the image that chunks is gonna be just a one document thing so the collection size is one two two kilobytes which is not a huge it's because the image is not like a crazy high uh hd 2080p something but if i were to upload a 4k file it would accept it but it would like divide like crazy amount of little chunks and this is the images dot files and this is where all the details for the file is gonna be saved with that said okay this was the um this was the part when you didn't have to uh code anything let's go back to the code let's get ready to retrieve this image so that we will actually be able to see what we just did okay so let's stretch a little because that's important and if you guys have some water have some water get your coffee ready get your water ready because we are gonna get into the juicy part real soon okay yeah uh let's go ahead and retrieve this exact file that we just uh saved in there so what we will do is say app oops app.gap yeah and we will just say um the endpoint is gonna be uh retrieve yeah retrieve last time somebody i think it was rukia who uh spotted then i made a typo please check it if it's correct um yep and i will say image and single and what i will be doing is fire off another request response parameter callback function and oops and inside of there we will be starting to look stuff inside of grid fs okay guys who's excited to retrieve that image that we just saved into mongodb let me know guys let's start engaging uh the comments are not popping as they did before um let's actually have a conversation let's let's go let's go guys let's start typing in whatever you're thinking whatever your question is let's drop it in the comments and with that said let's go so what we will be saying here is grid fs dot uh file oops files fire laser no nice and find one and inside of there we will be adding the file name and this is pretty much like filtering whatever we have now uh we're gonna be passing in something a query on top of the uh link i'll show you i'll show every i'll show you guys everything so request.query the name so we will be passing in with every single request a name and and that's going to be the file name that we want to retrieve okay and once that's done let's actually uh do the error handling um we are taking it in cause this is the juicy stuff that is correct calvin that's right my man okay yeah uh so let's do a little bit of error handling this is where the error or the data goes it's actually going to be the file and this is where we will be starting to use the grid fs stream okay so inside of there uh it's going to be almost the usual thing but we are gonna so if there is an error we will of course set the response status to 500 and send the error back so we can go ahead and debug it the other thing we will be doing so if if it's successful nice uh but we need to make sure that if it's either a file first or if the length of the file is not zero so if that that's the case then we're just gonna say file not found and send it back as an error message uh but if if that's okay uh it's actually nested if gate uh so if that's okay we will be creating a read stream which will um which is like a grid fest great read stream and that's uh this is where we pass in which file do we want to find uh shuri says very valuable live thank you so much bro bro i really appreciate you and i'm seeing you you are actually one of the actives massive thank you bro and let's go let's go guys and smash the thumbs up if you guys like this build okay so um and the other thing uh the next row is pretty much just gonna set up a pipe and that's where we will be uh so that's where we wanna uh pass in the file that we just created right does it make sense guys let me know in the comment section down below if it makes sense and whoa we are at 290 likes guys hit the uh smash the like button if you like this and let's get this video up to 300 likes let's give it a go let's actually do it we are at 291 i'm not gonna go any further and i'm not gonna show you if this is working until we reach 300 likes let's go let's smash it let's actually go ahead and hit that button we are 295 let's go guys i'm waiting here i'm gonna wait until we go up to 300 let's go 298 two more two more let's go okay 303 nice thank you so much guys thank you so much really appreciate it okay let's uh on that let's actually go ahead and retrieve the image so uh notice that this is the image we want to go ahead and retrieve and i'm gonna go ahead and oh okay yeah rim retrieve image i think this is how i yeah retrieve image single okay nice uh and the name what i will be passing in is actually called a param that's what you want to do and this is where you want to go ahead and add the name and the file name is going to go over here um yeah rookie ask fi file length zero file shouldn't be empty right exactly that's what's happening exactly and this is where um i'll pass in the image name and notice that this uh actually the parameter is gonna go up here up top which is gonna be useful in a bit okay let's hit it and let's see if it is working hey there we go nice okay we just retrieved qazi okay and actually what i want to do is copy this whole link and paste it to my browser hey that's so it saw a couple of people asking where cause is on my screen bro that's literally cozy okay um we will be using this in just a bit on the front end and we are at one hour and third almost 30 minutes so we gotta speed up a bit okay i'm kidding um okay now what we want to do cause a retrieve to life finally that's right okay so what we want to do i am it's going to be a bit uh hard to understand so i'm going to go ahead and type it out or like show you guys so what we will be doing is first uh so fur whoops so first uh let's make that bigger actually uh yeah that's the way yeah okay so first damn we will save the image okay we will save the image then from the response that's where we will know the file name right because that's how we retrieve this image so we will grab that file name and then save it with the post right so that we know which image goes to which post right and then when we retrieve it first we retrieve the post first post and then we're gonna second we're gonna retrieve the image okay this is gonna be the process so first we save the image then get the file name that we just created save it with the post then when we are actually rendering it out we're gonna render out the post first and then at the same exact moment we're gonna go ahead and make the uh request to the image as well hope you guys it actually made sense let me know in the comment section down below if it did make sense and let's remove the gray board um so guys if it made sense let me know in the comment section so i know if i'm explaining uh in a way that you guys understand it so with that we're gonna definitely need two more endpoints one of them is going to be saving the image or the whole post sorry and the other one is gonna be for retrieving okay now um what i will be doing is create a post model as we usually do it's going to be just a structure for this um for the database how we will be saving the whole post okay muhammad says yes great work thank you so much bro really appreciate it and let's go and type in here so the file name i'm gonna i'm gonna just gonna name it uh posts so that we know it's gonna be a mongodb uh schema yep and inside of here uh let's import mangoes from uh oops mongoose and let's create a post model oops post actually post model yup that's it and it's going to be mongoose the schema nice and i always make this mistake i always import it accidentally so and inside of there i'm just gonna pass in all the stuff that we wanna uh save so we definitely wanna save the user the image name which i was just talking about the text which the user uh just type in here but the file is uh it tells me file not found oh the file is not saved um drop me a message and we can debug it we definitely want to save the avatar uh which is gonna be which we will get with the uh login and we wanna save a timestamp so that we will be able to order it in the nice uh in the nice way so the newest is going to be up top and what we want to do is export default the mongoose model that we just created and this is where you guys are gonna be uh give a name for the uh for the um what you call it the collection where you will be uh saving your posts right now notice that it is in a plural you need to make sure that it's gonna be plural plural otherwise um mongoose is going to be renaming it anyways so don't worry about it it's going to do its job but when we are setting up uh pusher and realtime stuff you will be like why is it not working and that's probably because like most of the times uh it's because we didn't um you didn't add the plural version in here and you're trying to subscribe to the singular version so if you want to see that that thing happening i recommend going ahead and watching the mern whatsapp build as well because that's where i i made that mistake and that's how i learned it okay let's go back and oh and of course we are passing in the uh post model okay with that said let's save this file and close it because we're not going to be doing it we're not going to be needing it anymore but what we definitely need to do is import that and for that we gonna be go up here what is this um and this is where we will be importing it so we will be importing it as posts so that we know what is going on in here and i have it with the wrong name so i will be name yeah mango post js nice great work guys says uh yazid thank you so much um collection of the data we are passing post that is correct rukia that's right okay um yeah with that said let's actually create the two more endpoints that we will be uh working with today one of them is gonna be uh i'll so i i like to group these uh requests and uh and uh the image upload so all the uploads should be like in one place and all the retrievers gonna be you know in another place uh we need type as date um you can do it that way but i'm not gonna do it so i will be passing in a string instead of a date you can you can definitely do that like literally do that um yeah psycho coder okay um yeah let's see if there is like a good question so guys if you are uh asking like real awesome questions i'm gonna be popping it out on the screen okay with that said let's go ahead and upload the post so what we will be doing is essentially uh receiving a request on the upload slash post right uh so that that is upload as well and that is uploaded as well but it's image and that's post it's just kind of like a naming convention thing because i i want you guys to have a project under your buckle which um no under your butt sorry uh under no i actually buckle me makes sense as well so um on your github that is actually like a nice nice way nice to look at your code uh project so what you want to do is definitely make other developers who you're working with you you want to make their jobs as easy as possible in the meantime i'm going to while you are copying it i'm going to like add a nice little frame so you know what to um what to copy i'm gonna explain it a little uh in just a bit but i wanna do uh i wanna help you guys in the naming convention stuff so that it's going to be super easy to read and understand your code because code is for human instead of machine so it will be translated into a machine language all right now what we will be doing is so inside of here we will create a db post um const a variable and this is where we will save the request body right and we want to go ahead and in the mango pose that we just created right uh we want to use that schema to create a new post inside of our database using the db post so essentially the request body and we just want to go ahead and save it and this is where the error handling is going to happen so the usual if there is an error send back 500 send back the error and if there if everything is working perfectly let's go ahead and set the response status to 201 and send the data back that we just saved nice that's gonna be uploading the post and we will need to make sure on the frontend side that we are actually passing in the image name because otherwise this whole thing is going to blow up and not going to work so down here we are going to be retrieving um the posts so what we want to do is go with the user naming convention so what we want to do is uh whenever we receive a get request on the retrieve posts fire of this function then posts this thing yeah mango posts find and you could literally go ahead and like filter out some stuff and and just pass it with pass back that but we're not gonna do that we are gonna omit the whole thing and then we will move forward with the error handling so if there is an error 500 and if there is not this is where the sorting thing will go so this is why i'm using the timestamp uh data model that or the data type that i'm actually using i'm going to be passing in high big only by the way i'm going to be passing in strings which are going to be like numbers which are going to be exactly like this is the um date time oh wrong wrong annotation so this is gonna be the date uh datetime format that i'm gonna be passing in and i'm gonna be saving it as a string because that's literally the easiest way to work with data okay and based on how so data sort b and a and based on what is the timestamp i'm gonna be sorting the whole thing it's literally a snippet of code that i found on the internet um and this is how i'm sorting everything um from uh inside of the database and once that's done let's go ahead and set the response status to 200 and send that data back nice i think with that said this should be good now uh to test it out we we are not gonna be worried uh we're not gonna be testing it out for now uh because we are actually gonna be hooking it up on our front end which for those of you who joined late uh you might be wondering why do i have the front and inside of a backhand folder i made a mistake that was literally it okay um so that's essentially our back end now let's go ahead and oops there's this fireball okay let's go ahead and i think i'm gonna be removing all these firebase stuff because uh this might be some old stuff guys literally uh if you guys have this firebase going on uh i highly recommend doing the same thing okay uh yeah so inside of source i have the components right around here and i have the app.js i'm just gonna go ahead and shut down the server.js file for now and what we will fir what we first need to do yeah we have the node modules so that's done and let's actually take a look at how this application is actually built up so on the header we are importing lots of a bunch of stuff so this is the exact same that sonic built with the react context api everything is working and functioning so we are just passing in uh the facebook logo this is search icon uh search the input field for searching uh all the icons that are going on and the other set of icons on the right hand side and this is where the uh user name and the photo url uh are happening that part yeah that's the middle part and yep so let's literally uh the part we are uh looking at so the part we are looking at on in vs code is essentially this part nothing uh super uh fancy going on in here okay now let's close the header we're not gonna be worrying about that sidebar uh hmm why do i have this comment here okay so we are literally like passing in the sidebar row which is uh which is made up of a of an avatar and an icon yep so this so this is the avatar this is what happens when when when we pass in the avatar and this is what happens when we pass in the icon so we are literally like oops passing in everything well that's actually a nice way to show it so guys i hope you guys can uh see it in a good yeah okay so that we are literally just passing in some stuff and we are reusing the exact same component because why would we want to go ahead and build it again doesn't make sense okay let's close it again uh and widgets um this is literally just a facebook embed nothing super crazy going on in here and the login this is where we set the um set everything up inside of the react context api um yeah that's pretty much login page nothing super hard going on i'm not gonna go deep i'm not gonna dive deep into react context api um it's working okay so one thing feed that's uh hola que talestan mr jose that was pretty much all my spanish knowledge by the way yeah okay i already imported in axios and the other so from the instance that i've already created i've installed pusher um so what we definitely want to go ahead and do is check out the uh axios so in here we have the localhost 9000 set up already um yeah superhero hahaha uh mangustan lost videos mainspring um i really appreciate you bro i cannot respond to that in spanish i'm sorry uh yep so buena espanol oh my god swedish clicks swedish clicks in faster okay so in axios we have the instance ready nice so what we are doing inside of here is essentially uh checking in the um firebase database that sunny um can you answer at instagram after of course um so inside of the collection posts on snapshot this is more like so yeah uh we're creating a snapshot and we are sending the post data to that thing now this is the part where things are gonna get a bit different so this is what we're gonna be deleting and then create our stuff sorry guys i need to drink a bit yeah yeah um but i love swedish okay um yeah so uh this is the firebase stuff don't worry about it for now uh we're gonna be deleting that let's see what's inside of story real it's pretty much just creating the stories like passing in all these uh stuff don't worry about that avatar that's all good psycho coder if you don't know much about react check out one of sony's videos on that super informative and super super awesome and it's very very on demand okay let's go to message center this is the other file that we will need to worry about because inside of here yeah i already had the axios and the form data uh good morning from australia yo what's up australia in a house that deserves an air horn okay and we still have 144 people live guys stick with me this is gonna be like very soon uh we're gonna be finishing uh we got like 15 to 20 minutes back to the end make it uh till the end with me guys so yeah uh let's carry on so inside of here we are pretty much uh like this is the uh save subma handle mid stuff uh this is the firebase thing that we will be replacing with our uh content multilingual have been built of course why not okay uh yep message sender and let's check out the post what's going on in here and it's basically just accepting uh all these props that we are passing on and then based on that we are um we are we are just rendering out everything one thing though that we need to worry about is this part this is a bit of a different way of going about how sony built it because this is where the link will go um hold on a moment uh this is where this link will go right these kind of links so this is how we will be rendering oops rendering out all these images hey quasi okay um let's actually start with the feed so what we will be doing inside of here is uh we will literally like create a new uh function that is gonna okay let's get rid of this use effect for now uh we're not gonna be using that sorry sonny um so sync feed is gonna be the function that we will be firing off to sing the whole uh feed and to grab all the um posts that we had uh naming convention hello so retrieve posts and then we will yeah you can go ahead and console.log it and then what we want to do is set the post data to response.data okay now uh what then what we want to do is whenever this application when whenever the application loads uh we want to have a use effect to sync the whole thing and then essentially everything is gonna be the exact same we're gonna be returning here it's not done just yet now another thing we will be doing is going into message sender and this is going to be a juicy part because first we have to decide whether this uh post has an image attached or not and because if we are trying to save like you can literally post uh without or with an image on facebook of course and we are building the clone so we need to handle that situation so whenever um there is an image we want to go about it in a different way and when there is no image we just want to save the post and that's it so inside of handle submit uh let's so you need to have this row ah that row stays there and these stuff stay here i pretty much made it separate so that you can go ahead and just delete the lines that you need to delete now uh what we what we will be doing is let's actually create an if gate boom so if there is an image um and how do we know if there is an image okay that's a good question i forgot okay yeah how do we know if there is an image this is how we will know if there is an image so if we actually go ahead and click that upload image button and then select an image that's going to be stored inside of this uh u state or of this state and then if it is happening then we will be uh creating an image form or um yeah creating an image form which is pretty much uh form data it's just animate image form and then we will open that file that image and this was so okay so how does this whole thing work so we are appending something to the uh image form form data now the field name where we want to append it is going to be the file the data that we actually so the thing that we actually want to be i want to like put in there is going to be the image and then how uh and then we want to refer it to as then as the name of that image guys let me know in the comments because the comments are stopped again let me know guys if you're enjoying this if you're finding this valuable and you always know that you can smash that like button and show me that you literally like this video okay let me know guys if if it's clear if we can move on and we can go ahead and save everything inside of our mongodb database i really want to know and i really want to see it coming inside of the comments so let me know guys um yeah so actually let's go ahead and save the image so naming convention so we're going to be uploading the image and oops it's freaking out because i haven't closed everything so what we will be doing is uh making a post request guys that don't like don't don't see if you if you guys are understanding it uh let me know in the comments so we will be making a post request to the upload image um upload image endpoint and we will be passing in the image form and then we are adding a couple of headers which we definitely which we need to work with now uh accept is going to be application json because we are gonna we want to save it as a json and accept language i'm i'm using english so yeah there we go uh and then we want to add the content type which is going to be a multipart form data and we want to pass in the boundary of that form data just like that all right with that said one more thing we need to do because we then remember guys we then want to go ahead and save the post with the data retrieved from this request okay so what we want to be doing is uh then create a post data it's just going to be a post data for now uh we're going to be console logging it it's actually not necessary but it's nice to see how everything goes so let's create a post data thing and let's add the text that the person the user typed inside of the text form or or the input field then add the image name which we will be retrieving from the response data as the file name and then add the user's display name and then as an avatar add the user photo url and also the timestamp which will be a date dot now let's console log it to see how it actually looks like and then use and then call this function which we haven't created just yet um but before we do that uh we need to have an else uh thing going on right yeah there we go so if there is no image like remember uh this only happens if we got an image so if there is no image we just want to create we we're going to create the exact same form data without the image name right you see that there is no image name text image name user and then text and user okay that's pretty much what happens here and then we want to go ahead and create a new uh function outside of this whole thing and that's essentially gonna uh like upload the whole uh post there we go so with that said we pretty much should be able to upload stuff to our mongodb using our front end now what we definitely want to go ahead and do is inside of here let's remove this s because i didn't do it that way so we are now able to save stuff to our mongodb database and we are able to retrieve those and now i'm just going to add in http local host 9000 so that the image source is going to be set to this um this uh url okay um why is mark okay now we literally should be able to have a working application with us guys let me know in the uh chat section if you guys are with me if you guys are following me and if you are in here with me oh okay so just the comments are not coming through i actually see uh see them coming in okay okay yeah yeah perfect okay um i think i'm gonna stay here then and i don't know why the comments are not coming through don't worry okay now um let's actually test this app out let's uh reload it a couple of times but let me know guys if you are with me uh except language in spanish too yeah that's right um yeah following nice okay uh stuck retrieving the image uh retrieving the image is just gonna be a link which we which you will be building up okay present dr mern yes let's go okay i'm not gonna be able to highlight any more images because for some reason the streaming app is not working as it should okay let's go back to the presentation and let's actually go ahead and sign in let's use this account awesome and now what i will be doing is say hey guys and the fire emoji and i'm going to choose a new choose a file and let's actually i will be covering this for a little bit yes i'm stuck okay so inside of here i'm just gonna put a couple of html css on javascript logos so that we know what this um whole thing is about boom let's save it and right now we're not seeing anything because this is not real time but let's actually check our mongodb how things are going on uh in here so in files we see a second one and it says it's the gmt time is 12 uh yeah not 12 20 58 which actually matches um yeah so it's 2 p.m pacific so yeah it's actually pretty good now let's actually refresh the whole thing let's sign in again and let's see if it is working okay now there we go that's it guys literally we have a fully functional um facebook clone and let's actually test out if it works without that uh ima um without an image yep that's it like say yo who's pumped and let's add a rocket emoji boom and let's sign in again and refresh because it's still not real time and here we go everything is working the order is correct uh we see this timestamp going on so guys let me know in the chat who is pumped and who has this project at this state where it's fully functioning we just need to make it real time uh teddy asks can i be your friend of course bro text me on instagram it's actually um you can see it right here yeah text me over here okay there we go so how you make this work real time that's what we will be doing back down nice question thank you uh okay and yeah so now i'm introducing pusher that's how we will make this whole thing real time we will need a little bit of modification on the front end and the back end as well but this is gonna be working perfectly so let's go ahead and go to pusher.com and what we will be doing is oops not not printing the uh page definitely um so what we will be doing is if you guys haven't used for sure this is essentially a service that we will be using to watch our mongodb and do and whenever something happens which is going to fire off a function that's going to refresh the whole page and there we go so if you haven't used it you can go ahead and sign up this is completely free for the use what we will be doing and i'm just going to go ahead and sign in with my github because that's just one click and here we go so all the way here uh let's just go to manage yeah just like that and if it's the first time you're using it you're gonna see it get started uh over here on channels and make sure to use channels okay let's go to manage let's go to create app oops uh let's see what's up yep okay so create and i'm gonna say facebook learn live because we are live okay eu i'm gonna set it to us west okay for the front end i'm using react and for the backend i'm using node.js let's create the app and they are super nice because they are kind of like give you a bunch of code that you can start working with reaction auto update because state has changed um the state is that doesn't change so the thing that is happening okay so let me let me put myself up so what is happening uh with react and firebase so react would change automatically whenever the state is changed but you need to stay change the state first and that's why you are using this on snapshot thing so whenever something is happening that snapshot is going to be fired off because firebase has a realtime database but because mongodb by default is not uh realtime the on snapshot is not getting fired that means the state it doesn't change and then react doesn't refresh okay so it's not there is no problem with react uh react is working just fine um it's the matter of the database okay i just wanted to clear that out i saw that uh awesome comment by psycho coder okay so does pusher have rate limit of course it does it's actually pretty low but it's gonna be just enough for us today um okay and yeah we okay let's go back here nice so we have all these code with us let's go actually and set up our back end so we will need these two stuff but let's actually grab this one first and i'm just gonna open up my uh server.js file which is essentially in the backend and what i will be doing so or okay oh my god okay resolve let's remove this because we don't need that path okay so uh pusher is already imported nice and and what we will be doing is going to app config and just paste it here now there's two little modification that we will need to make in here one of them is getting rid of var because that's just a no go whenever you're uh developing in javascript you don't want wanna um you don't wanna don't ever want to use voir you're literally gonna be kicked out of an interview just for that and the other thing you wanna change is encrypted and because it's for some reason it's uh duplicating and you want to go ahead and use tls instead of encrypted and it's not going to be uh messing around yeah okay um okay yep that's uh mongoose stuff and they be connected perfect so next thing we want to go ahead and do is going into the first mongos connection once open so the other one is just for grid fs and saving file don't worry about that don't don't change anything on that what you do what you need to do inside of here is create a new change stream and then if you guys don't know what that is that's basically just watching your database and whenever something happens it fires off simple so you want to create a change stream um it's actually it's a nice thing by uh mongodb i'm just gonna paste it in here uh so you want to create a chain stream which is a which is literally just a mongoose connection collection watching thing so the manga's connection the collection the post collection of the mongoose collection you want to watch that so you want to watch the mongoose connection post collection i hope it's actually clear what i'm trying to say drop it in the comments if you know how to say it correctly and what you want to do is when the change stream is fired off so on change right you're going to fire off a callback function which will have a parameter the change which actually happens on the back end which is the actual change right so it's it could be a inserted data it could be a deleted data it could be a change data something you're just gonna just want to have it inside of a variable uh you can go ahead and console.log it and then what you definitely need to do is if the uh change changes operation type right there's gonna be a bunch of parameters inside of there one of them is going to be operation type and if it is insert then what you want to do is uh first like you can go ahead and console like so that you can like debug it and you can go ahead and say uh triggering pusher that's that's nice and then uh what you want to do is literally just say pusher dot trigger and then uh you want to create a channel inside of pusher which the best way to go about it is uh say the um say the collection's name okay so posts and you want to go ahead and create an event which will be inserted in this case and then and that's pretty much it i mean we can definitely pass in whatever changed okay so change equals change and you just pass it on you will be able to watch it on the pushers server that's pretty much it okay now uh what happens if if it's not insert well um then else you're gonna go ahead and console.log uh error triggering pusher that's that's pretty straightforward handling the error and yep that's pretty much it that was the backend side now the backend is going to be realtime nice now what we need to do uh at this moment is going to feed.js because that's where we will oops that's where we will be uh sorry feed.js yep this is where we will be literally like subscribing to the pusher thing so let's go back here and let's see what we will be doing so of course we create an instance oops yeah that's the instance that we will create and if i have a fancy point then why am i not using it so this is creating an a pusher instance on the front end and then we will be subscribing to it uh to the channel that we created and we will be calling like what we called posts and then on the even that inside it that we will be adding inside of there we will be going ahead and fire up the sync data okay so let's create this thing and let's go up here and let's actually create the instance up here get rid of the war immediately and let's go with the const and guys if uh i saw a couple of comments uh asking whether you should be using war const or lat um my advice don't ever use war you there is no situation you want to use var um and for constant lab use always const until you need to use lat so it's like declare everything with cons and whenever something is breaking and react will actually show you uh and javascript is actually going to be showing you why it's not working um then you can change it to lat if it's the problem okay um yeah i'm learning this at 2 a.m okay i said i can't um hold on i would i want to highlight that okay boom okay so alex limpy uh says i'm listening this at 2am nice job bro massive appreciation for you and you got an air horn thank you so much for being here and and being with us uh this early in the morning and let me just run through quickly the comment section and guys stick with me we are very close to the end okay okay uh yeah so the other thing we would need to do is copy this part of the code and let's go back and create a new use effect up here uh is a that's the thing that i want to have yeah nice and remove this because otherwise it's going to be refreshing all the time and it's gonna like burst out your um limits and pusher and then let's pass it in here let's change it to const because that's just because we're not using war and let's so this essentially creates a channel that subscribes to not my channel instead we are going to be passing in posts yeah and the event is going to be inserted and then there is a function okay we'll get we're getting rid of the alert thing and we're just going to go ahead and say sync feed and guys that should be pretty much it so let's actually sign in oh no i actually refreshed it a couple of times so everything is working perfectly uh yeah let's sign in here okay ah everything is loading yo real time test let's add another image another quasi image that's actually a good idea and let's hit return and let's wait until it okay okay here we go and there we go guys we literally made the whole thing real time so real time and some fire and then a rocket boom without an image it works again now this is a little bit of bug it's actually not a bug it's just how it works so whenever you're resyncing the feed the images are gonna load again but uh we could make it like super optimal but that's gonna take a lot of time and we are already uh more than two hours into this stream so with that said we are guys we are finished we literally have finished the full build um yeah so that's pretty much it now one more thing to do before we go home and before uh we go ahead and do whatever we want to um let's actually deploy the whole thing who is pumped and who's ready to deploy the application up to the cloud so that we will so that everybody is going to be able to uh check it out let me know in the comments drop some fire drop some fire if you know what's gonna happen and yep let's let's do it okay can you add this in repo yeah um definitely message me afterwards um my my my instagram should be here yeah this is it okay so guys let me know if you are ready to deploy this app austin says let's go uh carry i mean uh carrie minati says i use mongodb compass that's a great tool to use so guys literally mongodb compass is nothing super fancy it's uh it's it's literally a desktop app of mango db firebase deploy exactly alexandros uh okay um so kevin asked what asks what are the advantages of using mongodb instead of firebase there's not a lot i mean so whenever you're trying to um build a project we always say that go with firebase okay and then why are we teaching this that would that probably is your next question well um this is what is in demand uh on the job market and this is actually a better way to store data than in a sql database because that's just like a pain in the butt and uh with with working with a nosql database it's like super easy to map through everything and then render out and then just work with that because it's essentially it's more like a json file now um that's part that's part of the other reason why we're teaching it and because mern stack is like a it's like 10x as popular and like 100x more in demand than firebase because it's kind of like unknown for now um but yeah i hope this answered your question um yeah hassan says let's deploy yes let's go and okay now uh let's actually go back to the view where you can see my screen nice perfect and what we will be doing is essentially going to uh the front end and then opening up a terminal oh and yeah this is the change that happens so on the back end side what we want to do is first um okay let's actually create a new terminal let's do an alas let's go in here and what you want to go ahead and do is go to heroku.com because we will be using roku to host this uh application back end online one two three four okay new create new app and we will be creating a facebook mirn oops facebook mern uh live yep there we go and what we will be doing is essentially uh so guys if you don't have heroku cli go ahead and install it using that tutorial up top then what you will need to do is login to the cli um yeah and yeah afterwards you can like resume this video and then go ahead so we just see it into the project we have the get version control done what we want to do is set the uh remote repo to your heroku repo okay wrong wrong direction just paste it inside of there it's gonna do its thing super fast then you wanna literally create add the comment and then push it to herakum master okay uh let's see what's going on in the chat because i for some reason i can't see it just when i go there okay um let's go ahead and say git add dot then kit commit dash am and app done don't do these kind of commits always commit every single thing that you do because then you can go ahead and roll back okay there we go uh because we added a nice little um git ignore we just have the necessary stuff and what we will be typing in here is essentially get push heroku master poof there we go um and what i like to do is add a new terminal and say heroku logs dash dash tail and then i will see the heroku logs going on all the way so that i will know what is happening inside of here okay uh so yeah it's launching release version three i don't even know why it's version three but don't matter uh so on the right hand side it's starting everything is working and it says stage stay uh state changed from starting to up that means we probably have a working backend guys deployed let's test it out if it says hello world hey there we go huge air horn guys we have it working nice okay and get exactly yeah uh uh sunny is using mango for ticktock and since then sunny hadn't been using fireworks but you use mongodb uh sunny was always using firebase we just had a we just had two or three four or five couple of builds together and um whenever i'm on uh whenever i'm going live with him we are making a burn full stack build from bottom to the top um yeah because he's just so much faster in teaching react but yeah okay um yeah so we have a working backhand now what you want to go ahead and do is like copy this co this link and then go back to axios.js right and then you just want to go ahead and actually you can go and comment this line out and add a base url and that will be this code now uh make sure that you don't have the slash and the end because it's gonna like blow up the whole thing and yep there we go okay now uh what with that said it's pretty much set up to the uh working um backend thing and i'm just gonna need to find okay here we go now uh let's sign in it's still the local uh frontend but they deploy the back end and let's see if it is working yes there we go everything should be working we're king boom there we go king we can say we're king very funny uh now what we need to do is go ahead and deploy the front end and that's pretty much today's build guys so um let's actually go here create a new tab and what we will be doing is we need to initialize firebase right so let's go ahead and type in firebase init boom there we go what you want to do is hosting then use an existing project then what you need to do is i think this is the project oh no uh it's fb mirn okay i need to check it real quick yeah it is fb mir9ac 4d yeah that's the project okay so you want to make sure that you're selecting the correct project here otherwise it's going to blow up uh so yeah facebook mirror there we go uh and this is an other part you need to take uh make sure you're doing it right and for some reason the streaming is cutting off the bottom of my screen so you need to type in here uh build instead of public oh my god and then now i'm blocking the screen okay i move myself here okay so you need to type in here build whenever it's asking for the public directory you want to go ahead and say build okay and what you need to do is like type in a why because you want this to be a single page app now this is some cli trick that didn't work out as planned oh yeah because i'm using a different resolution don't matter okay and now what you want to do is npm run build down here and that will actually create the build folder and create the whole production ready uh project so it's going to strip out a lot of stuff like hot reloading and all those kind of stuff that you need while you're working in the development environment but then you will not need it anymore so npm rom build there we go it's working nicely and it's gonna do and create an optimized production build um so yeah that's uh that's pretty much what is happening over here so let's wait until it finishes it's going to do its thing it's going to take a little bit of while in the meantime let me check wow this is amazing calvin says thank you um okay what is your i'm going to be instead of firebase um yeah and now we are guys we are ready to deploy guys i see there is still uh 94 people on the youtube if you haven't smashed that like button now is the time to do it hit that like button get that number up to 400 i think we can do it let's everybody go ahead and hit that like button we are at 378. let's go let's hit that okay we are at 381 nice 382 let's go let's go everybody let's smash that like button like literally go ahead and destroy that okay 386. nice okay we are just 14 away from 400 guys let's go and let's reach that number okay if you guys found this video valuable drop a comment let me know uh what you liked and in the meantime hit the like button so that we can get this video out to as many people out there as possible and that is all we ask for okay we are sitting at uh 389 okay let's go ahead and deploy the app and let's see how we did let's go ahead and say firebase deploy and wait for the magic okay we're deploying we're deploying and we should be good to go now follow the link command click open and of course it opened in the wrong screen and let's see what we built oh my god my mac is bugging out nice sign in let's see how we did and here we go and there we go it is working let's try this out okay with an image and guys you can literally go ahead and copy that link and just come in here have some fun but guys make it make sure that you uh you guys are keeping it clean because otherwise i will need to um delete this and put it down so i'm gonna go ahead and drop it in the comment section or or in the chat let's come in here and let's actually everybody uh drop some positive vibes inside of here let's have some fun before we uh shut this stream down um so yeah i want to see everybody coming in here dropping some positive vibes let's go uh a friend says gracias amigo david amazing lives muchas gracias miamigo thank you for sticking here and being here with me okay we just got our first person inside of here okay nice there we go okay awesome so can we get the final code virus if you're a virus nope uh yeah they will give a massive way thank you so much bro that's why we are here awesome stuff so uh yeah the image is working hey hello what's up alexandros okay so guys if you guys like this build um make sure to hit this smash the like button hit the subscribe so that and click the bell so that you will not uh miss any of these videos and if you found this valuable make sure to share it with your friends and everybody out there and guys thank you so much for staying here with me uh i appreciate you a lot uh thank you so much for uh being here dropping the positive vibes and staying here uh and if you guys are interested down in the uh down below in the um description there is a webinar uh which is uh teaching you step by step how to build a netflix clone so if you guys want to go ahead and dive into this deeper i highly recommend going ahead and testing and then just uh attending to that webinar um because it's just um crazy amount of value and it's gonna take you and it's gonna 10x all your skills with that said thank you so much for being here with me this is david from coverprogrammer.com and i'll see you in the next video peace guys