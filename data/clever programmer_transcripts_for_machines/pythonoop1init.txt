hey guys what's up this is ky from clever program.com and um we just kind of got a new setup so I wanted to just point that out so we can get started and move past it because we want to get to the cool stuff so now today I want to give you guys your first lecture on objectoriented programming so if you guys are taking this course I suggest I highly suggest you guys take on my website clever program.com because you guys will have a full learning management system there which means that it will tell you what percent of your course is complete and where you left off the last time so if you forget and you're picking it back up it'll start you from right there think of it like Netflix but for your career so binge friendly and no regrets that's the perspective I want you to take on it all right so here we will also have a lot of exercises perhaps some extra notes and a wonderful community so take advantage of that and if you're taking it on my YouTube channel that's great but here it actually might be greater okay that is one of the most famous and amazing ways to program and it's different than functional programming which is kind of what you guys have been doing you know you make a function that does something and that works that's great but I want to also show you objectoriented programming and that how maybe that can be useful for you okay it takes a little bit to wrap your mind around it but I'm going to give you guys a little sneak peek at it a little example and um then what I'm going to do is show you guys where you guys can start accessing this code from here on out okay I'm going to make you guys some adults and I want to show you the real place to access this code from so up until now I've been giving you a link like.it which is reel.it or perhaps some other form of Link but now I'm going to show you guys GitHub I'm going to introduce you to your new and most powerful uh technology and I'm going to show you how you can go and just take a look at this code and it'll start all being in one place okay it's going to be like one home for all the code so let's take one thing at a time and just start off with objectoriented programming so how does it work well a quick example I can give you is in Python you need to create something called a class okay so we are going to create a class and that class could be called student okay now let's come down and the first thing whenever you make that class is you need to Define your initialization method so how do we do that it's a little finicky if this your first time seeing it but don't worry about it now give me something right like what does a student um start with so like let's say that all the students in the world no matter what course they're taking no matter what class they're in what are some things that are common among students you can't say they're all taking a computer science course that wouldn't make sense because somebody might be taking a biology course or whatnot but there are a few things all students have in common H maybe they have a name right so if they have a name we're going to put that in our initialization or init method um in in classes in object oriented programming what looks like functions are really methods okay so this method called init will have something called some a name okay this self part here that's we just put that always uh don't worry about kind of how it works it'll be very clear to you in the future okay but for now just remember when you open up that method write self so all students have a name right um what is something else that all students might have in like let's say a college class or a university class perhaps they have a grade right so let's put grade here and for that let's just leave it at that keep it real simple now what we can do is we're going to say self. name is equal to name and S.G grade is equal to grade these things are going to be really funny looking right now because it's all new but I promise it'll start making sense okay so how do we deal with this data now I'm going to create a new student okay we we can call the student Kitty um and I will say that um this student uh it's going to be from a student class okay and for the self part we're not going to put anything there all right we are going to put her name because remember this class is takes two methods right student class takes um this uh the initialization method takes two arguments name and grade so we got to give a name and a grade so maybe we can give her the name Kitty and um we can give her the grade uh I I don't know she sounds like a b student no I'm kidding uh we're just going to give her a b crade uh maybe she she could be a really good student uh and now we'll have another student named Daniel and we're going to initialize him using the student class as well and we're going to give him the name Daniel and we're going to give him the grade of I don't know uh 80 okay now we've created these guys but how do we access their data so now you'll see that there's a easy way to access this data where it's all concise and nicely packed and packaged together that's really the point of objectoriented programming so instead of having like a variable like um Kitty and kitty name and kitty grade we have all that information packed inside of kitty and instead of having all separate variables for Daniel we have all that information packed inside of Daniel and let me give you an example so let's say I want to get kitty's name I can just do kitty .name thanks to this self. name part this self part is the kitty part okay uh if I want to get Daniel's name I can do daniel. name and now let me show you what I mean so I'm going to say print I'm going to wrap these in print I'm going to go around here and I'm going to Simply run this and at the bottom hopefully you see Kitty and you see Daniel being printed now what if I wanted to get their grades well I can just do print kitty. grade and hopefully you ested by this point k um daniel. grade okay hopefully that made sense so hopefully you see a little bit of How It's Working and as I add more attributes um I am I can add like self. AG is equal to age and here I can pass that in as a possible parameter age and so what this means is that you have to actually pass an age otherwise um you can actually initialize those um those guys like kitty and Daniel you can't initialize those objects so I that's why it's giving me a little error so I got to pass in an age let's say um some age okay let's say um 30 years old and we can say for Daniel 15 years old and I can even print out their ages the same way kitty. AG print daniel. Ag and and when I run it you can see that uh 85 and 80 which are the grades right and then 30 is the kitty age and then 15 is the Daniel age okay so that is just a little sneak peek of how objectoriented programming works I'll later show you how you can use it to actually do some really powerful stuff like uh you know the turtle module I was showing you earlier we're going to build a guy where we can play around round with the turtle module that we were using earlier okay so I'll show you guys some powerful things but for now I want to show you where you guys can access this code so I'm going to do some magic here and uh this is going to basically put the code for you guys online right from my computer okay so don't worry about this part so much I will have a course where I explain to you guys how you guys can do this too so I'm going to say pushing new contents of course clever programmer students and I'm going to say get push and then I'm going to go on github.com and here's where you guys can actually access this you can go on github.com look for a repository called clever programmer stuff and in there I have put together an objectoriented programming folder which is O and then the lesson one that we were actually working on you can click there and you can actually look at all of that code okay how cool is that so it's going to be now the home of all of our code at clever programmer okay you guys will be able to go and access it from right there I want you to do me a favor once you come up here hit that little nice um star okay because I barely ever get stars on my GitHub rep repositories and by having this I can make people think that I'm a cool programmer okay but in fact I'm I'm just hacking and tricking the system so that's it guys for this first video hope you guys enjoyed it hope you guys are excited for more I love you guys I appreciate you and I cannot wait to see you in the next video