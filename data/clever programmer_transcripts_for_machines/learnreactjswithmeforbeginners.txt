what is up what is up people what is up ladies what is up gentlemen how you doing this is kazzy from cleverprogrammer.com and i'm here with daniel what is up guys i hope you guys are having a wonderful day today and what are we gonna do today quasi guys today we're gonna be doing something fun so i decided daniel and i decided hey let's learn more about react and let's sharpen our react.js skills because we're just inspired by you guys right i mean the react is such an awesome tool that you can have in your tool belt and we want to have that in our own tool belts so what's going to be cool about this is you're going to be watching me learn and daniel learn and you can learn with us okay and uh we are going about learning it in a pretty interesting way so i i i think you might pick up some skills from there too how you can actually pick it up faster i think it's important because you're going to realize we don't know everything right not everyone not anyone knows everything so we have a lot of learning to do i'm from python in django world so i'm good at that but react is new so i want to pick that up you'll see how a developer goes to another language and picks it up and daniel has um mostly background yeah java background and he's worked for a com blue origin and he was working on actually a rocket ship a big rocket ship i did a lot of back and stuff but that's what it was so with that said guys let's just jump into it daniel and i are going to be learning uh with you today so let's go so here's something interesting i did because i want to learn in a component based uh functional componentbased way not classbased components so i just literally googled react functional functional components to do app github i found somebody's uh code so you guys can actually go here as well yo what's up we got 294 people what's up gang yo yo smash that like button smash that break that button yo raj raj hans is going to get a lot of uh a lot of cloud after this what's up let's go raj rajan guys if you want to surprise roger ajron go ahead and smash that star button here roger johns yo what's up from toronto obey says from toronto beautiful oh bangladesh yup this is live all right guys so here we go so basically what i did is i went and checked out what app this guy's built so it went here and it's a todo list app looks pretty good if i type in daniel or i type in youtube a youtube hit add and when i check things off it does what it's supposed to do hey we already got a donation let's go gang [ __ ] come on baby hey hey hey what's up oh what's up dude this is crazy bro thank you guys yeah yeah let's go yo we got 245 people we gotta get we gotta break 300. let's almost at 300 let's go um yo guys welcome welcome oh man lunatic what's up brother nazmul how's it going govind thank you all right so let's go and now what i'm gonna do guys and you can do this with me you can do it with us let's grab the code let's do it you want to drop this link in the chat just in case you care all right here you guys go so you guys can copy this uh thing so i'm gonna copy this all right and then i'll go to my command line over here all right here we go and let's go into my github and i will clone this app react to do functional and i will npm install whatever is in there and then as soon as i'm done installing then what am i gonna do guys we're gonna run it oh [ __ ] let's see what other musics we got hey intense buildup all right here we go all right npm run npm hey we're learning this [ __ ] oh something's happening don't know what don't know all right cool so so far so good you guys have seen this before nothing new here nothing to get excited about nothing to write home about let's open up visual studio code and uh let's pop that bad boy open where is it github wait it's not here hold on why is this github different than this github where is this github ah it's under your user this is so confusing bro oh the build up is intense dude found it let's go perfect timing dude just for the drop i love it i'm just moving it to the other github what's up guys let's keep it rocking 285 people let's break 300 bro let's [ __ ] go who wants to learn react i do just like ripping their shirts off we start signing people's chests yo 10 notation let's go i mean donation thanks for the content cp help me with my react js and state management skills so much let's keep it up yo let's go hey all right so all right guys let's do this bring this down just a little bit so oops i meant to open up react to do app all right let's go to source app.js we're gonna do command j and um let's just do npm start yeah let's do it beautiful yo we just broke 300 viewers guys smash the thank you guys i love you guys so much let's keep it rocking and rolling all right so i like to have my code on the left and my what i'm saying this on the right one hand on the steering wheel all right all right so oops here we go uh i don't need this terminal anymore so i'm just going to quit out of it that's fine refresh okay i don't need this don't need this let's move this here okay there's also some face recognition app that i'm deciding to play with but we'll do that later for now let's just work on this so now i got this app up and running you guys can cop that code and get it up and running just like this still take you two seconds they're asking for the code again hey asking for the code again yo we just got another super chat what's up what's a super chat a donation thank you guys thank you adil for the five dollar donation daniel can finally get a haircut haircut hair cut yeah i've been going down my hair for three years because haircuts are too expensive guys oh man i told him that he got offended all right here we go all right so beautiful thank you so much for that donation appreciate you guys so freaking much we can get another monster now and keep coding all night biggest roi ever let's go so now what we're doing is the way that i want to learn react is i don't want to learn from some boring tutorial or some professor telling me what the [ __ ] is going on right how i want to learn react is i want to just get into the nittygritty the great mate i want to get into it i want to get in the [ __ ] dirt and learn so the way that i want to learn and um daniel and i decided to learn is we just want to get straight into somebody's code and then start breaking it apart and see how it's made so as i'm going through it i'm just going to be asking questions and learning along maybe you'll know the answer so you can drop it in chat daniel and i will just try to break this thing apart and figure it out we know web development other languages and we could probably figure out and react exactly and again this is because you guys inspired us we're like man if we're here teaching react we should also get down and dirty with react so we can learn it just like you guys so you guys are going to get to see us be a bunch of noobs and conquer react that's right we are up to 373 people let's go guys smash that like button so this video can just keep spreading and going out everywhere we're total 445 people welcome welcome thank you so much for jumping on appreciate you guys let's keep rocking and rolling so we are built we're learning to code in react js and i'm learning with you guys so let's keep going all right so what is happening so i'm going to put this on the you know what let's take this um here one thing that god blessed me in is my computer skills so let's go here let's go here and let's take a look all right so so far what makes sense to me daniel is i see this three things here and they map to three things now i'm not a rocket scientist but this adds up i think it adds up i think there's some sort of static list that's being populated before right yep so we got pick up laundry we got die we got this thing and i guess what that also tells us we could look at the objects and what they're mapping out to yeah so we know that each to do is composed of an id it's composed of a text and it's composed of a is complete boolean value ah okay so you're telling me that if i change this to a true this would mark it oh interesting very cool yeah okay so it looks like that is completely just changing the text and the style of it got it okay so that's what that's doing id is not gonna do anything right now i don't know try it out i mean if i change it to four i don't think it's gonna yeah okay so for now it's not gonna do anything but it could be useful at some point yeah like you could order things right right based on id now we got to do's um and this is what is it called in uh react uh it's called uh you know state state variables or whatever okay they're called okay um yeah so basically what's happening here is to do is we can change it on the fly whenever we call set to do's and change it it changes the todo's list on the fly okay right so um so let's get into the functions so what were you talking about so this is the ad to do this is what runs when i hit add and i think by the way kudos to whoever made this code yo we're 416 people jesus christ let's keep going go at 1k people we'll take off our shirts like coding um no we're not gonna do that or maybe we will but kudos to this guy because he's documented so well like right here at to do i don't have to look at the function in that car to guess what it is it's gonna give you another todo list after you press that add button and it probably gets triggered by the add button so this add button is running and then it adds the let's go it's being stored here in the react these are react hooks yes thank you guys so it's being stored in um in todos right and what's this text part so gotcha so what that looks like to me is this is appending to the ear yes so it's passing in a list that has the old to do's and then at the end or is it at the beginning it's appending a new object with the text i think it makes sense that it's at the end oh gotcha with the todo assigned to the the the todo is whatever they write in that's the parameter that's being passed in assigned to the text and that's why when you put let go it brings in that text it creates a new variable it sets the text of that or it creates a new object component whatever we're going to call it and it says that text of whatever you wrote so basically all that's happening is it's adding it in here as the fourth object yep right that's making sense cool all right so let's go and what these hooks allow you to do um what the what this allows you to do is when i add this in it doesn't refresh the page and it adds it in right that's good because refresh sucks right so boom okay figured that part out dude that was a lit song bro we need to yeah i want a sec right i love that one um okay so now we got mark complete and this is if i go to the index i click it it's been marked complete all right so hold on it takes no to do's so i think it just creates the new to do's and it adds the old to do's to it then the next one it's going to update the new to do's it looks like i got a specific index which is what's passed in by the parameter so here it would be like two zero one two yeah or one two three or however they're in i don't know if they're indexing based off zero or based off one it could be zero based or one based yeah but what it's doing is it's setting the is complete to whatever it is of the opposite right got it so whatever was like the opposite of what it currently is for example oh so when i click it it just does the opposite of this exactly oh so it's just using a very simple negation here oh no it's almost like logic i love that okay cool so this is a hack to just turn whatever you have into the opposite and since it's on and off if it's on it'll make it off if it's off it'll make it on exactly when you're coding sometimes you do care what the state is you know if it was pause or on off true false zero one whatever that is but in this case you don't really care you just wanna invert it to whatever that is whenever you mark it as complete so you could turn it on you could turn it off it doesn't matter and i think this is a great way of just doing it with the negation i love that and then set is okay so it just takes these todo's um and it just it replaces the older todo's with these new todo's that's all that's and all the new to do's did was it you reverted or inverted the one you clicked got it so for example say i hit this this would be two right it would take it would go it's one base so it would be three ah one base okay so it'll be three cool so now it will make a replica of this right uh not a deep cop a regular copy right yeah make a copy of this then it would go to the is completed based off the index based off the index yeah based off the index so because of this it'll go here uh make this the opposite of what it is it'll turn true and then once it makes it true it will just take this entire thing turn that right and then uh replace what the existing to do's were right that's making sense to me okay cool does that make sense to you guys hopefully it does hopefully hopefully all right these guys might be way smarter than us brother very possible i mean wait till we get to once we start flying we're gonna start flying yeah we're gonna catch up real quick all right okay cool we should do like a 30 day challenge and see what we can put together in 30 days holy crap let's put together trading but i think we can put together a trading bot do you guys want to see a trading book i think we could put together a trading mod or like a machine learning face detection type of thing would react probably way less than 30 days yeah for sure five to seven days a little hackathon would knock it out momita says yes it made sense it made sense to us too you do two three five says i don't know man sounds like witchcraft oh dude all right so um now so i want to ask you this when i hit to do when i hit add here there's probably some button that's detecting a form completion and then calling the add to do function is that what's happening that sounds about right to me so let's go to to do form okay so first off i guess when you see the when you see the classes again could you pop up the menu real quick and you see app index to do form to do's what are the things that go through your head when you see these different classes when i see these yeah like what do you think to do forms is versus to do's versus i don't know app uh to do's i think is a component i also think to do form as a component as soon as i see anything with capitalization like that i know that in react it's a component gotcha so to do form would be a component that we could use and so is to do's and over here on the ui what components do you think they match up to so to do form i think matches up to this and i think to do's matches up to this that makes sense yeah because forms usually have inputs different types it could be text it could be buttons whatever that is but then you always have like the submit form in that case could be like the out of the to do yeah all right that's making sense to me that's what i think and uh let's go okay so now i want to just see what's happening with this code right here okay so to do form it takes in a add to do prop okay it takes the yeah so this is where i'm putting in the value gotcha cool so we have a handle change so what kind of change is that change in the form input so as i'm typing right on the fly it's doing this so for example when i type in f here now value is actually f like literally it takes the yeah you see what i'm saying so on the fly it's taking the f and calling this thing then that thing sets value to f so if i save e dot target as soon as they say r now fr is value got it okay so it's doing it on the fly without me hitting enter or anything that's the really really cool thing about right hey i get it i'm liking it so that's a really cool thing about react so now okay so handle submit so on submit we prevent default which stops react from refreshing which is really important so you always want to have prevent default and then if the value is not empty or if the if it's empty if it's if it is empty correctly right because if it's empty it can do nothing yeah but then they put the the negation again so to true so then it enters and does nothing right so if it's if it doesn't exist don't do anything um if there is a value yeah then we just add value oh so this add to do is from the app.js and it passes in the specific to do you want to add yes which is that text that's what i was looking for oh okay so this is happening on the form submission that's what i was thinking would happen handle submit because if i set this value to let's say daniel then i believe what would happen is whatever i type in and i hit add it will show daniel after boom holy [ __ ] are we developers or what i think so bro dude it feels good to be a developer you kind of feel like a magician like i feel like we can pick up like golang in one day and make a project that'll be sick easy peasy okay so what is next next is let's look at some of this uh what is that jsx or stuff when you want to do um when you want javascript and html kind of mix up stuff so all this is creating is that form area that you just pointed to right we have the input which is oh text type input so that's the add to do yeah and then you have your primary button input which is the add button right okay gotcha so here we're just creating it and this is what's called a to do form so when you export it and anywhere else you call to do form this pops out right hold on let me read this code a little bit more good okay boom another todo app okay cool that's the title so they're doing something with css here for app title tech center i imagine look it up app titles right there i don't know okay all right so got that on submit call handle submit that's what's calling the function okay got it all right i think i don't know if that's bootstrap or is just regular styling form group okay and put this back on him all right that looks like some regular bootstrap type things like that or i don't know other frameworks or libraries use that yeah it looks like bootstrap yes our first input to text input placeholder add to do the value oh so there's that's where it gets the actual value on change equals handle change handle changes that in this class or is in the app js class handle change yo what's up guys hello hi deepak i love the way you teach us thank you so much brother ibrahim says qazi i'm really really excited about this live but i'm busy for now i'll definitely watch it later awesome bro we'll love to see you back guys please don't spam please don't spam i'd have to put you on time timeout all right put user in timeout oh my god please don't spam guys i'm gonna have to hide hide you or s um yeah perfect awesome okay so i think i got the todo form now it's just to do's so to do this is taking in these props yeah so it looks like we have two different let's or would this be called a component yeah to do's as a component okay so what this looks like is we have eight to do yeah which has those probably those elements we talked about before and then we have to do's which has a specific list or a mapping of yeah to do is a component as well okay just not being exported but yeah there are two components in there so let's talk about the to do first then we'll go to the to do's with an s because that's gonna be probably a little more complicated right okay perfect so looking at this to do we have our divider class name to do the paragraph so this one's interesting right because it's giving it a style to the type paragraph called text decoration so this is where it's doing that like ternary if then condition if it's completed and if it is it'll do that like strikethrough and if it's not it will leave it empty right gotcha yeah so to the style it's assigning a text decoration of either line through or empty depending on whether that to do has been completed or not got it so basically for example if it is completed it simplifies this whole thing to that right yeah i'm saying yeah okay i was like yeah okay yes so if it is completed this is what it looks like and if it's not completed it looks just like empty without the line all right let me put this here let's put this here all right hopefully you guys can see the code better now okay so this is what it simplifies it too right if it is completed when i click it yes all right so let's undo this otherwise it completes auto um it gets simplified to this when it's not completed exactly correct so just a fancy way of writing like a long ifthen condition got it awesome yeah and if you guys have any questions or you're wondering about something definitely drop that in that's related to this and we'll try to address it as we're going through for you guys what's the difference between class name and class name my class please okay that's a great question so um i think what it's doing if i go back to where was it doing but where did they put the the squiggly that he's asking for where did they do that is it into dues or two in the todo form so sometimes when you are um in jsx what i know is if you're writing a javascript uh code you wrap it in squigglies when you're when you're writing like evaluating a javascript expression you write it in squigglies and i think yeah and it kind of like boils it down to like html that's what i think it it's happening oh yeah that definitely makes sense because it's it's kind of like hey this is squigglies and that's i mean the code inside isn't regular html it's yeah javascript or if it is like this let me just try and see what happens let's still work break the code it works break the code so this just gets simplified to the same thing it already is i think you could write this one both ways because this isn't a complicated javascript expression that's a good point so that one i think you'll be fine if you just write regular container to be honest that's just what i think then what would be the purpose of putting the jsx squiggly lines maybe you could like assign the class i feel like for this there's no purpose for this i can see a purpose because um i think like it needs to separate out between the next argument no dude you you can have spaces when it comes to html yeah that's proper html so i think here it doesn't serve anything it's just like putting extra set of parentheses in a mathematical expression that doesn't need it you know it's like if you had five plus four and then you just decided to wrap it in parentheses it wouldn't like change it i think that's what i'm thinking for this if it does like i literally think it won't make no difference like if i change this add a todo and remove this and say add a to do's i think you'll be good yeah it'll be good so yeah uh bro i think the answer to your question is for this it doesn't matter i think you don't need the squiggly yeah you don't need it i think in the more complicated case where to the class name or whatever you need to assign an actual java variable or something right then it might be important but for now you could probably in this case you can take it off because it's regular html as well yeah and if you guys anybody that needs to code access to it here's the github profile you can just use it i just linked it below yo yo aaron aaron nobles bro thank you so much just gave a five dollar donation it says currently working on a project so i can't watch but i'd like to thank you guys for helping me get this far in my coding journey thank you so much aaron really appreciate you thank you guys if you're enjoying this so far smash that like button so let's keep getting this video out to more and more people let's go all right in this video guys we're learning react js with you i'm not a professional react.js developer i have experience with python django a lot of it daniel has a ton of experience with java and doing backend web development with it so we're picking up react along with you guys we're just having fun all right so hopefully you're enjoying it as well and on the journey with us yo i've destroyed the like button come on chew let's go i love this is it my class of strength uh manpreet says there's no need of the squiggly for container as it is not resolving an expression or js code absolutely so i actually agree guys i i think that for all this stuff you shouldn't have it because i think it just makes it more complicated for no particular reason so i honestly would have it like this you know and i think it will be the same thing this is the code we're using so you guys can go ahead and use this we'll try to put it in the description and that's whoa somebody just gave 2 000 of something bitcoin so to this youtube video description below guys i just added this repository so if you guys want you can now click in the description refresh the page and then go open this code up and you guys could use this um this app fa jc might have a good point he says thank you for the donation by the way oh thank you yeah go for it he says it's for consistency purposes i think he's talking about the squigglies on those so i think it's just like you know i think anything where you don't need it like i think it's a little i think simplify it you know it's like that's how i would write python code if you don't need an additional set of parentheses or something yeah uh jose says jose antonio says what do you people think about typescript is it useful typescript is pretty useful it basically lets you like um essentially turns javascript into java you know it's like statically typed does it just make it more general or what yeah it just provides you it's i think it makes you less errorprone and things like that gotcha yeah that's what you have to define your data types in typescript so that's what i didn't like about uh my projects with c plus yeah it was like it's like even it's the next level dude like you have to say oh how many bits is gonna have or she like that you're just like oh my god can't mess up all right so i think i get the so now on the todo so i get the decoration and how that's working and how the p style is is working for when i click here and strike through input type so this is the check box this is a little square they could click on and off so on change anytime i change this it can call a function calls mark complete based on the index cool and the index is being passed through here so i'm curious how's it getting that index when's it getting assigned i just thought about that too right now oh i think i know where go to app.js i saw it oh so there it is it's in the mapping so you see how for that to do it's assigning the the index key equals index index equals index and it's giving it a mark complete function what about the edit text hmm you go to app.js real quick yeah i think there's a function we didn't explore that might be important no edit titles also just so these functions are being passed down the indexes right so how is it picking up this exact so my assumption is it's gonna be from the form when someone creates it they have to add an index right to this new object oh does that make sense yeah just figuring out how is it passing it through you know what i mean like so i click it on change i mean it's this thing that runs right yeah yeah so so the on change does the mark complete the mark complete was the one that would change it to true or false on the remember and it would return the new list of things where or complete yeah this one remember so it would just assign the old one to the new to do's the new to do's that is complete we would invert it for the one that got chosen then we'd set it yeah oh yeah doing tailwind css would be fun too all right so hold on hold on though bro so i click it how's it getting the index so this is what i'm saying i think the index is all right so how is it getting the index i believe is from the to do's js again go back there yeah it's right here right so here's we're saying we have a to do yeah and when we're mapping it out i'm not entirely sure how this mapping function happens but you have it to do and you have an index so i'm assuming it's some sort of incremental thing right so for each to do we're gonna give it an index incrementing yeah and then here it's assigning the index so can we look at that like the to do is on map like google it let's see what this function does um i mean i think it's just looping through and then assigning it right that's what map generally does it allows you to just yeah i mean that goes through like every or yeah don't do todo's map do like uh javascript yeah yeah react perfect so what's it say here maps number number two doubled so i'll give you back an array it seems like and that's that rave to do that we have boom right there so this gives us back an array right to do that map gives us back oh interesting okay so here it assigns a number right it passes in the number as a function and then the function is actually the numbers times two that's what it cares about and that's what it creates the array for right yeah so here passes in a todo and an index and what it's going to do is this function which is it's going to create a to do html tag yeah and it's gonna assign everything it's gonna send it to do it's gonna assign the the key the index the mark complete and the edit title got it so then when i click it kind of so it already knows it has the index and then it just like calls the mark complete function on it and then it does the it does everything that it needs to do at that point yeah so i mean it doesn't do it i just think it sets it up got it like it passes it to this one like all this does is it passes it to this function here ah right right so here it assigns those i know we call them parameters or what were those things the props the props right yeah the signs are props for the todo's so now a todo has the to do itself has the index has the mark complete and has the edit title now here it got it from the mapping so we do the todo's so let's let's back up a little more the todo's receive the todo's array uhhuh if they were marked complete wait do you think this is in the rear that's just one that has to be the whole thing right yeah i think that's that should be all of the todo's right that's why it's todo's like it should be getting this yes yes yes switches all of those yeah like we're yeah where is this being used yeah okay all right that's making sense then so we have yeah the the the to dose component that receives all of its todo's along with those other parameters right we start to create this div for the component which is gonna be called todo list yeah inside of this div we're going to do a todo's map so we already have the todo's right and that's where we're mapping it so each todo of the todo's is going to get mapped to an index so i'm assuming that index is that incremental thing yeah from now it's going to create a to do component right that to do component is going to pass in the specific to do that mapped out yeah for the key which is i don't know why they're doing the key because i don't see the key anywhere here yeah the key sometimes um react will use um like there are these plugins where it lets you have nice little animations to things coming up um interesting it's also kind of you right now it's not being used kind of anywhere i don't even think it'll make a difference yeah so what about this what if we can print out on the ui the index yeah and then let's just like manipulate it a little bit here just to see kind of what's happening right you think we can do that real quick do what so let's go to the ui let's show the the to do along with the index so we know what the index is and then let's kind of manipulate it or let's just do that first okay it should say like write a new blog post dash one pick up laundry dash two sure so if we wanna do that for the ui what are we thinking we could do here i think it's gonna be here right because this is a to do yeah this is specific to do so right there um right after that i would add in like the to do dot id to do yeah so i don't know let me actually try to do that id here and let's see what it gives me yeah exactly there we go getting the id perfect that's interesting you just get to would you do text yeah i did to do that okay okay cool so i guess what i'm getting to is do the id again yeah now let's go back to this one and what happens if you change the one for the key does that change anything right do like index plus plus or index plus one i mean this i don't think is going to do anything for now but i think if we changed index oh so what i'm assuming if you click one yeah yeah that's like that's gonna mess it up so this is where this is where that data is getting passed in then like that is gonna break it that's what i was thinking it's gonna break yeah so this is why this is like more back end uh this is not being used for now i don't think for anything but this is the one that we're using to do our strikethroughs and everything that's why it's being passed down here perfect so i guess did we get the answer that we were looking for i think we did right yeah which you were asking where do we get the index from and the index just comes from the mapping right and i guess that's why i wanted to look up this documentation because i'm curious like what happens if you add in more parameters what are those parameters what do those parameters mean right yeah or do we just assume if you had two parameters the second one is always going to be the index does that make sense right yeah i mean i think that that's why me personally i would be curious just to do like your js react dot maps function yeah what does it do like i know we went into that a little bit but i'd probably dig deeper just to really understand it for me right i'm doing multiple components man let's see if we could find one that has multiple parameters oh more than more than that because you see how this is just one yeah yeah this one just one this one's two like can we have three parameters i don't know like how right i see what you're saying like how many parameters can the map function have yeah because all these examples seem to just have one parameter yeah rendering an array i mean that's the actual documentation right there i think that's it right is that the callback no this is still not her belly so what are you trying to get at by adding another argument like what do you i guess what i'm trying to get at is just to understand the dot map because my assumption is with the dot map if you pass in the first parameter that's going to be the actual object right and if you have a second parameter or you name a second parameter right that's always going to be the index like is that always true is there a third parameter where maybe it could be something else like right that's kind of why i just want to understand more about that dot functionality but i think what we just had right now about the callback function i think that was it right so so far what we have is let me refresh this did we okay to do that text so so far we just have this thing over here i mean i feel like most of the app i understand pretty much how it works right like we understand how the todo form works and it's a component we're using this component inside of our app js we have the to do form right here we're getting our this is one of our components that we're using from here this is the other component that we're using right all of our styling is being done here in app css so i feel like in terms of understanding how this app works i understand pretty much all of how it works i think the next steps for us would be to like learn how to actually edit and be able to even change these and the few things that we wanted to add was like uh be able to drag this up and down that'd be interesting right yeah damn that's it do you guys in this chat know how you would go about doing that because that's something new for us to learn with react and actually apply it so i want to know like is that something that you guys is there any i know that we have some people who are like actually react developers in here himanshu says i want to master react elijah says that was it ludus has removed the key and then you will see yep um when pretest index is like the position of the to do text if you're marking something is done it is calling mark complete which will show a line though based on the index and index is a default property yeah and indexes was the thing that was actually being used whereas the key right now wasn't a thing that we were using map is for iterating yep a little out of box do we need do we really need else if statements in python i mean you don't really need else if you can just keep doing if else but i liked it line through strikethrough yeah damn so we're going to keep on learning react i want to keep on actually increasing my skills in it i want to actually i think it would be cool to be able to build fullon projects with it and add more functionality to it so this upcoming week uh i'm actually interested in taking on the challenge of building the tesla app so what does that look like uh this is what it looks like so this is what i'm interested in building that's fancy definitely understanding how to build those tesla boxes so that's that nice little like scroll lock as i go down and then um where's that like i think they have a calculator too or something which gets pretty fancy oh my god i mean i don't know about all of this stuff the animations yeah it's like crazy animations but let me see where you can actually order the car and then there's some kind of calculator that it has like so let's go to order now i think that would be fun to like build build that dude look at this let's buy one right now i like how easy they make it like for example you just pick performance click next and then they're just like letting you get it this is this is why nice ui this is why nice ui the user experience is so important bro that's kind of like that's insane i mean you want to talk about high ticket like this is high ticket this is crazy people ordering sixty thousand dollars what happened just 10k bro back end is jacked auto steer on city streets oh so this is what it's actually showing you right here this is what this animation is showing you and you can add that on for 10k like this here the who like whatever developers are actually doing this like that's insane that's actually bringing them a lot of money like imagine somebody sitting here they're like yeah i'll actually take that feature i'll add this what else do they got dude how expensive can this car get let's just stack up all the [ __ ] back end products on there um i mean let's what if we actually ordered it on this uh that's it i mean that's a lot but cash yo oh my god imagine having a 700 payment your car i mean 684 i might do today 100 i'm down bro so what is this 4 500 down [ __ ] scamming me scam after something savings i mean i'm sure there's some kind of down i feel like you have to put some type of payment down you're leasing it yeah that 4500 though so 4500 then 684 that's not that bad paid off in three years and i think you can just order it dude like i think you just put in your credit card and that's it that's actually pretty crazy yo let's get some solar stuff bro so here like actually getting good web development skills in to make something somebody's like buy it please buy it that would actually be pretty amazing ab ryan says watching uh you're live for the very first time let's go let's go but like i want your phone number damn i love that i'm just seeing manpreet i can explain in short so basically okay cool responding to somebody oh my god this guy's still telling us about keys bro praveen i love it so i mean people who can actually learn these skills to me it makes a lot of sense why tesla would pay their developers a lot of money because if you can add these functionalities in where if you're about to place an order and it makes you add on a 10 000 thing they can hire 10 developers to build out their functionality make sure their app looks great because one order a day one cool looking animation can help them like close out ten thousand dollars extra dude you know what this is literally yeah this is the equivalent to mariah's hybrid product because think about it at a regular car dealership yeah to add that ten thousand dollar thing the salesman guy sits down with you yeah and he's like hey you want the leather seats another thousand dollars or whatever and you're like no they're like oh but the leather seats you know like they have to pitch you yeah get on the phone with you right yeah yeah yeah that's true but it's like here it's just like a click of a button on the page that's [ __ ] crazy like you said dude you hired developer to have that you don't need a salesman to get an extra 10k on one product it's on the page because the experience and the brand that's kind of good it's kind of like um i mean here the react developer is the salesman yeah you know what i mean yeah because whatever it is maybe i don't know if i order something i mean i don't know if i can order uh solar panels solar panels but whenever that order bump comes in and they make it look great one thing that they tack on is boom for somebody who can afford it it's not that much and some not you know a lot of people get teslas for them to tack that on i don't think it's like that big of a deal for most people and so i don't know to me it's just blowing my mind that they let you just order that from the internet because most of the times you can't order these things from the internet and second thing is i love actually how they can use the development and the experience of it to be able to sell like it's actually part the great user experience is part of the sales process yeah yeah and i mean it gets rid of like dude oh no i was gonna say do they even have tesla sales people like but they do have some of those demo stores where you could walk in and ask questions but i think in the end you still order online like you don't deal like there's not someone trying to close you on the tesla you know yeah let me see tesla jobs developer are they looking for software engineer careers tesla let's see i wonder if they are they actually list out project developer that's different charging infrastructure a gigafactory bro bro they're hiring their own developer or engineers to build their own gigafactories that's crazy what is that i think those are just like the big ass factories for either production they're like charging so wait hold on where did that go software engineer i wonder if they actually list out the technologies there we go react and java so build and support internal developer tools back and front end with typescript so yeah these are important to learn you got typescript react what's ror no clue return on oh [ __ ] oh we're not sure should we be sharing screen we're we should still be live i know but oh and there might be right yeah we're still live but our chrome just crashed so super annoying yeah it's always super annoying when like chrome crashes this is the new chrome update does this happen to you guys where your chrome crashes and it just like doesn't like i i don't know why but it started happening after the new update started happening a lot what is ror if this happens to you give us a thumbs up so we know it's not just us rr oh yeah i never saw it as ror that's the first time i'm actually seeing it written like that do you know what the cool kids call it this is what you always talk about we expect you to have strong cs background and an ability to resolve complex engineering issues and other stuff but yeah i think that's what you talk about you're like dude you have to have good problem solving abilities right yeah and i think that doesn't just apply to code it just applies to anything in general right like if we're doing this live something goes down he's like oh like figure it out right yeah or whatever it is that you're doing things are always going to go wrong you just have to build that skill of on the spot solving problems right yeah that skill is extremely important and i think problemsolving skills all of these hiring managers actually put problemsolving skills on a pedestal above everything because even with react at the end of the day it doesn't matter if it's react or if it's any other framework they want you to be framework agnostic and they want you to just have great ability so tomorrow if they switch to angular or just switch to view or they switch to something else they want you to be able to crush it they want you to still be able to solve the actual problems that they have and and i think that's kind of where the typical big tech programming algorithm type interview questions come from right because hey like it doesn't matter what language you use let's see if you know some basic data structure although i still think it's kind of like a little overrated i definitely don't think you should jud like someone would be a good good programmer or not just based off whether they could solve algorithms but i think that's why they adopted it because they're like hey we want to be able to test people yeah to see if they have good problem solving skills but i just don't think that's the way to do it right they're even now starting to shy away they're they're starting to do less and less of whiteboard type of interviews and i mean frank was talking about this too oh what do you think remember he was here and he was talking about how they're starting to do uh less whiteboard interviews like just p uh companies in general and they're realizing that that's not the best way to judge candidates because sometimes he says people have anxiety and they get scared when they're in an interview that's happening over whiteboard and they just don't perform well but they actually might be great given a week two weeks a month working there yeah yeah for sure i mean i definitely remember going through those interview processes like you wake up you couldn't even sleep the night before how many interviews have you uh i went through microsoft uh youtube google's and blue origins and i only only went through those and they got those job offers and at that point i was like yeah like i don't want to play anywhere else did you get a job offer from google yeah the youtube google one what did they offer you are you able to say that or not yeah i could say that so that was i mean very similar to the microsoft one which was like they're both at uh 100 110k leaving college but then the benefits are insane dude like 401k matching for every dollar you put in they would match uh 50 50 cents meaning if you maxed out your 401k at 19 000 they would put in half of 19 000 which is 9500. so at the end of the year if you maxed them out there would be twenty seven hundred uh twenty seven thousand five hundred dollars in your 401k holy [ __ ] so that's like an extra almost 10k per year right then like the stocks incentives that they would give you they would give you the ability to buy the stocks at like a 10 discount so if uh if a microsoft stock was at a hundred dollars at the time they get to cash in and they they limit the stocks yeah you could buy at ninety dollars right you could right away sell it cash out get that ten percent or you could keep it long term it's already a profitable stock anyways damn but and then even then do like i remember at microsoft specifically at car dealerships yeah it's a big deal if you're trying to get a new car you're like what's your job like you have any pace they need to see like a month's worth of pay stubs yeah what if you tell them like yo i got a job microsoft they're like oh go ahead and get this card dude like you'll pay it off later damn so it's just crazy man like just i think that's crazy where big tech wins is the amazing so hold on an incentive before we move on to that so you got you applied to these three jobs and they all gave you offers yeah between google youtube microsoft and blue origin yeah so google is youtube right because right what made you go to what made you say no to google and microsoft for me it was more of saying yes to blue because i realized i can always just go to big tech later like blue origin was still at like when i joined there were thousand three hundred employees i think right now they are almost like at three thousand so there's a lot of growth in the two and a half years that i was there yeah and i was like dude like this opportunity is once in a lifetime like in the future in 50 years there's gonna be rockets up there and be like dude i was able to be part of that you know what i mean that's going to be normal maybe 50 years 100 years i don't know when that's going to be that's going to be normal yeah i was part of it when it wasn't normal that's kind of what what it was for me and what were your interviews like with google and microsoft um dude they were they were intense dude like the end of those days your brain is just fried you just wanted to go to sleep dude but you would show up at 8am yeah to the place and they kind of give you the breakdown like all right you're gonna have like these interviews but they all consisted of five to six maybe i think it was five technical interviews yeah and they would take you in microsoft i remember they would take me over to a guy specific office yeah i would go into his office and they all had like [ __ ] whiteboards like in their own houses and then um that's what it was it was like three technical interviews yeah then at lunch you would go to lunch with another employee and they would tell you like oh don't worry it's not part of the interview but obviously it's like a behavioral interview just kind of want to see if you're like a cool dude if they can vibe with you if you just pass their googliness check for you for youtube or just your cool dude from microsoft yeah after that after your lunch you get in two more rooms and you do coding interviews and what those interviews were i don't know how they've been changing but it was you show up they show up they talk five minutes about your resume ask you like a question or two and they're like all right boom let's go over to the whiteboard wow and the rest is just doing the whiteboard stuff huh so after that dude you're just like they're like all right good job whatever blah blah blah and what was the difficulty like what were they giving you a lot of theoretical questions or what was it um no i think like how were you all also like how were you prepared for them you know dude i prepared using firecode.io i really like firecode because here's the thing about firecoat is they use a memory recall or i don't know what that specific terminology is yeah but it'll take you through levels it'll take you to level one level two level three like easiest to hardest right yeah but while you're doing level two like every three or five problems you solve you'll bring back an old problem and you like solve it again so like you're developing also pattern recognition yeah yeah exactly right so then after a moment i just remember i would go in here and just [ __ ] eat them for breakfast dude i would just start knocking them out you know and i felt and that was only like at level three it has like five levels which is a lot more problems yeah but if i already get to level five it's just like that's what it is man you got to level five no no we've already gotten to level five that has been even that much more easier but that's what it is man it's recognition so those questions they asked you at google and these companies did some of them did you feel like some of them came from like fire code io or was it more difficult than that here's the thing it's not about getting the exact question like oh yeah i remember i practiced this one but it's literally what you said pattern recognition like there's one i can't remember the exact question but it was something long like all right imagine you have this lab of rats and they just [ __ ] decided to reproduce right how can you tell me if rat a and b are related and like by how much so that's just pattern recognition because when you think about relationships you think about like parents yeah and then when you think about parents you think of like a family tree or trees or graphs yeah in this case it'd be a tree not a graph because there's no like or there is some there could be some circular things but that's like all right cool now i know that's probably the type of data that i'm gonna have to store so now what's the problem all right well the problem is if i have a mom and a dad then that's going to create another note so i know i have each node has at least two parent nodes yeah each paranoid can have multiple child each node can have multiple child nodes you kind of start to figure out how this data is going to be stored yeah okay now if i want to find if a is related to b yeah and if so by what degree of separation what can i start doing right yeah so because you're doing doing the graphs the first thing i thought was like all right i could do with bread or bread first or depth first search yeah now for those of you who might not be familiar that could be you could follow one string of all right check this this this guy's dad's dad dad dad dad did that to you get to the origin yeah and see if you were able to come across it yeah not check his mom's mom go all the way to the origin if not to go to the dad's mom so you go all the way to to like as deep as it gets or breath first is like check the mom check the dad if it's not then check the mom check the dad check the mom check the dad of the mom and the dad if it's not then that one's more like you go wide instead right right but here's the thing there's also children so you have to go both up and down right so i forgot what the hell how i was able to do that like now i'm thinking i'm like oh my god what the hell but that was like the type of question that i had to code up yeah so i think i ended up doing a graph along with you know in terms of like pattern recognition i was like i'm probably not to store this data somewhere as i'm going through it so i could look through it so i got a stack yeah so that as i went through a parent i put in the stack so for example if i was doing depth first i could go through all of those put them on the stack search through the stack once i'm done searching to a stack if i find what i need yeah i'm done if not then go back and do another path or something like that damn and then did they make you you ended up having to write the algorithm as well right and you chose java or yeah so at that point i i did fire code.i o using java so i was able to practice that so that's what i just felt most comfortable with but in reality queues java python javascript any major programming language but right that's i guess up to you at that point damn that's really powerful dude like to actually uh use we're gonna head off uh in just a second but yeah that's actually really powerful i think we should actually teach that at some point some of those things yeah we could definitely get into that stuff yeah that's really cool because it doesn't even matter what language it is it comes down to just problem solving yeah for sure all right guys so what i want to say is i hope you guys enjoyed this video um i'm just picking up react and just having fun with daniel and uh yeah hopefully you guys had fun enjoyed pick up some stuff with us one tip that i want to give you is i like to pick up um especially if you know coding in another language and you for example i know python it's really easy and it makes it easier to pick up something by like looking at somebody's code downloading and playing around with it so i linked the source code to that person's code raj raj hussein something like that is his name and we took his code broke it down went through it and understood okay how this app is working now this is just day one if we did this every single day by day 5 10 30. we would know how these apps work we'd be able to build them from scratch and i highly recommend you do it like that and then play with it and break it and it'll help you understand and along with playing with it here's a challenge to you try to add some functionality to it if you can't think of any ideas think about this what if you could make it drag and drop what would that yeah or what if when you do it to do it disappears or moves it to like some sort of archive or something like that or even adding a date to those things like a little timeline yeah that could remind you it hits those dates so those are three ideas that it's like once you start to implement those you could really start to get a better understanding of react and really start to learn or take that todo list app and add a database using something like firebase so the data actually stays there so it doesn't go away once you hit refresh guys um that's it hopefully you enjoyed it and had fun we'll do more of these and more advanced ones where we are building projects um so be on the lookout for that thank you guys smash the like button we love your beautiful face this is qazi and i'm with daniel here and we will see you on the next one peace