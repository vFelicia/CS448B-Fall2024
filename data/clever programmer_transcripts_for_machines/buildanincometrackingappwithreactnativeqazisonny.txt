is up guys how's it going this is qazi from clever programmer and it's your boy papa react how's it going guys part two of react native yeah so it's gonna be exciting i hope you guys are excited last time we left off right about here if you guys remember and we were working on this app and we wanted to make a income tracker for developers all right and this is where we left off we got a nice little pretty graph going we were working on adding the ability to add your income and then it should plop it up onto the graph and that's what we couldn't finish in the last video so that's where we're continuing from exactly we're going to be adding that functionality to groups it so like as we add that income it's going to group it by the day and that's going to be a little cool problem that we're going to solve live in front of you guys um so that'll bring a lot of value to you guys um yeah we can see people starting to flood in nice mexico in the house hey let's go 85 viewers in the house let's go what's up guys so um i hope you guys are excited guys if you want this video to go out to more people and if you want to become a react js developer and make a lot of money then go ahead and smash that like button smash that like button guys and get this video out as many people share with your friends all that stuff we we're just starting this new react native series so it's gonna be a lot of fun so if you guys have been excited for that let us know either in the comments and if you haven't already like cards you said smash that thumbs up easiest way for us to know that you actually like the stuff we put out that's right oh that's all that's one way to freaking start it off strong jesus all right so my hold on i don't know what's going on but let's try this that should work boom wow we just got an amazing donation by gabriel graves thank you so much dude he goes let's start this strong let's go 20 donation he's becoming our new frank he is dude he's becoming literally the new frank and hopefully he'll be he'll be landing a huge client soon oh yeah that's the path and he says you made my day that's what we're talking about dude we love that kind of energy uh qazi go ahead and share the uh vs live share with me and then we can up on the same coding sesh all right brother you got it i'm gonna go ahead and do that right about now guys i'm excited about this one and uh sunny i'm actually excited about this one because i want to be able to track my income yeah and it'll be it'll be fun dude like like it's one thing using an app that helps you out and gets you more like you know productive and [ __ ] like that but like actually having built the app and like imagine we're using the app and we realized that oh it might be cool that if we have this or if we have this then going ahead and adding it and playing with it that would be safe yes yeah i'm excited about that bro nice i'm inside now welcome guys calvin comes in and goes geez gabriel always putting his foot on her necks hahaha love it and then he goes gets the people going rotation in the house what's up guys oh nice we've got west africa as well nice what's up lelenky yeah amazing awesome all right all right all right right now we were using expo to get everything running last time yeah uh xp is dope it's the first time i was using expo as well and xbox gave us some pretty cool cool features last time because we were able to actually share a qr code with you guys and you guys were able to actually pull it up on your phone and you guys know yeah you can do that right now by the way guys so i'm gonna go and tunnel and make it big and i'm going to hide my screen for a few seconds so now you're going to get a few seconds right about now and if you just take your phone iphone camera and point it to it it's because you on local autumnal i'm on tunnel oh it's gonna pop this app open for you and then you should be able to see all the development we are doing live in real time and that'll be super super cool that's it that's all i had to say there we go downloading it loading javascript bundle yeah guys go ahead and do that because it's awesome and if you don't have the app literally go ahead and just point iphone users just point your camera at android you can you've got the scanner and if you don't have the app that you need to run this you can pretty much it will prompt you to download it but it might take a little while to get started and spin up but once it does it's pretty sick it's pretty cool going ahead and as we code you can see it some people saying it's a bit slow yeah it is a little bit slow but imagine once it loads up you pretty much get that connection with us which is which is pretty cool yep it is super cool uh go ahead and share the the servers as well so then we can i remember the ports it was um if you've got the terminal open if you hit w oh man this is why i told these guys to move imac pro and they did not so it's like crashing now oh [ __ ] yeah it's like maybe in that it's maybe in that case dude don't have the tunnel have the lan no i mean like it's not the app it's more the live stream yeah so for example like it's not even bringing my picture and picture back up on the screen so that's a bit of a problem but we'll just keep going i mean my screen is working so that's a good sign and then i'll bring our picture and picture back up later okay so uh in that case you can you can still get to the extensions right is in the vs live share panel yeah um and if you got the terminal running uh the other terminal can you get to that yeah i have i have two terminals open and i have them both running and i'm gonna give you read and write access to them okay yep i can see the node one okay yeah here we go so you've got building javascript bundle attempting to open the project in a web browser so it should on your computer actually go ahead and pop up okay so local yep uh so sharepoint19006 with me cool okay so somebody says see handcast after using expo can we build it for ios like a native yeah so pretty much expo the only the benefit of expo is one you get to go ahead and prototype it on your own phone on a few other things and you get to share it with like like imagine you built it sent a client like a like a link or like a qr code and said hey like why don't you try it out like they can go ahead and try it out but the the only benefit to using expo is it's gonna be faster like it's gonna be a lot faster and right now um i actually have the phone up on my on my device which is awesome so i can actually see it on my screen over on my side which is which is crazy oh [ __ ] um i mean for some reason mine is not working it's not coming on your your screen no on my phone oh now it's there cool there we go oh now we're up as well we're back on the screen so you guys can see i've got the app actually up and running on mine uh sava says the tunnel is working as well awesome um nice rishi seeks this kanji i figured out how to get rid of the decimals uh go for it it goes decimal places no okay let's go ahead and we can try that thank you for that dude that's awesome yeah let's go ahead and try that so let's go down to decimal places and pop in no okay let's see if that works so i hit save on that and then it says compiling oh [ __ ] nice it worked yeah nice that's awesome rishi wait hold on where did you put it one second let me see i'm focusing too much on the stream now i'm going to just focus on the code a little bit so this one 65 965 ah okay cool oh that is nice that is really clean yeah i mean i would never wouldn't have thought no [ __ ] i wanted to just make it zero i know right yeah i think we tried zero right and they tried zero they kind of messed up it doesn't work yeah okay so that's gonna be um so that looks clean now and guys what we were on last time right is is you can on this app is pretty cool like if you guys are going on your phone right now what you can do is or if you haven't we can run through it on the side basically you enter a description so imagine we typed in like uh let's just say freelance job or something freelancing job and then you put in the amount of holiday that they don't see what you're putting so i'll i'll put it in yeah holy [ __ ] bro look at that [ __ ] every single type i every single second i write yeah it's a good use effect huh react hook this example of uh yeah exactly this is where it's generating a new random because it's rerendering every time yeah which means that we've got the data ran math.random that's why it's going [ __ ] crazy every time we type in yeah so notice guys i just added in a job freelancing job for 200. and 4.99 plus 200 is 6.99 so this total up income gets updated but this chart needs to update uh so the way we need to make this react hook is that i imagine this chart needs to update only after a submission happens right uh so we actually want to do it so the data set here so if you follow me oh i see i see okay so it should just follow whatever this data set is yeah so this data set is basically let's actually start building out so this data set is an object with a key data and that's just an array of the data points right yeah now every one of these data points goes in line with like you see where it's on monday tuesday wednesday thursday friday right um so we if we have five data points we should be having five things here so right now we've got four which is why the the dots aren't in line with the axi the x axis so what we want to do now is actually go ahead and have a piece of state which is going to represent our data right so let's go ahead and make a piece of state so i say quants and guys we're solving this as well as as you guys are seeing it so it's the first time we're doing it as well there's going to be a core experience for you guys to see so set data and this basically can you write down what the problem is like in just in comments like right here um yeah oops those are python comments all right uh put come on come on both yeah yeah yeah more and what what you want to do is okay so right now the problem that we're trying to solve right is we want um yeah so we want to we want to have all of the data right so so the first problem is we want to have this in a variable right so so we want to end a piece of state so so even this math.random we don't want it here i just want it in a piece of state up here so that's the first point and the reason why is because once it's in a piece of state we can control it we can manipulate it we can change it we can do stuff with it if it's just here hardcoded we can't do anything with it right so that's the first problem so this data set needs to be in a piece of state so what i'm going to do is i'm going to copy that go up here and i'm just going to pop it in here so the default value is going to be an object with data inside of it right data set needs to be in a state uh variable there we go and then what we're going to do is we're going to go ahead and replace the one that we're using here so the data set okay so this is actually an array of an object okay but yeah it's array of an object right so in this case what we need is this needs to be an array of an object so we need to match that so an array of an object so sunny and then we can do it okay okay okay go ahead so i'm like just trying to yeah so basically it is the problem of if i log my amount of money that i made today and i keep logging it it just needs to keep being put in that data set right like every time i hit add gig and i add the thing it should add it to that data set yes exactly got it and then it needs to add it it needs to add it with my dollar amount along with the descript um the description along with the date yes so the way it works is kind of weird right like the way they the way that their sort of api works so like it takes a data set and you can have several data sets we're only going to use one right so in our case we've got this this array of data sets but hold on just one second so for example if i put in a 300 amount for that day where do i put how are we planning to store the date next to it because in python for example what i would do is i would have a array of tuples and i would have 300 along with like whatever the date is right 10 um october 27 2020 and it would be like that and then i would have yeah you see what i'm saying so that's how i would store the data sets the number along with the date of when it was submitted so in this case what it looks like is we need to generate some kind of data data structure which is like this oh [ __ ] um some kind of data structure which looks like this so like imagine i'm just going to comment it here yeah just imagine writing comments go ahead because imagine like if you have four so these are going to be each day for example imagine this is today all right so monday is today tuesday tomorrow and i'm sorry imagine thursday was today wednesday was yesterday tuesday was the day before that and monday was the day before that right yeah now this is going to be the value for this day this is going to be the value for this day this is going to be the value today and this is going to be the value for this day wait wait wait okay okay so what we so hold on so what um i understand can you see the graph let's save it and then what we can do is we can show it in a really clear way so i get what you're saying this this represents this is attached to that right there the the zeroth point on this and the first point so they're like basically mapped by like position of the indices yeah that's what it looks like right now okay but how well when i type in my number here like let's say i made 200 will it no because it's just gonna add it as a fifth point on in this array no yeah so what we need to do is we need to do a user effect so imagine this this data structure we're gonna have like an array right as in like an object sorry or an array i mean we'll figure out what we need but we need like an array of objects and then that object would be like the date so you would have one kind of date and then you'd have a number so imagine for that date you made two thousand dollars right that's what that's what that's what i'm saying that's what we're looking for an array of objects that that's that's it if we have that data set we're good that's all we need yes perfect exactly and what we're gonna do is we're gonna we're gonna have this uh variable being manipulated and changed in a use effect which every single time i understand uh data gets added to data set it groups again yeah yeah i just wanted to understand the logic of the problem like regardless of the complexity of react involved in it but i understand what you're saying now with the whole thing with like okay so this is going to be our data structure but then we're going to use the react way of doing it and add that to this so then every time we actually hit submit it adds it in a nice way exactly exactly that okay so we have this array here and this will be the data set um but it's kind of um so this even our labels needs to be like it needs to kind of be it needs to be thought out quite cleverly how we're going to do this yes um so what we we could do is we could have two we could have two two pieces of state one for the labels one for the data sets um i would prefer to have like one which had everything inside of it so we could have like a date uh this is going to be an array yeah one is an array of data i think one piece of state that's an array of objects so then it can hold the date and the amount because no because what we need is this is going to give us this right but you see here it accepts an array of the data points so how do we can translate this to the array of data points and where do we store that can we can just we can just write a function that can turn this into this type of thing right right after yeah we could do that yeah so we could do that so it could be a function which which takes this object and returns back the data points and then this one right yeah yeah like for example um it'll be like get the key for this yeah i'll be getting the keys for these i mean that's the [ __ ] tricky point because then what it would need to do is like the label will say mon and then another time mon and then another month right no but that's where the use effect will come in and it will have um a grouping so every time it changes um it would group right so that i saw that holy [ __ ] bro oh man if marabon was here oh man all right so somebody says use memo will be cleaner yeah so dude once we get it done right what we can do is we can memoize it which means memo means like if it's an expensive calculation right you can memo it like you can use it called a memo and it basically cleans up the operation so it's a lot quicker every time it runs um it sounds like you're saying memorization incorrectly memoization no you're saying it i'm saying that when you say that word to normal people it sounds like you're trying to say memorization but you're saying it incorrectly oh yeah but the word is actually memo isaac memoization i'm white yeah oh thank you so much stephen he says congrats and your nieces appreciate it okay so the data here would be this and then okay so let's just kind of like map out because it is kind of a positive it's a bit of a tricky situation so we've got this so now we're going to do is we're going to have an array so firstly it's going to be an array uh and then we're going to have our data points so let's just structure as we expect it so we're gonna have my david's data point so the first one would be something like new date let's just stay up with this new day um and then this one would be um wait where is it oh you know so we got this oh yeah that's a key sorry um the date oh okay now we got another issue wait is the key can't write it um you could do it like that oh that's how the dynamic jesus is really yeah yeah it's pretty weird right and then you can have something like um 2000 yeah yeah yeah okay that's cool that makes sense yeah so you could do something and then the second one would be essentially the same thing but it'll be so what what does this become does it by default become the date of today new date yeah but that would be today's date yeah right so that's going to be today's date um and then this one would be uh let's just try and get yesterday's date in an easy way so a new day minus one for yesterday i'm just googling it quickly uh i mean let's just just hard code oh we probably we don't want a hard code because we want the data object yeah i just want to kind of get like a very quick sort of yeah i like i'm sure the more tangible mvp we can put together then it's easier to solve the problem like the less abstract we can make it the easier it is to actually solve the problem exactly just because you just kind of kind of get to a point where you can see your data structures and things like that yeah that's what i always try to just desperately get to as fast as possible i want to see my data points and let's not forget us okay it's not this kick so logo hold on one second what the dude you just put like a fire emoji or a pistol emoji or a right or something there you go uh save it make sure you save it oh yeah that's spam the save there we go so mine's being slow as hell um you are you're sharing uh yeah you are sharing it so i can load it up so yeah i can see it it's just um really small so i'm gonna make it easier for people to see console let me go ahead it's a bit smaller as well okay so so what we can see is we open the console we've got the array so it says debug and it's got the array inside of it and it's got today's date one time and everything yeah one it's actually got some weird word what one where do you uh so you see that that that weird string right yeah right here yeah that's that's actually yeah so it's got the date and then on top of it it's got some other weird one right that's it so so why is it unix right okay so is this a hold on one second this array has two items right why does it say length one because length one means oh shh this is because of this this is my this is uh maybe here we have an object because you have to get rid of them you have two items in the array wait hold on this is not an this is not an array of objects it's just one what do you is it this is an object we wanted an array right we wanted an array of objects so yeah we want a of objects yeah that's it exactly why close your parentheses bro this is the [ __ ] cutest [ __ ] i've ever done live holy [ __ ] dude that's like bro ship on another level like i'm closing your parentheses now yeah this is deeper level of understanding than any relationship i know right it says okay so new date minus one gave us a unix value which we don't want we want just a clean yesterday value so how do we get that how do we get we just want something simple um there's a few ways you can do it but i don't really want to use moment okay you know what let's there's actually a spring moment in because we're going to need moment anyway subtraction hey man i heard us deprecated yeah somebody says guys somebody hold on hold on maybe it is bro hold on one second deprecation warning wait that was in 2017. [ __ ] that maybe yeah and i don't care bro it's too late paul says it is i haven't had a moment being deprecated deprecated i don't bro i just don't believe anybody until it doesn't work for us anymore like just try it and if it works for us then it's not that right apparently let's see but it's heavily used okay so yeah i thought moment.js thank you for your service go down um okay but it still can be used right yeah okay cool because like spectacle is deprecated but i use it every single day yeah exactly and it's like it's great so i'm going to go into the terminal and i'm just going to put in npm install moment dash dash save so if you come on j on the time in ps code um all right what type of stuff are you trying to tell me to do so open up vs there we go the [ __ ] are you doing bro save what is that you don't do that anymore no no i copied and pasted it from a deprecated a good way to start things oh man because the good thing the moment is you could just do like a moment subtract one day yeah and it will give you the exact yeah dude i write such clean code like when i actually get time to turn some i remember i was writing these like you know that text that we get sent for the automated text testing and stuff or the income numbers and stuff like that yeah i wrote like the most beautiful moment piece of code that would sum up the stripe numbers and then turn it into like one date from like stripes garbage unix numbers it was so satisfying when it turned to like one line of just beautiful code and then we got butler and we ended up like not using at all any of what i did but whatever i mean it was that story was really good until it went really bad boys moment today um oh god okay so somebody actually gave he goes let d equals new date set date get date minus one yeah i saw that dude um dude we we don't care just whatever [ __ ] works works i'm not religious to [ __ ] deprecation and none if this works and it's easy then i'm going to just do it yeah exactly which one how do you do moment i think that's just you just thought and that should generate a um moment get today get a moment.now or something right is that how it is or no about that yeah so it's just moment yeah okay so that's today and then to get uh yesterday we do moment dot uh distribution and then just do minus subtract and then um one day one and then days exactly and let's go here yes and then save we should get the correct stuff now should we have to refresh or what uh yeah i'm good yeah so so 29th and 28th so oh because you're in my terminal i mean i've got the locals that's what i mean that's what i mean you're in my local host that looks clean i like it nice okay that's dope so now we've got we're kind of got like a mapped data structure right yeah um oh what we should do dude is actually let's get working with dummy data first build those functions that plug in the data from this and then we can go ahead and build from that that is the only way i do things i i like to my brain is a little dummy sometimes so i like to start with dummy data first oh yeah let's do that so then this one and then what we'll do is we'll say like my rule is never ever absolutely no case use your thinking until you absolutely absolutely have to there's no other way around it then i will think yeah and it's true if you just take a step back kind of mask it out first it will make it a lot easier guys because like even now that we just drafted it out like this as opposed to kind of like if you just constantly kind of code the solution like raw it's kind of so suddenly says packages have yet don't worry about that now guys like you can optimize things when it gets do not care because i can have yeah like if there's a day where i'm just really bored i can sit and optimize it that's not a problem at all like you can easily turn it into vanilla javascript code afterwards yeah also bro i was watching did you see um firebase summit is live right now oh integration with strike oh [ __ ] stripe yeah so now you can do uh dude description payments hold time hold on why don't we watch their video and react to it like and and record oh let's do that let's do that you know what i mean and then like we just react to that video and like watch it let's do it i'm down you know let's do it because because i was uh i watched day one and that was dope and then what are you doing watching this [ __ ] without me bro this is my do you i went to go send it to you and i literally i don't know what the [ __ ] something took my my shelf and i was like oh [ __ ] that you know i just really e3 like e3 the gaming convention yeah dude it's like my fix i used to religiously watch e3 every year and i would watch like all the conference on like apple and stuff like that now we could watch firebase freaking conference you know that would be sick yeah it is man because i was watching it and i was like oh man i was like damn and then they had some stripes off and i was like oh [ __ ] there's fixing a huge problem and they made it so easy now to do subscription stuff and uh like dude with like five lines of code there was full subscription handling and i was like wow yeah it's insane bro even invoices everything sent from stripe wait hold on so basically everything we did now can be done with just a few lines of code or something is that what you're telling me no i think it's more of a case of no not from not from that perspective okay okay okay i see it cuz that was pretty checked you know i'm still using i'm still using our app like it is actually useful yeah daniel was showing me as well danielle uses it i use it and when i don't use it it's extremely painful the entire process without it is extremely painful i need to update uh the the name list as well yeah yeah yeah the nameless or like make it in a way where we can add a name because i am constantly making my name frankie yeah yeah i was thinking that i'm like [ __ ] i'm not giving i'm not giving my sales to michael we also have to do um a tray right uh yeah because yeah yeah we have to update trey because for pwj i think it's uh giving us some funky information yeah okay um so now the data structure should be said so we've got everything in there yeah honestly and and a man i just love and dude i watched the firebase thing right as i was watching and i was like okay this video must be popping right now yeah it had 22 likes and i was like how the [ __ ] does nobody know about this stuff like and how the hell how the hell are they not reaching out to us i know i'm i was wondering i was like we literally are like your biggest users and then they were like um yeah we should we should reach out to them yeah i don't think like is it firebase summit guys let us know in the comments are you watching it right now the firebase summer have you guys seen that because they have some awesome stuff to drop in you know let's see what's going on under 287 subscribers damn um we're crushing them dude we're crushing firebase that's pretty sad right we should be sponsored by firebase that would be dope that'd be like the i would easily say like hell yeah i'll chat them up for hours yeah that would be that would be really really dope yeah man all right okay i'm going to just leave this here and i'm going to come back to it yeah probably never we're going to create two helper functions right one is going to get all of the dates as in from our all of these keys have to damage thumbnails no wonder they're not getting any views i know yeah and their titles they could use some help we'll help them out um so what we can do now is we can actually go ahead and do this so we can say const get let's call it get dates right yes and it's going to be an arrow function and what we're going to do is we're going to say data i mean this could actually be a oneliner i think oh you got some music to play bro there's some music yeah let's do it man let's do this look this one this one yeah all right so this one's pretty sick so if we do cons get dates and then turn it a little bit low because it's too loud hey nice oh sick paul oscar says it'll be awesome to introduce typescript in some series it's become quite industry style and it's [ __ ] awesome yeah dude i agree i love typescript as well and we've never touched on it on the channel and they say it's really good for anyone who's come from a strongly typed language so java csharp those kind of things yeah um you're fans of it um okay so get dates what we're gonna do is we're gonna say return data dot and you can actually do this now because data is an object right voice it's an array oh okay so what we need to do is we need to say data well technically dude hold on what are you trying to do just one second i want to be on the same page with you so okay you're when you say get dates what does what should it look like can you just show me the raw naked [ __ ] that it should look like yeah so our end result should be an array that we're returning like this and it should have date one day two day three day four okay cool like this right that's what we want and this is our current data structure right so we have an array of objects okay so so so you're saying that get dates should uh get should get all of these dates here so like for example it should catch this date and put it in there and then take that date and put it in the next one yep so what we can do is we can use a map for that so we can actually go ahead and say something like uh const dates equals data dot map and then for every single uh data point oh no we choose which we call these like like a tuple but what should we call it like um um call what i'm sorry so every time you map through it what what do we refer to as like a data point or something like a data set or um yeah i from the python world just call it a tuple like but it's actually a tuple this is an object or a pair yeah we can say data don't map we'll just call it a pair yeah so if every pair we want to get the um key so we're going to say pair dot key i think you can do that because we've got an object no no we're going to say object so map and get the object dot key i think we do it as i said no it's not that um hold on one second is it we're going to get this back which is um we all we want is the key of the object yeah so oh yeah we just want the key that's right what's uh but there's a there's a really nice way of doing this there's a really nice we're doing because we have an array here but there's so people people saying date stop set dates forget they no don't do it that way um yeah oh is it called hold on okay let's just do let's try so when you map through an array objects i think you can do object.keys right yes oh that's yeah i think that's it i'll put it on keys and then we can do uh and then that should give us a uh the key button that would be the first one just do object uh object.keys yeah because there's only one key in that object and we'll get the date and then that will map through every single one and bubble up into an array uh what is the zeroth [ __ ] what what is the need for this index because it it's going to give us an array back but i think it's only gone use that element wait hold on i don't understand yes it would only be that element but the return type for object.keys is an array we can try it we can try we can go ahead and console.log this so we can say console.log getdates oh object.keys yeah it gives you see what i'm saying it's gonna oh i see i i got it i got it i got it i got it okay cool cool cool got it you just want the because you don't want the i understand i understand because yeah even though even only going to be one you're going to have it as yeah so basically if it's something like 10 27 like october 27 uh 2020 instead what you actually want is just 10 27 2020 and i obviously it's a date time object i understand so you want that instead yeah cool got it exactly um oh paul said a good one he goes uh you can also use the whole data set as a dictionary where keys are dates and then just use object or keys oh [ __ ] let's try this i've never i haven't done that in a while so let's see that how to create a dictionary with key value pairs um do you want to just do a simple version that works first and then you do it or do you think it's worth simplifying it right now yeah we'll do it this way first we'll do it this way first you're right otherwise i'm getting carried away so you should they get dates let's call that and see what we get so we'll say debug two let's just call this one the dates what are you expecting to get right now expecting to just get this right now right like actual dates yeah we should get the dates in that form cool okay save refreshio react native my favorite there we go nice hey let's go bro one time bro hashtag one take one take that's it now i just i do want to explore that that the dictionary what's he done the short right hand oh okay so dictionaries this she's just going to be an object as such so no objective johan um okay you could do it that way but no i i know i yeah wait wait wait hold on what are you doing bro let's just go to the next step we got the race this one's good what we can do is we can actually really make this quite sweet you can actually go ahead and say if you only have one line of code don't worry but nobody isn't it will keep everything really slick like you just do this you just do all right that's it okay okay cool sick so now this gets us what we want right yeah and that will give you a direct return when it maps through and gets us that so now we know how to do it really nicely for the key all we need to do is the same thing for the um the values now so we can actually go ahead and say get uh so if the first one was a date we can say get amounts maybe yeah if you didn't have this indices by zero then what we would actually get back but this would actually this thing would end up returning an array of arrays yes because we're getting a raise yeah yeah cool this is where i saw like guys this is where data types and all that sort of like the way of thinking comes into play because like if you did like what cause you said then you didn't have the zero you'd be kind of like mine you couldn't easily get quite mind [ __ ] in the beginning because you'd be like oh my god what where am i doing an array inside of an array and it kind of like gets confusing so just understanding the fundamentals makes it all a lot easier so you can say object dot value object or entries no entries is both we can say object or values and that should give us the amount so now i'm going to do zebra log that's easy easy money object mean i think it's values i'm sure it's values yeah yeah yeah there we go that's that's pretty okay so now we the data structure um what we can do is mj can i i got a question for you i got a question for you if um a lot if all these dates were subtract by two days subtract by two days subtract by two if they were all the same yep no remember we need the intermediate step afterwards which would do the grouping right got it yep yep yep yep i understand though yeah that would be another step before i should do that okay this is really good man because this is actually even i was thinking i was like i'm not sure how we're gonna break it down the best way but this is awesome like yeah we're solving it piece by piece and then reversing it and doing other stuff so we've done this now what we're going to do is we're going to swap in our data set values with that new stuff right so instead of this we're going to use get amounts over here oh snap son it's about to work already i'm [ __ ] hyped i know right this one will be get what does this get done get dates get dates yeah that's what aaron's life is about right now let's go save and let's [ __ ] go bro and now we should have a nice looking my life is about get a mouse let's go all right see oh dope there we go nice man refresh your screen hold on hold on i don't see anything yet don't get excited so the xaxis is a little bit [ __ ] but we'll fix it holy [ __ ] i don't see [ __ ] my screen is just white so go ahead and try to damn son it works yeah 5500k in one day bro what are we talking here hold on fine that's five million five hundred thousand dollars in one day that is a good sunday the k the k pot needs the uh that's where we need to so this k where we have the y axis um on line 79 that is going to be an issue because you if you're you're going to have k attached to a use effect or whatever is our intermediate step it has to account for that otherwise we're displaying [ __ ] and otherwise we're displaying it in the wrong way that's it guys you got abdullah says this is nice we appreciate your time ninji thanks guys turn that music up bro that music is [ __ ] getting me lit it's good right it's lit bro um for some reason on my phone it hasn't updated yet the app but it's working on the web i can see it on the web yeah dope okay so we've done that that's fantastic now so now hold on before we continue um now what we need to do is when you say intermediary step when you say okay so i i want to get it to like crystal clarity before we move forward because otherwise then like i'm just going off of what you're saying i also want to just understand so when we're doing the group buy right yeah is that happening that are we gonna have that happen afterwards like after these functions are done calling or is the grouping actually happened uh gonna happen like right as these are coming in like is that an intermediary step so there's a really nice way to handle this gracefully right um and the way we do it is and you said can you show me like a literal example of like in a comment what it will look like once the group buy is done what will that actually do yeah so imagine we had like a day here which was the same day this day was the same day we had another day which was literally the same day here what it's going to do is it will turn this data set into the following right so we'll have this data set well it won't look like this it will look like something like this it will have so imagine this is the data here so we have this it will have rather than having it like this we have the date repeated three times it would accumulate this so you would now have whether this is three thousand so you'd have five fifty nine fifty so you'd have nine five and then you would basically go ahead and have this so now this this date would accumulate up to it will bubble up to this amount okay um feeler says this channel has become a netflix without me noticing i spend my time watching videos there awesome i love that all right so that's going to be awesome for that and then this one where we've got the same day it's gonna find these keys and it's gonna say okay like we have the same key here so let's just add up on this value so it's gonna be 11k right so this one's actually gonna be 11 000 and then it will bubble up and now we have this so you see like what happened there basically bubbled down from this to this right uh okay okay okay i understand cool that's really good to just see it tangibly my brain has to do no um translating in like no processing power is now being used by my brain i can just see it yeah and to be honest it really is um it's really uh nice to actually have that now as a comment so that when we were building it it's very visible like okay because as much as it may seem that you'll remember that when you kind of get into a brains like when you're thinking about stuff and all that you can very quickly kind of go like oh and then things get overlapped and before you know it you just can't even make sense of anything yes i hate that i i actually love doing the the work up front of because like i never trust me i never want to actually write this out because i'm like oh it's just faster if i just spend this time [ __ ] coding but once this is done which is also why i like doing test driven development too because once this is done it's so much easier to code and explain and honestly another reason why i like it is for the people that are watching it's so much easier when it's done this way because otherwise the thinking is happening only either in your head or my head exactly and guys it really does make a difference because like as much as like like as he said like when you go and hack away at the code trust me like even in the beginning of this i was kind of confused just like oh how are we actually going to break down the problem and but then like after we literally broke it down to these two lines now everything kind of makes sense and like even doing this comment it starts to make a lot more sense as the next step yeah so if you ever feel like oh i don't know what's next do i have no idea what i'm doing next it's completely a fine place to be just like break it down and trust me the next step will naturally appear is you just do that right i love what fella said he's like this channel's become my netflix without even me noticing i spend all the time watching your video they're awesome and then another comment i really love is abdullah nick holy amar says the realtime thinking thoughts really add quality compared to an actual preplanned tutorial yeah i actually raised that's actually really true right sunny because as we're going through it and working through this problem i think it's actually a lot better than you having it preplanned and solutioned out because now people can see the thinking process behind it and in an interview this is actually the type of thinking you have to do live exactly and yeah 100 i couldn't agree more like uh that is probably the most value like if i was learning out and in the beginning of my journey all i'd want to see is other people who are experienced show that they're human and actually see that oh okay i'm not crazy i'm not dumb like they also get stuck how do they get over problems watching them get over problems i think it's really really nice way of doing it and seeing that right um devon gray says even though my coding i didn't get used it was good to use my thinking ability too i finally found some time for the es6 data structures i had never really found uses for in the wild yeah honestly devon gray like uh honestly dude like you're right again and and the suggestions that you gave that everyone who gave a suggestion it doesn't mean your suggestion is bad like it could be literally a much better solution than what we've implemented or it could be more efficient it could be more everything it's just the way of thinking now that we have the the flow that kind of goes in place you can optimize and you can be like okay now we're using a data a map here you can now replace that that part with your sort of solution and you'd still have the same flow just be more efficient right so you could go ahead and do things like that um but let's go ahead and tackle this problem kazi so the group by sounds easy but we're gonna have to find like a really nice sort of solution which which does that okay um and an efficient way and i've done similar things before but we're gonna have to account for a few weird things right we're gonna have to account for uh the timestamps are technically gonna be different because because so what we should do so no not understand so what we should do is not have the time because that's irrelevant we should have just so it's up to the days so we should group it by days because right now it's going to be trying to group it by like the actual unix value which is never ever going to be the same yes exactly exactly that so it's going to be grouping it by the unix value and that's never going to be the same so we need to erase the time we just want to keep the date and we don't even care about the time zone and all that stuff because right now it says time though we just want the date itself so uh we can go ahead and do that so is that will that be done with format ll no format won't actually change the but it actually changed the type you can change it to uh form you can do format format is as a form if we just wanted to if you do focus on the format yeah the date so let's go ahead and just test that now so we say moment moment.format ll hey let's go i said the music actually helps you like kind of focus a bit you know like dude i'm loving the music and then we say music oh i'm moving the form let me do this this this this puppet there for a sec and then what we'll do is inspect it and have a look and see if we're getting the expected result so i'm refreshing it and now we can see that it didn't uh oh no so hold on hold on oh no yep it did boom looks freaking beautiful bro nice there we go okay so now now it doesn't matter what the time is but that you're gonna get the same dates okay so that's gonna help us out um so that's going to be cool what we might want to do cause is actually format it quite early so that we can show on the graph on the graph so right now if you see the graph it says october 29th october 28th but it's quite big on the graph i don't want it to say october we just want that short view you know like the short dates there's a very hideous group buy that works but i want to it's like using reduce and i kind of want to just avoid it because i don't know i was going to say that the ideal one would end up using a reduce like yeah yeah i mean it looks very mathy but yeah we can do it we can do it this looks like it should work but let's just drop me the hideous into that in the code so if you just copy and paste it in the code i can just grab it from the card i dropped it in slack but i'll drop it in the code as well hey there we go hey you turned that up a little bit bro i'm liking that one my bad i'm like [ __ ] turn it down all right so this one is saying group by okay so yeah so i've used a similar one to this before and it's really i mean to be honest i i i got my head around it ages ago and i was kind of like okay i lost this i i don't really care to get my head around it i just want to what it's good yeah yeah what i would do when i'm coding this is i would just copy paste this and then i would just try to match where stay consistent with where it says result that item because i just imagine once let's do it let's do a it's called group by you should try this one by the way because like this one looks more legible to me like i just sent it to you in slack but that one looks more legible you mean the one with the the spread and things like that no the one that i just sent right now in slack to you yeah so it's got like a spread operator and stuff like that i don't see um oh i see the spread operator okay yeah just like a spread result and things like that it's got result item the other one had a reduce with one level this one had a reduce with it's like taking an array and then indexing it by a thing and then indexing that i don't know i think the first one i mean because the first one we can rewrite it with arrow functions would be and it'll look really clean okay it won't be so confusing all right go with it just looks hideous oh you can say it takes xs and a key group by which is excess and the key length the length is one two three so right what are you doing are you writing somewhere oh yeah you're writing i'm looking at that code example that we have we found so it says i don't get why what the key they're taking is checking the the length all right give me a and they're using like it seems like there's a higher order function being used or something i i don't know bro it's it's [ __ ] giving me anxiety looking at it i mean it apparently it's pretty um the other one is i am stokies the other one looks like something i would write the first one looks like i would write if i got eight years of like math phds and then [ __ ] was writing my thesis oh somebody said elegant but painfully slow on library it doesn't matter because the other one was an efficient i would rather have it be legible so the other people i work with can understand yeah i mean they're both kind of confusing though like i racked my brains and still failed to understand and how in the world does this work starting from now i can't sleep because of that right i don't care all right bro just pick one i would i personally i would go with this but if you want to go the other one go with the other one uh but i'll be right back shortly okay let's let's try this one so are you following me up i should be following you just give me one second i'm gonna come back okay so guys you might not be able to see a little bit of what's happening but i'll talk it through so you guys keep in in the loop of what i'm doing so right now we've got uh see han kyo says that is real pair programming yeah 100 percent um and demingo says your manager would never approve for the easier one trust me when i say the truth is that when it comes to efficiency um the senior devs are going to be quite good sometimes with understanding how it works so they'll really dive in but some like sometimes truth is like it really depends like you might it doesn't really get it doesn't really really get like that like they don't really check or they're not going to really dive in as i like that but this is just dive into it so we got i'm going to refactor this right so i'm going to copy the snippet they had so it's variable group by okay so this is nasty i'm going to change this up so firstly never use var anymore it's old um we don't want that so const group by we don't need this function keyword we're gonna make it an arrow yes six style and then here we don't need this we can make that an arrow so boom then we've got the return now the return here we can actually get rid of because it's it's implicit so what we can say is we can get rid of the return get rid of these curly braces and get rid of this one and now we've got a simpler line of code here so i'm going to quickly format this so i'm going to say format document does it work no my format is not working okay anyway so we're going to say xs dot reduce it's going to return this and then this one will return v at the end of it so v is rv sorry so rv is this one this has to be this because it's two lines of code so now um we're gonna say xs.org what is xs why is it calling it access um xs data no group by xs okay so this i mean i don't like that i think let's just call it the array so you pass in an array and the key that you're trying to group by in this case so this is what they had on the on their site okay so i'm just going to copy and paste it down here so you can see it this is an example of what they had so boom so you can see like this is an example of the code snippet that they had underneath when they were calling it so you guys can see oh [ __ ] okay all right so you guys can see now oh my god damn it what am i doing close this up yeah and i've opened some annoying stuff okay so now you can see if i go ahead and comment this forward like that now you see oh i appreciate that joseph says seriously you guys deserve youtube what i appreciate that man um we're just having fun with this stuff so console.log group by okay so what i'm going to do is i'm just going to try it let's go ahead and see what outputs right because that's the best way you can do this stuff honestly like okay here what they're doing is they're passing an array as the first argument so that gets passed in here and then they're saying past in the length right and then what's happening is it's getting i mean i guess it's grouping based on this they don't actually show what the original thing is oh they do show what the original thing is then let me see if i can get that for you guys so length is now one that they gave was phase one step two okay they don't even use that example but let's go ahead and say this r1 we don't have length so if we don't have length then it would be go ahead and pause also three one two event is the key they want to group yeah i know so that's why i understand the length is the key they want to group it by an example but in our example our keys dynamic so you see now we're in a bit of a pickle because our key is going to be dynamic based on what you're looping through inside the array so now we have an issue because we don't ah damn it because now our key is not going to be okay so fuzzy this isn't the correct this isn't the correct grouping function we need oh [ __ ] reason being is because this will take an array and then imagine the key was like uh the key was length um because our key is dynamic you see this the key is dynamic but they're one it would be length and then they're grouping but no wait no that's not correct is it does it mean or is it correct because in their example they don't do it like that [ __ ] okay users by color that's pretty much what we need we just need the equivalent of that array so let's actually see this we can use okay to iterate over every item got it if it doesn't reach my group by unique keys holy [ __ ] this looks awfully readable bro oh yeah this actually i've i i sent some good hope on this one hey what's good like you guys deserve a youtuber this had deja vu of this exact moment wow really literally i had the screens open everything you wearing the same top as well holy crap um make sure you have a deja vu about a eight figure day so we can quickly [ __ ] take that exactly pretend acc color grouping okay so we're okay so greases by color value grouping dude this looks really really promising i swear because we're group they're grouping by color we're just grouping by day so wherever it says color it's just date first composing color right so users by color uhhuh and we're doing it by date which is not what i mean it's like sounds like it's the [ __ ] this works bro i'm telling you but the key is color our key is see the way we've got a weird situation because our key is unique every time oh bro we should see this no no we did it in a dumb way honestly we should have a key we should have two keys i just think we did it in a funny way i think we should change our data structure yeah so so here we should maybe have it as date why the [ __ ] did i not think about that that sounds very like obvious now that i look at it i'm like that looks like a horrible data structure yeah so it should be like this it should be something like date and then it should have uh date as uh and then we should say and no need for that uh bracket at the here right like i need for that yeah uhhuh and this one would be this looks way cleaner bro i just feel like i took a shower after like weeks i know damn bro look at you being [ __ ] efficient i'm just that was dope man [Laughter] dude this peer programming is [ __ ] oh man that was sick that's clean oh thick all right so now we've got um so now we need to firstly modify our get dates and get them out so let's quickly fix that before because that's gonna be so much easier now the code is going to be so much readable instead of this object that keys obfuscated garbage now we just say data and we say pair dot date oh my god that's so much better holy [ __ ] see guys this is a pure example of where like you come come up with breakthroughs and now the next time this comes up we probably will realize that's clean that's clean nice so now we can check our code and that should be clean as squeaky clean as well dude i'm enjoying myself on this live stream bro dude that was that was genius play man that's [ __ ] clean now yeah all right it works it does yep oh [ __ ] in one try yeah one try and the data structure's good now it's a good data structure yeah we had some crazy [ __ ] why did we do that [ __ ] and i'm in keys okay so now our group buy will work oh this looks so clean now we can do group by guys that's an example as well if you see some code on stack overflow like or something that works it can but it doesn't go by your data structure you can't fit in it's a quick sometimes it's a clear indicator of like maybe your code is wrong right um one second okay so now we've got the group by and here what we're gonna do is we're gonna go ahead and say how is sienna who's sienna oh that's my niece the one that was one [ __ ] that is so cute that's a beautiful name that's a beautiful name yeah she's sienna and then we've got my other sister's uh giving briefs i've given birth soon as well so yeah thank you shiva as well appreciate the comments on that damn you got a baby congrats on you gotta be spreading misinformation some people were messaging on instagram i was like it's not my baby i mean i'm cool walks in i'm like wait what um okay so do you want to use this piece of code bro because this piece of code looks very very simple unless there's some reason to not use this color code because i've actually used something similar to this before the the ugly group buy one it is a good one because it's got a reduce in it like uh it's just it looks ugly um oh david johnson in the house i appreciate that dude and i got your message by the way i'm gonna i'll get back to you um a second man look forward to that and there's a group by so now what i'm gonna do is i'm gonna go ahead and do console.log and i'm gonna say the grouped values are and then here i'll say hey for the dog nice your group bye and then i'm going to go ahead and say i'm going to pass in the data what do you mean my break was quite rewarding what does that mean aussie's break was quite rewarding i i don't know yeah sick all right what are you working on so now i'm just going to logging it so now look how clean this is dude group by data and based on the date key oh is it working i mean i'm hoping so okay um okay so now i'm gonna go ahead and we're gonna check it so you should see the group values are something let's go ahead and check it so oh okay okay that's what i'm talking about that's all right that's clean holy [ __ ] that's cool oh [ __ ] son that's dope man all the october 27th one or oh that's satisfying very very satisfying right now what we need to do is we need to modify it a little bit so that it it changes oh david says you stepped out for a bit and came back with some clear head to fix the bug yeah there we go yeah i've been doing a lot of that lately i just walk away from things and then i come back and i'm like all right let's go sometimes you just need like a little a little bit of time timeline oh man firebase just uploaded another video okay so okay so now we're gonna go ahead and do uh just cuz just discovered you guys hello from spring spain what's up craig yo yo yo so now we've got the three dates uh oh sorry we got the array with the date and the amount the amounts in so now what we need to do is we actually need to like um we need to transform group by what is returned by from group by into um into so so it has the same keys can you do you want to write like a comment like a literal yeah what it would look like like a literal example exactly so let's go ahead and do that so i'm going to go ahead and just copy this out and i will show you guys hopefully what we can i can see right now so i don't know if this will look decent on the screen but you guys can see now this is my this was what was console logged on on chrome so now we pretty much have like an array and just [ __ ] that bit we don't need that okay so now imagine this is our array right so we've got an array and it's got the keys are october 27th october 28th and october 29th and then each one has a value so this one has two inside of it so it had this and add some stuff inside and the second one i expanded so we can see that just as an example so you've got the array of three so what we want is we need to transform this into something like this so that way like imagine this array of three right i don't want this i just won because the dates are the same we know that right so we just want two add three at four is nine right hold on hold on what what so now what we want is because the key basically we got the grouping functionality correct it grouped all the ones with 28th of october right oh you want that amount summed up yeah we just want to sum so we won't let you want to replace this okay okay so yeah that's what i was going to say you just want the value to actually not be an array you want the value to just be the sum of amount just one number yeah exactly yeah so somebody goes check if oh somebody actually gave a making that even more obfuscated than it is but okay yeah they say push in and then we're gonna say an rv plus equal value amount so plus equal value amount i think we should do it as a separate function i think we should do it as a separate function dude like that that piece of code is already a bottleneck i don't wanna yeah so so because what you can do then is it's very clear then that you've got functional pieces of code you one you'll know where things break if you change them and two you can always refactor and get the code so damn clean at the end of it but the your first primary focus should be to get that they're standing in polarity right yeah exactly so um oh nice austin brian kabanda says uh it type of program is the best thing that happened to youtube here from the philippines let's go let's go love that right so the group values are okay so now we've got that down so now what we want to do is get this functional bit done so it'd be 9 500 and then these will also be numbers as well so whatever this is like 2 000 this one would be like something like 4 000. so that's the goal right we're going to get from this to this all right so what we're going to do is we're going to pass this as an argument and we want the function to return this okay that's what we're going to kind of treat it as um and then i think dude this is awesome man we're actually going through some serious problem solving right now yep like it's sick yeah so this i think this is really useful for everyone so group by this is a great problem to go through because there's so much data structure crap happening here it's insane exactly exactly and then once we get it down it'll you'll see guys how you go through this messy process and then the end result is so damn clean and then you'll debunk that myth of oh that's it's not written the first time like that right like so it will be help you out so now we're gonna say it's const and we're gonna call this one uh transform or data or transform data as in um let's just say transform day and it takes an array so it will take the group as we're going to call it it takes the group data so we'll take the group data and we're going to assume the group data is in this structure and then we're going to say the grouped data is and by the way guys this is an object right object dot entries and this will give you a array of key and value pairs so object entries let's just double check object or entries i think it gives you a key value pairs back object entries yeah it gives you key value players i'm showing it on my screen oh sick yeah so it gives you key value pairs back so what we should have is object.entries.map and then what we want to do is map through every single entry and all four each sorry you mean you could do it for each oh you could do four each so hold on what are you doing you're you're getting um so now what i want to do is i want to loop through each of these what will this give you can like this will give you what so this should give you october 27 2020 and then it give you um uh as as that as the key and then the value would be the array of this array here so like this one here okay so let me actually i'm just going to copy paste that yeah and and this is well so here's the thing is this uh considered a string what is this considered when it gives you the key dude maybe we should log it here and do object entries over this yeah yeah because we don't know what that object type is yeah is it because we don't know yeah exactly then group values i don't think it's saved yet oh no it hasn't saved on your side okay so okay so it gives how do i turn off all these errors again these yellow and red errors there's some kind of thing you can do right you can click on custom get rid of errors where's custom uh okay so you make it a bit bigger i'll click that little x you see a little x with 106. uhhuh i clicked it um um oh that little drop down arrow so go back that's a little carrot you see the little carrot down with carrot yep and then no that's no um make it a bit wider your screen so maybe just go full screen for a sec um and then you should see default levels there like default levels get rid of error and warnings um so now what we're going to do is i realized that i looked at the live stream and i was like this dude for a second i was like i was like downhill sharika you know when he he's on the court oh i realized my camera was way different oh you mean the seer yeah yeah oh yeah yeah yeah it's all the young students they have they have a tendency to go really low on camera yeah they're just like sleeping so now the new data structure is going to be an array okay so it's an array it gives you back where the first element of that array is the key the second element of that array is the uh is the array of data structure okay so so cause if you click into the group values r and that will make sense to everyone yeah so you should see that one and you see the first element of that array so in the position zero is the key yep and then position value one is that one yeah so what we can do now is we could that's cool that's actually pretty usable um you can just go into the value and then sum up all the you can go into this right and then sum up all the amounts yeah but i'm just thinking do we create a new array and then like go through and push the key with the consolidated value as a key value parent to a new array and then we kind of go through it all like that or do we transform the existing one you know what i mean i think i think honestly you should write a function that like yeah transform the existing um because it goes against the immutability scope okay that's fine so just make a make a new one or whatever like it's not gonna be that big of a deal the main thing is we just need array one to just sum up to one number so we just need a function that can go into an array of objects and sum up the values okay so it's a transformed array equals this right obviously you did get it right dude but you got the the positioning one last time so but it's an array of arrays yeah so um okay so then it'll be the same [ __ ] yeah okay so now what we're gonna do is we're gonna say grouped data so grouped data got four each we'll go through every single one and then we're gonna see say for every single um what did we do last time we said for every single you just say for every single row or no for every single date what did we call it we didn't say tuple did we we said entry no i mean what what did we say last time i think i can't remember um pair for the what are you what are you talking about bro uh oh so demon grades oh you can create a third value called total in the array that could equal a reduced array value so we could do that yeah that's pretty cool too oh yeah yeah right yeah that's what i was saying dude yes i didn't there's a group there for each pair yeah sorry that's good yeah we want to basically go ahead and say um let's sum up the peridot amount yeah so we're going to say pair one which is which refers to the array of the data points or the array of amounts oh i see yeah and then we say map so how do we bubble up though hold on what are you so so if you expand the segment yes look at uh so but oh [ __ ] but you can't index but it's a key so you have to index it with the word amount yeah so go into one with two values so not not one with uh so go into a different one which has more than one value so that one yeah so so what we're doing is we're saying pair one gets us this what gets us what you said gets us this so it gets us the array of three so pair one would return an array of three at this point oh so you're okay so you're now calling something else pair you're like deciding to call this a pair yeah why don't you just why don't you call that entry because that's confusing from our earlier verbiage of like pair date and paramount to just call it an entry that makes it very clear what it is okay so there's a group there for each entry so entry one which is entry one is yeah the thing that holds all the amounts yeah so it would be no but if we thought it was the amount so if you click it it's actually an object yeah i understand that it's an object that has um it's a ray of keys right array of objects yes there's an array of objects that holds all the rounds of date and amount so now we need to go and say error dot map right we can say const total equals entry.map and we can say for every single uh now we need another word so we can save every single entry one amount or okay every single tube will get the two points so now you can say pair if you want because it's now it's back to date and amount so that is how we called a pair oh yeah yeah true true okay now it makes sense yeah so now we can say pair okay so it comes entry pair amount okay so now we say paramount and that should get us the total and then what we want to do is we want to say our transformed array should have transformed oops transformed array we're going to say dot push and we're going to push entry 0 for the key and we're going to actually push this in as a um if we push in as an object or yes as an object right so we'll say date as entry zero and then the amount would be the total like that and this should are you not are you not just appending it to this existing array as a third value no no so where i'm actually solving something as a v1 create an empty array and then we're pushing the values in as we figure them out okay cool let's check it out now now guys i know that there could be like efficiency things and stuff but we'll touch that after so um and then what we're going to do is we're going to say transform data we're going to call that as another console log so we're going to say down here we're going to say console.log the total grouped values group values and i'm going to say alien this is just random sure i'm gonna say transform data and i'm gonna pass in the group by data so grouped by this okay we're going to save it oh [ __ ] dude we done object got entries we were assuming that was object.entries which means that now we need to do object.entries to our group data like this here because that's not a function okay so now it should be correct it should be what total group values let's see it's looking clean so far amount two thousand amount twenty five hundred three thirty five hundred forty five hundred okay so it's kind of but it's not it's not perfect so right now it's just pushing it's mapping and it's pushing them in but we want them to actually add up so oh so now we need to reduce rather than a map right yeah so this is what we need to reduce as opposed to a map yeah reduce will sum it up right so here we need to reduce yeah so let me just double check the syntax for reduce because i always forget this [ __ ] reduce js um this is cool man yeah so now now okay now we've got that so now for the reduce we just go ahead and say hold on let me try this too because i want to pick up so reduce gives you a total and every item right so in this case if we did a reduce you get a total like an accumulator and and you get the pair total yeah yeah exactly that's what i was thinking and then you're gonna do uh uh then you say total plus or equal to the paramount so it will basically accumulate the value are you sure about that because i'm looking at something slightly different than that so you're looking at uh reduce a b and then they're doing oh they're doing some they're doing some weird [ __ ] one's like that's that's some nested object thing they're doing x must be that's different man that's like a an object way of doing it because there's something reducing an array of objects okay cool is this you have some kind of total and then what you do is you initialize the total as the second argument so you say the total starts at zero and then the pair is the individual that's a very that's a very cleanly written thing because yeah this is our accumulator this is what we're summing up uh increment the accumulator by the thing that we're summing up uh yeah wait hold on somebody said you don't need the equal devin gray so go use it okay then do it i mean we can try it without the equal but i would i always okay let's just try it if if it works then it works if it doesn't just put the equal uh you need to save it on your side i did just did hey hey let's go oh dude that's sick okay so that's pretty cool and now wait hold on the accumulator is zero by default so you also don't probably need that yeah somebody said that yesterday so i didn't actually i actually had no idea that i always used to play reason why i always put in is because it's kind of a good muscle memory so that way even when you're doing a raisin stuff ah [ __ ] it it did something weird dude it just turned it all i don't know what yeah so you see like because now it it thought it doesn't know remember javascript's weakly typed so it's going to try and guess the date about types she gets that wrong whereas if you put a zero it knows that it's a number and it knows that plus two that number is it is gonna be a number so christie says it's not zero by default it uses the first item as the accumulator if you don't pass one in oh okay justin uh for all of you interested in all the stuff probably read the book the weird parts of javascript yeah okay so that's sick so that's really good now that's really simple i mean we're pretty much done dude now we just got to plot it now we do an even cooler thing right now what we do is we can plot this but then what we do is we connect it to our form and we apply the transform on and as in we apply the transform as inside of a use effect and that way it would always transform the data every time something's added yep right that's jack so let's get rid of this comment now because we're good um the console logs we can keep for a bit and now what we can double check is everything seems to be working still uh as it is um but now what we should see is we want to apply the um okay so now we want to do uh so currently get dates and get amounts currently just runs off of data right but instead what we can do is we can actually make it take a data object instead or we can yeah let's make it let's make it actually a smarter function so it takes a data and then and then what we can do is we can pass in whatever our data is um or in this case we should call it data set because our our variable is called there um and then what we can say is rather than this we can go ahead and do okay dude to make it simple yeah i'll show you a trick now so um trying to think what's the nicest way of doing this because you see you don't want this ugly code everywhere you don't want this transform data complexity somewhere you want to kind of wrap it in a user effect so what we can do is the data gets pulled from here right there so what we can now say is this create a use effect whereby the dependency is data so every time data changes this code runs yeah and then we can say is every time data some information comes into data we want to go ahead and do we can actually have another piece of state called transform data which you get set to so we could have the raw data and then we can have the transform data we'll see yeah my brain hurts let's just try this way so let's say every time data changes what we want to do is set the data to the transformed data so but that's going to cause an infinite loop okay yeah so what would because then the date will change which will cause it to retrigger which will cause the change so instead now what we're going to do is we're going to say const transform data and then we're going to say set transform there hold on here we'll say one second so we're using we're making transform data a piece of state yeah so so you enter a value every time every time i push a value like every time i add a gig transform data will do its thing uh yeah and then it will it will get transformed here by this so we'll say set transform data got it it needs to happen every single time okay that makes a ton of sense yeah uh set transform day at this um that's clean that's really clean yeah and now what we can say is those helper functions i'm stepping on a protein shake right now that reminds me do i need to have mine uh transformed jacked i'm almost at my water goals my protein goals are almost met today yeah go go grab water what's up if you don't have water go grab water oh i got water i've got water okay so now what we're gonna do is we're gonna go to and we're gonna say oh logan says well you guys are streaming late let's go nice so set transform there now our helper function should pull from that new one and that means that the helper function is the one that's connected to the actual thing so if we save it now everything should be good and it should mean that what we see on our on a graph should be the correct value that's what i'm talking about dude dude this is awesome is uh well let me finish eating first let me go ahead and spam a day and we should see that value spike that's what i was gonna say it should actually change it i'm psyched as [ __ ] i'm gonna add like a bunch of days to this thing so we should see the middle date go crazy nice that is sick man wait it worked yeah um oh because you kept adding it to the same yeah so it accumulates they said on that day you made thirty one thousand thirty one and a half thousand i mean we need to get rid of k because k right now bro look i just added multiple different days and look it added a point for all of them oh you added different days oh nice yeah hell yeah bro that looks great yeah and dude and every time now you have any sort of um anytime you have the the the um wait is it sorting by day right now oh okay so it's not showing my day that's a good shout out yeah so solo says sort by date that's a very good suggestion actually um okay that's a very good oh yeah because it's october 23rd and october 27th is all the way in the end and 29th is the first one yeah dude this is pretty damn cool man because now we've got a really slick piece of code and guys think of it this way now because we've got this transform data and normal data this is really cool and this is also something people have to do quite often when it comes to charting and a lot of the data types look extremely similar to this and a lot of people are trying to make apps with a chart yep exactly and you will run into this and i have ran into this before and my code wasn't this elegant so now this is actually pretty nice this solution but um but before it was kind of messy but you have to do some like you know interesting data type stuff and also this is one of the best exercises you could possibly do for learning data types because you're going to run into scenarios where you've got an array inside of another array and you've got some other crazy stuff happening and and this is a really good way of mastering that you got to get dirty before you get clean exactly like the end result you'll be like wow that code is clean but the the the code to get there would have been a bit messy you know um okay so settle and use effects are clean dude it's so clean all right now how do i okay so before we connect it to a form we just need to sort the dates yeah so we need to sort the dates and then we need to connect the form and then hook into firebase is easy so quick question hold on one second the thing that's being plotted where's our data being stored so right now we have hot data so we will map our input stuff to the hot data so okay i got a question so if it's an array of um objects we can just sort this array by um by by date right like each each of the items in this array we can sort it with this so remember for efficiency you don't want to sort this entire data instead if we if we sort the transform dataset there's much less to go through uhhuh because they would l they would be grouped so you'd only have that date come up once i agree okay that makes sense makes sense so here when we do the set transform data we're going to need an intermediate step which sorts before that or we can kind of do it inside of transform data so that's a good chat here maybe um so we actually group the data here and then we need to do some kind of uh group by moment already on it bro let's go sorted array uh dot sort oh they have a saw um sort by date moment for sorter we can use low dash interesting so this looks like a pretty clean um solution you're taking an array um okay yo this is what do you think about this what i'm highlighting is this going to be useful or no using low dash so i think we can do it without low dash okay but one case we can do it with low dash um because now javascript has a sort moment yeah if takes the usual moment input uh okay let's let's try i've got i've got an approach here which is pretty sick and this i've sent you a slack this also would work i imagine the uh unix thing yeah yeah so i'm on the same the same article as you so figured so so but you see that the one underneath there uses moment so rather than because we don't want the unix we want to actually use um uh we're just using um the what's it called but ours is a bit different dude because we need we've got a key involved so the one underneath it the diff i think maybe that one's better because remember if we use unix it's going to take milliseconds into account but i mean we lost the milliseconds earlier anyway so i guess okay so then the diff would work the diff should work yeah so here we should be able to say uh consorted array let's just say sort of equals array. and then our data structure is okay our data structure is like date and amount okay so when we say array dot so our array is transformed array so we say transformed array dot sort a and b and then uh if you guys don't know what a sort a and b or something like or comparison is i'll definitely check them out but what it does is it takes like the first value and the second value in the array and then you can do some kind of comparison and then it will do and then it would the winner would get the first place second will get a second then you'll go to the second and third and it will basically go through the entire range and sort the array out like it's very clever does it yeah in this case we've got a we're gonna say a dot eight so instead we're gonna do a date maybe like this [ __ ] is that oh i see because we've got we've actually got um that makes sense and then we we could return the sorted array instead of the transformer dude i love how this is such a mind [ __ ] if you're a beginner you would be doing like a dot date dot diff and to know that if you did dot date dot diff it would try to evaluate the date.diff first before it like doing this is like hilarious it would man it really would oh okay remember we changed it to a string when we done transform right i was thinking that well we did format sorry when we did the format so now we need to change it back to moment.js to do the diff right so dot moment here or something dot moment like that dot diff then i think so can you do how do you undo it no i think you would do moment like moments i'm taking the date which is a string calling moment on it or is it the other way is it does you call the moment function i think people i think you call moment like that maybe uh you're you're right you're you're right you're right you're right maybe and then this one we can try it for this moment dude my copy pasting skills are [ __ ] helping me out from high school when i used to plagiarize my way through finishing papers i show you man okay wait one sec maybe for the record i never actually played your eyes just saying dude it [ __ ] worked it worked let's go i love that like we're doing such a complicated thing and there's such little thinking involved it's kind of ridiculous i know man sick wow that is phenomenal yeah and what we need to do for this to be written out in a pretty way is um what are you thinking using the moment library to to languageify the dates what is it called englishify so in transform data now we can actually do it very nicely yeah it's super easy now dude this is sick though this is so sick it is sick it is clean man so now entry zero is actually the key that we're trying to fix now so we can basically go ahead and do moment.format on this and we can change that to wherever we want regardless of what it comes in as so the end result could be moment.format and then here the format just find a nice format dude so uh a format that we like so i guess like you would want something very light like like yeah you know just just literally the numbers like is in like three four twenty something what you would want is it to say october somewhere and then just 22 23 24 like that like maybe oh that that's gonna be maybe yeah no no no but we there's probably something in the graphs in the graph options where you could just yeah for that we could do like a xaxis label or like a yeah i know you mean like a uh like a xaxis label i'm sure there's a way to just do xaxis label you just write october there and then for the days it should just be the dates yeah so where's our get dates oh wait hold on wait no but right now we're trying to do this let's get the format done first and then we'll move on to that a bit okay go ahead so moment format a simple date we literally just won the simple uh what is the simple one this date formats so oh yeah l is l is what we're looking for i think yeah just l so moment of format l that should do it really i'll give you just a number i'll give you a number there you go it's an american sort of positioning because you've got the the month first then you oh no but i just want 22. i don't even want you know what i mean i don't want the whole thing i just want 22 and then 23 and 24 not 10 20 to 20 20. oh you can do that you can do it so you could say as in like you want 22 and then so if you only want the day i think it's just d i think yeah try it i think it's it's where are you doing it and get dates or get transformed okay got it i think it's dd double d's i like it let's do it i think that that's actually pretty cool too oh [ __ ] thursday wednesday oh [ __ ] yeah but still now that's gonna get insanely big that's the problem i kind of like it like this but i i'm just saying just a number like 22 23 24 25. somebody said dd ods you guys know what i'm talking about dunkin donuts let's go oh [ __ ] okay but now it's now it's messed up because i thought it already broke oh my goodness um now the sorted array i mean you could sort afterwards very easily now you could just do if a date if a i mean okay the the question is is that are we gonna eventually have this only by month by month i guess you would right otherwise it would just get insanely big yeah yeah yeah yeah just just month by month we'll be able to add a drop down menu at the top or something where you can some kind of swipeable you know like swipe through the months or something yeah swipe through the month something like that exactly and like we would just have it so it will say october right here on the xaxis yeah so now we don't need moment passing here because it's going to be just a number comparison is this number bigger than that number i said and that should do that for us so now we should have the sorted graph i hope no okay no no because we're doing diff sorry we don't need that now we can say a def minus b def and that should work i hope i think i should do it should check which one's bigger let's go ahead and check yeah it works nice sick okay um no hold on let me actually see how like butler does it i think that would be cool dude if you had like a month view so how putler does it is like they don't even have it daily it's like every few days so they just have like october 1st and then october 10th and october 19th and october 28th on the xaxis but i don't care about that we don't need that yeah because ours would only be the the problem that we have right now is that ours would be like spread like they would be spread out so you could have something on that 28th of october your next job might be two weeks that you make some income or a week later and you've crossed over the month um what if we had a bar chart that had a line going through it is there a bar chart with the line going through it let's keep because now the data structure is set for the line no i mean like i mean is there one that like literally just puts a bar here and everything else is the same because i'm looking at butler and they have this exact line one that we got but like it just also has a bar right here so then you can actually see oh this is the day that the income was um we can i mean i think so maybe like it's very clear though like because it's literally like an increase you know it and i i guess i really like my bars like okay let me just show you in slack so you can take a look at what i'm talking about all right okay okay so all right this is all i'm talking about i actually decided to just put it up here oh i see okay so that's like really cool but that's like uh that's a trend that's not um that's you see the actual the number is actually the data is the the bar and the trend is the line okay so we would have to pretty much change a lot of things right for it yeah we'd have to do a bar and then have some see if it's got trend line functionality or something all right no it's fine um but the yaxis no the xaxis stuff would be interesting now to see um also we need to get rid of this k do we want it in k or do we not in this case i say no because i like k because what if like you've only made like some people in most cases you only made like 200 the time or it could be three grand okay remove it that's fine unless your the income that you're making is always 10 grand 15 grand 14 grand yeah no that's fine you can just remove it i think here we see is it no maybe you just remove the yaxis surface yeah just add a xaxis label where the [ __ ] is it though because it says yaxis has a label but i don't see the label or the label uh yx is the label oh it's a dollar yeah yeah but but then that's wait hold on that's everywhere though oh you you mean like um a legend hold on hold on one second yes i did mean a legend give me one second hold on i'm gonna unfollow you let's go here and i'm gonna try i'm gonna try something and let's see if that looks too ugly or not so i'm just gonna add a xaxis label and um i'm gonna make that that one's in the chat what's up i'm just gonna make it oct let's see what that looks like all right next uh in front of every number what the [ __ ] yeah you've done that to the so how why is a dollar putting it in front instead of ahead of it you know what i mean like the dollar is doing the right thing but oct is doing some funky funky crap but dude i that's not i don't think that's a good approach because this is a hard value that will be here i understand i understand i'm i this would be whatever the value the date picker or whatever we pick from but yeah okay what what do you want to do for this because i think i think we should just have the date itself rather than dd okay so maybe having format like it looks ugly bro like it looks really ugly you mean when we had it like like the whole thing right 10 20 20 20 10 slash 20 i don't think we need the 20 20 but i think something like 10 10 22. yeah okay it's a clean middle ground okay let's see that yeah so something like which would be okay i could try that try that one ed forward slash mmm you can do that and then we need to do this moment oh [ __ ] was this moment. and then we say dot death uh moment uh i think that's good because now we're doing compression on we got we've got a syntax error oh [ __ ] x axis is legal wait what's going on something's broken um it says 59. oh um there we go you just weren't closing the parentheses dude i'm here to close your parentheses bro marabon is there to complete your sentences i'm there to close your parentheses that's it boom that's good man that looks pretty good that looks no no okay i mean you we have to flip it because this is uk version of it which it's giving me a cause this is the mm dd yeah it's still oh [ __ ] okay so we've got a problem it formatted it but the diff isn't working no it's working bro it's it's fine it's perfect you're freaking out for no reason oh now it is on the other way it wasn't working no [ __ ] yeah yeah yeah okay not bad not bad that actually looks pretty clean i'll take that uh also what about when i hover over it can it give me like a little thing huh uh yeah so tool tip i think is what you're like some kind of tooltips thing right yes yes yes yes if we can get access to the element we could do whatever we want with it okay before before we do tool tip why don't we attach the form so then when we actually submit the form it adds a new date on the calendar or on the line chart yeah let's do it so that'll be sick we see it in dynamic as well okay so in that case now we this is our our data structure that we expect you know so now what we can do is we can have it so because when you when you submit it's just going to be moment format lo so what we do is we say we go to add gig and we say description is description amount is mount and description description okay oh the gigs oh yeah oops um now we can say here we set the gigs but we actually want to set the data okay so let's leave the gigs there from for now we don't care about this one instead let's just say set data set data to be whatever the data currently is so spread the data plus the date which is moment dot format and we're going to keep our format log because we did everything based on that and then we'll say this needs to be an object no we need to say format keep web is in the data and then have a object here which is date and there was a amount okay so amount is amount okay thing and set description okay that should actually if that works now then it should actually be doing it oh looks like something worked okay so now freelance and then they say enter a money made say like a huge amount so 20 000 ad gig oh snap okay it did it have a try oh whoa whoa you see this it did 2 000 so why is it added you added a string of 2 million for me added a string of 2 million 600 so oh because yeah it added as a string wait hold on what the [ __ ] yeah because yeah so oh but then what was the so we can we can debug it we can say the amount it just keeps adding it to as a string to the current like values it doesn't actually increment there's something [ __ ] up going on with the yaxis that's right that's right it's it's just literally adding it as a string to the final one so now it should be good so if we say freelance because yes you'll be careful with that um like that yeah okay there we go there we go that's why yeah that was a good catch yeah that's sick man dude do like five grand and you'll see a spike all right or 15 grand 15 grand sorry i mean no no let's just test five grand today and we will do uh coding boom right there on the 29th look at that that's it it's coming out that's sick nice and dude now we have a data structure we have um the way we expect that to be pushed in everything we have the app flow working it's super easy at this point to actually go ahead and connect that to firebase get everything dynamically shifting on there and keep it on there oh [ __ ] then we can actually like use this app on our phone or any device actually at that point probably because if it's hosted on firebase then i can just log in so what we what we could do as a sort of as uh the next natural sort of step for this is having user authentication yeah which would put you to this page right yeah and then if you're if you're authenticated you'll come if not you go to a login page and then what we can say is and then your data set would be pulled from firebase based on your user id and then that way when you're in your account you would only see your stats when i'm in my account i'll see my stats that's perfect that's perfect that's exactly what we want so like but do you think by the next um stream we do we'll actually start being able to use it on our phone like we'll actually be able to go and start logging my income and be able to see i think itself i think once we get the authentication done yeah i think yeah so authentication is going to require two things we're going to need navigation inside of our app uhhuh so you think you think you think so so you don't think we will be able to get that up and running in our next live stream but the stream after that so for example we're going monday thursday um yeah i think i think well track how's your next week looking like are you uh booked up next week or can we go live maybe more time so then we can make faster progress on it monday thursday 100 no tuesday's coaching call got it yeah uh potentially wednesday we can go live again as well okay but we've got a challenge now of authentication in typical react apps pretty easy we just go ahead and we do it um trying to get my phone basis error while being property d of a view mention okay dude just um just say ignore on it or something like do that like just um swipe it down or something and it just goes away and you can actually just use it like i'm able to now use it on my phone oh [ __ ] nice we got a five pound donation a five euro donation thanks for being my practical teachers i'm still new to programming and you guys make it so much fun oh [ __ ] thank you goodbye thank you bro appreciate it dude i really appreciate that so um so this next so firstly is clean up this stuff so few things happening that are funny one of them is that i think it's like yeah not not behaving the right way on a on a phone okay maybe it is um no it's also it's like it's not sorted and then it's also doing some funny things for example let me um so remember this tunnel it may not be the latest um no it's the latest because it's when i type in stuff it actually pops it up so it's connected to the form but like look at how it's uh not sorted it's possible it could be not the latest i'll try again let me try again sorry so my one right now is not the latest because i refreshed and then i click tunnel again and then i scanned it and then mine's downloading oh yeah it just keeps doing some funky stuff so if i say abc and then okay so it's not so that's one and then one two okay ah i think i know why actually this is why it's deprecated um moment.js is deprecated because the dates on format aren't supported in every browser oh [ __ ] i read it somewhere before and which means that in this case moment.js is support but the diff isn't working huh so the actual the actual values are working dude if i write testing and if i do like 20 or 20 000 yeah that works but it's all like sort the sorting is off and stuff like that so the sawing is off so so we need to fix the sorting um month month later okay so but beyond that anything else i think that the the key the keyboard not disappearing is another bug that's like a sort of we can fix that afterwards um very minor issue that one um i mean dude what i'm excited about is authentication firebase i can even use it from my computer yeah or i can just go on my phone and go on google and just go to whatever.com and log my daily income i just care about being able to log my daily income that would be sick right now this app is essentially just a react up it's not really a fullon react i mean it is react native because this graph is only react native um i'll take that back it's reactive yeah um yeah you can deploy this app too uh web though no okay dope so you want to let's make progress on it on on upcoming monday yeah let's go for so next goes for the next stream are react navigation yep um so we have some kind of navigation aspect and what we should do is we should commit this to a a repo that's between you and i uhhuh and then that way we can sort of like push the code have some kind of source control over it let's do it you have access to my terminal uh let me create a github i don't think i've got your organization's epa you should you should have access to my organization okay yeah yeah i'll make it private for now um nope so oh if you make it however public um you can make it public right like is there anything private about this i mean they're not going to be able to er they'll be a pull request if anything so yeah that's okay make it public so we'll call this um unless the only thing we code in here are like passwords from our most secure website and it's just like a set of strings like one array of uh array that's just called sonny's passwords just all your passwords in here like [ __ ] that slip so we have income tracking app um yes let's do that income tracking now okay i just want to check something get status what's that laptop yes package there's a lot of files here that aren't going to get committed with me creating the expo app okay so that was part of it okay let's check in um okay so income tracking app yeah repo repo name yeah income dash tracking okay in public great repo yeah and then if you just open up the tumblr they can see what i'm doing um a glogging remote add that [ __ ] to do js there we go and then i'm going to say get add or get stairs okay save first i will just say um freelance developer income tracker or something let's say i did graph nice just push that bad boy oh origin master bruh just do good push and let me check let me check let me check uh refresh hey there we go yeah it's there yeah all right let's uh follow this link open here it is y'all if you want here's the url doing a quick url reveal now i'm gonna hide it boom if you guys want to use this you can go ahead and use it wait hold on there's nothing in here uh refresh oh wait a second i just have yeah refresh no no it's not refresh it's i just have to expand it if i don't expand it oh it says view code yeah yeah so nice this is awesome we got the whole thing here you guys can go to app.js to see all the code that we wrote everything is here for your use and enjoyment yeah and we left the console logs all that stuff in it's it's nonrefactored like code so it's pretty much like at the point we left it so you guys can play with it that's it oh [ __ ] we forgot to promote the webinar oh whatever it's all good there's gonna be a webinar coming up this sunday if you're on our email list or whatever you'll be able to get access to it yeah make sure you guys are there because it's going to be a value drop and we're going to talk about how you can pretty much push all of your react capabilities in 90 days guys that webinar is gonna be sick super jampacked with value we're gonna be giving it all um our all it is going to be exclusive and not on youtube it'll also be in a way where you can jump on and communicate with us so if you want that then make sure you show up on sunday the only way you'll get a reminder is if you're on our email list if you're not on our email let's just go to cleverprogrammer.com pop in your email somewhere and you'll be good to go yeah exactly right now the link in the description is for the course so we actually will update that for next time and we'll have it yeah yeah and of course if you guys want to just jump into our course which is the best course on the planet when it comes to development then go ahead and feel free to do that this course will teach you everything that we're talking about here and much much much more it's called profit with javascript and the number one goal of this course is to help you make a killing with javascript exactly and guys all the things we talked about today like those data structures all those like kind of you know those kind of problem solving things that you get stuck in and you might be watching it thinking uh how the hell am i ever going to get to that point and we pretty much put our heart and soul into making that very easy for you to get to a point where you can solve problems like that and take it a step further and make some money with it so link in the description if you want to check out that's right so take advantage of that you guys the link is in the description students have gotten some insane insane results from what they have learned so take full full advantage of it other than that guys uh that's it for me this is qazi and this is your boy papa react this was a dope cool man this is a lot of fun this was sick all right i hope you guys enjoyed it we made some solid progress and on the next one on monday for this app that we're building we're going to continue the process and the goal is to build an app where all developers from the world can actually use it to track their income and to attract their freelancing income more importantly exactly yeah make sure you guys subscribe if you're not already subscribed hit the bell icon so you don't miss those videos coming up and yeah smash the thumbs up button if you enjoyed this yep and we'll have a dashboard so sunny few things we need to add to it is the ability to add a picture proof at one point yeah yeah right so we'll add the ability to add picture proof the whole point of this is going to be like everybody will everybody will be able to log their income at clever programmer we will be able to proofread and verify about your income and we will have a central dashboard view where we'll be able to see how much income everybody a clever programmer has made exactly yeah exactly we're gonna go ahead and have it so you can log in you can have your own account we'll support a bunch of different login logins and we'll show you how to build all that which would be cool and yeah like it's going to be proven income and then the amazing thing is we're going to have all of that income sort of like all those stats and things like that so we're going to actually we can pretty much go ahead and do something crazy with that have some kind of leaderboard you know some kind of stuff going on um that would be awesome to see as well but yeah you guys are gonna see all of that being built up which is pretty cool that's gonna be sick and uh me maribon and sunny we're all gonna go to cheesecake factory in l.a she always talks about cheesecake she's like oh we need to go cheesecake hatchery i've never been everything that's gonna be sick all right love you guys uh sunday at 12 p.m or 11 a.m when is the webinar should we go 11 a.m or 1 uh 12 p.m want to go 11 a.m uh other webinars yeah let's do it cool 11 a.m pacific sunday that's where we're going to be doing it how to become a react js developer in under 90 days it's going to blow your mind make sure you show up with that said i love your beautiful face this is qazi this is your boy sunny papa react and we will see you guys in uh hopefully