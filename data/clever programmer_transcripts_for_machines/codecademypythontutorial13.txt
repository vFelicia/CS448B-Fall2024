hey guys what is up this is kazy from clever program.com and we are on code academy part 13 all right so we're killing it we're doing a very good job we just finished Part 12 which had to do with classes and we started well it didn't actually have to do with classes yet but the stuff that we're working with starts to get a little object oriented okay even though we're not dealing with classes here this is It's kind of foreshadowing and building up to a bigger concept um of classes up until this point everybody who's made it good job because I know how hard it is right to keep up with all of this and to continue going each of these videos is long but it's also giving you those fundamentals that you do need right or even if you don't need it it's just good to practice it and hone those skills so let's check out out uh well we don't need to check out where we're at cuz we know exactly where we are right we are in student becomes a teacher which is roughly about 40% completion so let's get through it start next lesson and keep in mind don't just think of it like oh I got to get to 100% because there's some Concepts that they go over later like bitwise operators which you really don't do that much and mean you're programming to be honest I mean I never use them and they have sections like detailing those so most of the stuff you need is actually within what we're covering so you know don't worry about oh I really got to get to 100% otherwise it doesn't mean I completed it all right let's save and submit and continue I think the next one should be actually we're done with this so we can definitely just go on to the next one I'm just going to click part of the whole all right now let's calculate the class average Define a function called get class average that has one argument students you can expect students to be a list containing your three students first make an empty list called results for okay so let's start doing what they're saying okay and let's also understand what they're saying so you need to get the average for each student and then calculate the average of those averages so effectively what they're saying is hey get everybody's average right here we have get average for only Lloyd and we're passing it in one argument so what they want us to do is keep looping and get getting everybody's averages so get Lloyd's average then gets get maybe Alice's average and then maybe get Tyler's average so replace like this parameter with pretty much Tyler and once you get all those averages average the average what that really means is that let's say Tyler uh average uh comes out to be like a 85 in class with all those homework quizzes tests and everything and then let's say uh Lloyd's uh average comes out to be uh 90 and then we have uh Alice's average come out to be you know um I don't know 73 okay then basically they just say that average of averages which is just we're taking in everybody's average right so Tyler's average is 85 at the top we have Lloyd's average and then we have Alice's average and essentially all we're doing is dividing by three right or the length right a better way to do it is we can you know we can create this and then we can say that um average of averages divided by Len of a average of averages right this is your final result and if I printed out that final result I'm spacing it out just for no particular reason here okay oops got to put the parentheses there and end it that was weird I just opened the parenthesis and never really ended it um what is a compl oh yeah the sum sorry we got to take the sum of all of those guys and then divide it by three right so 855 Plus 90 plus 73 divided by the number of elements in that list that's how you get an average and we get an average of 82. 66667 and if we want to just round it all up we can call Int on that and we get 82 we just round it down all right so now we know what we need to do and now let's start working on it so we're going to define a function get class average whoops and it takes in students as an argument so basically students it's going to be a list of the students that we give it so this function is expecting a list and the list might be like this that we pass to that function so then it can do do things inside of it okay cool so we're expecting it to take in students and then what does it do let's see we um okay it actually even says you can expect students to be a list containing three students that's good now let's go to step two first make an empty list called results so I'm going to do just that okay so why we're probably making it is cuz we're going to keep pending things to it right We're looping and then we'll keep adding things to the results so for example we might be looping through homeworks and all those and doing things right and we might Loop through our first item in the list which is Lloyd right we might get Lloyd or whoever right Alice Tyler and if We're looping through Lloyd then once it gets a results it appends an 85 and then it appends like a 70 right for Alice and then maybe it aens 95 ultimately so that's really why we're creating empty list cuz we don't know how many students we have we can have three students we can have 10 students so that's why we can't create a list with already their averages in there um we need to keep appending that way the list grows dynamically just in case there are more or less people than we expected first make an empty list SEC third okay so on three for each student item in the class list um so for student item in the class list where's the class list what list are they talking about for each student item okay I think they're referring to this as the class list right they don't really say class do do we say class anywhere in here class anywhere no okay so I'm assuming that the students they're calling it the class list so I'm going to say for student and students so I'm looping through each student so like if this was a list given to us right the first time the student student would be Lloyd and Lloyd is actually a dictionary right of all this stuff and then we'll Loop through that so all right for student and students calculate get average students so and then call with that result so I'm going to say um student average is equal to student I'm going to call the get average function that we defined right here right it's our own function that we're using get average of that student and then I'm going to append that to the results list so I'm going to say student average right and defining a variable here just to use it here I personally in my code would not do that so what I would do if I was coding this up is I would just simply put this call right in here like that okay um but I might I'll leave that up there for for you guys maybe it's more clear uh that way to read it okay then call results that a pend yep we did that finally return the result of calling average with results so I'm going to say return average of results and we defined our own function called average as well which um takes in a list and then just simply gets its average so very simple function okay this is fairly simple right now now I'm not going to go through the entire calculation of all of those uh you can see the previous video the end of the previous video goes through a pretty indepth calculation of this however I do want you to try to go through the calculation of this and maybe type it out before you run your code you know type it out and do whatever you have to do uh and and know step by step exactly what happens before you actually run your code but I will go kind of from a overview uh like a you know bird's eye view of this so let's say that I was to use this function get and I would do get class average and I passed it you know two students Lloyd and Alice what it would do is it would put it would replace students with that list then it would initialize that variable go boom results is equal to empty list and then it would go to this part and for students in and then students would turn into that list because that was the argument so everywhere it these students now it replaces it with the list that we passed it in 67 the first time We're looping through student will turn into Lloyd um now we're going to call get average on the student which is now Lloyd we'll callate average on Lloyd now Lloyd's average I'm not going to calculate it but based on his homework his quizzes and tests it will go into the get average function right Lloyd will get passed into that um function right here and it's it knows how to take its average and then return the weighted homework plus quizes plus tests okay so that's what's going to happen Lloyd and then let's say that this gets evaluated to some number which I don't know right now but let's say the student average was 78 so it'll actually get evaluated to a number like that now student average will be 78 and you'll get the first result 78 and then it'll Loop the next time and now instead of Lloyd you'll have Alice right and then it'll calculate okay let's try that again Alice here it'll calculate it'll pass in Alice to the student um to the get average function get average of Alice is going to get evaluated to something I don't know what it is maybe 87 and then Alice is smarter right 87 and then we're going to replace this with an 87 and so ultimately we have 78 and then we append an 87 then Loop is going to see that the list has ended and it will intelligently exit out of the loop so all these lines that kept running back and forth will now stop and line 65 will simply return the average of results so what it'll do is it'll pass in um where it's you know the definition results here which is 78 which is a list containing two numbers 78 and 87 now the average function gets called on this list so we're going to take these guys here going to go up to the average function pass in this list everywhere you see numbers you're going to get that list now 78 + 87 you get 165 so this whole thing is going to turn into 165 this is going to turn into 165.540 and and calling the length function on that gives us a 265.0 / 2 gives us an 82.5 and this whole thing now evaluates to 82.5 and lo and behold line 67 this translates to 82.5 and you have your final answer right there okay hopefully that makes sense okay good a lot of things we have to go through there but I want to go through step by step go through that painstaking process so you guys really understand uh I'm being overconfident I didn't even hit save and submit code so I could be totally wrong see that oh um no actually I had students there so I have to remove this call let's try it now now I was actually right what do you know how is everybody doing awesome you're doing great yeah that's that's a good question how is everybody doing how are you doing you know I I feel like I'm connecting with you right now that was a good question I should have asked that where are my manners I I hope you're doing really well I I hope that you feel wellfed and you're sitting here and you're kind of relaxed and now you want to focus on programming and get better and learn it and apply it in app development and mobile development and some whatever ideas you have maybe entertain people with creating rock paper scissors Tic Tac Toe with everything that we have learned you can certainly do those things and you can certainly create some really basic apps and uh and yeah cool okay so let's keep rolling with it step one finally print out the result of calling get class average with your students list your students should be this then print the result of that and we are done so now we're going to use what we just did so print out the result of calling get class average with your students which are Lloyd we're passing it in that list Alice and Tyler this is almost exactly what I was showing you guys and then print out the result of get letter grade for the class's average so what I'm going to do is get class average is going to be you know results so I'm going to store that in the variable results I will simply say print results here and now I'm going to say get letter grade of results so it's going to call the get letter grade on results so let's say that we got the average of all of those guys with all their homework quizzes test let's say the average came out to be something like this right and it's going to Simply Now take this list and pass it into get letter uh actually what is it going to do oh no I'm sorry we actually get back some number here right let's say the class average ended up being 86 because of their homeworks tests and everything all averaged and now it's going to Simply send in that number 86 uh to get letter grade and get letter is going to go like if scores greater than or equal to 90 nope it's going to go down to the second LF statement this is going to Valu a true and it's going to return B so something like that is going to happen uh so this whole thing is going to get translated to a letter right some letter we don't know what it is yet so let's give it a try let's see what happens one of the following is broken when we Tred to use it Alice Lloyd Tyler students get CL get letter one of the following is missing or broken we use it what is broken I don't get it we have Lloyd we have Alice we have Tyler all these definitions are correct otherwise it wouldn't let us go forward um finally print out the result of calling get class average with your students list your students should be that and I did one of the following is missing or broken when we try to use it Alice Lloyd Tyler or students oh where's my students list I feel like I should have a list called students I don't have it I think I have to I have to create it students I I don't did it get deleted so one of the following is missing right so they said one of the following is missing or broken and one of the things said that said was students and they said students should be Lloyd Alice and Tyler so okay yes python achievement student becomes the teacher we have completed this part we're done with this here's what I'm going to do since this was a nice little thing in its own let's finish this video and I will see you in the next part of code academy Python tutorial with clever programmer see you there