yo what's up my beautiful people so in this video we're gonna talk about the web development roadmap in 2020 how can you become a web developer the instructors for this video will be me Kazi and of course we're gonna also have Jacob so it's gonna be Jacob and me and Jacob is not part of clever programmer so you guys are gonna get to see his beautiful face a lot more on the channel along with Nod we're gonna have a lot of new content traders on this awesome so let's just jump right into the meat and potatoes of this pack here's what we're gonna be covering in this how much earning potential you have if you become a web developer even in this time of crisis right either you can see this is time of crisis with this whole coronavirus situation going on or you could see it as an opportunity we're gonna cover the popular web dev stacks and top tier companies like Facebook uber Airbnb and Pinterest this is something cool that Jacob and I work on because nobody in there web developer videos actually talks about the text acts these biggest companies are using so we're gonna actually provide you a breakdown of the text ax and then no matter really which route you want to take you want to become a frontend developer a backend developer or a full stack developer this video has you covered as well as how you can actually make an income from it so you get to choose your path okay front end back and full stack so think of yourself as one of those like video game characters where you get to choose you know choose your own adventure and then the examples of learning pads we're gonna provide you with them as well that show you how you can become a successful web developer in 2020 now before I continue I do want to let you know that everything that we'll be covering in here and then some is covered in our course called profit with JavaScript it's an awesome JavaScript training program it's 15 weeks long and it takes you from complete beginner to mastery and the goal really with this program is to help you make a 5k a month or more as a developer I notice a very ambitious goal but we have a lot of community support around this product and you also have weekly live training so you get four monthly life training calls with Nas who's an instructor for this program and then just the overall programmers awesome if you just click the link in the description below you'll get to see what I'm talking about with that said let's jump right into this at this point I'm gonna let Jacob take it over and let you know what is the opportunity to become a web developer in 2020 and beyond so how it's going Jacob here so let me take over from here thanks Cassie why should you become a web developer here the facts guys so as you can see her especially in 2020 I mean the trend is going high all right it's going up from 2014 to their predictions that will be twenty seven percent growth and a web development profession okay so yeah it's the growth is much faster than an average occupation and the amount is also growing in popularity so as I said here are the facts mmm and let's go Father so why should we become web developer let's continue with those facts so I specially put those numbers here I mean I especially put the web developers salaries in San Francisco and in New York City because I wanted to mention that being a web developer means that you can actually work from all around the world all right so you don't have to be in an office you can be you can work from home from Poland from Ukraine from anywhere in India as I said this work is mostly remote especially right now during the coronavirus everyone see that it's possible to work remotely that you don't have to be in office so what I wanted to mention is imagine if you land a client from San Francisco okay you're literally able to make six figures and here also the job offers from different companies not only from web from Google right so those are like different companies at the other way a rather than 900 to 500 and being the web developer means that you can actually create templates or products and sell them online okay so basically here let's take this guy he is selling one template for $60 and as you can see here he made almost 600,000 sales so let's open the calculator calculator for a second all right here let's put 60 dollars 10 600,000 and I will just leave those numbers here right this is crazy guys okay so it's all about marketing yourself in this case because you can create a theme and put it on github for free and then you grow awareness for your brand and in one point you can actually start selling those templates to people and they will literally will pay you because not everyone likes to design for example me I hate so I would rather buy it and create a bucket for it okay but yeah let's go further on the right as you can see here those are the works from app work so you can basically go to app work and say that you and post your job offer and charge for example 80 65 euros sorry dollars per hour okay or even hundred or the third way is to actually sell real businesses so for example here there's a website be trendy which is making 7k average in revenue a month okay and they are selling it they are asking the price for $10,000 okay so this is the first guy at first case but there's another one the other website and they are selling it for more than $200,000 so those are possibilities those free if you want to work as a freelancer or create templates or whole startups and sell them all right okay here are another facts I mentioned startups okay but by the real startups I mean real startups so here's the list from the top startups from the last year you probably can know those names for example duolingo I don't know about you but I was using it I mean I'm still using it to learn German and on my phone and it's super easy to make I mean if I think about it it's possible to create this kind of app just by your own okay simple to give v2 freelancers I mean those platforms are the platforms which you are able to create your by your own and at least start doing by your own then hire other people to to grow it right as a company but all of those things are possible when you become a web developer when you become like for example full stack developer so you know how to create frontend how to design how to create a backend operator with databases and also how to deploy your app so this is basically like full step right you can you can do everything and we'll be talking about it and our presentation as well all right here are another fact so basically as you can see here I'm photos of me from my Instagram and also from my friend from Instagram he's actually web developer he's travelling the world he he's doing freelance he has got like huge amount of different clients and he can literally work next to the beach alright so it's super great with this with being a web developer have actually freedom to our six features six figures and yeah you don't need a degree and you can work everywhere so this is the case which I told you about you can get the client from New York from a San Francisco which are willing to pay you a lot and you can work next to the beach okay let me talk about popular sects and top companies so basically for now you may probably not be able to recognize those names but and this presentation will cover almost everything from here so now let's just skim through it very very quickly so web server this engine apart this is kind of the technology which is responsible for your web server for all of the requests security stuff like this then you have databases so this is how you actually manage your data for example MySQL PostgreSQL those are like rational databases then we have MongoDB as I said we'll be talking about all of them there you have serverside framework which is no js' and programming languages which are super popular and uber company okay for example take a look at Facebook they are using graph QL which we'll be talking about mmm also they are using their own custom server which is super cool okay then we have another popular stock like Airbnb print dress for example and print rest they are using a Jenga which is my favorite framework and here in a clever programmer we made a lot of different courses about them so about it so you can learn it by watching our movies and as I said we will be talking about everything for example Amazon earlier RDS it's a database it's a service from AWS cloud ok which is having for example a database somewhere in a cloud and it's super easy to connect it to different services for also from AWS ok but as I said if you don't know it what I'm talking about yet it's ok I just wanted to put them here so you can have a glass and see whatever I'm talking about and then when we go through the presentation everything will get clearer to you alright so how to become at web developer 2020 here's the list of facts okay first of all you you should define whoever you want to be because as I mentioned a couple of times before you can be frontend right you can be just a frontend or even just a designer you can create just the layouts and sell it but I would say it's better maybe if you don't like to just design if you rather want to code you can become a frontend there are some framework for this for example react.js which we talking about or you can be just a backend developer so for example me I was full time backend developer for almost one year when I dropped out from my first University and I was actually developing backend API sin a Jenga framework and I learned learn a lot about that also I was using Posterous SQL or if you want you can be called a full stack so currently I'm learning a lot of frontend technologies I mean I just started learning the future yes the framework for frontend which we talking about in the next slides and yeah this is my golf now become a fullstack developer so I would be able to create whole products from scratch and here's the list of things by the chillout guys will go through all of those things simply in this presentation but I just wanted to mention that all of them you'll literally learn by doing so you don't have to like start from them okay so you can for example learn HTML CSS JavaScript and then as you will be developing your first websites you will be you will start learning about kit version as well okay so if you want to store you if you want to have access to history of your code then you will learn how what is it it version controls so I can back to the code which I created like two days ago okay then you go through basic terminal users so for example you create some server and an ojs you'll start your server and there will be you'll be able to actually see your website running in a browser okay then you of course really like some like design which is optional because you can download some templates and just mess around with it or you can for example use software as a figma or Adobe XD and design your stuff from scratch then you'll see what is get hub which is good version control but in a cloud alright so you can share your projects or you can become or you can create opensource projects which are free so which are free projects which you can collaborate with developers all around the world then you have SSH HTTP HTTP and API sand design patterns as again we will be talking about them so no worries and here's CAHSEE all right great thanks Jacob for letting me take the stand once again so guys in terms of code editor just pick one there are all these wars on which one is the best it doesn't matter pick an editor and get the freaking coding okay Visual Studio code is my favorite I also like atom and sublime but nowadays Visual Studio code is my choice I highly recommend it just get that forget about everything else okay Visual Studio code allows you to have install packages and they're very easily it has them integration if you want it it's the most beautiful it's the most userfriendly and it's just awesome it has a lot of its completely free so that's what I recommend now frontend development in three words to make it extremely simplified is HTML CSS and JavaScript alright so here's an example of what hTML does so HTML doesn't make you make a website that looks very pretty but unless you make a basic website so you know those websites with a lot of those boring professors they'll like put up their curriculum for CS 120 or whatever right oldschool websites that's what you can make with it's just pure HTML so here's an example of code on the lefthand side along with what that actually looks like on the righthand side here's an example of what CSS would do so CSS then starts to make things more beautiful I mean I know it doesn't look very beautiful but just think about the fact that there's different colors here and there's a background here which wasn't there in just pure HTML so here is an example of the code on the left hand side and then on the right hand side you have an example of what that actually makes it look like any when it comes to CSS of course there's a lot for you to learn so there's the basics you got to learn the syntax the color the list the tables and then there box models and of course then it gets very complex with things like flexbox and all the other things i mean you can get pretty damn advanced in CSS and animations and things of that nature and then of course you got to learn JavaScript so here's just an example illustration of JavaScript if you want to add in fancier things or interactivity to your website for that you're gonna need JavaScript and there's no other way around that and to learn JavaScript this is your basic path of how you would learn it okay so there's the vanilla JavaScript you're just learning the basics so syntax datatypes functions objects loops and then you get on to I'm gonna use the pointer and then you get on to the Dom and Dom is really where you can manipulate what's actually happening on a website so here you have things like animations events listeners you have of course Ajax and JSON and so this is where you're learning how to actually like make requests how do you use API is how to actually read a JSON file what are promises all those types of things a lot of things that have to deal with a synchronicity you will be having to learn because that's super super important and then of course modern JavaScript so es6 and what that means next up you probably want to learn some popular libraries and a lot of people have very controversial views people are like forget about libraries everything vanilla Jas I'm not so hardcore I say that you should I recommend you learn popular libraries and the reason why I say that is because if you learn this stuff it makes your life so damn easy when it actually comes to building a project or building an app because using a library you can easily write a few lines of code and that allows you to actually make something look beautiful without you having to build everything from scratch so I personally love materialized a lot and of course bootstrap 4 is you know what pretty much everybody gets to learn so yeah when it comes to like adding a button that looks really nice having I'm not that interested in having to learn how to design that all from scratch so I'll just use a library that allows me to make things look awesome and very very quickly here's an example of what bootstrap 4 would do right so if you write these three lines of code right here that we have available for you it's gonna put make these buttons so you see these buttons come already nicely rounded corners they look good the Texas centered and none of this code you actually have to code up from scratch you just got to use the bootstrap library so that's why these libraries are good to actually learn and on the left hand side you can see an example of a messenger tool somebody made that's responsive a bootstrap application and so this is built with bootstrap and it looks beautiful that's a real world example next up you want to learn about responsive layouts so here on the complete left hand side is what a non responsive layout looks like this looks terrible right now what you want to do is you want to learn how to make it look responsive so here it looks beautiful so these are all the things like how do you actually set a viewport how do you actually set the max width property what do you do in media queries and on and on you go so responsive layout as a whole world of its own in CSS you will also learn about flexbox that allows you to make things really responsive really fast you know if a thing looks like in a certain way on a main website on a desktop how would it then respond how would then then look on a smaller screen like a mobile device an iPhone an Android so learning the skills of responsive layouts is huge next let's talk about dev tools so here is an example of chrome dev tools and chrome dev tools allow you to really dig deep into a page and like be able to debug it be able to change it on the fly at different color sit on the fly check the styling fix any problems look at what's going on through the network tab or the performance tab you can also do console logging so you can like write code in there and check it so this is one of the most important tools as a developer you have to learn and here's an example right so on the right hand side you can actually see that we're hovering over this histogram average bar with the height of 100% so it's probably this histogram you know one of these histogram bars right over here maybe even this big one okay so this is what you can do with dev tools and in a lot but this is something you have to absolutely learn so if you're watching this video right now what I recommend is you take notes and write this down and even go back and take notes of things if you didn't because this will allow you to actually created stepbystep path to becoming a fullstack developer or a frontend developer a backend developer because we're stepbystep laying out all the tools and all the technologies that you need to learn with coding to actually be able to get these skills so then you can actually get a job or become highly valuable in the job market next up is you gotta master the command line there's no other way around it so whenever we think of the word command line we imagine a hacker on a you know freakin black screen with the green text and you're writing stuff and that's honestly what it's kind of like most people want to run away from command line because seems intimidating there's not a amazing GUI there and it can be confusing but you have to learn this a lot of bad developers that I see try to skip this and then they lack really fundamental skills and they can never learn them later maybe then they can't learn how to host websites online or they can't learn how to like problemsolve or like really debug things accurately because they have no power over the command line and they're very helpless so this is one of those areas you just have to master and if you're like me you'll kind of learn to love it after you know getting used to this after command lines I highly recommend you learn algorithms so you can go and learn algorithms and practice them on different websites like lead code or hacker rank and algorithms are really they give you the problemsolving skills right so algorithms help you become a great problem solver and remember problemsolving skills will make you a better developer and help you get a software developer job so a lot of the interviews to come down to like whiteboarding a solution or them asking you to solve some kind of challenge or problems you don't want to just be a developer that can make things look pretty you want to be a developer that can actually solve real world problems and when people pose them you should be able to like come up with some kind of solution and algorithms are really what are the things that are gonna like make you a great developer we can add features to an app or like debug and see what's going on with somebody's code and yeah like this is for me I don't think there's any substitute for this this is something that's very fundamental that you should spend quite a bit of time learning I would imagine you should spend at least 50 to a hundred hours just in algorithms alone solving challenges if not more and you should do this consistently and become better this will just make you a better developer and everything that you can do you'll be able to do it better when you actually learn how to solve problems and make things actually really effective next up you should learn how to SSH so this is basically the ability that allows you to log into someone else's computer and you were on the planet so and this is a popular networking concept that every web developer should know and why this is also useful is later when you want to learn how to host your web apps online a lot of the times you're going to learn how to SSH into you know tools like docker or AWS or even sometimes Heroku so SSH is something that you should put on your list of things to learn on your path and the next up you should learn how to deploy your static websites so these are not your dynamic web apps but your basic static website so what does that mean you know if you make a portfolio website you should learn how to host that up online and you can use tools like github pages or net liffe I to actually be able to host them and then you have you have to also know about a few different things like domain registration static hosting SSL Certificates and FTP and yeah like you can use services like Namecheap to get a domain or Google domains to get a domain and SSL really is like you know for example if you go to a website and you see something as HTTP and not HTTPS right HTTPS is like secure an HTTP might not be that secure and if you go on websites on Chrome or Safari even on the top lefthand side sometimes you'll see that icon that says secure or not secure and SSL allows you to do that so these are really the skills you should be learning at this point so if you make a basic website with HTML CSS and JavaScript using bootstrap and all these different things you now want to be able to host that online you want to be able to people should be able to go to like you know Jake portfolio calm and be able to see your portfolio next up one of the most confusing things that for most developers it is to learn but absolutely fundamental it makes you a beast in my opinion if you learn it it's so freaking valuable it's learning get version control now a lot of people will confuse get with github how I think of version control is it's time machine okay so if you look at this graph here if you look at this chart here or this image if you've never used git this will make zero sense to you this will make no sense but how I can describe this to you is forget about that image and just think about a time machine and what that allows you to do is if you're building an application let's say you built version 3 and then when you go onto version 4 and now everything breaks this time machine allows you to go back to version 3 or version 3.5 or version 2 when things were back to normal so you know this is version 3 it's it's almost like a video game right a memory card if you want to think about you can you can save it allows you to basically make save saves on your project and then you can go back in time by just typing in like one line it allows you to go back in time at any point and generally when you're doing get how I do them is every time I make a new feature I make a new get commit with that so for example say you built an app and this is version 1 and it's just local on your computer ok so this is where I'm hovering over then let's say the next thing you did on that app was this commit which now added the feature of making your app go online so the second thing you added then the third thing you added was this app can now allow people to log into the app then this fourth thing you added maybe it allows people to make a post on your app right now something breaks or you want to remove a feature and go back you can just go hit go back to when I just added the feature to log in for people or user authentication so boom you can just like remove a feature and go back fast and now if you want to go forward you can do that just as well so really really magnificent tool extremely powerful the only way you can learn it is if you know command line I mean there's some GUI tools of it but I recommend you learn the command line and then learn how to use git this is super valuable most people confuse it with github and github I want you to think of it like Dropbox or a Google Drive for just putting your code all right so really github is just like a place where you generally host your code or you put your code but get is actually the version control tool these are the different hosting services I recommend github I mean I used bitbucket too but yeah so I would recommend just github if you want to just pick one stick with github and you're good to go but these are some different hosting services just so you have a full view of it and then guys with frameworks now there are a lot of frontend frameworks so we're gonna now dive deep into a lot of details on frontend backend and all that stuff and frameworks are they're a very powerful tool in the development of modern web and mobile applications so you can kind of see this breakdown here but at this point I'm gonna give it over to my friend Jacob to help walk you through all of these details and then I'll meet you guys at the end all right let me talk about top free frontend frameworks right now so as you could see the slide before radius was on the first place then we had the view jeaious and ocular JS but it wasn't always like that and yeah let me talk about pros and cons on all of them and let me go so let's start with the via with the view J S which which is the youngest of all three basically VJ s was created just by one person but people started to liking it all right so right now it has a huge community it has huge amount of stars on github and it's one of the actually it's the easiest framework for all of them to start learning and this is also what which I choose to start with my front end journey I mean the full sake I decided to pick the view J yes so basically it's a component based and visual Dom which makes it very fast so what does it mean component based it's created by components like all of them are created by components so basically you create your app from kind of the blocks all right so you create one block and you can reuse it multiple times so you you can't you don't have to you don't have to copy and paste your code multiple times in a code so view is the easiest to start it has simple simple syntax it's super beginner friendly as I mentioned the community is growing from year to year but one of the cons is actually that it's not the best for complex projects okay so if you decide to create a light project it's great and also this framework is the lightest of actually it doesn't have that much size as angularjs or react is it's it's super super light and popular companies which are using this framework are for example gitlab Alibaba Shami 9gag and also the one of the concepts that it's not maintained by one of the popular companies right like Google or Facebook when it comes to to this but it's not a problem because it has great coming then he'll jump to the angularjs which is outs is super hard to learn all right so is the hardest to learn mmm it's it come from angular and the biggest in the beginner is with angular and now we've also angularjs it's created by Google developers and unlike react it has a twoway databinding okay it's also componentbased framework it is super strong community it's actually simple for one page apps I mean it's the hardest to learn but to create a single app it's it's it's it's okay and actually also gue very good for a huge projects okay so for example banks are using this this framework okay okay so as I said yeah also Google it so from popular companies Google use this Xbox BMW it also has Model View controller architecture okay and then we have the react.js which is number one in popularity a lot of people actually starts with react it's not that easy as future yes but it's also user friendly react has a lot of different tutorials huge community it's maintained by a Facebook so basically the funny story it was created by one of the Facebook developers a Jordan walkie he created because Facebook was growing so fast its network was growing so fast that they needed something to manage that and react is actually is perfect to do that okay mmm and it's used also not only by Facebook but for it's used by Netflix New York Times Yahoo uber PayPal as we as we seen in the beginning okay now let me talk about the state management so basically there are frameworks for frameworks so for top three of our frameworks for react view AJ for view and Fuhrer angular we have Redux for react or we can also use rear hooves and context API there's both they are working the same as the Redux are almost the same as I was reading the different as I was reading different articles online for view we have eugenics which I'm currently learning and also for angular we have ng air X okay and now let me talk to you what is actually state management so basically and you have like a larger apps and if you want to share your application with multiple components it's much easier to do that and you don't have to for example ask API multiple times from different places for a data you can do it once and then you can just pass it through different components alright because of the statement module so normally we've outside management for example if you J X when you create components under components you have a tree structures ok and let's say that only one branch here wait can you see me yet only one brother here you have a data and you want to pass it here all right so in order to do that you'd have to clamp to the root and then pass it down and with the same announcement you're actually able to do that without it ok it also provides some features such as zero config time travel and it's super easy to debug application with the state management such as view JX ok all right let me talk right now about static site generators and mostly how talk about the Gatsby which is run by with react GS it's actually super cool to use static site generators in 2020 because first of all they are super fast so basically everything which is running our static web sites which means it's generated HTML CSS J's so you don't have to run everything on a server which means it's also super secure because whenever someone hacks your web sites they won't be done like any serious damage right there for example hacker won't get your data won't get your credit cards ok they have great CEO which means they'll be it will be ranked very high on a Google static web sites also means that they yeah they will be they'll be static but also it doesn't mean I won't be there now dynamic ok they will be dynamic and they will have integration with api's and stuff like this for example the more that one of the most popular websites which is run created and gatsby JSS react react JS dot org the react main website but i also also saw some online stores and stuff like that so basically created by no js' on your computer so first of all you run the nodejs and it generates all of the content for a cat's bjs and then use surf every which is surf are in the static websites okay the Gatsby J is also use query language craft QL which we'll be talking about in the next slides and what's cool about that cats bjs is that you can get data from anywhere also so we can use some database you can use some other API s it's super nice and you can create your coat with the react and CSS and in the end as I said no J's will generate all of the static files and upload upload them on a server okay and also super cool is that it has a create community it has a great support it's super easy to learn by just reading a documentation and as tons of different plugins which you can use ok and also it's free so yeah it's a winwin situation for all of us so I would suggest you learn how to create static how to use static site generators alright let's talk about Arkin development so first we are talking about frontend development alright so after you learn everything which I covered before you are able to actually apply to all of the frontend developer positions and become the real really good one from the developer right if you know all of the basics and advanced topics on HTML CSS JavaScript and you know how to use frameworks you're able to get this 8090 even 100k job or you are able to work as a freelancer do much much more okay so now let's focus on the backend development which I'm actually good in because that was my job position for over one year so here are the languages we can which you can use for it okay elixir scholar has Cal Java Python Ruby PHP nodejs and dortmund alright would you use what is super cool about node.js it's run by a JavaScript so it's basically so basically you can kill two birds with son because once you learn JavaScript it will be also super easy for you to learn node.js and now let's talk about best back end back in frameworks so first for Haskell let me just get a pointer is yes what I do I'm not sure if I'm pronouncing good then for Java we have spring which I try to work for awhile but I didn't really like Java so I very quickly actually jumped to the Django which is my favorite back end framework or flask which is I would say flask is for light application Django is for more complex application for a huge business solution so for example Instagram is run by a Django framer ok and Django is also cool because you can create a full stack application ok and generate HTML files in it as well but also you can create their API so REST API so if you install Django rest framework then you have for PHP laravel which is super super popular right now so I even made like I even asked in my post on Instagram what back in framers people are using and a lover was actually one of the most popular one and then you have no js' so there's a express there's a framework called Express which you can learn and Fogo you can learn a rebel so whenever you create a backend for your application you mostly want to play with your data you mostly want to actually manage your data create the API different a endpoints for it to get so user can have access to it alright so for this you need a database so here's the list of different types of databases which would be going through let me give my pointer ok so first of all we have relational databases ok what does it mean is you'll have like different columns different tables and they will have some kind of relation like key key relation like many too many onetoone onetomany those are the relation usually have in a relational database and for this you can use PostgreSQL or my skew which are highly supporter supported for example by a jingo I was you working all who've poor scores SQL a and it's super easy also to learn it then you have no SQL database so for example you can have a key value store for example ready or dynamo DB dynamo DB is one of the AWS services also so you can also use it there which is super secure and super fast or you can have document base database which is DB again this is no SQL database there are no relations like in those two and a mana gonna be actually and when you look at this it looks like a JSON document okay so Jason which stands for a JavaScript object notation okay then we have a cloud database for example Amazon RDS or firebase so whenever we for example choose Amazon RDS which which stands for relational data relational database services you are you can create actually a database stored in the cloud the relational database and then here like support for many different names for example for posit a skewer a PostgreSQL or for MySQL so you can run it in a an AWS and easily connect to different other different services or to your API or whatever you actually need it okay and then in the end we have well multi model database for example cosmos DB which is huge database really huge one and what's good about this database is kind of a database which connects all of the concepts of databases so for example it might be in one database you have you may have like a relational database you may have a key value store this bit database may look like a graph or it might be based on some document okay so this is a multimodal database which means it's upper supports multi models types of databases okay then we have a red arrest API versus graphical so the graph QL which I was talking about many many times in this presentation we are finally here so basically normally I mean normally from because graph kill is kind of new so usually what you do you create a lot of different end points and then you and you expose your date either with different kind of structures for example you may have a the end point which is like your website slash users which will give you of your users for example endpoint like your website slash products which will give all of your products and then a user like front and a developer may ask you for just four for your product so he will get the beta from the end point which was slash products and with correct kill this there is different because this is a credit rank language and and here you have just one endpoint okay so it's super actually user friendly it's super friendly for developers because you don't have to remember all of your web endpoints you will just ask your own it just one endpoint for example slash craft QL and then frontend developer can ask for what data he wants okay so for example here as I said you may have an REST API to two endpoints slash movies flash directors and the rogue fql you basically have one endpoint and frontend developer will ask you will make a query special query for data he or she needs okay and it's super easy to aggregate data from multiple resources and super fast and for example you can use Apollo to develop it and for example if you want to create API with graph kill you it has also support from different backend languages so for example I was using Django and Python and to create a graphical API and the Django is using the graphing framework which is over here and it was super easy to actually create the graphic you endpoint and a Django and for example many different companies are actually using cool and graph QL for example when I was scraping Instagram I was actually doing requests to Facebook API which is actually run by graph QL and I was actually trying to create my own queries to access to to its data if you go to Facebook for developers then you'll have access to a graphic you'll API and you can actually play around by your own so we are here finally we covered frontend backend data and in this point when you learn how to create how do you how to use those free you become a full stack developer and the full stack developers are able to create whole products from scratch till the end okay and they are earning a lot of money for sure six figures so let me cover some popular web development web developer stacks which are used by different stock of developers because you for sure thinking when you've had a lot of those different frameworks for frontend for then for back and then you had at different data bases then you were for sure thinking how can I combine them together how can I pick my own stack and how can I go to the work with proper stack okay so yeah I provided them for you so the oldschool stack is for example lamp which is ability to use a Linux Apache MySQL and PHP then with the mean stack which means which says for MongoDB Express Jas as you remember angularjs and node.js this is the joke stack then you have Java spring it's the light weight stack learn which is super popular and nowadays it's MongoDB Express react and nodejs and then from less popular for example you have just rub you on Rails and even or whatever how to spell it it's the same as here but instead you're using the view Jas okay so with this kind of stacks you are able to get a super highly paid and a popular companies and now we have the end element which is DevOps so we can actually become Jassa DevOps but first of all I would suggest still to learn all of the technologies which I mentioned before or you can learn DevOps skills and then you're actually able to first create the whole product from scratch from zero like design it code it create backing for it connect frontend and backend together operate on a data from the data base connect data base to the backend and in the end you can deploy everything but much more so basically yeah what EV UPS do they first of all like how to become a DevOps so first of all you have to become Linux master I would say you should be really familiar with SSH which I which we mentioned before command line some bar script so you are able to create bar scripts and automate some processes for example you can create bar scripts uses deploying your app which is installing the virtual environment running the automated test and much more so you really want to learn how to use Linux servers all right then you should know what's a proxy server web server so for example nginx is one of the examples or we also mentioned before the apart but nginx is super powerful and super popular right now and actually easy to use so what's the proxy server such as an engineer's at us so basically it's a gateway between your application and the Internet okay so it's in the middle so it will help you for a privacy of the security hackers may be much more harder to actually hack to your server so you'll be secure and also makes you a web server so for example you can deploy your Jenko app and run it through the nginx and then if you want to become a DevOps you have to learn actually how to deploy your apps on a server so for this you can use AWS which is actually hard but super super great skill to to learn Heroku which is super easy in Heroku actually it's Heroku is great to start because it allows you to actually deploy your apps for free and without knowing anything what's behind deploying the apps you just run Heroku create heroic who push her ah cran whatever some comments like this and your apps it's it's stored in a public alright then you have a show or Google apps which are very similar services to AWS but on AWS let's just stop here for a second you have like multiple services right but for example when it comes to real hosting you just need to for example on how to use AWS ec2 which is a normal instance of the Linux machine with memory and stuff like this so it basically is some kind of let's say raspberry pi start in the cloud ok or you can learn how to actually use docker containers how to docker eyes your application and then deploy it on a 8 AWS ECS service ok so there are multiple services and if you want to become a real DevOps you should get familiar with with a lot of them alright then as I mentioned there are docker services there's a docker containers which means you will authorize your application so back in times people are using a lot a lot of virtual machines now people are using Dockers which are actually much faster and they are really light what does it mean for your apps so basically if you if you have docker environment and if you want to make some changes to some huge project to your app you can actually download the doc and doc docker image create a container or your own computer and run the whole app ok so everything the whole setup of the application will will be done by its own because of that docker file or docker compose so you don't have to worry about it so for example if there's like a huge project created about many many different developers and the infrastructure is really huge because they are like for example connection to some api's to some different clouds to some different databases there's front unders backend and docker everything goes by its own actually right so in dokkan Cordell containers you have also each service stirred in different container and it's super easy to make a connections between those stalkers and deploy everything okay and then in the end we have automated testing see why CD which stands for continuous integration continuous deployment so you want to get familiar also with those terms because with them you are pretty you're making sure that your app won't crash so what does it mean if you create a lot of different tests and if you automate them whenever you make new changes for example in your git repository when you create a new feature some for example some new field to users and you go into marriage to the master and then publish it deploy it you want to also run tests to make sure that everything goes without any problems right so normally you do it as I mentioned those steps manually but with cyc they see ICD and automated tests everything is automatic alright so basically what what is going to happen is you will run some pipeline which is going to check your mesh requests and if this is green if also other developers will make a code review for your batch request then you are able to merge your code to the master and it will automatically deploy the current version of your app on a server and also it will be covered by your tests so you'll be pretty sure that your app won't crash alright so that was the end step of the whole journey of the becoming a web developer or even more because with this knowledge you can literally create your new startups your new companies okay and in the summary we can go very quickly through all of the points which we talked about so yeah as we mentioned we can be you can become frontend or you can become backend developer or you can combine those forces together and then become like a developer and then you have also the DevOps path and basically those two I would say comes together because whenever you become in fullstack developer in one point you really want to deploy your application you want to put them life you want to share them with other users show them your friends so you'll and some point to learn those DevOps skills but yeah as I mentioned you can also become just a professional develops and maintain all of the code created by other developers deploy it fix some features check just making sure that everything works smoothly so those are all of the paths and all of the technologies you can pick in 2020 and now I will go back to Cassie you get the frontend backend skills on the DevOps skills now you're really a solid solid solid developer and you're very valuable in the job market now look all of these skills that we've talked about if you want to be able to develop these skills from scratch even if you're a complete beginner and you want to then learn how to master it you want to go deep into like the frontend skills and the backend skills and build applications we do that in this profit JavaScript course if you want to learn how to then host your apps online using backend tools like nodejs we do that in profit of a javascript course if you want to learn how do you make a blog app or a Twitter app or a Google Maps app we do that in this course and if you want to learn advanced skills like wire framing how do you wire frame a project how do you road map a project before you do it we do that in profit with JavaScript and of course if you don't learn how to make money from coding how do you actually get clients how do you get freelance work or how do you get a fulltime job as a developer we do that in this course profit with JavaScript so at this point what I highly recommend is if you got value out of watching this video and you now actually want to deep dive and turn this into a real career and you want to become either a frontend backend or a full stack developer I would highly recommend that you the link in the description below or go to clever programmer comm slash JavaScript and consider joining this program this program will absolutely blow your mind some people have said that this is worth more than a coding boot camp that that took which they pay ten thousand dollars for and it's not ten thousand dollars it's way way way less instead a fraction of a price plus you will get tons of community support guys and you will get weekly coaching calls group coaching calls and we have you know a lot of support there so it's really like think of it in an online coding boot camp but for a fraction of a price so thanks so much guys much love thank you for watching and as always I'll see you guys in the next video so you want to become a JavaScript developer here's a list of things one I just drop the best JavaScript course on the planet that's it wait for you let me explain Who am I I'm Rafi cause II done a few things about making six figures as a freelance developer at 21 years old spent a billion dollars in revenue at 25 traveled overall time hundreds of thousands of students to code and read programming courses are ranked number one on YouTube so what's in this javascript course listen up they're gonna be learning the basics of JavaScript you're gonna be learning advanced objectoriented programming Dom get a Visual Studio code command line version control a JSON API es6 but I know you ain't here for that buddy blackjack Twitter clone Google Maps project 5700 Opera project 50 modules 30 hours of video content data science visualization Modern Portfolio how to get a job at Bank Oh JavaScript and we're gonna build an Iron Man suit wait what sweat sock results one Rob freelancer not traveling with his kids to a free save their company $20,000 three nazar landed 110 thousand dollar contract results yeah we got results we got a 30 day money back guarantee you joined the course you don't like it on the 29th day 23rd hour and 59th minute you can return it no questions asked alright so we both know coding is hard I mean you can see me staring out the window here scratching my head but anyways if you want to make a profit as a JavaScript developer like so many others have look I know how to get there so please give me the privilege to mentor you it's time for you to profit with JavaScript they got presents or parents or parents or parents or parents and planners I saw by my brother the money depressor we call it my blessings I felt like I'm pulling the birdie is back tell me i'm thomas i'm full of deciding that's why i call it bone impression you saw that I wanted the for win affection as something in public checkup eleazar eleazar eleazar eleazar eleazar eleazar so for my run to the money