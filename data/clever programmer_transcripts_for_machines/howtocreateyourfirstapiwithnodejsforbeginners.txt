here with me today actually it's not just someone it is it is a something that i like to call the pwg community everybody say hi what is up hope you guys are doing amazing everybody say hi guys guys i am so pumped this is the amazing community as you can see right here you know prophet joshua community and again the link for this community is down below in the description if that's something you're interested in right but today together with you know with at this point 62 people we are going to be learning how to build a node.js api and so guys guys i'm going to go ahead and share my screen and let's go ahead and get started are you guys ready are you ready i want you to still raise your hand if you're ready raise your hand if you're ready yeah there we go there we go i love it i love it okay okay i see comments coming in from youtube that's it guys i just i want to know you are live right now just so you know all right so sweet share this share all right so we're gonna get started here right now so today one goal is to create i know just bi we currently have we currently are working on what we have a i'm going to open up my file open recent and i'm going to open up my netflix clone so make sure you guys have your necklace going on here i'm going to put that here right there i'm going to make this a little less it's a little bit too large let's all right guys hello hello hello hope you guys can hear me hopefully you guys can hear me right there can you hear me say talk guys can you talk oh i can't hear you hold on hold on talk hello there what happened what happened really wasn't that bad wow wow my bad guys not my bad i don't know what happened my bad my bad guys my bad guys i'm i'm trying i'm trying all right from the top okay from the top i'm gonna take this slower slow okay so like i said you know the goal is pretty simple for today uh go ahead and go ahead and download this videogenetics clone go ahead and code this up so i will have the link right here uh so copy this i'm going to put it in the chat here in a second i'm sure you guys have in the chat correct let me see in the chat and the chat in the chat there we go beautiful put that in the chat awesome sweet sweet sweet sweet sweet that is all good i thought somebody said i thought i was laptop making my noise yeah it's weird i don't know i have to get that road caster that i think that will fix actually a lot of problems for us so if you have your if you have your what's it called p division fx cone raise your hand up here up high yes yes you got it beautiful beautiful all right and so what we want to do at this point is we have literally one goal which is we need to we want to create our first node.js api for today and because we are going to doing one thing and one thing only which is if i go ahead and say do we're going to create a login so we want to create a login login for for netflix cone right here right there and let me actually go ahead and and i will go ahead and i will post the latest that we have from the last time so we'll say add what was the last call november what november november 5th right number fifth yeah save that get push origin master there you go okay all is good there beautiful beautiful all right guy youtube youtube how you guys doing great great to see you all great to see you all all right so i went ahead and i uploaded so it should have the latest stuff on here as well so go ahead and download that from for yourself as well so cool cool cool cool beans all right next up so to download let's talk a little bit about how this whole thing works how do we create a node.js api how do we create a log authentication and i want to use for example i'm going to use uh something called draw y'all to kind of show it to you guys so you know as well so let me see let me see let me see see remind me later here there we go create new diagram create your diagram i'm going to create this diagram right here so you guys can see exactly exactly how we're going to talk about this so let me ask zoom yes this is zoom guys this is what the amazing prophet joseph community as you can see look at this beautiful community everybody is learning everybody is out here to kill it and start for development is that right isn't that right guys isn't that why we're here so all right can you guys hear me by the way right say hi okay cool cool cool yeah so authentication so we have our netflix going correct yes or no we have our netflix clone all right let me go ahead and actually take a picture of it and i'll take a picture if i go ahead and go into html if i open this up open my live server okay it should be here there we go there you go somebody said joe and peter johnson yes yes exactly so this is our netflix clone that we have built in html all right so let's go ahead i'm going to take a picture of it here for a second so we can use this command 4 that's it right there okay and then i'm going to go ahead and put that on here actual size damage too big okay resize it fine hold on what is this guys i don't wanna that was interesting jennifer that's very interesting where did my screenshot go one second oh in the meantime guys i want you to open up draw yo okay if you have a draw you open i will let me know i mean i want you guys to open up draw your because i don't want to be the only one who's uh who's doing this stuff there we go beautiful so we have our netflix clone it's right here okay it's our netflix clone and so now the goal is what the goal is pretty simple we want to log in right so we want to create a login page for our netflix clone right here our login page this is going to be our login page okay login right there let's increase the size here to about 18 no it's increasing even more right there sweet beautiful okay so and our login page is going to be pretty simple guys how does it what is the login page usually have you tell me what is usually what does the login page have tell me guys tell me username and password right so we have username and password so i'm going to put in an input here for using my password right here just like this okay and then i'm going to do alt oh no i'll do command command command hold that's gonna be password right so we'll have username this is going to be user oh we'll say email how does email sound does email sound good right yes or no beautiful i'm gonna do command shift bring it down password right and then with that we're going to go ahead and create what so oh [ __ ] what is this like this hold on there we go beautiful nice nice nice nice all right a lot of i love how people on youtube are also answering username email password confirm password somebody said let's include passport gs okay okay okay so beautiful now with that then what else do we have after this those do we have a button yeah so let's do a button so we'll do a button it's a submit button correct so would you like a submit button let's see and button like this there we go can i change the text in here yeah i can't submit or we'll say login how about that does that sound good login nice so now now this is a very simple simple version of uh this is a very simple version of a log and obviously you know we can make it fancier guys okay and actually maybe you can make it fancier and what happens after this after this what happens is that obviously logs you in to here right but before but before all this happens we need to talk about what happens in the middle like what actually happens in the middle here let me go ahead and put that here because there's a lot that's gonna happen here in a second there's a lot that's going to happen somebody said this is figma now this is draw yo guys this is draw yo not figma draw yours is free very nice free version which is this one that's what i like before now i want you to list out guys what happens here in the middle somebody tell me what happens between the login page and what happened and when we actually get onto when we actually get onto the netflix page what happens something tell me so man so let's think about this here for a second for a second let's talk about this let's say we have a node.js this is a node.js am api okay this is a node node js api all right this is another gs api okay all right what is going to happen i want you to give me the flow go somebody tell me what do you guys think okay so let's think about okay great good good good good so what's going to happen here so inside this node.js api uh i'm going to do it like this actually inside this node.js api i'm going to remove this part right here because i don't want that actually that part trying to make it so it's easier to follow let me see how can i do it like this yeah i'm gonna do like that there we go and i'll put the text on here for node.js api ah this is i don't know is it me or do i i just love sometimes drawing drawing diagrams more than even coding is it just me raise your hand if you're like me yeah i just love sometimes just drawing diagrams so like i know what's actually going to happen you know what i mean there's something about that okay text yeah yeah yeah exactly all right so not just api now so before we even what do we actually go what do we actually take to the node.jspi what do we go to the nitrous api like what do we send when the user hits clicks login what happens okay okay so we sent the email password so let's go ahead and do that and guys go ahead yes but where do we check the if the email is valid before we do that hold on guys who's very loud who has a loud background hold on hold on somebody has a very loud black wish i don't like this somebody has a very loud background which i'm not a big fan of okay i'm going to mute you all for a second here okay guys i'm going to new york actually someone can somebody help me with the meeting portions uh brandon brennan you just raise your hand go ahead brandon how about i'm gonna make you the cohost there you go so brandon just mute everybody okay mute everybody you got it yeah go to participants yeah i make you look awesome i mean you go you should see it and then mute all here i'll do me all here oh maker host now you're the cohost there you go brendan now you're the cohost there you go my bad i thought i made you the cohost okay beautiful so guys and then go ahead and meet yourselves now at this point so with this point on we're going to send something and i'm going to send it i'm going to send something like this so this is another js api and i'm going to send data from here so i will go ahead and i will go here and to here we're going to send some data what is the data you guys said email and password correct so we'll send out email data email and then it's going to and it's going to look a little bit like this we'll say probably email right here boom boom boom right there so it's going to be an object somehow somehow like an object this is how we'll send data we'll say email and that's going to say uh just an example might be something something at a gmail.com right boom right and then password yes or no give me a yes or no yes or no great password and the password is gonna be let's say one two three whatever the password is whatever the person puts in okay great so this is the data we're going to send to to this it's request and this is going to be a api api request this is what we'll call an api request okay and i'm going to talk a little bit about what an api actually is here in a second but okay think of an api just this layer where all the stuff in the background happens okay where all the stuff in the background happens so when we send this data to our api our server what do we do first here i'm going to put this on here and i'm going to make this stuff is going to be blue so what happens first when we receive that data what happens first huh convert it to what okay that's fine convert to json but i want to go a little more high level authentication okay i want to go a little bit more now no less high level okay great but what what what do we do with this data we're given this data guys what do we do with that data say say again steven say again steven i don't know about that because so no no no you guys are going way too intricate forget hashing forget all that stuff guys this is the issue a lot of times you guys think you need to think a little bit simpler right when we send this data to the node.js api we're like okay we're going to ch our goal is not very simple check if if the password using it check if the email password exists is valid yes or no yeah thank you oh my god check if you're like hashing json hold on you got to think about the simplest thing first so check if email and password is valid it's as simple as that okay and now let's think about this okay now if it's valid this is a i call this as um this is a decision tree right here whenever we use like a marker like this guy this it's called it's called decision tree just so you know it's like a decision so for example here i'll say valid yes or no so if it is valid if it is valid what do we do if it's valid okay great but what do we send back to the to our frontend page what do we send back yeah so we tell so yeah so we go ahead and tell so i'm going to do this here if it's valid it's going to go to our i'm trying to figure out how to properly you know close this it's literally going to go ahead and go to this page yes yes so this is yes valid it's going to say hey success and then what it's going to do if i'm going to copy this portion and this is again this is a very high level there's there's a lot of stuff that's going to happen underneath underneath you know but at the end of the day we're going to say that this is remove this this is valid would you would you agree with me on this one okay great so it's valid so all is good so it's gonna make it green okay now what do we do what do we do if it's not valid though okay yeah so on the login page and the login page what do we say what do we say in the login page yeah so we'll say something for example we'll say like so if it's not valid we'll say no and instead we will say i'm going to ah there we go i'm gonna put here this here and we'll say not valid so and we'll talk about how that actually works on you know on the technical side of things but i'm not val and we'll say um incorrect username pass all right or try again right incorrect username name such password does that make sense does this make sense you see we go to here here chuck the email password is valid if it's valid if it's valid then boom we go to the uh do the action netflix store if it's not valid then we go boom we go back to the login page and we say hey you know what you gotta enter the correct using my password all right okay sweet now now let me let me can i try something here for a second talk no you guys still hear me by the way is that everything still yes oh there we go now they can hear you too some seems like it's all good now they can actually hang out too as well all right sweet so we got that portion that's all good that's so good now all i need at this point is what i want to talk a little bit about raise your hand here if you know what is a api raise your hand okay so you know what an api is okay raise your hand you don't know what an api is okay okay so we have a few people who don't know what api is okay that's that's that's that's completely fine okay can you see me now guys there's no lag right there's no lag yeah there's no lag it's all good now yeah yeah no lag okay beautiful so okay great so what is an api because somebody explained to me what is an api and i go go ashwin yeah so ap is an application programming interface so it is a set of rules which allows like programs to talk with each other like a developer will create a program on the server and it allows the client to talk to it it's like a communication medium okay okay so an api is like just an option said it's an application programming interface is it god they always have some weirdass naming for it's like can you explain this in layman's terms stands for application application programming interface account that applies everywhere oh no application is out there intermediate between uh oh there we go programs to talk to each other there we go this is much better okay the acronym it's called application program interface which is a software intermediary intermediate what is intermediate guys uh what is intermediary it's like a middle right it's like a middle it's a middle right jesse you're saying i'm trying to explain yeah can i try to explain see if i can understand you go let's go jesse let's go jesse come on you got this come on i think i think the api is um simply face it's an errand boy and you tell the errand boy what kind of data you want okay in order to get from that errand boy what you want you need to speak his language okay and then the errand boy or the api will fetch the data that you're asking okay request exactly i think that's perfect that's perfect it is somewhere where you go in and you get the data from correct what is aaron can you explain what is aaron boy like a messenger boy like uh i have to say oh it's a messenger or it's like a messenger boy yeah it's fanboy messenger waiter yeah oh really okay i have never heard that that word before for some reason sorry i'm i'm also not in english native speakers yeah what's the word like a waiter yeah yeah i get it i guess it's like the winner it is the waiter biscuit it is um almost i almost want to think about it it's like almost like um it's like if you have a kitchen like when you go to a restaurant right when you go to the restaurant right it's like let's say you're at a restaurant so let me go ahead i'm gonna create this white board here for a second i'm gonna say what no so the restaurant would be a database for example and the waiter would be the api and then the request would be your order you ordered uhhuh go ahead you talk to the waiter and then a waiter will go to the kitchen database to fetch your drink okay and in order to do that you need to know you know what language to talk to to the api because or the waiter because some apis they expect an object or a certain url for you to pick you know to get some data or sometimes yeah yeah that's so if we have if we have for example a restaurant okay if you have a restaurant and let's say a restaurant this is a restaurant and let's say here you guys can hear me right here this is the kitchen this is the kitchen right here kitchen this is the kitchen and you have the tables right so right here i'm gonna draw a few tables so one table table number two table number three but horrible tables but you get my point are they six feet apart they're they're they are feet apart so here right here right there uh right here and here these are the tables okay that's tables and and now let's say uh how can i draw a person like a waiter i don't know uh stick figure oh wait circle i got there you go this is going to be the waiter waiter okay this is going to be the waiter this is the waiter right here so that's the waiter now so if you want to think about okay what do you think if if okay the kitchen is where all the magic happens correct that is where the food this is where we get the food that is where we what's it called that is where so if you think about it so let's think about this okay so what do we what do in the kitchen what happens food is prepared right yeah what else happens in the kitchen yeah they take a order what to make okay they take the order the order is taken so the order order is taken okay okay what else crap they dispatched the order this patch would give a dispatch what does the dispatch mean um they take whatever the person ordered and it goes from the kitchen to the table to the actual table or actual person so they actually make the order yeah okay i like that bell right there so cook the order cook the order correct you're like dispatch the order it's like hey wait can you uh has my order been dispatched yet we're just going to slap me in the face i've never heard that before nice to meet you my drink is async you serve them i love it okay sweet okay so we cooked the order what else happens and then you call the waiter to bring the food out to the table okay so you call the waiter call the waiter the waiter okay okay and then also in the kitchen that's where we have all the ingredients right all the ingredients right that's where the all the that's where the ingredients are right so ingredients yes or no the good restaurants yeah that they don't run out yeah i think there's also a moment of uh validation you know when you order something and sometimes they come back right and they say oh today we don't have it anymore okay so like basically uh checking to make sure to stay checking to make sure if we have any more right yeah yeah why they would if we have something what is available if thank you if thank you make sure if food is available yeah like the same thing what happens when you're if the email exists in your database yes yes yes so yeah so based on this based on what you said how can we relate this to an api if if let's take let's think about like this this the tables that is the front end the tables right the table that is where the user is here the user is here correct so here we have one user saying you have another user sitting right that's the user right these are users so let's call this jesse right here so jesse is here sitting in this table and then near jesse we have i know i'll say devin devin okay and they're just sitting right now okay and they ordering some food okay so when you look at how we correlate correlate you know an api to a front end what will be the front end the user what is the user interacting with so currently the user is interacting with the front end so what is the user interacting with tell me food menu the menu yes the menu so the menu look at that we'll call it the menu the user interacting with the menu okay great so the menu or the let's say the user interacting with the whole kitchen just in general which is the front end right that's the user sees right they see the menu they see the front end they see other people yes or no yes so that what if we call that the front end what if we call the menu the table what the user interacts with you know with hands what if we call that the front end oh user interface user interface that's what the person sees nobody sees the kitchen yes or no yeah yeah but what do they see the tables the website the menu right that my friends that my friends is going to be so if i go ahead and click on this so if i have to click on this so if i'm going to create a line right a line so this is the line i will call this the front end right the ui here i'll call this a little bit here so it's this is the ui right so this whole line represents the ui give me a yes or no yes that is the ui and this the you this is the and the the jesse and devon they are the users now okay let's think about this here would you okay so here okay great so now so we got the ui now we have the knowledges api that is where we get the data let's say we want to check if the username and password is valid okay how do we check if the user password exists remember in the kitchen we said checking to make sure food is available do you see the correlation here no we check before we check through the menu i don't know about that the menu the menu can be old let's say let's say the menu the menu can be old the menu can be you know two weeks old all of a sudden for example for today something changed where that menu something doesn't exist on the menu you're not gonna you you're not going to create a new menu every single day yes or no i think we need to ask to the waiter wait or no available or not the winner knows robin that's correct the waiter knows yes the reader knows but what is how does the raider know asking the chef how does the waiter know who do they ask they ask the chef they ask the chef where is the chef in the kitchen so then what is the kitchen the database the database and backend backend the end hold on you guys can hear the dj air horn right you can't can't hear it yeah we should play the accessories damn it only the people on youtube here dammit i'm never looking at a restaurant the same way again there you go that's a nerd then you say hey uh waiter can you please fetch me uh talk to the fetchers i've never bring it to the front end please i'm making an http call uh to get the specific request exactly we know exactly exactly so if we think about it jess are you still here by the way okay great so you can see how the back end is the kitchen you see that here yeah that my friend and what does the bucket contain the back contains the api it also contains the database don't ace not database no database no damn it come on did a nas so that contains the database right okay great so we figured that part out now the big question is what is the waiter what is the vader waiter api is the api right no we just said the back end is the api we just said the kitchen is the api waiter is a request call like yeah yes there we go the waiter is the api request call yes so if you think about the waiter right right the waiter goes from where the winner goes from here right the waiter goes from the table the front end and they can the main communicator between the user and the kitchen is who the waiter the waiter exactly and so and on the logic side of the actual on how things work out in uh you know and you know in front and back and stuff right we have the api request which talks to the kitchen or talks to the data the api and then you know responds back with something yes or no yes yes so if we look at this this my friends is going to be a what an api request this is amazing [Laughter] ryan does that make sense totally so simple right right the only missing part in this like this is not relevant but just like hosting of service yeah the hosts in your servers yeah and we'll talk about that a little bit later hosting the actual this whole service yes but but the ui the backend the waiter they all take a big part this is literally this is literally called you know now you got your full stack this my friends is full stack this my friends is full stack development if you know both the ui and you know both the kitchen you're a fullstack developer so if you know how the kitchen works and you know how to create a really beautiful menu you're a full stock developer does that make sense okay so any questions before we move on on what is an api request what is an api and how it all works together if you have a question say or or you know or so where would the business logic sit the business logic well you tell me where do you need to sit between between the tables and the back end why do you think that's the business logic if the if the back end has the api in the kitchen where's the thing about this is the business logic in a restaurant where is all the preparing all the community all that's happening where is it happening tell me business logic happens in api like kitchen fit hold on one second fits what do you think um i think it will sit it too sick to sit at the back end but before it gets to the api well yeah yeah but but in general where does it sit right in the kitchen when a chef makes the food where does the chef make the food right that's the logic is that right right what is logic logic is what logic is equal to what making of the food yes or no yes yes logic is making up the food the chef knows how to prefer the food they get the right ingredients they're like okay this ingredient is good this is bad right if you just if you give adjustment the right amount of salt then you you know you get this if you give it if you give it just the right amount of pepper then you get this that's the logic the recipe yes that's the raj yes the recipe that is a lot the logic is the making of the actual food it's the chef he's doing his thing you know he's like so good you know yes hold on that's that's good that's a good question too so now before we do go to that does it does it make sense the fact that logic is the making of the food yes okay does that make sense the logic now is where fits i want you to answer this question where's the logic now yes it's in the kitchen right it's in the kitchen all right then but then doris doris asked dora uh do i say doris doris how did i say that doris yeah yeah doris doris okay so then doris asked okay and said where is the ipad response well think let's think about like this the food is prepared everything is all good we got the food what do you guys want let's say what should we create guys what do you want the kids to create lasagna what do you guys like pasta pasta lasagna i would say lasagna let's make some lasagna how about that that sounds really delicious right now especially because i haven't eaten right now that sounds really good so so let's say lasagna okay so okay the lasagna is made in the kitchen now who delivered the lasagna back to the table to the to jesse and devon wait the waiter so about based on that doris what do you think is also the api response the writer the waiter they are both right yeah they are both and then what happens and then what happens is pretty simple guys then what you got is you got jessie right shoot hold on one second right here you got jesse and they are both really happy i'm not the best drawer guys okay this is why you draw yo yeah that's a frog oh my god all right so they are both happy because they just got their lasagna that's some great delicious lasagna let's need to air horn i wish you guys can hear it but unfortunately you guys can't so so that my friends is that my friends is how the whole api works and that was an api the api is this so the so the api is that backend you see that it is that backend the request and the response it is that that little wait middle thing between the ui and the back end okay and you can call an application program interface how you know it's funny it's so crazy like this hold on let me go ahead and i'm gonna screenshot this for a second this is really cool guys i'm gonna screenshot this for a second here there we go there's no screenshot like this screenshot like this everybody can you raise your hand say hi on the screenshot thank you all right nice so at this point any questions before i move on uh and as i have one question go ahead so technically in a server and database where is the business logic happens is it in the server side or is it in the database what do you think oh i think it's in database why do you think that what's it okay let's think about this okay here's here's what one should think about so we talked about logic and then so we have you're talking about the logic right like logic is a happening database or is it happening in uh so it's repeat the question one more time yes the business logic okay api call okay uh the validation happens in the databases indeed the validation yeah i mean the apa okay so you're saying if the logic happens in the database or the logic happens in the backend api correct and or the logic happens in the back end correct in this server yeah yeah in the server so okay so great so i want you to think about this here so i'm going to connect this so think of this it's part of the back end we'll give me this part the back end and this will just be i'm going to call this right here the database but it's part of the back end just so keep that in mind okay it's just that's why i may have made it where it's like inside almost right so okay the database what is it if you think about what is the database on the kitchen side what is the database the ingredients okay and so what happens the chef what takes the ingredients and then the chef does what the logic makes the food okay so so tell me what is the database versus where so tell me now so now based on that is that right yeah yeah where do you think is the logic is on the server which is the back end or is it on the database or server is it in the server the database should not have any logic period no logic the database is merely there for one reason it is for the ingredients it is there simply just to get the data it contains the data it contains the ingredients that what it's the it's made for great makes sense the logic of checking if it exists or the actual like you know what do we do with the data that is up to us that is up to the api to decide all right make sense beautiful okay sweet sweet sweet awesome so at that case guys any other questions before we move on yes god what's up jenna yes yes in that case you see because she has only one waiter and she's only helping with a store but you have one table but you have to table right she's waiting for the order we uh be done she have to take another order that made me like okay the waiter is the ap i know is waiting for request response you know but it's not only one table several multiple tables that's right multiple tables so multiple users multiple so so let's say you have multiple users on you have to you have multiple users on your website right on your website right a lot of you know you got gianna you got brian you got bishez you guys all wanted this big amazing restaurant we'll call it the restaurant of pwj okay get on to all this amazing restaurant okay so in order for us to be able to to to cover all of you guys you know what happens what happens we use an uh asking from what happens you just have multiple waiters you just have multiple waiters that's it you have just as many you literally have just as many leaders as you have users that's it okay i know that's a lot i know it's a lot but we're talking you know in programming terms right and programming terms that's pretty that's pretty fine so you just basically have multiple you said you have multiple leaders leaders right so quickly yes talking about waiters right so in programming terms right so you only need one waiter the the api bridge yeah the bridge is the request right okay go ahead okay no say one more time say one more time no that was yeah so so basically i'm thinking of realistic terms so you need multiple waiters to actually get the order right that's a realistic term but in programming language you only have one bridge of api requests yes yes yes yes yes and that bridge is simply the network connection right the bridge is a network the api requests connection right it is a connection that that that's the bridge it's the request and the response okay and so however however many users you have so if there's if there's 100 users there's going to be a hundred api requests there's a thousand users there's gonna be a thousand api requests make sense okay perfect okay other than that any more questions go ahead yeah and what's about the async request exactly so yeah and the chicken and the kitchen sorry yeah yeah so ac async requests what is it so i mean okay so async happens on the back end stuff okay async but what is async it's asynchronous right it happens in parallel right yes or no async async equals equals shaft equals parallel because right so that means we can cover multiple users at the same time that means that means what that means we can have multiple chefs right covering users at the same time yes or no or at least they don't have to wait until one order is ready to serve somebody else exactly so we need for that we need to need simply multiple chefs that's it right you can have a lot of chefs and the back end has a lot of chefs the backing is so strong that the bag can literally can can have a hundred users at the same time in parallel just where you could just ch now at the same time very nice yeah yeah thank you you got it go ahead just a little confused here like uh like if i am like a single single user and uh like if i'm hitting the back end i cannot have like more than one request to the server at the same time can you i'm not sure that's an ass kick what do you guys think hold on hold on hold on one second one second what do you guys think about that yes we didn't get the question can you have let me put this down on here i'm gonna put this down right here so what will be the case of having multiple requests because you could order an appetizer an entree and dessert oh so can you can you that's a good question so can you can you have multiple requests oh come on at the same time set parameters in your request no no you can't yes of course you can of course you can but yeah but but can you tell me like what's the need of like multiple requests every single time so think about it like this so the answer to this is yes yes you can have multiple requests at the same time go ahead go ahead um um can you hear me yeah i can hear you okay uh um this is it i i work with amazon okay uh not um i.t i don't work in the itv4 okay office okay i i work in the warehouse okay where goods that are bought from the website uh maybe once somebody buys something from the website we have scanners we have about thousands of uh um i mean uh associates who are holding scanners let me so once the request comes it comes in multiple forms with different people holding their scammers you understand you buy buy somebody buy somebody's also buy yeah all those things are routed onto the amazon database yes whereby there are physical databases situations in the warehouse yes form of shelves yes where we have um the items being stocked into the shelves yes once the request comes i look at the item that i've been bought with my scanner then i look at the um i mean um the shelf that uh the item is located in with a number then i now go and then use my scan the item yeah to show that so so and so bought this and then i remove it and then process it yes at the same time somebody to use to buy in some way so we have thousands of requests coming to the api at the same time yeah and it is directed towards the same one single database we have yeah and we we have one centralized database for amazon yes only that we have one i mean multiple warehouses voted around the world so if you are buying from uk you buy it with your website then if we have um that attending the uk warehouse then people can get it for you if it is not there they give you time during the process of uh buying the item and probably they give you like a day or two or three yeah you can get it from in a nearest warehouse and then process it to you so it is just possible multiple requests are done at the same time to the api and then it is a process at the back end which is done um our uh i will not ask in chronology i mean at the same time with no glitches whatsoever because i mean at the back end we have all uh the items stopped uh virtually and then physically we get it done at the same time yes i think yeah so it is possible if there are no glitches about that perfect uh wha perfect what is your name because it says it says 915505 is your name my name is uh muhammad muhammad prophet muhammad that is great that's a great ever that's a great way to explain it you can have just how we explained it right yeah there's one such a database but you have requests coming in every single time thousands requests thousands of requests at the same time right you just have a lot of people doing the same thing all the stuff right it's the same no freeze nothing database works real time exactly in real time exactly so you have the database up and running you have your scanners that are the physical or it is connected to the database so once you you ping from the website it comes straight on to your um to your scanner then you now look at where um the item is stopped then you pick it scan it to show that you have removed that item from the record of the database exactly um so they now process it so uh as we all know one item or one one being is located with certain number is like it's an array of objects stocked in it so once you take one out of it then the length also reduces um against the number that was recorded into the beam so for now this is the explanation i i can give on i think this is great nice job thank you thank you muhammad i appreciate it thank you appreciate it though it's great this is awesome right have a database yes go ahead anish just wanted to extend on this question because like i i got like he's talking about the various instances happening on the server like from different places like with different instances what my thing my question is like me being a single user right like if i am landing on a single page right i can have like on that page i can have like maybe two calls to two different databases fetching two different uh kind of objects right is it i have to first finish the first and then come to the second yeah i think i think um what it is is that it's not just one database talking from a system systems side of things you have multiple databases but it will be coming through and there's what we call load balancer and load balancer will find out which database is used less and you just send a request there basically that's why so so that's a good explanation but i think i think in like in in what you're trying to say anish is like what you're trying to say is like if you're trying to make a request you know one time they try to make a request at the same time so here's the thing when when i make a request for example right imagine two users right at the same time the one on the website correct took you to the same time exactly the same time let's say they click the submit button at the same time right they click somebody at the same time right what can we do right what's going to happen what's going to happen things so like it will be cute cued up what i mean they're going to give a queued up and like it will happen uh like like they form stacks of operations and then it happens one after the other place sure true happens one after the other but at the same time yes they can technically it's gonna hit the request it's gonna hit the request at the same time and it's actually going to process that request almost in parallel in parallel pretty much it's gonna process it in parallel what you need to think about don't think about it so hard don't think about it so much where you know tell me what what is the issue that you faced you said you faced some kind of an issue yes or no yeah so like my my thought process is going in a way that for example i'm using this netflix page and for example i'm having my net originals and trending now and top rated uh information from say one database and you know that logic is implemented in a different way while the other uh john address that i'm actually trying to get on the same page is from a separate database or maybe even from the same database but with a different logic all together so i'm going to have two different end points okay right so when i'm so when i'm hitting this page am i having like like can i have like two requests at the same time or is it like i have to first finish the first request and then finish the because i have two requests at the same time you can make two guests at the same time yeah yes weekend yes the chrome and it's actually limited by your browser guys it's not limited by the database or the backend logic it's actually by the browser check this out it'd be free if you guys don't have any questions actually because i can remove this actually here for a second look at this limit limit of a number of requests of of parallel request requests in chrome so look how many uh max player hd connections in the browser look at that check this out so chrome actually you can in parallel get get basically six six connections may have six connections at the same time okay the other let's say let's say you have you you make six requests right you make stickers and it's trying to get at the same time what's gonna happen is it's going to let and then let's say now you make a seventh request okay seventh request it's just simply gonna go in the queue and it's gonna wait and then on the on the chrome it's simply gonna wait for the others to finish and then it's gonna go in the seventh request does that make and sense and then it's going to hit the api so the same so this is actually limited by your browser not so much the node.js api is limited by your browser how many connections or how many requests can you make at the same time in chrome you can make six then the seventh have to wait for something to finish to actually afford it to go got it got it does that make sense because you feel like you're still a bit confused oh no no i'm like i'm sure no you got it we can and like all of them will be like we have to define it as a sync yes well no yeah you you don't yet you don't have to define it as async you simply make the request and that is it okay so it's all happening parallelly irrespective of me yes you simply make it right that was a question that was like bothering me for quite quite yeah yeah you simply make the request if i if i you know if i for example i mean look at the same time at the same time when you call a function let's say you call a function here let's think of it like this uh am i can i erase this guys is this all good this this uh drawing ahead yeah i can erase uh actually one more question on this nice okay go ahead uh like where exactly like uh like remote procedure calls like rpc or grpc falls in here and can we expect any class any sessions on those on what almost specifically uh grpc and rpc like remote procedure calls and what is jrtc grpc like remote procedure calls g for not j it's g um i'm not sure what this is specifically i'll have to look into this for us to actually for a look for me to actually fully teach you guys what this is grpc i've never had procedural system initially developed google protocol yeah so i think this gets more into a little more advanced stuff uh maybe that's something interesting that we could definitely look into but for now for most people i just kind of want to focus kind of on the fundamentals okay okay okay perfect so yeah so if that's if that's all yeah yeah um i'm sorry i'm confused after uh hearing from anes and then she has made me confused um about the api request yeah when you said that that there is six uh for chrome there is a sixth limitation okay yes so now i am i don't understand really uh what do you mean by this like okay when i am a simple example like i'm when i'm when i'm requesting okay for like i'm i have opened this amazon website on netflix and i'm sending the request so in amazon i'm i'm sending wanted to ask for the next click i'm sending another request and before the yeah it's per site it's per site it's actually it's per site so it's not if you're different sites it's different so it's per site okay so in amazon i can make six requests yes and then on netflix you make six requests at the same time then same thing and you want and then and so forth but don't think of the please guys guys don't think exactly but don't yes you can you can make it yeah it's depending on the depending on what i say but don't don't think about i didn't learn this until like you know literally a year ago about the whole six request thing because that doesn't really matter guys all you need to understand is you can make multiple requests at the same time that is all you need to understand okay and even for example when you have a function if you think about it right in javascript right when you call functions how to call functions call right what happens in javascript if i remember go ahead and remove this you have one function oh should you have one function right here this gets called and another function you can really get oh shoot right here right here right another one it gets cold and i'm gonna get so it's called so it's it's almost like this one fires and this one fires and this one fires so sometimes it's really hard to make them parallel right they're just really quickly happening at the same time almost at the same time right but technically they're being fired almost like you know simultaneously but you know there is still some time time go ahead um i was thinking um what an issue is asking yes um with the power request yes it does happen and then once um the request is going it comes in the form of data block with uh encapsulated with some kind of um um ids you understand yeah so and we remember what uh we call like fifo first in first day first yes maybe yes so maybe if they are all directed towards a particular shelf then probably all the data block that is going into the shelf is somehow giving an id and then this one the request was sent from let's say uh my per my time here um maybe 10 45. this one maybe 10 46 or this one 10 40 uh 47. so it follows that order you understand though it was done within the shortest yeah right true truth is directed towards a particular place maybe the same place you get it so once it is done that we i mean the back end also consider that factor yes what time did the request i mean what time did you do that what time did the second one come yeah yeah yeah so then they now encapsulate everything with an id so this is my id this one comes in first before this one and then it also follows yeah so that there will not be conflict with that beautiful so this this is called encapsulation so for example this is called and this is more of advanced topic guys don't want to i don't want to like confuse you more but there comes a point where you have when you're trying to access database at the same time right because data changes all the time right you have to make sure that the database basically like if one is trying to remove the data you know another one is trying to for example you know you know let's say that you're trying to put you know data at the same time or you're trying to you know request the same amount of um what's it called um make changes to the same amount of data right what happens first right we'll talk about that later on let's say for example i want to change you know i want to change uh what's it called let's say i want to change in a database i want to change brian's name right so and let's say i want to change brian's name to be to be nas and then and then uh ashesh wants to change brian's name to be to be cool i don't know whatever right who gets to change it first right so i don't want to confuse you guys at that point but that's a great point you you prada muhammad there is a thing where we do on the database side to prevent that stuff from happening because like who knows like if you if i if i want to change brian's name and then i just want to change brian's name on the database who goes first right who goes first but i don't want you guys to think about that because that that will only confuse you even more for a second here we'll talk about a little bit later on and i can actually show you an example okay show you an example so you guys can see it for yourself okay yeah give me a thumbs up yes nathan all you're saying is the acid it's the acid acid hold on it's a property of databases transactions which is intended to guarantee yeah that the data validity you know when there are errors yeah yeah yeah yeah yeah yeah yeah acid acid does this commonly known as a potential lasting psychological drug [Laughter] not this acid guys don't do this one don't do this put acid and database yeah yeah yeah yeah yeah i know what you're talking about i know you're talking about yeah okay but atomicity yeah consistency isolation and drop yes we'll talk about we'll talk about that in the next one how about that okay we'll talk about this in the next one the next coaching call okay beautiful all right all right cool so we've got this portion raise your hand if you have a broader understanding of what a api is and how it all correlates together raise your hand up high and say yes i do yes i do yes yes i do yes i do there we go beautiful that's awesome that makes me happy okay cool so now guys at this point i really want to quickly i want us to actually create a really small api a node.js api and we're going to do this here in a second because next the next live code when we get together uh we're gonna actually create something that's different so let's go ahead and do that to create note just api uh actually here the portion we're going to create is which portion it is this portion right right there's no there's no jsbi the one that actually checks the email password is val and so forth yes or no yes give me a thumbs up yes okay good all right so let's get to it so the first thing i want you guys to do is go ahead and go to node.js and you could as you're doing go ahead and know gs and do kind of with me right there go to node.js and then download this right here so node.js ian i'm going to go ahead and cop shoot i'm going to copy this and if you guys have not just installed that's that's actually really good i'm gonna put in the chat here somebody's like yes i do in the chat i like it there you go i'm gonna put that in a chat here and then what you want to do based on that go ahead and download it for mac os or for whatever it is right there right there and then i want to go ahead and no gs i'm gonna go to node.js node.js starter api yeah and i'm just going to go ahead no no no no no that's not all i want okay so with what okay so when you download a node.js go ahead and install this right but obviously i'm not going to wait for you guys to install it initially i'm just going to show you what happens when you do when you do have an install and everything is all good so what i will create is i will create a new folder let's go to netflix clone i'm going to create a new folder and i'm going to call the file i'm going to go my projects where's my project um my project and then i'm going to go to netflix is this the one i think is this one yeah it's a netflix clone right here but i'm going to create a new folder called the netflix netflix api that's what i'll call i'll call netflix api okay netflix api and then i will go ahead and open this one file open file open file open and then we will open up that specific project so i'm going to say a netflix api right there open this one up beautiful and so it's just going to be a plain and simple oh my god why is my computer lagging dang okay netflix api inside this one the first thing we need to create actually is let's go ahead and and now inside to actually start up your project all you see is simply to do is right click and then open terminal in new tab so new new terminal at folder or just open your terminal and then what you can put is you can do put something like npm start so let me go ahead and just make sure that i'm all good and is i think it's npm start anybody remember npm install no i think it's npm start npm npm right that's the one thank you yeah npm init so i'm going to make this larger for you guys and pm in it so what mpm init is really it's going to ask you okay um you know what is your project so in our case it's going to be netflix underscore api that's fine i'm going to hit enter version 1.0 hit enter description this is the api for our netflix cone boom entry point index.js that's fine test command we don't need this right here get repository uh don't need that keywords don't need that author i want to say pwj for now profile javascript javascript license that's fine it's okay yes enter boom that's okay so new minor version of npm okay great so that's fine so now if you look at our netflix api do you what do you you see something something was created a file was created and this file is called package.json it's called package.json this my friends what is package.json you tell me it's a list of all the dependents hold on pedro you were talking go ahead pedro uh it's a list of the dependencies and uh that we need to to run our projects it's listed dependencies it's literally the description it's kind of like this description of what your project is it's a description of what your project is that's literally it it will contain dependencies a lot of different other things now with that said let's go ahead and create our api and we'll to create api we're going to use something called express.js so it's expressjs works handinhand with our node.js api so expressjs right there you can see right there expressjs is a minimal and flexible node.js web application framework that provides a robust set of features for web and mobile applications see right there okay so it's a create it's a way to create a robust api quickly and easily all right makes sense and it's pretty exciting you know this is how we literally this is the get started you can see we have mp minute we did that and now what we need to do is we need to do npm install express okay so it's going to go to here i'm going to open this up in new terminal folder open and terminal that's fine don't need this right there so we'll do mpm install express tester save so npm install express desktop safe hit enter great so we went installed okay now really really quickly i want to talk about a few different things what happened here what happened here guys what do we have inside now if you look at package.json you see the dependencies what happened dependencies check this out somebody tell me it's alex press yes so you can see express now is part of dependencies that means that whenever someone else goes ahead and wants to install this project all they need is they simply need this package.json file and they will install their dependencies and where do the dependencies are installed sorry oh [ __ ] what's happening why did my headphones you need some coke i need some what hold your bread all right so drink some water i i'm drinking some water i actually water i have tea look at this guys have you seen look at his tea guys this is amberly's tea this is emily's cup so i just stole it from her um so so let's go ahead so we have no so if you look at this check this out all our stuff is actually saved aware it's inside of modules the null modules contains express right here you see this if you look at express it's right here this is the your express remove this this is the express right here boom right there that's your express there okay so this is where all of our independences will install okay great so now let's go and install and do let's go ahead and format if you look at here so we got that next hello world okay and here's what they tell us how to do to run to run it locally this is going to be the index.js file right here check this out so it's to create this all we need to do is we need to create an index.js file so let's try this i'm going to right click and you click new file and i'll say index.js this is the this is the the entrance of your api so if you think about it you see this main that's where that's where the main entrance of your api is and this will be in the js file and now for this the express.js you know starter pack starter file if we go ahead and copy this i'm going to command c i'm going to copy this specific portion okay and i'm going to paste it into here boom right there so what are we doing here what are we doing here in this instajs file and again this is javascript guys as you can see node.js is javascript right what we are doing here is we are actually i'll have someone explain it for me what do you think uh i want to pick on someone let's say i want to pick one stephen what do you think so what are you doing here you tell me the ironic thing is i was actually working before the call on the burn tech talk low oh beautiful there you go we're actually so you know your stuff oh kind of yeah still grasping it but okay but tell me what's happening here so basically the first one we're requiring uh we're calling the express the currently expressed yeah no what's happening here um it's calling the express um a little help we set the api request we're importing express because express right now is inside the null modules we need to import all the code that express has and import that into our application so we can use it yes or no great now here what do we do what's up gianna you say something yes yes let me ask you because every time that going to create one application for example on this one we are in the api server but i don't know if i have to insta how you say install mp express just for the application locally you know just an application or globally because i say okay everybody install expressing in node i already have installed globally do i have to do that every time that i have you have to do it every time for an application for that for one application yes you do for yes yes yes because what happens guys what happens when you do require you know what happens require here's what require does require will literally import the the data from where the node modules right there it's going to look for in here and if the node modules are not here if there's if your nodes in modules are installed globally they're not here you need to be you need to have that as part of the project on top of that it's very important because when other people install when other people want to go and install your project on their computer they need to have all the known modules in there and so you need to install it just for that specific project okay make sense jenna good question thank you okay go ahead brian yeah really basic question i guess go ahead what's on what's up what's on express so here so express so i guess i could explain it better so node.js you understand node.js is an api it's what we're using going to use for an api does that make sense give me a thumbs up okay now express express is think of it as like um so if we have so if you think about this if javascript is no gs express is react gs express the framework as a framework see right there it's a web framework for node.js react.js is built on top of what javascript exactly express is built on top of node.js it's like it's got that cool functionality right it's got the other cool functionality that like allows us to create apis right node.js node.js is the basic right it is the foundation that foundation thing right but but but express is what just makes it so much easier for us just like react.js makes so many things easier for us right right the whole binding thing how do you bind the data within the front end and all that stuff right it's right to this it makes it so much easier the logic all that stuff it's just so much easier that's it but under the hood it's using node.js does that make sense now yep beautiful sweet okay so great so we got that so now we're here and inside here now we are going to initialize initialize initialize express okay here what are we doing what are we doing here guys setting the port guys we still have 232 people watching holy moly that's pretty good i'm cool 232 people watching and on this video okay dang guys by the way guys how how do people join an amazing community like this guys let me ask you this question how do people join like amazing community like this how do they join how do they join you guys tell me wj join pwj where's the link guys where's the link down below down below should they join yes or no 100 yes 100 there we go 100 guys you got the results right here yeah you guys you got you guys 100 have 160 people right now that are saying you guys should join if you're not joining if you're not in pwg what are you still doing i don't know just you know this is this this world is too too uh you know to uh yeah exactly all right cool guys so here what are we setting here what the port setting the port turn the port create okay okay what is this now this might be a little difficult for you guys to understand fully what is this api using right so it's using the get method what is the get method okay what does this slash mean so look you see how we're using the app we're using so we're using so right now we're using express right because it says app.git right because right now if you go to here getting started let me see getting started next hello world let me see a next express generator blah blah blah no that's not what i want uh let me go ahead and open some new tab let's express.js i'm going to say app.get app.dap duplication nope app.get right here app.get returns the value of the name app setting name is one string trying to find an easier way for you guys to understand this right there so you see app i get right here so what is this what does this get do it's a get request correct this is handling the get request what does a slash mean what's up that's the end point that's the end point so what this is the homepage input right the endpoint right this is where the logic is going to be logic for the get request now i will talk about this in a second but there's actually something called a pulse request there is a patch request and so forth a get request really simply means when you do that git what does that mean what does that mean return something you return data that means i'm trying that means i'm trying trying to get data okay i'm trying to get data this is where the waiter is simply getting kind of data from simply getting some data right from you know from the chef or something like that right simply getting data okay so for example let's say this let's say for example as a user i asked the waiter hey uh do you guys have what is your curve for example let's say i went to the waiter and i said hey what is your current soup of the day the winner went to the chef and asked the chef what is the soup of the day and then they return it back to the user does that make sense that's like a get request get it okay cool so awesome so that is a get request so let's go ahead and on the request what do we say that we send what hello world to the request okay great and then here what happens here listening on the portion listening on the port so this me this is where we start the application this is where we start our app or this is called listening to our application or listening to the port into the port this is when for example this is almost like when you say when the kitchen is open so the kitchen now is open the kitchen can be closed or the kitchen is open this is saying here open up the kitchen that's what this is saying make sense okay cool so now now we need to start start up the restaurant we need to start it up okay so let's go ahead and start it up to start everything up we go to here and you can see first create a directory name my app change it to run so we did npm in it although everything is good there uh we'll create app.js but instead of did we did index.js sort of app.js and now run the app with the following command nodeapp.js in our case it's going to be node index.js so i'll do that node index dot js look at that now we have example app listening at this so i can literally now copy this look at this we're listening on this specific open let me say this we're listening at this specific app and if i go to it check this out guys if i go to this hello world look at that hello world we have officially created our first ap on aprion api endpoint we officially our first api endpoint and that my friend is the start of something something new oh thank you that is our something new okay because after this now for example let's say you want to return data you can actually now return this look at this you can now do like you can now do for example like you know things like valid valid so things like this right so like if i save this refresh this oh shoot i need to when i by the way right now you wouldn't need to do this but when you go ahead and change anything on insta inside instajs you have to restart your app so you have to do command c or a control c and then you do local then you do note and it's a gs again right there that will choose nordman yeah well yeah and then we'll do normal here in a second so see this returns data right here this returns data to the api to the front end now we're looking here one thing i want to want you guys to install and i want you to install nodemon so nodemon nodemon what noma will do is just it's very simple you can actually install it globally right there but you know you can still install it actually no let's install it like this for now what normal will do is it will listen for your file changes and it will restart your server that's all it does literally that's all it does so let's go ahead and do npm install save dav node month that's going to quit out of here we'll say nodemon like when i was working on your blog project i had to put pseudo so that some computers i get yeah some some people you have to do studio that's correct some people have to do suit if you get an error then you might have to do a pseudo sudo npm install save that save down nodemon okay and then what happens if you go to package.json that means that no mon is now inside the dev dependencies and i will talk about what is different between dev dependencies and dependencies later on but for now i just want to focus on installing nodemod and actually having you guys use it okay so we installed nodemon okay and now all we do all we simply do is is you simply know you use nodemon now we'll do for example now node mode so you can do nodemon beautiful so what's going to happen is what's going to happen is if i make a change here let's say i do for example now i change it back to hello world i want you guys to pay attention to this okay pay attention to here when i make a change we'll say hello world and i do command s for save look at that you see see what happened it restarted this it restarted restarted due to changes started no index.js so it restarted biscuit the server so it applied new changes makes sense and that means now if i go back to here if i go to my localhost if i refresh this we now hello world and that's it guys we've created our first api and i think i'm going to finish it at that that's going to be our goal for the day we got our api started and then tomorrow tomorrow not tomorrow but next coaching call exactly thank you romney yeah guys everybody give yourself a round of applause that's awesome um and then the next cochico will actually go deeper into actually creating the you know the username and password api how cool is this guys hey now yes ramy that's awesome the w as a as a baby you're talking about this oh my god hello hello world hello hello so guys what i want you to do really quickly is for your homework um i'm not going to i'm not sure if i can create a little video right now because i have ecam running i have zoom running at the same time i feel like i'll just kill my computer if i'll create also record a video right now but i mean i mean we can try i mean we can try it won't hurt can we i don't know i feel like i'm just gonna die none well at least he will die for a good cause oh god hold on uh hey hi nasa so i request you to share some interview questions and no jails hold on one second one second one second who that was that you who it is it's who yeah where are you hold on one second let me see and be fine let me find you no no guys loom is not gonna work guys it's too much for my computer to handle right now no it's too much too much all right so uh go ahead what's your question uh so uh if you could provide some interview questions and node.js that really adds you mean like oh interview questions yes for an interview like any resources or resources for node.js i mean to prepare for the interviews like regular interviews for the entry level okay i mean so for node.js most of the time you're actually not go people are not going to interview on node.js like most companies will not uh you know interview you the best way guys that i would say for you to prepare for an interview is actually going to be the one thing they will ask an interview is like what is an api how does an api work that is the foundation and underneath that they will ask those couple questions but they are not going to ask questions go ahead hold on one second run me one second i'm talking hold on but they are not going to ask questions you know around like what node.js is and so forth okay okay it has to do with that question what's up well i was quite frustrated from from module 8 i didn't know what is this fs require a face there is a nice tutorial um given by mosh uhhuh one hour about no node.js gives you the basics of objects beautiful so if you listen to this you know you know more or less the basic things you ask for beautiful uh actually the thing is i'm i'm pretty i mean i'm developing applications but i'm not able to explain the concepts when it comes to the interview so that is what my issue i completed so many models in uh bwj and other other projects in online like youtube or udemy but i'm not able to you know explain them like how uh explaining the interviews you know that is what my issue so i have been asking this question like where can i prepare and how can i prepare for the interviews yeah with some good explanations well so for example the api the api explanation we did today did that help you okay so i mean it is not about only the node.js thing but yeah i'm i'm i mean i have issues with react and javascript also so i'm not able to explain the concepts to them in a clear way um like when i start explaining to them so i'm going you know totally out of the box so i mean i'm not able to answer the question clearly so that is what my issue yeah i mean i mean so almost like two months back so i almost completed a couple of projects and i created my own portfolio beautiful um but under the the link to the to the youtube tutorial for you okay yeah so take a look at that but i think what she's asking is like so so guys one second so hell hold on hold on one second so so you know you you might not guys so you might not actually you know um you know it might be hard initially to kind of to to fully explain all the topics for you to fully spend the topics without what i would recommend is you really have to try out for example let's say you create a project you really need to let's say you created a project let's say you created a twitter clone project right or let's say google maps store locator for you what i recommend is you need to start try to create a project by yourself now by yourself fully without even looking at without even looking at um at the what's it called at the tutorial you created it one time i actually recommend you to create it on the second time again once again without looking at the tutorial okay okay here's why because then you will figure out how to properly then you'll understand how to properly how to properly um you know uh what a node.js is you know why are we creating another request and so forth that is gonna be a great way to explain it another great way to explain it is you know what become a success coach you know why do you know why no because as a success coach you will teach people and when you teach something then you really have to learn it then you really by teaching you actually learning does that make sense yes so for example if for example here's what i want you to do uh hold on where are you do you have a do you have a video of yourself do you have a video right now open no guys okay guys make sure please turn turn on your cameras i want to see those beautiful faces i don't want to see the black boxes turn them on there we go there we go beautiful thank you tonio there we go why are you guys always hiding i understand like why you guys are so afraid like nobody's out here to you know to get you you know we're all here well there we go thank you max turned it on and nathan turn it on at harvard turn it on thank you so what i would recommend for you is i want you to create a video actually explaining what node.js is that is going to be the best way for you to learn okay okay i watched the cr no i know i know i'm saying it's crazy i know it's crazy but hold on i know it's crazy but hold on where are you i'm trying to find you talk sweet no no talk again oh sweet oh look at there we go now i see i'm gonna highlight you hold on there you go i must follow you for everyone now everybody sees you there you go now everybody sees you so so and we're going to keep you accountable i want you literally after this call i want you to create you know loom you know you know loom works right loom yeah yeah i want to create loom video explaining to people what node.js is and like explain to people about what node.js is and how to actually create your first node.js application and explaining all the different parts just how we explained here for example i want you for example to create this application like this for example let's say you create an application like this right and then in the video you say okay guys so this is to to import the express this right here is we're initializing express this package.json is for us to where we dependencies exist right and so forth create that video you it will force you to learn and understand it fully got it so yeah i have this pair of you know showing my face in front of camera so if at the interval asking questions so i mean i will be comfortable answering the questions on the phone but if i if i face the face of his video then i then then here's what you want then you know what and loom make sure i want to see i want to see your face i want to see your face i want to see your beautiful face on the video okay okay okay do you promise do you promise you'll do this yeah sure definitely yes yeah because yeah i i really wanted to learn you know i really wanted to express what i know so i know so please do it guys can we keep her accountable guys you guys looks you guys will well we'll we'll get a video from sway is that right from sway sweet sweet sweet sweet how long and how much time by tomorrow yeah by tomorrow okay okay i love it i love it so i want you to do that literally guys you know that is the best we're going to learn if you really want explanation how it works yes i'm here to give you the knowledge and just just kind of how just how we broke down api stuff this was great but you're it's really going to sink in if you're going to try and actually teach it to someone so this is a challenge for everybody what's up how can someone become a scientist uh contact david or kosi markowski rokowski on slack okay but one more question yeah go ahead so hell thank you as i created as i created the netflix api so at the source control i got like 2 000 files ready to be uploaded i don't know somewhere every time i do this i give these files how can i what to do not to well let me create a netflix api what do you mean by that oh the merge stack api you the mark for netflix or what no i just created the folder netflix api and then i opened it on my vs code as i opened it so i see like 2k files wait netflix api is open source where did you get this data no it was just a folder i made oh oh you oh so oh because you didn't open up inside vs code make sure you open up the actual folder something happened i don't know why just make sure you open up the folder so inside i followed exactly as you did really right click open the terminal and just uh did the same thing file so did you create new folder it's just like try it again try it again do do file um create a new folder inside a project clean your folder called netflix api make sure there's nothing inside here make sure it's empty right and then do inside here do services a new terminal folder and then do npm in it okay okay try it again there's no reason why i should be try it again okay and then and if it if you if the problem persists contact me on slack ok what's up if you go to back your vs code yes um on the right side under the search bar um here the search bar search the search bar no no to the left then here yeah under this one do you see this under under search under search here this this this icon yeah now i see like it's a 2k files hold on so do initials repository yeah yeah well do you know why do you know why no because it's trying because look it's trying to get all the node modules look at that all the node modules no modules have 2k files we don't need no modules so and i'll talk about this a little bit a little bit later on so it's a great thing to point out so what i'll do is for those of you who want to use git for this do create a file called git ignore dot get ignored create a file called dot get ignored and inside here i want you to put down node modules and save it boom now we're back to phone you find why do you have a screen huh how do they get this get ignored create a new file so i want you to right click so guys guys guys guys so creating your file so so let's go ahead and go back to our files new file create new file right here new file and i want you to call it dot git ignore like this just like so just like this and call the new file dot git ignore let me know when you give me a thumbs up when you're done with that dog get ignored yep thumbs up ray i gotta see you got it so hell you got it jesse got it beautiful okay and inside this duck ignore i want you to cr to inside inside this file and literally type out node underscore modules type that out and then save it yeah i i did it now from thousand two thousand it came to 1000 files no it should be four in that case it's importing something else i'm not sure what it's did you initialize your repository yes i did that yeah um oh you can communicate about it later on yeah i will say talk to me and slack about it okay but guys just so you know what git ignore does well who can explain what git ignore does uh it ignores the functions the go ahead yeah so basically get ignored what that does is you can just put any you can put like any files you want to hide into that file and then whenever you publish to github it will hide those files from github so it doesn't overload your github because if you put no modules in your github that will destroy it yeah and there won't be any more space to put anything but basically it will ignore basically get what git tracks your files yes or no get track search files yes give me a thumbs up yes yeah okay when you do dagger ignore you're saying hey i don't want you to track no modules so it does do not track the modules that means it is not included so you see how it's gray you see how it became gray that means it's not cool that means when we when we push to github that means no modules will not be included when you push to github does that make sense thumbs up beautiful thank you so much thank you you got it okay awesome guys at that point that's pretty much it guys for homework what i want you guys to do what i want you to do is pretty simple is i want you to get to this point i want you to have an api that says hello world that is the goal okay once you have an api that it says hello world just because i know you guys a lot some of you have followed some of you did not follow if you followed you already finished the homework that's perfect if you do not follow follow and then get it done all right okay yep beautiful all right in that case guys all i will say what's up can you go to the experience yes yes please just i want to take a screenshot okay uh thank you so much here take a switch right here got it beautiful nice sweet all right guys at this point let's go ahead and maybe maybe do some musica we're gonna have some music and before we have some music guys here's what i'll say to the youtube audience guys you can see we have such an amazing community you can see the amount of stuff that we're learning we're going deep down in understanding on everything that is there on software development today we talked about apis next time we'll talk about a few different things the last time we talked about promises and we literally dig dig deep down into that understanding so if you're interested in learning that the uh you know the deep down things on cyber development if you're interested in being part of amazing community that's growing where people are getting results for example like just landed his for his his client as well we have so many people who are lending clients jan got our job so many people are lending people clients it is insane so if you're interested and join amazing community like this who's that supportive hold on i want you to go ahead and everybody say with me join p.w.j say it with me right now join pewdiepie there we go there we go all right all right at this point guys let's put on some music um i'm trying to figure out what music i should put on but i'll put on what i always know that just works very well no not this one nope video recording nope caution go flavors see this one hold on if this one all right let's get some dancing guys let's go hey wait can you guys hear the song do you guys hear music no you guys don't hear the music oh man hold on my bad i was dancing by myself i guess hold on hold on guys let's see i don't understand am i sharing computer sound why is this now working the way i got it no okay how oh come on hello okay all right what about now [Laughter] thank you thank you sorry about it nothing my bad guys i'm sorry hold on okay i'm trying to figure out how to so make sure i want to make sure that you guys here too that's why hold on what do i do i like it okay i like it let's think about you always gonna have something weird that happens you know what i mean always can you guys hear it now we head for the sky it's all all right damn it [ __ ] damn it now you should just sing for us oh wait for the sky okay no no i got no singing voice guys i got no singing boys trust me yeah system audio that's fine that's so good it's just it's trying to share systematic and it's just not not doesn't want it the way it should be so here's what i'll do i will stop sharing i will stop sharing right now i got you guys i got you i know how to do this i know i got you i'm gonna stop sharing i want you i'm going to mute myself here first because i don't want to bull your is everything okay still you guys hear me yeah yeah he can hear you okay so that's good that's good that's fine you hear it or no no that's fine so here's what i'll do now check this out i'll do this edx okay they can't hear you but they'll be able to be able to hear this and then you will be able to hear this as well so check this out advanced and tell me if if it doesn't blow your ears okay let me know if it doesn't blow your ears is everything okay everything okay yes everything's still okay okay you hear me you guys hear it yes let's go really good yeah all right i'm gonna start from the beginning let's start from the beginning so unfortunately youtube you can actually hear this i'm sorry but you know what if you want to have this kind of a party you gotta kinda just join pwj all right so hey let's go all right i want everybody's hands to be up you guys ready hey let's go all right easily to this out make it louder right louder is it good now let's go hands up let's go all right brian i will spotlight you for a second here let's go brian go brian hey go go go go there you go i love it man all right next up we got don't need to next there we go next up we got so help we got some help go some help go so i'll go so i'll go go you're on nice next up you got melissa go melissa go go go hey nice next up we have brandon brendan let's go brendan go go hey all right next up i'm gonna do luca luca chill it down for us and chill it down for us hey there we go and nice nice nice and so now guys that is awesome all i can say is at this point at this point all i can say is thank you so much thank you so much for what you guys think about this one great all right all right guys i'm sure you guys learned a lot all right any questions before we head off are we all good you guys all pumped you know homework yes yes i love it i love it all right guys that is all i gotta say is hope you guys have an amazing day and i will see you in the next video but hold on don't go yet because i'm gonna end the live call right now and to you the youtube audience youtube audience if you want to join this amazing community the link is down in the description it is by far the best community out there that is it you give a thumbs up if you agree with me actually raise your hand two hands if you agree with me with this one yeah let's go all right in that case have yourself a great day and i will see you later and i'm gonna finish the