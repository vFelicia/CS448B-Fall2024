in this video we're going to be building the Amazon clone using chat GPT I hope you're excited if you want to follow along click the link in the description below it's a replit link that allow you to Fork this Rebel so that you could code alongside me it is completely free so go ahead and do that and set that up we're also going to be adding a database to this using replit which allows you to set up postgres because otherwise if you're trying to set up postgres on your own it will be a nightmare now this repo that you're gonna click and access it's going to be a completely empty repository however it's going to have project assets for you set up there so just go ahead Fork that and start your project from there so with that said let's go now this is going to be built in about 12 steps so we're gonna follow along from Step Zero which is create replica project and we're going to move on to step one which is going to be create headers we're going to do that soon but first we just want to see if our replit is up and running and it should basically say react plus fight plus replied is an amazing package manager and let's go ahead and write hello here and that should work if any point you get lost all of us remember that the link is in the description below you could always Fork that and copy the exact project that I have built it's completely free to be able to do that on replit and so do take advantage of that okay but for now just follow along so I'm gonna say I want to build an Amazon clone with react.js let's start with the code for the header this should use functional components no need to use react router Dom for the navigation the navigation should contain home shop about and contact let's go ahead and see what chat GPT spits back out at us and it goes here's a functional component and it has home shop about contact length and it's creating a header component for us which is absolutely phenomenal so once we have this I'm going to copy that and I'm going to go inside of my source and I'm going to create I'm gonna go ahead and create a header component components folder put header inside of that and then I'm going to just paste the header component that Chad GPT gave me now once we go back to our main app.jsx I'm going to change that to divs and I'm going to go ahead and import the header component we just wrote so let's go ahead and type in header and let's go ahead and import our header component from components there we go and now we could see it okay next up what I'm going to do is we're going to go ahead and we're already at step two so good job you're making really good progress so far out of this 12 steps and now what we're going to do is we're going to style this header with inspiration from Amazon styling so let's see how good of a job Chad GPT does in being able to do that I think it will I think it will do a decent job let's see like this is so cool especially for people like me who are terrible at styling like you could just get this stuff and go back and pop that in and it just boom done for you that is crazy that is awesome that's exciting so for those of you guys who are afraid don't be afraid this is not going to replace you supercharging you right I'm still the one driving and telling it what I need and it says Hey basically once you add the styling you also need to go change you'll also need to go change your main file and import CSS so I'm going to copy this code and I'm going to replace my header component with this new code and then I'm going to copy the styling and paste that in okay so that's what it's saying so let's go ahead and copy that come back to our header and I'm gonna go ahead and paste that in here so now I have import CS import header CSS at the top remember Chad GPT will not always give you the same stuff so if you're writing the same exact prompts as me and you're freaking out why you're not getting the same stuff kgpt will give you different stuff it's artificial intelligence okay it's not like a search engine so you're gonna get different results your thing might look different than mine but just you can use and follow along what I'm doing and be able to ask it the right questions and produce similar results to mine even if you don't produce exact results to mine if you want to get the exact results of mine Fork the replit in the link below let's go ahead and components let's create a header.css and we're going to go ahead and copy our CSS from chat GPT and I'm going to come back in here and paste that okay now that I have that pasted let's go ahead and look inside of our header.jsx and it seems like our import okay there we go we just needed to call it header with a capital H so there are a couple of things you'll need to figure out yourself with Chad GPT it's not going to be doing everything and boom look at that we already have a nav bar that says home shop about contact and styling was already done so we didn't have to worry too much about the styling I mean for somebody like me that is absolutely beautiful and wonderful news all right now we're going to make the header look more like Amazon styling okay so it says sure to make the header look more like Amazon styling you can add the following elements to the component and now it's going to give us an example of what to add so here we go okay so it's giving us a bunch of stuff and you can see it's using a bunch of icons as well right the FASFA shopping cart and stuff like that that we're seeing right around here right it's using icons and so that's great let's go back and then in the styling it's saying Hey to resemble that we'll need to add in a header section a header left a logo search form and search input and search button and that's perfect because if you you know I'm sure Amazon styling is embedded in your head if you can visualize it in your head Amazon has all of those things there right so we're going to add all of these things in ours as well if it ever ends abruptly like how it did you can use this search this term called continue and that will just make it continue writing so it goes sure here's the continuation of the CSS so it's giving me all the CSS now account drop down fa shopping cart how to style it etc etc so we're gonna go ahead copy that whole thing okay or you could just hit copy code whichever one and let's go ahead and we're going to copy the styling let's go to header.css and we're going to paste that and let's go down and copy that as well from nav a lot and we're going to paste that as well okay so now with that styling you can already see that the margins are longer in between and The Styling is starting to look a little bit better and I'm going to ask you hey can we use the same background color that Amazon uses for their header the background color for Amazon's header might change over time but as of my knowledge cut off date Amazon's header uses a dark blue color for their header okay so it's also smart letting you know hey I have historical data I don't have access to realtime data but based off of that this was the background color that we're using cool so we're going to grab that background color and we're going to replace our background color with the Amazon's background color so let's hit it and boom we're getting that dark blue okay now the next thing we need to do is grab the updated section that it gave us okay I'm going to copy that come to header.jsx so I just copied all the stuff that he gave us for the header and I'm bringing that over to this now okay and we'll paste that in so all the shopping cart icons and everything okay now header.css is giving an error so let's make sure to change that to header with a capital h and we need to say we need to import let's create another folder we'll call it assets and inside of that folder we're gonna drop in the Amazon logo okay so you should go ahead and grab the Amazon logo we'll link it in the description below or you could just grab it from online just get Amazon logo PNG put it in your assets folder and here we're going to say import logo we're going to say go to assets and grab the Amazon logo.png so now it's able to pull that and we got the search bar and we got the search button that is absolutely crazy it's already looking so damn good none of the icons are showing up but remember for the icons we're going to need to import things okay now it says instead of using now let's ask it instead of using font awesome because it's using font awesome currently we're gonna say hey can you show me how to implement the icons with the react icons and it goes sure you can use react icons library to implement icons in your react applications so it's so freaking smart right it even understands icons and now it's like okay I'll show you how to do the same thing with react icons so we can go ahead and install react icons now and then it says hey just do it like this fa shopping cart fa bars from react icons and that should be able to do the trick and it's telling you exactly what you need to do in your files okay so let's get past that fast and now we're going to come back to our app okay we're going to copy this we're going to come back to our app okay and let's go and it says and I pasted that over I pasted that header code over this and now we got the react icons as you can see fa shopping cart and Fa bars and we're just gonna make sure that our logo is coming from assets Amazon logo and our header CSS with the capital h okay perfect now let's stop it and run it again and you could see that at the bottom it's installing react icons let's open up the web View and there we go we're starting to see the icons and this is what's nice about replit like this is already deployed and it's already online so you could use this as you're building and you could also share it with anybody you want so let's see what's happening here let's go to our header.jsx okay everything looks like it's opening and closing correctly so that looks good and let's go ahead in our header CSS and in our header I'm just going to add display Flex and boom just because I had to display Flex you could see that it's now starting to look great it doesn't look weird like how it was looking earlier now let's say hey make sure the navigation header left and header right fill the space in the header okay so now I'm starting to give it Specific Instructions just massage it to give me the correct things that I want and it goes sure you could use flex grow and add it to your header left nav and header right classes so now starting to show me my header left add flexgro and my nav add flexgro and my header Right add Flex Pro okay and let's go back to my header CSS and I'm going to go ahead and add Flex one and I'm going to go to my nav and add Flex one and then we'll go to my header right and add flex1 here okay and let's look and now the spacing is starting to look a little bit better with that count going all the way let's add padding of 10x to header right and we'll add a padding of 10 pixels to the navigation okay and we'll add a padding of 10 pixels to my header left okay so let's go and look now you can see that count is all the way to the right which is good okay now in my fa shopping cart I'll add a class name so now see we're working alongside chat GPT and this is what you need to be getting better at as well and I'm going to say hey I'm going to call the class menu icon and we'll create a new class called menu icon in my header CSS and we're going to color it white we're going to give it a font size of 20 pixels and boom there you go now our icons are getting proper styling and proper sizing okay let's create a new div and let's add them there so they're within a div and then we'll give a div a class name of Icon so that way we can grab the icons and style that whole div better and we'll go display Flex on that okay and you notice I put a gap of 10 pixels there and you can see the icons are starting to look really good okay we can see the card icon and the collapsible bars for menu icon we'll give it 27 pixels and cursor pointer when you hover over it so there we go when you hover over we could see it properly okay so the nav bar is starting to look a lot better let's add a gap of 30 pixels in our header left as well okay and we're going to tell it hey can you fix the styling of the search bar to look to more look like Amazon okay so it goes yeah to fix the styling to more like Amazon you can use the CSS to change the size color and properties of the search bar and now it shows us we can align the items we can position as position it relative and it's giving a specific clear specifications for the search input on the width height border radius Etc color and then even what happens when we focus over on it and what happens to the button what happens when we hover over onto the button what should happen so adding all of those things okay so I'm going to copy that code we're going to go back to our app and we're going to go to our CSS and let's replace search form search input search button with what we got everything related to the search and paste it over that so I'm completely overwriting everything that had to do with search and now it's giving us a more Amazon looking search we're going to reduce the padding a little bit because it's made it too big so I'm going to make it point three instead of 0.5 okay let's make it point two let's make it even a little bit smaller okay now it's starting to look a little bit better and the search is starting to look a little bit better as well okay now we're going to make it so the button is inside of the search input the right side of the search input okay instead of the button being all the way outside so it goes to make the button appear inside the right side of the search input you could use position and write properties in CSS so here's how we do it spitting it out search button and you can see that the search button position is absolute whereas the other component other thing is relative so now it's going to allow us to put the search button within the search bar okay with this example the search button is set to position absolute and write zero top zero bottom zero we're going to copy this we're going to come back and we're going to replace everything related to search here and paste except for the search button okay the research button hover except for that we're going to override it over everything and paste it and there we go look at that Chan GPT is so freaking smart right it brought the button inside and it allows us to make that happen I mean that is so freaking cool look at that that is phenomenal okay now we're gonna go ahead and outline it to none so there are no outlines so it doesn't look weird and now it's starting to look a lot better right we got search now we're going to say Okay add products list with products so now we're going to move on so we're done with styling so we're done with step two out of 12. now we're going to go ahead and move on to step three so step three is going to be creating that product list all right then step four is going to be styling it so let's stick to step three here so at product lists with products that has styling that looks like Amazon so basically I just said hey man add products list with products that have styling that looks like Amazon for the Amazon clone that we're building with react.js and it goes sure to add products list with styling that looks like Amazon for Amazon clone you can create a component that runs there's a list of products and apply CSS styles to match Amazon styling so here it's mapping through and creating product list okay so product list is a component that takes in the products and then it just builds them out and this is fantastic because not only is it writing code for you but it's writing reusable code for you in such an easy way where you could just give it an array of products here and it'll just build them all out so if you gave it five products this will build it up for five products and each product it has you know image name price so this is so freaking cool this is so freaking cool okay so in this example it goes I've created a product list component that takes in a prop called products which is an array of product objects and then it basically breaks down the you know the nerdy stuff now it's also creating the styling for this product list and what that should look like and what the product should look like and what's a product image should look like and basically what we're going to do is we're going to tell it to continue and once it's done we're going to start grabbing all of this and integrating it intelligently because you're noticing now you can't just copy and paste like a good developer who knows how to use stack Overflow you need to know exactly where to copy and paste as a key skill so let's keep going through this it goes I've added styles for the product details including the product name okay so let's go ahead and grab this product list component let's come back in our components we'll create a new component called product list and inside of here I'm going to add the product list that it gave us cool let's go back soon let's create another components let's create another component and we'll create the styling for product list.css and we're going to grab the styling and we're going to pop that into our product list.css okay we're gonna grab more of the styling that it gave and we're gonna add that as well so we've finished adding to adding all of the styling now we're gonna go back to our app.jsx and we're going to add in our product list component let's make sure to import it correctly product list from components slash product list and for product lists we're going to add our products and we're going to give it our array of products so here let's just create a demi array of products as well products and we'll give it um it's going to be an array of objects remember because products have different properties right it could have an image and a price description whatever whatnot so let's go ahead I'm going to call it const products and we'll build that out in a second uh we're gonna say hey make a status product list to pass to the products list component so uh it's basically just gonna give us uh I'm sorry I meant to say static not stat test so give me a static product list to pass to the product list component okay and you could even pause the prompt right and edit it and then ask it this is a new update that they made you could tell it to stop generating because it was super annoying when it would just keep going all right so here is the dummy list of products is giving us so we're gonna grab those products and we're gonna pop that in so it's so smart it's giving us ID name price and image because it knows our product list component needs that how freaking smart is this thing too smart so let's go and we're gonna cop that cop all of those products come back to our bad boy paste it in there we go now we got all our products with the images and the pricing and The Styling is showing up beautifully I mean of course it could be more beautiful but I mean come on this is things that for a bad frontend developer like me would take like five hours four hours and here we got it done in like what 20 minutes jeez or less actually probably five ten minutes since the video is edited for you all right here we go and now we're gonna say hey style the product list to look more like Amazon because right now it looks like poop it does not look good at all I mean it looks terrible so we're going to tell it to make it look more so add more detail styling to make the product list look more like Amazon okay so we're telling it to add some more detail styling okay and it goes to add more detail styling to the product to look more like Amazon you can adjust the CSS so it's telling us okay this is what you need to be doing with the product list and you can see grid template columns grid Gap so that is already telling me the repeat four and one that's already telling me that they're going to be four columns just creating that is starting to look nice right each row will have four items that looks more like what we need to be building and again I'm not a professional CSS developer or a frontend developer but I could look at that and go okay that makes sense it's moving Us in the right direction okay okay so let's go ahead and hit continue because I think it just froze there so I'm going to say continue from the product button and then it goes sure here's the continuation of the CSS product button it's finishing that up and it goes in this example of added grid layout to show the products in four column space between the products I've also added hover effects to make the product look more like Amazon's wonderful so we're going to go ahead and copy this code we're going to go to our product list CSS and paste it in let's go back and let's paste that into our product list CSS as well and boom We Got The Styling and we got the updates to the component and let's make sure to import The Styling because we're actually haven't we hadn't been using the styling at all so it might have had already a good styling but we won't know and look at that that is gorgeous you got the images you got border radius on the images you got a drop shadow effect you got a hover effect you got descriptions and the uh and the pricing styling looking different that is very nice that is very nice now we're going to add in some of the products so I just got a bunch of random Amazon Project products like the Apple watch you know wireless headphones you could grab whatever things you want I got shoes and they're all jpegs with like a white background kind of and well I'm gonna go ahead into my app and I'm going to import my Apple watch from assets Apple watch I'm going to go ahead and import my headphones I'm gonna go ahead and import my Nike sneakers and I'm gonna just replace the images with Nike I'm gonna replace the headphones um with the headphones I'm going to replace the Apple watch with the Apple watch here item three with Apple watch and there we go right all of them are starting to show up it looks beautiful height or instead of uh let's see if we can make the height 200 pixels hard coded ah that looks a little bit better but let's make it 175 let's play around with that a little bit okay that's that's fine for now let's go back and let's add in something for item four let's just add the shoes again and beautiful look at that so now we and we just updated the titles now as well so we just updated the titles to wireless headphones Nike running shoes Apple watch Nike so do that as well and everything will look gorgeous okay now we need to move on to step five we're done with four of the steps we just finished dialing the product list so at this point we have created the project created that we've created the header finish the styling created product list style the product list and now we're on to step five which is setting up a basic node Express backend so let's go ahead and set that up I'm going to go ahead and do Amazon with Chad GPT back end and we're gonna get started now here's what we need to do so we are going to need to set up postgres here which is a backend database and it's so cool how they've made it in replica where it's all integrated so I'm about to blow your mind with this stuff so let's go ahead click postgres okay I'm gonna go ahead and say use Cycles to create DB so use a hundred Cycles okay go ahead and do that and set up your it says you're paying 100 Cycles which is one dollar a day okay and uh now I'm going to go ahead you know so I recommend you use this this will make your life so easy it's also really impressive and fast if you don't want to do it this way then you'll have to then postgres is a can be a nightmare okay so then if you're setting it up locally do it at your own Peril okay you're saving about a dollar a day which is what like I mean just don't eat like three bags of chips in the month and you will have you know you'll be fine like don't eat don't decide not to eat chips today and you could have this database up and running and learn coding okay so that's what I would recommend but it's up to you all right let's keep going um let's go ahead and um all right so let's go ahead and do cons Express and we're going to say require Express so let's get Express that up here so this is essentially a Pern stack now which is postgres Express react and node so it's like a Pern app we're gonna set up a pool and we're gonna set a require postgres um app is going to be by exp it's going to be an Express app and we're going to go ahead and say port 3001. let's enable cores on this as well so we don't get screwed by cores and we're going to say hey make sure you're using course for the app okay for the origin we're going to say hey just make all Origins available and usable and we're going to add in a get request we're going to make it async okay and we'll say that just send back hello world for now and we're gonna say Hey listen on the following Port say server listening on Port whichever Port you're listening on okay now let's run it and let's see what happens here so it's installing course Express and postgres okay and boom there we go it's saying hello world great great sign okay so now we need to build out a pool and for this new pool we're going to set the user okay access Secret Key by key as an environment variable so we can access all of the postgres related things from here so we're just going to say const my secret is going to be process and PG users just say that and that'll be user for host let's go ahead and see how to get access to the host we're just going to say process.npg host okay and then we're just going to do the following for everything else like for the database we're going to say PG database password PG password Port PG Port okay so that looks good to me so far for SSL we're going to say true and that's pretty good for now let's go ahead and take a look at the database content so I'm going to click that and we're going to go ahead and check the database so here you can even write database queries which makes your life so easy to type postgres queries here to use the database so create table products and I'm going to create a product uh tables Pro I'm going to create a table for products here that's where my Nike stuff will go my image pricing and this is a SQL database so this is going to be structured you won't be able to change it later so you need to Define your structure stick to that structure so we're gonna have our ID is going to be an integer it's going to be not null so it's always going to have some value it can't be not null and it's going to be the primary key of how we're going to be storing this data okay uh let's make integer Capital it doesn't really matter but it just looks better okay here we're going to say that the name we're going to also create another field call name so the first field is called ID so I'm also going to teach you how to read and write postgres and SQL here so the line two are one of the fields we're creating is called ID the second field we're creating his name another field we'll create is going to be image and another field we're going to create is going to be price now for ID it's going to be integer for name that's going to be a string so string in SQL you could just say VAR car which is super ugly way of just saying string okay and the size of it is going to be 255 and I'm going to say hey name cannot be null okay so make sure it's not null price is going to be a float it's going to be not null and then we're going to have image and that's also going to be not null so the product will need to have an image okay these are all required and now we're going to go ahead and run query so it should create our table with the following four Fields all right so we got an error so let's remove that comma let's run it boom query successful and now let's look at all the contents and we got products as a table we clicked it and there are no rows but the products table is made and it's available in our public schema and you'll always be able to also take a look at your query history here which is really nice so I'm going to bookmark and pin this query so you can always come back and look at it later okay all right now we're going to insert into products and we're going to insert into products of following okay ID name price image and those four fields in those four columns and here are the values that we're going to insert so the first one is going to be we're going to give it ID of one it's going to be headphones this is the price of the headphones and here's the link to the image and boom we're going to pop that in and now we're going to repeat that four times there we go so we got all of them now okay now let's run the query and it should insert into the table these four items that we just created let's hit run query query successful okay that's great let's go look at the contents and look at that we could see the table now this is so nice how easy ruplet makes it for you to be able to do this very very easy invisible all in one place and it tells you each field and what its type is and then what the contents are so we got integer our character varying double precision and character varying which is just string float Etc okay now in our code let's go ahead and add the following I'm going to say get all products and uh here it's going to be an async function that we're going to write and it's going to be we're going to wrap it up in a try catch block okay so if there's an error just print out the error and return the error and here's what I want you to try so I want you to get me the response okay you're gonna await the pool query and here's the query you're going to write you're going to select everything from products table okay you're gonna select everything from products table and you're going to return the rows from that okay so imagine I'm going to get back an array of items and it's going to be four objects that I'm going to get back in this case right my squiggly drawing is horrible but I hope that you uh get the point okay this is my squiggly drawing but you're going to get four items and that's what it's going to return and then we can send that over to our front end okay our back end is just used to communicate with SQL and then boom send back the data to us okay great okay let's keep going all right now in line 33 I'm gonna go ahead and say hey const products get all of the products and here's the and then return it as and then return it as a Json okay so then they're really easy to use on our front end so that's we're adding that to our get request and you could actually see that we have been able to query all of those products from our postgres database and return them as Json objects this is actually so such an easy setup with postgres this is crazy usually postgres is a nightmare compared to something like Firebase or whatnot now we're going to go ahead and say hey products from database and set products from database to create a state for it in our app okay please edit this from this part forward so cut out some of the last part don't show the front end yet show the front end later please right now we're going to go from the postgres and then we're gonna go back to where we were okay so basically step nine is now going to become step 12 and I'm gonna go directly from get all product function to add to cart functionality okay so at this point you can see that we've added and we have to get all products functionality done as well with our postgres oops hold on one second don't add that part edit from he sorry edit from here so at this point you can see that we have the postgres functionality we're able to get all the products we're able to show all of the products right for example here we just ran if we run this query right now so I did this I'm going to run it and boom there we go so now it just ran and it was able to pull all of our products right and it's able to show all of our products and make sure on our you know we have the other replit running as well because we have to have both of these running so they have to be listening to each other on the ports the so this is the back end and the other one is the front end so there we go we already have this up and running things are looking good we're able to get back the data now that our postgres is set up we're gonna go back and we're going to work on the add to cart functionality now that's where we're going to add in next so this is what our products are looking like currently let's go back to our chat GPT and we're going to work on the add to cart functionality so I'm going to go to chat GPT and I'm going to be like hey buddy can you add an add to cart functionality keeping track of all items a user clicks on okay adding it to the cart and keep track of the total price of all items in the cart so that is a pretty heavy query let's see what Chad GPT does it goes hey to add an add to cart functionality you can create a state to keep track of the items in the cart and the total price it goes you can then pass a callback function to the product list component that updates the card State when the button is clicked so explanation of what it should be doing is correct now let's look at the code all right so we got all our products was going to put all the dummy products in here that it had and then it's going to create a state for cart and it's also creating a state for the total price and now it's going to do some really interesting things here it has our add to cart function which is going to update our cart and it's going to update our total price and it's going to pass the total price it's going to take it in as a string and turn it into a dollar and you can see it's replacing that with a dollar sign and then we're working on creating a component here so let's keep going with this we have a product list we pass our products or the product list component and then we build out the cart we Loop through the cart items and we list out the card items and their names and their price and then we just simply export it okay so it goes hey in this example I've added two State variables cart and total price and we were going to tell it to continue at this point okay so it goes hey here's the continuation of this and now it adds a lot of explanation and now let's take a look at the code and it's talking about local storage or session storage okay so we're going to go ahead and copy this State stuff that it did for us I'm going to go ahead copy this we're going to go back to our app and I'm going to go ahead and add that in so now we're keeping track of the state and we have add to cart function completed as well okay let's go ahead and also import use State because we have we're importing react but we just need to import new state so let's go ahead and say import use State and we're going to just say from react okay the new react versions you don't have the same for react from react okay let's go back and I'm going to go ahead and grab this add to cart and bring that in essentially like a prop right so add to cart prop I'm going to bring that in and we're going to give it the add to cart function okay and then we need to update our code on the back we need to update our product list component and we're going to say hey on click I need you to run the add to cart function so there are certain things you still have to do manually okay this is why AI is pretty good but you do need to be helping it out so I'm going to say add to cart and then we're going to pass it the product okay let's go back to our app so product boom that's where the product is coming from okay now in my app another thing I'm going to do is I'm just going to console log cart so let's see if we're able to retrieve our card and currently we have this empty bracket so we see with nothing inside of it but when I click it watch this boom that item is added to the cart so look at how quickly chat GPT was able to add this functionality so now I click the second item and you can see that the second item was added to the cart now I click the third item and you can see the third item was also added to the cart that is mindblowing okay let's go back to chat GPT and now we're going to say hey let's display the cart in a modal that opens when you click on the cart in the header and has Amazon like styling okay this is now getting really wild let's see if we can pull this off so there we go here's an example it says here's an example of how you can do this right so it fills out our it's rewriting some of the code we already have so we can skip past that interesting parts are the show modal part that now it has written so you can see here it's a show modal right now it's going to actually start building out the modal it seems like so set total price is totally fine and then now it's saying open modal so it's giving us open modal and it's going to give us closed modal as well so we're just going to say continue from the app component so there we go so now it's giving us open modal it's giving us closed modal and it's giving us it's returning this right so open one on click it's gonna do the open modal and then it's going to give us closed model and it goes here in this example I've created a new component called cart modal that renders the cart items and total price I've also added open modal functions it sets the show modal state to true in the cart button the header is clicked and the closed model function that sets show model my god so let's go ahead and give this a try so we need to build a cart modal component so let's go into components and let's do cartmodal.jsx okay now we're going to go ahead and add our cart modal inside of that so let's go ahead pop that in there so we got our cart model and let's export default our cart model okay now I'm going to go ahead and grab the show model and bring that in and we're going to add in our show model in here so let's go ahead and do that show modal and set show modal States we need to keep track of them okay and now let's grab the open modal and close model functions that we created and add those in here as well so boom there we go we got open modal and we got closed modal okay so they're hardcoded to be true and false right now now we need to add that to our div here as well okay so in the header I'm going to say the header is going to have open modal and we're going to pass it a prop the open modal function and header is going to have open modal okay and we're going to pass our open modal to our shopping cart icon so when you click on the shopping cart icon it's going to open the modal okay there we go button on click and now we need to add the show modal and once the it shows modal state is true then it's going to show the total price and it's going to show the cart items okay so that's why we need to create this cart modal component and pass it all of those things okay okay so basically let's go back here and I'm gonna go ahead and check out what's happening so let's click so now when I click on this item it says cart modal is not defined that's the particular error that we're getting right now so let's go ahead and fix that and why cart modal is not defined are we importing it we're not importing it so let's go ahead and just import that so I'm going to say import cart model from spell it correctly from components slash cart modal okay so we're going to go ahead and do that and now we should be good there we go we got our cards uh cart modal and all that stuff popping up right here and we got our products okay and we got the total price for the products as well okay so the model is working but it does not look very good so we need to work on that now so let's go ahead and let's style the cart model to look like Amazon's cart model so it's doing a fantastic job so far I mean it already made the card model so here's the styling for the model that it's building now so it's adding the background color the transparency the flow all of that uh what should it look like when you hover over the clothes what should the close button look like what should the modal content look like all of that is coming up here so let's go ahead and now add all of that in here okay so we're going to go ahead and add it in let's import cart modal CSS and look at that it is already looking so much better the cart model looks so much better we have the close button we could close it we have the cart right click that and boom it just closed right away click it brings it up again and all the items it's showing them so it's looking fantastic so far with almost no not much effort now we're going to go ahead and add more detailed styling to the card model to make it look like Amazon's cart model okay so let's go ahead and add that now so it's adding some more detailed styling so let's go through the styling okay I'm going to say continue so it gives me all of the styling so you can also sell it like give me more detailed styling and then it'll go into more specifications and details okay and let's go ahead copy that and paste that in here boom paste that in and it's looking decent it's so total is all the way to the right hand side the cart models kind of on the left hand side so that's looking good all right so here we go so it has given us much more detail styling so we're going to go ahead and copy paste that there were certain things that it feels like it still needs to fix so we're going to go ahead and say hey make the styling the card model look better and more like Amazon and so now I'm kind of digging deeper and just asking it hey can you help me out a little bit more and can you spread that out it's too close to each other it's too uncomfortable and it's adding some display Flex a line items justify content that I already see which to me looks like that should kind of do the trick but let's take a look at it okay so once it gives this to us we're going to say continue blah blah blah and now we're going to copy this whole thing okay what will the component look like wait hold on what will the component look like implementing these new Styles okay here is an example of how the component would look like implementing so it's even telling us here's how to add The Styling to the components okay so how to name the class name how to add class names to them right how to basically import The Styling there what are the things that we need to update so this is what the component will look like so let's go ahead and copy this code let's go ahead and update our cart modal component so I'm just going to copy and paste that so that's what the brand new styling and boom look at that it's already starting to look better we have multiple dollar signs which looks a little bit funny so let's keep going and let's go ahead and grab the style and then we're going to take this style okay and we're gonna go ahead and paste that in okay so this is the modal styling and copy that too let's go ahead and paste that in okay now let's take a look at it now it's looking way better even though it has two dollar signs for each product which is not the end of the world but it looks significantly better the image is kind of broken and they're two dollar signs so we have to fix just a few of those things so we're going to remove our dollar sign that we were putting in our cart model jsx okay because it seems like it's already it has a function that's already doing that so we can remove our dollar sign from here perfect so now we have one dollar sign now there's something happening with the image so let's take a look at it card.map item item that I it's not IMG it's actually image so we're going to go ahead and make that image I believe and then it should be good so let's see okay so let's take a look at the item so let's just print out the item so there we go and you can see its image right it's not IMG so let's go ahead and copy that and write that item dot image and then let's take a look and beautiful this model is looking so much better I mean this honestly looks looks kind of stunning and now we're going to add a continued checkout button to the cart modal and style it to look like Amazon so now you'll have a button that can say hey continue to check out and then you can buy it from there so let's go ahead and work on adding that checkout button now okay it's adding that button it's adding in The Styling for that button so let's just go through this fast now we don't need to sit there and watch this it's very boring um let's go ahead and grab the checkout button okay and let's go back to our code and I'm gonna go ahead and I'm gonna paste that button right there okay all the way at the bottom right underneath the total price so we could see it look at that looks gorgeous okay now we got this we got this we got the continue checkout button now these products are product one product two let's call them let's give them actual names so let's get let's go Nike running shoes for this one let's go ahead and say wireless headphones for this one let's go Apple watch right and for the next one we're gonna go ahead and call it um Nike okay and now keep in mind guys we are at functionality you know 10 out of 12 like we are we just created the card model we're actually 11 out of 12. so we have not only created style component but we've already we've also sorry we have not only created the cart model we've already styled the cart modal as well so pretty soon we're gonna be moving on to the final step step 12 which is going to be getting the data from our back end from our SQL database so let's go here let's take a look okay so far I can click the Nike button the Apple watch one it looks good all right now that looks a bit funny right 94.949999 like what the heck is going on there so let's just go ahead and fix that I'm gonna go ahead and just say hey total not price two uh and we're going to say to fix two so give me two decimal points essentially so there we go 94.95 and that should be good okay let's keep going so honestly at this point the app is looking fantastic it is pretty much done we're pretty much good to go with the app the only thing that is left at this point is the final step step 12 out of 12 which is connecting our back end to our front end okay so we're just going to be connecting our front end to our back end now that's all we're doing that's the only thing that's left so let's go ahead and do that now so I'm going to scroll down here and I'm going to basically say hey um we're gonna have products from database and then we're gonna set products from database so this is going to be a state that we're going to set here okay now the next thing we want to do is we want to get products async and we want to use the function that we created which hits that home page route right and it gets us access to the products that we built on our back end so we're going to do something similar here we're just going to say hey response fetch okay let's go look at the route that we have to hit so in this case that's the route that we have to hit so we're going to copy that exact piece of uh URL there Amazon with gbt backend.cleverprogrammer.rebel.co or whatever let's go back and let's paste that in okay so we're going to say go fetch that and then I want you to get the data await the response and get the data from there okay and then let's just console log the data so let's see if that works let's go ahead and hit refresh refresh here and seems like we're running into a bit of a problem so let's create a use effect hook here okay and then that use effect hook we have the um we already have the set total price because that actually increments right and gives me the total price but let's go ahead on line 56 and add in call our get products function because we made the function but we never called it so let's go ahead and make sure that we call it now let's refresh so it should call it on refresh we got some undefined stuff so why is that why did we get undefined stuff here let's put a fire Emoji next to that and let's see what happens let's do response.json now instead of response.data and boom there you go we're pulling this information from our back end that is absolutely amazing so now we know that data is pulling that information so what we need to do is keep track of that data so we're going to call the set products from database function and um Mark put the data in there okay that should be good okay and now we need to just kind of do the last thing where instead of using our static products on line 81 we're going to use our products from our database so I'm just going to say products from database and boom look at that you can see we got headphones and we got an orange Tshirt and we got Apple watch and Nike sneaker and all of this has the images and everything that we have on our back end so there you have it that is the Amazon clone we just built it with chat GPT hope it blew your mind if you want to get the exact app I'm using click the link in the description below and it has that replit link there you can Fork this exact app and play around with it and use it on your own of course you'll kind of have to add in your postgres stuff to make it your own and then you should be good to go but there you have it I hope you enjoyed this video I hope you learned a lot out of it and it was fun informational and as always I'll see you in the next video