Why and how can a 10yearold beat my ass at chess? I am top 1% in the world, I been doing it for over a decade, the kid hasn't been doing it for a decade, what is going on? I wanna share that with you, and I also wanna share from a perspective of how does that relate to your life as a developer, as a Python developer, and how you can be that kid who's 10 years old and beating all these other developers' ass at programming, at earning a high level income, at being irreplaceable, and at even getting these job opportunities. So with that said, let's jump right into it. Hey guys, this is Papa Python, also known as Rafeh Qazi, or Qazi from cleverprogrammer.com. Let's talk about this topic. How did a 10yearold kid beat my ass at chess, beat me at chess, okay? And this kid, his name is Awonder, he's not 10 any more, he's probably 12 now, and he's a grand master, he's really good now, but when he was playing me, he was so little that he actually had to stand up on his table to move his queen to actually deliver checkmate against me, and I was super strong at that time. I was highly rated and I was playing at a competitive tournament, so it just blew my mind how such a young kid could actually accomplish this feat. And I wasn't joking around either when I said I was good because I was putting in about four hours a day since I was 14 into chess until I was 19, 20. So, how does this kid be able to beat me? How does this kid do this, okay? Well, when you look past the surface level, one is maybe he put in more hours than me, which could be possible, but I kinda doubt it 'cause he has so many other things he's doing and he's just a kid, right? But what is it that is actually going on? I think what's going on is that he's working with his dad, all right, who is pretty good chess player. And his dad is coaching him, and what is his dad doing? His dad was able to install these frameworks and strategies in his brain that allow him to learn at a much more rapid pace, that allowed him to excel and improve his skillset at a much, much, much faster pace than anybody else, including myself. That's how this kid was able to actually get better than me without actually spending more time into chess. Whereas I might have been doing the wrong things, practicing and learning the wrong things, he was practicing the right things. When we come to the world of coding and programming, this is what happens when people spend decades and they have all this information on Google, like this is what it takes to be a developer and this is how much money they're earning. A lot of the times, the people who can't get these jobs or the people who are giving you advice that might be wrong, the reason is that they might be more like me. They might be good, but they don't have the best strategies and frameworks that help them excel. They basically have a poor framework, and they're too focused on being self taught, okay? I was focused on being self taught and even though I learned pretty fast, it still wasn't that great and I didn't make that much of a progress and now I'm stalled at my rating, whereas this kid is now about to get grand master pretty soon if he isn't already. So, what is the point? The point is if you are looking to become an amazing developer, earn a higher income, you don't necessarily need a decade of experience to be able to do that. You don't necessarily need a high level degree to be able to do that. But, what you do need is a right framework, right strategy, to actually be able to learn these skills so that you can improve at a fast pace, not spend years, sometimes even decades, making these mistakes that stall people, make them earn a low income, or sometimes not even be able to get their first job, because I imagine most of you are trying to break in and get your first job, all right? So, what you need to understand from this video is what you need to focus on, all right, is being able to get the right strategies and framework that allow you to learn at a faster pace. What makes a developer an amazing developer are not actually the skills that they know, though those are helpful, is their ability to learn new technologies, frameworks, and learn them really, really fast. So if you are a developer and you go to a job, your roll is gonna change, you're gonna be required to do new things, and you have to figure them out quick. How do you actually develop that, all right? What are the things you need to do to be able to build that strong foundation, where you can learn any new challenge that's thrown at you, you can learn those things. For example, when people are looking to hire, they might look at a project, your Python project, but the job actually might be a Java language job, but they see that you understand the concepts so they bring you in and they're like okay, we imagine you could learn this job and then we imagine you could do this project, how fast would you be able to do it? So, focus on developing those tools and strategies for yourself and focus on increasing your ability to actually learn things and learn things faster so if there's a system that you could develop, right, it would be, I would suggest for you to focus on your problem solving ability and your ability to develop a framework for learning much faster. And one of the ways to do that is to find outside help and to get mentors in your life. You can even do that through local meet ups and find mentors who can help you, who can see your weaknesses and they're essentially like coaches, right? A boxing coach can be watching a fighter from the outside, and you know it's like if you're throwing punches, to you they look normal, but to the coach he can actually spot, and you're like hey, you're telegraphing, you're throwing your right hand down as you throw your left, okay? So they can look from the outside and find what's wrong and help you fix it, that's essentially what you need. So make a note of that, and I do wanna say that in the next few days, oh, also, this is video nine, day nine of the challenge that I have been doing, which is super cool, so again if you wanna keep up that 30 day challenge with me, you could choose to code for 30 days in a row, you can follow all of my behind the scenes action on Instagram, my handle is cleverqazi, so that would be super cool, you could do this challenge with me, and with that said, I also did wanna let you know that my Earn 1K with Python course will be coming out very soon. And in that course, what I wanna show you is how can you go from being a complete zero to earning your first 1K, and with your first 1K I wanna help you focus on building a strong foundation where you could go on to become a six figure developer. This is gonna be a shorter course, but it's again focused on more transformation rather than information so it's very simple and it has the eight steps that I used and I leverage to become a software developer in a very short amount of time and started getting freelancing clients and be able to eventually be able to hire other developers to work for me. It's not easy but it is simple and it is very stepbystep, and for example, in one of the weeks, I do give you a challenge and a task to go and find a mentor. And I even show where you can go and what you need to do. There is an action step, there is a group that will hold you accountable, as well, alongside you, and you go week by week, all right? So hopefully the eight steps you're gonna do in eight weeks. So, with that said, thank you so much for watching. Lastly, go below and click on the links, either cleverprogrammer.com or the Earn 1K course page if we have made it by that point. Pop in your email and I will not only send you this epic master class I have, I will also send you, as soon as that course opens up, you will be the first one to know, okay? So again, thank you so much for watching. I love your beautiful face. We're gonna keep going as always. I'll see you in the next video.