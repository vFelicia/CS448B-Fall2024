hey guys so what we are going to be talking about in this video is the concept of factorials and the concept of recursion so let's get started so I'm going to first of all write the function and implement it and only afterwards I'm going to talk about it so let's say we have some functions called factorial takes in some number n okay if the number is less than or great less than or equal to one we return that number otherwise we return the number times factorial of the previous number okay now let's just make sure this runs and let's do five factorial of five should give me 120 and you guys will see the results at the bottom so let's give it a run and I got 120 so let's talk about how this recursive solution works so the basic theory behind this is f of five goes in and it goes hey is f of five so basically factorial of 5 is that less than or equal to one so it does not match the code on line 2 and line three it goes past if statement because it doesn't match that condition and then goes through the else and then it says well I know what factorial of 5 is that's just factorial that's just 5 times factorial of 4 so let's write that down it goes I know what factorial of 5 is that's just factorial of 5 times factorial of 4 ok but factorial of 4 is another recursive call and it goes oh yeah I know what factorial of 4 is because now the call on line 9 which is factorial of 5 it has to figure out what factorial of 4 is in order to actually compute this so continuing on factorial of 4 goes yeah I know what F of 4 is that's just and let's call it f here just to be consistent hydrilla 4 goes yeah I know that is just 4 times factorial of 3 right n minus 1 that's 3 factorial of 3 goes yeah I know what factorial of 3 is that is just 3 times f of 2 or factorial of 2 factorial of 2 goes yup I know what that is that's just factorial that's just 2 times factorial of 1 and now something special happens and this is a concept that gets pretty much all programmers who are learning about recursion anybody who is trying to understand this concept so let's break it down so now is when the unwinding is how I like to call it begins okay so now what happens is f of 2 figures out what itself is and here's how because on line 12 if you can see we have F of 1 and F of 1 when that function calls itself factorial of 1 that goes back to the definition of factorial and that goes hey am i 1 in fact her and then and that matches that if condition it goes yep that's true and is 1 and then returns 1 so factorial of 1 is able to figure itself out because it has a base case so let me go up top and write that down the top is the base case and then this is the recursive case ok that else statement so that just goes I have figured out what factorial of 2 is that's just 2 times 1 and that gives me back so that actually evaluates to a real number and then factorials 3 goes great I was waiting on you factorial of 2 thanks for figuring out what 2 times factorial of 1 is now you can give me the information I needed and what's information that factorial of 3 needs the information that factor of 3 needs is what factorial of 2 is so this will basically be 3 times well factorial of 2 return so just be 3 times 2 and that returns 6 now we continue on and we have factorial of 4 and going yep I was waiting on new factorial of 3 3 thank you so much for figuring out that piece of information now can you please give that to me so we get 4 times 6 and that is 24 and then lastly our initial call that we made which was waiting the entire time it goes now I know at factorial of 4 is which is 24 and so now I just have 5 times 24 and this is this returns 120 so here answer is 120 and that's how we were able to figure out what factorial of 5 is I hope this helped you guys if you guys liked the video please comment like or subscribe and I will see you guys in the next video thank you