what's up fellas how's it going this is Kazi from clever programmer comm and this is code Academy part 9 isn't it awesome or like running out of fingers here to say the parts of code Academy that's awesome alright so another day another dollar I'm pretty excited to be here with you guys and we're gonna get going last time we left off at new entries so that's where we're gonna pick it up from ok just to get an overview of where that puts you we're gonna go to code Academy comm and we're at 37% okay so we're doing a great job let's keep it moving let's go to Python hit continue let's check our course overview or to say that course page right we're still in lists and dictionaries right we're still in lists and dictionaries we're almost done with it so let's keep going start next lesson ok any day now all right let me just manually select it changing your mind here we go because dictionaries are mutable they can be changed in many ways items can be removed from a dictionary with the del command del or delete short for delete well remove the key from the thing a new value can be associated with the key by assigning a value to the key like so I've already shown you guys a little bit of that right so let's go back to our thing let's say that we had Johnny and we don't like Johnny anymore right johnny is not our friend anymore we don't want him sorry Johnny so what we're going to do is we're going to said lead phonebook we're going to pass in the key Johnny and now if we do print phonebook you are going to see that Johnny does not exist right unable to reach server let's try it again um what is the problem here let's check it ok hold on maybe this paid has been here open for too long let's refresh it and come back to it and you can use this URL to get all of this information ok so we're going to delete from fallen book and we're going to delete Johnny passing in the key right to the dictionary and we're going to check that phonebook ok now let's run it and you see here we have Johnny we print out Johnny's number on line 18 on line 20 we delete him and then on line 22 we on line 22 we print the dictionary and we don't have Johnny anymore ok so delete just delete the item from the list delete the sloth and the Bengal tiger items from zoo animals using delete simple let's do it delete zoo animals sloth and I don't want to type all the way so I'm just going to copy paste it you guys should type because it's good practice so make sure you type everything even if it's repetitive and here I'm going to type in Bengal tiger oops Bengal tiger right this guy that you see here in line 4 ok just a recap of some term terminology this is a key this is a value this is a key this is a value so if you pass in a key unicorn you'll get back cotton candy house but if you delete the key unicorn then unicorn will get deleted with its value as well so cotton candy house will get deleted as well cool set the value associated the Rockhopper penguin to anything other than Arctic exhibit right so what does that mean all right set the value so we're on over to anything other than exhibit okay so here we have do we have that in the dictionary yeah we do rock out Rockhopper penguin right so now we're going to change its value so we can actually change values as well so we can just do it the same way nickname so the dictionary name pass in the key and then just set a new value simple as that okay so I'm going to do just that zoo animals is my dictionary I'm going to pass in the key called Rockhopper penguin and then I'm going to say equal to banana exhibit yeah all right and now if we print it out you see banana exhibit right here and also see the sloth and Bengal tiger are gone from our list beautiful next one backpack okay so here backpack beetles dot remove so there's a remove command when we're working with lists all right so if I go here and I want to remove something I can just say backpack right dot remove and we can remove the dagger from it now if you print backpack well guess what's not going to be in it surprise surprise dagger is not going to be inside of it right because we removed it and cool so you can see in this example beetles has all these guys you have Stewart here but once you remove Stewart you'll see that in the list you don't have Stewart there anymore right remove dagger from the list Oh cool so that example that we just did is actually we're supposed to do so I'm just going to copy and paste it simple okay now we have inventory and we have a key gold with a value 500 we have a key pouch with the value which is the list list containing three elements Flint twine and gemstone and all those are all strings then we have another key backpack all these keys are separated by commas okay all key value pairs are separated by commas you have another key backpack with a value of a list cool so now let's see what they want us to do we have done a little bit of this okay we did get ahead of ourselves earlier but it helps us because now when we come to this part we understand it better right oh the side effects of knowledge right the drawbacks of knowledge the drawbacks are only that you just understand more now right cool let's keep going add a key to inventory called pocket so we are going to type in inventory and we're going to add a key called pocket all right now we need to know what its value will be set the value I'm reading step to set the value of pocket to be a list consisting of the string seashell strange berry and lint alright so we're going to pass it the value of the key pocket is actually going to be a list and we're going to say C shell strange very and lint okay another way to maybe think about it is if you were creating a video game like Street Fighter and you want to have a character like Ken and you wanted to associate different move types with Ken or Ryu or Ryu however you say it with Ryu you know he'll do the Hadouken or the Cherie you can like what just a puncheon hadouken is where he goes like this so you can do something like you know the dictionaries call maybe Street Fighter right Street Fighter and you can have Ryu and you can pass in a list of things like you know Hadouken and sure you can I don't know how to spell right so and then in the dictionary when you type in Ryu you can see all of his moves okay so again their examples are weird they're really weird examples but if you try to relate it to something that makes more sense to you it's gonna be a lot more amazing right it's going to make a lot more sense these are weird examples okay so then we use sort to sort the items on the list stored under the backpack key okay so we have a backpack key here right but what we're going to do is we're gonna sort all the value so we're going to sort the value or the list of the key backpacks so how we're gonna do it is we're gonna sit inventory of backpack right that if I just wrote that right thou would just equal this list here okay so how do you sort a list you just write that listen you're right dot sort and it sorts that list so in our case we're just going to call that sword on inventory of backpack okay then remove dagger from the list of items stored into the backpack great so we're going to go like this we're going to go backpack again this will give you this list and to remove dagger from this list you just do not remove and you do dagger right so I'm just gonna say since inventory backpack is just another way of saying that list I can call dot remove on inventory of backpack not remove dagger add 50 to the number stored under the gold key so what we're going to do is we're going to say inventory of gold so basically we're adding gold how I'm almost thinking of it is that we're removing the dagger or selling it right in a lot of video games you'll sell the dagger and maybe you get back 50 more gold so we're going to increment our goals from 500 to 550 cool so we're going to say inventory of gold is inventory of gold plus 50 this means that so inventory of gold will give me back 50 right this part this part will evaluate or this part will evaluate to 500 and they'll just be 500 plus 50 so how you should think about it is the new inventory gold should equal should be what inventory of gold was 500 plus 50 okay that's how you increment something if you said something like this what you're gonna what you're saying is 500 plus 50 this statement in and of itself does nothing the only way it does something is if you make inventory of gold now equal to 500 plus 50 but 500 plus 50 means nothing in and of itself okay so when people are incrementing things they get really confused by that so just remember that this is how it's done okay invent your goals you can image of gold but it was plus 50 more cool I'm not going to waste any more of a time expounding on that save and submit n we have finished this course and we got achievement Python lists and dictionaries is dangerous to go alone take this so now we're on the last part of Python lists and diction let's keep going oh absolutely we completed it nice all right so let's go back to our course page start lesson let's go back to our course page and see where we're at now all right so we just completed Python lists and dictionaries that's amazing now we are at 38% and listen dictionaries are one of the very key concepts in Python so it's a good skill to actually have and to practice it and get better at it okay some people ask well when do you use a list versus a dictionary you already know and how I'm going to prove that you already know that is I'm going to ask you questions like almost interactive that you're going to answer in your head and through telekinesis I'm going to know what you're saying sorry I don't have the power of telekinesis but I do want you to still think about your answer okay so let's say okay listen verses dictionaries right if I gave you a lot of test scores and the student names were anonymous okay the students names we don't have the names on there but I just gave you a list of like I give you a bunch of scores and I told you to use a certain data type to store them would you use dictionary or lists okay think about it I'll give you three seconds and I'll answer this question three two one you would use lists because it's just a bucket of information which is not tied to one another you and you just need a place to collect it and store it okay that's where lists are very useful now let's say we have a hospital where children are being born and we need to associate the child's name to maybe their birth certificate their date of birth and you know whether they're male or female and you have hundreds of child so you need to store for each child their name and a bunch of other information for each child and you need to do this for hundreds or thousands or millions of children in this case would you use a list data type or would you use a dictionary data type give you three seconds three two one for this you would use a dictionary okay because the child write might be the child name might be the key and your value might be their date of birth their birth certificate and whatever else okay in reality the key would not be the child's name because when you try to look up let's say you were born and your name was John Smith or John Doe well if I had if I use the key to look up john doe's information I might get a thousand results because there might be a thousand babies named John Doe or thousand kids right so what would be better is probably some kind of serial code or whatever to use as a key that would each would be unique for each person that's why sometimes we have sources we have social security because that uniquely identifies us and everybody has one Social Security okay and same thing with a credit card so that's something for you to think about for a future but for now lists and dictionaries I think you know when we should use them cool a day at the supermarket I get it before we begin so now they're going to talk about four loops which I alluded to a little bit earlier a is equal to list of some sort for XNA do something for every okay so for item in print item so loops again are one of my favorite parts right I love loops so much because they're great they help you a lot and they automate things that would take humans thousands of years to do and mistakes so let's do it simple for name in names print name I'm going to start getting in the habit of putting parentheses after your print okay just start getting in the habit of that even though you are using Python two right now still start treating print like a function so then when you transition to Python 3 you're not like thrown back by it okay this advice was given to me by somebody who's much smarter than I am and she told me to start teaching you guys by putting parentheses after the print so you can start getting prepared for Python 3 okay for name and names print name again this could be V this could be it's just an arbitrary variable name right this could be blah blah blah blah blah and as long as you're consistent here now what happens is when the loop runs the first time the loop runs on this is the list names right so name becomes Adam and then it goes to line for loop is just something that runs over and over again till the given bucket or given thing X so in this case a given thing is a list then this list has 1 2 3 4 5 items so can you guess how many times this loop will run yes it will run 5 times okay so while that's happening this variable name is going to be the first element the first time then the second element in the third element and fourth element and fifth element so the first time is going to be Adam and line four is going to pretty much that print Adam and you can see Adam then name is going to be likes then is going to print Alex so on and so forth I think you already know this I will hit that button and here you see Adam Alex Maria Martine and Columbus great we have a dictionary Webster with the key aardvark which has a value a start of a popular children's cartoon show so this is you know giving you an example so here they have Webster which is kind of like um they're using it as a web smyrnaean Webster whatever dictionary but you could also you know have you could create a website where you have movies and trailers so for a movie you can have the movie name and for the trailer description as the value you could put description right so that's another way you could use a dictionary okay let's keep going so use a forloop to go through the Webster dictionary at all definitions that is pretty simple loops work the same way for dictionaries kind of like the work for a list so just to give you an example here for item in Webster let's say print item right so this will actually print out the key names but if you want to print out their values again remember to get a value of a dictionary you have to give the name of the dictionary and then the key so if the item is giving you key then it's just as simple as putting in the dictionary name passing in the key and you get back the value right so let's see what they want us to do so they just want how to print all the definitions so we're going to do the same thing we're going to do this okay print put your code below okay and we've printed out all the definitions done control flow and looping okay now we're getting fancy we're using for loops and maybe freezing ifthen statements in here as well so here what's happening let's take their code and let's read it reading is an important part of a developer's job so we have a list of numbers with four elements or four numbers in here one three four seven so we go through each number for number in numbers so again you should be thinking the first time the loop happens the number is 1 the second time the loop happens number is 3 third time the loop happens the number is 4 and then when the loop happens again the number is 7 and then the for loop stops and we're out of the for loop ok everything that's indented below the for loop is part of the for loop so whenever the for loop is running every time the for loop runs this block of code is running as well okay well this block only runs if line four is true but just for simplicity sake we can say that these are the only things that are considered when the program is thinking about what parts of the code to run once all the elements and once a for loop is completed then we go to line seven which means that no matter what happens line seven runs because line seven is not dependent on any other line but that's the last line that we'll run in the thing so you can see it says we printed seven and obviously at the end we probably have printed seven okay so it'll go through for number and numbers if number is greater than six then print the number so when we keep going through the numbers if at any point we get a number from the list that's greater than six then we print it out so in this case you can understand that none of the numbers get printed except for seven because every other number is less than six we run it okay we're back online again so for some reason the internet pretty much died so here if I run this code you are going to see they want us to put parentheses after print because again this is Python three that I'm using in right rappelled it repl dot it and basically what I say happens right run through the loop numbers great and six we print it out and here we have we print seven and then the last line of code says we printed seven all right like step two above loop through each item in the list a like subject if the number is even printed out you can test if items is even by two equal equals zero so that means this okay so if you want to check a number is divisible by two that means that the number is even then we print it out so how do we check if a number is even okay let's take a number like 12 and if we say if you use modulus that gives us a remainder so let's try putting in five into this right and let's print it out and see what we get so we get back a 2 because 5 goes into 5 5 goes into 10 we get a remainder of 2 right and if we do 12 modulo 6 we get a remainder of 0 because 6 goes into 6 and then 6 goes into 12 so 6 goes into 12 perfectly therefore 12 is divisible by 6 indeed how we check that if 12 is divisible by 6 is we say right because if 12 is divisible by 6 we should get back to 0 12 modulo 6 should give me a 0 so here we're checking does this give me a 0 if it does give me a 0 then that means 12 is divisible by 6 so I should get back a true right likewise if I put a 5 in here I get a remainder of 2 this whole thing turns to a 2 2 does not equal 0 this should give me back a false same way you can check for divisibility by 2 by just replacing that by 2 they're cool so any number that we can put in we can find out if it's divisible by 2 or not which means if it's even or not so we're going to do that here for number in a if number is divisible by 2 then print number is that what they want us to do print it out that's what they want us to do this is it two four six eight ten twelve isn't that cool okay let's move on lists plus functions so let's make this one the last one for this video and then we'll pick it up next time in tutorial ten all right so let's see what's going on here we have a function count small it takes in and input numbers so it takes in one variable we can call it V or we can be nice and call it numbers for n in numbers and I would say num in numbers or number in numbers but they're just being cool and putting N if the number is less than ten then we increment the variable total by one and we return total so effectively we are trying to count the small numbers so in here right for example if we ran this algorithm it would say that the total number of numbers that are less than ten is going to give us back what do you think is going to give us back did I give us a two right this should give us back a two because there are only two numbers that are less than ten everything else is greater than ten so that's what this number this loop does okay it defines total to be 0 and then increments total by 1 every time the number is less than 10 and then at the end it returns the total okay so here we are calling the function small count small on the list called lost so you can either put in the variable lost in there or directly put in this list but why put directly the list if we have used a variable to store it so we use the count small function pass in that list so what happens is that this list gets passed to this function this function replaces numbers with that list and everywhere there's numbers it changes it with that list name now this loop comes in and it says 4 4 see the first time the loop runs it goes to the first element in the list so it goes for 4 in this list if 4 is less than 10 which it is it increments total by 1 so total becomes 1 then it goes for 8 in this if 8 is less than 10 total increments by 1 so total increments by 1 we get 2 then next time it goes for 15 in that list if 15 is less than 10 increment total by 1 if is this statement true no this statement right here is false okay this evaluates to a false so this part of the code never runs so total stays at 2 then the loop goes and goes to 16 if 16 is less than 10 this evaluates to false therefore line 5 never executes and hence total never increments again and you get the pattern 23 the same thing will happen and 42 the same thing will happen so let's put all of this back right so effectively at the end we'll get back to and line 10 we'll print that out so let's hit run and again this is Python 3 so I got to wrap that in parentheses and we get back to now we're going to write our own functions so write a function that counts how many times the string fizz appears in a list write a function called fizz count define that's how we write a function so every time we think a function we type in D EF which means define function name is count it takes in a list X so we should really call it list X or a list like this not list because list is a reserved word which is why turned blue but list underscore or list you know num list but here they want to be fancy and call it X just to confuse you guys so but we'll do that create a variable count to hold ongoing count so we initialize it to zero so then later we can keep incrementing count to keep track of everything that we've seen so far and then return count at the end su for item in X if X equal to the string fizz then increment count by one so we can use this fancy notation but don't do that for now just use this one so this means that new count is the old count plus one so now it changes the definition of this count to one okay and then at the end we return count okay so for example this count should return to so this is a pretty cool function now we're starting to actually do something with all of this oh did they want us to print it out no this said return it right so it should return so when you return stuff it doesn't actually get printed out so you have to wrap that in a print to print it out we get 0 that's weird that shouldn't happen Oh if item is fizz not X so we get 2 okay so let's go through this loop and how it works so we're calling our function fist count we're passing in the list right we're passing in this list fizz cat fizz so this X turns into fizz cat fizz we come to count we initialize it to 0 for item in X so X is this list item the first time is going to be fizz if fizz equal equal fizz which is obviously true then increment count by 1 so count is now 1 then it goes it's like an item in loop for cat in that if cat equal equal fizz increment count this part evaluates to false right and so line 7 never executes and therefore count doesn't not increment then we go to the loop last time because red the last element so again it's fizz here we got fizz is if fizz equal equal fizz well is fizz equal equal to fizz definitely this is true this part gets line 7 gets executed count gets incremented by 1 we see the loop has stopped so we continue to line 8 finally let's give a little gap to make it easier to read we go to line 8 in line 9 line 9 returns the count which is 2 at this point so it returns 2 and we print out that so this whole thing effectively turns to a 2 and then we print out this 2 right there okay so hopefully you are seeing how this is working and I'm going to copy this and paste it here I'm going to comment out line ten because they just give an example and we don't actually have to write it and they said start next lesson great job everybody you have just made it through code Kadim e part 9 please like the video and please subscribe we're very close to 100 subscribers right we're at 97 subscribers at this point please subscribe let's get to 100 subscribers and I will see you in the next video code Khadem e part 10 okay so get psyched I'll see you soon