Today we are gonna be talking about tutorial purgatory and how we end up getting stuck inside of it. How that affects your life, and will basically be the thing that ends your career or rather will stop you even from being able to start a career. We'll talk about why it takes place and I'll talk about how you can pull yourself out of it. Without any further ado, let's jump right into it! Hey you, what is up! How's it going? This is Qazi or Pop Python from cleverprogrammer.com. Now this is the, also a challenge I'm doing which is one video a day. So we're gonna keep on going with this. This is day six, video six. Which is pretty exciting and if you want to keep up with my challenge and do something also in those 30 days, you can follow along with me and do it live everyday. Alright? You can be coding for 30 minutes a day, or an hour a day, whatever it may be and to follow my challenge and everything else I'm been doing behind the scenes, do follow me on Instagram. It's CleverQazi. Follow me there and you can see all the behind the scenes stuff. With that said, let's continue. So, tutorial purgatory. What is that? I'm gonna write this one with a red marker. Tutorial, this is a terrible marker so we're gonna switch it up. Tutorial Purgatory. Now, this concept, what this talks about and what this refers to, tutorial purgatory, is that you have all these tutorials online that you can learn from, coding. You have all these courses you can go through. But how come you go into a course but then you find yourself forgetting everything? And then you just find yourself going through that course again and again and again and again, and again and again. Why is that happening? What is going on? There's something wrong. Something is going on. And this usually a red flag, alright? This used to happen to me all the time when I was starting to code. And what would happened with me is I would go, okay. You know, let's say I'll go through a Codecademy tutorial for Python. Codecademy tutorial for Python. Alright? So, let's say this is what I would do. I would go through this, and I'm like, okay, that made a lot of sense, that was really great, and then I would kind of stop coding. I would code for a little bit longer but then I would stop. What kept happening was I would code and I would stop. Also, when I tried to go from, and eventually when I got out of that loop, where I would keep quitting coding. What I would try to do is I would try to work on a project. So I'd be like, okay, I did Codecademy tutorial for Python. It was great. I learned the syntax. What's next? So then I tried to work on a project. SO I'll go like okay let me build a project with Python, only to find out that I have no idea how to go from tutorial to completed application. And I would have this big question mark on, what do I do here? So then I would spend some time trying to make this work but then I would get nowhere with it and then I would feel very discouraged, disappointed. And I would think this isn't looking good. I'm not making any form of progress that I want to be making. Maybe I missed something in the tutorial? Let me go through the tutorial again. And I would go through this tutorial again, I would come back to build a project, and I wouldn't be able to build it. Then I would think oh man it's been so long that I am forgetting commands, alright? So I would also have this where I felt like I was forgetting if statements, okay? But then if you want to get more complex with this, I was forgetting how to do a recursion or how they taught it and I forgot, I'm like maybe it's just, I'm just forgetting code and I'm forgetting the certain syntax that we're using. How did they use the dictionary data structure again? How did they use lists again? And I would think, oh, it's just that I don't remember it. So let me go back and refresh and really just keep on going through it until I figure it out. Very dangerous thing to do because what I ended up discovering was I would spend weeks, months, and I even wasted a year on just going through tutorials but never make, never feeling like I'm making forward progress. Have you ever had that happen in your life? Where you were doing this and you found yourself stuck in a coding loop and you thought either I can't become a developer. It's too hard or I can't remember something but basically at the end of the day, you kept finding yourself in a loop similar to this. That happens. That has happened to me. And maybe that's happened to you. So this is what we call a tutorial purgatory. It's actually a pretty popular concept. It's very fascinating and there are lots of videos on this as well. But now what is the solution? What is the solution? Alright? What is it? What's the solution? How do we actually (clicks tongue) take care of this tutorial purgatory problem? And if you watched my last few videos, I think if you watch even my last one which is day five of this video challenge that I'm doing daily and I think it was called how to think about coding problems and solve them. I'mma pop it up right here. That video goes into a lot of detail on how to solve this. So definitely check that video out as well. But we're gonna also dive into that concept. The reason why you keep being stuck in this tutorial purgatory and you can't get out of it is because you aren't working intentionally. Alright? You are not learning, 'kay? You have to do something called active learning. And because it's a good thing I will put a green check mark on this guy. (bell dinging) What most people are doing is what we call passive learning. Alright? And this is not just about learning, guys, this is about how you become a developer. This about how you can make an income. 40,000. 50,000. $60,000 a year. 80,000. 100,000. Whatever your goal is. But it also depends on where you're living, the cost of living, all those things, but with all that in consideration, you're trying to become a developer that's getting paid what he or she is worth. Coding, the biggest skill you need in coding to actually be very successful is your ability to learn new things, to learn new languages, and new frame words, new tools, new strategies, new kinds of ways to solve any problem. So, it's not about what you actually know, it's about your skill of learning and if you're fast, if you figure out how to learn new things fast in coding, you're gonna always have a career in programming and coding. So this goes really deep. This is why you might not be a developer right now. This is why you might not be at the level you want to be at right now. So we're gonna put a red X. (buzzer buzzing) Don't do passive learning. Passive learning is what's causing you to be stuck in tutorial purgatory. You're gonna be stuck in tutorial purgatory for the rest of your life and you'll never feel like you're good at programming. You will always feel like that imposter syndrome, that you're kind of just faking it and going further, and you will always have this feeling where you spent years coding, months, or maybe even a year or two, but you'll feel and you can see that other person who's only been doing it less times than you might actually be better than you. Alright? And this is the reason why this takes place. Why tutorial purgatory takes place is because of passive learning. A very horrible thing to do, okay? So let me talk about what passive learning looks like. It is just going through the motions and you're copying the code and you're practicing and you're kind of learning it, but it's a form of passive learning. What active learning would look like is, let's say that I want to learn how to, let's say that I'm trying to build a project, okay? Let's say I have a project in mind. And I've talked about this in one of my older videos. But let's say I have a project in mind and I want to create some kind of app. There's some kind of application. So think I want to make a app like Instagram. If I want to make a app like Instagram, first of all, what are, what is one thing I might need? If people are making posts, right? They put up their pictures and it saves somewhere. I need to have a place that could save the data. So then every time I run my code, my data can be there. So I need to be able to save my data somehow. So I would know, okay, I'm trying to, I'm starting this project. It's gonna be kinda like an Instagram app. So one feature I need, I would take the Instagram app, and break it into its component parts. So it has the ability to save data, it has the ability to read, write, delete data, and edit data. In web development, we call it CRUD. Create, read, update and delete, okay, so it has CRUD, it's CRUD enabled. And then it has lots of different features so you can edit a post, you can write on a post, it'll save everything for you, right, and everybody has their own accounts. Let's just start with a simple thing. So it saves, let's just say it saves stuff. Alright? That's one ability that is has. Then so you are like okay? I want to be able to save stuff. Then what is another thing that could be a simple thing you could build into your app? Well, what if you want in your app to have a feature to be able to search people? Okay? You want to be able to search on Instagram, you can type in my name, CleverQazi, and that will search me up. How do you build that functionality to search somebody up? You need something like filtering. Or searching. So I would write down okay I need to filter and search. Alright. So now these are two features I am thinking about that I'm gonna have in my project. So I have this project that I'm working on, maybe I've already started, and even if I haven't started it, I have a project in mind. I have a project in mind. Like a Instagram clone I wanna make. Now when I learn, and in Codecademy, let's say they're teaching me about CSV files. I don't have enough room to write, so I'll write here. But if they're teaching about CSV files, all of a sudden that stuff is way more interesting. And will remain in my brain. The reason is because CSV files are like these, you know, comma separated values, in other words, you can do stuff like Excel stuff with CSV files, right. So think of that Excel file. So basically now with your program, in your Python, you can save data to some kind of file. So now you've learned. Before you would read, reading and writing CSV files. Like that sounds so lame and boring. Unless I'm a financial analyst, never gonna be useful. But now you're thinking, oh, this is giving me the ability to save stuff. That means that I can do this functionality when I am ready to work on my app. I can have the saves stuff functionality. Okay? So now it's kind of like having a database. Okay, this is what we call a database. So like, oh, that's amazing. Then the next thing you're thinking about is, and you go okay. How can I filter and search? You're actively thinking about it, right. So in Codecademy, maybe if they teach you how to write a function in Python that teaches you how to filter stuff or find stuff, like you know you'll write this function, it's like find the maximum in the list or find the minimum. Now it's not just this random exercise, you're doing in a void in isolation. You are actually doing this exercise for a bigger reason. Because you're thinking, oh, if I can find the biggest thing in a list and the shortest thing in a list, then it means I know how to find things which means I can sort my, I can have people sort by who has the most followers. I can have my app sort by who has the least amount of followers. Oh. So this can be really useful. And if I figure out how to search like this, then maybe I can even build a search functionality, right, because it's teaching you how to filter stuff. So you can be like, okay, cool, so I can filter stuff and then I can have search functionality. So now when you're learning the filtering section, that was supposed to be super, you know just dry, it's just teaching you that one thing. You have this active project you're thinking about. And you're thinking about, oh, I'm gonna apply it. And then as soon as you learn these things, you actually apply it in your own project. Alright. In your own app, your own project. It could be something very simple. It could be a Hello World app and a script, alright. It doesn't need to be something fancy with the front end and everything because if you're a beginner, you're not gonna know how to do web development. You're not gonna know how to deploy stuff online and you're probably not gonna know how Jangle words, but you can still do stuff on your local computer. If you're thinking about a bigger picture, a project you have in mind, a vision, then it becomes way more exciting but most importantly you're now doing (bell ringing) active learning. It's not lazy learning. It's active learning. And once you can do active learning, the magic that will happen, my friend, is that you will never, ever, ever be stuck in tutorial purgatory ever again. (light hiphop music) This was my message for this video. Thank you so much for watching. As always, I love your face and I will see you in the next video!