What is up you beautiful person? This is Qazi here from cleverprogrammer.com, today bringing you the top four dying programming languages in 2019 and going on to 2020. So let's talk about this. What the hell is happening? Now first, few things I just wanna address before we continue. The reason why you would wanna know these things is so you can help decide what part, where you wanna head with your career, okay? And obviously other things like one programming language doesn't ultimately matter, because when you're working on a project sometimes you're using multiple programming languages. But I think that this is still something really fascinating and interesting to talk about, so we're gonna talk about it. In this video, we're gonna focus on data, analytics and trends in Google, not my personal opinion, okay? Because my personal opinion doesn't matter, but let's look at what the behavior of the world is and use that, and that's why we're gonna be using the PYPL index, the Popularity of a Programming Language index, instead of the TIOBE index, which is the TIOBE index. And now I'm gonna talk about why you should be using it. PYPL is a leading indicator as opposed to a lagging indicator, okay. For example, it says here on the PYPL platform which is pretty smart, and they say that you know how TIOBE actually use searches, and comes up with this index, is based on how many web pages there are for a given language. Well, if you take a language like C, it says, it ca... ObjectiveC programming has over 20,000,000 pages on the web. While C programming has only 11,000,000. This is explains why ObjectiveC has a high TIOBE Tiobe ranking. But who is reading those ObjectiveC webpages? Hardly anyone. According to Google Trends data, an ObjectiveC programming is searched 30 times less than C programming. In fact, the use of programming when you TIOBE index, is misleading. So, I agree with this, okay? It's misleading, you wanna look at what the trends are now, instead of a lagging indicator like webpages. So for example, if we go to this, and I'm gonna be going in an order, all right? So if we go to this, you can see the base on a popularity of a language worldwide, where languages rank. So right now, you have Python at the top, then you have Java, then you got JavaScript and then goes on, so on and so forth, okay? And where the trend is headed, so they're using Google Trends. So now, if I actually type in Python and I select programming language, and then I type in JavaScript, and I select the programming language, you can see, and I choose the last five years. Notice what happens, right? Python is the blue, JavaScript is the red. So the JavaScript is winning in the start and Python is here, but as you keep going further and further, you see that Python ultimately dwarfs out JavaScript. Now you might be thinking, wait this can't be true? Here's another way to look at it. You can go to YouTube and you can actually type in Python and look at the views on the tutorials in the last year, all right? This should prove it to you. You have 8,300,000 views for this Python course. You have 4,000,000 views in the last six months for this Programming with Mosh course. You can see my beautiful face here, in my tutorial here. I have a five hour long tutorial that I put on this. Now, if you do the same thing with JavaScript, you'll notice that the views are way lower. 1,800,000, 1,100,000, 547,000. So let me propose a question to you. Why would there be less people searching for something if there was a higher demand for it? There wouldn't, right? So, the demand is directly correlated with the amount of people searching for something. So YouTube, Google Trends, these are pretty good indicators. So now with the facts established, let's get into the top four dying programming languages, and how you can use that data to make a better decision in your life. Top four, Ruby. So Ruby is a programming language that's more on the decline. Will it completely die off? We don't know. Are there still jobs available for it, and developers getting paid for it? Absolutely, but it is certainly not on a higher trend. The growth of it is actually on the more declining end, all right? So you can see here based on the popularity, Ruby is ranking 12th, and it's on the decline and is losing its share, and it has a downward trend. If we go here and we type in Ruby, so programming language, we can actually search this up. And even though this is not a good data to look at, but you can see, it's either staying stagnant or declining. It's definitely not growing. There was a time where people were searching it up, and there were some.. there was a little incline, but that was back in 2006, and since then, it's been on a steady decline, and now it's even more so. Okay? And we can, we can confirm this by typing in Ruby and what you'll see here is, one year ago 207,000. Whereas on the Python, it was 8,000,000 views, right? So that should just make it very very dead simple. So that's the top four dying programming language. Now, let's move on to number three. ObjectiveC. So this programming language certainly not on the incline and has a downward trend, and it's a pretty big programming language. So let's type that in, ObjectiveC, and here comes the programming language which is different than just the search term, and you can see that the popularity of the... it was at one since 2004, and it's still at a one. Now let's take a look on YouTube, and type in ObjectiveC. So there was a tutorial by Derek Banas four years ago and that 215,000 views but unfortunately beyond that, there doesn't seem to be much of a demand for ObjectiveC at all, and it is one of the programming languages that is dying. So if you're using it, probably stop. Go on to something else. Obviously, unless you have a job in ObjectiveC then you should stay there. That's three. Number two dying programming language is Perl. So let's take a look at what's happening with Perl. Perl is right here. Certainly on a downward trend, and if we type that in, so Perl was pretty popular around 2004 and then it had a very very sharp decline. This is a really stark contrast that we see over here, because you go from that popular, to that dying. I mean that's insane, right? And then Python just whoosh. I mean this is flying, flying baby. Number one, staying number one consistently. So that's a situation that's happened with Perl unfortunately, and Perl you definitely kind of wanna stay away from it. This article by Skywell Software, this is a company that wrote it. And it says basically, "Is Perl Dead?". "The story of Perl is a very sad one. As is went through, from one of the top programming languages, but as time went on, it became viewed as a write only language, which triggered its demise. Early on, it was viewed as very useful and pragmatic, but it came with a lot caveats. The creators of Perl started to pile on features, but did not plan out how all of them will be synced. The developer community noticed this problem and created Perl 6, but it was not enough to keep Perl in demand. In the end, it had a good run, but it would be better to forget about this language and focus on something that is more popular now." Really harsh to read such a thing about a programming language but, it is the truth and these are facts, and this is data, and numbers don't lie. So that is Perl. And in the number one dying programming language, JavaScript. I'm kidding, I'm kidding . Visual Basic. Okay so, let's take a look at what's happening with Visual Basic. We have a downward trend, the order that I have, by the way of saying these, is not in any particular order, but so you know it's not like this is the most dying out of all of them, but Visual Basic which was pretty heavily used and has, I mean it's so much popularity. In 2004, it was at 100 out of 100 people were using Visual Basic, but then just look at what happened and look at the decline. I mean this is insane, and now it's a dying programming language. That's why, what you wanna do is you wanna pick a pro... See it's not just about programming language right, but then when you, but whatever programming language that you actually choose, will morph and will define what your career comes out to be. I mean if you're a Python guy, you're gonna be learning frameworks like Django, and it's gonna be defining kind of what you do. You're gonna be doing things with data analysis more and more, because you're gonna be hearing about it. There are more libraries about it. So you're gonna be doing that more and more. If you're a JavaScript guy, you're gonna be working on Node.js, and you're gonna be doing a lot of the frontend stuff and all. Like by default right, lots of the projects and tutorials by default are gonna make your behavior going that way. So why you have to be careful about the language you keep close to your heart, is because it can drive a lot of your future behavior. For example, my friend Tenzin. He's really good at JavaScript, he picked JavaScript, but he's more of a frontend and a full stack developer. Whereas with Python, I primarily focus on most of the backend, so I'm a really strong backend developer, right? I... And my dataanalysis game is pretty strong, so all of those things for me became stronger, and my friend end is weaker. So, the language will kind of influence what you learn, how you learn it, how well you learn it. So, I think that's why it's kind of important and even though this is more of a fun video, I think it's important that you be looking at these metrics, and be careful about which direction you're heading in. Well, this is September 1st, and it's 10am right now. So I just wanted to make this video in the morning for you. This is it, this is Qazi. I love your face. Please, to help out this channel, hit the like button button, hit the subscribe button, put the bells on, and I'll see you in the next video. (hip hop music) (hip hop music) (hip hop music) (hip hop music) (hip hop music)