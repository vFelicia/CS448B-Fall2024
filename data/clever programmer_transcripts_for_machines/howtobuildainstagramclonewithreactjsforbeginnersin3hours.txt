now guys today we are going to be building an Instagram clone with react so we come to you with another banger this is also gonna have firebase and user authentication and it's going to be deployed online and it has all the functionality the bells and whistles of Instagram here is actually Instagram right and then here is our app that we're gonna be building looks clean bro that is super clean and for example I can go here at the bottom and I can choose a file and let's just say I pick let's say this one you can upload it and I can say let's build a react to do app you can put my emojis or whatever it is that I want simply hit upload oh you have to click the file I chose it yep oh yeah nice and it's right here so you guys can see that yo our boy Aaron is here what is up yo thanks for the support rode that means a lot I appreciate it so you guys can see we just uploaded that photo so quickly and we're gonna show you how to be able to upload things and comment oh we didn't show them the common functionality right Sonny oh yeah nice let me actually jump on and I'll comment something else yeah go for it alright so if I go over to the comment I cause you just post it and say what's up guys so 3 2 1 boom the real time guys yeah okay because yes essentially hosted online and so then you just went and you posted a comment and then I went and I posted a comment and boom it just worked in real time like that right yeah and guys it's worth mentioning that we each logged into an account yeah you did that which is why it's clever cause IAM which is why i says my tag yep and so i can even click actually log out here and it will log me out and i can also click sign and then it allows me to sign up from there exactly yep so pretty pumped about that let me actually just take a look at how many users we have live right now is the live stream going fine yeah yeah okay let's see cool all right so this is what we're gonna be building I hope that you guys are excited to build this with us and at this point what do you say sunny should we get should we kind of jump into it let's do it okay so where do we start what do we do okay so first step is for anyone who hasn't coded with the react before it's one simple thing that we're gonna do so I need you to share the terminal right now cause you I'm gonna start so let's go right there command J man that shortcut is helping already so I will go here sure terminals readonly right click make read and write boom there you go oh so now I have access to your terminal awesome so the first thing we're gonna do is inside of the folder that we're coding in we're just gonna do MPX and then we're gonna run something called create reactor so this is something that Facebook built and it just it allows you to get a my terminals being wind it allows you to get a stock app set up so here we're gonna say Instagram Instagram clone or on their Instagram clone there we go let's just go with that and we can enter and that will get all of the files that we need set up and it will give us like a react template to start with and that will save you all the headache of all the boring steps to get everything up and running so I'd always recommend if you're coding in react you use create react app because it kind of gets rid of all that eggs and by the way this app will also be responsive for all of you guys so when you guys are done building it like look at that ah ah clean it's clean and we're also using material UI hey guys so for some of the things like the Avatar the buttons that you know is that's a really nice design library from Google called material UI so we're gonna show you guys how you can use up today nice I just logged in nice awesome so clean next step kasi while that's getting set up let's go ahead and setup firebase okay dude let's do it so while cause he's doing that firebase is a set of tools it's a suite of tools actually from Google and it allows you to do a bunch of different things so today we're actually gonna use three of these different services maybe four I think that what we're doing is we're having the database on firebase so it's gonna be a complete backend solution for that I'm also gonna have so just to tell you what card he's doing is he said he's creating a new project which is what you guys need to do if you're following this and you just want to call it Instagram clone and then you click continue and it's gonna ask you after this if you're gonna add Google Analytics so it's up to you if you're gonna do that and then that will actually spin up the environment the backend environment for you and this gives everything done for you guys so you can have your database hosted here authentication so all the logging in and everything that you just saw them that happens through firebase and we can also deploy the website so it can be live on an actual link that everyone can access afterwards and we also have firebase storage which is how you were able to see the picture that cause he uploaded actually go online and then we can actually store that into our database so there's a bunch of things that we're gonna cover today so I hope you guys are excited nice oh my god 318 people live that is amazing it's awesome thank you guys for jumping on your engagement and guys it means a lot to us it's a huge deal if you guys just give the video a like it doesn't take anything from you but it helps us a lot because we're trying to stream and trying to get it across as many people as possible so it really helps the channel grow and all you have to do is just click and smash that like button and we will love you for it and that's what keeps us going exactly and if you guys are enjoying it make sure you shoot some Instagram stories and talk to me in kasnia oh yeah we did that right we posted oh my god people are freaking testing the app that's so cool and and ya guys where was that post where you said so yeah you guys can actually tag us you guys can shoot and i G story right now we actually had a somebody to tag us yesterday and I've reposted their story on my Instagram but just make a quick video with your phone and then tag us at for Sonny it's this and then for me it's clever cause II so Tyga said that'd be awesome nice and I actually gives us a chance to speak to you guys see who's actually watching the videos it makes it a little bit more real for us yeah nice yeah yeah yeah it makes it like it makes us want to do it every single day like even though we only got a message that's something from like one or two people with the video but like that one video just gave us all the juice to get gone it really does like you really boost us to carry on doing this every day yeah nice okay so the next step is if you just want to hit on firebase you see that button yeah exactly and what we need to do here is just register the app so we just call it Instagram clone and we want to tick that little box called set up firebase hosting yeah and the next step we can actually ignore this because we use node modules when we set the app up so we don't actually need to worry about this then click Next and this one guys if you have if you are starting from fresh you just need to paste this into your terminal and run it and that will actually install all of the firebase tools in across your different projects so it will get you the firebase tools onto your terminal so that you can use it and you can do all the deployments but if I typed in and hit enter Sonny and I have it already installed what would happen it would most likely just up try to upgrade the modules okay so it's not it's not gonna hurt us doing it yeah all right should be good next yeah next we're gonna just ignore this for now we're just gonna continue ahead to the console yeah awesome so now we have our registered everything's good the reason why I did that cause if otherwise cuz you didn't do sudo oh yeah yeah if you guys get that error you most likely if you're on a Mac especially you just need to run sudo npm install and then what it will do is it'll just prompt your password you just enter your password and then it will have the right permission so you don't run into that issue yeah and and thanks for giving the video a like by the way guys appreciate that otome everyone's gaming it like yeah okay so next what we're gonna do is we're gonna jump back over to our code uhhuh here we go yep so if we just open up our photos what we're gonna do is we're gonna actually spin up the app so we currently have so you see when we done cracked up in the terminal I just did LS and it says that there is Instagram clone so what we need to do is do a CD into Instagram clone so CD inside of install done and now we're inside of Instagram so here here's where you see deed right right there yeah just saw over kill the MPM star and that's how you pretty much get the out fire it up mmhmm right there NPM start yep now what we're gonna do is actually yes I think cause you actually started doing this already so on the host is Chad nice thank you yeah so what we're gonna do now is you just want to set up your directory so this is the the start a template you're gonna get when you start up and up what we want to do is kind of clear it out so we kind of just stop should we start still should we stop the and rock or keep it going yeah okay nice okay yeah so what we can do now is if we go to the photos yep mmhmm yeah right here so yeah hit delete gone rid of yeah cool cool all right so we're gonna go here and remove all the code inside of the header because we don't need that yep I'm the import statement at the top for the logo there we go so that was that's just gonna give you a fresh start right and what we tend to do want to do is like whenever you sort of start up an app you don't really want any of the styling that they already have inside of there you kind of wanna have a fresh clean slate that you can work from so let's go ahead and save that and if we go over to app test we can get rid of that file too so I'm gonna just quickly delete that one as well so then here's a comment for you what's that sunny giggling like to go my girlfriend's a spring shade when she could then we can then we can have that Val so now we've now we've got a nice starting point so what we want to do now is if we go to app dot CSS so this is the sort of final bit of cleanup that I like to do so we just want to let me also follow you oh yeah yeah nice go for it so now we want to get rid of everything and I like to add this one rule here which Macy says because what happens guys is whenever you have like a blank website that's created with your act even when you're doing default like web dev everything gets like this default margin of ten pixels and it's really annoying and everything kind of doesn't abide by what you want so you want to kind of get rid of that so before we added that line there was this default little margin so if I save it now you'll see you see that margin is hot mmhmm you kind of gets it out of nowhere so you want to get rid of that so you basically add this rule and then that will sort of give you a fresh start so what we're gonna do now is I'm just going to do that file ok so now we're inside of our app so the first step I guess where I like to start off is pretty much let's just kind of get a rough idea of how the app looks right yeah so we saw how we start it before what we pre what we basically want is to have a bunch of posts so I like to use comments when we solve drop this out so we want a bunch of posts so we're gonna have a bunch of posts so in this case when opposed posts and then we're gonna have the header so we're gonna have some kind of header and the header is basically that top bar on Instagram the header is gonna be like right around here right at the top exactly okay so when you go onto Instagram and you see that little logo on the left and you see the login buttons on the right that's what we're talking about uhhuh yeah yeah perfect so what we're gonna do is like the header in yeah like this is the header yes exactly uhhuh yeah and even have you noticed how on our app when you scroll down it actually sticks so we're gonna show you how to do that as well which is a neat little feature sewn on yeah yeah because here when I'm scrolling down the header is seen which is stuck yeah so we're gonna also show you how to replicate that which is quite neat and a lot of people don't know that I didn't actually know that until fairly recently useful so what we're gonna do now is we're just gonna start off with the header to keep things simple we are going to add a div so a div is just a simple container and here I'm gonna just pretty much call it app so this is Emmet that I'm doing here somewhere say app header nice oops I didn't work because what I thought and we can get rid of this yep so if you guys are wondering what this is it's just something called bem i'd recommend go checking it out it's a really nice way of naming your CSS classes and it's a way that it helps you stay consistent as you code bigger bigger like bigger and bigger projects so throughout the app you're gonna see me using this convention and that's called BEM so BM yeah nice so what we're gonna do now is we're just gonna add a image so I've got an image over here and this image right now we were gonna give it a class of app header image and it's got a source and this is just the Instagram logo by the way guys it's nothing special nothing fancy is just the Instagram logo so if we save this now we should be able to see on our website that thing Yeah right there did you see that yeah so we've got a nice little Instagram logo neat okay so the next thing we want to do is you see I gave it a little bit of a a class right now so that app header image right yeah we're gonna go over to opto CSS and i'm gonna add this special line of code here and this is basically saying regardless of how big that container gets keep the aspect ratio of the Instagram because we never really want to stretch that right yeah so we always want to keep that so this little line of code here just keep stats per ratio so it's always gonna stay and it's always gonna look like it's perfect it's not gonna look like it's stretched it's not gonna look like it's broken nice and now what we're gonna do is we have yeah the header so that's perfect at the moment so we're just gonna keep it very simple for now so we can just get rid of that one and we can actually get rid of this let's actually pop this one underneath there for now so you have it like that nice and there save it and we should be able to see there we go right now we need to style the app header because right now it doesn't look the best and if you notice on Instagram it's very so but they actually have a background color it's like a very subtle grain right so what we want is we want the app so the app is gonna have that subtle gray background so you can demonstrate that by just opening up the the instruments I Kazi and you can just show them so you see at the back there's like a tiny gray right yep right there I mean it's not exactly white because this over here is white and this over here is like gray there's a very very subtle change so we're gonna add that so I've just grabbed the color from the Instagram and I used a little nice Chrome extension which allows it's like a little pepper and it allows you to just grab all of the colors from websites which is nice what is it called so the one that I use is called I'm actually sure it's called colorzilla mmhmm so color Zilla that's the one that's really cool that one and basically what that does is it gives you a little pipette and you can pretty much just touch anywhere on the screen and it copies the hex code so it copies this little code right here and that's what you can use when you need to actually add that to your website which is really perfect nice okay so now what we're gonna do is we are gonna go over to what can I see the localhost anymore give me one sec let me just open up locals okay now what we're gonna do is we are going to add the background color for the header image so this one is going to be a white so we're just going to use very simple colors here we literally going to use the word why that gives you a nice clear crystalclear white and now you can see it's very subtle it's actually a very very very subtle in the background yeah it's right there I can see it and then this is white yeah so that's why it so the actual app body itself is gonna be it's gonna be white but everything so that header it's very hard to tell at this point but isn't there's the opposite there header is white and their app body is actually gray also in our case it looks like that right now but it is oh sorry I've done it wrong I've done that's it now it should be correct yeah yeah there we go yeah it's just because you see where it says hello clever program was this button Instagram come with Iraq right now it's considering that to be the container so what we can actually do to get around that was we can say hi 100 percent right and that should actually get rid of that issue or 100 view height I think but we can I you'll see that won't be an issue later on there you go there you go great stuff and what we can do now is comfortable here yeah nice nice yeah you can see it's already take away the padding I want to see what happens yeah so if we take that out you'll see it just drops to you yeah it's like so close to the top right there yeah so most of the time guys it's usually padding or margins that you want to do and if you guys don't know the difference padding is gonna add the padding inside ah margin it's gonna add it outside because I see the white borders got bigger so that means it was from the inside exactly yeah so he's patting the at the elements inside makes and up okay yep so now what we're gonna do is there's one last finishing touch here which is we just add a border bottom mmhmm and we're gonna give it one pixel which means it's a very thin border it's a solid line and we're gonna say its light gray so light gray yep there we go okay and now if we say that you see it's got that little nice little clean line right so we're already starting to get somewhat of a fill for the like somewhat an Instagram fill here nice okay so let me just double check some stuff okay so the next step is let's actually get those posts ran up so if we go to app that J s and we go down to line 17 we can see now so here is where we want to kind of have the posts like the posts which look really nice the post which we can see rendered out on the screen so what I'm gonna do here is rather than write a simple post or whether there might dip I'm actually gonna create a component so we're gonna go ahead into the the photos as in where the files are and we're gonna create a I'm gonna create one right now actually you can create it on your screen because then they can see uhhuh okay we'll create one and we're gonna cool this we're gonna call this post a s okay so this is a component that's gonna design how the post looks or like for example here this is a post and so we're gonna design this thing right now right exactly that oh okay love it so then what we're gonna do is we're gonna use this really nice extension and it's called es7 snippets it's really really handy extension that you can do and what it does is guys if I type in RFC II it pops up so that's exactly the one so you guys want to just go ahead and install that what we can do then is if I type in RFC II and I press ENTER boom we just get everything filled out for us which is really really nice beautiful now what we want to do is we go over to the post and we've pretty much just gonna add a bunch of so we if we look over at Instagram at their posts that they have at the moment they sort of get a rough inspiration so at the top they have a sort of a lava header yeah and every bus which has an avatar and then it has the user name right yep so let's go ahead and just sort of advance we let's just say we've come in here saying there's an avatar so they've got a header and inside the header they have an avatar and the user name yup I see so like the header is this of the post right here right exactly and then have the image so when you say avatar that's this guy and then yeah right here exactly and we're not gonna worry too much about the location for now we're just gonna have the image and then underneath there we aren't gonna write the like functionality we're just gonna have pretty much the username and then the caption so underneath the image we're gonna have user name and caption so if you scroll down you'll see you know it says coding Rob stay balanced right there is a username and then right there whoops right there is the caption exactly and yeah of course it's a big caption yeah so in that case it's a big caption so now what we're gonna do is I'm just gonna sort of get a little test going so I'm just gonna say let's just do here we'll say a h3 tag and we can just say username just to sort of dummy it out and then we go back to our app don't yes I think you need to refund me cause it is they're not following yeah there we go yeah there we go and now if we basically to get that component in all we have to do is write post yeah we do that and then I think if you go over to the end of the word and you press ctrl spacebar oh no it's not doing about your little trick so we might have to employ it so we say import from post and then the file is post there we go importing the component from here right exactly so now we're importing the component and you can see it's actually popped up on the screen now so we have that the next step is naturally to get some kind of image so that we can sort of render out so let's go ahead and let me go ahead and find a image so let's do let's just find an image to say react image so let me just find a quick image to grab so let's do this one this one's pretty cool so we can say this let me say copy image address so right now what I'm gonna do is I'm just gonna have a so remember guys at the top would be where they have the avatar and the image at the username and then here we're gonna have image just gonna be image and the source right now I'm just popping in this is just a picture of a react logo pretty much it's just a massive react logo and there we have it there so what we're gonna do next is we and we will style everything so that it looks good and it looks clean afterwards and then what we're gonna do afterwards is we've got the final bit which is the username and caption so here we're gonna have a h4 and it's just gonna say something like you'll say the username and then it'll say something like this and it will just say the caption so I like to just mark it out like this you can't have a rough idea of what your component looks like and then what we do is we start this one component and then we just reuse it right yeah and I'll show you how we do all of that so now what we're gonna do is we're gonna style so firstly the image is way too big yeah we don't want this big we don't it doesn't look good it's not gonna scale very well so the first thing we need to do now is we actually need to go ahead and add a class to this so we're gonna say class and this one is just gonna be called post yep image yeah and while we're here let's go ahead and add a class to the container so when you whenever you do classes going by the BEM sort of naming convention your component is is the first first word and then you have an underscore underscore and then you have the element you're talking about so in this case we're in the post component image element right yeah so what we're gonna do now is we're gonna go over to we need to actually create a post CSS so if you just want to create that and I will import it while we're doing that so we say import or / post CSS there we go so you imported it right there cool yep I think it stopped following me again yeah yeah it stops following you every time I do that yeah so now we have the post image so I'm gonna go ahead and I'm gonna go and add a class and I'm gonna say the width I want the width to always be just a hundred percent so I don't ever want it to go pause because we're we're styling this image right now right which is [ __ ] it's like really huge right now yeah we don't really want it to ever go to that length we just want to get 100% of the screen you know here we say 100% and then we say object fit contain yeah that's the same rule is before so saying just keep the aspect ratio so there you go right nice now if you just resize the screen you're gonna notice that it's gonna be responsive always to a hundred percent of what you oh I love that object fit contain like the image is always gonna look super nice that's really clean oh that's clean really happy trick yeah yeah so that's something which a lot of people don't know about but that's a really really crucial thing when you're dealing with that images that's awesome yeah cuz images always end up looking really funny you know and I'm like man why does it not just look nice exactly and then they start looking weird and it just kind of throws you off so I see now we got the username and now we got the image and we're username and then the caption which is pretty much like this component that we were trying to model after right yeah so now this go ahead and give it some actual thing so let's just say this was clever Kazi yeah so yes you grab handle and then the caption was Wow day 1 day 3 of lives that's right yeah and now what we're gonna do is I just want to make the the username bowed so I don't actually need to do a nice fancy style thing I could just do something like this they still use the B I thought it you have to do strong right or now oh yeah you might actually because I don't actually use this one too much there defecated it or something yeah so we've moved it over to strong now you alright yeah so that will now have it so that it goes to so he said I think that's made it all bowed right no yeah I don't know what it is yeah yeah yeah what would do here then is well show you another approach so this is I mean I think it's actually all h4 so I don't think it did anything so what we can do here to fix this is we can just say this is gonna be the post we can say post text for example for now so this is relating to the post text so what we can do now is we can say that all of the post text is going to be let's give the post text to be Cisco here and they say post yeah I think the text should be regular shouldn't be bolded it should just be regular and only the user name should be bolded exactly so we'll divs it we'll give this a fun way of normal and you'll see that that will drop it down right yeah and what we do then is I think strong should work them because it's gonna then let's put clever Kazi and strong yep that's that should yeah and now there we go nice so then you have this off Instagram Phil coming through now and the next step what we're gonna do is let's just go ahead and get rid of this mark this mark so here we said we had we wanted an avatar right yeah so what we're gonna do now is we're actually gonna go ahead and look over at material UI so if you just open up material UI and to install material is very simple we just have to end this inside the terminal on the first page of material UI they have an NPM install so you just want to copy that and install that yeah and that will actually pull in the entire material UI design library and then we can just start using it as we wish so right now we're gonna do is we are gonna go ahead and import something called so this is the import statement for it so it's import a Vita and if you ever need to find this stuff guys it's all inside of the material UI dog so if you go into the search bar and type in an advert is gonna come up and it's going to show you how to use an avatar so let's go ahead and use it so where we're gonna put it is pretty much inside so right now we have a h3 right we're gonna basically have the Avatar next to it so we're gonna hum this like this so gonna have the avatar and here the alternative so this is what you can do you can actually give it an image it's gonna actually have a little image inside of that but for now we don't really want to be bothering with the images too much so right now this is actually gonna this isn't gonna sort of go equate to anything so it's just gonna go to the oh right and oh wait does is let's say if this was Rafi Kazi yeah it's just rough a Kazi it's just gonna basically put an R to symbolize it whoops I think yeah there's gonna put our there right yeah so now what we can do is if we save that we should be able to see do the install oh yeah we need to MPN start again yeah to get the app up and running yeah and now what we can do is we need to just wrap this so I kind of want these two next to each other so I'm gonna put them inside a container I'm gonna say div and I'm gonna say post mmm clean yeah so also it holes it pulled from the alt huh yeah it pulls it from the hole which is really nice because when we login what we can do then is we can use your display name and we can say if there is no picture set for that user then just use the first that ever there's the name which is pretty clean yeah you know damn dhruv got it right I am actually using a MacBook that's 16 inches I figured that uh yeah okay so we have post avatar post header so right now what we're gonna do is if we save this you should be able to see it will change the look of that so let's go ahead and ho look so why is mine not yeah okay so now Isabella I'm psyched yeah keep going guys we have the avatar but it's it's on top of the username which isn't really what we want so what we're gonna do now is we added this class name to the Container which surrounds these two elements and we're gonna go to our CSS and we're just gonna do display flex and what flex is gonna do is by default it throws it into a row so now you'll see everything's gone into a row right but the text is out of line so we want everything to be centered so to send every to center everything we do a line items Center and that will pull the text into the middle oh nice remove the display flex again just so we can visualize what is it doing yep so this is exact this is what it looks like right now now enable it real quick so if I bring that back and then save boom okay awesome yeah and that's another reason why you should be using react guys because you get this awesome feature called hot reloading so as soon as you save your file you just there's no there's not even a refresh you just sort of quickly adjusts sometimes especially when you're doing CSS it's really fast yeah so now we're gonna do is where we have the username so there's two ways of actually grabbing that but what instead what we're gonna do as a post avatar you see why now it's touching the tact right which doesn't look the best so we're gonna say post avatar and I want to do a margin right so I just want to add some little bit of spacing to that don't say margin right and then you see if we say that it just pops a little bit to the side right yeah but right here also this username is now has a little margin got it yeah okay still touching the side which which ideally we kind of want it to be a bit more cleaner than that that avatar right yeah like right now there's no you shouldn't be like touching the edge of the screen and stuff like that so what was yeah here it's not touching the edge of the screen it has space yeah so what we're gonna do is the entire post container or no the entire header container so the thing surrounding the avatar and username we're gonna go ahead and give that some padding so I think it's yet post header so I say padding and we're gonna give that let's just see what 20 pixels looks like so if we go and save that it's have a look and you can see is quite it already actually looks much nicer with that yes it does yeah so that looks pretty clean and we want to do the same thing for the bottom so it says clever Kazi Wow when you just do 20 AXA dad's padding in every direction right yeah so there's that's a really good point actually so if I was to do 20 X 10 pixels notice how it's gonna do 20 on the horror vertical but 10 on the horizontal yeah and you can pretty much do that you can go to the point of doing this and I think it goes top left whatever it does it goes left top right mom there's a lot of short hands that you can do for this but for now we just want 20 all around it so we're just gonna do 20 and the next step is we want to do the same thing to the caption so we're we have we gave a class name of post text and a go here and we're gonna say just give it a padding so padding of 20 pixels so boom and if we say that look at that so that's already looking clean yeah all right yeah sorry looking pretty nice to clean and it's already starting to feel a bit more like the app that we kind of want so there's another thing so if you obviously when it gets a bit big so if this screen was to get really large we don't want that image to just keep getting bigger and bigger and bigger right we want to kind of say you need a map because right now it keeps going forever yeah and that doesn't really look good on screens it starts to become a bad user experience so here we gave the outside container class name a post so what we do here is we go to line one and we say post and what we're gonna do is we're just gonna say give it a max width of 500 let's just give it a little test of 500 pixels and see how that does so now I see it maxes out so if you was to get smaller it would start resizing perfect that's awesome it used to get smaller than that it would actually start to resize yeah oh nice I think yeah I think in that case yeah thanks what we're gonna do now is we are going to actually so so not something to remembers remember we have that very subtle gray right behind it yeah but the actual background color of a post should be white so we should say background color white this is actually a good question from Cristobal he says what is the difference between class and class name and the difference really is that it's because you're using sunny is using we're using JSX and so would react you're gonna use class name and if you were just using regular HTML CSS JavaScript then you would use class yeah just to add to that as well in react class is actually reserved for class components so that's why it doesn't it's a way to not get confused between your classes and your actual class components so that's something to bear in mind which is why they're moving towards so I mean some people may be wondering like I've heard of classbased components of how two functional components you do need to know both guys I would recommend you them both but right now just to keep it short on sweet we're using something called functional components which is why you don't see any sort of class or anything like that but yeah just a rule of thumb when you're doing your you're sort of styling give everything instead of a class give it a class name that's all you need to remember mmmhmm nice dope okay okay so now the next step is we kind of need the borders right we need everything to have its correct borders so what we're gonna do now is firstly the entire post should have a border so we're gonna go here and we're gonna say it should have a border that's gonna be one pixel solid light gray and it would all make me know get that oh nice you see it's time to really form quite quickly right yeah very quickly yeah looking really nice yeah the border is now all around the photo nice and what we're gonna do next is we're actually gonna give the image a top and bottom border so we're gonna say border top is one pixel solid light gray yeah it's light gray like gray yep and we're gonna copy that line and we're just gonna say border bottom is that and the reason why I did that is because I don't want the the sides to become double borders if that makes sense because currently they already have a border around the side you see inside outside the entire post so if I was to add another light gray border around the image you're gonna get double borders and it won't look that nice I see okay right yeah yeah so that's that that's why we did that and then now what we want to do is I think that's actually pretty cool so what we're gonna do now is actually test this a little bit more so where we had in Appius we had the posts we're gonna do now is if you just press command J Kazi on the undercoating thing yeah yep there we go according to visual studio hey Visual Studio code as that yeah we're gonna just paste it a couple of times and we should now see so whoa look at that nice right that is clean so now what we want to do is we want to sort out the spacing right so if you know it's on Instagram they have this nice little spacing gaps between each one so what we're gonna do to sort of do that is we're gonna go ahead and add to the post so the actual container itself we're gonna add a margin bottom of 45 pixels and what this is gonna do as soon as I click Save notice on the right it just added that little bit of space underneath it so we're saying give that component forty five pixels worth of space underneath it all right and then you get that nice old gap underneath everything so now we're actually looking pretty good okay let's comment that out real quick ah okay okay this this gap whoops what the hell uhhuh this gap right here right once that gets enabled exactly nice okay and what I'm gonna do now is because we previously did something which might break so we're gonna go to app though CSS just gonna get rid of this line of code because now our container is growing so we don't need that anymore okay so what we're doing now is we have the three posts right but obviously it I mean it looks good but in actual reality you know we don't want these three posts to be the same every time right we want them to be customizable so now what we need to do is we just need to pass through so the way we differentiate one component from another and react is we use something called props so props are basically like imagine just like a normal HTML element but in this case we have a bunch of things we have like the image URL so whatever the image URL is so in this case let's go ahead and give that the image URL that we have mehriban is like everyone is discussing where Kazi is from like it's so annoying I'm just looking at the chat like it started with Isabella she just won't stop asking where I'm from and then like everybody just starts talking about it and then like marijuana's like from Pakistan but when two states yeah yeah I'll just leave it a mystery for everybody you know here we are coding react in every way because we come from yeah I'm from Mars we're gonna go ahead and add the image URL here so it gets passed through as a prop right yeah so let's do that and then what other things we need to customize we need to customize the user name so we go ahead and pass in a user name so let's say this one is using it let's just say like in this case it'll be clever cause II another thing that we need to customize is the caption all right yeah the caption we could just say here is like well it works yeah somebody asked a good question Fayed says why would we want to use react can we not just use CSS and HTML to create this Instagram clone what is reacts purpose right so I mean cause you're new to it well you're more newer to react that I'm so what what of you found like what the benefits for you since you've been using rare well a few things that are really amazing to me is like making my app in a component based way where everything is a component and so everything is like extremely fast like the fact that this is its own component separate from like this thing at the top means that this thing can take its own time and load on its own time this can load on its own time another one is like if I'm about to make a new comment to this app it's not gonna refresh the entire app it's just gonna refresh that one new comment I add this is why Instagram is so fast if I make a comment on this guy's post same thing is gonna happen and this is what Instagram is using react so for me it's really the speed and also how easily and quickly I can put most things together but I mean yes any give us yours like that's all I see the benefits I see it and the reason why it's called react guys is because it's literally only reacting to the changes it needs to react to oh down yeah I did not know that yeah because it's only gonna react to the bits that needs to which is why it's super efficient and really fast yeah so yeah I mean like to be honest I didn't know that for a very long time and then it kind of clicked one day all by oh it's good react right that is brilliant yeah and honestly when you get into big code bases guys it really makes a difference when you can actually see just the code that you need to see so rather than seeing hundreds of lines of code you're just coding on like for example if we look at the post you can see we're just only have like 20 lines of code inside of the post yeah that we need it with so he actually makes everything really easy and manageable yeah yeah but that's a really good question nice yeah thanks for the question so let's go back to you so here we're passing through a bunch of attributes we got username caption image URL and what we're gonna do now is to pass those through here it comes through as a parameter here so it says props but what we can do is we can do something even better here we can D structure so this is es6 syntax and we can actually just pass through the exact names that we passed in so here we passed in username caption and image URL so if we just pass those in here so we say username caption and image URL and then what we can do is it's basically opening up the object so the props that we passed in and here we can just do this and guys what I'm doing here is as Kazi mention before this is JSX so if you have these squiggly brackets you can actually add JavaScript here and there and then it sort of loads your JavaScript dynamically into your HTML which is really powerful so down here another benefit of using react right because you can't just do this in regular HTML CSS and JavaScript right exactly you have to do that whole document dot get element by ID and that doesn't really refresh this is this is another massive reason as to why we use it yeah so nice so nice and then what we're gonna do here is we're actually gonna delete that and we're gonna add the caption here so it's pretty much that simple so we've just passed in the props and now you'll see the first component should load and the second and third would be empty so all we need to save the first part that's why yeah so now you see the first file has loaded and you know my comment is coming through wow it works there's a little little comma at the top so I got rid of that and it should fix that yeah you see the second and third one it elegantly if it doesn't get the props it doesn't just crash and freak out it just leaves it undefined which is which is a nicer way of handling it than just sort of going crazy and breaking so now if we were just to sort of replace these two so we're not gonna replace the images just yet we're gonna just say this one's gonna be me and this one could be like oh there we go and here we could say dope and this one we could say this is a fun project there you go and if we save that and we refresh now you can see it's come up with the so you can see now we've differentiated each of them so you can see like you are clever cause you've got SSS anger and everything sort of looks and feels as it should so now what we can do is and just to make that very visual very quickly what I'll do is I'll actually just so let me just copy this image address and I'll add in different image here so you can see very clearly that that actually did change so now if it refreshes these he the first one is oh wait did I do it right it's what uh oh I knew I only I need to change that to an actual picture so let's just say dog sure give me one sec yep it's grabbing a picture of Google yeah and program programming planet says it might sound weird but it's the first video I'm seeing of sunny is there any personal channel of him and I think you sunny has a personal Channel oh yeah nice yeah it's literally just my name guys it's just sunny Stanga so I will pop that in the right here like that yep just like that nice so you guys I need to a little bit more but right now me and cause you pretty much just doing these live streams are about to leave a legacy that's the goal three days now awesome so we've I just added that now so it should come through so it should be a picture of a dog that comes through if we refresh you say that so why is that oh okay of course because you see in post Jess I didn't actually pass it through as the pro I say as this article devalues so now I'm gonna change that to be the one that we passed in so image URL right there a way of seeing how it all works so now you can see all the images and learning let me find another one yeah let's just use this one image is hiding from you alright this crap oh I just I didn't add the prop name right like image URL yeah be careful guys yeah she said that and there we go there now we've got okay there we go perfect so there we have our pretty much everything set up and it's working as we want what we want to do next is rather than hard coding these posts we kind of want needs to come from somewhere so I'm gonna give a quick demonstration of something called state and state is basically like a shortterm memory store in react so let's go ahead and set up a piece of state so here we have let's just call it posts so it's gonna resemble an array of the posts inside of our app so post and then hold it you in order to actually set that you have to do set posts so this is the standard of how you write a piece of state so how you setup a piece of state we're gonna use the and just for simplicity guy's a piece of state really is just like how you set variables in react that's a simple way to think about if you're brand new to react this variable posts here it's it's just pretty much a variable and yeah exactly yeah so it's a really good thing you mentioned there so it literally whenever rather than doing this guy's so rather than doing cons post equals a blank array just think of it as you set this you set your variables up like this right and you never ever do this in react you never ever say like posts start append something like and then you adds a string to it and then and then cuz you're directly manipulating hit it right here instead what you do is you say set posts and then you pass in whatever value you want here alright so that's how you do it inside of react but you don't do this direct manipulation where you have to follow the react rules which of these alright and this is an example of a hook guys so a hook is just like a short little small piece of code we can buy our own herbs and they're really powerful and functional and they just pretty much allow us to use really cool things such as stay and and there's a few more level show throughout this demo Sharia says sure says I just got here when I run the npx create react app command on the terminal it shows the term npx is not recognized as a name of the blah blah so basically the problem here is you don't have the package npx installed so you will have to go and install + px' and then you guys can do npx create react apps so just look up how to install you know like literally copy that line of code trap and px create app google it and then it'll tell you like what the problem is exactly yeah you're gonna have to set up an PX before I know install it to your computer before you can use it yeah yeah so we're we have the state we have to give it an initial value so that when when the app loads it's gonna have a value inside of it so here I'm gonna basically give it to objects and those two objects if you haven't guessed it they're going to be the objects that we had here so the posts props so the first one we're gonna give it this so we're gonna say I just need to separate this now so we say cover Kazi and then the second bit is going to be the caption so this is an object so the syntax is slightly different so we do it like this and then the final one is going to be an image URL just like that alright and for time simplicity I'm going to just copy this same one so we're gonna have two of the same things rendering so there we go and I'm basically just gonna yes so that's that's perfect so now what we've got is we've got an array of two objects right and this is gonna this is what we which each post here basically has these three pieces of information exactly and what that means is like so user name is going to be whatever your user name is caption is going to be where it says dope here or where it says wow it works and then image URL is obviously what is being rendered right here so each post has three pieces of information and this over here is the first post and then this over here is the second post exactly yeah yep and what we want to do now is this actually making simple no because even if we were to have like a thousand things here all we need to do now is actually write on one elegant piece of code here so we basically put a little JSX brackets and we basically do this so you just want to scroll down a little bit cause you on the on the left so here we can just say we can say posts dot map so map is an ESX function and basically what it's doing now is it's going to every single post so it's gonna go through that list that cause you showed before so this list up here and it's basically just gonna say so the first timing runs through it this is gonna be post the most variable and the second time it runs for it this is gonna be the post variable yeah and what we're gonna do is we're just gonna return something for me by the way sunny I think what we really should start doing is putting everything in coats and box right after the video is done like right after we're done livestreaming and then just show people where they need to add their like firebase config file and then they're good to go yeah that's a good idea I think we will do that on the next cool definitely yeah yeah awesome so now what we're gonna do is we have the post and then what we're gonna say is every time we get a post it's very simply what we do is we say every time we get post so we're gonna render out a post so that's the first step so the main thing you're trying to do here is based on these one second before you just start writing because I keep spore Singh you to follow you so what you're trying to do here is just looping through these posts right so the post one should show here and then post two should show here exactly yeah and then what we do here is we say username equals so here we just say post dot and then you access those properties we saw before so now we're gonna do username and then here we'll say caption equals post dot caption because that's what we gave it inside the object and the final one is image URL so image URL nice double loops yep and sunny this is also a really good question ossama asks try not to sound stupid but it's firebase better than using node.js backend yes there's a really good question actually so a lot of people do get confused about this bit so firebase what they try to do is they try and actually get rid of all the complexity of a traditional backend so you don't have to make the API request and you're gonna see when we actually start implementing the database next but if you do need a backend so no js' is basically for those of you who don't know it's serverside JavaScript so it's just the stuff that's on the server in the background so whenever you solve using the Instagram website or something and you click something in most cases it makes your requests like on some kind of database server somewhere and that's usually running either like Python or nodejs or something like that but here what we're gonna do is firebase actually strips that away from us so we don't even need to do that and I'll show you that in a sec but well if you do need to do that guys firebase offers something called cloud functions and cloud functions can be written in nodejs so it tells your question it's more it's not really a case of which one's better it's it's more of a case of firebase allows you to have no js' cloud functions which can scale up or down depending on how many people are using them at one time so it's really really powerful yeah okay awesome and I think also did we mention that firebase gives you a real time database yes that's a really good point so firebase has something called the firestore database and that is a real time database guys so traditionally if you have a database in in any app you kind of have to constantly sort of fetch every five seconds or ten seconds and that's quite intense and you don't really get like a realtime feel it just feels like this janky experience whereas in firebase they do all of the stuff so some of you may have used something called socket dial which is basically like sets up like these realtime listeners but in firebase you don't even have to do that they do everything for you behind the scenes all you have to do is like literally I think it's like three lines of code and we're gonna show you that soon and it pretty much sets up this real time sink so that way if if somebody adds something information into the database it immediately comes through them the way we combine that with react is really really beautiful and it gives you a really elegant solution to all of that headache so you never have to worry about that real time sink anymore yeah okay awesome yes so now what we're gonna do is we're actually gonna get rid of those two hardcoded posts and now this line of code is doing is just mapping through so it's going through every single post and it's just outputting a post component every time it sees some information so if we save this now we should see it were gonna have two posts which are the same because remember I just copied and pasted the information which is perfect yeah so what all right let's get that so go ahead yeah which is nice so the next step not truly I think we should maybe implement the firebase database yep at this yeah so let's go ahead and go over to firebase mmhm database yup so database and I want you to click on create database okay here we go perfect start in test mode oh I keep forgetting to actually take the comment off the screen all right so let's click test mode yep test mode and then we'll click on next Sam Sam crazy all of us has to tell me remove that comment and then I mean this is pretty cool like we have labs here who says that they're using mostly Apache Cassandra for the databases so like seems like they know a thing or two and then Mario you asked is the writing on screen also a function of V s code live no I use an app for annotation called screen brush it's it allows you to annotate on your own screen yeah it's true really and even when we sort of pair programming and yeah see what house he's talking about like I'm just like look right over here man yeah okay so now we've got the database set up so now basically all you need to know at this point is many people may have used sequel database many people may have used know sequel databases this is like a hybrid right so firebase they realized that there was these problems of sequel databases they realized that there was a lack of functionality in no sequel databases so they basically found a middle ground and they have this collection document collection structure and what we're gonna do here is you pretty much have a collection of posts so right now we have some posts so we're gonna create a collection for that and you have imagine every single post is something called a document right so you have one collection called post and then you have multiple documents inside of it which are each gonna resemble a post on site on our Instagram clone right so just as cause he's down here he's actually created the collection and then you've got the document ID which is all Nike generated and then you've got the three filled so you've got caption user name and image URL so perfect so if you want to go ahead and add a caption so let's go ahead and add a test caption so and then if you want to go ahead and write a user name there you go and an image URL let's just find an image URL or you can grab the one from the code maybe you know so you can grab that one nice there we go and as soon as you click Save that should be done awesome so now you can see we've added one post stripe so the next I guess the next step what we need to do is go ahead and get our config file so that we can tell so now we need to connect our react up to our firebase database so let's go over to that little cog icon on the left yeah so let's go ahead and click that side menu yeah project settings scroll the way to the bottom and if you click on config this is the magic sort of piece that we need so what we're gonna do in in our code is we're gonna create a file called firebase j/s so inside of a little bit of a config file and this is basically gonna be responsible now for all of our config settings right so if we go here and I'm just gonna do let me open up five ways to js5 yes there we go and you've copied in there right oh you've done it really nice okay so is this the this is the API key that you just got before right I just poked yeah I just I think just got it right now yep so now what we're gonna do is this is the snippet of code that I always referred to so you guys can just copy this and what we're gonna do is we're just gonna grab the contents of the config just cut out and all we're gonna do guys is just pop it inside of here so what this is doing here is basically it's initializing the app so we've installed firebase I don't know if we've actually done that yeah we need to inside the terminal we need to do an NPM I firebase so that's actually gonna install firebase into our into our project community the modules and just a little note cat is something I learned recently is you don't need to do this save anymore with NPM so you can actually just do NPM my firebase just a side note that's actually really I didn't know that you can tell me that yeah I stack overflowed and I was like it's saving that module even yeah I just kind of assumed I was like no we can't do that it's gonna break yeah awesome so then we have Solanas installed now we just employed the firebase module to talk do you not answer to this question by the way sunny Ross the boss asked so I'm in the works a web developer and I use angular with this process be similar in angular so it's a good question to some degree you have some similarities because they're both JavaScript so you'd be using the same sort of like SDK but with that said there are a lot of differences guys because the way we're gonna pull it in and the way we're gonna render connect to the database is a massive massive sort of differentiation between how use react and then Howie's angular so I would recommend if you're doing this I would say with react if you do want to sort of learn more about angular stuff then I'd recommend following a different tutorial and just doing it from scratch and yeah so implementing it this video yeah because angular is like a framework and react is just a library to react is much more lightweight so with angular even Sonny and I were talking about this yesterday you're gonna have a full like you have to follow their structure for how you store your files and your directories and literally you have to work within that framework would react you're not really you don't have to worry about any of that so it's gonna be completely different exactly it's so much like away guys especially if you're new to this I'll definitely recommend react yeah yeah and it's also much more popular guys it's much more popular at the moment I mean it's just crazy to me that we're building a full database connecting and having that twoway sync and like we're not setting up routes we're not setting up like endpoints we're not setting up like uhoh RM we don't have a models database like I mean it's it's weird to me because any time you're doing model viewcontroller like you have to do those things yeah you would have to do everything by the book whereas we've react it's very much a case of like you just find what you need and the rest is done and firebase is such a good complementary feat that sort of suite of tools to use with it because they're the same thing they just get rid of all the complexity so combining the two is a nobrainer mmhmm but there's just not that many tutorials on it which is why this will actually be really useful to a lot of people yeah I know we keep getting lots of questions and we want to go through it fast but these are all really good questions so I want to just address them is it Mohammed asks is it safe to use all DB credentials in front and side so it's a very good question there are many things that you can do to protect it so a lot of this stuff guys even if you protect it and you use all this complicated stuff when you actually release your app if you inspect the code even on production websites if you were go to live if you went to Instagram that their API keys are actually gonna be inside of the inside of their front and so a lot of this stuff in this case the config stuff yes it's okay to have it on the front end but with that said I would make sure that you set up the rules the security rules correctly in firebase so what that what that would usually mean is any requests which would come outside of the say for example if you deploy this website if somebody was to use your config outside of your website domain it should block it all right so you can set those things up but you I would recommend setting those up and even firebased database yeah a bunch of rules because yeah you can set it up in a way where it's like Mohamed calm if they use it on there and then it works otherwise it doesn't work yeah exactly so that's something which I'd recommend and that's probably the better way to do it what I would say is don't maybe don't push this into you as you know with that said I honestly it's completely fine these are public these are quite public in terms of what you can do with them I've seen actual production massive web sites with their firebase keys on there so it's actually completely fine provided you set your rules up correctly awesome let's keep it going coding says it's so amazing I can't wait to try this new coder I'm signed up for your monthly subs awesome love to hear that nice let's keep going and yeah and if you guys ever want to join the Prophet with JavaScript course guys where we go deep into all of this I know some of you guys we have three of you guys just joined so Derek joined and price and Richard in the last 30 40 minutes if you guys ever want to join the link is in the description click that link and I mean again if you want to learn all of this stuff and then learn how to go to up work go to freelancer comm all these online platforms and land clients we show you that as well so click that link and join the course and then you can come back to watching this tutorial yeah and if you're enjoying this kind of sessions guys we actually have like up to four of these in the course every single week which is really really amazing and we actually those are much more personal so yeah we actually jump on a zoom coup and we chat back and forth which is really nice yeah right big iron things and some really nice stuff that you guys are teaching me so much more than my uni is thank you that's awesome yeah awesome that's what we're here for that's what gets us hyped up you know and again guys just remember you want to take Instagram story while this is happening record the video flip the camera to yourself also show your face so like record which are building and show your face and we will repost you you know on aren't thing just it's I think mine I think I've shared this with you guys but I'll do it again but mine is at clever cause II and then sunny yours is SSSs Stanga yeah so SSS saying right there there we go so yeah guys definitely share this with us that's what keeps us going I love to see that because they literally motivates us every time for these sessions yeah yeah nice okay so now what we need to do is we need to call this initialize app function which is provided to us from firebase we pass it the config and then all we need to do here is this is some simple self and this is grabbing three services from firebase and it's storing him into three variables so one is taxes to DB we do this the other one is to access the authentication so we'll explain more about this afterwards but this is so that we can actually log in log out create users etc and the final one is storage that's gonna be how we can actually upload a bunch of em from like a bunch of pictures and stuff like that to firebase and instance store in our DB oh wow so I don't even have to worry about s3 Amazon Web Services and any of that no this is amazing this is literally you literally have a very clean piece of code and it just works what we want to do this so now what we're gonna do is we're gonna go over to apt ojs and basically we have a little mission right now so I think you need to follow me again cause I will follow you don't worry all right here we go boom boom let's go it's rock and roll now what we want to do is we want to instead of having this hardcoded we want that to pull into our database and react gives us something really powerful it's called a use effect and use effect is again so just like we have the used state hook there's another one called use effect and what use effect does is basically I'm just going to write a quick comment here is it runs a piece of code based on a specific condition that's literally what a user fact does so if you just break it down and think of it like that it becomes very very simple so it's just a use of effect you know use effect it's very confusing if you did I use effect there we go so if you do that so it's pretty much just gonna run a piece of code based on a specific condition so what we can we can have several of these guys so in this case we're gonna we're gonna type one out here and the syntax for this is we do use effect and then it has an an arrow function to begin with and this is where the code runs so this is where the code runs alright yeah and what we're gonna do is the conditions actually go into here and the conditions are simply variables so if we leave it blank this is gonna mean it's gonna run once when the page loads so once when the app component loads so right now we're inside of the app component it's gonna basically run when the app component loads but then it's not gonna run again so it's actually really really good for what we need to do right now yeah but hey for example if I was to but inside of here posts this would mean it would run once when the app component loads but also every single time posts change so every single time posts change it will run this code again so you've got some really good functionality here you can be flexible with and you can have several of these to do as much money look at this this is so cool okay so let me just I'm just writing some dummy text so you see the text on the screen right yeah you see how it says dummy it's like a little harder to read than like where it's you know the variable and everything yeah it automatically knows where it's harder to read and it can darken it oh nice hold control I just hold control and it does that that's mind blowing that's awesome Wow yeah that's nice and you have to get rid of it or does it go after a certain amount of time if I just hit enter it goes away but if I don't hit enter it'll stay there that's awesome I think I might grab that soon yeah so here what we need to do is we need to implement this this one over here just to clarify for everybody this little like bracket that looks like this this just means whatever the code is here run it once when the page refreshes that's it never run again that's all that means exactly so what we're gonna do here is we need to pull the information from the database and then basically capture it here right yeah but firebase gives us some really really powerful stuff here so first what we need to do is we need to import that database variable that we set up earlier so we go ahead into our firebase file and we import that and then here what we can do is we can say DB yeah doc collection and what did you name the collection I think it was posts right yeah it's called post but with the quotes holy crap sunny five times in a row semicolons you put semicolons five times in a row yeah I know we got the collection so this is the posts inside of firebase guys so it's food posts and then what we're gonna do now is we're gonna say we basically need to say on snapshot so on snapshot basically this really really powerful listener that's how we need to think of it it's a very very powerful listener and what its gonna do it's basically every single time the database changes in that collection so every single time a document gets added changed modified inside the posts imagine a camera right it's just gonna take a snapshot of exactly what that collection looks like so you're gonna get an update of all the documents if somebody adds a document or adds a post it's gonna update it it's gonna refire this bit of code yep every single time any new document if I add a new document here like a new post information boom this thing fires right there so that's what on snapshot does it just says hey every single time a change happens fire this code exactly then that then this bit of code will fire off yeah by the way Labs asks do you guys have a discord so we have what's called slack and we can actually show you guys our slack community so this is where's profit JavaScript so this is our profit with JavaScript slack community and so it's kind of like discord but we've set it up in a pretty awesome way so this is where we're like a sign you homeworks feedback review and you can see all a lot all the students are extremely active we have over you know 1200 students in here everybody is super freaking awesome and just cool so you know if you want to but be a part of this then definitely join profit with JavaScript and then we have a very curated set of community of just people who are amazing and are willing to learn just like you exactly we have weekly homework we have coaching calls the community so supportive guys it literally becomes a case so if you ask a question you can be guaranteed that within about 10 minutes somebody would have answered your question yeah so it's much more responsive than you pretty much get with like Stack Overflow or those or communities yeah yeah oh my gosh that core flow just makes you want to just always be thinking about killing yourself ugh it's so condescending and patronizing everybody on there it really is access to it so I think if you guys want to join the course the link for the course is actually in the description of the video yes you just want to go check that out now and you can click that link and jump in the course okay let's keep going so as we mentioned whenever something gets pushed into this post it's gonna fire off this bit of code and when it fires it off we basically just want to do this we want to say set our posts to something inside of here and what we're gonna put inside of it is we're gonna say from that snapshot from that snapshot go get the docs so the docs are the list of things that we saw or completes doing this annoying things here Docs and then we're gonna say map through every single one and this piece of code is always the one that's all gets a bit tricky firmament understands a map through every single one get each dot it's it's kind of just like a fancy way of writing a loop but I mean I know it's more that map is more than that but I just think of it like for loop yeah yeah and if I had multiple docs here map is allowing me to just loop through it and then whatever that one doc is you get access to it right here so if we had the second doc you then it would loop through and you would get access to it exactly exactly and then what we do here is we just want to map doc data so data is basically gonna give you all of the properties that cause he's got in that document on the right so you can see caption image URL and the final one which was username yeah yeah it's gonna have all of those things right so that pretty much is going to update the posts as soon as the component loads so if we've done everything worried I can actually get rid of this right now so there's this hard code it's no nice okay and I can get rid of this and if I save it now so you should see it yeah what we did is we were just deleted these two posts that we had hardcoded now what we're gonna be trying to do is pull the stuff that we have in the database okay exactly so if we were fresh now we should if everything's gone well we can see oh we need to MPN start yeah nice what we should see now is that everything pops up accordingly over where we expect it so we should have one post and that post the contents of that should be what cause he put in the database earlier there we go nice oh wow so this is coming from hold on let's actually put it side by side take a look at what's happening so this is what we had put in our database earlier if you guys remember and so here you know the caption is this the image is coming from free code camp and then user name is actually right there and this is this one document now what happens if I add another document will it show up yes this is a really beautiful part so as you start writing that I'll explain what happens so okay we just stopped a real time listener guys right so what that means is that every single time remember I said every single time something gets pushed into that collection it's gonna refire that piece of code that we wrote which is gonna update the posts and then it rearended everything on the page so that means that once cause the adds all of this stuff what's gonna happen is actually it's gonna refire that code and then in real time re render it on the screen so it's actually gonna be a really really quick implementation so as soon as cause I hit save watch what happens no that was clean look at that boom right here everything that I just wrote is right there yeah which is amazing like and guys somebody asks a really good question here how do we pull individual post IDs so I will actually show you right now because we are gonna need to do that at some point so we can actually do that right now so where we have the user fact so we head over back to the code yes what he's talking here is the unique IDs are for every single document they each have a unique ID yeah so the idea is right here guys every single document has its own unique ID he wants to pull that out and get access to these yeah exactly so now the way we do that is previously we were just mapping the the three things so that the CAPTCHA and the image URL and that stuff so all I'm gonna do here is rather than just returning that stuff I'm gonna actually create an object here that we're returning and that stuff I'm just gonna basically call that post so it's gonna have a post and then that's gonna have all the day air inside of that post we're gonna have his we're also gonna have an ID so right now I'm actually creating an object so I'll make it bit clearer us there you go I have an object we have an ID and we have a post and the ID the way we get the ID guys say doc don't ID right so each doc is gonna be this so doctor ID will get you literally that ID right there and then when you do doc dot data you're actually digging into this specific doc and you're getting this data over here and so that's this guy right there by the way so it's like literally going to be a squiggly like object yeah and what we need to do to fix this now is because previously we were mapping through our posts thinking that everything was just an object but now it's an object with keys so what we can do here is we can actually just destructor at this point and we can say post and we can also add an ID and that will fix it for us so now we have the ID and we have the post and what we can do with that ID guys is react is really clever right previously we weren't passing something called a key and what if we don't pass a key every single time that Kazi was adding a new element to that a new post to the page it was rerender in the entire list because it wasn't sure which one was changed which one was edited or updated if we add a unique key now so in this case we're gonna add the key which is the ID of the post now it's really genius so it's basically if he pushes a new post in it will know that the two posts that were previously there while owed post so don't bother rerender in them just rerender the new one and push the list on okay so what are you saying add a new post yep so if you add a new post now it's not gonna be that apparent when they when you see it now but it will be more efficient when we render this okay so basically what you're saying is like if I add a new post everyone actually do it won't refresh these it will just add a new post and that's it right yeah it was right now without a key actually refresh is all three so refresh all three of those elements in the page okay so instead of refreshing all three of those it this time it will only refresh one the one that I'm adding okay this is very important like with doesn't show but like what if I had 20,000 images on here or 20,000 echoes you don't want to refresh 20,000 posts so yeah caption here is okay and then we will have an image URL and maybe do I have another PNG let's try this one thanks Alfred by the way guys if you guys wanna yeah cause he introduced me to that and pretty much everything you copy is available for three months afterwards we have a database so crazily powerful guys like you can copy ho snippets of code it's crazy there we go nice awesome yeah that was an image I had copied like some time long ago and I had it here then boom right there we got it my username is right there and then my caption is right here perfect awesome yeah so now what we want to do guys is I want to just highlight this this is pretty actually awesome Ranbir says hi buddy thank you very much for your tutorials I followed your tutorial Django and was able to build some web applications by myself and finally I was able to crack an interview in a big MNC nice that's awesome that is awesome congratulations honestly guys that's actually really common with our students we actually hear this more than we thought we would like we constantly hear of success stories it's really really nice to see every time we saw here from that yeah awesome I think what we should naturally do now is make some kind of way so that we can actually upload right yeah like so we can have setup so we can upload ourselves right yeah we need ourselves at this point I guess well the way to do that is firstly actually what might be better as if we do the logging in because we're gonna need to have some kind of user name when we do that okay so right now over trying to add is Oh actually you know what I should do I should actually add a screen overlay on ECAM and actually because that actually could be really cool give me one second I hope I don't mess it up so I'll say what are we doing so right now we're gonna work on user authentication right yep so we're gonna do some user authentication so firebase authentication okay I'll say firebase user authentication like that yeah so what what I'm saying you know what I mean so like anybody anybody joins at any time they know what we're currently working on yeah that's cool let's make it look maybe make it a little bit smaller oh that's nice that's really nice yeah that's cool okay hold on so otech smaller yeah so just make it taste a little bit smaller and that's it awesome okay I think that I don't know maybe is that hopefully that's helpful for you guys let us know we're just trying it out and seeing how this works on maybe background give it a different type of color yeah in which IDE are you coding we're coding in V s code right now we're using a feature called vs live share which is how me and Kazi are coding at the same time and I can see his localhost so we'd really recommend you guys download and check that out because it allows you to actually code on the same project at the same time in a really nice way oh that's cool that's clean that's awesome right so then now anytime anybody joins at any time oh okay so with that said let's go ahead and go over to firebase now okay so if we click on the little bugger menu on the left here yep and we click on authentication so guys this is by far I have coded with authentications before this is by far the easiest way to or any so I am excited I want to learn how to do this authentication because like authentication is always a nightmare yeah and you're gonna be amazed at how clean and easy I know we're gonna do email and password 1 are we gonna do Google or anything like that or not right now so not right now but we can definitely do I think that'll be an amazing video to show really teens yeah we could definitely do that I think I'll be a good idea okay today we're gonna do email and password so if we click on enable uhhuh go ahead and click on save yep perfect and now what we want to do is it's that simple and also guys you know what cause that's a really good video for the next time because we can show how you can use the fuga on password features of firebase as well well they send you an email they do all of that for you yeah yeah of exactly what was that thing that's stored all copied it's called Alfred Alfred yeah also you can see here the authorized domains so even if you can see all our frontend code and API is everything it doesn't matter because if you're not on this list it won't work for you look at me let you this is my first time in here and not like I'm talking like I know what I'm talking about you in security man you guys are not friends ok awesome cool ok so the next step is what we can do is let's go ahead and go to so we already have the authentication config self that we saw earlier what we're gonna do now is also have some kind of input field so like a email password and a user name and what we're gonna do is we're actually going to make a modal for that right so it'll be a very clean interface that we can use so we're gonna use something called material UI guys material UI is really slick so let's go ahead and go over to material UI okay so material you I am right there yeah in the search bar at the top just type in modal mmhm search oh and here we get a bunch of right so what I'm gonna do now is if you go down you can actually click on the you see the crocodile brackets to the left and right if you go down to the simple modal so just a little bit down yeah there we go there right where your mouse is so just over those crocodile brackets huh so the left yeah that one yeah and what we're gonna do now is I'm just gonna copy a bunch of code so I'm gonna copy the modal element of the code so at the bomb okay I'm gonna complete the import so so this one right over here yeah so I'm not gonna copy the entire thing well I'm actually gonna copy just what we need because most of the time guys you're actually gonna see these and you don't need every bit of code from it you only need like small snippets okay so I'm follow we're following you on this other side so we'll see what you're gonna copy yeah so I'm gonna copy this modal and this modal needs some kind of state for opening it fires off the handle close and we don't actually need these two things so we can get rid of that and then it renders some kind of body here and in this case the body is pretty much a variable inside of the examples you can see it says Const body at the bomb so I'm just gonna copy the actual contents of that so we don't actually have a separate variable but it's just gonna be dumped here so if you see why I did that instead of all of this stuff I'm just gonna say I am a modal like that right mmhmm then what we're gonna do is I need a few functions so I need a piece of state to keep track of if it's open I need a unclosed method so a handle close function so I'm gonna create the handle close function actually we can do that or I'll show you a very nice little trick so before we do that we're gonna create a piece of state to keep track of if the modal is open so we say open set open and then we're gonna use state and then I'm basically gonna do you stay folks so what we're working on right now guys is a modal so I mean I don't know if Instagram has a run there's actually a good demo on material UI that you can check okay I material.you I yeah so let's go to here yeah and just go up so that you see with open modal yep so we're trying to build a modal like this something that actually when I when we click it it pops up and the reason is that that's what we want and then people should be able to type in their username and password in a modal like this so that's what we're building exactly and then it says it gives a really nice UI guys it's not quite a nice interface it doesn't clog up the screen it just sort of gives you this nice click out you can click out of it if you need to yeah so what we're gonna do now is we've created a piece of state and that then allows us to use it here but then what we can do is on close in the in the example that they gave us on clothes all there is is a function that does this so it pretty much just does that it just says set open to false we don't need all of this extra code so we can get rid of that we can go here and we can do something called an inline function so we could just say this set closed set open sorry set open to folks so that will literally just cause every single time that you click outside of the modal it's just gonna set the the state of the model to be false and is it closes and on close is listening for any clicks outside of the modal yeah so they've got it out for us so they hand all that sort of extra headache we're traditionally you would have had to account for all of that yeah my material UI takes care of it I see yeah so there's a bunch of styling I'm just gonna copy right now so there's a few things and styling so I'm gonna go ahead at the top of our file and copy that and this is all just sort of material UI styling if anyone's interested in looking at that more I'd recommend just checking out the the dummy code that they give you and you can pretty much see how that works but what we do here is we actually need the classes so what they do is they use this use styles hook make stars hook sorry it gives us this new styles parameter we just call it and it gives us access to classes and then we end up using that over here so it says class to start paper and you can see like there's a bunch of styling rules here so that's all that's doing and then what we want to do is we want to get rid of this because we just went to be in the middle of the page so we don't want to be randomly a little bit to the left or to the top so with that said I think that's everything we needed we need to import material so there's a bunch of imports we need so there's two that I'm gonna just pull in right now so it's these two that we are missing there we go yep and there's one more modal style so get modal style is where is that one it's here so let's go ahead and add that so it's constable style and guys I'm just getting this from the example code that we saw on the website so there we go now all we need is a button to actually open our modal so naturally that button is gonna be something like login or register right so let's go ahead and add a button here so it's just add it over here for now let's actually use a material UI button so it's just a capital B and we need to import that so maybe you can show that little trick Kazi and just see if that works so you just go to the end edge of that and then you press on control spacebar and then you got it auto import there you go I think your Mike's gone off cozy all time so yeah all I did is I just went control space at the end of the button and then hit enter and it auto importantly at the top yeah that's it nice and then all we do here is we just say this add this one so it's just say it's called login or yeah login let's just call it login well let's call this one sign up because we want to sign up first before we can actually log in and here we just say on click and this is gonna fire off a sign in/sign up function so I'm gonna write a little function up here which is Const sign up and this one is just gonna basically be a simple function it has an event every time you sort of have these sort of things you have an event and I'd highly recommend you do event don't prevent default but it's because it's not a form we don't have to do that so now we connect it we say sign up mmhmm oh no sorry here we're not even going to do that we're just gonna open the modal and we're gonna have every although that logic inside the motor so here we just say set open to true so now we should have a button on our page so if we go ahead and I've got a little error there we go go rid of it so now we have a should have a button on the page once it loads hmm right there so sign up yeah I can hover oh nice so we get a nice little modal there guys and that's actually gonna it's responsive and I can rule if I click inside of it it stays there but if I click anywhere outside of it it detects it exactly so that's a really nice way of getting a responsive modal very quick and what we need to do now is basically have a bunch of elements inside of it so what we are gonna do is I'm just double checking something right now so we're gonna do now is we're gonna have a bunch of code inside here so rather than hi I am a modal I'm gonna have firstly I want to have the Instagram logo at the top so I'm just going to snip it here so this is just saying it's gonna be centered so we're using some default HTML attributes enter it that's how I send out my stuff yeah and then we're gonna say I've got a class I don't know if I actually gonna so I'm gonna leave the class name here for now and then basically this is just gonna pop out little Instagram icon there and then I'm gonna have two input fields and a button so I'm just gonna copy some code here so we've got two input fields and a bun so if I go ahead and pop this in so I've just added two input fields so we've got email and password and this is signup so we actually need one more input field which is also for the username of the user mmhmm paste that so we've got three input fields here so we've got user name email and password and now we're gonna get a bunch of errors because we haven't actually set these pieces of stay up so let's go ahead and do that so we need a username and email and a password so here I'm going to basically just copy these lines of code three times I'm just going to change them as we need it so I'm gonna say this one is gonna be username and then look at that that's really nice because Kazi can cut at the same time guys and then we can just get this done really nicely and quick so you see password set password and then username will come okay set to be using name last team what nice that's it you know and so now we have all of our states up and handle login it's asking it's not defined so here by the way just one question I want to take this by Logan he says guys I'm new to the idea of writing JSX what's actually hand what's actually handling the JSX syntax is it the react scripts naturally or do I have to install JSX asides dependency first right that's a really good question so yes so guys something need to remember is that when you do NPM star it actually does a bunch of stuff so when you save a bow it actually sort of like bundles your app together and it does a bunch of like it's good translation so what that basically means is if you've got JSX it will translate that into you'll get your JavaScript and you'll basically pop that in and render it as normal HTML but that is set up with create reactor now if you want to do it manually I would recommend you have to look at things like web pack and do those things manually but I would honestly recommend that you do use create reactor because it's the tradeoff really isn't worth it and if you do want to go to manual I'll just create react up and then look into something called ejecting your app from react and that's how you can start to manually then tinker with those things but I would never really start a project honestly there's been professional jobs that I've done where I use create react app so it's a very professional thing that you could do and this there's nothing wrong we're setting up an app like that got it awesome right that's a really good question so next what we need to do is in import the input module so I'm gonna go up to the top import that and then handle login so right now where we do this the button click inside of that modal we want it to call the signup function and here we're just gonna say signup mmhmm so nice so if we save that and we have a look now so right now it's not a nice thing but I mean it looks a bit janky but we can fix up so what we're gonna do now is we have classes dot paper what we wanted to do is actually have it so the first step in fixing this issue is we want to have everything inside of a form because a forum will mean that you would naturally type out and as soon as you hit enter it's gonna submit that form right mmhmm so we want to do his oh and also a reason why that might be happening is because I actually have these in the wrong brackets so if you go ahead and try it now so save and let's have a look at that so you save so I think it's come on okay so we still need to start it okay fair enough so now what we want to do is outside of this div we're gonna surround everything inside of our forms when it's around inside of it I'm gonna create a form and just surround all of our contents inside of that so when I grab all this stuff check it inside the form and just push it a little bit in so we have the incorrect another good question is how do we pass data beyond email and password like a person's name or phone number when creating a new user because that's that's pretty good cuz I want to know that too if I was creating a new user India firebase you know I'm gonna store different types of information yep so that's a really good question in firebase there we actually are gonna do that for the username so I'm actually gonna collect the username from the input form and then update the users profile information so that that's their display name which is attached to them now for the phone number they also have a function that you can use I think it's update phone number but you'll see when we do this we're gonna call something called update I'm just trying to find a code that we're gonna use I think it's something like yeah update profile is what we're gonna use and that's how we're gonna update display name of the user but you can also do I think it's update phone number update email etc so you can actually do those things yeah you can but when we get tired it will make a lot fence because we need to still write a use effect for that yeah so now what we're gonna do is we're gonna write a we're gonna star this class so it just looks a bit nicer so right now it looks a bit weird so we're gonna do class name and we're gonna say app signup and inside of app dot CSS I'm gonna have app signup and basically here this is all going to be this is basically going to be how we style that for you see on the right so if you want to just open up that form at the moment the model sorry copy on your screen if you click sign up uhhuh and then every time I make a change you'll see it in real time now so if we do display flags so look what happens guys it's gonna get all scrambled up now if I do that you see that yeah because it goes into our row so now what I need to do is flex Direction column column yeah and what happens we do this oh hey look at that like it just completely fixed everything it looks much cleaner I think I think maybe we can do textaligncenter here and we might be able to if you didn't have hot reload would it even be possible to see that change like that because if I hit you know I would have to hit refresh and then it would break out of that form exactly and that's a really good point because that's really one of the amazing benefits of using something like react without reloading because some apps imagine you have to sign in you have to do a bunch of steps just to get to a certain point and then you have to style it and then every time you sort of make a change it just got rid of it yeah yeah it makes development tremendously slower which is exactly I'm really glad you brought up because that's a really really good use case and that's most that's the main use case for hot reloading yeah damn okay awesome nice okay so next what we're gonna do is we need to basically power up this signup function so here what we do is we say to handle this now we just need to say so event dot event prevent default so we always have this otherwise it's gonna cause a refresh when we submit the form so we need to give the form type submit and that gives us that natural behavior what am i typing in and we hit enter on the keyboard and then sort of submits the form so we need to have this so that it doesn't refresh and then we want to have is auth so authors from that so we need to import it at the top so we import that from the config file that we had previously mmhmm and then over here now we have auth and what we're gonna do is say oh and this bits gonna blow your mind cardi when you see okay I'm ready a user with email and password and all I did right now it's pasta he mail and parcel right oh yeah one sign up that's it a niche I do that and then I say don't catch because if there's any error oh this is from the state this is being passed from the state variables exactly yeah holy crap and if there's any error in that process I'm gonna catch it and I'm gonna alert so I'm gonna make a little pop up on the screen yeah and I want to show that message so error don't message like it's that it's crazy right setting it up in any app that I'm creating it's like one of my worst experiences to just see it oh my god yeah it's insane and what we're gonna do at this point is we also when we create the user I want to then update the user name right so I want to then have their user name sort of be shown so what we're gonna do is oh we don't actually do it here there's two steps to this we'll get to that in a second so before we actually show you this what we're gonna do is this is the first part right this is essentially gonna create the user and then it's gonna catch it so we're gonna basically if I just do this so you can say it's saying oh stop create user with email imposter and if there's any error for any reason can we see can we see it in action like can I just have my firebase database on this side and like actually test it and see the user get created live I think so we can try it in a sec if you go to the react app now and you go to sign up I just want to show you go sign up and then you click sign up at the bomb look what happens it pops up saying the email address is badly formatted so they give you back invalidation guys they're a yeah a petition they're giving you back and validation and even you're getting these error messages that they have created and all learn yeah we don't have to do anything crazy right yeah all from that two lines of code right and that's gonna create the user and everything but before we do that there's a really really important part that we need to we need to do here and this is the bit which is a little bit of a something they need to get ahead around but once it makes sense it's actually the powerful part so we do use effect and then here to use the fact this is a syntax for years effect so this is gonna run once when we when we sort of run the app and now we need to do is there's a listener in use effect right and the way we do is we say auth dot on earth state changed so it's cool it's used like this it says on on also state change and basically this is going to listen and it gives us back something called a North's user this is gonna listen for any single time any authentication change happens so when I mean by that is if you log in when you log out you create a user yeah every single time any change happens it fires this off right so can you see how by using this pattern of listeners right we use them for the database but on snapshot and now we're using it again for this and now we're gonna say if there was a user so for example if you had logged in yeah so at this point user has logged in right yeah this code is they get fired else the user has logged out yeah all right so that's when these two bits bits of code get fired off so with that said we can actually do some really cool stuff now so I'm gonna create a piece of state to keep track of the user so I'm gonna say set user and user and this is gonna start off with a default value of null uhhuh alright and here I'm gonna say set the set the user to be no loops if they're logged out if they love that I just want to set the user to be no so I always want to make sure that if they logged out that the user is gonna be no right or if they do logout we reset the user to no and then here once the user logs in yeah here what I want to do is I want a console log it first so that way it's always nice to see inside of the console to see if somebody's actually there or not yeah I'm I'm going to set the user to the auth user so I'm gonna actually capture that user inside of our state uhhuh and guys this actually is amazing because it survives a refresh so let's say cause he logged in and then he refreshed it would go and check and it would see that he's still them because it uses cookie tracking oh then it would send the piece of state so that way is persistent service state nice if all is not consistent but this actually keeps you logged in which is very nice so state is not persistent but is this thing over here that keeps you logged in yes okay okay so and now it's next snippet of code can we can I can I log in right now no yeah we've got one little step one little step and then the whole thing comes together so this is the final piece yeah we're saying if the or if the user has a display name then don't update them right because by default they shouldn't have this they shouldn't have any display name when we created them yeah all right but if they were a new user so this is most likely the case of if we just created someone mmhmm all right and in our state we have the user name that we just typed in yeah and we're saying go to the user that you just logged in with update their profile ooh and this adds it to their into their firebase as an attribute right yes exactly so nice yeah we're actually gonna see the user being updated in that time so now we've got two things we have a listener and there's one tiny step we need to do now so remember guys we're using user name here and we're also using the user so remember we're updating the user and we're using user name so that means we have to include them dependencies here so because we're saying anytime they change they have to be fired off so that whenever you use a variable so for example we're using a variable here and we're also use any quick question if this is already a listener yep why isn't why is it inside of this listener use effect so youth effect isn't a listener as such it is it mean it listens for changes for this I guess yeah this is a sort of think of this as like a back end listener right yeah this is a front it's not because it's listening to changes on the front end yep this one's changing to back end responses like if we log in if we don't login right cool stuff so the two work together but one thing we need to remember is this is a listener you're correct so every single time it changes it refires this code so the problem that we run into now is what happens if this code that the front end listener gets fired off ten times because the username changed ten times right then we're gonna have ten listeners and it's gonna get really heavy right yeah so what we do is in a use affect and this is something new to you I think as well like in a news event what we can say is this on also state change returns something called an unsubscribe so you could say const unsubscribe oops const on sub scribe equals this right mmhmm and then this basically sets a listener but then you get this function at the end right and then what we want to do here is is basically inside of a use effect right inside of any use effect you have ability to basically say return so you can return a function right and this basically says once if the user fact fires again perform some cleanup actions before so this times they perform some cleanup actions before you refire these effect right and in our case what we're doing is we're unsubscribing the listener so that way it doesn't spam and it doesn't start and then this way it would so imagine what happens here so say we login yeah and we update the username right yep it's gonna refire this front end code mmhmm but before it does that we were saying detach the listener that you just set up so that we don't have duplicates yep and then it will refire it got it yeah so it's all about efficient programming so that's a very sort of efficient use case of how we use this yeah and once it's all yeah it sounds quite sort of complicated but remember we said use effect if you understand what that does everything starts to make a little bit more sense yep all right so now we can sign up okay so let's have the terminal open so let's make this full screen the code not no sorry in the in the inspector okay yeah so let's make this full screen and let's have the terminal open and let's go to cons oh yeah nice and if we refresh so let's refresh I just want to show one thing yep so now you should be able to see inside of that I mean it should come up okay no that's fine yeah we're good yeah so now yeah so you can say clever programmer and enter an email so Yuki doesn't have to be a it just has to be a correct just want to know I just highlight this I think that's pretty good Logan says they're going to be a repo of this project available and slack after the call I'd like to recreate it from scratch for my learning and then add it to my portfolio this weekend that's a really good question we can definitely do that we can definitely solve host this code on on sort of the community or we can push it into a private github or public github and give you access to that yeah we can do that okay and that's really good by the way he's talking about adding it to a portfolio which we always recommend inside the course yeah so look there you go did you see that so you see that that exact thing is a user so I know it looks like a lot of gibberish right yeah but but I can see this turtle a name I can see email email verified as false ooh nice yeah so now if you refresh the page I just want to show you something else if you're a fresh set page look what happens now which is really nice so if you click on CC it popped up again the console.log yeah it says if i refresh yet says there yeah not you like that yeah it still knows that I am in email yeah so we had one little problem that the actual username didn't get updated I think that is because we maybe need to do it at the point of creation so maybe we have to do where we create the email create use of an email and password I think we do at that point so if we go back to the code uhhuh you know it's how it hasn't got a display name which we need to fix that so what we can do now is we can say here we can say dot then then so yeah so dot then and I think this gives us back a North to user so I think this gives us back the users credentials so we can say user yeah and then we can fire off some code and then here we can say or user and if I look at what we get so if we do dot I should be able to see a bunch of this so we've got additional user info credential operation type of user so I think if we do user Don update and by the way guys in order to see what is going on here I'm just literally doing command control space so you can try that cause if you go on if you go press dot uhhuh yep dot and then if you scroll all the way down so press oh no not there so down here what line I'm on 88 uhhuh so if you just do dot and then you see you get a bunch of the autocompletes right yeah so the one we're interested in here is rather than doing it where we did it before so update profile right so we're gonna keep it there but we're also gonna do it down here so we're gonna say update the profile when you create them so that the display name display name is equal to the user name and we are gonna get rid of it where we had it previously before you can actually get it look good so now it's actually simplified our code quite a lot yeah so yep so now when we create them we're gonna update the proper and what we need to do is we also need to return that so cuz it's from a promise so if we return it it ends that and it does it correctly so with that said username oops we'll be careful ah and we say that so now let's run another test so we need to actually create a sign out button because you're currently signed in uhhuh so I don't know if it will sign you in again we can try it we can give it try yeah so this gives you test 23 and then let's do sign up so this should have signed you up into a new way of I think I'm signed up so let me try refreshing and then let's see what it does yeah now it's a I'm two users right now so test one two three and then I'm also so this correct is it's just it loved you out the other one that was just a react and I'm curious actually is it putting me in cookies so let's take a look at cookies localhost and I have my session ID yeah so I think it's either the session ID that they used to track you or it's something like if you go down you see I saw CSRF token we being used yet so that one could be being used but it's one of the authentication ones that is being used to actually keep track of who you are got it yeah yeah somebody's asking take TK codes is asking when do we use how do you guys decide when to use functional component and react and before suddenly you jump on it what I would just wanted to say is like what I've picked up from it is even in Python programming I tried to stick as much to functional programming as I possibly can just because it keeps the complexity of everything extremely clean and even with react I think you should use functional components everywhere rather than classbased components but sunny go ahead that's a perfect answer so yeah just as cause he said like the sort of a lot of programmers are going towards a functional programming approach and the reason why is because it's literally a function when you code in this way like the component we just made it's a function which has some kind of input and it returns some stuff right and then boy it returns is the HTML now when you think of everything as a function it becomes very clear as to what's actually happening when you have classes it becomes very sort of extrapolate and you can't actually see what's going on like what is this class doing what is a constructor inside of a class where is it where is it inheriting from like it gets very weird it gets very tough like like where it gets very abstracted away from you it doesn't make sense as to what is actually happening yeah and also a big headache the iPhone I'm guaranteed is gonna be a hundred other developers who have had this is where the hell you put this that this keyword yeah right yeah yeah so honestly it becomes a headache and you just don't have to deal with that when you use functional programming right which is so yeah that's the main reason behind why you do need to know both unfortunately because a lot of jobs the code bases would be in class space components and then a lot of your job would actually be changing it to a functional component so you do need to know both and it's very valuable to know both yeah okay got it nice so now we have a working login login system so what we can do now is we can remember we stored that user inside of this state over here right so as soon as you refresh we actually have that user and what we can do now is we can change that button that you see so the signup button we can actually change that to instead of saying sign up we can say logout so if we go down here we can actually add a conditional which says if the user is present so if the user exists so if the users not know then I want to render this stuff so if the user exists I want to render a button which is not gonna say this but it's just gonna say sign out right so this one's gonna be responsible for saying so it's what its gonna be responsible for saying sign out so I'll log out let's just say log out yeah and here we're gonna have an or so this is how you do an or and then you say otherwise if they're not logged in then I sign up buttons gonna come up alright and we're also gonna have a login button as well guys we'll cut that in a sec but I just want to show something very quickly so you might have thought how do we log out it's gonna be quite complicated and etc honestly guys this is how simple it is to logger you say auth dot i think it's literally a case of long yep so essentially all thoughts of sign out yeah or thoughts sign out that's it that's literally it and you do every bit of authentication now notice how when cause he goes on he's logged in so a big click Sign Out logout boom he's locked out you no longer have that element inside of the inside of the console so you you won't see anymore which is insane right that's crazy yeah like just with that one line I sign out and it's so easy yeah honestly it's really that simple so what we're gonna do now is create the login or sign in right somebody said fill Fulani says note for back and react frontend but honestly you don't even need node you can just use firebase right for pretty much all the back and you're good yeah this is this is something which is really sort of a mindset shift there is I don't actually even need a backend here guys yeah we don't firebase is doing everything for us it's just a service that we use and we're using node modules to bring it in and actually like interact with it but there's no actually there's not a real backend that we're so a traditional backend that we're playing with there no yeah I mean this is actually live Harrison yeah so now we have the app this is so cool this one the login container so that's cool it's a login container and I'm going to put the buttons inside of it so all of this stuff shows when we aren't logged in so I'm gonna I've I have another button here which is gonna say sign in right and for this one I don't want to open the other model we have I'm gonna create a new sort of variable which and the new modal which is gonna be called let's just call it let's call it Const let's call it open signin and this is gonna be called set open signin oops it says mine is out of sync cause you would you're somebody wanna log back in yeah so I'm just reconnecting now give it one sec there we go I think I'm back so open yep nice so I can click that there we go we're back so open signin am i typing though go ahead give me one sec so don't save go to have but yes so you can see this funny somebody just said uh somebody said oh my god I was week one into node and planning to continue yeah you don't need to learn node you can just do this you know what I would recommend there's no harm in learning node because honestly everything you're gonna learn is transferable cuz it's JavaScript well I would recommend honestly like I said like I would recommend this jumping over to react and start coding with that because you're gonna get a result really quickly with react yeah as opposed yeah so we have this set open signin and this one we're gonna be initially false and what we're gonna do now is we're going to go down to the bottom oops nope up then go down to the bomb and we're I have that traditional button of signin hey we're gonna have set open signin so that was it says your name let me fix that it had two E's Oh oops there we go I think you need to follow now again because I'm gonna of sing yeah so now there we go nice so set open signin I just changed that here and this one we basically I don't want that to open the other modal we had right so you see this entire model so we can refactor this code but for the benefit of this tutorial I'm just gonna paste another modal here yeah and I'm just kind of change it up just for and make it just full of what we needed it here so I don't need to use the name because we only need an email and password when we log in right I'm gonna create a V says the way you guys are dealing with the question from the comments section is just insane it feels like we're getting a live classroom training session I love that I wanna see is like that's what we encourage questions if anything it just helps you guys get to know them more and it helps us direct the sort of session towards what everyone actually wants to learn as opposed to what we think yeah what's that nice so we have that and then we have signin so I need to do two things now I need to change the modal open to be determined by open signin and I need this so on close to say set open signin to be false so now we've just made a few changes all of the styling is the same guys and you can actually make this a component as well to prevent it having this big code twice but we're not going to do that now so I need to create the signin function so let's go over here and let's do const signin so if I'm signin equals take the van and it does this and then remember guys we need to do event.preventdefault so it doesn't do weird stuff and refresh right exactly Carlos says something important he says so in conclusion HTML CSS JavaScript react and firebase is everything we need right exactly that yeah so that's everything you need I would recommend you start with HTML CSS in JavaScript and then you proceed to learning react which kind of wraps those three fundamentals and then firebase is what's gonna power and give you a sort of a database allow you to host it online but that's a really good question so I think that clears up a lot of sort of doubt for a lot of people yes oh you need yeah yeah I mean even me just reading and I'm like oh yeah that's actually true that's it no no nothing it's very clear yeah pointing out that we do teach all of that inside the course pop in profit with JavaScript which is in the description yeah by the way I wanted to ask you Sonny what are we so we are done working with the firebase user authentication right yeah so what are we working what's what are we currently working on so right now we were done with the signup I'm just finishing off with the signin and we're one step away from being finished with the signin and then we'll be moving to actually posting on to did the timeline got it okay so I'll leave the title at the top user authentication for now yeah then once we're done with that we'll we'll move on yeah exactly yeah so now here instead we have auth but we say sign in with email and password so it's honestly it's ridiculously simple to use our authentication API you say you in the email you pass in a password which is in US state and I'm just gonna drop this to another line so it's quite easy to read so we're gonna do this and then we're gonna say sign in and remember it's always good practice to add a catch so that way if anything goes wrong so like if the username was wrong or something like that we're gonna have error and I'm we're just gonna alert it on the screen and say show me what the error message is right and what we should you guys is after we sign up after we sign in we obviously kind of don't want that modal to be open so we're gonna say set open to be foes and here we're gonna say set open sign in to be forced because we want the motor to close right you want it to close so the model that will pop up here you want it to close once you sign up yep exactly I got it okay alright so now if you do you remember the email address that you signed in with yes I do so if you click sign in hopefully okay that's good so now if we type in the email and password and then boom look at that nice Wow look at that and it just went away all by itself yep because we do conditional rendering which is awesome so now conditional user authentication guys we have full user authentication and we also capture the display name which we're gonna use to be we're gonna use it as a as a as a user name when we post things right so the next thing we're gonna be doing is we're gonna be working on firebase storage right so we completed firebase user authentication and the next thing we're gonna be doing is working on firebase storage and why that why why are we moving tonight is because now we actually want to have some kind of hey this is what happens when we finish something wait hold on I actually want to know if it uh if it played the sound for them I'm gonna take a look at it actually sound effect so let me actually I think I think it was on right yeah yeah yeah I think it went out awesome okay continue okay so now what we're gonna be doing is we're moving over to firebase storage right so there was a really handy react composed so we're gonna be just so just so what we write at the top we're gonna be now working on firebase like making storing posts in firebase yep so storing posts in firebase exactly throwing posts in five days yeah so this bit is a bit more intricate but it's oh really it really does pay off to know this right now so what we're gonna do now is we're gonna create a sort of it work it's called we're gonna call the component image upload right and what image upload is gonna be responsible for is it's basically gonna allow us so the end goal right now is to have at the bottom of our page well let's just do it at the top to make things simple right now yeah so it's very clear and visual so let's go to the top of the page and let's just do what we did before so we're gonna have some comment and we're gonna say I want to have so I want to have the following all right so I want to have a a caption input so I wanna have some kind of caption input I want to have a file picker so I can pick an image and then I want to have a post bun right okay so just yep got it so basically okay just so we can visualize it it's gonna be some kind of like input field and it's gonna have caption so okay I can write my caption here right it'll be something like right here okay cool I can visualize that then a file picker is just like how most file pickers are I just upload my file on it exactly okay and obviously is gonna have a post button like a button next to it to just you know click it and upload my file yep exactly that okay got it yeah so what we're gonna do now is rather than writing all of this code here it's always nice to sort of strip it outside of this right so we're gonna create if you can go ahead and create file and we're gonna call this one image upload right okay so if you go ahead and create a file so go into the yep just and we're gonna call it image upload yes and do you want it to be capitalized in the store yeah so I actually capitalize the start and then the the second one is also upload to be capitalized yep god yeah the reason why we capitalized is because all of the anything which you see capitalized in react in terms of files should be referring to a computer just so everybody knows visually what we're gonna be working on Sonny can you give us like just shoot over a screen shot maybe of like what it actually looks like just so it's easier because I know it's hard to imagine what we're gonna be building and I'll send you a thing so we could do it that way awesome that's that's perfect yeah just end rock and then just paste a link inside of Visual Studio code and I'll pick it up from here oh nice good good yeah let's do that so that's the Angra nice okay yeah so that should be running I think yeah so you should be able to see that and that should be my local why not mmhmm did you turn we see a low cost mm yeah dope stuff so I was looking at one we want it's gonna take a little bit time I think so to load okay yeah so it should be working so no damn let me let me double check mine as well if you can even send me like a drop luring shot of just a caption thing that would be yeah rate let's do that so do that I said my drop is not showing up one second okay yeah my drop of this okay my okay my anger crash now uh oh no it's all good it's it's here I can see it now as I said just joined that's awesome thank you for joining Joe I think they join a live stream probably right so let's go all the way to the bottom log into upload I see so I got a log in right now so let me go and hit this right over here there we go okay I'm logged in so that exact thing of the bomb is what we want yep this is what we're gonna be building by the way guys so yeah that's what we're trying to build right now so we can actually this thing right here so we can upload our files and images yeah exactly and that little thing at the top guys is a progress boss it'll show you the progress right here this guy over here so right now it's empty but then as soon as it starts like your file starts uploading it'll be like and it finishes that's it exactly awesome nice that's it I was a really good do that more yeah yeah yeah because we start what happens is like you start like we can visualize it cuz we've already created and we start explaining the code but I think everybody's following it's difficult for them because they don't like visual cue they don't have they don't know what we're gonna be building and so then they're less likely to follow yeah 100% I think we'll do that more if you guys found that useful just drop a comment and let us know yeah yeah all right so now an image upload so I don't know is it is it still following me I think maybe it's detached because we created a file right here yeah so now if I do our FCE with that snippet that we had earlier it's gonna create the image upload and what we want to do now is in here I'm just gonna draft out the rough things that we spoke about so inside of app remember we had this so I'm gonna basically just cut this and the aim is to basically just render out image upload here alright so we can render it out got it yes we say image upload from does does it also handle video upload or no so that's a very good question I think it's a really good question actually I think I want I want to say yes you can do that okay I haven't tried we could definitely we can maybe go through this another point also have a little Omega you will make a youtube clone one day you know yeah exactly obvious on coding fountain says yes very helpful nice I think this is happening because I've asked in an empty div so if I now do it yeah there we go so now what we can do is we can basically say so we render ABC at the top so I'm right now I'm just gonna show it at the top so it's gonna render up up everything right yeah and we will put it where it needs to be afterwards so the first thing we want to have is an input so we're gonna have an input there we go we have an input we have a file picker so the file picker what we want is something like this so we have an input type is file and that gives you all of the stuff you need your that when you see like select file and it comes up and you're natively in your browser yeah everything is inside of that alright so you have that and we need a function which handles when you actually saw when you click a file what happens when some kind of file and then we also need a bun so I'm gonna use material UI and I'm gonna say this is my button so I'm gonna say it's basically you mean when I click Choose file this thing happens yeah exactly yes when I click on when you click on open that will ping off the handle change right got it so we need a few things right now we need a piece of state to keep track of what we're typing inside of the caption so here I'm gonna say a placeholder is gonna just pretty much say placeholder enter a caption yep just enter a caption so like this one right there yep what we can do here is we can say Const we're just gonna stop some states videos a caption set caption that's just a standard we say use snaked right there and then the caption by default is gonna be empty so that way it will show the placeholder and then here we have to do you stay the most advanced coding tutorial on the planet yeah we're gonna hook it up to that and then what we need to do here is I'll check it over here see yep so we can say unchanged right so unchanged but as I type in now it's gonna fire off an event so every time and that's every single key press that you do on to the input code it's gonna fire from the event and then what we want to say is set the caption to e they're just gonna keep updating the caption right of caption variable on the fly I see exactly yep so that grabs the latest text and it just pops inside a caption so we always have the latest caption stored inside of row says this is my first time watching a coding live stream and this is an amazing idea I love it thanks and let us know what specifically let us know what specifically you like about it as well yeah definitely we'll just focus on them more next time nice yeah so we have the caption we also need a few other things we need so we're gonna have three more pieces of state we need the image so there's one for image it's gonna basically be no so that's gonna start with no we're gonna have one for the URL so actually we don't need this one right now and one for progress remember that progress bar that we showed that the progress bar is right here we have it right at the oh I'm actually realizing I'm blocking a lot of the view we are blocking a lot of the view for the people so I'll just do this so this I think is very visible for them so yeah progress bar is gonna be this one right there right and when you say image it will be this the choose file yeah exactly that and so is it's gonna be a path just a string right from your local computer it's not what it is yes exactly there's a weird sort of syntax but we just need to know how to write it initially and once we've done that it actually makes a lot more sense so I'm gonna copy that's over here and they can more we're gonna cool yeah so when we do input type is file that's when that little window pops up which says like select a file and when we click a file fires off handle change so we need to write a handle change and the way we do that is handle change fires of a book of what snippet here I shall explain it so handle changes the function it fires off an event yeah yeah now this is the sort of part that we need to focus on so what this is saying this little piece of code here is just saying get the file that you actually selected so get the first file that you suspected because sometimes you can click multiple files I see can get the first bar and then we're saying set your the image in state to that okay so like for example if I hit choose file and I hit but somehow I was able to hit both of them it should pick the first file yeah exactly so it just protects against that so that's why we do that okay all right and next do this just quickly fix these imports and hopefully we can show that in action so I'm just gonna import the material UI stuff so we've got this just go ahead and do that and then we've also got a handle upload so handle upload is a bit more of a complicated thing so we need to const handle upload i'm just gonna write the the very simple signature for it so handle upload and it's not gonna do anything anything for now but what we can see now is if we go over to our code we can see we've got enter a caption which works when we type in right you see at the top on the right yeah oh right there oh wow nice yeah see enter a caption as you choose file that's awesome and upload yeah and we go upload so right now upload doesn't actually do anything but if you click on choose file mmhmm notice what happens now so let's tick on that and then you click on a file notice how it should say where it said no file chosen before it will now say oh is it right here yeah nice oh that's in my sky window is [ __ ] it yeah there we go nice so now we know that it has a reference to the image that we want to upload right yep so what we want to do now is basically have all of the logic volved in actually this is the salt pot that takes a lot more of like I love this part Feroze is like I like how this doesn't feel like a lecture and more like a discussion bros chatting while doing something informative and something we can learn from honestly what we aim for we want it to be more of a casual sort of code along as it was like you know writing notes and stuff I mean I've been like yeah go ahead go ahead well record it so like yeah you could take your time off to it and go at your own pace yeah what are you gonna say cause it I'm just gonna say like weep code for fun and we'll like code for like 12 hours straight and while joking around having fun making fun of each other so it's cool that we're like it why don't we just do this live yeah I know other see the stuff we've come up with and Bill is insane like and I think now we're really realizing like we should just be doing this live all the time yes so we have the handle upload right yeah so the first line of code that I'm gonna explain is how we actually push that to firebase so this is we need to import our storage module so remember we sell firebase config uhhuh we sell things we serve the storage and we are gonna need the DB in a sec so we'll come back to that so right here I see we have storage firebase that storage and so you are exporting that right here and then I I have access to it yep exactly yeah so then we have it there so now what we're gonna do is on a handle upload the lines so what I'm gonna do now is actually sure your first piece of code so this line is the first bit right so this line is basically saying get a reference right so access the storage in firebase get a reference to this photo so we're creating a new folder here so called images and we're storing everything inside of it image name is basically the file name that we selected so ever that followups okay hold on hold on so just to be very clear what this image name is it's actually that right there exactly that all right and then we have dot put yeah so what we're doing is we're literally putting the image that you grabbed into that point right so it's literally that simple so but then the next part this is where the sort of more this is where the logic comes in so there's a big snippet of code here that I want to go through so what we need to do is we say upload tasks so upload tasks and then we need to basically listen to what's happening now so the way we do that as we say on alright and then we do open brackets and then the first part is we say so there's a very careful thing that we need to listen to which is called state changed right so we're saying one state changed give me a snapshot right so everything so as the uploads remember guys it's gonna take time to upload so it might take and even though if it's very quick that is a that's an asynchronous process so it doesn't happen immediately so what we want to do is we actually want to keep track of it so that we can tell the user how long is it gonna take how long have you got left should you go make a cup of tea or should you just carry on just wait for a little bit and sort of let it go right so this is where we write the progress function so this is where we have all the progress logic here so we're saying as it changes as it gets updated keep me like keep giving me snapshots of the progress right and what we want to do here this is just a piece of code I've written before which everyone can just pretty much copy line to line and what this does here is this like equation right here is gonna work out a number between 0 and 100 and it's gonna give you the exact sort of like a progress indicator rest from 0 to 100 it's all it's gonna do have yeah yeah based on how much information has been sent across and then how much is left right yeah and then what we do we set the progress so that so then we set a progress number here from 0 to 200 so that logic really that entire piece of like this piece of code is just for this visual and here yeah that's all just for the visual so so very cool so if we don't need ok but we still don't have the functionality of the upload in yeah right yeah we don't yeah but it's coming inside of this on so this this whole sort of block right here uhhuh it's quite it's quite a big block of code that we're gonna write now ok guys the first part was the first party basically gets you the visual the perfect yeah the visuals the second part so a comma so the second sort of argument next is gonna be the error so you here you have the error so if anything went wrong during your upload this is where you basically complain about it so this is going to be known as your error function yeah so this is just how the firebase SDK the uploading SDK works right so here all I like to do is I like to do a console log and I error out because when you do this sort of stuff is typically not a userfriendly message that you you show so we just want to show it in the console as opposed to saying Allah and sort of coming up on the screen right but in our case just for now what we will do is I guess we could just use our arrow down message because we're this is more of a demo so we can just show but typically I would just console.log it yeah nice and then the final one is the complete function so this is when the upload completes mmhmm what happened so this is the final part of the piece of the puzzle so we have the upload complete function so this is the final part which is complete right now here what we have is we basically need to do all of the logic and all of this sort of complicated stuff that we want to happen once we're done so here what we're gonna say is this is I'm gonna copy a snippet of code so here we have this block so we say storage doc go to the ref images so remember this one is a topical yeah yes you ref is and then we're gonna say go to the image name child and get me the download URL so that's really important right now because I think about what just happened right it just uploaded that image to firebase storage right then in order to sort of get that URL and do something with it we need to get the download you're that is been like so once it gets uploaded it gives us a download URL so we just need to go and grab it so that's how we grab so basically this alone is already doing the uploading this is just us over here getting it yeah this is then saying go and get a link that will allow us to so go and get a download link now so it's already uploaded but go and get me a downloading now so that way we can actually use that I'm sort of like in some kind of post something like that you see it so then we say dot then because everything went well we say get the URL and then what we want to say is do some stuff right so do some stuff with that URL and what we like to do here this is where all of the work comes together right we now want to basically post the image inside of the database so here is where we post the image inside of the database so here what I do is I say DB doc collection store ad so I say DB doc collections don't add and I basically so here I'm gonna add a post I am so remember when Kazi previously was inside the database and he was adding a bunch of things manually right and there each of those things were the posts that you see on the right yeah so now what we're gonna be doing is I'm gonna be basically there's a few things I need to pass in here so one thing I need to pass in is a quote a timestamp and what we want to use here guys is a timestamp that is based on the the server where our code is living because imagine the scenario right now so why is the timestamp useful it's gonna allow us to sort all the posts by the correct timings right now we have an implement in any sort of timestamp but we want to have all of the recent ones come to the top right yeah so what we want to do now is say firebase so firebase don't fire store so they saying basically what I'm writing right now is go and get the exact server timestamp so don't get the timestamp which is on the stuff in any any image we upload should basically the newest one should be like that at the top right and because we're using server time we're using the firebase is time so it regardless of where you are in the world this will get you one unified time exactly so regardless because cause he's in LA right now I'm in London right now yeah his time is gonna be different to my time so if we both use the server time Stan we're both gonna be consistent if I use my time and he use his time we're out of consistency easier yeah so that's the first part and the second part we want to do is the caption so remember we actually wrote the caption and we stored it inside of some state so we can do this caption the next part is the image URL right so remember the image URL is literally gonna be the download URL that we just got hold of right so we uploaded it then we got hold of it here and then we're just saying use that as your image URL so it's uploaded to firebase storage and then we're literally gonna put this inside of the database now so that think about what just happened it uploaded it to firebase storage yeah give us a download link and then we pushing that download link as part of a post nice so oh I see okay okay that makes sense yeah now there's one more part here right we need the user name the user name however we don't actually have at the moment we don't have it here we have it inside of apt or jas so what we're gonna do now is we're gonna go back to after j/s I think you need to follow me again cause II uhhuh okay so yeah so after Jess and then what we're gonna do now is we are gonna go over to the point where we have the image upload and inside of app DOJ's I have the user name right I have the user I have their details so at this point I'm gonna go to the user I'm gonna go to the user and I'm gonna say go ahead and get me the user so let me just double check this just to be sure that I'm doing this exactly right yeah so if you had an image upload so at this point yeah so we're gonna say user dot display name so remember we updated that with the the user name that they sort of signed up with right yeah so we're passing this as the user name to that to that component so now inside of image upload this is where the props usually comes in so I don't know oh yeah this is where the props comes in so what we can do now is I hide the structure right here and I just say all I need to do here is I need to say username so use a name username there we go right and right now now speaking up so cannot read property of this place we've got user display name let me just double check why oh yeah so we actually need to do a careful check here so right now we don't want to render image uploads we only render this whole module unless the users signed in because we're thinking about we're trying to access a property which might not even be there because they might be logged out right so all I need to do is I need to say user display name so user display name and then here what I can say is either so if did if the user that display name is present and we can do this to be then we can have it so then we can render the sort of form to submit something or if it's not there we can basically just put a h3 tag which says sorry you need to login sorry you need to login to upload ah so like this app right over here if I actually log out and a scroll all the way to the bottom it says log in which they cannot see right now so have to hide ourselves right there so it actually says login to upload exactly God yeah okay so that's why we need that but there's one more check we need to do initially even when the app loads user might be undefined so there's a very clever thing in JavaScript code optionals so here you can say optional and this protects you so it says if this is not there don't freak out and break it's just saying like what only sort of use this only apply this condition what this is that that is so clean like normally you have to write trycatch for this stuff yeah so you normally you need trycatch now you've got optional chaining so now if we click if we click Save we should get yeah now you see sorry you need to login so now what I want you to do is first years thing the logics we got image upload go back here you see we pass in the username now I remember we are destructuring here guys so don't miss that part and then we go back down here and we passed a username and so now we've got everything we actually need well it looks like we've got everything we need to get this working and all I need to do at the end of that is I don't want it to be stuck on a hundred percent progress so I'm gonna say set the progress after it's done back to zero so it kind of informs the user that you're done set the caption and set the image to no as well so we want to kind of reset all the user forms right ah got it so like it yeah so basically like once you're done just set it back to like how it started with like no file name no caption and yeah no path exactly died on and now what we want to do is the final piece is we want to add the progress indicator so here naturally there is a HTML element called progress I don't need to have this class name just yeah but we have progress and then we have value which is just 0 to 100 max is 100 so that's a good thing to have here and then yeah that's pretty much like the start I think so we can actually give this a try and if we've all done it and we've done everything right it should be all good so we want to sign in nice it's it's it's there now right at the top boom yeah so now if we enter a caption so we can style this afterwards but we we can pop that in there and we enter a caption saying whatever you want to do so yeah and let's click on up and hopefully we don't get an error oh look at that you did it and then pop it changed right and now oh it's right here that's right awesome right yeah that was awesome that actually worked yeah now notice how it didn't go to the top even though it had the correct time stuff because the other ones won't have time stamps right yes so that's one reason also we need to consider that we don't we didn't actually emotionally saw we didn't order by it yeah that's true yeah so what we can do now is what I'm going to do is I'm actually gonna clear the database because we've got some records in there which don't have time stamps right so don't clear maybe all of them just clear those ones right so let's clear just those we can do that yes this clear just the ones that don't have time stamps so this one actually has times times this one has time stamps this one does now I'm looking at my one yeah we set this up when yours yeah so yep how good was it okay is there okay this is it document okay okay and actually let's just look at it live because it'll show up it'll be deleting here so let's say this is a Sonny Sango one so let's delete this one boom gone and then let's delete this Instagram one yep and this is the only one we have with a timestamp exactly so now what we're gonna do is we go over to App js9 64 so over here and basically when we access when we basically while grabbing all of the posts to show on the screen before we do on snapshot you can literally do order by yeah so you can just in and you can do order by and the field that we want to order it by it's called times thumb the answer to that question by the way is yes it can be scaled up on a much larger scale for many users yeah so right out of the box guys it can support literally a million users if you if you want to deploy this and it's up and running it doesn't matter if you get 10 billion users Google you're gonna you're gonna have Google's capacity it's crazy right yeah I mean you might get billed for it but here you're gonna definitely it's definitely gonna work so time stopped descending I think isn't it yeah we can give it a try there we go so now your top ones are going to be the most recent so if we upload another picture and this upload and it's uploading we can i still indicator there and boom there we go that's awesome cause yeah I think you're muted it's so nice that is nice yeah nice right and you see guys that indicator gives you all that sort of reassurance as like something's not broken you're actually just waiting for it but if you didn't have that indicator you'd kind of be freaking out like oh my god it's not working or my codes broken yeah so it's really important thing to have yeah true nice so that's really clean so we have our authentication we have everything so so now we kind of just need to do the remainder of the styling right and so I'll get everything in where it needs to be so and so it looks like the app that we built earlier so first we're gonna start that image upload component because it looks horrible right now so we're gonna go here and get rid of this marker so remember guys mark is actually really good so I usually just add comments like that to sort of visualize it beforehand and even get a pen a like a pen and paper and do it that way and I'll help you out cuz let's go ahead and create an image upload CSS file so image upload CSS nice and then you might have to read follow yep and then now we're gonna do is we're gonna import that file so we can start styling and this is another benefit guys to doing componentbased at work because you can pretty much just have your CSS isolated to that specific component which is really handy so here what we're gonna say is we want the div which contains everything we're gonna call that so let's call it class name and call it image upload so image upload there we go and basically one with videos and just for simplicity just for now I'm gonna make that lower case image upload and here I'm gonna get some styles so image oh there we go so it's very simple how we're gonna style this for now we're basically just gonna have I'm gonna go over to our image upload CSS and I'm gonna basically give it a image upload so image upload oops we kept it lowercase and Mario is saying Mari is saying new 2vs code and trying to get my setup to mirror this is this all default syntax highlighting yes so right now causes machine I believe is also syntax highlighting and once you stop project with create react up it's really good at actually setting up your environment with vs code I've noticed so everything should just be out the box I mean I would recommend something called prettier which is we're not using at the moment but pretty is really really good to sort of get get used to having yeah so and it just means that when you take saves you have to update you in preferences but if you click Save it will actually handle all the formatting for you which is really handy so here we're gonna say display flex and on the right as soon as I click Save notice how you're gonna see it change so you see everything went in by default into a row yeah yeah so we want it to be inside in a column so we're gonna say if X Direction oh look at that sunny oh nice that's the kind of comments I love yeah this tutorial is more helpful than paid ones nice that is awesome nice right so now what we're gonna do is we have flex Direction column width of 60% I want to say width of 60 percent sorry cuz I don't want it to kind of you see right now it's just going it's just touching everything on the sides it looks a bit ugly right so we went to 60 percent and we'll just do it something like this so you see it doesn't take up everything and then in order to get it sent and in this case I'm gonna do something very simple when I say margin left is Auto and margin right is Auto so it's gonna determine the margins on the side automatically and that should send to the element all right yeah so you get that so what we're gonna do then just a sort of top that off is I'm gonna add a little bit of a margin on the top and bottom so margintop I'm going to say 10 pixels and marginbottom is gonna be 10 pixels as well so margin bottom is 10 pixels and now if we check it we should be able to see so let's have a look at your one so let's see can you see the app oh yeah there we go yeah so we've got that so 10 pixels 10 pixels so now it's looking a lot better right but what we want to do now is actually have that maybe even glued to the bottom I mean it might look better at the bottom so what we're gonna do now is have it at the bottom so we're gonna have position so I'm going to say position position fixed right fixed and this is gonna basically say it's gonna be fixed to the bottom of the page oh I don't know if I did this previously actually we might have done this slightly different because I think that's gonna break the look and feel of it right so can you just move the comments yeah yeah and then we can see it okay nice so you see it's sort of broken in a little bit and it's sort of like showing a bit weird now right yeah till there but it's just yet like acting a little funny yeah so for now what we're gonna do is we're gonna keep it up at the top yeah just for now just while we sort finish off the remainder of the styling because there's a few things that I wanted to sort of do before we get to that so if we go to image upload and let's just have this first year's position in the correct place yeah so right now let's go ahead and move that image upload to where it should be so it shouldn't be at the top of the page so for now let's just kind of put it at the bottom I guess for now so temporarily yeah so but that looks a little bit better now so we have it at the bottom of the page yeah but if you scroll down on my code on the oh yeah right there oh it's looking nice actually it's looking much better yes that looks much clean enough right and even the progress bar we can solve fix this out of here it's not to move our screen yeah so now what we need to do is we go over to West progress con image upload here so here we say class name let's just give this a quick sort of image upload progress and then here inside an image upload CSS I'm just gonna say go and target that and give the width of the progress bar to be a hundred percent inside of his container so that should then stretch the so if we go back to the bottom of the page you should be able to see I just moved us out of the way so we don't get in the way oh nice nice so what we do now is actually we can keep it there for now and I see it's quite clean down at the bottom and what we could say is background color give it a background color of white and give it a border top of one pixel solid great so it fits in really nicely to our theme so my gray so now if you check it out you should go to see obviously hasn't actually done it is the one that we wanted to have width of 60% okay we can change afterward we can finish out styling in a sec let's go ahead now and go to the top of the page so you see where we have sign up and sign in right yes doesn't the cleanest right it looks a bit so weird all the way we're here so I need an signed out oh so what are we trying to do we want to move this from here and move it like here in the header exactly we don't want it where it is at the moment we just want to inside the header right uhhuh so at the moment we have this cool piece of code over here called up header and what we want to do is basically have these login logout buttons just I'm gonna cut it I'm gonna put it inside the header but as you can imagine this is gonna cause some weird behavior because it's not stuck we haven't started we haven't prepared for that so now look and you see it just jump to the bottom of that yeah but the surrounding containers is called a pedo so the surrounding containers called a pedo so now with Flex box what we can do is we can go here and we can say display flex that's the first step and if you notice now it will go into a row nice it's right there it's in a row yeah which is really nice and then what we can say is we can say justify content space between right so we can space all the elements inside there between yeah all right which is already looking much cleaner right yeah the Instagram logo actually stretched a little bit less double check why so if we go to the header image yeah what we can do here is we can say Heather image and then an object that object contains the object object pic contain I know if we save that ah see yeah yeah so that's already looking really clean like that's actually looking really nice and everything sort of slick we can actually add this are we by the way are we done styling the image uploader we can update it we can say that we can change it for sure like we can no but are we done for now styling it yeah yeah we are yeah you can't we have to celebrate each thing we come yeah just can't just go on to the next it's too hard on yourself bro that was nice alright what's the next thing yeah we're working on right now so now I guess we just we're we're styling a little bit we're styling the webpage little bit okay so working so just styling at the moment you know starting a webpage so at this point what we're gonna do is we can get rid of where it says hello clipper programs just put Instagram come with react because it's like a sore thumb right at the moment so you can get rid of that and we can check it and we save that here is one question though rank says some a bit late but realize you guys created an authentication system with email and password however Instagram allows you to login with the username as well can we do that here yes so you can do that here I think you can it's a custom way you can do it so you can actually do any sort of authentication through firebase yeah but we're using the default ones and what I would recommend maybe in the FAQ in the next video something we do some indication the hacky way to do it in this case would just be to map the username and password or username and email to each other so then when they type in that specific user name it actually just replaces it secretly with their email and sends that email you see what I'm saying sunny yeah yeah we could do that well I mean yep okay yeah so by oh that's a Kuwait okay yeah we could do it that way there's that guy when it comes to this stuff there's a lot of ways to do all of this yeah so I would I would say there's there's many ways to get it right and sometimes like you could have but I would recommend like the reason why they sort of have an email and password approach is because those ones would just use name passwords you have to check a few things with where as an email say for example your user forgot their email address right oh no forgot their password then it's gonna be a case of having how do you send them a reset password email etc so that's why they saw them I need it like that quiet yeah sure you can definitely have it if you want to okay cool yeah let's just keep styling it and then then what's next will we just host it yeah so we're gonna style it we're gonna host there and then we could even show how we added that quick Instagram embed and then we can host it and I think we shouldn't take too long though yeah yeah nice so it's go to app post so we push this inside of here so I've just surrounded these are these posts that we have right here and I'm just gonna add a little bit of padding here so I'm gonna go here and I'm gonna go ahead and do hop oh and I'm gonna say padding let's just give it a 20 pixel padding and see how that looks so if we go ahead and do that you see that and they're already looks much nicer take it away just so we can visually me one second so it's basically right over here right it's adding that like padding right there in between each post exactly okay so if I take it away uhhuh ooh everything is too tight nice that looks a lot nice clean slick UI mmhmm the next thing I want to do is essentially so previously and the demo that we showed we had this really nice slick looking sort of Instagram embed right yeah so that's like your very quick thing that we can add to this project so it's so just so everybody knows what we're talking about yep we're talking about this specifically on the right hand side right the Instagram embed right there yep it's yeah right this is what we're trying to build right now so what we wanna do is [Laughter] I'm sorry okay so what we need to do now is cause the view if you head over to type and react instead Instagram and react Instagram embed oh okay yeah this one right here [Laughter] all right so right here paste yeah and then at the bottom of the page it's really simple by the way to do this guy's so we need to go to the top of a page is do an import so we have this import and then what we need to do is actually just pop there so right now what I'm about to paste is just on there they actually have some demo code on that page so I'm gonna go to the bottom and I kind of wanted to come he's no good it's hard to keep that in Instagram embed and we're gonna have that next year the posts so over here so right yeah we'll have div should better just pop it in here so that and with that said so what I'm gonna do now is I'm gonna pop in an Instagram thing over there so let's go ahead and click on something one second boom boom boom just go ahead and grab this so this is a picture from my Instagram and now what we do is if we save and refresh this go back to our react up so cause yeah am i following you yeah react up on the right so go to the running one yep so now if you make it a bit bigger so make it a bit bigger and I think in my renders at the bottom of the page so if you go to the bomb if you refresh okay so you need to the NPM stop so I'll do a MPM stop so when we installed it we actually cut the terminal so we have to do mmm start again and that should get it running again in a second and what we're doing here guys is we're pulling in some code someone else's row for an Instagram embed and we're just pulling it into our into our web page so if you scroll down a bit more you are you meet fuzzy okay I think I think you might saw if you go to the so you see you guys it's popped up at the bomb so that's actually Instagram both so you just you just need this one go up a little bit I [Laughter] think you made Ghazi now if you go to the right so the actual react up yeah and then swipe up a little here this yeah so what we want to do here guys right now what's happening is because we have the app posts over here and then we have the Instagram embed is coming underneath it and we don't really want that to actually be the case instead what I want is I actually wanted it to come up next to it on the right so I'm just gonna check something now we've got posts and one way to do now is I'm gonna pop this hmm pop this into the app posts and then I'm gonna basically wrap so I'm gonna create to dibs right I'm gonna say one is app posts left so this is gonna be responsible for the stuff on the left and I'm gonna Chuck this in here and we just indent so if you have prettier guys this isn't an issue you actually just save and it handles this for you and we'll say div posts right getting it out of the different divs because you want the embed to be on the other side and then all of our posts would be on one side exactly yep so we're gonna use some flexbox rules but you have to put the children so now we're wrapping all the posts into one child so it's on the left and then all of the in the Instagram embed on the right and the way we do that now is I basically go ahead and let me just check some rules for real quick so now I need to basically go and update some CSS so I go to my app posts and you see right now I just have this right so right now we haven't got anything working as we want it so instead I just need to do display so just all in one place like one yeah straight there we go okay and now it's showing up so now I did display flex and that's fixed that and then the second thing I need to do is by default in a row so it put the two children in a row right which is really clean look at that guys it's really responsive everything works like we wanted to right but what did you justify content center so now if you make it a little bit bigger cause II owed or the app the app yeah okay make it a little bit bigger and look what happens guys so oh right sorry I don't Center right so if I find you actually that's pretty clean actually yeah that looks pretty clean actually because like now even if I'm full screen it shows up right here that's really clean actually yeah so what we could do then is we could just go ahead and target the right element so the post right and just give it a slight margin left of like let's just say like 20 pixels right or even even less maybe 10 and now you'll see well you see it's got a little gap so I think it needs a little bit of a bigger gap so you see on the the app now yep yeah we've got that little gap yeah yeah this this little gap right hear that oh whoops this little gap right here that wasn't there yeah so that's super clean right now right we have a really really nice UI everything is fully responsive and it works as we want it to so we actually have the image uploads at the bottom so let's just have a look at this now so we've got everything we kind of have initially the one thing we do we did want is we wanted it to be a case of we wanted it to be a case of that when you wait hold on we forgot about putting comments oh yeah oh yeah let's do that we got it we gotta add comments yeah so right now let's go to our post and yes what we need to do now to get that working is we go over to our post oh this is actually really key Yama says firebase is a service that allows you to create apps without needing a server exactly yeah exactly that that's actually a really good way of putting ice ice we're playing it yeah and that's want to see exactly what it is and and and and it also allows you to do yes a create apps without thinking of somebody I couldn't play about that's really nice yeah it's it's a weird give you but yeah go ahead okay it gives you a bunch of extra plugins that you could do that machine learning you can do a bunch of stuff using firebase which is really cool mmhmm mmhmm so what we're gonna do now is quickly add the comments so let's go ahead over to our function so here I'm gonna add a piece of state to keep track of them so we're gonna have a comments keep track of it and what I'm gonna do here is I'm gonna create a user fact right which is going to be used to populate the comments so what we're gonna do now is this is a snippet of code that I'm gonna do right now so I'm gonna say actually so we need to do two things right now we need to basically firstly have the in order to have comments on a specific post we need to have the an individual posts ID so that way we know which posts were actually looking at right so right now we passing the key by one I want to pass in a post ID as well because you shouldn't actually reference the key as a prop because what you're trying to do is you want to be able to get the specific ID for a post and then add a comment to that exactly so you can you see on the right it's good thing you what is up so every single document which is a post we're actually gonna internally have another collection on the right so you can you see the collection start collection on the right on the right yeah so there we have star collection on the right I think yeah starvation right and then what what we're gonna do there is inside of them again we're gonna have a collection called comments alright so in then we're gonna have a collection called comments and now what that's gonna do is we're basically gonna say so click on that and click on comments what we're gonna do here is so we passed in a post ID so yeah so here we're gonna have two things are gonna have text and a username right side of the post this is a collection inside of the post yep oh nice that's a clean way of doing it so and it's like all relationally connected right yep just gonna keep it just gonna store strings as the sort of username etcetera but so if I do promise to hit next yeah okay do that and then type in so this just add one so we'll say I actually have a different text on one of them and username the other one so do filled text and then the other one do you use name nice and then that's just too clever Kazi yeah and there we go so that we have a collection of comments inside of it so you can see it's actually really on easy to interpret about like how you store information here which is really clean right this is the coolest tutorial I have ever seen in my life that's it that's exactly what we we aim for guys that's exactly what we want to hear awesome just keep going nice so now we have a so we have the post ID so let's go back to image upload an image upload post yep and then here what we want to do is we passed through the posts ID because I was a prop and what we want to do here is basically have so upon loading I need to have a user fact right so I need Wu's effect and what I'm gonna have inside that use effect I'll explain here so I'm pasting a code and here I have so firstly I'm saying so ignore this top line for a second I'm saying if a post ID was passed through right and I'm saying unsubscribe so remember that thing what we did before unsubscribes of const unsubscribe mmm was DB and we're accessing the posts collection then by going to that post ID document we're going inside of its collections inside of its comments collection and then we're saying go get a snapshot listener for that snapshot listener for comments yep exhibit okay so anytime basically there is so just so we can visually show this a little bit so basically anytime there is a new comment added wherever posts so if I go inside of posts and we see so anytime there's a new comment added to thus like to a specific post yep got it so it's a listen it's a listener for this one specific post we're not necessarily listening to every single post listen to this specific post and all the common changes within it exactly it's actually like a nested list not yeah that's a nested exact list that I was looking at that's a nested loop because then that's what allows you the ability to like not refresh or listen to the whole page you can actually listen to the specific places yeah so can you guys see how like react hooks and like this form this sort of this sort of whole fundamental like State value and property that we use connected with firebase is just insane like the relationship between these two things they're just like they're made to be together but there's just not many tutorials on using it at all like I want to sequence here the best programming video ever wow dude that makes me so happy that's awesome I think your media coffee oh no I didn't say anything oh thanks I appreciate it yeah return unsubscribe and then what we're gonna do is we need to remember every time we use some kind of like variable inside that we need to include it as a dependency yeah so that way if that variable changes it refires this right yeah so that's basically gonna go ahead and fetch some comments now we need to basically make it look quite nice right so we need to do a few things now and we need to basically go ahead and add so let me go bring up the app so I can see that place so now we're gonna do is we're gonna go and add a comment field so the way I like to do it is I pretty much have a habit looking like this so I have a forum so underneath why is this gonna of sink so underneath what do you what are you working on right now just so everybody can be on the same page yeah so that's actually let's add it to that little text banner thing so what we're doing right now is adding a support for entering comments well um I think yeah add oh yeah we've already got yeah I've had that I've had that okay so yeah we're been working on adding comments to the Instagram post right yep exactly so firstly we need to import you stay so it's not broken so you stay yep there we go and then what we're gonna do is our act as well yeah and then DB as well so we were using the DBS we need to import DB from 4/5 s and there we go nice yep so now we've got this and what we need to do now is we go underneath where we have the caption and I'm basically just gonna put a form here so I'm gonna add a form right so I'm going to just break you down so I'm going to say the form so we're gonna have a form inside that form I'm gonna have two inputs I went I understand when I have one input which is the M which is the input that we have there's that the user is gonna be able to write inside of all right this is gonna have a class name of just post input it's gonna have a type of text placeholder add a comment at the value and a mean comment need to assign we need to create a piece of state right now to keep track of the individual comment that you're putting in right so it's singular because we're talking about the comment that they've just typed in so comment yeah yeah and then we say set comment and here we just do you state and initially that values blank so you show the placeholder and then here at the bottom we then have this right here so unchanged here it's basically just gonna update that state as we type in so if we save this now we should see at the underneath that underneath nice yeah we see I had a comment now what I wanna have is I want to have a button which says post right yeah so I'm gonna watch his post now so I'm gonna add this button this is gonna have a class name of post button so been naming and it's gonna be disabled if there is no comment we're gonna disable it and then unclick yep hwigyeong's like we're gonna run a function called post comment alright so this is very sort of like similar to what we've done before so we're just adding a button here but when we click here I wanna fire off a function called post comment mmhm so I'm gonna write that function so it doesn't error so post comment and that function is gonna be able to basically submit your comment in the database to that specific post exactly exactly that yeah so now if we open up react we should be able to see yep yeah we should go to see that we've got a post I am nice okay everything that's quite nice it's time to come together what we want to do now is also add a class name to form so this one and we can actually start making this look pretty nice so the first step we want to do in styling this post Oh CSS is actually have it so that it takes up the full width of the comment box right mmhmm so I know to do that and to do that very easily we just go ahead into post op CSS and we do this we say pile oops post comment box so comment box and we do this display flex and I'm gonna give it a slight margin so that it's not too close to the top all right and then then what we need to do is remember we added two different we added two different classes post input and post bun all right so these two your post input and post button yeah now in Flex box whenever we have two children inside of a container what we can do is we can say post if we give each one a flex value what we're essentially saying is we're setting the precedent for how much space each one can take up so we're saying the input should take up most of the room mmm and in this case we could I say the button should take up as little room as it can because that's how we see it in Instagram right so now if I do oh I see nice so this one takes priority and a zero is like I'll take as little room as I possibly can exactly and then what I want to do is for the input I'm gonna add I'm gonna get rid of the border and I'm gonna add ten pixels padding no yes that looks cleaner that looks clean and then in in Instagram they actually do keep a top border so I could do this and I could basically do it like this nice all right and then on the button what we want to do is we want to get rid of all of the borders except for the top so I'm gonna add these two lines of code so I've just added those two so now we should only see the border like that you see that looks really nice yeah and then what I'm gonna do is I'm gonna change the color of the button to be whatever they have on Instagram so I found the blue earlier on but I'm just gonna pop that in there where are you I don't think it's following you now okay yeah so if you read follow I think I it's following you now I think oh yeah nice so yeah now it is so now I just added that so you can see there's a slight you write impost ya know which is nice and so all right there yeah oh yeah we started all nicely and everything works so now what we need to is actually post a comment right so the first thing before we do the posting the comment I actually want to list out the comments are currently there because right now we can't actually see remember you did add a comment but we can't see it mmhmm all right so the comment goes between this gap here and we're gonna do this we're gonna say post so I'm just basically gonna put this here so I'm gonna say div oh it's warmer than that I don't need these two yeah so go ahead and do this and I'm gonna go ahead and pull this closer so we've got div post comments and also here so what the post comments and right now what I'm saying is I'm mapping through each comment and I'm just popping out a P tag and it's gonna have so this should actually be strong because strong is the bad one to use herbs strong and all we're doing here is we're getting a look do you remember the the fields inside the DB was username and text yeah it should say the username in bold and then it'll have the text next to them but we're just mapping through everything and again a comment and doing yeah like this a comment over here text and username exactly that yeah and now if we go back we should see if you scroll down oh nice Hey look at that yes just need to fix a little bit of styling now so if we go to post so CSS and we check out I believe I just need to add a little bit padding I think that's it so if I go here and I do padding of 20 pixels then I think it might have done it so I think 10 pixels might be enough we can have a look so 10 pixels okay so we did 20 yep so 20 yeah boom there we go whoa nice right that is so lean what I need to do now is actually add in the ability to to post right so the way we do that is we go over here and I need to do event.preventdefault so I'm just gonna do event.preventdefault so event top when default and then what I'm gonna do is I'm gonna go in today in database so the route I need to get into is this one so it's gonna be DVD or collection posts when I go to the horse is gonna get you into here when you want to get into specific like post and then you want to get into comments and then you want to post your comment yeah exactly mmhmm yeah so then we go ahead and we just need to add right you know we just need to do add and then what we do here is we say we just need to add in the the key to filled the key value pair so the first one is text I'm gonna say text is going to be what was inside of the comment state and username was basically so this again we come into our we come to a point where we need to think about what's happening here so the username you see we passed in here right but I need to basically when I'm pushing I don't need to get the post username I need to get the user who signed in yep all right so what we need to do here is we need to go to app and remember we store the user who signed in inside of user right yeah so I go down and I go over to the what is it the post yeah here post right yeah I need to pass them the user so I passed the user through here okay yeah it's not what we're doing is we're passing the signed in user so we pass in the signed in user as well nice because this is the username of the person who wrote the post and this is the user who signed in yep right and now here I need to do as I say user don't display name to get their display name yeah yeah and then after that why do as I say set comment and then I just do like squiggly bracket so he's gonna basically clear the box so he looks like you know like when you enter something it just Claire's right yep exactly so with that said so why now we're not actually we could upgrade this one second we could do timestamp you do times down and then here do firebase dot fast or nice nice nice nice nice server because that's one thing we didn't have before and then we can even then order it by comments exactly a nice so here with you order by time some I think we might need to get rid of that one comment that we did and then we I think we have the most recent ones at the top or maybe at the bomb or either way we can mess around mother so firebase is not defined so here we go import firebase from firemen's yeah because that's from the actual dependency dope and now if you go down you should be able to see like okay so it's not showing the one that we have because right now that didn't have a timestamp so I think we actually need to go ahead and remove that one from the DV because it's breaking because it's trying to sort it and it can't find the timestamp remove oh yeah yeah yeah the one we had yeah got it yeah there's today that one and then this just pushed some new comments in with timestamps manually yeah no no no so now right now it's all [ __ ] up so now we can actually use the app yeah so let's go over to react and let's just type in so are you signed in by the way I don't know yet okay so yeah so you're not signed in at the moment so we need to protect against that exact issue okay oh yeah Tess 23 at gmail.com yes and now you're signed in so you say hey this is a amazing post also let's just oh there's a tween experience nice right nice okay love that all right so that's that's awesome and that's working and the reason why it says test guys is because that was his username when we signed up with that account yeah let me actually sign up alright prick that's uh nice anger Vesta thank you very much yeah thanks wow I love how without even like I sat click sign in then I I click register then I fully registered then I came in and I comment not only did I not have to deal with going to multiple different pages and like rerouting and redirection but like everything happened without even a refresh that's pretty insane yeah it's insane right and this is such a clean user experience it's gonna be really nice this is gonna be no headache it's an awesome yeah and it's all real time so like it's the best experience that they could possibly get on the user side yeah so awesome so that works really nice so we have comments now I guess then the next step is we could do that little trick where we showed the animation or what you were choosing what animation for you know on the tutorial although so we actually don't have the avatar showing in the top and right now you see that the header doesn't follow us down uhhuh yeah so if we go over to apt ocss that's a short little hack to get that working so I think you have to follow me again yep so good Abdur CSS so where we go to app underscore underscore header hold on again this is a it's not it's for some reason you're an app side CSS right now yep okay all right sorry I was in the wrong I was in a different code yep so this one here yeah yeah yeah header right so right now what we need to do is it says the header the one that says Instagram and logout yeah that one if we do something called position sticky all right and then we say top zero know what it's gonna do it's gonna stick to the top so now if we refresh and we check this out I don't think we need to refresh so if you go down look at that that's really clean right what does it is it working can you see that the header is actually sticking to it oh the header the head yeah yeah it is there that is clean okay that's what we were talking about cool now the Henry yeah you can see some of the elements are kind of overlapping as you scroll so so the little avatar with our that's overlapping it so get around that we just do a Zed index of one yeah and that will fit yeah fix what Wow someone goes Fulani said can't believe I've been here for more than three hours awesome watch the whole way through nice that's awesome thank you for being with us Fulani appreciate you yeah that's amazing oh yeah so Crofton robot reminded us guys fixed to add a comment bug when you're not logged in that's really good so right now what we actually do is we don't actually account for when you're not logged in which is why that error came up that's really good that someone pointed that out nice yeah so let's go ahead and go to so what we did in the previous build was we said if there was no user we basically we only show this comment box if you logged in so we say user and and and we basically do it like this so I grab this and I just chuck it in here and then basically I make this indented like this okay there we go and then basically now what we're gonna do is if you're logged out so notice how he's got the comments he can comment right now but as soon as you click logout watch what happens to the comment boxes are nice are gone yeah they're completely gone right yeah and I think we're also doing that for the image upload we also say on the image upload I don't think we've starred that properly but if you go down it should say yeah so why no it says need to login to upload nice okay awesome so I guess right so what's the next step should we do I think at this point we're ready to push it to firebase yeah let's do it so now what we want to do is and also guys just a quick reminder so if it cause if you go ahead and click the little write so you see like when we pulled in that code for the Instagram embed it actually gives us a playable video and you can actually click on this story icon on the under oh yeah right yeah yeah and all of us functional and it's working so everything actually works when you do that so here we've got some people reshooting stories of everything that we done yesterday so that's pretty cool and everything works guys and that's really nice because it's lit so let's head back I love the way hold on this guy turns the camera around and that's that I love them that's awesome guys if you guys do that we love seeing that because it kind of just gives us if we can sometimes see like a hundred people three hundred people watching but when you do that it suddenly becomes real yeah up until then is just like it's not real it's just like numbers and we don't know like I mean it's cool we see your comments and we engage with you but it's still not it's just text message with your avatar next to it and that's kind of it but like when you go actually send a video on Instagram or whatever that's what makes it like actually real exactly exactly nice so the next step I guess is just deploy it yeah let's get this thing up in the air like okay so right now so let's see let's actually write that so working on deploying our Instagram app okay awesome so this is actually much easier than we would think and it's a really saw again it's just it's just a crazy powerful how this works nice I like that so final step nice so now what we're gonna do is let's head over to your terminal Kazi so if you open up a second terminal it might be easier mmhmm oh we could stop the app I mean it doesn't doesn't really make it much difference okay so let me open I always know it's when we when we rebuild these apps we actually do it cleaner in the action tutorial it looks really clean right now yeah we do it better life because the pressure is on yeah yeah it's really nice and uh awesome so now we've got time to open so what we need to do now guys is if you're doing this fresh you need to do firebase login and so I think we should demonstrate that maybe so firebase log out first so I think you already logged in right now so yes I will just log out and this would be where you guys are at so when we initially set everything up you would have seen that there was a point where we had to do install and we had to install firebase tools globally so you're gonna have to do that in order to do this next steps and then you want to do firebase login yep and you just want to press Y and then it will pop up as a browser nice awesome and there you go you know redirect and no login so the next step is doing firebase in it alright and here what we do is a nice CLI pops up so we just need to go down with the arrow keys and press space on hosting and this bit guys you have to pay really close attention to so click on use an existing project and go to Instagram Chrome and here is the important part guys so this point you have to type in build right this is a react step nice this is a react step that you just you can't mess this one up it has to be built otherwise you're gonna run into a bunch of headache so this has to be built and then this hit enter and then the next question here you want to click on why so yes because we are configuring a single page at react is a single page app yeah and yeah we're pretty much done with everything guys and we're just moving this is our final step so just to reiterate we have done everything in this app already the ability to add comments upload images the styling the header the sticky header all of that is done user authentication is also done we're just on the final stuff to deploy this app so here's one for you guys let's keep it guys we appreciate it that was a real nice little session we had the yeah awesome so that's it so we initialized everything there and now what we want to do is there's two steps we need to do all right so we if we want MPM run build that's the first step we have to M what this is gonna do guys is when we one react okay I think it's I gotta be in Instagram clone yeah yeah that's right do I have to do the whole build I have to do the whole build again right should I delete the build I don't think you would've created it yeah it has created it it's not it's outside here oh oh yeah it's create an empty one yeah we can delete that and even the see outside firebase are seeing leave decay ignore firebase Jason maybe yeah remove the firebase yeah it won't break anything for now though it won't break anything for now so remove this yeah no you don't need to worry about that for now okay cool there's just CD into the photo and then we just restart the process and it will find the one that we're talking about yes we do firebase in it awesome we just do those steps again so we go down to hosting yep and that's to let me say build this step and then we say while you do that someone says one of the best tutorial program one of the best tutorial best programmers cheers to you guys thank you very much Michael gags awesome yep so now in NP remember guys what this does is it essentially just bundles the app in the most efficient way so it's gonna strip out all of the hot reloading all of those sort of extra things that we don't need in the production version so that way it's very fast it's very lightweight and it pushes all of that inside build um I don't think that's the one cause I think it's inside Instagram clone oh yeah my bad I deleted that one then if you click the little refresh if you click the little refresh button on the right you see that top right I'm still there weird there we go so there you go everything got built into that one right yeah right here huh that's it and you have to do that first guys otherwise and even if you change things you have to do that so next what you want to do is you want to run firebase deploy Thank You Sarge Enza thank you sergeant we mine the real name actually sergeant snow oh really yeah SWA J that's funny dude all right are we doing this or what yeah pastor bro this is the main sort of finale whoa specified public directory build does not exist okay so in that case let's delete the JSON based off yeah delete those ones cuz it's looking at them I'm assuming firebase are C as well yeah this to lead up yeah and I'll try it could not locate it v is so if you go into source source yep sauce oh I think what I think what it's done here is because we want in the correct thing to do 5/8 in there again now yeah I think it didn't add it in the right place yeah I think it went to the previous place right so the host thing there we go Instagram clone nice build override it yes yep and now we got the firebase or we got dog yeah we got everything here so if you guys do want to that issue don't freak out and panic just just literally go for the same steps because I guarantee some people watching it will actually run into that you know yep yep yep so these pads got messed up you know like this and this you know even probably this got messed up yeah so now what we need to do is literally firebase deploy and boy it will do guys is it literally takes that build photo the one that we just prepared and you see it has found 18 files and guys it just deployed like it was that quick holy crap I am that's there all that hard work and it's literally just been deployed so let's double check oh okay so maybe that's strange okay so let's do that means that we didn't do our build properly so let's go ahead and do em p.m. Rob bill oh yeah maybe we didn't run yeah we I don't think we did the build right after it did it properly we didn't run the build again yeah so it hasn't actually done that Craig cuz I'm just doublechecking we are shooting from the build folder yep and we have the build folder the see where it does it so so I'm deploying again but right now we have no build folder Kazi so it's right here that would do the refresh trick so you take that little refresh button uhhuh it's right here it's inside of Instagram clone out of sync or that's right here look it is it's up hey guys what is uh come on thank you thank you thank you guys we got you okay actually looks nicer than what we built first I like that yep and it's up so people can sign up you guys can use it actually right now yes you can go ahead to that URL and I'll go find the comments in YouTube all right so what's the deal we are we have yeah Crafton says it works he's pumped awesome all right so encoding fountain says fabulous nice all right so we just deployed the app look everyone's checking out to say WOW fantastic nice I love seeing everyone's reactions when it comes through to this point nice awesome yeah you guys can feel free to just go on our website and I'll play around with it oh yeah that's cool yeah see their reactions that's actually awesome yeah and what's amazing guys is that that is literally that's completely scalable as well so that is a case of like even if a million users came onto this website right now we don't have to worry about scaling everything works from the getgo is using react it does efficiently yeah people are signing up they're like hey woohoo hot Feli peace 96 that is pretty awesome hey oh here we go nice fun fun yeah that's all I think we always forget to block yeah yeah please don't spam guys but okay awesome so I mean everything is covered we've built this complete app it's an Instagram clone just remember you guys have firebase authentication the database is already hosted it's realtime there's a two way sync it has I mean the only few things it doesn't have is like crud functionality but like on Instagram you don't have that like you cannot go and well you can actually go and delete your all your things right and edit things so that would I guess if people want a part we could build that in part yeah we can make it yeah we can make it so that we could delete our own posts so we push yeah yeah delete your posts or edit your posts that you have so things like that's um that's something if you guys want we could do it but hopefully you guys have enjoyed what we have built in the last three to four hours hopefully you guys have had fun thank you guys so much for being a part of this and then giving us all your awesome comments did you see somebody added a picture okay oh that is cute yeah I see that so nice that is awesome yeah we hope you guys enjoyed that and like we said like just drop comments let us know literally we we are happy to build what you guys are interested in and this was a nice little challenge for us it was a case of we just thought of it and we just went with it yeah I'm so yeah like any ideas just show us if you make us Instagram video telling us what your ideas we're probably just gonna pick that one person because most likely honestly out of everybody who watches hundreds of people watch one person actually sends a video or Instagram message so it's like we go with that person's go plan so it's like if they're like yeah you guys build this we're like okay we'll build an Instagram clone so if you guys reach out to us and you're like hey maybe Netflix clone next or a Twitter clone next or whatever then that's probably what we'll do but just make sure you guys yeah you know take an Instagram video and actually like send it to us yeah so just shoot an Instagram story tag me in cause the in the and that's how that's the easiest way for us to reach out and see what you guys are thinking see what you guys are feeling when it comes to this stuff also if you guys enjoyed that make sure you do check out the course because we have a little sale going on right now we're cozy yes we have a sale going on right now guys so you're gonna save a lot if you join now because we were doing the sale for 4th of July but you know our team has kind of been lazy and has hasn't updated it back to the full price so miss Dale is the sale is still probably on for today and then after today it's gonna be back up to a higher price so go to the link in the description right now and take advantage of the 4th of July sale and join the profit or JavaScript course where we're gonna be building all these projects and teaching you how to make an income with it awesome awesome ok love you guys take care and we'll see you in the next video peace guys also