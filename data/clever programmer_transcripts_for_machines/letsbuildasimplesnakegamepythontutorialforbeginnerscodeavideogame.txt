how to build a python snake game now i am here i am wait how do i say this i am i am i have a guest here nate by the name of michael lacombe who's actually a team member here at clever programmer he knows python he's just he does a lot of things like here at clever programmer but i will let him introduce himself to you guys because he is an epic dude he's an amazing guy a hard worker does not stop and just an amazing teacher in general as well so guys make my hold on my guys get it from michael give him give mike a round of applause in the comments for you know give him a round of applause and i'll let him michael introduce himself guys so michael choose yourself who you are and yeah what are you doing here awesome man appreciate the introduction yeah dude so um i guess i'll start off by saying that originally i was actually a profitable shortcut student so before i ever worked with you guys as you know i used to be a student here and because of a profitable shortcut and because of clever programmer and and profit with python i was able to quit my job i was able to start freelancing and make my own money and um you know it's been it's been an incredible experience meeting all of you guys and today what i want to go over with you is a little bit about you know my business and what i do and and i to what i do is tutor people but also the main thing that i run into when people are trying to learn python this is the biggest thing and they always tell me there's if statements there's four loops while loops and you know we can write all these things in a row right but it's like we're told we're told let's make a website let's build this app and then the second that happens you think to yourself i have no clue how to do that right so i'm going to go over today a little bit about how you take an idea and put that into code and we're going to do that with a really cool game that's called snake it's a classic and uh we have an example here actually before we get into example guys so like i said guys uh guys welcome to the stream welcome everybody as you guys are coming in like you know a lot of you guys and you are coming in just wanted to say welcome today we are working we are building a snake game and i have a guest here at michael lacombe who's actually a team member on clever program he's an amazing guy a hard worker just a crazy guy he's just like a the doer and a great teacher as well and he knows python i know too so with him he's going to be showing us today how to build an awesome snake game but most importantly is how to take an idea right and actually put it into put into something that that you know that's useful right guys so i know we had an issue with a small issue with the stream before but looks like it's all fixed which is awesome so guys for that give us some fire give us some rocket emojis and welcome to the stream welcome to the stream guys hold on let me do this no can you can you see this you can hear that right should use soundboard that's awesome yeah i have also this like applause like yeah [Laughter] so we have so many people coming it looks like we have steve uh see steve says it seems fine now let me move this let me move this over we have steve we have so many people coming in oh my god sayuri what's up we have yay a lot of people are saying yeah it's all working which is per oh that's so good to hear finally finally it's working guys uh let us know down below where are you guys coming from where you guys come from you know we have people for so many so many different countries who are joining us and it was always awesome to know where you guys are joining us melania says melanie says woohoo let's go let's go melanie let's see who else we got who else we got real quick here man let's uh if you can send me the link for this new stream on youtube i can post it in uh in our previous stream so people know where to go beautiful that's a that's a that's a great idea that's a great idea michael michael michael's a man that's why michael's a man you know um there you go awesome and thank you sweet sweet sweet who else we got guys looks like well karine is coming in from switzerland we got no ready from no uh from what montreal we got from iran from ghana from india from somebody say earth sunny i mean that's good if you're from earth if you're not from earth that'd be interesting actually welcome that would be cool yeah welcome to earth sonia said suman says nepal oh man uh hello halloween says i made a snake game in c plus but guys who's who's excited to make a snake game who's who's excited to make a snake game with us in python and actually have you been running it's actually is so much fun micah just showed it to me and it looks epic i am not kidding here seriously like not even joke somebody said for i'm from mars that's that's okay that's cool all right that's welcome welcome uh maybe you maybe you can give us an invitation one day for us to go to mars right i'm curious how they got reception out there i know how yeah how do you get reception on that you know that's some that's a very hot that's a very strong internet we got from bangladesh from tanzania tunisia from kenya wow wow wow wow so many amazing people guys so many people wow i love it i love it the interaction is great somebody said i'm from snake land i don't know what that means i don't know that really means but cool awesome if your statement okay so guys actually for those of you new who are who just came in i just want to have one say once one last introduction that is today we are building a python snake game okay with michael here who's one of our guests and he's actually a team member here at clever program so if you are new give him a round of applause and with that we can pretty much get started but before we get started michael do you know what they need to do michael what do they need to do do you know i do know what i think they need to smash that like button and also share it with all their friends exactly so you see there's a button down below it says like a thumbs up here's what you do i want you to click that pointer i want to drag that pointer all the way to the bottom okay where it says the smash that i'm going to click it like a lot of times but click it so that it's blue okay make sure it's blue and then make sure you obviously click subscribe and that will all be good and then obviously share this stream on facebook anywhere you got and and we're going to be pretty happy with that wait michael let's get started let me go ahead and bring out the presentation guys i've been in the presentation so we you guys can see what we see and hold on let me see your comments let me see your comments are thank god it's all working this is good this is good stuff all right we had some issues but now works are real good all right so here to cold michael you see what i see yes you do all right absolutely so here's the code so michael give us a round down well you're the you know you're the guy here absolutely man so the number one thing i want to introduce here is the idea that you know we run into all the time as teachers right you know what we do for our the entirety of of of clever programmers teach people how to code and so time and time again what we run into the same issue we run into is you know i understand if statements i understand for loops i understand while loops you know i can write things in order but i don't understand when somebody tells me make this game right you know even if it's a simple random number generator game or if we build a simple website you know the common thing they run into is i have no idea how to put these things together right so today i want to introduce to you an idea that's called software architecture which sounds really fancy and complex but it's actually really simple and what it is it's the it is the process that we use to take an idea break it apart understand how the data works there and and how we're representing our game or or our website or all these things and then use code to actually implement that idea yeah so so guys drop in the comments below that is actually one of the biggest challenges that a lot of our students have you know in profit of javascript and profit with python right they ask the questions right they learn all these things but then they they get hampered with the question of like i do not know how to get started like like yes you know i can build things from a tutorial but when it comes to actually building something basically from scratch taking idea that you have in your mind maybe that's building some kind of an app or anything right it's always hard and the reason why it's hard is because you guys do not know the process it takes so that you can kind of build this idea so you can spread that idea into smaller parts and actually get started so drop in the comments below if you act if you have that same problem you know which is being able to start an idea being able to start a project all on your own without anybody's help i want to see it drop that in the comments below but michael continue on absolutely man so let's move on to the next slide here i want to talk to you a little bit about you know what we have is is the common thing people ask is you know python javascript now don't get me wrong it is really important for people to choose the right language for the right job right if you're working in the web the biggest thing is javascript yeah if you're doing data science the biggest thing is python if you're going to make a triplea game that has all these graphics going on you probably want to do like c plus so the right language for the right job absolutely right but the biggest thing that people miss again and i want to reiterate this because i found it to be so important is that it's not about python or javascript or or any of these any of these things for building the apps it's about thinking how do i take this problem how do i define its behavior understand how it works then break that up and turn it into code right this process is universal for coding it doesn't it's it's language agnostic and so this is the process i'm going to teach today and what's really cool about this is that by the end you guys are going to be able to play your very own python snake game i'm going to teach you all how to set it up you're going to do it in your browser you don't have to download anything you don't need any image assets yeah it's going to be awesome it's going to be awesome sweet sweet sweet now guys just for the fun of it i'm just very much curious guys python or i know you said it doesn't matter but i'm just curious who here is more interested in learning python and who hears javascript more of a fan of javascript drop that in the comments as well let's get some competition going i always like that i always like that but i would say like michael said right it doesn't matter what matters is basically what the demand is so if you have a job with python you should be learning parttime if you have a job that requires javascript you should be learning javascript right but there's still some absolutely dude everybody's like python python python come on guys nobody here with javascript what is this guys come on give me something out you're dying guys come on you know i'm a javascript guy python oh somebody said both thank you finally absolutely dude everything is like oh hold on somebody said yes siva thank you so much finally thank you so much there we go wait sweet sweet python python oh man man ah guys not cool come on but i mean it makes sense everybody here is we're recording in in python so it makes sense it makes sense but anyways guys one last thing before we get started right away um make sure that you go ahead and tag us in your instagram so make sure to tag us universal right now literally go i want you to take out of your phone right now take us take a picture of us right now and literally tag michael you see michael right there right there you see michael's michael's uh michael's uh what's it called michael's instagram is right there mine is right here so you can literally just tag us in your photo and be like yo let's learn some python check us on instagram and let's keep it going sweet michael all right let's continue on absolutely man so now i want to talk about you know like i said it's it's more about software architecture but i want to give you guys a taste of what we're doing today so we're just going to kind of jump into the code first a little bit and see what's going on and then i'm going to start to build this app with you guys we're going to talk about why i made some of the choices i made and i essentially give you the system that i use the stepbystep system that we go over in profit with python um at our clever programmer um course we're gonna talk about exactly how we do that and um and it's gonna be awesome so let's let's kind of let's look at the snake app here all right talk about the one that's already created you talk with the one that's already created or this one uh the snake not new snake okay let's go this one right there right yeah yep and what's cool about this is we should be able let me try and run it on my side and it should stop and run for you let's see if it does awesome so i can play it on my side so what you're going to see right off the bat is we have this really simple we have this really oh i stopped it again here we go hold on hold on hold on guys how cool does this look give us some fire down in the comments down so what we have here is a menu screen and it's just a little simple wormy thing you can press any key to start the game oh wow and you can control it here so as you can see it's just it's an awesome this is a classic i don't know if you guys had this on your flip phones back in the day but i used to play this thing all the time dude this is good this is good now i could sit here and play this all day actually i have a problem with snake we have a game over and we can restart the entire game every time it eats an apple it gets a little bit longer nice and uh and we're gonna go into exactly how that's done wow that looks cool guys guys who's excited to build this that just looks awesome from the getgo man so who's excited to build this let us know in the comments below and we're gonna build this should we shall we start or wait actually no you you you run this so what should we do next absolutely man yeah so let's see uh i'm excited to see i'm looking at the comments right now just seeing seeing what people are saying here somebody asked somebody asked are we going to make this game using object oriented system object oriented programming we will yes we will we will now funny enough if you look up online you'll see a lot of tutorials where they just kind of split it all down at one page one huge page like 400 lines just to make this one game and one page and what we're going to do is split it up not only object oriented but we're going to talk about why you know why do we do that yeah because i feel like that's the biggest problem we've run into so this is awesome guys again we're gonna go over exactly in depth what we just a fraction of what we cover in our profitable shortcut or our profitable profit with python courses um and i would highly recommend you do that and follow along here and uh let's get started by the way i don't know if we have the link here do we have a link set up for our for our profit with python let me get this for you guys because this is really nice this is the course that we do this is the course that i took and i quit my job with it's absolutely awesome thank you shall i show it then shall i show it to everybody absolutely yeah just throw that up on screen real quick and then we'll jump into the code here and keep going there awesome awesome awesome yeah so just send that maybe put that in chat or something for them so they can click on it but you guys for number one is you could you guys so actually like before we do it let's explain like what this is before we do that michael yeah of course of course yeah so this profit with python course that we do is our indepth stepbystep course where we go over teaching you from knowing absolutely nothing about python to being able to build clones um of some of the coolest apps that we have absolutely awesome one of the best parts about this program is that you could take so many courses right where you kind of step through and by the end it's like okay i built some cool stuff you know i feel a little bit more confident but not only is our content absolutely awesome this is some of the best python training stuff we have you're going to get access to somebody who's going to train your code live and by that i mean they're going to work with you and look over your code and say hey like this is this is what you could do better this is how you can improve things this was one of the most helpful things for me now also we have weekly live training calls as it says there and you get community access to all of the awesome people we have yeah this is one of the most powerful things um yeah how many how many members do we have in that community right now like a lot it's huge it's huge huge i think it's a way i could pull up here over a thousand i think at this point over a thousand or something guys it is beyond anything else like the community is one of the biggest points between the community between the training like if you're looking for something where it's you know this is not just the course where you are simply going to be you know going there and going through videos this is a breathing and living course it's basically a boot camp like you go in there right you have a community a community of people who are helping each other right through slack you have python training calls right python train calls by one of our amazing amazing guys like jacob right so you're gonna be learning for that i tell that you have the python training modules right you've got your success coaches and like michael do you can you explain what a success coach is what they do for us yeah man the success coaches like i said are probably the most important part for me yeah um it's one thing to watch a tutorial in code it's another thing to do that and submit that code and have somebody look over the code and tell you this is what you did how could we do this better and this is what you did really well exactly exactly and they're gonna be there to help you every step of the way you've got any questions they're going to be there if you have any suggestions and they're going to be there they're always going to be there they're haunting you well no not really not really but you get my point so yeah and most importantly i think the really important part is that earning earning killing with python could be can you talk about that for you for a second absolutely man so the biggest thing that people want to learn python for or javascript is that the reason they do this is you know maybe they want freedom or maybe they want to make a a bigger income for their family or maybe they want a side business most of the time right people want to use these skills to do something and make a real impact yeah and it's one thing to learn it as a hobby and that's fun it's another thing to take those skills and to be able to make an actual difference in your own life like i did and with the help of of this course so exactly that's the biggest thing is that we're not just teaching you the skills about how to do python we're also going to help you figure out how to use those skills and make a real difference in your life make some money exactly absolutely man exactly so you can see obviously you know one of our instructors obviously quasi right you know kaz you guys know kazi right what's up guys if you're watching um yeah you guys know jacob right obviously jacob you know as our python coach as well we've got 200 200 2552 students which is crazy and obviously we have a lot of testimonials coming through here you can you can take a look at them and then you can take a look what's one really cool part is one thing we didn't mention is a hundred percent guarantee so riskfree guarantee so if you don't like it if you don't like it on the 29th day 29th hour actually no no 23rd hour 23rd hour 59th minute and then 15 seconds you can pretty much just return it not a problem right so yeah guys check this out the link where's the link the link is in the description under this video or above this video somewhere around here actually it's below this video in the description take a look at that we'll also post um the link to this one and comment so you guys can see it as well right there this is it right here i just posted the link in comments so guys check out the link go on there check it out and if you're interested you know eventually i mean you guys should be interested because you're on here for to learn is that not right you're out here to learn because you want to become developers and this is one of the best ways this is one of the best programs that we got to help you do that sweet so i don't know anything else i should say no man i think we should get into it let's get into it bro let's get into it guys okay man awesome awesome so let's switch over to our new snake here and what you're gonna see is way more code and way less functionality and this is going to be an ongoing theme here um we're going to talk like i said a lot about the architecture of how we build things but if i give this a run what you'll see here and this is just a basic uh basic thing that we do with pi game we have number one a display surface um so we we import pi game we import our pygame.net so this what this does is it sets up the game for us and these kind of settings here this sets the window so this is called a tuple and it's essentially a list but it can't be modified um so we have 800 and 600 here that's the width and the height we're setting up some fonts we have a game clock which uh allows us to track how many frames per second that we're going to put on the screen this is the title of the window and then we get into the real meat so this was like the setup right we haven't really done much yet we just kind of set everything up this is where things get really interesting the biggest thing in the game is the game loop so what the game loop is is the thing that essentially continues to run and provides for us the context of the game right yeah we're running and there's states that we're managing and we're worrying about you know um when is for for our case you know did we eat an apple and grow um did we turn the corner did we hit a wall things like that so this this is the loop that continues to render the game yeah now so a loop loop from just kind of from understanding loop is kind of like think of it as life right you have you know time that's going by you know for you as you guys are living you have a time that goes by every minute every single second right every second count right a second counts right and something's happening every single second same thing here except in coding right you have a while loop so you have to think about with the while loop right a continuous while loop which is basically where your this is where your your game runs your your game runs continuously every single second and this is where you make the changes on any changes that happen you know to maybe you know maybe you press the up button and you want to change you know the view right maybe you press the down button right and you want to change that view so that is what the wall wall is there for but anyways let's keep going absolutely man absolutely that's a great way to think about it so in this is where we we continue to change the state of the game we draw the graphics of the game and this is where the game happens now there's only two things i'm monitoring for right now so number one is pie game so if i highlight this here perfect you can see that pie game gives us this event.get function and what this is is it's going to give us an array of all the events that have happened inside of that loop essentially and so we go across all the events and we say okay if we have an event of type quit that means we want to close the window now something you guys probably didn't realize is that that you actually have to add this otherwise you can't close your window and it just runs forever oh nice um right it's kind of funny something you wouldn't think about now another type we're looking for is if if the event is a key down so now we're pressing on buttons right and we're monitoring that and if it is a key down we also want to check okay if it's an escape key we're going to quit the game exit the program all is done now if none of that happens it's just business as usual right we're doing the game we're moving the snake etc so all i do is i say okay let's make everything white let's update the display and then this is the clock tick function allows us to essentially have um a speed or time during the game and we'll kind of get into that in a little bit here but all this code right all this code and all we get is a white screen where if i press escape it goes away versus versus and we'll take a look here go ahead and go to our original snake and if you go to the main file because of how we've set up our code all we have is three simple statements we create a game we run a game and when the game's done running we quit so michael i'm actually very curious how can they follow along can they follow along or will they have the code after like what what can they do to actually build something like this as well yeah absolutely man so let me go ahead and post that in the chat real quick we have a few options for you um so number one i'm actually going to give you guys this link here you can watch live and if you start coding what's really cool about replyt is that it'll what do what's called a fork so essentially copies everything into your own little your own little directory and then you can start playing around and coding along with me yeah yeah so guys you want to go along with us you want to collab with us drop that in the comments below if you want to do that we'll provide that for you so you can kind of see what we're doing and also cut along which is going to be awesome so let us know in the comments below if that's what you want to do absolutely man absolutely man yeah if you guys would like that i can post that in right now and you can watch us do this live not just on the screen but you can actually watch us do it and interact with us let's do it actually let's do that michael let's do it okay okay it looks like they want it yes let me grab the link here i'll post it right here people like yes let's go awesome awesome so that's a great way to set it up now i want to say one more thing we actually have a github set up and on this github i tracked every single change that i made and how i built this app and you can go through the entire history for those of you that know git and you can actually see this whole thing so this is something where you can download the code uh the previous link i sent you is how you can code along with us okay so let me go and post the link that where they can go along with us okay where did you send it to me where did you send to me yeah i actually put it in chat already i'll put it in chat once more here put in chat go ahead and put the put the the link to where they can cut a long way along yeah yeah yeah and then the github link guys the github link to everything that uh well not not that chat give me the chat not put in slack chat okay perfect i put it in uh i put it in the youtube chat and i also gave it to you there sweetheart let me see let me see let me see let me see send to me and select sent to me and stuff absolutely there you are yeah but like yeah with the github link we will actually provide that for you guys later don't don't you guys worry we'll provide the github link for you later so you can guys cut along with us so you guys can see what michael did every single step of the way that's the really cool part so let me go ahead and provide this right there boom boom boom boom boom boom yeah sweet sweet sweet so you guys you guys can see that let me do it a few more times boom boom boom boom boom all right sweet you guys should not see that link it should be everywhere now guys but people are like i got it i got it no no need to spam me oh man sweet awesome okay so what's cool about this is this is gonna get you started with all the same stuff that we have you're gonna be able this is just the white screen so this is going to make it it's good we're going to bring up a white screen and what we're going to launch into now so now you have an understanding of the basic game loop right so the way it works is we set up a window we initialize pi game we set up a window then we say we monitor for events and you know we're only doing two things right now if we quit the game we quit the window and if we press the escape key we quit the window and then we make the window white and that's all happens in the game loop yeah so there's so so all that all that is going on in here right so escape game so when you click escape right there then you click the window and then okay got it got it okay keep going absolutely so the the basic way there are three main things we need to do we need to start the window we need to then um we need to update sorry the first thing is we need to update the uh the the logic behind the game and this is where things get really interesting and this is what actually makes it complicated so that we're going to go over this in detail as you as you are saying this i got an idea here's what we'll do let's make a comment like this like a comment like this so you guys can see what i'm talking right so as you're saying this i actually go ahead and type type up like what are the steps that we're gonna do right so let's do like number one and that's gonna be a comment do this number two do this so let's go ahead and type that up so people can see right and that like it's visual absolutely so we need to number one we need to worry about there's a few things we're worrying about here right so number one we kind of start with the window oh there we are we start with the window so we draw the window we create the window okay now we now we have something to draw on then we say okay let's update the game logic so this means you know let's move our snake let's uh find a new spot for our apple let's check if the snake ate itself by accident nice these are all things that happen okay we handle we handle input and this kind of ties in with our update game logic right so if i press a button the game logic changes a little bit and now that if i press up and it was going left before now the snake's traveling up or exactly i move it into an apple then finally we draw we use the data to draw graphics right now this is the basic the basic loop and you can kind of summarize this as clear the screen so you clear the screen it gave me some autocomplete there you clear the screen you update the game that's under the used data to draw graphics right correct that's under this right it's under that yeah we draw the drawing the game is graphics update the game is hit like handling the input the game logic all that and clearing the screen is you know every time we do this we need to clear the screen and redraw stuff nice nice nice beautiful beautiful yeah okay i like that okay i like that i like that i like that the vision i like that okay let's keep going absolutely so this is pretty common in game development here and i'm going to leave these for you guys now what i'm going to jump into is the meat of our topic today we have four big things that we need to go over that we're going to go over in detail so that you guys can understand how we break apart this problem so let me do this nas i believe there's a way where i can actually share um a whiteboard let me do this now is it okay if i share my screen here oh you can't not really okay no problem so what i'm going to do here is we'll just do it in the code so there's four big things that we want to do we want to worry about number one is think of the behavior number two constants constants number three we want to talk about the data definitions and number four we want to go over our functions now this stuff trickles down and i think you can see here we start with something that's really broad and undefined right and then as we get to the final thing functions it's very specific and we kind of know like exactly what we're working with yeah yeah okay this is what it looks like to kind of work in a game or work with any program really okay so we're using the example of making a game here so we want to understand um how does our game work what are the rules of our game right we're not making chess we're not making tictactoe we're making uh we're making snake these are different games with different rules different behaviors so first thing we need to think about is okay what are the behaviors of this game okay let's think about that i like that so we have behaviors here so number one um let's talk about for example let's talk about the screen we know that when we move a snake around if it touches the screen or if it touches the edge of a screen the game's over so we can talk about our game overstate right so here's a couple things that happen number one is the snake uh hits the edge of the screen okay makes sense makes sense yeah now another thing that might end the game here is if the snake touches itself oh right right right okay makes sense all right yeah so these are the two biggest if you have like a loop basically like it's like you're talking like a like an actual loop okay got it all right yeah and right now it's not about code it's not about how are we going to implement this it's just essentially defining your goals for your program and your what this is actually also important you're not goals so not goals are and i'm sure you know this nas not goals are things that you specifically state you don't want to worry about because what can happen is you can start having all these ideas and then eventually you get to a point where you never complete anything because you keep adding functions yeah yeah yeah yeah yeah yeah i was i met like a loop like a biscuit when a snake looks like a loop you know oh yeah yeah yeah absolutely so we have the game overstate now what's another thing well let's talk about the movement movement of the snake what's interesting about the movement of the snake here okay well when i press up you know we have a flat snake it doesn't rotate right what happens is the top of it starts to move up and then the rest of the snake's body follows behind and moves up at the same time so we can say that it's body trails it's well where are you typing michael because i can't see you typing oh here let me do this sometimes repple does this i'll refresh real quick and uh what what we're saying about the body is that you know if it doesn't just rotate around an access here i'll paste it in just a second it doesn't just rotate around and access here it follows the body completely trails the head instead so my my thing's still loading here just about done okay there we go did you get that no okay you might have to refresh on your side sometimes that happens with repple.it rebel so now we have um and it'll load and just there we go perfect beautiful so now we have um a game over state we know that that happens we know that the snake movement is interesting in the sense that the body follows the head uh what else do we know about the snake what else do we know about the snake well when it eats an apple it gets bigger yeah it grows by one right grows by one and that's one of the major mechanics of the game because of its interesting movement where you leave like this trail of where you've been and it snakes behind it and also the fact that every time you eat an apple or food or whatever it is it grows by one it starts to get really hard to manage because you know if your snake is almost as many blocks as um as there are tiles in the game board you have the whole thing filled up with snake and it's really hard not to hit yourself so that's one of the major mechanics of the game is that the body trails the head and that when it eats food it grows by one now the score is essentially how many times you've eaten an apple right so we can mention that right we'll have we'll have a score we'll have a score here and the score is essentially how how much food has been eaten i represented i've always thought it was an apple so i guess i coded it as an apple but you could call it food or or whatever um now there's two other things here we have a menu screen so the menu screen here is just the entry it shows shows one time and again it's not about the code we're just talking about what's it gonna look like to play this game what does it feel like how do we use the input think of this it's kind of like requirements for the game like you guys have to kind of draw out or write out what you want the game to look like or what the process of the game is before you start coding right i was that's making sense and when you start coding it's like oh then too much stuff is going to change and then yeah so this is perfect yeah so let's get yeah continue on absolutely yeah especially this is very common in web design where they first do a mock a wireframe of the website and then somebody will go in photoshop and make it look realistic yeah and then once they have an understanding of oh this is what we're aiming for that's when the code starts yeah exactly beautiful so we have a menu screen shows one time uh at the beginning specifically at the beginning and disappears on any key press we have um a game over screen which displays when snake hits wall or itself and we'll go back to a new game on any key press um let's see here so we have the game over we have a snake movement we have the snake and the fact that it grows we have a score we have a menu screen um and i guess the final thing would be maybe key input we would specify that and we would say that the arrow keys and w a s and d change snake the direction the direction yeah snake direction so like so basically if you press press to the right it goes to the right if you press up and you still press uh it needs to go up okay i see what you mean yeah absolutely one thing should we mention as well is that the snake movement okay oh you said body trails its head okay makes sense got it got it got it yes absolutely so this is you know this snake is a rather simple game now you could think for example think of a really really popular title triple a game like call of duty um imagine trying to list out all of these things right where it's like okay we have all these different game modes each character can customize these attributes about it um we can you know we can we can do this to these guns there's tags um now there's a multiplayer networking aspect to it this is a massive game and a massive problem and they need to make this game run with these awesome graphics in 60 frames per second it's quite a feat of software engineering so imagine you have this huge problem and you think to yourself i'm going to make this shooter and it's going to look kind of like this and then you just dive into the code the number one thing that's going to happen is you're going to code yourself in a corner oh yeah so you're going to you're going to have this what's you can think of it almost it's called software architecture for a reason you can think of it kind of like building this really brittle house where if you try to make any change the entire house is going to fall apart yeah yeah so when you take the time up front to say okay this is where the rooms are going to go this is where the garage is i want this many windows then you can start to think about okay how can i do this and make it structurally sound yeah and that's software architecture yeah think about it think of it as like what would happen if you no literally literally think of it like drop that in the comment below what would happen if you try to build a house or or hack any building without having the right plans for it the right foundation for it or anything of that sort like literally guys what would happen right yeah you just started throwing wood together and then every single time a problem comes up you just apply another two by four or you use duct tape or duct tape that's not gonna be a very sound strong uh strong building but anyways yeah let's keep going yeah absolutely man i love that insight so we have our behavior now and what's nice about reason i chose snake is that it's a rather simple game and it makes it easy to define the behavior so what we're going to go from here is we need to talk about the constants now so what we have in this game is an idea of how everything works and i'm going to jump into this idea in a second and which is the idea that as what we really do as programmers is manipulate data but before we get into that this game has a lot of what are called constants so things that never change and we want to think about those constants because if we don't think about those constants and we don't think about to ourselves like okay um you know these things don't change it's essentially things that you have to keep worrying about right so you don't define them anywhere you have to write the numbers in manually and these are called magic literals so you write these in numbers manually and then imagine if you wanted to change let's say the frame rate of the game or you wanted to change how fast the snake moved you'd have to find that in every single spot change it and hope you didn't mess that up right so taking everything that's constant and putting it into one file and or into one place where you can modify those things is really important because it's gonna it's gonna make your code easier to maintain and easier to change yeah perfect so let's do that we're doing that right now absolutely we're doing that right now so we're gonna think the first thing we do is think about okay what is constant in the game and i have you know obviously i have some understanding here but i want you first of all guys you know you've been hearing me real quick in chat i want you to tell me what are some ideas you have what doesn't change about this game what are some things that don't change whatsoever and let's see if you have any ideas that's a good question guys like what what does what doesn't change about the game let's keep going it gives because we have a delay of like 30 seconds so let's keep going with that yeah yeah and then we'll see what people what people say yeah absolutely so we have um we have some constants here so let's think how would we think about what doesn't change here and i'll give an easy answer while we let the comments filter in one thing that doesn't change for sure and this specific example is the width of the window we're working with an 800 by 600 window it's gonna stay that way the entire the entire game uh oh perfect i'm starting to see some comments here so we say um someone says the apple size and color shape doesn't change that's true um the snake's head doesn't change the speed these people say the width of the snake the size of the window apple size color okay nice yeah and a lot of these are really good too speed all of these things absolutely so and this is this is awesome this is exactly this is exactly right most of these are the are um exactly what we're going to be defining thank you guys you guys are smart you guys are smart i like it yeah definitely so let's write that down let's see some constants here what do we have for constants well we'll just list the general idea and then i'll write the code we've got colors colors we've got um the window dimensions we have um window dimensions what else do we have here let's think about this we have so the colors the window dimensions well there's going to be a size actually for each cell right because the snake kind of moves and jumps right so there's the size of cells in the game um the speed and in this game um we're doing something called where where we tie the speed of the game with the frame rate of the game so we're actually going to refer to that as frame rate here and that's because there's no like animations where like weight animations or like where it squiggles back and forth or anything like that right frame rate actually dictates how fast the game moves so yes the speed beautiful let's see what else do we have here um we have a cell size so you know if we have a certain size for a cell it's kind of this arbitrary number the cell needs a width and a height and that's in proportion to the window dimensions so we would say cell width and cell height okay okay and you know these are actually most of the most of the constants so what i'm going to do here is i'm going to create a new file config.pi and this what's going to happen in this file is we're going to create a class called config and it's going to host all of our constants now in python there isn't a constant keyword and what a constant is for those of you that don't know is something that when you create it it cannot be changed yeah um and the way we're gonna handle that it's just the value the value guys the value can't it can't be changed so let's say for example you have a constant but you know a constant like you know in this case you know let's say we have fps right like you cannot just go in later on and choose the fbs to like be 10 right it's always going to be the same yeah during what's called the run time so while the program's running fps won't change but you know if you stop the program change the values and run it again obviously that works yeah yeah okay so i know i have this from the working project i actually know that this is everything that i need uh and we have a couple of certs here too because of the way we do our cells we're essentially saying that they always have to be a multiple of 20 the width and the height and that's why we get this 640 by 480 window and these are our constants we're going to use these white colors these red colors black colors green colors what is the cell with the can you explain this one on there so cell width width divided by cell size yeah absolutely we're going to use that inside of the math of our game to determine um how far apart to draw the lines that um define the cells as well as using that to draw these green squares um that represent the snake and the apple so this cell width is actually a pixel value that represents the actual width of the square that we're going to draw okay got it got it got it makes sense make sense got it absolutely so we have these constants here and we'll go into more detail again i want this talk for you guys to be really about how do we think about structuring this program you know in our course we go in depth entirely on like okay you know how do you think about you know we have an integer value here and like these asserts and we get nitty gritty about python we really go into that and that links below for you guys to check out i would highly recommend that do that before it gets off your brain it's really important but on this talk we're going to talk about how do we think about a program how do we structure the program and then how do we implement that program awesome so now we have a config and inside of the main you know this this isn't going to do anything but we now have access to you know what's called a config the next thing we want to do okay so these are our constants we've done our constants the next step and this is actually my favorite step this step actually changed how i thought about programming we're going to talk about data definitions so what are data definitions well let me and let me bring this up here because i want to just focus on the camera first what do you think are the definitions drop in the comments below what do you think are data definitions yeah absolutely absolutely yeah i'm curious here what do you guys think the point of having a data definition is yeah yeah yeah yeah yeah what's interesting yeah let's let's let's let's start explaining that so because while they come in it's probably gonna be 30 seconds or something yeah definitely definitely so i would start by saying okay you know what's what are we doing as programmers what's so important here well your computer uses data now we're not going to get into the hardware aspects of bits and things like that but what you're really doing is moving lots and lots of data and then you're using that data to draw things to the screen and being able to interact with it whether it's just a simple console application where you draw text to a screen or and by the way some of those can seem simple on the front but do very complicated math in the back or you're building a video game you know what you're really doing is working with data manipulating that data figuring out how do i how do i represent this data and then you know drawing it and providing that to a user in a way that they can interact with it right so in fact the first computer was built i'm sure you guys have seen that i figured what the movie is it's awesome it's with benedict cumberbatch and um he built um he's he plays turing and he builds a computer that breaks the enigma which is like the the german um uh encryption that they use during world war like one or two i forget which one right so originally the whole point of it was to do data and to do it in a way where you could reprogram it and change it because that encryption would change every day so that being said right okay we work with data we work with data so the most important thing that we can do as programmers is think really hard about what data are we working with and how do we represent that data so let's think about in the context of our game here what what are we working with what is a snake game what makes a snake game a snake game what objects are in there and how do we talk about that so while you guys are thinking about this post it post in the comments here let's hear about it what do you think what makes a snake game a snake game right in terms of data you're saying right yeah exactly or just think about like the general thing so like um the fact that there is you know there's a there's a board right we have a game board um there's a snake there's an apple things like this you know this is this for the snake game this is why i chose this example it's actually uh pretty simple so what i'm gonna do is first thing i'm gonna reveal to you is the apple so what is an apple and how do we define that in code how do we represent an apple or food in code so let's think about again let's go back to our behavior again this trickles down so if we think about it right we close our eyes and we think about it we know there's a game board and there's all these cells and um the snake is traveling a certain direction and there's an apple in a cell now that apple doesn't move during the game stays exactly where it's at it can be eaten it can be eaten and then it gets placed somewhere else so it stays exactly in the same spot okay so how would i represent that in my code well what we have is essentially an apple is an x and a y that's all it is coordinate oh well x is y coordinate it's an x and y coordinate so if i go here and i bring up apple and i'll just code this one with you guys because this one's really simple we're going to make a new file we're going to call it apple dot pi and so what we're saying here is we're going to make a new data type a thing that represents something that's in our game and we're going to do that by saying creating something called the class so you you just created an app hold on let me show cause it looks like i don't see it around my side so you create an apple correct oh yeah absolutely let's see apple okay so apple okay explain why you're creating a class yeah so that's exactly what i was just talking about where we need to define data right how do we represent an apple well an apple is kind of this combination of two things it's this x location and this y location so how do we represent that well a really great way to represent this is a class a class is like this thing that takes all these different data types you know let's say it's a person for example a person could be a name and their health and their relationships to other people um and this would be a great way great thing to define in a class one apple is a thing that has a spot on the board and that's really it that's all it really has right so we would have an apple and again we cover all the nitty gritty details here like this underscore underscore init and and how this all works in python in our course in excruciating detail yeah yeah but what we really want to go over here is how do we kind of define this thing so what i'm saying here is that apple has a function and a function for those you briefly say is a function is essentially something you can call and it does stuff for you that's really broad but um it's the best way to think about it so we would say that we have we want a function here and i'm going to grab this from the code that gives us a random x and a random y now you'll see it's mad at me it's all red and underlined and that's because in python we import random here and another thing we're going to need to import and i'll talk about this in a second is our config so what does this do this function set new location essentially sets an x and a y coordinate for the apple and it gives us what it essentially does is gives us a zero it puts it anywhere on the game board from the top left to the bottom right so this can be a random number x and y that represents you know x and y on the game board somewhere and it's going to give us a random number for each one and what we're going to say here is let me fix the indenting we're going to say that when the object is created it sets this random new this random location nice nice so every time we create an apple it's going to look just like this it randomly sets a location for us and that's it that's all we do so this is the data of the apple right it doesn't draw anything we can't see it on the screen yet but what we can do is we can work with it we can delete it move it new places all these things um but this allows us essentially to create new apples and move them and um and this really represents the behavior of an apple right because when a snake eats an apple it doesn't move up one it doesn't move down one or move over three it's not predictable when a snake eats an apple it moves somewhere random again yeah somebody somebody asked the question why config that cell with 1 like what is this what is this for yeah okay so we talked about constants right so we have a width the cell width and the cell height this is how many cells are in the game right so it's gonna be um let's say it's like uh 16 cells wide and 16 cells tall i'm not sure exactly i didn't count but there are that many cells so what we need to say is give us a number between zero which is the start for those of you that don't know it's zero based it doesn't start at one it starts at zero so zero all the way to the end minus one and again these are really specific details about programming um it has to do with arrays but essentially what we're saying is give us something you can be anywhere from the start on the left all the way to the right now this config what this is is this is a constant that we defined so if i ever wanted to change the game board or i wanted to change um how big the cells were any of that i could do that because it's all set right here i just quickly change the value rerun the game and the game's different right right gotcha and so i think and i think the reason why it's also cell with minus one is because the fact that we you know since since since since in programming you guys use between zero right between the letter zero and for ex between the letter zero and the number right if you say the width is the width is you know 16 in terms of the actual values of you know address of that cell it goes from 0 to 15 right it goes from 0 to 15. and so if i if we instead instead of do minus one we said just to sell with then at some point at some point not saying always it might actually pick a number 16 instead of 15 which will cause us a problem which will basically to take the apple outside the board because again the address of those those specific cells or the apple in this case it can be between 0 and 15 not 16. okay so hopefully that explains that part as well exactly exactly and for those of you where that didn't make sense again we go over this in excruciating detail it's in the links in the chat it's also in the description give that a quick give that a click yeah before it you know just do it right now before it gets off your brain give it a give it a quick look um and just talk to our team you know you don't have to buy anything just talk to our team i'm sure they can help you yeah yeah so back to our game here we've defined our constants and we're what we're doing right now is defining our data so it's like okay how does this data work so we know an apple is an x and a y now let's get to something a little more complicated what is a snake because a snake is kind of this weird thing right it has not just one but multiple of these blocks each block has like you know i'm gonna say it briefly and vaguely now but some stuff going on and we don't know how to define that in data yet and then it changes it changes the entire game so it's like okay what do we do here well let's break it down a snake is a is this list of blocks right it's a whole bunch of blocks and each block has an x and a y coordinate okay so we have an x and a y coordinate for each each block in the snake and the snake the entirety of the snake is all of these blocks okay interesting so if we were to think about this snake then are you are you creating a new file snake the py uh not yet okay yeah i'm just in maine.pie actually got it let me make sure i'll go in there as well yeah let's make sure we're synced up for a moment here i'm on line 44 can you see me typing yeah i can see you no awesome so we have a snake and we can think of it like a list right it's a list of blocks um well we could also say that okay let's use a data structure that's inside of python that's called a dictionary and we could give it an x value so essentially real quick a data structure is something where you can say like the you get the this blocks dot x and this box dot y it's kind of like a class it's similar right um so we have an x and it would have some kind of x value right this represents where it's at on the board so let's say one it would also have a y and this represents the the height on the board for those of you that don't know in computer graphics 0 is y 0 is at the top it's actually not at the bottom but the top so if we did two it'd be two cells down essentially from the top uh and this would represent one block okay so now now we could say well if we started the game with three let's say the snake starts three long and it does if you notice that where would the next xp let's think about that how would we do the next x well it would be probably right let's say this array is called snake it probably snake the head right the head here and we'll talk about that in a second that's actually something we defined uh we will define inside of our snake class it'd be the head which would be zero plus um zero zero here we go dot x so this what we're saying is it's going to be okay this the same x coordinate as the head but actually back one because it's going to be facing this way when we start the game so what is the snake just to make that again we're getting into kind of nittygritty details here what is a snake well a snake is really a list of blocks that's really what a snake is it's a list of x y coordinates and each one is one of the segments of its body got it got it so let's let's start to implement that let's think about okay this is a snake um and this is how we're gonna work with our game so we'll go to snake and i'm quickly going to i'm just grabbing this from my reference file i'm going to make a snake.pi awesome you see that now we need to import our config because this is the object that gives us all of the constants and all of these things and we'll make a new class called snake so this does nothing yet snake isn't meaningless so okay we would define a class just like how we did for the apple guys right just at this time we're going to have different attributes and different configurations for this specific class exactly yeah and again this doesn't draw a snake this doesn't make the snake this is the data that represents the snake and we'll take this data and use that to draw the snake later so we have the we have this now okay fantastic so when we create a snake when we say okay let's make a new snake how do we um define these things what is it what direction is it facing when it starts um where does it start also you know do we have any is there any snake attributes to it yet and there is i'm going to take this again and we have this fancy function mmhmm so i'm just gonna expand it which again uses random so i need to import random and so what we're saying is init we're just saying when we create a new snake again i'm going over in high detail here when we create a new snake we're going to give it a random start x and a random start y these things are never used again these are just the starting coordinates we're going to say okay it's moving right by the way what are these guys what do you call these it came before data definitions constants right constants yeah yeah there we go somebody give me some candy because i got it right i'll give you chris high five dude so you know these constants they don't pertain to the rest of the game they only pertain to a snake so we're gonna put them inside of the snake that's where they belong yeah yeah so we have these constants and we say okay we have up down left right um we're working with strings here this kind of gets into like typing and things like that we won't worry about that but we have we're saying okay it's going to start somewhere random and you'll notice here it doesn't start on the edge ever it starts five away from six away from the left and six away from the right or five away actually um so we'd never start on the edge and uh we're gonna say we'll just start every game we start moving right and this is our initial snake this is how it starts so you'll see that it has an x and a y and it gives it the start coordinates and then it builds a few more blocks just one behind the head and then one two behind the head and you see that with the minus one minus two so this is the start of our snake this is what it looks like and this is just the data again this represents our snake okay so now what else does a snake do well a snake moves and a snake also can potentially eat an apple right we can eat an apple so i'm gonna kind of um i'm gonna grab something from our previous file here and we're gonna talk about well first of all actually i'm sorry guys let's take a step back real quick we're working on data definitions right so we said that a snake is an is a list of x y coordinates so what this you know this is kind of some surrounding stuff we have some constants here that help us build this up but where's the snake really where is the snake and the snake is right here right this is the snake this is the this is the data that represents the snake this is the data that we use to draw the snake this literally is the code that is the snake in our program just as the x and y just as the x and y are the apples in our program right so like if i go to apple y you can see this x and y this represents one object the apple but because it's snake because you know you have a uh because in snake you have what's it called you have a um the trailing tail head right like this is think of it as like the block in front of it this is the block behind it right if you think of is that my credit understanding is that is that right is that right okay yeah so basically what i see is like think of this as the head right then exactly what's the thing behind the head right which is the second block of the snake that's this that's simply going to be this number the x coordinate minus simply one and that's pretty much it and the same thing goes for same thing goes for the one behind that the third block which is going to be x minus two so yeah okay i got that's actually really interesting i didn't think of it like that way that's really cool yeah exactly so this is this is our snake now something i would love to do again if if we get if people really like this we can get back on and talk about refactoring and making things even better but we're just gonna go through with this for now yeah so now we have okay we have an apple we took our constants out so our constants are handled then we thought about okay what is a game well it has an apple and it also has a snake right but there are some things that are in and we're talking about data again there are some things that make up a game that aren't um just those things so now we need to talk about okay we are we're actually working with a construct right a piece of data that's called the game and the game does have an apple and a snake but it has a few more things so i'm going to start by saying we're going to create a new file let me know if you see this mmhmm okay beautiful so this is our game and i'm gonna start by doing a couple of imports here and you're gonna see okay we use the config we use the snake we use the apple and now we're importing the real exciting part pie game pie game is a framework that we're using to draw graphics to the screen that's a very complicated subject we're gonna let pie game handle that for us got it okay so now we have we have the imports and again it's as simple as saying okay what is a game well we start with class game we're making a game now and we start that by saying okay you know how do we how do we what's in a game you know what makes a game we have a snake we have an apple okay you know what else makes a game is actually the screen the screen um the clock makes a game right how many frames are we doing per second right the fonts that we use make up the game um these are actually the real building blocks here so we have an apple and snake but we also have all of this supporting stuff that lets us see the game essentially so i'm going to put this in and i'll quickly go over this pie game init starts and this was in our original function pie game init starts the game self dot so we say okay we have a thing called screen now and it's equal to and then pygame.display.set mode this is the screen this is the window that we display and again what do we see here constants the window width and the window height something these are constants okay which would define inside the config that py file right here so this is the window width where is it oh right there right now hold on where window and then the window height got it okay let's keep going yep absolutely now we have a clock we're saying okay there's a clock here and that's equal to again provided by pi game that handles all this like real nittygritty stuff for us uh a new clock and then we finally say okay let's have a font and we're going to use this font free sans bold and then this is just some set up for the window we say okay give it a title bar that says wormy and finally you'll see that we make an apple and a snake they're equal to apple and snake so we're using that now okay so our game has been set up it doesn't do anything yet but the data is there we now have a welldefined and articulated idea of all of the behavior of our game we have an idea of what doesn't change about our game and finally of all the things that do change of the things that we do manipulate and change and you know that makes our game fun and dynamic we have an idea of how we represent that and now it makes it really easy to understand how we might change it in order to make those changes in our game right and just as a small explanation guys the init function right there because some of you guys have asked that question guys the name function is basically when you initialize this class game this is the first thing that gets run automatically right think of it as like this is like some of you might know this word because it's called a constructor right if you don't know this word that's okay but think of it as like this is your initialization right your functional installation where you initialize everything anything you want goes in here that gets initialized so just as a small explanation there absolutely man awesome i'm glad you put that in and i want to take a quick break here and see what do you guys think about this so far you know is this is this the process of thinking about behavior taking out the constants thinking about the data is this stuff that is helpful for you you know because the biggest thing again we hear all the time is there's if statements for loops while loops but how do we make a program yeah how do we actually do something with this so is this something that you guys you know type in chat here what do you think about this so far yeah they're loving this a lot a lot of people are saying some really nice things people are like one guy aj is like love your teaching style man love your teaching style awesome awesome i'm glad you guys are liking it and if you guys want to learn more about just the real specifics like you know like what is a class and and what is this constructor thing and you know there's a lot of stuff we're not going over again check the link you don't have again just just grab the link we have a little chat thing there talk with somebody they can help you and at the very least you're gonna have an awesome conversation with somebody at the very least and they're gonna point you in the right direction so let's keep going here we have our new snake we have our data defined oh can you still hear me by the way nas yeah i can hear it perfectly okay fantastic crystal clear crystal clear so we have our we have our data defined so what's the final step how how do we finish this whole thing up well we do functions we have functions so now is the exciting part all of our data is fine we have a structure an idea of how this game comes together now we actually do stuff you know now we actually get things to run figure it out you know it's an exciting time we're actually going to figure this out now so the first thing i'm going to say is if you take a look nas at our original project not new snake but snake which should be open and awesome and you look at our main there you see how simple that is yeah it's pretty simple it's like it's like four lines of code exactly and it makes sense right we start a game we run the game and when the game is not running we quit cool i like it it makes sense so that's and that's how we've structured our data so if we go to main here and our new snake instead you're gonna see that we have all of this stuff now i'm gonna leave the comments for everybody so you can check it out but um what are some things we're doing here that we don't need to do anymore well number one we set up a clock and a wormy uh this is the title and a window and all these things i'm on line 47. um i see it now okay perfect okay fantastic so we have all of these things going on here and we do the pie game init well that's handled in our game we already wrote i kind of cheated a little bit and wrote a function right away um but it initializes all these things for us so let's get rid of that we no longer need that now we have okay you know it's erroring because these things don't exist and this is called refactoring um but now let's do this instead right let's create a game loop and let's use this code just we're going to have the same functionality but we're going to put this inside of the game and make our main look just as clean as our other one did god exactly so we're going to copy all this while that true and put inside the game that you want correct yeah exactly so i go to game and now we're going to be working with functions and we have you know the you know you would need some understanding of pi game and things like that but we you know we understand okay this is how pi game works so we're going to make a run function and we're just going to literally put this stuff in here i'm going to fix the indentation and what we should get is and let me fix this up i need to import something called sis fantastic now the final thing here is at the bottom we have a fill a clock and an update so i come into our run and while true we do these things now you're going to see okay it's all red at us why is that well display surf is actually now our screen that we made when we created this object this this works just fine our clock is now our clock object and let's see we have a screen um fantastic and the one thing i forgot that's a little syntax error there okay awesome so now we go into our main and we can get rid of all of this we can get rid of all this this is now handled in our game object sweet nice okay our game is equal to a new game we say game dot run we're gonna quit when everything's done this is also known as sys.exit so we'll just say that and i will delete a little bit of the import statement up here to clean things up and so when you basically initialize a game okay i see it now oh we have so many games now hold on so we have basically when we initialize this game right it's going to call this init that py function which is going to initialize all the things you need for the game and then it looks like michael right here you see he's running the game.run which is going to start running the game which is going to call this function and that's going to be your main game so we can see how we've kind of like took all this code that was inside the main p1 py function divide into different parts and now it's kind of divided up it's nice and clean and it makes sense that's the most important part which makes it easier for you to later on actually go about and run it right basically yes and actually and actually create it and that's and you mentioned on something that's really important and i'll i'll keep it brief for that and what you mentioned on there was that when you come back right when you come back and that's actually really important because people if you're writing code that's important people will come back and so it's important that the code is easy to maintain that it makes sense and it's easy to make changes and that's why we split things up into objects and think about how we structure our program it's just like a house again we think about the blueprint and then we build the house so now if i run this project what you're gonna see is exactly the same thing we had before the only difference is that it's a little bit smaller because we've changed our um uh essentially essentially how this um we're sorry sorry we changed the the size of the screen with our config right with our consonants okay and again we can just stop it just by pressing escape yada yada okay so now let's all we did there was just simply start the game and that was just a white screen okay i see it got it so okay yeah exactly exactly okay so now how do we go from here well the first thing we want to do is and what i like to do is i actually like to save the um i like to save the graphics for last and the way i would usually do this is by using what's called tests we don't have time to go into tests today but tests are a way that you can verify that your code works the way you think it works so i'm gonna have to do a little bit of graphics and code at the same time but i want you to pay attention here uh one thing i do that's very important is that my code that updates my game and changes the data in my game is separate from the code that changes the graphics i change the data in my game and then it takes that data and renders the graphics to the screen they're not tied together they're in fact separate and this is really important got it got it makes sense okay so this makes it easy to add functionality all of these things because they're separate so what's the first thing we can do here um let me take a look so let's let's start let's start by drawing ourselves the start screen okay the start screen so what i'm gonna do here is cheat just a little bit i'm gonna take our game loop here so this is what our run looks like now this is what our run looks like now so i'm gonna take this and put it here and now you can see it looks a little bit different and we're actually making some function calls here so let's go over that um so i'm just fixing the indenting real quick here okay so what's new about this um game loop well let's change this back to run we've run okay so it's the same quit uh well now we see okay when when we press a key instead of handling right here we call a function that handles the key events so this this makes it really easy right because instead of reading all the super long code we say okay if they press a key then we have a function that handles the key events obviously that makes sense right we're going to comment this part out this is our snake update function and then we have a draw function okay and i'm also going to comment out our game over code so what's our draw function well let's make it let's make it our draw function our draw function should draw something to the screen well what do we know happens every single time when we draw the screen number one we want to draw this background color so we don't want it to be white anymore we actually want to fill the screen with a constant that we defined to be the background color right okay we also know that at the end of drawing all of our objects we also want to update the game so we want to update all of the so this update call essentially updates um all of the graphics and things like that so then basically so basically happens that you set you set the data for you set data for for this pi game display but then you're saying okay since i set the data for you now update that data correct is that micro understanding uh pretty pretty close this fills in the background color of the screen so it just does that and then in here we'll draw our snake grid um apple and score got it would that make sense yeah exactly so all of these things will happen here okay so now um but right now if we take a look we just draw okay so we have a draw function and it's actually going to look very similar to what we have before except the background color is going to be different so let's give this a run real quick hold on hold on i'm excited to see this and i think it's background color is actually black is it black yeah it is oh so we can make this yeah there you go and finally we need to implement our handle keys right because we need to be able to um make sure that if they give us a up or a down or anything like that we can exit the game so i'm gonna go here real quick and i have a handle keys function let me find it here and all it's gonna do right is it takes if you take a look here it takes the event and the handle key takes that event and says okay awesome now i can check and see you know what am i supposed to do here what am i supposed to do here it's that simple so we're gonna make there's a whole lot more to this that we'll implement in a second but for now we're just gonna do the basics and we're gonna say that if we press escape we can quit the game okay so again it's a black screen but if i press escape then everything should quit here um let's see here we can screen still display surface quick and that's actually proper um because because that's that's how it errors we when you call sis.exit it does those things but that's okay that's what we want to happen good so we we quit the game all as well fantastic what's the next thing we're going to do well uh let's draw the grid right let's start let's let's get a grid on the screen we can start to see what it's going to look like here how are we going to do that well that's nice is that let me just guess is that inside that knit function do we draw the grid or no or is that inside like a while loop our so our data for our grid exists um it's a combination between our game and our constants so we just need a function that's going to draw lines based off that data so actually all we need to do is put a function call and we'll call it draw grid in our draw function okay cool i want you i want you guys to pay attention to something that's really powerful that's happened here it's really sneaky it's hard to see especially if you haven't been programming a lot and you haven't dealt with this frustration what we have set up here is essentially um code that is really really easy to improve upon we have two main things we do right we have our game loop everything's set up so let me go ahead and let me go ahead and fix up this and i'll add in so i added the snake update and the game over so this again this is our game loop this is handling our key events this is updating the snake drawing everything that's the grid that's um that's everything essentially and then we check if the game's over now there is one final thing below this where we will display the game over this actually goes in the game loop but what we've done is we've set up the architecture here so it becomes so easy to add features and i want to explain how easy it is check this out guys so i'm going to add a function i'm i'm not going to go over exactly how it works um because it's really simple this is our function that draws the grid that's all it does it doesn't create any new data it just draws more things to the screen so i'm going to go here okay okay fantastic okay awesome i'm going to fix up this indentation because i just have a mismatch with the indentation here i think you need to put one one more left the line no for definition like the function death uh yes thank you yeah yeah fantastic okay there you go python for those of you that don't know is really white space and white space is important so if you mess those things up it can become a problem yeah um okay so what what are we doing here well we have an x in a range it's between zero and the width uh and we jump cell size okay what does that all mean we start at zero we're going to the end of the screen and we're jumping in increments of 20 essentially so every 20 pixels we're going to draw a line straight down and then the y does the same thing we start at the top we jump 20 pixels down for the entire screen and we draw a line horizontally i see okay and very simple and guys and the cell size is just to get back to that the cell size right here right that comes from where that comes from the config where we got the cell size right we literally got okay here you know obviously if you want to get equals equal width of like lines what do you do i mean basic math right let's say it's 20 right 20 right that's that's that's 20. and then let's say you want how many how many do we want uh cells let's say you want 10 cells or 10 vertical lines right 20 divided by 10 right divided by 10 that gives you well that's actually just two but that gives just simply two cells but let's say let's say the cell width is two you do 20 divided by two that gives you 10 10 cell widths and then that way you know the width of the cell width right here and that's how that's how we know that but yeah anyways exactly so we have all the data available to us everything's set up we're ready to rock and roll so how do i make this how do i draw this it is so simple it's it's incredible how simple it is this function draws the grid right well i wish we had a function that drew everything we need in our game as a matter of fact i wish as well here we go draw a grid now i need to preface this with self okay and if i run this what are we going to see let's see here snake object oh and that's because i uncommented this so this i got a little too excited in the future here wait wait wait wait wait oh the key is game over okay yeah i'm just commenting out our update function so we're just drawing the grid right now okay and what we're gonna see here is matter of fact a grid now this is hard to see um this has something to do with rebel in the background here in rebel fortunately it's a little bit difficult to share my my code here but this displays in a window and we get this grid so this is the start of of our grid we have our grid now yeah now we need to store it you guys might not be able to see this but it's right here you guys should be able to see right there i'm gonna highlight right there you guys see that right there yeah you guys can see the lines right there as well that is pretty dang cool like hi guys how cool is that like drop that in the comment below you just drew a grid with python that my friends is pretty much pretty epic so yeah drop in the comments below give us some hype out here because we're doing some cool stuff michael's doing some cool stuff out here and it's teaching you amazing knowledge all right now here's what's really cool guys i think you're really gonna enjoy this because what you're going to see happen is up until now right it's like oh my god all this time and all we have is a grid it can kind of feel like that but things are going to pick up really really fast and you're going to see because of how we structured our code it kind of takes a little bit to get started but once we get started everything has been set up so easy for us it's it feels like plug and play it's really easy i love it so okay so we have here now um a grid and by the way for you guys this is this is one of the examples of how easy it is right this is kind of hard to see well we we have a white color and we know exactly how to get to that that's a constant we defined run this again well what what did you just change oh you changed this you changed the config that white correct that's it that's it nice oh look at that white red oh that is fancy man all right i like it absolutely man now again we're having some weird issues here with the windows and this is due to rebel.it but um this would display in a window normally okay fantastic so we have this going everything's going well fantastic and we can quit out this just by pressing escape all as well so now um let me undo that and change it back to dark gray so that you guys can when we end up you're going to have the same code that we did now what do we do well i've i wanted to draw a grid because you know i wanted something exciting for you guys you know we're getting somewhere we're going to take a step back one more time and think about this data uh and how to write the functions for it and then it's as simple as drawing them to the screen so what is a snake we're going to jump into the snake file and we need to think about how does the snake because we need to update the snake every single time right right so we're going to think about okay how does the snake um how does the snake update how does the snake update well what the snake does and this is how we're gonna move our snake right first of all we defined our data really well our snake is a bunch of blocks so how could we move our snake and get that behavior that we're getting where when it turns right it doesn't rotate but instead it kind of trails its body right well if we have a bunch of blocks we can move the snake by deleting the block on the back and then adding a new block on front right so it'd be like this essentially so it like starts like this and you just kind of hop scotch away okay that makes sense okay now what if i turn a corner well we know we would need to put a block above so let's say it's going left i think this is left for you guys it might be right for you i'm not sure so let's say we're going this direction and then we want to go up so instead of putting a block here we would put a block here right and delete block here the y plus one basically so y plus one would go like the next one will be y plus one got it okay exact coordinates okay so okay well if you think about it like that and now you're going up right you would you would take a block here add a block here take a block here add a block here well that actually that fixes that solves our problem right there that is the trailing behavior so we have this line of 20 blocks that's this really long snake and we go down one it's gonna go down one and take a block off the very end essentially and put it there then takes a block at the very end and puts it there you can see how that is how instead of rotating this line we get the trailing behavior and this was easy to do because i thought about the data how do we represent our data okay okay i got it now so basically what you're doing is you break you take it from the back you put the front instead of trying to take the front and turn it yes exactly there's no lines or rotations okay hold on actually we can draw this up check this out this is interesting okay so check this out guys i think this is brilliant just in terms of visually so i'm gonna put this up on the screen so like if you think about if you think about the snake right and you think about like like this is part one right and you think these are all blocks you guys can see oh actually hold on you guys now you guys can see what i see right there these are all blocks right there boom boom think of this as a snake okay now what happens when you want to turn it so let me do one more yeah so these are all blocks right these are all just you know x by coordinate blocks what happens if you want to turn let's say you want to take this dick take this snake and turn it down right let's say we want to turn it down well what we can do is that and just make it let me make sure that i'm explaining this right because i'm just a student here right just kind of trying to understand what's going on here right what's gonna happen is like this block is actually gonna the block on the end is gonna be taken let me let me point from here the block on this end is going to be taken and put down to here right so if i now do this for example if i now do this right it's gonna go down to here which is gonna bring it over here right then the next block is gonna go down from here and gonna go up to there yep right we're just gonna go like that right and it keeps going and going and going ah this is it yeah and so this kind of this can seem kind of complicated right it's like okay how do we do this in the code well let's look at our data how do we do our data it's a list of blocks so all we need to do it's actually really simple we delete the last block and append a new block to the very front of it that is in the direction we want to go whether it's forward up down left or right so we take a look here and i'm going to grab the update function snake from our game and put it in so you guys can take a look and we're going to talk we're going to go over the function briefly here and then move on to the rest of the game we have can you see me in our snake file i can okay awesome here we are okay so what's going on here so let's let's take a look at this here first so we say we say this is the direction it checks the direction right it has a direction and if it's going up this is where that we make a new head and the new head is is an x and y and it's either you know if we're going up right again y gets smaller as you go up so we do y minus one for going down we do y plus one if we're going left it's x minus one and if we're going right it's x plus one then we insert so this puts it at the right spot a new head so this this adds the new head okay so what's happening here at the beginning well there are some sorry my my rebels refreshing one moment that's fine okay there are some there are some cases where you know what if we're growing um what do we do there so what we're saying is we have a check here and we say if the x and y coordinates a ju not of the body but of the head of our snake is equal to the apple so apple if the x is equal to apple x and the y is equal to apple y that means we found an apple so normally you know how normally what we're doing is we're deleting the last block that's how we move which is handled here right well instead of deleting we don't want to delete we actually want to add a new block so it grows one so we don't delete and we set apple to a new location got it okay makes sense so because because snake and apple have this relationship when i call snake dot update it actually takes an apple i see i see you see interesting okay well i might look at my look it looks like my code is refreshing as well and i'm gonna paste in i'm not pasting guys for those of you who are asking i'm gonna paste in the code right now so you guys can like go along with us i'm gonna paste it a few times so you guys can see it but yeah yeah oh yeah that ripple link definitely do it's actually just the michael slick new snake uh just without the hashtag there and that if you just copy and paste that in that they can use that to cop to follow along with us beautiful so i just place it in beautiful awesome okay so now again if i come back to the game so our snake is done actually the entirety of our snake is done it's not being drawn yet but it does exist okay um so now we need to check is the game over and there's this one's really easy too we're gonna go into our config and we're going to let's see or not our config my bad we're going to create a function called is game over inside the py right what's that inside that game.py yes exactly so this function exists right here i just put it in and what does this do well this function now this is a big if statement and again i love some other time we can go over refactoring and making code really clean and easy to read and run more efficiently but what do we check well we're just checking first of all this is saying did we go past the game board so this is checking if the x and y coordinates are um less than the width or greater than the maximum width and then same with the y did it go over the top negative one or did it go um past the bottom then we call something called reset game which we'll talk about in a second um otherwise uh did the snake hit itself and that's another thing here so did the snake hit itself so those are our two conditions those are our two conditions these are big reasons this is a big effect so that so this if basically checks if like the snake that had right is if biscuit if you think about the front of the snake is outside of the actual coordinate so it has a negative one coordinate right so that's part one or this the space that equals the basically the right side or him i think this right wait no shoot wait no essentially essentially we just check the x and y of the snakehead and we make sure it's not outside of the screen got it got it got it through here got it makes sense okay and then i have a little helper function called reset game what does it do it actually deletes the snake in the apple makes a new snake in apple and returns true every time cool cool okay so this is all it does this is all it does now we have a snake and it's been and it's been updated so i what i want you guys to see here something interesting is going to happen you're not going to see a snake but the game will end so i'm going to press play here let's see it and it's loading it's getting everything started all right cool i'm excited starting x still working still working here's our awesome now we're getting a screen finally so what you're going to see is at the see how it went black yeah why did it do that do you guys have any ideas why i did that drop that in the comment below guys why do you think it did actually let me get let me let me take a guess hold on yeah drop that in the comment below it's a good question it's a little sneaky it has to do with the way that we approached the code so you're saying so you're saying that it ended right away well actually not right away it ended it took a little bit but it did end well is it because we need to we need to want to find where the snake starts because when the snake starts it is outside the bounding box right away uh i'll give you one more hint it's not a bug it's actually good behavior so let me see if there's any guesses here yourself that is game over on so if self that is game over okay the game over the snake went right yes actually someone got it know it with radhe i don't know i'm sure i butchered that okay but we we designed the data of our game first right so we what we have here is an actual functioning data representation of our snake so this snake is moving right right now it starts moving right that's the the initial state that's how we coded it it starts by moving right so while we're not drawing the snake to the screen the data that represents the snake is moving right and went off screen i see it so enough right off the screen right away got it yeah okay exactly exactly interesting so what we can see is oh our game is actually working this is really cool now what's you know it would be more tantalizing if we had some graphics and we're going to get that real soon here but our game is working so one thing i'm going to add now that we're missing is i'm going to our handle our handle uh key button actually you know what we'll do that in a second no problem we have a snake we have an is game over what would be cool to add well why don't we uh let's draw the snake i want to be able to see the snake i think most people want to be able to see this thing see the snake see the snake starts chanting let's drop us on fire if you guys want to see the snake there we go okay man we're going to see the snake so let's go to the draw we have a draw grid and underneath draw grid on line 24. now make sure that i'm following you hold on absolutely okay i see i see fantastic this is our draw worm function again what you're going to notice here is that there's no logic in it it doesn't do any logic all it does is take uh what it needs to take and draw graphics based off that okay so how does it work we have an x and a y coordinate so these would what these x and y really represent is the pixels where we want to draw right the starting of the the starting of it i'm going to try not to go too much detail but i kind of can't help it i like to nerd over this stuff yeah there you go so so we have the x and the y and we have a cell size right which is 20. so we're gonna say okay if the x is at two it's not at the second pixel it's at the start of the second cell which would be two times 20. so 40 pixels over because we're working with pixels here and the same with the y so okay this is the x and y coordinates and then it's offset by the cell size then we have a segment so this is a rectangle we and by the way this is in a for loop if you guys didn't notice that it's for every coordinate in the snake and the in the coordinates right so this does it for every block so we get the x and y we make a rectangle so using pygame.rect so we make a rectangle starting at x and y and of what size well our constant cell size okay then we draw the rectangle so we draw the rectangle onto the screen we're going to say it's dark green and what do we draw we have to specify the worm segment rectangle i see so check this out so like what i'm drawing now so i'm saying x plus uh 20 and then comma y plus 20 right exactly right there so if you guys can specify the top left corner and then we specify the width and the height exactly so if you specify the x and y coordinate right that's your beginning coordinate right that's your top left right and then you guys can literally and then that's that's how you say the cell size and the cell config because if you do plus 20 y20 that brings it down to here which is basically makes a rectangle right away right nice interesting okay i like that absolutely and that's just how pi game works got it so uh then we draw the rectangle we specify what we're drawing on the screen the color and then you know what we're drawing okay then and this is this is just a graphics thing this isn't a functional thing again these are all graphics we have this inner segment and what it is is it's a smaller inner um uh a smaller inner uh rectangle that's being drawn so you can see it's offset by four in both directions so there's four pixels around the side um and then this is the math here you have to do eight actually because it's four on each side blah blah blah but it just draws a brighter green circle and this just makes the snake a little more visually appealing got it uh got it but this is what it does this is our draw worm function we have our data we have our constants we know how everything works how do we draw this how do we draw this do you guys have any guesses how do i drop a comment below how do we draw it guys i'm sure you guys know i'll show you guys how to draw it well i mean can i take a guess yeah absolutely we call it function we call the function you're right now where would we call the function you know if only we had a function that was in charge of drawing the game interesting can you guys see how it almost becomes plug and play here we draw worm and what we're gonna see guys is we have we're gonna get a worm it's gonna be wild we're gonna have no control over it but there it is and there it went we're ready to go wait i'll run it again because the game over right oh oh okay nice nice is that that wait that okay so now we have the warm where's the apple though no apple yet right now yeah okay interesting let's draw an apple let's draw an apple and we'll do this one you know this one's really simple apple's the simplest object we have in the game i'm gonna draw this with you i'm gonna work on this with you guys so that we can do it okay so we need to draw the apple right and it needs to have a location so we're drawing a rectangle so number one we need x and y star coordinates so this is going to follow a very simple thing here we have an apple and it has an x and we need to get the the coordinates right so it x can be up to its you know the width divided by cell size so that might be um 24 let's say but obviously we don't want an apple drawn on the 24th pixel we want it drawn on um it's it's x coordinate times the width of each cell right because we start at zero then we go 20 40 60 80 same with y so we multiply by dot config dot cell size and we're gonna do the same for y there's no difference there okay so we have our x and y coordinates now they're green because i haven't used them yet um and this is called linting but we don't need to you know we won't worry about that yet okay but now before we draw guys from what you've seen in terms of draw warm drop in the comments below what do you think it's going to take to draw an apple like what function do you guys think will use to draw an apple i mean you've seen this right you've seen this with draw warm now i want to test you drop that in the comment what are we going to use for the draw apple we're going to give you five seconds five four three two one let's go perfect perfect and just a little hint for you too if you can squeeze it in there think about the behavior here what does an apple look like well an apple in our game if you remember what it looks like is a red square that's a behavior question and that trickles down right that as you can see it trickles down to our function because now it's like okay well i don't know how do i draw an apple like is it going to be a a cool shaped apple is it going to be a red square what is it so you can see how this all trickles down so now okay we're drawing a red square well have we drawn a square before i think so i think we have i think so the one right here yeah absolutely yes we have we have drawn a square hold on can i can i can i actually try it can i actually try it yeah absolutely go for it man all right so let's try i want to go with you so i'm going to say we're going to say this is going to be okay so apple apple segment sure apple segments equals right pi and this might be better this is nitpicky this might be better as wrecked because this is a worm sec apple apple segment wrecked okay or just wrecked okay apple rack that's fine okay and then we say pie game pie game dot wrecked right wrecked and then we pass in right we'll be passing we pass in the beginning coordinate which is that top left coordinate which we think which is self.apple.x dot apple.x right uh close to it that would be just 0 through 20 or something like that okay so we need to offset by the cell size okay right so but okay so so we have the beginning section which is the top left corner right and we're drawing a rectangle right so oh i see okay i see so then self okay so i see it now so self that makes sense so cell it's actually it's just simply going to be x y comma cell size so i'm guessing that this right here is simply basically the amount of cell sizes you want to shift to the oh okay yeah it's the width it's the actual width we have a start point and a width and a height so config that cell size config config dot well cell size again yeah it's a square okay it's a square all right interesting so if we save that that's that's pretty much good right well we have the rectangle now this is just implementation specifics of pie game so uh we have the rectangle but what we actually haven't done is drawn the rectangle right okay so that's where we have to go like okay that's where we have the pie game.draw okay i got this i got this i got this again i got this okay yeah i got this so we say ply game dot draw dot wrecked right and we specify so you obviously have to give it um a screen the screen that you want to draw on so self dot screen all right self dot screen comma obviously i'm guessing in the the color right so the color is going to be red this time so config dot what was it and if you do control space it might help uh do the auto complete for you will it okay let's see right where was it hold on damn it back hold on uh game on line 42 okay control space what oh wow okay it does config that what is it and for us it would be well actually it's really easy it's red all caps oh okay just red okay i like that i like that i like that okay red and then the actual rectangle which is gonna be apple wrecked like that nice okay i love it okay is that pretty much it at this point that's it man we drew we made our apple rectangle we drew it to the screen but now there's missing one thing and the only thing that's missing is that nobody's calling this function true so where do we put that drop in the comment below you guys should know this come on you guys show us by now come on drop in the comment below what are you even doing out here what are you even doing out here but yeah i'm i'm sure we're gonna give you five seconds guys five four three two one where do we put that in and the answer is the draw function draw function we draw apple okay let's try give it a run here there's the apple hold down the game ends wait wait wait wait wait wait wait wait wait wait wait wait wait wait wait why are they getting man why do the games end uh because it it remember we can't turn it yet and it goes yeah okay okay okay make sense so now let's think about this right we we want to be able to change it right that was part of our behavior it's a very fundamental behavior of our game okay so let's think about our data again how is our data structure how does this work well our our uh snake has a direction so it and we have a function that handles all of our keys 53 to 55 is the lines so okay how do we do this well i'll show you how we do it oh this is how we do it what is it well it's very simple is the key equal to left or and then this is a d w s so is it equal to left right up or down what do we do we set the snake's direction equal to left right up or down and now here's what's cool guys i want you to see this this is really neat i'm gonna run the game and right off the bat oh it's because i wasn't typing in the right spot oh look at that guys whoa that's cool now here's what's really cool you remember how things kind of started working um even when there wasn't graphics and things like that like for example i would run the game and the game quit and that was actually a good thing it should have because the snake went off screen yeah yeah well do you guys think that this apple's going to work or no okay hold on let me see hold on hold on no well in fact it does oh dang why is that because we took so much time thinking about how our data works right now where does this happen and i'm going to let it go off screen and the game ends nice um where does this happen we go to snake and we check our update function lines 21 to 24 inside of our snake dot pi well we we're either doing two things every single time we update we either delete uh one of the blocks because that's how we move or when it gets a new apple we instead just add a new apple location i instead we're only a pending one and it grows it by one yeah i see and you see guys the whole self the up right that's why because that's why you know the whole thing of like when you click that's how the whole configuration when you click up click down and click left and right right you set the snake direction to snake that up because inside the snake dot p y what do we do we check that right right we check this you know what's direction and based on that that's where we change the coordinates interesting i like that okay awesome so now we have this working we actually grow um what do we have left here well there's actually one more display function let's do that real quick and it's the score and uh what's really nice about the score is that it's really simple to work with it's very simple data all we're doing the score right is actually the length of our is the length of our snake minus three because we start with three blocks so the score is our length of our snake okay and then and and this is just pie game specific behavior let me find the function so i can demonstrate it to you guys um draw score here we are again this is just python or pi game specific behavior so i wouldn't expect and i'm just now in the game uh nas i'm going to be online let me find it here 42 right underneath draw apple i see it okay coco cool awesome so what does this do well it's simply um it simply takes the length of the worm and subtracts three and then this is all the drawing stuff now i said this a thousand times and i didn't follow this rule do you guys know what i did wrong here i don't expect you to so i'm just gonna go for it i put data specific i'm calculating the score inside of a draw function this is bad this is bad that's a lot it's a lot of calculations right well not and maybe not performance wise but it's bad from an architecture standpoint because this draw function should do one thing and one thing only it should draw so instead i'm going to say that this draw score takes a score and when i call it self dot draw score which is where uh inside of the draw function okay uh oh is it updating for you or no got it got it yeah i said no okay good so now the draw score function just takes a score and that's all it has to do and now if i want to change the way my score is calculated or things like that i do that elsewhere right awesome so now let's run the game again and what we're going to see is that we have a score in the top right oh nice okay i love that hold on give it a plus yeah yeah man and this is it so as you can see our game is getting uh much closer i must have ran into myself there yeah um so let's see what do we have left what do we have left the end game the end game yeah we need we need to be able to continue to play this game and we also need to be able to we want to start screen we want to start screen okay so let's think about this um we kind of have two things right we have a start screen that starts up the game and that's done one time and then until they press the escape key or click on the x on the window we're gonna continually start a game and um and and do that game until game over and then when a game over happens we just press a button and we want it to go back right got it so this is what we could call our game loop so i'm going to change the name of run to game okay now what i'm going to introduce is i'm going to redefine run so here's run again but how is this going to work well for now i'll just say while true game loop now why do i do this well because when the game is over it breaks right and this game loop ends so we say self dot game loop self dot game loop okay here it is so when this ends what's the next thing we should do is draw the game over screen oh because it breaks out of it oh okay i see because so this so when this breaks because it's a game over that's gonna that's gonna trigger the game over screen makes sense got it exactly so once once the game is essentially done we would then display game over so this happens right here so now okay we just need a simple screen that prints game over on it and again these are kind of pie game specific details things we go over in depth guys in our course um i mean i can't recommend enough how important it is to surround yourself with the right people how important it is to make sure you have somebody to guide you what's really cool about this course is that it's such a small investment for how much you're going to get back from that we're going to talk in depth about the specifics of python the specifics of what's a list what's a tuple you guys are going to build um i think you guys even go over like some like web scraping stuff you guys talk about automation in python you guys talk about some basics of data science i mean it's incredible you guys they're they're adding new content all the time yeah jacob's absolutely fantastic instructor and you guys are going to get personal personal feedback and i mean if you really want you know we can talk too it's absolutely awesome at the very least they're not do we see i believe there's a little i believe there's a little um do you do you have the ability to chat there i do or is that just on your screen what that's awesome there okay okay awesome i misread that yeah um but what we go over as you can see there we have the live python training calls you're going to get stuff like this every single week recurring exclusive access to our community it's awesome definitely check it out definitely guys so guys if you if you just watch this you need if you like just a little bit like i mean i know you guys loved what we just provided for you because this was just a lot of value michael did an amazing job explaining this like seriously an awesome job for that um the guys this is just the the cusp of it okay if you're interesting at all at becoming a python developer making a killing as a python developer i'm talking like making a living as a parttime developer right and actually having a job right this is a product this is a program that's going to take you there right through coaching like these right through trainings like these through a community like this it honestly does not give this is not your udemy course this is not any course that you can compare it to it's completely different you've got the community you've got the training coaching calls which at this point we have i think two or three coaching calls every single week right you have python success coaches who are there to help you an exclusive community python trainings and so much more so if you are at all interested even just a little bit like just a tiny bit at all you're like okay this is interesting okay here's what i want you to do i literally want you to click down below in the description there's a link to cleverpro.com to this course check it out even at least check it out watch this video watch the video with this video right here that we're talking about right watch this video you'll see what we're talking about it honestly is such good value it's it's unprecedented unprecedented unprecedented as i said that right i don't know yeah but anyway guys so check it out literally go right now check out the link check it out if you're interested get it and now we will see you in the course guys sweet awesome so let's finish this game up we're going to start off we're going to end off strong here so finally like i said we changed the way our game loop works so now we do the game loop and when the game loops done we display our game over okay so this is our display game over function right here i've highlighted for you live so what happens here oh wow uh we make a font yeah i know there's a lot going on but it's it's mostly just making a font on the screen so we we make a font we as you can see it's game over that's it uh we make them rectangles so this is us drawing this all it does is draw a game over to the screen and then i have a couple hope for functions here so we say we have a draw key press message and this this is used whenever um it's used on our menu screen and also here and if you look on the right now you'll see a little press a key to play where uh it's very dark right here right here very light i see it okay okay okay right here so you're gonna see that and uh what it does is it calls another function that's called check for key press and what check for key press does is it just um constantly checks our game and once they press any single button then it will return um or it will return essentially and allow us to go forward with so let me grab that function real quick really simple function um let's see here so this is our game over screen sorry one moment here where is it that's our title screen handle events here it is awesome awesome awesome awesome and this is our check for key press so i'm going to put it next to our handle key events i'll put it right above it actually uh line 60 inside right there okay i say checkout keyboards okay cool i like it and what it does again it's you know we won't get into the specifics but it just checks if you press any any key it also double checks if you happen to press escape at any time uh during this it'll quit the game for you i see that's cool so now here we are we're running this game let's see it we can see game over and i press a key and then you get oh would you look at this guys this is there's an ear one guys give us on fire for this is completely pretty much a finished product finished game right is it not it is you know what make it one thing much cooler though just one last little detail that would be awesome yeah what is it i think a menu screen and i want the menu screen to be crazy guys who wants to get even more fancier let's do this i think a menu screen would be the last thing that would be awesome to add let's do it and you know let's take a look here at our run on line 135 uh well how would we do this right we have this true well we showed the menu screen one time interesting why don't we just run a function one time that's called show start stream nice all right i like it beautiful okay and then we need to import the show start screen right well that's right and so all we need to do let me grab it here and it's gonna seem like there's a lot going on here and i'll briefly go over it but again it's just making a bunch of rectangles and rotating it so that it's flashy i'm gonna add it right here and we will go over this code real briefly okay so what's happening again we make a title we say wormy uh we render it then we have these degrees the degrees are actually used to uh uh rotate the objects they just keep track of how far they've rotated gotcha so then uh this is our little check key thing so the second that they press a key we just return we exit essentially we're done we're done with this draw screen okay got it exactly okay and then what are we doing here again we're making a rectangle rotating the rectangle and then we draw it we make another rectangle again just making rectangles that's what these three lines do and we draw it then we draw the key press message function and that just means you know it draws that little notice at the bottom uh we update so this is allowing us to update our display and finally uh and this is you guys might have noticed we had an fps and a menu fps and the reason we do that is because we want our menu to look really smooth and rotate and not have any like lagginess to it and so i make them i make the fps 60. whereas our fps for our game actually controls how fast that we um move our snake got it whereas in the menu it's just how fast we rotate so i just made that small god it makes sense okay cool i like it all right so let's click play come i want you guys to see here oh man look at that i have a fully functioning app i click here i press any button and i start playing and immediately lose hold on guys let's let's see how many how many michael will get the most hold on let's see it hold on i'm gonna oh dude i did it last night man we're gonna be here a while hold on i'm gonna put i have like this chasing sound effect it looks really cool let's see let's see how much michael will get it let's go let's go michael i like my how to like my song it's kind of quiet dude i think but i feel the vibes hold on let's see let's see let's see hold on oh man hold on there it is oh let's go let's go let's go and you guys can see there that the the body is trailing me the score is up to date i keep getting longer and longer oh man um this is like this is getting harder and harder man yeah that this game is oh oh dang it so 24 24 24. and what's cool is i can keep playing or press escape and that ends the game nice nice man i just yeah that was cool that was a lot of fun guys who thought that was fun who thought that was like a really cool game to make and then a cool game to play guys so actually i'm so are we done at this point are we pretty much done with this game is that it right that's it man we've got a menu screen we've got a fully functioning snake game uh that lets you play time and time again um and that's it you can copy this code work on it yourself add anything you want to it perhaps you could think about you know maybe some animations or yeah i have some long if statements in there maybe there's a better way you could do that yeah and like and how can they actually go on there and uh and actually play this game right now is anybody anywhere how would or do they just go on that site and that's it yeah absolutely you guys do this if you guys would like to play this game right now go ahead and do this link i'm not highlighted nas if you could put it in um you're all highlighted and you're fancy uh and they'll be able to see that give me the link where's the link where's the link yeah absolutely let me send this to you again slack yep now oh okay okay okay okay oh uh that's wrong one second that's wrong here we go i was missing the e there you are okay so they simply run it right that's it they simply just run it they run it it's gonna fork it over into their own little project there and they can code on it change it do whatever they want and they have the game beautiful so you guys go ahead and click that link guys here's what we want you to do we want you to go ahead as you are playing this let us see who can get the highest score so i got an idea i got it i got an idea so play this game okay i want you to play this game guys okay and then go ahead and tag me and michael right go ahead and tag me and michael in in your instagram with the highest score that you got for this game i we want to see it we will we will go ahead and repost your stuff and this is going to be a really fun cup oh somebody said 38. somebody just said 38. dang would you look damn they just beat you michael damn [Laughter] picture it didn't happen oh man that's awesome this is really fun this so this was a lot of fun guys what did you think about this let us know in the comments below what did you think about building a game like this like this was a lot of fun honestly great explanation everything guys great that's everything and i hope i hope that this gave you guys more than anything a structure to follow you know the next time you're ready to build an app the next time you you know you're you're trying to do something maybe it's a game maybe it's a website first think behavior then think what doesn't change about this program then think okay the things that do change how do i represent those things yeah and then finally once that's all done once you have those three things three then the fourth thing you're going to do is write the functions that change everything got it yes beautiful beautiful guys well let's see what what if you guys got any questions for us before we leave which we're going to leave soon uh go ahead and drop that in the comments below uh yeah so yeah let us know let us know if you guys have any questions in terms of development in terms of python uh maybe profit with python you wanna yeah maybe you have a question about the course that that's great too let me see let's see yeah and again about that course man it's we went over a lot of high level stuff today you know thinking more less about code and more about how do we how do we implement these things exactly but if you guys want to learn the specifics the step by step somebody's there to lead you and guide you by the hand and teach you this is how we code this is how we're going to do it this is how we set up our environments they're going to have projects for you to complete you're going to have people reviewing your code for you you're going to have a community of people that you can ask questions with make friendships with build and code together this is what this program is there's nothing better out there and i'm not kidding i did not work for for clever programmer before i was a student i was a student first and it changed my life yeah i know that's i know that's a lot to say but it really did yeah i mean i mean i loved it so much i ended up working for them i mean you started what you started you know you did profitable shortcut right you did profit with python as well right and then you just kind of got into it and all of a sudden you are now on a team yeah it's crazy and it's it's absolutely exciting i was waiting tables before this guys i was serving food to people wow wow wow wow look i'm actually very curious like what got you to actually want to change that or what god you want to change i'm curious yeah well you know it starts with a lot of the people on this call are just like me they want to make improvements of the in their life they want to do better and uh and you know you can you can burn out right for 20 years you can keep spinning the wheels or um you know if you're really smart and and you're willing to invest in yourself right and not smart like you have to be smart to do this but you're smart about the fact that you should invest in yourself um you do that and you have help and you reach out and help and uh and the opportunities that are out there nowadays especially with what we're doing with this company is just it's so cool and i'm so proud to be working with this and with you guys and and helping out the community like this and you know i i wanted the same thing i wanted a i wanted to work towards a better life and i found clever programmer and and that's what happened for me he took a chance he took a risk and here we go sometimes you gotta take a chance make a small change right make a big change not even a small change make a big change and then that's what changes everything and it's so easy right now too guys like i want you to pay attention how easy it is right now for you this is there's no better time okay there's the job market's about to explode for software developers remote working is is at an alltime high okay this is the time to start and and you can just try it absolutely for free you sign up if you don't like it you get your money back so you this is an absolutely zero risk check it out go to the website the link is in the description check it out right now don't wait just click the link check it out there's no better time there's no risk this is the best time to learn how to do this and you're going to build stuff like this i mean how cool is that we just built a game together like a fullfledged game that really works and now you have the code too you can update it change it figure out what you want to do with it we're going to teach you all the specifics all the nitty gritty details all the pitfalls all the things to stop you from banging your head against the keyboard yeah so this is the time to do it absolutely check it out now you're going to learn from people like gnaws people from jacob uh it's an incredible community it's awesome yeah exactly exactly and i think most importantly is like right you get to learn all the nitty gritty stuff but at the same time you get to use the nitty gritty stuff right you get to use it to actually write go out there and you know maybe you want to become a coach like you know a coding coach like that's the first that you start out with then you use your the projects that you just built right you use those projects i use those projects now to go ahead and actually you know apply to companies like google right or facebook or any any maybe it's a startup company who knows right but that is your starting point right anything you do is going to be a good starting point guys so yeah seriously check it out michael's done it right guys check it out link is in the bio what are you still doing here i don't know what you're still doing here you should still you you should be on that site right now you should you should literally just like take that pointer go description click that nice link check it out and we should be all good by that that's pretty much all we got right that's it man that's all we got guys it looks like honestly i don't see too many questions right now guys seriously thank you so much all for watching it has been amazing to see you all comment and to participate with us and michael thanks so much this was so much fun i myself learned a lot um you know through this process and i love the process that you just showed to us right in terms of thinking very much high level first think about the data think about the process and then you code it up which is amazing which is amazing but you got anything any any finishing any finishing last thoughts before we leave that's it man absolutely the one thing i'd recommend is play with the code guys have fun with it it's going to be a lot of fun so yes and tag us on your instagram post instagram post yes definitely awesome guys in that case have yourself an amazing day have fun and we will see you in the next video peace out