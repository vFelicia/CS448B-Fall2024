♪ Rolling in the deep ♪ ♪ I learned coding on the streets ♪ ♪ You don't need a degree ♪ ♪ To become a ♪ ♪ Software engineer ♪ How long does it actually take to become a software developer? And how long does it take to actually get your first job? Today I have a comment for you that will actually answer all of those questions and more, so without any further ado let's jump right into it. This is Qazi, also known as Papa Python from cleverprogrammer.com. Now today I'm gonna read to you that comment, but first of all I do wanna say this is day seven of the challenge that I've been doing, and this is also video seven so I'm committed to making one video every day for the next 30 days. Now, as a motivation for you and some accountability for you, I am doing that and letting you know. So if you wanna use this time to code for 30 days in a row, you may do so alongside me and you can tag me in stuff too on Instagram posts and I will reply to you. I'm really active on Instagram so my Instagram is right here, cleverqazi. Go to my Instagram, add me, and then you can actually tag me in your posts where you're coding every day for let's say 20 minutes, 10 minutes, 30 minutes, whatever it may be, all right. So let's jump into this video. I'm gonna read to you this comment now. This comment was made on one of my videos and that video was called How I Learned to Code in Less Than 2 Months. Really amazing video, go check it out. So Jon Story says, "Today was my first day as a developer slash programmer slash designer "however you wanna call it "and this video gave me the courage and the strength "to start a new career as a selftaught developer. "And I just wanna say thank you for the inspiration, "it's been a long journey, "it took me almost two years, "not two months, to get to this point. "I started around June or July 2017, and today, January 28th, 2019 was my very first day of my first job in the industry. "Just like Les Brown says, "One idea can change your life, ""One idea can turn your entire life around." "I come to the same video where everything started. "Thank you, Clever Programmer, for the inspiration." So this was a pretty monumental moment, and it was a really incredible comment to actually have the privilege to read, and I'm gonna be honest, like, when I was actually walking around and I got it, I was somewhere outside, I saw this comment and it brought tears to my eyes. I almost wanted to like, cry, I got really tearyeyed and I messaged everybody I knew, I made a post on Instagram and everything and then I sent him a reply as well. I just thought it was so inspiring that he'd came a full circle. The video where he started, that gave him that inspiration to actually become a developer, he came back to that video to actually leave that comment. It was really remarkable and for me it was like, if my YouTube channel had any purpose, like that alone for example could be worth it. Even though we have so many people who have similar stories where they become a developer, but even if I could help one person even be inspired to do that and go on that journey, it's like my job is complete. All the blood, sweat, and time and effort I've put into building Clever Programmer is completely worth it. So that was an amazing moment. Now what do you get out of that comment? That video I made, I pushed for that you could actually become a software developer in two months, you can become a software developer in three months. And I learned actually code in two months but in the case of Jon it took two years, actually two years, maybe just a little bit less than two years to really, actually get his first job. For everybody it's gonna take a different amount of time, all right? And now it also has to do with how much time are you actually able to put in? Most people realistically are able to put in a few hours a day, maybe a few hours a week because they have prior commitments, different responsibilities, some of you might have kids, jobs, bills to pay, things of that nature. For me to actually get my first freelancing client in as little as three months and I share that story, it's because I also had no life at that time. I mean, I did, but I also didn't, right? So you have to understand that I personally was living with my parents at the time, I had lots of support, I had a financial safety net, I didn't have kids to take care of. I mean, I was still going to college and I was still working a lot, and I had to create time and I still managed my time really well and I was productive, but there were many, many, many, many days where for example, when I wasn't going to college or I had a little bit of break I had the luxury to spend 15 to 18 hours a day to code. So when I shared those thoughts about you can become a software developer in three months or two months, or you can at least get your first job in that time, I feel people take it the wrong way. And I think what they understand from that is that it's actually really easy to become a developer and he's saying that you could do it overnight. And that's actually not what I'm trying to tell you. What I'm trying to tell you is becoming a developer is very hard. If you are looking to do this just as your side income, don't do it, because it's gonna be really difficult to like there are many other ways you could earn a side income that are much easier. Like for example, look up drop shipping and learn how to use Amazon for that. Or use Uber or Lyft and it'll be much easier to actually get a job and start making side income. But get into this field if you're fascinated by it, if you find it interesting, and if you feel inspired by it, if this is something you can see yourself doing every day. With that said, if you are spending one hour or two hours a day it's gonna take you a long time and for most people, in Jon's story, it will take two years. So the majority of you by default, statistically speaking, it will take you two years or longer to become a software developer. It's a long, arduous journey. It's exciting and it's amazing, it's beautiful. Like you could tell, when he got his first job like it made everything worth it for him. But it is a long path. But if you are able to compress those hours instead of spending them one hour a week or two hours or three hours a week, or just one hour a day. If you're able to compress that timeline and just put in a lot more grind time it is very possible for you to achieve lots of those goals earlier on, okay. So this is why I push freelancing 'cause the barrier of entry is lower and I was able to start earning an income three to five months into my programming career. I also became really good in that time and again, the reason was 15 to 18 hours a day of coding. So it makes me a statistical anomaly, but my obsession is crazy. The same thing I did when it came to chess. When I was learning how to play chess, it takes people an average of 10 years to hit the USCF rating of 2,000. It took me about three years, three and a half years to actually do that. What happened is that there wasn't any like weird secret that I did, I just had put in a lot of time and energy into it because I loved it and I was just obsessed by it. Your timeline could look to give you a realistic idea from three months, rare. Three months you can get your first freelancing opportunity, I wouldn't even say fulltime job. Maybe you could get an internship if you have a lot of connections, right, but you have to push yourself and it is possible. But I wanna give you like more statistical facts in this video. So three months. You have the timeline between three months to two to 2.5 years where you could become a developer and you could get a job, all right. This is a very realistic, I hate that word, realistic, but I know a lot of people want to know what's realistic because they can only do realistic things 'specially with their times and responsibilities, so. Between three months being very aggressive and then 2.5 years 'cause that's plenty of time. You have that window of becoming a software developer. With that said, I also wanna tell you that you should pick your language and what you're gonna be specializing in because you wanna kinda see what's gonna be happening two and 2.5 years later, and if you look at the predictions and the way different languages grow it's gonna be a very major determining factor in what language you should go for. I mean, even though languages aren't that important, the ideas and what you do with them is more important. For example, if you pick C++, C# then you might get better at lots of the things that you do with that language. Like, for example, let's say you pick up Swift and you start learning mobile development, right? Swift is more predisposed towards mobile development. If you might spend a lot of time there and then later you're like I wanna become a web developer, you will need to spend a little bit of extra time to then learn the web development skills. Instead of picking something like JavaScript, let's say, right in the start of your journey where you not only learn it but then you're improving the skill set. So by the time, whether it's six months, one year, two years for you, you have this skill set of being a web developer, right. Because JavaScript is just more predisposed towards web development. You're obviously gonna need to learn other languages as you're improving, that's just a natural process, but I'm just saying which language you should kind of push towards a little bit in the start. I personally love Python, this whole channel I always talk about Python so I'm obviously gonna recommend Python to start off with. And even when you look at the trends and the 2019 predictions and the upcoming years. So let's say if you're starting your journey now, and you're kind of a beginner, might take you 1.5 to two years to become a developer if you follow the realistic timeline. In that journey, if you're doing Python web development or Python development in general, just understand that the trend for Python is going really, really high up. And 'specially with machine learning and lots of data visualization and data analysis, Python is killing it in that regard. And those things are gonna be very, very important for AI in the upcoming years. You can expect Python to continuously just be growing at a tremendous rate. I mean, it was Googled more than Kim Kardashian in 2018. Know what I'm saying? All right, so with that said, I will say have that timeline, have that timeframe so you understand what is going on. To compress it, put in lots of hours and have a solid game plan of what you wanna be doing. Instead of haphazardly just picking random tutorials to learn from, actually be building projects. And if you are building projects and you're working on a few longterm projects and as you learn new concepts you keep adding them into your projects, you keep taking those projects and putting them up on your GitHub where recruiters and people can see it. If you're focusing on your LinkedIn, your online presence, and your resume, and you constantly have all these ways of getting people's eyes on your project, you can keep compressing that timeline from two years to earlier and earlier and earlier. Another thing I always talk about is also being able to build those relationships and going to local events, local meetups where you could have access to internships and job opportunities long before you actually ever need them. And by the time you're even remotely ready you have people who you've built relationships with who will think this person is perfect, I can bring this person, train them, I've seen their hard work, I've seen their dedication, I've seen that they love coding and they've been consistent, let me bring this person in. I can just teach him. Let's say you're doing Python and they're have a job opportunity for let's say Java or JavaScript or something in web development, they'll just bring you on and teach you that, right. They know where your skill set is, they know how long it'll take to show you that. They also know you're reliable. So you might actually get a job or internship or freelancing opportunity just a few months into your career. I hope this gives you an idea and I hope I have provided you with a few tips. I suggest you go back to the part where I gave a few tips and just write them down 'cause they are very powerful. And I do wanna let you know I have a program coming out very soon in probably a week or two. It's gonna be called Earn 1K With Python and the idea behind that program is to show you the eight steps that I used to become a software developer and get my first job in less than four months. In less than three months, all right. Right around that timeline I got my freelancing opportunity, and that's where my career started taking off. I'm gonna just distill all these points, give it to you in a very simple, easy to understand fashion. And this course is all about transformation, not information. There's gonna be more stuff for you to do but it's gonna be very resultsoriented and each week we build on so that you can then have a strong foundation to become a high incomeearning software developer. Whether that's $60,000 for you or $70,000 but my goal is to give you a very strong foundation to be going towards that sixfigure mark. And with this program, my hope for you is to earn your first $1,000 with Python and then hopefully that'll give you enough momentum to keep going and growing a lot faster. Thank you so much for watching this video. I love your face, and if you wanna get emails about my upcoming course which is gonna be coming soon, and you want to have access to this epic threepart masterclass I've put together as well, then go to cleverprogrammer.com. I've put the link in the description below as well, just click there and pop in your email. That way when my course comes out I'll let you know, and I'll also give you access to my epic threepart masterclass. That's it for this video, thank you so much for watching. I love your beautiful face and as always I'll see you in the next video. Whoosh. (heavy bass electronic music)