This is Rafeh Qazi, also known as Papa Python, from cleverprogrammer.com. There are three main things I wanna talk about in this video and I'm gonna break 'em down step by step based on in what order you will need these in. And what I also wanna show you are the things that give you, they're the biggest leverage points strategically and tactically for you, that you can actually apply in your life. 'Cause I don't wanna just give you general theoretical information, so I'll also give you specific information to how I use these strategies to grow my business, or to grow my career as a Python developer, or a developer in general. (urban music with strong beat) First off, I wanna start off with how to motivate yourself to code. This is very important, because if you want to shorten your timespan from five years to achieving those things in one year, or three to five years to achieving those things in one year, or less, what you need to be able to do is, there's no shortcut to hard work. You will have to put in the work. But how you can shortcut that path is by doing that amount of work in one year instead of three to five years. So now let's talk about how you can actually do that. One is through motivating yourself, but let's be real. Motivation doesn't last very long. You'll run out of it, it has ups and downs, it's really connected to your emotions and feelings. And it's hard to trust your emotions and feelings, 'cause sometimes, I'm feeling like crap, like the other day, my friend, one of my really good friends, one of my best friends, is actually leaving LA, pretty much permanently, and it kinda like really, really made me sad, like I had this wave of, almost like tears coming out of my eyes, and I had to suck 'em back in, I'm like, I'm a man! And it was sad, but the point is, you want to understand that emotions will tell you one thing, right, so I got sad, but then, what would I have done? Normally, when I would have gone sad, I would have just, like, not slept on time, stayed up 'til really late, just watched Netflix and ate a lot of food. But because I have my system set, I'd still slept at 10 p.m., I still woke up at 5 a.m., and I still went on to do the things that I had planned for the day, and crush the next day, and my feelings completely changed. As soon as I woke up at 5 a.m., had my coffee, went to work out, I was feeling awesome. So what I wanna tell you, when it comes to coding for you, you want to code every single day, or get to that point as fast as possible. You're not gonna be able to do that through sheer motivation alone. Motivation will run out. What you wanna do is build discipline and structure. Let's study something that helps you create that amount of discipline and structure. One of the best things for that to study from is to look at how school systems and academic systems work. So, let's take school and let's deconstruct it. What makes almost majority of the students, 8090% of the students go through grade after grade? Whether they're getting Ds or Cs or Bs or As, now majority of them are not failing, majority of them are actually moving forward. So how do they make that rate of people moving forward so high? Let's take a look at a few things. First of all, they have grading in there. So now there's one layer of accountability, that you're gonna be graded on this. Then there are other layers of accountability, like the teacher that you respect is gonna be disappointed if you don't actually show up. Then there's another layer of accountability, your peer group in school. If you don't show up, they're gonna be like, hey man, so they're your friends, you kinda wanna go there, that's your incentive. And then your nonincentives, like your parents, or some people in your family getting pissed off, or them eventually saying, like, this person didn't even graduate, the fear of not graduating and what that would look like on you, so there are these many different layers. And then on top of that, you have a schedule, and you have it locked into your calendar, or locked into your curriculum every day, what class you have to show up for and at what time. And it anchors your day. And eventually it turns into habit, and it's such a strong momentum, that you can't help but show up to school every single day, so think about that. What made you, because a lot of people are like, Oh, Qazi, I don't know, I can't code that many hours a day, I don't have that much motivation. Well, a lot of people don't have that much motivation to go to school, yet they still go, they still put in the hours, they still study, and a lot of them still graduate, so they go through the entire process. So you wanna take that system and you want to implement it in your life, so you can code every single day, and you wanna be able to code so much and practice so much that in one year's time, you do what normally people do in three to five years. So effectively what I did, so I went unhealthy amounts of coding hours every single day, about 1015 hours. And it allowed me to get results that take people three to five years, but it's not a secret, it's just me putting in the amount of work you, or somebody else, would put in five years. So, that's really the only secret to getting your results faster. Now, what you wanna do is create discipline and structure so when the layer of motivation falls away, you're not just left not coding, right? Based on, well, I came home today and I just wasn't feeling like doing it, I just wanted to go to sleep. You know, Qazi, I spent like 10 hours driving my Uber and then when I come home, I'm so tired. Doesn't matter. Only code for an hour, take a nap, so that when you wake up, you're rested. Look, everybody has to shift through that phase. I was in that phase, but I still learned how to code even though I was doing my job and going to school full time. I sacrificed a little bit of sleep, instead of getting eight hours, I was getting five hours but I created enough time. If you're effective with your time and focus, you can do a lot, you don't need that many hours, you just need to be focused in that time slot. So let's talk about how you can get freedom. How you can get freedom to becoming a six figure developer or building your own startup, or hiring other developers who can work for you, whatever your dream is, how you can get freedom is through structure. Structure and discipline and consistency is what will give you your freedom. So now, let's take the school example, how we deconstructed all the little elements that they add, to add layers of accountability, and layers of discipline, you want to bring that into your coding life. So for example, here's what you can do. On your calendar, you can put an hour or two hour blocks of when you should code. And don't do it for a full year, don't do it for three months, because what I've found, it doesn't work when you have it on a recurring thing for a whole week. Because you'll do it for the first day or two, and then it just doesn't mean anything on your calendar. So what I like to do is, I like to plan out just one day in advance before sleeping. So, at 9.30 p.m., before falling asleep, I will write down on a yellow legal pad, my exact day, what I'm gonna be doing. So for example, I might say, 6 a.m., wake up. 6.30 a.m., get ready, 7 a.m., grab breakfast. 7.30 a.m., go to college, when I was going to college. And all the way down to, come back at 6 p.m. And then eat or rest 'til 7 p.m., and from 7.30 p.m. to 9.30 p.m., I would say, code. So this way, very clearly, I visualize what my next day looks like and I have put it into my schedule and it's at the forefront of my mind, so now there's this one layer of accountability, so to speak, or one anchor that you have. Now what you wanna do is build it up so you're adding more anchors, so then it's impossible for you to not be able to code every single day, and you have this giant momentum of habit built up behind you. So, what you wanna do also is something that I found really helpful is, getting one of my friends and finding out one of their goals, and what they really desire, so for example, you could take another friend and maybe they're a really good friend but they're not coders. Let's say they want to study biology, or whatever. So you find out what one of their goals is for the week, and let's say their goal is for the week to study for the biology exam or something like that, or maybe they're working on their business and they're thinking about the new product launch, whatever it may be. Then you tell them your goal and what you have difficulty with, maybe let's say it's coding and sticking to it. So what you wanna do is schedule an hourlong call with them in that week, so then for 30 minutes, you're laserfocused on their problem, and then that person switches to you and for 30 minutes, they're laserfocused on your problem, and literally, if it takes them just watching you and babysitting while you code, that's enough. And after you get the 30 minutes of momentum, you can end the call and you're already going. This way, what I find happens is that one, there's a layer of accountability, so you've gotta show up and do it. If you don't show up, that person's gonna be disappointed, just like in school. And three, you get your brain focused and dialed in, so instead of spending hours procrastinating, which is what happens to me, when you get on these calls, and when you get off the call, your brain is already going, and there's no room for procrastination. So this way that one or two hours of that time is gonna be as effective, when it comes to coding, as five to six hours of your time without having any layer of accountability, any other person there would be. Because generally, it takes two to three hours just to get your brain actually spinning at that high speed where you can learn very, very effectively. So please write, as you're watching this video, if you want this video to actually have an impact on your life, and these are some of the goals you aspire for, like being on your path to becoming a six figure developer, getting a job where you're respected and appreciated, being able to work from wherever you want, and most importantly, being able to take the creative ideas from your head and putting them into reality, then please, take notes on these so you can actually apply these, 'cause most of you are just gonna watch just for entertainment purposes, which is cool, but only about half a percent or less are gonna actually take action on this and apply it in their life. I want you to be that half a percent and I want that half percent to become the 90%, all right? So please don't just watch this for your entertainment, watch this, actually take action. So write this down and in your mind, think about who that one friend or person could be, where you can schedule that 30 minute call to add that extra layer of accountability. And also, before sleeping tonight, or even right now, plan out your next day and exactly where you're gonna put in that one to two hours of coding block. Those are my thoughts on discipline and structure. Now, other ways I'm using discipline and structure in my life, I'm creating structure because I know I'm gonna run out of motivation, I know that. So, other few things I've done are, health is important to me, one of the things I wanna do is gain weight so I started tracking my calories and I have to be hitting over 2,600, 2,700 calories, so what I started doing is, I made a pact with one of my friends that if I don't send him that I hit over 2,700 calories every day, and show him my food tracking, I don't send him a picture by the end of the day, then I have to pay him $100. Every single time that happens. So, it's a win for him to hold me accountable and it's a win for me, because there's so much pain associated to not doing it that I have to do it. Another cool idea I'll give you is, with two of my best friends, Tenzin, who's my best friend and he's also on the channel What's Dev, and another one of my best friends, his name is Matthew, and he's starting his own company for CAD Caliber, and what we do is we run a mastermind call every week, where we just essentially meet on online call, on a Zoom call, for one hour. And what we do is, we have created a money pool, so everybody puts 500 bucks a month, and three months later, we all give that money back to each other, we refund it. But only if you show up to every call. If anybody misses a call, that person's money gets distributed equally to the other two people. So for example, let's say that you have two friends. If one of the friends doesn't show up, then that friend's $500, you get 250, and your other friend who showed up gets 250. So, just some ideas to get your brain worrying about how to create discipline and structure. It's super, super important because it allows you to transcend feelings and emotions, because you never, one day you're feeling good, one day you're not. So that is my advice on how to use discipline and structure to get yourself to not only learn how to code but with a very practical viewpoint of, okay, learning how to code but keeping in mind that I wanna shortcut three to five years into one year and I want to shortcut my path to earning an income that is amazing, where I can support myself and my family and everyone around me. So that's my point on discipline and structure. The second thing that is gonna be really valuable for you in terms of how to teach yourself to code, but also in terms of getting a job or starting your company or getting freelancing clients who you can build apps for. The second thing is soft skills. So to give you an amazing example of soft skills, it looks like this. How long does it take for somebody who, let's say, is making $60,000 a year to work their way up to $75,000? For a lot of people, that might take three to five years. That's oftentimes what I have seen, if that. A lot of the time, I just see people stuck at 60 for 30 years. So let's say somebody works from 60 to 75 in five years. But if you understand how soft skills work, like in negotiation, and you're able to withstand pressure and understand how these things just work, these are principles, like law of gravity, right? So for example, every time somebody throws an offer at you, you never accept the first one. And if somebody says yes to the first time you throw something out there, it means that it was too low. Your price was too low. So what you wanna do when it comes to this is, you never wanna be the first one, oftentimes in these situations, to throw the first price out. You want to ask them where they would put it, so then you can have a counteroffer. So just to give you an example, you can spend five years going from 60,000 to $75,000 a year, or you can go from 60,000 to $75,000 by just spending 30 extra minutes during your first interview and throwing a counteroffer after the interview is over. And now, you're making $75,000 a year, right? Why it's so important and I talk so much about money, is that everybody, when you talk about money, they're like, oh, money, money, they're talking about money. Okay, money is one of the most important points of your life. You work for money, otherwise why, a lot of the times, yes, I understand that you wanna build amazing things and you want to do things that impact, right? Impact your life and every body else's. But money is a very important point of it, right? That's why oftentimes, it's like, you wanna go on a vacation but you're like, oh, I gotta work, I can't just leave. So money is a very important point. What I'm trying to say is that money gives you freedom and it gives you the ability to do what you want, right? So if you wanna take more vacations, or you wanna be more creative in your life, it gives you the room to do that. So oftentimes, we are, a lot of times, working to get a higher income, right? So if somebody is stuck at $20 an hour, and they go to $60 an hour, effectively what has taken place is what would have taken three lifetimes, they can achieve in one lifetime. You haven't just tripled your salary, you've literally tripled and cut the time in a third. What would have taken 30 years now will just take 10 years. What would have taken three years now will take one year for you to achieve in your life. This is why soft skills and understanding them is very important, and it doesn't take up that much of your time, but in terms of impact, there's a high level of impact. I hope I'm saying the name right, but I think it's called the Pareto's Principle, the 80//20 Rule. Soft skill is definitely a great 80/20 rule, where you spend only 20% of your time learning, and 80% of your results you'll actually get from this, when it comes to your career. When it comes to the types of clients you want, the ones that make you happy, the type of dream job you want, it will oftentimes depend on these skills. So those are two points, and I know that they're a lot. Just to recap real quick, discipline and structure gives you freedom, number one, so add that to your life. Number two, soft skills can really help you shortcut your path. And the last one I'm gonna tell you is number three, is mentorship. So, if you get a mentor in your life, that is oftentimes a way to choose right decisions instead of wrong decisions. It's like, if you had to go somewhere, you can try to just figure it out on your own, you can keep driving your car and through trial and error, get to where you wanna go. Or you can stop at different gas stations and ask for directions, hey, La Brea's that way, right? You might figure it out at one point, or you can just follow Google Maps. You can just follow GPS and a navigation system. Mentors oftentimes have seen the path that is gonna come ahead of you, so they tell you where to go. This way, you don't have to figure it out on your own, make mistakes, fall off a cliff, and what other sayings are there? There's one with the arrow, right? Pioneers get shot with an arrow, pioneers get scathed, I don't know, but it's basically, if you're the discoverer, oftentimes you get screwed over more than it actually helps you. So you want somebody who's already kind of discovered the path and then let them guide you to that path. So for example, they can tell you, hey, based on your skill and your personality type, you should be in analytics, you should do data analytics in Python. Or you should become a data scientist. Or, you should become a software developer, or you should become a game developer. And all of a sudden, this new whole thing opens up for you, and now maybe you would have spent 10 years figuring it out, you found it out like this, all right? For example, one of my mentors was like, hey, literally, I was charging one of my clients $50 an hour, and he's like, why are you charging them 50? You should be charging them a hundred, because as a Python consultant, that's actually very cheap to charge $100 an hour, and then I just went back to them, and I'm like, hey guys, I'm actually gonna charge you $100 an hour, and they came back to me, and they were just like, they agreed, okay, that's fine. That one moment helped me achieve more. It basically cut my time in half to the results I wanted to get, and helped me earn twice the amount of income in that same year, rather than in two years. So that's the power of mentorship, so the action step for you would be like, go to meetup.com and find places where you can get, where you can just meet with people and maybe even get a mentor if you have no money. But if you have some money, you should use it to go on platforms like, maybe, codementor.io and get a mentor. Or just anywhere where you can find somebody who's achieved, but please don't just get a teacher, all right? Get somebody who has the results you want. If you want a job at Google, find a mentor who works at Google to mentor you. Reach out to them on LinkedIn. Ask them for a coffee, ask them for a little interview. Ask them if you could speak to them over a cup of coffee for 10 minutes. Ask them if you could call them and ask them a few questions. If you wanna work at Facebook, ask somebody from Facebook. If you want somebody who's built apps with programming and has ran an agency, and you wanna become somebody who has developers working under him, go to somebody who has done that. And ask them for advice and ask them to be your mentor. Either pay them or figure out a way where they can be your mentors. Oftentimes it's very possible, you might be like, oh, but why would they wanna work with me? Listen, right now, I'm personally focusing on growing my business so I go this group called METal, it takes place in LA. It's for thought leaders and entrepreneurs, and all these crazy, literally, Elon Musks of the world go here, people who are billionaires and other people who are millionaires and then you have some broke people like me sitting there, and they consider me a newbie there. So that's where I wanna be, right? And some other people, they're managing quarter billion dollar hedge funds, and one of those guys, his name is William, and he's kinda like my mentor. And he gives me advice in life, how to actually grow my business, and what are some of the things I should be thinking about like 10 years from now that I haven't even thought about. Don't look for tutors, all right? Look for people who can actually guide you in the long term on your path, understand your pain points and have achieved the results that you want. This is a really deep video, I hope that your brain is kind of pulsating and I can almost imagine it hurting a little bit if you've watched it until this point. Which is good, because it means you're learning new things and you're gonna try out these ideas. So I'm really excited for you to be here. To recap real quick, discipline and structure gives you freedom, puts you on your path to becoming a six figure developer or a creative entrepreneur, or getting the dream nine to five job that you want. Number two, soft skills literally can help you shortcut your path from five years to one year. And mentorship can help you shortcut that path even more on steroids, but more than shortcut your path, it can show you things and opportunities you never even thought existed before, and create a whole new kind of value for you. So, complete game changer. See where you can apply those things, commit to taking those action steps and hopefully this has been really, really valuable for you. Now, this video has come to an end, but here is what I have for you. What I want you to do, below this video, please leave a comment on what is your number one biggest challenge when it comes to your programming career? It could be about learning or it could be about growing as a developer, negotiating, getting a promotion, getting a new job or getting more clients as a freelancer. Whatever it is, what is your number one biggest problem right now when it comes to growing your programming career? And I'm gonna respond, I'm gonna jump in and respond to every single comment that I get on this video. Dude, that's gonna be like too much, right? Should I do it? That's it for this video, and as always, I'll see you in the next video. (trap beat)