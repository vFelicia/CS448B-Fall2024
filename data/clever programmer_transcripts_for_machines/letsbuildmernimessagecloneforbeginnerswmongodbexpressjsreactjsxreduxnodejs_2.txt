what's going on everybody how's it going welcome everybody to this uh imessage mirn build because today we are going to be building with the mern stack apples one of the most uh popular application so stick with me guys till the very end because this is going to be huge all right let's actually go ahead and i think uh i can go ahead and demo this app to you so if you guys were here last friday with sunny uh you were able to build this thing using uh firebase and um the other one react and redux of course so like always uh i have the github link down below in the description so if you guys are interested and you guys want to um go ahead and watch it watch it or actually download it so co clone the project let's go ahead in the description the github link should be good i will be with there guys uh in any second with the github hey what is up rukia how's it going uh welcoming everybody thank you so much uh yeah what is up garyvee how's it going uh magmat my name is david how's it going yo radhu uh okay before uh yeah uh yeah i am going to build hey priyanshu what is up so guys if you don't know priyanshu but i'm sure you guys do know him uh he is an awesome student of our flagship uh course prophet with javascript and he is actually has such a great energy that it's over everything all right so let's actually dive into uh today's build but first let's take a look at how it is actually uh gonna look like okay i just adjusted a bit on my uh audio and now should be good okay i'm sharing my screen and guys this is the imessage clone that you already know and like and let me move myself to the right side of the image now i this it actually uses um google authentication we can actually later on dive into how to do um sign in with apple using firebase because that's an another awesome thing and i'm just gonna go ahead sign in here hey and we just got our very first donation thank you so much moleka uh we were just on a call today so she literally knows what's going on yes it is going to be amazing and the guys if you are pumped let me know down below in the in the chat um because this is an awesome uh build okay and gn gaming asks for a shout out there you go bro and here we go okay now let's actually go back to the imessage clone so you guys should actually be able to see it i'm gonna zoom in a tiny bit so this is literally how it is working this actually uses pusher so that it is actually real time and i'm just gonna go and type a tiny little welcome message for everybody who has joined but i mean i actually have but yeah there we go so let's just type in what's up guys and a rocket emoji and it should be there there we go so as you guys actually saw it it updates instantly it pops in there and it also updates here as well and now if i go to the youtube um thread let's go ahead and type in some stuff like i don't know like yo and it should be good and now it pops in here as well and updates here as well and of course we can go ahead and literally do the add new message and all that stuff and we are also gonna be using woo welcome dude boom and we are also gonna be using uh mongodb and all that stuff that you guys are actually used to so let's actually go into the mongodb which shows literally nothing but let's go ahead and refresh everything and here we go this is literally how it looks like so let's actually go ahead and build this thing guys who is pumped and who is ready to build the imessage clone using react redux mongodb express js node.js and the full moon stack to build today's imessage clone and put the put it on their portfolio let me know if you guys are ready i want to see it in the chat that you guys are going crazy and you guys want to build this and you guys want to be one of the 5 000 people that are going to get jobs as developer this year because we set it ourselves the goal that we want to help 5 000 people at least by the end of 2020 to get jobs as developers let's go guys show some love in the comment section down below let me know who is excited who is pumped and who's ready okay mama it says go ahead yes uh we got psycho coder in the house yo what's up uh prashun says the imessage clone looks good yes it does uh sunny our front end master ninja built this thing so it's definitely it's of course it looks cool uh yeah radu says i converted four clones to me vn using using vue okay and yeah okay uh icon 101 says whoa super hyped nice all right and let's actually i think let's actually go ahead and dive into this thing so i'm just gonna go ahead and go to this youtube video that you guys are watching so that i can show you guys what is going on and how everything how i will uh help you guys go ahead and help you guys with this thing all right so i'm on to back to safari let's go ahead and open up the video yeah with all the ads and all that stuff now uh guys if you know if you already know uh this is the link that you guys are looking for it should be working but i'm just gonna go ahead and test it out so let's actually everybody go ahead and click this link and let's open up github so that we can yeah please make airbnb and twitter mirnclone awesome we will we definitely will in the coming one one of the coming bills is going to be that uh yeah uh you wouldn't use firebase for this build that's actually an awesome question so i personally would use firebase but uh this is more like these sessions are more like to provide you guys as much value as possible so that you guys can go ahead and get jobs as developers this year so that's why we are transforming everything to the mern stack as well and we want to teach you guys as much uh backend knowledge and all that stuff as possible all right so my advice is always and i think we are even on this inside of clever programmer team that actually you should try and go ahead and use firebase as much as possible and the when the when there is a feature that you cannot do in firebase or when you need backend that's when you need to introduce uh backhand and all that stuff also the other thing is a mongodb is a much more popular um yeah i will uh explain mirin in just a sec someone asked from facebook uh i'm just gonna put it up here so that i don't forget it so and uh and the reason and the other reason that we are teaching you guys this much mongodb and the mern stack and all that stuff like what you guys can see here uh oops wrong button so this should this is actually the uh mongodb so this is the reason why we are showing you guys this much of this thing that uh because this is more more like in demand uh inside of uh of a job okay so this is required and firebase is not that popular so we just want to help you guys all right and what is mern i don't understand that so mern actually stands for mongodb express.js react.js and node.js okay so this is this is literally the tech that we will be using today okay i will be drawing it out in just a bit okay now let's actually go ahead hi victoria from germany by the way and so guys as you as i showed you guys the link is down below in the description good go ahead and go to this github link uh hit that green button copy this message uh or or this link actually copy this and let's go ahead and everybody open up a terminal and i'm just gonna go ahead and zoom in a bit and here we go hey first thing let's let's do amazon stack yes my man we will do it okay now uh what we will be doing is just pretty much just cloning this project which is the starter project okay now uh let's actually go ahead and type in git clone and paste the link that we got and that will do the work for us and in the background you can already see that it created a folder for me okay let's and here we go we should be good and what another thing that you guys want to do is pretty much just create a new folder and that will contain all the back end all right so what we will do is say uh this is going to be the front end so front end today so it's going to be imessage uh front end and the other folder is going to be the imessage backend all right whoops backhand here we go so literally we have two folders and now we can go ahead and start installing all the dependencies that we will be using today and we have a hundred and oh 240 concurrent viewers thank you so much guys let me know in the chat if you guys are excited and if you guys are ready to build today's um today's uh imessage clone okay so what what i will be doing is pretty much just list out whatever we have and oops and let's actually go ahead copy this open up a new terminal and i'm just going to paste it in here so that i am in that folder and why are you using zsa why not when i get bash personal preference my fan round friend okay that that's literally it okay uh and what i will be typing typing in here is pretty much npmi which stands for npm install and that will go ahead and pop in all the react uh dependencies that i will need and i will also open up a vs code which should be yes we have it here and on the back end side i will i will go into that folder and what i will be doing is pretty much start the get version control then set up the note package uh and yeah that will be pretty much it so what i will be doing is just type in here get in it that will start up my git version control we are on the master branch and what i will be doing is just type in npm init and that will throw a couple of questions at me uh how i want to set up this project and um so we got the package name of course we got some version uh we got the description which is good which is we can just leave all this stuff out and don't worry about them uh and one thing though is the entry point which should be server.js and the other one yeah and that will be pretty much it yeah uh of course you can go and type in your name uh into the author but other than that you don't have to worry about any of these and with that done we have our package.json file which i should be zooming into okay this should be good and i have amid some exam from the day after tomorrow but i couldn't resist myself from watching this build let's go let's go okay so what i will be doing is pretty much just add a type which will be a module and i will also add a start script whoops i will also add a start script which will be nodeserver.js and that will pretty much um do all the work for us when we are deploying this application all right now let's save this file let's go back to the terminal and we actually have um two or three dependencies that we will need to install right now and one of them is of course express the other one is mongoose which we will be using to connect to mango db and we will also add pusher okay so pusher is pretty much just an engine that we are using to make this application real time okay all right uh and let me just run through the comment section if there is any good question i can answer okay here we go all right uh so next up uh we will be just installing all these dependencies and i'm just gonna go ahead and type in here uh npm i express mongoose and pusher that's pretty much it that's oh and of course we will need the course um so that we will be able to um we will be able to uh add the course headers of course all right and that is going to be done in just a second uh this is pretty fast actually and what i will be doing is open up a new terminal and i will start up the node server it's actually going to crash a couple of times for now but let's don't worry about it uh once we add the uh server.js file we will be uh able to run this okay now i see a lot of questions regarding the hey lucy what's up uh regarding this stack that we are uh going to use today so let me go ahead and quickly draw it up on a board uh oops so i will just add the server.js file and let's go ahead and demo everything okay now what we will have is what we already have is actually a better way this is going to be this is the front end that we already have all right so this is the front end with react and redox okay this is made by sunny all right we are not going to worry about this uh today we have it uh ready next up what we will actually work with is going to be the back end all right and that is going to be the juicy the more technical part right because the front end is looks cool has a ton of technology behind it especially if you're using something like firebase but the back end is the hardcore uh technical stuff all right and let's actually yeah so on the back end we are gonna be using uh the most popular uh backend node uh backend javascript runtime which is uh node.js and we will also use server.js which is inside of node.js and oops okay so we will yeah i messed up this drawing so we will use node.js for the backend we will also uh use inside of that which is called server or express.js express.js that is actually the um that's essentially the server side javascript all right that's the easiest way and we will also use um mongodb right mongodb and to connect between the server and the uh database we are going to use something called mongoose okay so this is some badass tool this is going to make the whole connection super easy and super fast and yeah that's pretty much the back end stack and just uh just so you guys see uh this is going to be the connection between the front and the back end and we are going to be using something called apis all right this these are going to be rest apis is uh um and yeah you guys are going to pick it up as we go okay boom and yeah here we go all right now with that said let's go guys and let me know if you guys are ready and if you guys are uh if you guys are ready and pumped up to start today's build the imessage clone using the mirn stack okay let me know i want to see it in the comments i want to see them rolling and yeah okay can you please make your youtube thumbnail small it's blocking the back end um not sure what what do you mean um means like build with voice and video call function um i'm not sure if we are going to do skype but i am actually planning to do facetime which is essentially the same but you know so if you guys are pumped about the facetime build with realtime videos so like a realtime chatter app using the mern stack let's go ahead and drop some uh drop some uh fire in the chat okay now we will be going ahead and let's actually i'm gonna go ahead and share my screen and pretty much that will let's go ahead and start today's build now one thing though that i want to add is a get ignore file um otherwise it's going to be otherwise my whole github is going to be like checked with all the node modules um yeah that should do it yeah we reduced everything in the stash okay arrow okay so that's it and we can close up the gear ignore next up what we will be doing yeah facetime do it okay we will and yeah okay and what i will be doing is pretty much just lay out the whole application how it's going to be built up over here and then we will go ahead and actually do it okay so first we will be importing everything that we will need then we will uh of course have some app config so that's where uh we will create our instance we will set the port we decide the pusher and all that stuff um next up what we will be doing is pretty much just add the middlewares um okay okay yeah facetime all right that's the energy that i want to see in the chat guys let's go ahead and drop some fire okay exactly okay uh text now clone i don't know what text now is um is my instagram handle by the way oh oh it's not so boom this is my instagram account let's go ahead and drop me any messages or any requests that you guys want to actually have on your portfolio whatever apps you guys want like literally text me up i will be responding to all of them by the end of today hopefully and yeah so just drop me anything that you guys want to okay okay let's actually go back and we okay so we will add the middlewares and then we will do some kind of db config and then uh we will do uh the api routes and we will also have the listening part all right whoops let there we go all right super quickly let's just run through uh how do we set up the uh backhand uh part so this is going to be uh like just we are going to be touching the key points okay and with that said yeah i already see uh the message is coming in nice uh all right and yeah i see that everybody is asking to slow down a bit because we got complete beginners all right i'm going to slow down a bit and let's actually continue with that uh slower down speed so now what i will be doing is importing all the dependencies that we have installed all right so as you guys remember we have installed express mongoose pusher and cores so guys if you don't know what these are express is the server side javascript mongoose is a tool is an awesome tool and it's going to make our connection to the mongodb database super easy pusher is going to make our app real time and course is a core is just pretty much the course headers it's like access control and all that stuff all right now what we will be doing is let's go ahead and import it i am using the es7 uh snippets so if you guys just go ahead and type es7 in the uh extensions this is what will pop up let's go ahead and i actually highly recommend everybody go it goes ahead and installs this um because this is an awesome tool and i am you i'm gonna be using the uh these snippets all right so i'm just gonna uh import everything uh and let's start with express so i'm going to import express from express of course then uh mongoose and again and we also have the pusher and the course just like that and now what i will be doing is pretty much just create an uh application the the app instance which is pretty much like decreating a variable like syntactically okay okay now i will be typing in const app equals express and that will essentially create our app instance and next up i will be defining which port is it going to be running on so depending on if it is going to be a production or some kind of server environment where it is uh predefined which instance runs on which port we want to go uh with that port otherwise if you're running it locally we will be running it on the 9000th port okay so let's go we are typing import equals process the environment and port and we will run it on the nine nine thousand port all right next up uh let's import the middlewares otherwise we will be forgetting it and we will be like oh my god what is happening but because we are importing them now we're going to be cool so two things that we will be importing one of them is going to give our app the ability to work with json files be because with apis we are going to be working with the json files all right and the other one is going to be pretty much the course headers um and it's just going to be a super easy um way to do it okay uh sihan i i hope i spelled your name correctly or pronounced sorry um i don't know redux should i continue watching 100 uh we are not going to be actually uh building up redux we are just going to be using whatever sony has built for us okay so if you guys don't know any front end any react any redox not a problem we are going to like like this video is more uh is focused on the back end okay uh if you guys are interested let's go ahead and back last friday i think uh sonny went live with this uh and built it the front end part okay so if you guys want to go ahead and learn um react and the redox i highly recommend everybody goes ahead and watches that video afterwards okay all right now let's go back and let's actually add all the um middlewares that we are going to be using today so let's say hey what's up alex sandros uh so we will be using uh we will be using the course and that will pretty much enable all of them um yes you can ask me tomorrow whenever you want to and we will be saying app.use oops and we will add the express dot json uh ability okay now so uh next up what we will be uh doing is let's not very focus on the db for now let's just go ahead and create a uh create an api route which is essentially not going to do anything super fancy it's just going to say hello clever programmers all right so oops uh so what this does is actually if you are calling the app on the with the get methodology on the uh root it's going to fire off a function which will set the response status to 200 which in server language it actually means okay and we are going to send back hello clever programmers alright so this actually should be working and the other thing that we would do is pretty much say that the app should listen on the port that we defined up here and oops once that's act once it actually is able to listen we are going to go ahead and console.log that we are listening on whatever port we are at uh humble is me says i am 60 percent through javascript um what do you mean by that okay um yeah i learned okay and nikhil says let's do it that's amazing uh oh okay let's do it says just started javascript course and then okay all right let's go ahead and test this thing out and i will be using an app called postman which is somewhere around here and postman is essentially is going to give me the ability to go ahead and check out on on the apis that i am working with so we pretty much what i will be doing is i'm trying to move everything to so that it's going to be easy yo we just got our second donation from nitil thank you so much for the 20 rupees we really appreciate you and thank you for sticking here with us and guys if you are like this video and if you find these videos useful and if you guys want us to go ahead and do these lives every single day smash the like button and let's carry on okay now i will be zooming in a bit so that you guys can actually uh see it and let's actually uh write this uh to 9000 and yes we are getting uh back the hello clever programmers uh response so guys this is actually working this is uh looking cool so let's get i'm actually going to give you guys a round of applause because you guys deserve it so if you guys are pumped and if you guys are with me and you have a working um working api around let me know in the chat so that we can actually elevate this thing uh to a conversation so it's not going to be like a lecture stuff okay so let's actually engage i am watching uh the chat uh and all the reactions so let's go ahead and start engaging okay so next up what we will be doing is pretty much just connect to our database or actually first we need to set it up of course so we will be setting up our database then we will be connecting to it and we will start working with our uh with our uh back end all right let's do it so what i would so let's actually go to mongodb.com this is a free uh nosql database and oh i actually i'm here so uh that's actually i'm gonna go ahead and sign out so what i will be doing is pretty much you guys can go ahead and sign in uh this is a free tool that we are gonna be using um so this is going to just give us the ability to store data in here and it's going to be super easy to set up now what we will be doing is create a new project then we will name it imessagelive oops hello imessage live and once that's done uh we don't have we are not going to work with anybody else so let's actually create the project and how do you connect the react app with mirn and node though uh that is actually that's the thing that we uh it's called apis so it's going to be the api routes and yeah that's pretty much it and i am going to teach you guys today and we will actually going ahead and connect it okay now next up let's go ahead and uh is there any is there any limit of projects creating a mongodb um i couldn't reach it i don't know so what you guys need to do is pretty much uh hit this button this create cluster button this is going to give you guys three options and you want to go with the far left one because that is free um and that is perfect for today so next up uh you don't need to worry about any of these uh setups and just go ahead and there is actually a create cluster button which for some reason doesn't appear on the stream but there it is let's go ahead and hit that it's actually going to take quite a time uh to set up and provision all the stuff so in the meantime let's actually go back here uh to our code and let's actually set everything up so that we will need to just uh paste in the connection url and that will do the work for us okay so what we will be doing is pretty much create a const which is going to be a uri and next up what we will be doing is uh leave it empty and then what we will be doing is say mongoose.connect and what we want to do is add the uri in here and inside of there we will actually add these these properties this is actually needed for um mangoes because it's still under development and they st and this is kind of like a transition uh that they are actually doing so oh alibaba yeah yeah uh near a million subs that's right we are above 800k like yo that's awesome okay so with that actually the mongoose connection is going to be done and let's see how our database is doing it still needs a little time and but while that happens let's actually create our schema for uh today's build okay so what we will be doing is pretty much say uh we will we will just go ahead and create a data dot js file that where we will be importing mongoose of course hey mongoose from mongoose and that and then we will be just going ahead and create the i'm asset schema now the imessage schema is pretty much going to consist about a chat name which is going to be the chat room or the group name then inside of there we will have conversation and inside of there that we are going to have a message a timestamp and a user which will have a display name an email address a photo a uid and yeah that would be pretty much it and of course we are going to need to export that and that's just going to be a mongoose model doesn't doesn't know it so mangoes.modal and we will call the collection where we are saving it so guys if you know um so guys you remember that uh when you are using sql uh you guys are using tables right but in nosql we are using collections instead of tables right just wanted to clear it out okay whoa thank you so much so 3a 101 says i like clever programmer i gave you guys 12 subscribers by sending to my friends about your channel thank you so much brother thank you so much we really appreciate you okay now what we will be doing is let's go ahead and we have guys 264 concurrent viewers at the moment so massive shout out to you guys and i hope you guys are pumped and ready to build the imessage clone using the mern stack let's actually go ahead and continue building the thing so we will be naming the collection to conversations and we will be adding the imessage schema oh damn so you can just go ahead and copy this and paste it in here and will actually work so what we will be doing uh next up is pretty much we just need to import this and the back end is like halfway done guys so if you are this far with me smash the like button and if you guys are pumped drop it in the chat i want to know if you guys are ready to continue so we will be just importing um whoops so let's actually import data and that is pretty much okay so mango data and here we go so next up what we will be doing is go back to mongodb.com this should be finished by now and let's actually go ahead uh let's actually go ahead and create the database access okay we need to set two more things on mongodb before we can go ahead and connect to the database so while uh so let's actually do that right now so we will need to add a database user which we will call admin and we will just need to uh how to generate a password that will be done and guys you want to go ahead and copy it or store it somewhere safe because this password is not going to be retrievable anymore okay now with that done uh let's go ahead and add the user and let's go to network access where we will hit uh add ip address and guys i'm going to allow access from anywhere but as always a huge huge huge disclaimer do not do this in production environment and do not do this especially with our clients so i got a lot of questions what should we be doing and my answer for that is pretty much ask your client which what is going to be the ip address of that server where it is going to be running and while you are working on the app allow access from anywhere but then turn that off and set the ip address to that only server and your ip address so that you can literally like have control over that database and then you will be able to um help your client but when you are running the app on the client server that's what you want to add to so now let's go ahead and confirm that and go back to my screen so confirming it's actually going to say pending but we are uh good so now what we will be doing next up is pretty much go ahead go back to clusters and hit the connect button do you guys have made any kind of app website or game we might be thinking about that i don't know i'm just going to leave it open okay also make a dashboard of imessage uh uh we can we can totally do that in one of our future builds okay so yeah uh with especially with the new ios 14 uh dashboard that would be an awesome build okay like the pins right that's what you wanna that's what you mean okay so let's go back and let's hit actually everybody the connect application and where is my arrow there it is so let's everybody go ahead and hit that connect your app and there we go you want to go ahead and copy this line of code and go back to your code and you will be pretty much inserting this here you also want to go ahead and type in which db are you going to be working in so let's type in imess db and you want to also go ahead and change the password to the one that you just saved so hopefully you are either using some productivity tool like i do which is called alfred and it actually saves my clipboard um clipboard history but if you guys don't use it i highly highly recommend everybody goes ahead and just saves it somewhere safe so that you guys can go ahead and retrieve it now with that said we actually have a working uh mongodb connection so what we should be able to do is go down here under uh mongoose connect and say mangus the oops the connection no no once and open and that's when you want to go ahead and fire off a function which which will this is how you fire off a function and then you want to go ahead and cancel log db connected okay and now if we uh go ahead and go back to our terminal where it actually is running this is um oh yeah i forgot to add the js over here and we should be able to see the application running uh yeah i deleted the d from the end but the db is actually connected so guys if you guys are with me and if you guys have your uh mongodb connected to your application drop some fire let me know in the chat down below uh if you guys are with me and if you guys are ready to go ahead and continue and start creating our api routes okay okay now um let's go ahead and start building all the apis and we will act after this we will go ahead and connect it to our front end we will be pretty much done okay now we will need quite a few um so first thing first we will definitely need to create a conversation right uh and that will essentially be like we go in here and say that on the new uh slash conversation endpoint we want to go ahead fire off a function which will save down whatever we send in the body and that will be our db data and the mongodb will go ahead and create with that using that data we want to go ahead and create a new document inside of our collection right let me know if it's clear and if we can move on and then we will pretty much go ahead and handle any errors that might occur and send back 201 which means uh created in server language and with that done let's actually go ahead and test this out okay wrong direction so we should be in the new conversation in postman and let's actually go into body and i will just type in here epic cp community okay so that is going to be my chat name right and guys if you don't know why i named that failed chat name let's go back and check out the schema that we just created okay so everything is in connection with everything this is what i am sending in okay if we are leaving the conversation empty that's totally okay because we are not sending a message just yet okay afterwards we will do that but that's going to be another endpoint okay now with that said let's go back to the server let's go back and create this very conversation okay and we should be seeing the following answer if everything is uh going correctly now guys let me know if you guys are with me and if you guys are actually following it if this is actually valuable for uh to you and just drop it uh and just drop it in the chat if you guys are with me here and i want to see you guys that you guys are pumped and if you guys are ready to continue and go forward okay i see all the con uh comments coming and going as crazy okay everything is loaded um yeah icon says yeah okay and here we go all right guys please do not spam the chat i will need to uh put you guys on timeout and that's not something you want to be in okay so please keep the check clean uh this is a friendly place where everybody is here to learn and to learn actually together so let's not uh mess things up all right now i don't see uh okay so how are you going to upload this later yeah we can um okay let's actually go ahead and continue so just drop it any kind of questions that you guys have i want to see it in chat okay now uh with that done let's continue and let's create yeah okay really pumped that's the energy that i'm talking about a huge air horn for you guys all right uh and i think okay boom now love and appreciate your work thank you so much we got our reed who is super pumped yeah uh uh tommy asks creates an id by default that is correct we uh mango does it for us so that we don't have to worry about it's just like firebase does okay so firebase is actually doing the same thing um but we we are going it's literally the same stuff just firebase adds it as the name of the uh document or the the collection or whatever and we are actually going to be using that id as well okay uh i can go back rukia dropped some fire yes there we go lucy thanks for all of course my pleasure and let's actually go ahead and continue with that done okay let's go back to my screen does mongodb has any limitation yes it has but i mean it's it's pretty generous so don't worry about that okay so let's go ahead and continue and what we will be doing is let's actually say that we want to save a new message and what we will be doing is pretty much add another post endpoint and boom uh but so we got a question by priyanshu and he asks uh this might this question might there might be a question for several but when to use mongodb and when to use postgrad and sql based database honestly always use some nosql stuff never go for sql that's my personal opinion i hate sql there is definitely lots of times when sql is more efficient and you want to go with sql but as much as possible try to find the reason why not to use sql because that's like so many so much uh complex so much more complicated and you want to go ahead and and just try to keep everything as simple as possible because then you can work faster right and the faster you work the more clients you can satisfy and the more clients you satisfy the more you get paid and the more you get paid the more wealthy you are going to be so at the end of the day that's kind of what you what you're working for right and you can have more people okay so and we also got a question from coder guy mongodb storage limit um 500 megabytes i think okay jason has always still hated the sequel i've never said that but that's right okay so let's go ahead and continue so what i pasted in here is a post endpoint and we will be saying the new message endpoint that's where we want to go ahead and add all these stuff and what we will be saying is mango data we want to go ahead and update it and so we will filter on which id which uh document has the id that we are going to be passing in as a query right so we are actually going to be using this id that is generated by uh uh generated by mongodb and we will be using that to filter on uh any conversation um where we will be where we will be adding all the new uh thanks priyanshu uh where we will be adding the new messages right so let's go back and so in and next next up what we will be doing is add into the conversation uh exactly that's exactly what i was gonna say that keep the chat clean okay so next up we will be pushing in uh the request body into the conversation array okay so we will be passing in the query the id as a query we will be searching which conversation are we going to push a new message to so with that said fire up the function and handle any errors that we got we also want to console.log if there is an error uh saving the message and wipe with us asks your opinion on php no go really on no go okay and what we want to do is like yeah handle all the errors that we might get and also if everything is correct and done we want to go ahead and send back the data so that we can check it out all right let's go to our lovely postman and we want to go ahead and copy this id and go ahead and paste it in the id field and what you want to do is like we can literally go ahead and add all these stuff in here okay so we we had rishi uh with us two days back or it was yesterday no it was two days back uh so we will be uh we will be using the same photo all right so let's send it and could not send we just faced the bug guys something is happening so let's actually see what we got so uh what we had is that in the in here we had the message we have the timestamp we have the user yeah yeah yeah and mango data inside of conversation message timestamp user which is display email photo you whoa i think it's a it's another kind of problem so let's see what we had let's try to send this again and this is uh throwing some kind of error could not send eric uh oh connection okay so this wasn't actually a bug i just made a mistake of not changing the port so guys make sure that you guys are using the correct port okay otherwise you are going to be encountering issues so with that said we just got this ugly uh data back don't worry about it we're not gonna be using it so it's just a nice thing that we can see okay uh and let's actually go ahead and continue so guys if you are with me and if you guys could save a message into your mongodb database as i just could uh let me know in the chat and if you guys are actually finding this video um good and we are at 277 likes so guys if you guys if you got uh value out of this video smash the like button so that we can get this video out there to as many people as possible and that will help us go ahead and help 5000 people get jobs as developers which is our goal for 2020 okay all right now let's go ahead and check the mongodb out quickly how it actually looks like so inside of here we just got a new message there we go and let's go ahead and continue building all our uh endpoints so what we want to do is pretty much uh retrieve the conversation list right and the other thing that we want to do is retrieve message all the messages okay so let's do the first one so let's go ahead and now add a get endpoint all right so we will be saying oops app.get and inside of there we will say the get and conversation list okay uh so we will say app.get conversation list we will fire off a function a uh callback function and inside of there what we will be doing is pretty much just get everything back from uh all these conversations and then push back only the data that we will be using on the front end okay so what we will be doing is of course uh we will say mangodata.fine and we don't want to go ahead and filter out all these stuff that's not for not today so we will say error and if there is an error we need to of course handle it and with that done let's go ahead and handle the error uh so we will need a huge huge if gate and we will say error and inside of there response status is going to be 500 if there is an error and we will say uh we will send back the error okay now as if everything is working perfectly we want to go ahead and sort the data right so that we are getting it back in the correct order order okay so we will need to store the data then we will need to create a conversations array an empty array and that's what we will be pushing back okay this is literally the stuff that is going to appear over here right we are helping our front end to build that thing up right okay so i don't even know which direction point yeah so we will have our front end to build this thing up and we will be passing the relevant stuff here okay now uh once that's done we want to go ahead and map through all the uh all the data that we got back so we will say data dot map and inside of the oops inside of there we will say conversation uh data and we will say inside of here uh we would pretty much just set up uh the structure that we want to go ahead and send back so of course we want to send back the id we want to send back the name we want to send back the timestamp and this this is literally where we will be uh this is how we will be set this up and once this is done we want to go ahead and push this info to the conversation uh to the conversation array okay so that's pretty much uh how we set up uh the stuff that we will be sending back and then of course let's go ahead and send this back right so hopefully guys you understood it and everything is working perfectly so let's actually go ahead and test this thing out okay so conversation list let's go ahead and check it out and here we go guys this is working this is awesome so guys if you are if you guys are here with me and you guys have this uh just as uh i have then it's a great place to be and smash the like button and let me know in the chat okay uh so for what you not recommend angular angular is actually a pain in the butt to learn i just want to throw it out there i i see skill room ask asks about it but honestly if you're a new uh if you're new to web development i highly not recommend going with the angular because this is super hard to learn but if you already know angular let's go and great job but um but yeah if you want to if you want to work with it go for it but always react okay now now next up what we will be doing is going back to our code and we will be just a we will be retrieving the conversation and because patrick is in love with mern that's another reason why i not recommend angular pretty much it okay um it would be nice to make an application using sockets uh and sees uh usefulness uh yeah of course lucy um actually the facetime clone is going to use a couple of sockets it's not going to be using the socket io who will still use pusher because pusher is so much better so yeah that's it uh so yeah what we will be retrieving now is the actual conversation and it's going to be another uh get endpoint and inside of here we will of course pass the id in as a query and once that's done we will filter on that okay so we will be filtering on the id that we just passed in and we would just go ahead and retrieve the full conversation okay uh matt says learn whatever the companies in your area want that's pretty much it like literally that's the best advice all right so uh but learn react because that's so much better okay and the and another thing that we want to go ahead and retrieve and help the front end with is pretty much send back the uh first message the or actually the last message that we have so that we can actually update this stuff this stuff and the image okay let's go back and add this endpoint as well and what we will say in here is just a get last message endpoint and what we will do is again we will be searching it for the query inside of the query we will also say the mango data should find it should search on the uh on the conversation yes but what we will do is just send back the last one right so we will uh sort it so that the newest one is going to be on top but we want to just send back the first one which is remember this is going to be the number zero okay so in computer science we uh start counting from number zero okay now with with that said uh i think we should be good with the back end okay so guys let me know in the chat if you guys are pumped and if you guys are with me and you guys are ready to connect your back end to the front end and have a full mern stack application and ready to add to your portfolio drop some fire drop some love let me know uh who is here with me and who is ready to continue and actually make this backhand stuff this fully technical stuff which doesn't have a lovely gui and you want to go ahead and connect it to your front end okay now what we will do is pretty much just uh uh open up the front end which we already downloaded and we can actually close these two files and let's actually go in here now this is actually literally the code that sunny uh built on friday and guys if you don't have it already uh link is in the description to this one link is in down below and you guys want to go ahead and clone that project using git clone and you wanna have that over here now another thing i've done with this one is i went ahead and said uh npmi which literally means um that we are installing all the dependencies so upload the uploaded version doesn't contain the folder called node modules which is yeah this one and the reason for that is actually that this thing uh i wanna okay real info oh okay let's start that's not my stuff around so uh the reason for that it is around 160 mb's i think yeah here we go okay still calculating the size so it still doesn't know how much it's actually a super heavy uh folder and it has all the dependencies in there right so guys you can see it it's crazy amount of data and you don't want to add it on top of your github now the reason the reason being you have to go ahead and install all these dependencies and there is one more that we are going to uh install right now and that is called axios so we will say mpmi axios and that will pretty much go ahead and install axios and then we will be able to make requests to our backend right is react native better than better than c sharp uh c plus plus of course it is everything which starts with react is better than whatever you want okay and so salizabil asks when to use angular um my advice on that would be only use angular if you already know it if you're new to coding and if you're just starting don't do it it's going to be super hard and it's go it's not going to give you that much success and you will feel uh you will not feel that successful uh as you actually are because it's just super hard to learn okay so i would i wouldn't recommend using that okay now um let's go back to our uh i'm not gonna use that anymore and what we want to do now is pretty much first install our firebase or actually connect it to our firebase because uh that's how we could we can go ahead and we can go ahead and deploy now uh i got this question uh are we going to build uh a clone using react native yes we are we have it planned okay okay now let's go ahead and go to firebase.com if i was a google.com actually and if you guys don't know firebase already it's a suite of tools by google and we will be using that today uh to uh to host our application now this actually is capable of a lot of stuff and i highly recommend everybody goes ahead and learns how to use it or just go to one of sunny sessions and you will pretty much be able to learn it so we will just say imessage clone and that will be it i don't need no analytics today and um and that will actually go ahead and provision all the resource and get everything set up for us and firebase is actually super easy to use so that's part of the reason that we are using it now i am also going to open up a uh open up an instance of the frontend application that we have and it's just going to run and we will have we will be able to see it uh hot reloading okay so by the time my message clone project is ready and here we go now where is my oh okay yeah because 3000 is okay it's running okay now what i will do is go in here and wait for the project to start okay it takes a little time but eventually it will be there now next up what we would do is pretty much hit this uh web icon oh we could have used a better color so hit this web icon and when we will build a firebase code actually a good idea uh and andre alexandros asks why not host on netlify that's actually it's like personal preference right so let's go ahead and he'll hit the web uh icon and go ahead and type in imessage clone and you want to also check the setup firebase hosting next up you want to go ahead and register your app and say next next continue to console that's pretty much uh how we set up our application in firebase that's the reason that we love it so much that is super easy to use and yeah that's it all right now next up what we will be doing is go here and go here to this uh settings icon over there and what we will be doing is say project settings and go down here hit config and pretty much copy all the stuff in between the parents uh delete the comment that i just uh that i deleted over here so you guys could see that this is this was here so i just went ahead and deleted this and that will pretty much just set up all the firebase stuff that we would need now with the done we can close this file up and next up what we will uh open is going to be the sidebar.js file now there is a nice little um keyboard shortcut which is command p on mac if you guys use windows uh any of our windows buddies in the chat please help us out which is the equivalent for command p in vs code and i will be i will be saying uh we will go into sidebar js now inside of here we have a lot of lovely stuff which uh which is uh prepared by sunny but this time we are not going to be using that in fact we are actually going to delete those stuff now guys who has actually who is here uh from any of these mirn transformation sessions who has actually done this stuff let me know guys i want to communicate with you because right now it's just a yes alexander says control p awesome so right now it's more like feels like a uh lecture but i guys i want to communicate with you so let's go ahead and everybody drop in the comments if you guys have used beside uh these um this stuff that we are going to be using if you guys have a already a mern stack application on your portfolio or uh if you guys actually have worked with it so randomly high says yes uh or actually me yeah thanks thanks so much brother okay uh we got another control p so yeah that's actually lovely that you guys are ready to help out each other so next up what we will be doing is pretty much oh my god we have we almost have 200 people at the same time watching here elias says i have five i think that's the that's the mern project that's actually awesome brother that's crazy this goes out for you so great job and let's use these free builds that to put that on your portfolio and and win a job in 2020 mahey says already done clone done seven clones thanks cp team thank you so much brother for trusting in us and actually giving us the privilege to help you get a job because definitely you will get a job very very soon okay sounds cool so next up what we will be uh doing is go back to this screen and what about firebase functions we will use them too but those are like not part of the mern stack so we are doing it uh differently okay now rahul says love the setup david actually i think you were the one who added a pulley request to one of my starter projects guys if you are fine if you guys can add actual value without completing the starter project uh feel free uh to do that and we just got another lovely donation by waffy mohammed thanks for the hard work brother thank you so much for staying here with us and being here with me and actually i really hope that you are getting value out of this and we really appreciate you brother um so yeah hope that you will have a job very very soon as a developer okay next up uh let's go ahead and inside of here okay let's go ahead and add a new function in here and we will pretty much just say that let's go to the uh get conversation list endpoint and let's get the response and next up yo what's up and next up what we will do is set the chats to the data that we are actually getting back now you guys can actually see that we got this axial stuff going on and this is going to be freaking out because we haven't imported it but the reason for that is that uh we haven't actually set up our axios instance so with that said let's actually go ahead and do that super quickly so what we would do it oops what we will do is go into here add a new file which we will call axios.js and what we want to do because we already have installed yeah it's freaking out so we already have installed somewhere around here yeah here it is so we already have installed axios uh let's actually go ahead um and import it so we will import axios from axios excels there we go and we will also go ahead and create an instance which is going to be axios create and next up the base url comes and i always mess this up with this abbreviation but don't worry guys and what we will do is pretty much just say that uh the m4 the base url which we are going to be calling is literally the uh literally going to be where our application is running on so uh what we will say is http oops column and local host and 9000 because that's the port where we are running in the local environment now next up we just want to go ahead and export everything and oops instance there we go and guys literally that creates our uh axios instant and that's pretty much it so you can you guys can go ahead and and pretty much start importing this and i just want to answer this question that which is the best platform for freelancing and i would actually say if you are starting up either freelancer.com or um fiverr that's like a good playground and then when you're ready to roll uh let's go to upwork okay now uh do you use eslint yeah i think so http alexandros because uh because uh this is actually uh local and once we are going to be uh deploying uh so when it's going when it's deployed then we are going to be uh https but in the local environment it doesn't really matter and we also got the nice lovely donation from kelvin thank you so much brother i actually remember you from a lot of our a lot of these videos and lives and all that uh you have such a great energy and we really appreciate you brother that you are uh here with us and dropping these awesome uh donations so huge shout out for you and thank you so much for staying here and this goes out to you okay next up what we will be doing is yeah we we got the instance exported and don't need that anymore and inside of here what we want to go ahead and do is say uh import and we will import the axios from here and we will say axios that will pretty much import everything for us and let's actually delete all the firebase stuff i'm sorry sunny if you're here this is it and we will just go ahead and use that function to actually get uh all the chats now this will refresh every single piece uh every single chat room and this will actually go ahead and render out everything hey comment of course brother thank you so much for staying here with us and yeah i love you brother okay next up what we will be doing is inside of here uh down down below uh where we're gonna go ahead and and render out the sidebar chat i'm actually going to remove on the left bar so this is not actually how the data structure is in our case but we still want to go with the destructured version so what we will do is pretty much replace this uh data stuff to this timestamp right and we also wanna change the ch the chat name to name because that's how we actually retrieve it now what we will do is next up we also need to change the props so we need to pass in the key of course which is going to be the id that we have uh and we also want to want to pass it as the id as well we want to pass in the chat name which is the actual name and we also want to pass in the timestamp now uh just a quick question difference between fetch and axios uh as far as i know axios is like more professional i don't exactly know the perfect uh difference or or the uh gap analyzes between those but as far as i know axios is more professional and easier to use and i like axios a bit better so that that's that's definitely a difference uh yeah will you care about the api uh the security for a rest api not this time but we can definitely do a different session where we will only focus on security and all that stuff but because i want to keep it super short uh that you guys can get the most value out of this video the fastest possible uh time i want to keep it under two hours okay now popper react helps fight with david loves node.js that's right that's actually right okay now let's go ahead and uh let's go ahead and let's check out on the sidebar chat what we have there so yeah and inside of here we also have um we also have a lot of firebase things going on so what we will be doing is pretty much say uh we will replace these stuff again of course and we will just add an other uh function which will be get sidebar element okay and that will literally go ahead and go to this endpoint pass in the id as a query because it's after the question mark right and oh yeah oh by axios by default converts data to into json actually actually that's right and i didn't even notice that like i said axios is more pro okay um that's actually a great great info i love that i love that oh okay axios is basically a layer on top of fetch we we are all learning guys here like i said we are all learning and what pcr am i using i'm not actually using a pc i'm using a macbook okay now let's go ahead and drop out all the firebase stuff that was going on in here um this worked perfectly but we are just gonna get rid of it because we are gonna be using something else and this is where the real time stuff will go okay nero time stuff later on you guys need to stay here and be where here with me until i am dropping and teaching you guys how we actually make it real time because we are going to make this application in real time so guys if you are pumped about that let me know in the description in the chat and oh my god we i didn't even notice but we uh crossed 300 likes thank you so much guys this is going out for you so thank you so much guys and we actually have above 200 218 concurrent viewers on all the live platforms where i'm at so with that done let's go ahead and let's actually i think this should be working now now uh the other thing we need to work on is going to be in the chat.js file uh so let's go there and what we need to uh import here is of course it's going to be the axios uh so let's go ahead and import axios from axios but guys notice that uh so there is a little bit of difference i want to add this to here so i want yeah and so let's please actually everybody go ahead and check these two uh lines for just a bit of a time so this one and that one so i so this is actually importing this file while this one is importing the dependency so guys uh i literally i wanna want you guys to understand what's the difference between these two now on the right hand side we are actually importing the axios package and on the left hand side we are importing the instance that we created on the right hand side using the package okay i really hope that cleared it up uh but i just remember getting a lot of questions regarding this uh topic why is there a dot in the slash and why is in there on the other side like yeah so i just wanted to clear it out okay uh um i actually i don't know if i've imported it in here of course i haven't here we go now let's go ahead and save this chat saved cool and we also have like crazy amount of uh firebase things going on but we will be replacing those stuff with a nice little uh chat thing okay so that's pretty much it and we are actually getting the conversation and going to go to this endpoint where oh yeah kevin says it's a super helpful breakdown thank you so much i really hope it cleared up and let's do it says i don't understand anything brother drop me a message and i i'm i'm happy to help you understand everything but were you actually paying attention okay now with that done so let's go back here so id is going to be the chat id of course then we want to go ahead and use the wrist uh the response and actually set the um chat so we want to go ahead and inside of the we want to go ahead and get the conversation and save it okay that's exactly right that's that's right that's all right okay all right now uh we want to go ahead and get rid of all the firebase stuff and we will just go ahead and add these things oops there's so much cable going on my desk that ah i need to learn cable management if anybody knows a course on cable management let me know so i've just added the conversation um function in here and i'm calling this function which will go ahead and grab all the conversation data for me and we'll set the messages to the data that we actually get back and because the data structure requires that um the because the data structure requires that this is how we actually uh save it so let's do it actually asks uh if i have any recommendations for javascript beginners uh what i would recommend is going ahead and searching up on the youtube searching up our youtube because we are dropping crazy amount of free content for you guys like the eight hour javascript course the react basics uh and we have all this stuff going on and if you guys enjoy that let's go ahead and build all the clones that we have and pretty much that that would be it so yeah okay uh okay okay my management thanks so much okay uh yeah exactly you can follow uh clever programmer videos on javascript another uh yeah let's go ahead and check out cleverprogrammer's youtube channel that's crazy amount of value for you guys okay now let's go ahead and we still have 180 people here with us huge shout out to you guys thank you so much for staying here with me i highly appreciate everybody who is here and enjoying this and just smash the like button if you like this video okay now next up uh and probably one of the last things that we want to do is first actually yeah uh we also want to go ahead and create a send message endpoint and that just uh goes on right under here so we also we of course send this message this is the structure that we are actually going to be using then we are deleting whatever is in uh the input next up uh yeah that's pretty much it and we can and one more thing though which i always forget is uh you need a new table and your monitor is wobbling um i could be right okay that's right uh oh yeah it is oh but actually it's the monitor so uh now let's go ahead and create an uh create and oh my god this is super awesome okay thank you so uh what we will do uh is pretty much just add another um add another api call where we will go ahead and create a new conversation so that will pretty much be like a uh this one so this is going to actually be a longer one so i will just uh add this uh snippet of code i have it ready uh so i i will just drop the snippet of code here for you guys and this is going to be essentially the same uh add chat that we have up here so let's get a get rid of that for now and what this does is literally this actually requires two parameters because otherwise if this would make the whole build super long so we need to have the chat name first then we will get the first message because we need to send the first message uh at the same moment uh because otherwise it would make just the whole build super complicated and once we got both of them we want to go ahead and create a new conversation right chat name chat name perfect and we want to add uh we want to actually store down the the id from the response and at the exact same moment let's actually make it look like this uh and let's actually add a new message right into that exact same uh conversation that we just created otherwise it will go ahead and freak out and some stuff is going to crash but because the we are handling it this way uh is going to make the whole thing uh super easy and smooth okay with that said i think we are ready to test this app out now where it is i first i need to find the app uh i don't even know where we are uh no not not this one i think we are running on localhost 3002 so that's actually uh maybe 301 okay so we have a couple of uh stuff going on in here and yeah because i have the this part uh which uh saves down the last message uh we need to define all these so uh we need to define all these uh use states which is actually gonna be super fast let's go ahead and add in the last message last photo and last time stem these are um i wonder if there is a react fundamental with you at your channel uh without using zoom yes there is we just dropped it i think last wednesday or something sometime sometime last week it's actually a 12hour long video going into the nittygritty okay i highly recommend everybody goes ahead and watches that okay that's literally our goal that so that we can provide these information for you guys for free pretty much it okay and let's go ahead so with with these states done we can pretty much set everything up and that will actually go ahead and work perfectly now we also okay i forgot to add the bug feature okay so we are actually facing some bugs but we are going to go ahead and debug everything so guys if you're with me we are going to go in and debug stuff because backend development is just uh with a lot of bugs so uh we got the sun message has already been defined and declared uh yeah so the problem with that is yeah so i i forgot to delete sunny's code on the send message function but this way we should be good on that part and there we go guys we have we debugged every oh i forgot to share my screen oh damn okay so i will go ahead and command z back everything so i undid all the stuff so um this is the code i forgot to delete now i'm going ahead and uh literally select it and delete and with that done we should be able to go back and now it should be working there we go guys we have it working and that's it okay let's set back the colors behind me and okay sunny is actually not angry [Laughter] okay but yeah we are removing firebase yeah okay so now um there is actually a lovely comment i want to save for myself so uh what i will do is go ahead and sign in here uh vibe with us asks what is my opinion on php hmm okay so first let's answer the question what is my opinion on php no go no way i wouldn't go that that route and the other thing uh which we need to do before this uh before this issue goes away is pretty much just go back to firebase go to authentication and what you guys will need to do is pretty much just hit this set uh setup sign in method and just go ahead uh hit google uh add your email address in there um thank you so much brother from facebook and you want to go ahead and save it and nicely done we should have we should be able to fix this stuff now uh what we will be doing is say let's go ahead sign in and guys we still have 156 people with us let's go guys thank you so much for being here with me and yeah okay now we should be able to log in and yes here we are now oh my god we got the epic cp community inside of here and it's going to freak out because yeah uh the data that we have in here uh is just not compatible so what i'm going to do is delete this whole thing and go back to my app now because we are uh uh because we are using redux uh we are not uh we don't get uh logged out so what i will be doing is add the uh chat name and i will say epic cp community and say uh okay now it wants a welcome message from me so i'll say hey guys whoops hey guys uh fire and okay and nothing happens but this is okay because this is not real time just now so let's go ahead and let's see what do we got in mongodb so let's refresh it actually shows that we have an epic cp uh community here and we also have this message working so there we go guys massive shout out to everybody who is at this point with me and let me know if you are one of them and if you have if you were able to create a create an app which actually is able to save down the new message right let me know guys in the chat if you guys are with me and if you guys are pumped to continue all right let's actually add this effect 300 days ago i would make api requests every one second to make my