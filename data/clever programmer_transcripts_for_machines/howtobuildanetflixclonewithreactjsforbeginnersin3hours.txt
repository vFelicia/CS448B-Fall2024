how's it going guys and what are we going to be building today sunny we are going to be building a dope looking netflix clone so let's go ahead and show them quasi so this is the clone that we are going to be building in today's project that's what we're gonna be working on guys uh so i'm going to quickly go ahead and start demoing it we apologize for running a little bit late just because we're dialing up dialing in our setup and making sure that it looks phenomenal for you guys but here is this clone that we're working on so first of all just take a look at it the feel it feels like netflix and if i go here and i want to play a trailer you can go ahead and play a trailer also guys if you actually want to check this app out you can go to that link right now at the top i'll drop it in the chat and you can actually play with this app yourself yep so you guys can actually go to this link right over here let me turn my audio a little bit lower so it doesn't peak so yeah you guys can go to this link boom there we go yeah and you guys can jump in and you guys can actually start playing with this app so here you can see i can scroll through it just like netflix i can play trailers so let me move this stuff out of the way move down what trailer should we show them next star wars yes yes check out star wars let's see all right so give it a little click and it should pop in dope nice and let me put on can i put on system audio too nice there we go so here's the cool thing about this which is that you even get that little bar that drops down from the top when i scroll down exactly netflix bar dynamic also guys just to know this isn't hardcoded information we're actually getting all of this data right now from a third party api so when we refresh you should notice that the top manner is going to change because we're pulling in new information yep so let's go ahead and refresh yeah so even if we refresh we can show you that we're it's dynamic because it's pulling in new information yeah so at the top you guys will see the top thing change and guys if you could do us a favor we bring in a lot of love and we build this with a lot of passion for you guys it doesn't take anything from you guys if you could just give this video a like that is huge um it automatically puts this video out everywhere and all of these projects that we're building there for you guys and so this spreads it out and makes it easier for everybody to get access to them so just go ahead give this video a like subscribe to the channel if you haven't already and uh let's get back to building these projects let's do it okay awesome so should we kind of jump in and actually get started on it now sunny yeah let's do it so we actually set up a coding terminal um that me and kazi are sharing right now and we're using vs code liveshare so it allows me and qazi so if i type in in the terminal you should see my little customer over here perfect perfect and what we're going to do is firstly before we actually set up anything actually i think we'll spin up a reactor at first that's always the first did we drop the link to this app by the way uh i dropped it on the youtube chat might be worth dropping on restream oh i see yeah that might be handy and then we can throw it out to everyone on facebook as well and guys if you guys are enjoying that and you actually mess around with the demo be sure to shoot an instagram video and show us when you show us when you actually do it because we love to see you guys we love to chat somebody actually sent out a awesome video yesterday uh cause you wanna talk about uh that story that we saw yesterday oh yeah that was actually really amazing let me see if i can even share it because we love when you guys share your projects and things like that with us so um if you guys want to go ahead and do that that would be really awesome let me go here and share what's up what's up sunny aka this was amazing so yeah if you guys want to do something like that that would be really freaking cool because we love seeing your guys's um you know how you guys built the app what your reaction to it was did you enjoy it because that keeps us going and you guys can actually send it to us right over here and we're going to get started building this app pretty much right away so one cool thing we're doing this time is on the right hand side of the screen you guys can see i just added a text overlay and this basically shows you what we're going to be doing and when we're going to be doing it so this table of contents is pretty much going to be on the screen the entire time and this will tell you what steps we've already completed and uh so it doesn't matter when you join this live stream or maybe you're watching this video later it's all good you can know what step you're on at any given time exactly so the first step is let's go ahead and grab so in order to actually pull all the information that you're seeing guys we're going to actually go ahead and grab something called we need an api key from a service that we're going to use and many of you guys have heard of something called imdb yeah but what we're going to be using is something called tmdb so if you just go over to the browser right now and you just need to set up a quick account so so i'm going to actually just go ahead and make sure everybody knows that that's what we're gonna be working on now and we're done actually demoing the app so you guys can see in the checklist that that has been updated and now we're gonna be actually getting get tmdb api key right exactly so you guys can follow along with us and actually do these exact steps if you want exactly so what you want to do is go over to your website called tmdb uh is it tmdb.com yeah just type in tmdb and then it will give you a nice little google link um so if you click on that one yeah and if you go to create an account with them so let's go ahead and go to uh should have a little account saying because you actually if you type in let me send you a link one second i didn't get you here we go here we go because i went to their developers one so this is probably what it is yeah that's the one nice okay yeah you just need to click oh yes you need to sign up uhhuh uh are we going to be sharing this with anybody else like our password or anything or should i just use my private password um so no this is going to be the api key is going to be visible for everyone um but this password is going to be blocked out so they won't be able to see it yeah so use a private user yeah whatever password okay okay so here we go awesome and what we're doing here guys is we're actually going to access a service which is basically like what we're going to do is we're going to make a request to this service called tmdb and they're going to give us back a bunch of information um about different films and what's really cool about this service is that they actually give us a bunch of different genres so we have like netflix originals trending now top rated action movies comedy horror etc and then what we do is we pull that information in and then we throw it on the front end and that's what you're going to be seeing and that's actually what you saw in the demo so we didn't hard code that that was being pulled from this api that we're setting up right now awesome so if you go to the top right and click on the little c and you want to click on profiles and settings and click on settings at the bottom okay and then on the left after you click on settings you want to click on api and you should get a little key uh so you go to create so right so go here and then go right there right yep so request an api key and then click on developer yep and this we just got a scroll down and accept that so at this point this won't take too long just click type of use uh do web application so if you do so click that one type of use website and if you just you might want to put this on a separate screen so we can hide this from the stream and then just chuck me on the screen that while we sort of go through this form yeah okay nice so what you guys want to do is you just want to put in all the details says application name application url what about the application url what should we make that the url doesn't actually matter to be honest i added a random one and it didn't crash the uh the app at all so here what we can do is and the application summary you need to give it a summary just saying like you're either making a demo or something otherwise it doesn't let you get past it and then enter your details and you should be able to go through so once that's done what we're going to be doing is for those of you who don't know what react is we have web development which is basically html css and javascript now all of those are the three fundamentals which is how we build a website but we pretty much wrap it in something that facebook built and that is called react and react allows us to build really scalable powerful apps and the main reason why it's called react is because it cleverly owns a very in a very smart way it only renders what it needs to render so we're going to be building that in a sec but let's go back to uh the screen and we can show you the next step so i got these screens yeah we got the api key yeah yeah so what we're going to do now is we just need to take note of that api key so you grab that and just paste that somewhere else uh and what we're gonna do is yeah maybe if we just chuck it there yeah awesome do we need uh do we need any of these other ones like api access token um so no we don't need the api access token but we could use the api request with postman just to give a demo if you want oh i see so like basically just do this and give a demo with this okay yep so for those of you guys who haven't used postman it allows you to send a request to any sort of api or a server so in this case what we're going to do is go ahead and make a most um get movies yeah and if you just paste it in there yeah right there let's click send and now we should get back so you can see we got back a bunch of information um and what you need here's fight club i love fight club let's try opening it and uh boom it sends me to this awesome okay great so you have a bunch of information that comes back from that request so that's an example of now we it's working because it actually gave us some information back so if you got this bit wrong then it's probably your api key isn't correct yeah okay so awesome the next step that we want to do is actually go ahead and start our and just so people know how i did this is i hit new yeah then i hit request right here and then all i did is paste this link just make sure this says get and then my next step was to hit that button send yeah that's it i think you can even press command t to open a new tab oh nice oh that's much easier okay um cool so the next step is let's go over to our code uh vs code and let's let's actually share a terminal with each other so that we can code easily together sure thing yeah so there we go and if i go ahead and type in i just need to click request read and write access here i made it so now i can type in that perfect okay so what we need to do now is we need to run a command to make sure you're in the right folder that you want to start your work in and we're going to basically run a command so it's mpx and you need to run mps you need to install npx before you can use it um and then we do create so just just one second so up until now right now we just completed our uh getting the api key right yeah the perfect okay nice and now we're about to create our react app that's it awesome nice there we go let's update that as the top one as well yeah so create react app yep keep going okay those sounds start getting more and more hyped as you get through it so now in the terminal we're going to say mpx create react app and then what you need to do is just add a space and then just give it some kind of name so in this case we're going to say netflix clone and we're going to click enter and that's actually going to set up everything guys so that sets up all of the stuff that you need to get running with your app it will install all of the dependencies and modules and all that sort of clever stuff behind the scenes um so you that'll take about a minute or so so while that's happening let's head over to firebase so firebase is a suite of tools by google and it allows you to do a bunch of clever things so you can host your website you can have a database you can have authentication in the previous session we did a bunch of authentication stuff so that'd be cool if anyone's interested in that to go check that out but here you just want to have a gmail account log in and click on add project and once it once we click on our project you just need to give it a name so in this case we'll go ahead and call it insta netflix clone there we go netflix phone awesome and this you can enable or disable based on if you want google analytics there we go nice so now we're setting up our back end so right now for today what we're going to be using firebase for is for the deployment of the app so that we can actually host it so when you guys were actually checking out the link that we had previously which was this one so you can see on the screen so the one that i'm highlighting at the moment on the code panel that link is actually a real link so that's a real link that's been deployed and we use firebase to do that which is really really powerful and it allows you to pretty much get the app up and running and live was really really quick um so yeah nice let's go ahead and click continue and now what we're going to do is if you just tap that little web icon at the top i will and just to be very clear we're now set setting up set up firebase hosting right yep so now exactly now we're setting up firebase hosting and we're done with the create react app yeah we're on fire moving fast yeah nice that's the sound of us being done with the sound of success cool we're gonna get so smooth with this all right let's keep going netflix and then there we go netflix and then you want to tick that little box here okay so uh let's register up okay so the next step where it says add firebase sdk we don't need to worry about that because we're using node modules uh but this step you do need so you're gonna go ahead copy that and then go to your terminal so i think let's open up a new terminal and do that command yeah so you just simply enter that command i think it might not work so if it doesn't work you might have to add sudo so whenever you install something with dash g you need to actually have admin rights you need to write sudo and sudo basically gives you admin rights which is why i ask for your password uh and then you pretty much run that command and everything should work as it as it needs to and that's gonna basically our nice best channel for react now on youtube ah that's awesome dude thank you very much love stuff like that um yeah so pretty much installing the firebase tools is very simple you just add that you just run that fund and then you'll be able to type in firebase in your command line and you'll get access to all of the firebase tools uh so that's pretty awesome so somebody said chris weiss are back with you guys today i actually spoke to chris barley on instagram nice really nice yeah yeah he refreshed the story so guys that's what i'm saying like repost stories and i can have it and we can me and quasi can have it yeah and you guys this time when you make a story make sure you tag both of us and also like i want to hear you speak with your in your video and like show us your code exactly yeah that would be awesome yeah yeah oh i've been upset are you using all my zsh yes we are sanchez says gotta say man the qualities live streams are topnotch feels so smooth almost like a video thank you yeah that's the goal that's the goal nice yeah a lot of effort goes into making these super smooth and slick yeah okay so we have done a bunch of work so firebase tools has been installed so that's good the next step i guess is so the create react app just finished and we've got firebase which is just finished so let's go ahead and for now what we what tasks okay so we're done with firebase hosting or not yet not just yet not just yet let's go back to the browser and let's open up to the little burger menu and click on the hosting okay yep that one there and let's go ahead and click on get started awesome and click next and we can do that afterwards yeah next five is the next awesome so this will set up everything we need and the last step before we can say this steps completely done is let's go ahead and click that burger icon in the top left and let's click on the little settings cog so the settings yep project settings and once that's loaded let's go down to the bottom and here we will find the sort of magic which oh actually we don't actually need this today we don't actually need this today so we are done we are done with the step nice okay yeah so now we're done with this step completely right yeah we are completely done with five minutes awesome let's make sure that we put a nice little check mark next to it yep i want to hear the little nice so now we're going to be what getting all the movies yeah so now we actually start the build so this is going to be the sort of where all of this sort of logic happens and everything like that um so yeah we can actually get ahead go ahead and get started so get all the movies okay um okay nice so let's actually get the app running on the right and we'll get the code running on the left cool let's do it so in order to start the app guys what you need to do after we actually run create react app you need to do cd and then netflix clone if you're using omaze you don't need to write a cd but for those of you who aren't using that you need to do cd and then do um oh i can't actually type into that one uh the first one i can you know cd netflix clone so netflix and then you can tab and you do clone and then we're in the correct folder so if you do ls to list all the files you should see all of this stuff so if you see that you're in the right place so to get the app actually up and running you just do mpm start and what that's going to do is it's just going to spin up the react app so when you use create reactor it gives you a very nice template that gives you a really nice sort of starter project and it will launch it on something called localhost 3000 so you have everything up on there so yeah second we should see a little spinner nice there we go right there yep yep awesome so and now what we want to do is we want to i've also got access to your shared terminal that's nice awesome okay awesome so i guess next all we need to do is actually get started with the build so what we can do is let's open up let's actually do our cleanup process um so kazi you want to explain the cleanup process so yeah so basically yeah so basically in the cleanup process guys what we want to do is there are a bunch of these test files and we don't actually need them and also we can remove the logo so let's go ahead and select all three of these right click and just delete and now so that's clean now you're probably wondering why is it failing to compile and uh really the reason why it's failing to compile as well that logo svg is not there anymore we just deleted it so we're just gonna go in here and what we like to do is if i'm gonna just full screen for a second is um take everything inside of this uh in the header right you just let's just remove this entire header so inside of that div let's just remove everything boom there we go yep and also line two we have nice sergeant is here how are you doing nice welcome welcome carlos thank you for saying you guys rock really love your guys's energy this is amazing right cool so now it's cleaned up so now what i'm gonna just say is hey clever programmer let's build netflix clone front end today so just to be clear we're going to be working on the front end today guys yep but we're still going to be playing with data in in real time so yeah awesome so we have that's our starting point guys so that's literally where you want to get to to get everything sort of up and running uh and get everything sort of where we need to get that app started so the next step that we want to do now is so remember we got an api key right so in order to actually make the requests that we saw so for example the um the stuff that we saw earlier with um the postman requests in order to get that actually up and running we need to actually use something which will handle sending requests from our code and the thing that i like to use is something called axios so let's go ahead and install axios into our into our project so in order to do that we need to go over to our terminal uhhuh so let's go over to our terminal right here cool yeah so let's go to your terminal and let's install axios so npmi axios and all this is going to do is imagine it's basically going to replace uh what we were doing previously with um with postman but instead we're going to be doing it with axios so we're going to be making the request with axios in our code okay stop uh next i just want to because if you just follow me in the code yep here we go nice okay so now what we want to do is we actually need to set up our axios because we need to set up our request sender let's call it that and just like cause you're doing make sure you do npm start nice to restart the app so what we're going to do is we're going to create a file called requests.js so what i want you guys to do is what i want to cause you to do over there is just to create a new file called requests.js so um requests.js and is it going to be a component or should we should it be capitalized or no that's a good question so as it's not a component it's just sort of a functional module we just want to have it as a lowercase r so if we only have an uppercase uh uh r if it's a components let's change that to a lowercase r okay so let's go here and rename it yup so the convention guys is you would have it as an uppercase only if you are trying to resemble a component in your file name okay so awesome so we should have icons oh yeah there we go requests nice okay so now what we're going to do is i need to actually so there's a bunch of endpoints that i found previously so i found these on the tmdb website and what i'm going to do here is basically first i'm going to add a the key itself so remember that key that we got earlier so let's just add that here so we say const api key api oops const api key and here we're basically going to drop the key inside of here so if you don't mind just pasting it inside there cozy oh oops what's going on here is am i out of sync maybe uh i might have gone out of sync with you you see that yeah everything's gonna [ __ ] okay so i'm gonna quickly rejoin your actually then again we might be good enough okay so no i don't think we are okay i'm gonna rejoin give me one sec yeah yep so let me rejoin maybe we can answer some questions in the meantime yep i'll take on questions guys so you guys have questions let's take on some of your guys questions paulo asks or have you tried insomnia instead of postmen so yeah the answer is i mean i there is a there's echo right on his voice i don't know why that's actually happening because i don't really feel like yeah give me one second guys i want to figure out like if there is echo i want to remove it for you guys and just make sure but to answer you guys this question yes i've used them both i haven't used insomnia as much but i'm just a more of a fan of uh postman it was kind of confusing for me to just figure my way around so i kind of just stopped using it so an alternative for firebase um so actually there's not actually many alternatives to firebase i've seen that do as much as firebase do so you have aws you can do things like they can they have instead of cloud functions they have lambdas um there's a bunch of things like that but honestly the easiest one i found is firebase as a back end yep so that's to answer that question um okay awesome i think i'm it's working now yeah okay cool let's keep going perfect okay so we added the api key over here so everything's all good now so the next step is i found a bunch of api requests and all these are basically going to do is they all they simply do is these are the end points so basically i'm going to just copy and paste a snippet of code now so what this is is essentially an object we're just exporting an object here so if we it was to simplify this it's literally just a case of imagine we have a bunch of requests right and they're an object and each of those requests are basically inside of here and all we're doing is we're exporting that so we're just exporting it like this right so each one here uh is it is it equity um because i could hear it on your screen as well maybe yeah i think it's because yeah the audio is coming from my laptop and then they're able to hear it so maybe if i put in headsets might help a lot yeah okay so qazi your voice is low and sonny's voice is loud now um after we just plugged in the headset how was that my one says sonny you are doing great thank you very much there's my lovely cool friend and kazi love both of you nice um how about real quick guys how does it sound let me just try this so how is it sounding right now can you guys hear me clearly and sunny go ahead speak for a second hello hello hello are we all good i think we're good now i can't actually hear myself yeah should be a lot better yeah yeah okay yeah that's much better okay nice so carrying on so what we're going to do here and the reason why we're doing this guys is pretty much just to make it easier later to use these requests right so if we actually check out the um the the request so these are basically imagine like these are just the ends of the url so they're just the endings of a url and all we're doing is we're just inserting our api key right wherever it's needed and what you can notice is at the end of each of the lines so if you just throw if you scroll to the end of the lines cozy so yeah oh you mean like this like this yeah so you can see they have a weird sort of syntax uh sort of a weird sort of way that we request data from them so for example to get the netflix originals we have to use this so it's a weird param but this was on their docs and you pretty much pass this and that will give you the netflix originals to get the for example action films you give the the key code 28 for the genres and so forth so each one has a specific key code and they will give you the films back for that that sort of stuff so in order to get that working i actually went ahead earlier on and i found all this so that way we saved ourselves a bunch of headache in finding that during the stream um and then so that's the first step done right we actually have all of this stuff in a really convenient object and we're going to pair this together so we're going to go ahead and create a another file another well now i can't actually see your um i can't actually see your your photo structure cause you oh yeah so if you go ahead and go to you have to go inside netflix clone yeah uh for some reason it's not showing up on mine but it might come up once you start doing stuff so if you uh add a file here and then sort in source right yep in source and we're gonna call this one axios so lowercase a axios.js okay right uh nice so i can follow you into files but i can't actually see the files myself just super strange can you use a shortcut like command p and then switch between or like command shift p and switch between command p and switch files uh no because it goes into my one but it's fine so i'll follow you around until we sort of run into a hiccup okay um yeah so now what we'll do is in axios what we're going to do is so every single request that i want to send is going to have the same beginning of like this the same starting url right uh so what i'm going to do is i've got a little snippet of code here i'm just going to paste it here we're going to explain what this does so the top what we did is we're importing axios and basically that's just using the package manager the package or the module that we've installed earlier which is essentially going to do what postman does right and then next what we're going to do is we're going to create an instance so we have axios gives us this very nice method called create and all you do is you pass it a base url right so this basically means every single time i was to do something like instant so instance dot get then for example this would be sending a get request so if i was to write for example foobar then the url that we're actually going to be sending to is going to be this so it's going to actually look something like this i see does that make sense yeah so basically it's just taking this thing and then it's appending it to that yeah and it's a very simple sort of it's a very good pattern to use whenever you're doing a lot of sort of uh requests from your app so with that said what we're doing is we're exporting this um and then we pretty much have the bones for sort of starting to make requests right so everything sort of is looking good right now so let's go again let's go over to app.js so i think you may need to follow me yep so i've got yes so now what we're going to do is let's actually start to get a little bit so right now i guess we actually said that we were going to fetch movies right yeah um so this step actually is combined with the next step so we're going to sort of overlap some of this the two steps here so maybe it might be worth on the screen let's just have a finger pointing at both of those steps okay and what are the two steps so the two steps that we're going to combine pretty much are getting all the movies and building the rows because what we're going to what we want to do is as we sort of build those rows that you saw earlier um so if we go back to the app when i say rows what we're talking about is if we go to the um get all the movies and build the rows okay nice so if we go over to the demo app that we actually demonstrated earlier so in the second tab i think you've got your opening so you see the the in the in chrome you should have the tab open for the deployed app okay for the deployed app yep so that one so the roads that we're talking about now guys is these ones so you see where it says netflix originals where it says trending now um so we basically that is actually one component so every single row you see here is one component yes yeah and what we do is we pass in something called prop so for those of you who are new to react all we need to basically be doing or what react is sort of a revolved around is component based work or component based design so you write one component and then you reuse it by passing in different props props standing for properties got it right so what we're going to do here is let's go over to app.js yep zap.js and you might just want to follow so it will sort of go with the cursor yep yeah nice and then what we'll do here is we're basically going to have a component like this where it's going to say row and what we want to do is we want to customize the row by basically passing in a title right so in in the first case the title that we saw was netflix original so it's like this netflix originals and the second one that we saw was an example like i think it was trending now so trending now okay yeah and so this is going to work out oh nice this is basically yeah nice so this these rows are going to be this trending now one is going to be this one over here exactly nice and the reason why i'm building the rows first is because it's the most like apparent um thing on the screen so let's just start with that and then we can sort of build the banners and we can build everything else around it um okay so let's go ahead and start with that so um the next step is we need to actually create our row so let's go ahead and create a file called row.js and is this gonna this is gonna be a component right yeah this is a component so it needs to be capitalized and then here we've got a really nice snippet so um what we need to do now is to uh okay i think okay so kazi while you set that component up i'm going to rejoin the session so it doesn't mess up one second so i think all you need to do is run rfce so using the es7 snippets and that should get you up and going so rfce guys is a really nice trick by the way um that many people don't know about and it's basically going to um allow you just to write those three four four letters and press enter and then it will actually sort of get everything set up i don't know why my code base isn't starting one second let me just restart my vs code okay yeah like literally that one line will do this because this is something you constantly have to do in react you constantly keep having to make react components um and you always want to export them so then you can use them in a different file like this row component i'm gonna be able to use it in my axios file maybe or my app.js file so rfce just allows you to do this thing very easily yeah exactly and if you code so carlos one thing i do want to mention is like i also do a lot of development in vim and one thing i recommend is at least for me i wanted to take the modern world like visual studio code pycharm all that and then combine it with vim which is just all command line and the best solution i found is use vim inside of visual studio code so like i'm still fast but i have all the bells and whistles of visual studio code now nice yeah because he's trying to get me over to vim i'm still we're always going back and forth on it um so now what we're gonna do is uh if you just follow me cozzy in live show give me one second because for whatever reason it switched audio it's like it's not from my headsets anymore so give me one second yep okay now we are good go ahead okay all right there we go so now what we're gonna do is let's just sort of get a baseline so what i like to do is i just mark it out so here we're going to have some kind of title which is going to say trending now netflix originals etc and then we're going to have a bunch of images so i want to have a container so like some kind of container with a bunch of uh let's just call it um let's call it posters inside right so there's gonna be a bunch of posters inside of it and those are referring to each of the films that you see and then we're gonna have a uh after that we are going to have oh i think that's it actually we're just going to have that and then the container with posters inside so here we notice that when we actually created the um component over here which we actually need to import so i'm going to quickly import that so i go to the top and i say import row from and then we do the file directory so row and that should pull in our component that we just created so here what i'm going to do is we passed in these two props title title right yeah so it's one prop with the value type so we're going to go back to our row and we're going to use some destructuring here so this is where the props come in but you can actually pull apart that object at this point by using some es6 sugar and here we say props oh no sorry here we say title and that right now if i do this little neat trick and i say uh h2 let's put h2 and we say title look what happens now guys so if we actually have the app running on the right we can now see you see it's rendering the two rows and it's popping out h2 tags with netflix originals and trending now so we've already got that sort of starting point which is quite nice yeah yeah nice and now what we're going to do is we're going to proceed to the next part so the next part is sort of where we got to think about things a little bit more so we initially had a bunch of requests that we had previously right so just one one thing real quick i do want to mention mongizi asks before i joined qazi's python course do you guys have a react course i'm still basic in javascript so yes we do have a react and javascript course and that course is called profit with javascript so if you guys are interested and you want to join that course so you can learn all of these skills but most importantly learn how to actually make an income with these skills the link will be in the description and you can click that uh and that monkeys you can check that course out that might be helpful for you yeah yeah and it doesn't matter if you're still basic guys we go from literally basic all the way up to react development which is awesome so cracking on we've got the row component so here what we want to do next is i actually want to have it so that we have a bunch of movies right um and what we're going to do is the way we're going to do it so it's a combination of things that we need to do now so the first thing we're going to do is we're going to use something called state to keep track of those movies so state is like shortterm memory when we refresh it disappears but it's a very good place to store some information so the the easy way of putting it is that state is basically a react the way to write variables in react right so here we're basically going to write const and then i'm going to do this and the name of the variable is movies and this is the way this is the syntax of how we do it so it's movies and then you say set oh oops i don't know why it's done now the set so movies set movies like this right um mcvision says how can i join your course quasi so there is a link in the description below uh you can check that out and it's got all of the course details and everything that we offer uh feel free to just go ahead and check that out yep so yeah so yeah so this is how we pretty much set up a piece of state so we say use state so we're using a react hook here and hooks are like these little functional pieces of code that make our life so much easier and then inside of these brackets you give an initial value so here i'm going to give an array so an empty array empty array like that and then what we need to do is because we're using that we need to pull it in from react so we say use state up here and that means that we can actually start using it otherwise it will freak out saying why using use state before you put it in so with that said we now have an empty movies array so it's an empty array because we declare that over here now what we want to do is we need to kind of fill it with some information right we need to give it some information we need to actually populate it with some stuff but what we need to actually do at this point so remember those requests that we we sort of set out to and created earlier right if we go back to app.js what i'm going to do now is i'm actually going to do a very sort of nice little trick here and if i go to app.js so i just want to check so yeah stephanie where are you getting these code snippets to paste and so basically we have an extension called uh which one is it is es6 something right yeah es7 react redux snippets so that's where we actually pull that rfc e snippet from um and these are other extensions that we're currently using the bracket pair one and the live share one that's how we're able to share live with each other exactly yeah and i do recommend you get those extensions because it saves you the hassle of remembering how to write stuff which which we all sort of forget so next we're going to basically add another prop and we're going to call this one fetch url right and this one basically is just going to be so when i say fetch it's basically the url that we're going to start pulling the information from because imagine the netflix originals row is going to have a different request to the trending now row because they're going to pull different information right so in order to do that what i'm going to do is i'm going to pass in a value here and a value here and those values are going to be the requests that we set up earlier so here i'm actually going to say import and i'm going to say requests from and i'm going to basically just go over to the requests so requests and what this will do is if we actually go ahead and look at our requests again we can see so remember all of these requests so the fetch trending effects fetch netflix originals etc now i don't need to write this long ugly sort of thing inside of my app code i can just pretty much reference this key and it will give me what i need so we can go back and now i can basically say requests dot and the one here i think it was fetch let me find the name of it oops was it so if we go back to let me get that up as well so we've got the requests yes i want this one so i want fetch next flicks originals so here i'm going to say effects fetch netflix originals and here i'm going to say requests dot and this one is going to be trending now so request start trending now yeah yeah even on your screen i think mine doesn't show but if you click on if you add a dot after request the minute you add a dot it will show you all the options so if you do request dot dot so if you if i yeah uh you need to do it yeah so request dot there you go so that's really clean and then that way you don't have to remember everything off the top of your head awesome so now we're passing in the urls right so what we're going to do is we're going to use that so we're going to go inside our row component and here we're going to say fetch url and now we we have the sort of url that we're going to sort of go and grab some information from so what we need to do now is we basically need a snippet of code so what this is what i need right now i need a snippet of code so a snippet of code which runs which runs based on a specific condition oh yeah here we go yeah so what i just wrote here is we basically need a snippet of code which runs based on a specific condition or variable um and basically what react does is it gives us am i muted for a second frankie just told me i was uh i was not following you earlier so i just clicked follow oh yeah yeah i don't i don't think you got muted but i saw that when you weren't following yeah got it okay um so now we need this so a snippet of code which runs based on specific conditional variable and react luckily gives us a really nice uh hook so it's called usefx we have to import it and basically what we do is we write use effect and inside of here we basically do the we have two things we have the first argument which is just in a function here and then the second thing is these brackets so these square brackets and basically so i'm going to explain what this does now so this piece of code inside of here what are we trying to by the way what are we trying to achieve sunny like right like with this yeah so what we're trying to achieve here is i need to run a piece of code uh when the row loads so when this row component loads on the screen i need to run a piece of code just to be clear when this thing loads you want something to run yeah exactly so when that robe appears on the screen and it loads i want to basically make a request to tmdb which is that movie server you want to be able to pull this information right when that road loads right exactly got it so like even this thing okay cool so and then you want to be able to basically pull the information for all of these and when we see information well it's the image that we need yeah we also need it from the trending now or the top rated category yep okay so i need so yeah so the categories are based on the fetch url that we passed in as a prop yep so that was this is so this is a really good way of using use effect you guys like basically every time this row will load this snippet of code will run and so as soon as this row is loading we want to be able to like feed it the the information that it needs exactly and what we can do is in this bracket here if we leave this blank we're basically saying run one so if if we leave the brackets blank then we're saying run once when the row loads and don't run it again right yeah that's what we say if it blank uh if you were to pass in a variable here so for example if i passed in movies it's going to run once when the row loads and then it's going to run every single time movies changes so we call that a dependency so it's dependent on if movies changes as to whether or not it needs to refill so anytime this variable movie changes this snippet of code is going to run but if you remove that sunny movies from here and it's an empty bracket yeah so basically this code is only going to run once because of this only on page load and that's it exactly yep yeah so that should help everyone understand sort of what use effect does so let's actually start coding in here so what we need to do is i'm going to pull in remember we created that little axios helper so i'm going to actually use that here so i'm going to say import i'm going to say axios from but i'm not going to do the typical thing of pulling it from axios to depend the dependency i'm going to go ahead over to our file where we created um our little helper because this one remember if um we actually um so if i go over to that file just right here yeah this one right here so remember we we called it cons instance here but because we export it as a default when we bring it in it doesn't actually matter what name we use which is why over here when i actually import it i can call it whatever i want really right here i can say accurate yeah so if you have a default import you can actually rename it very well interesting okay if it's not a default import that's when you have these squiggly brackets so if it's not so this is why i thought this name was like really important or something because i was always confused why we really need that name but now so this is just like really the alias whatever you want to call it okay i understand yeah but a handy little lesson is if we go back to accio suggest if i was to basically do this so if i was to go here and get rid of export default then you would have to structure it yeah so if i yeah exactly yeah why was it giving away oh i see because you'd have to do it like this yeah and then you get rid of that but so so a rule of thumb here guys is you can only have one default export in a file but you can have several ah that's really nice so then you could oh okay that is really helpful because every time i was like oh if i need to make multiple components i i have to make multiple files but maybe i can actually keep them in the same file and then destructure them in another one yeah so exactly so that's why it's really really nice thing and a lot of people it took me quite a while to figure that one out as well like a default is actually uh i didn't realize you could rename it i thought it was super crucial to keep the name yeah yeah yeah yeah nice okay so uh i think you just want to need to refollow uh because if you go back to yeah nice uh so now what we're going to do here is we're going to use it so i'm basically going to say um what i need to do now is i actually need to run a bit of asynchronous work so i need to i need to basically make an asynchronous call because i'm sending a request outside to a thirdparty service remember guys it's going to take it'll be really quick but it's going to it's going to maybe even take a second or half a second but we call that async so in order to run an async function inside of this little use effect because you can't actually use async things inside of a user effect you have to do it in a special way you do this you say async function and you say fetch data so you write a little internal function right so inside of here we're going to actually do all the fetching and then afterwards you just call it you just say fetch data that's how you do it inside of a use effect so it's a bit of a strange one but you actually need to do it like that whenever you have an async right so now what we're going to do is we're going to say const request so we need to make a request and the way we're going to do it is we say a weight so await is going to say when you make this request wait for the promise to come back so wait for the answer to come back so if it goes off to a server even if it takes five seconds wait for it to come back and then do something um so we say axios dot get and then here i'm going to use that fetch url that we talked about earlier so imagine what it's doing here is it's going here and it's starting you get this beginning url so imagine like this is what we're doing so we get that beginning url and then we pass in a url here so for example we passed in the fetch netflix url which if we go to this one is this so i'm just going to grab this and show you what we're doing and then here this is actually just going to because we're using the axios that we set up earlier it's basically doing this so this is the url it's sending a request to now but it will replace the api key with our api key nice does that make sense yeah yeah so you see it's a very very nice slick implementation um and that but it looks very clean as well like we don't have to write much code to get that working and now what we're going to do is we basically so what i like to do at this point is do console.log request right so console.log request and and the reason why i do that is because i like to see what the data structure is that we get back because remember we don't actually know what so i need to just do a little something like here to return requests so that it doesn't freak out but here console.log request is needed so that we can actually see the data structure that we're getting back so i'm going to save this now and what i want you to do is if you full screen uh the browser so let's go ahead and full screen the browser and let's just open the inspector but let's go to our app so the the the local host version yep says open inspector and now on the right so if you've got a sort of console if you open up the console yeah we can see see there's an object right yep see it says object if you click that you see this is what's coming back from that request so there's two objects because there's two rows and each one has a different thing so now this is how you actually inspect what comes back so we're not interested in the config we're interested in the data and in specific we're looking at data.results so that's how we sort of find what the structure is right this one so whenever you make a yeah so whenever you make any sort of api request a thing that people usually get stuck on is like how do i know what's coming back and a good way of testing that is console.log it and then see what you're getting back so now we know that the stuff that we're interested in is inside of data.results so these are actually the same movies like if i actually put them side by side just to show it visually even though we're not here yet in our new build but like if we actually look these are the same movies that we were getting here so that's dark it's just we haven't made it yeah we haven't made it look nice yet but here's warrior run here is lucifer so that's now our next job is going to be to actually make it look nice exactly yeah so now what we do is um so we found out the data structure and we saw that it was request.data.results right yes that's the one request of data dot results so i'm just going to add that here so we have a note um and let's go ahead and split the screen i'm just going gonna actually make this a little bit bigger cool nice and you see they give you a bunch of information there guys so like if you need extra information you can always use that to see what's coming back um nice so what we're gonna do now is we are going to actually go ahead and put that information so you saw those those results that kazi was showing earlier we're going to go ahead and set that inside the movies so i'm obviously going to get the request dot data dot results which was a it's an array and i'm going to go ahead and pop that inside of our movies all right so what we need to there's one more step now so whenever you use anything inside of a use effect if there is any variable that is being you that is being pulled in from outside but it's used inside of the use effect you have to have to have to have to include it inside of here the reason being is because it's dependent on that variable so it's now a dependency so every time this changes we have to update our use effect so that way that is one of the things that i was actually getting really stuck in when i was building my own app with react and i had to use asynchronous function and so i just could not figure out how to get it to load but this is this is pretty sick okay because if you don't include that what happens is say i passed in a different fetch url it wouldn't rerender the user effect but it wouldn't recalculate the user effect so you would have a you would you'd get a different answer to what you expected and that's why a lot of people run into an issue and then it gets very confusing when you're also combining that with async and and all that stuff so that's a very just a neat way of thinking about it so just just for one one second so why is it this one that we have yeah as a dependent so the reason why the reason why is this one is because we have we're using a variable which is being passed from outside of the block so and then when i say that is we're talking about this one yep you see because it's outside of the block in we need to tell use effect that you're using this variable which is outside the block i see so and the reason why is because that way use effect knows that something changed so i need to refile the code got it okay yep if that if that url changes now the way what i like to do just to get a little sanity check is i console log the movies to see if if anything's actually working or pulling through as we expect so if we go ahead and inspect the um the the uh screen we should be able to see now you can see that we get an array and that's got a bunch of movies inside of it oh nice so now that's all we're just getting here instead of getting all through yeah beautiful awesome so we get all the movies that come through uh and then the next step i guess what we need to do is actually just kind of render out so let's render out our first bunch of images so what i'm gonna do now is we've got those movies i'm gonna create a div and i'm gonna call this div so i like to use something called bem which is a way that we use um it's a way of naming your classes inside of react so in this case the the component that we're inside of is called row so what i'm going to do is i'm going to say the the the surrounding container is going to have a class name of row and then inside of it i'm going to have a div so this is going to be the container around all of those films that you saw previously yeah and the reason why i want them in inside of a container is so that you can scroll through them right so we need to kind of scroll through it so that's why it needs to be surrounded inside of a container so so these rows are going to be inside of a container right right these ones yeah okay exactly so visually kind of have a container like this exactly that yeah so this one's going to be row posters so this is actually going to be the container called row posters and then inside we're going to have some elements which is going to be row poster we have several elements with row poster yeah yeah so several row posters right um let me just do this yeah so nice so now what we need to do is we basically just kind of need to map through so what i need to do now is i need to say movies dot map oops movies dot map and what map is going to do is basically going to go through that array that we saw earlier so it's 20 different things inside that array and every single time we iterate it's going to get go ahead and get the next stop logan is here awesome hey welcome logan nice essay is here ss like this looks awesome dude nice glad you're watching it one thing i wanted to tell you sunny too is you know about this one devin says you should definitely try an extension like quoka to auto print the console logs in the code editor no way that's actually awesome i don't know about that what is that insane is it a extension i haven't used that we can look at it right now we can have a check and croco yeah let's actually let's go ahead and check that i haven't heard that i wonder how it evaluates things that are like sort of asynchronous live scratch ipad uh just go down and check the docs to see what it does so a weight result oh what oh look oh damn hold on i'm having a lot of trouble seeing this community features only right yeah okay so we got it so is there a way to be uh to make it work or is it just gonna work right here um i don't know i don't know let's have a let's have a check so if i do console movies i guess it would have if i do something like this so const a equals let's just say one and let's say console log a yeah nothing came up no i mean we can we can definitely look into that that'll be pretty cool though that might be handy okay yeah because then we can if we get that working outside of the session it might be handy for everyone to see awesome okay so now what we need to do is we say movies dot map and then that's going to go through that list of 20 things that kazi sort of showed earlier and for every single object so we call that movie so we're writing an es6 function here um so movie and then what we're going to do is we're going to say return me uh console so it's erroring out because i've got an empty div here so here we're going to say return me an image so i want to do an image and the reason why i don't do an image is because we're basically going to see the um we want to see those pictures right that we see so inside of those arrays objects that we saw earlier there was a special property in there which was called um poster path right so it was movie and then it's dot poster path and what we're going to do here is and for the alternative we're just going to say if it doesn't have that we're going to say get the movie dot name so that was another sort of attribute inside of one of those objects oh nice alternative so that's basically like a fallback for images so if it doesn't get the image it'll just get the exactly nice okay cool exactly so it's going to go ahead and give you that oh that is cool instead of console log do console.table that is a great hack look at that oh damn i didn't know that that's nice dev um yeah this this is um we need devin gray on every live stream because he's just dropping major keys this is the one he's really really cool console.table that's the first time i've heard of that nice that is clean you can sort the table too look at that you can sort the table oh damn it's like full ready to go that is actually mindblowing that is so helpful you can drag it you could drag it look at that nice yeah because sometimes when you use the normal inspector it doesn't come out too nice yeah but uh i would recommend doing a console log to see the structure though so that you would see that it's an array see that it's um an object that will help you sort of understand the structure but that's a really good tip yeah nice okay so what we're gonna do now is for some reason we're seeing this error which is strange so if i open up my inspector let's see what happens so we've got array i'm just looking inside so we can see array and then we've got poster path um interesting so it should be right poster path just trying to figure out why that's actually freaking out um oh yeah okay nice so the reason why this is happening now is because poster part is actually looks something like this so i'm just going to paste it in here right so this i know why this is happening now so i'm going to go ahead and paste a poster so just so you guys see the attribute that i was talking about was something like this it looks something like this right so you can see that's not a url which is why it's falling right oh yeah yeah so what we needed to do is there is a url and i found it previously in the docs so if we go up to the top of the file i'm going to add a const here and this is the base url that we actually need ah nice and then it append to that is where you'll get your images from exactly that so right now what i need to do is i need to say i'm going to do string interpolation so this is a javascript feature and then here i'm going to say um boom i'm going to do this boom and i'm going to say base url so i'm going to do base url and then i'm going to have the movie poster right which is should be all good now so now if we save it we should see some huge images right nice nice so we get some massive massive images now wow that's happening oh yeah there we go yeah because we haven't seen any styling so you just can get these huge images and at this point don't freak out guys it's a completely normal thing and we just need to add some styles to this to get it working right so what we're going to do now is to get that looking a bit cleaner we're just going to do we're going to do a few things at this point we're going to say we're going to add a class name so we're going to add a class name and we're going to say this is a row poster and save it so let's go ahead and you know we should we should actually add pretty yeah by the way um devin said yeah we can add prettier right now too devin said you have to run quoca by holding ctrl shift q on the current control shift here oh no don't do that don't do that oh control shift oh i'll press command shift yeah 150 i was like whoa yeah yeah control shift here logan says those images are very high resolution yeah yeah i think i'll look into it later after this stream yeah we'll check that out so for now what were we doing we were saying did you want to install prettier yeah let's actually do that now because that might actually be really helpful so let's go to extensions i recommend everyone does this by the way guys it's a really handy extension so type in priya yeah and then what i like to do look at this seven million downloads insane seven million developers and then let's go to you need to go to your preferences so if you go to the little apple icon um oh yeah oh nice i'm gonna make it out uh so here if you type in so if you get rid of everything inside the search at the top and just type in format so go ahead and type in format and save yeah this is the most annoying one guys like you will not find this but this is actually like i could not get prettier to work for so long because i didn't know my way around visual studio code that much i'm from pycharm and python world and so here you make sure you go into the settings so step one is get into settings very important step two is type in format okay literally type it hit enter and then this is where it will come up format on save editor check that box once you check that box you will be good to go then every time you hit save prettier your app will run and format all your code for you if you don't do that prettier will never work and you will always wonder why your life is so bad yeah and we'll give a little demonstration of how good this really is so i think you need to follow me again after we installed that nice so now what we'll do is if i basically so you always run into situations where your indentations everything's messed up so now if we pretty much hit save look what happens so as soon as i hit save it just fixes everything yeah so it's going to save you a bunch of time when where and it's going to actually be a lot easier to sort of do stuff so what i'm going to do now is i'm going to create a row.css file so i think i might be able to say row.css nice yep so we create a row.css and if i go to the top and i import that file so this is a benefit of using components because now we can only we can have all of our uh row css inside of uh its own file which is me so let's go ahead and actually style that so let me just check something so row right so what we need to do here is basically i'm going to actually so all of these posters right i want to just style them a little bit so i'm going to go here i'm basically going to say all of the row posters i want to do a neat little trick so i want to say the width is going to be a hundred percent right so it's only going to use up 100 of the screen rather than what doing what it's doing now so you see now it's corrected and it's sort of fitting within the screen right i'm also going to add another rule so i'm going to say object fit so this is a really trick object fit contain will keep the aspect ratio so regardless of how i move it and shape it and size it it's going to keep that looking really really nice another thing i want to do okay is is it is it working your object contain thing yeah so the reason why it's not changing at the moment because remember the width is 100 so it's good so it's using up 100 but the aspect ratio is still correct but where that comes into play is when i actually say a set of max height so here if i say max height of 100 pixels and i save this now check this out oh nice okay so yeah so we have a quite a nice looking thing there yeah what we're trying to get it to just so we can all visually see it is like we're trying to get it to look like this you know but right now we have right now we have a giant column but essentially we need to turn it into a row like that yeah so the way we do that now is if we go to remember we actually surrounded all everything inside of a container called row posters right so i'm going to go ahead this thing is in a container called row posters and so basically what we're going to do is maybe drop in flexbox and then make it exactly all column based so flexbox will allow us to just do it with like literally two lines and then boom will go from column to a row yeah so if we i'll comment it out and then i'll uncomment it and show what it does so let's have the app running so the local yeah so without flexbox it does this thank you if as soon as i add flexbox into the container look what happens boom so there we go remove that flexbox let's see that in action again that is sick so flexbox is so nice you guys it makes your life so damn easy do that again exactly so as soon as i uncomment that like boom it's gonna just change everything another thing that um logan dropped that was pretty awesome as logan said uh he's like man between these three clones and jacob's ecommerce store next week my portfolio is going to be tenfold he's like thank you awesome yeah that's exactly what we aim for and i recommend everyone does that so all of these make sure you build them add them to a portfolio that's like the most valuable thing you can have yeah because if you then go to upwork or you go to craigslist or you go to any platform then go and get jobs they will look at your portfolio and they'll be like okay awesome we'll hire you exactly so now we actually have a really nice starting point everything's looking good um i guess what we should do next is i like to add a little sort of transition effect to the poster so that way if it ever changes size it will do it in a really slow way so that's basically just saying if we ever change the size for any reason add a little transition so it basically just takes four i think that's four and a half so 450 so it's like just under half a second i think um and it'll basically just nicely sort of change size um and then what i'm going to do is i'm going to add a margin right to everything so right now you see all the pictures are touching each other right yeah everything's touching each other but we kind of want to have this oh remove that again so do it a few times whenever you do these changes do it a few times like repeat it a few times so you can visually see it yeah nice okay i love that you see that it's a really nice sort of effect right and then it sort of then it stops everything from touching um nice and what we're going to do next is we're also going to add a hover effect so i'm going to go over here and i'm going to say row poster oops and i'm going to say when you hover over it yeah i want to do the following so i want it to kind of grow a little bit right so i want to say here when you say grow what do you mean by that you mean like so when you say you literally mean this thing right when i hover over this boom does that nice little so basically now what we're trying to do is build that experience in our app because ours doesn't have that when i hover over it it's just kind of very static sits there but we want ours to grow exactly that and right now what we want to do is remember we added that transition so it means if we ever change the size it's going to actually so anytime we use the transform effect so i'm going to use that here so i'm going to say transform and scale to 1.08 of your size which is just like a sweet spot yeah it's a very light like light light amount so i just tested this out before so it's a very light light sweet spot here and then we're going to say opacity one um so that i can actually get rid of i don't need that right now um yeah so what we're going to do now is if we go over it because i've combined this with transition so i'm saying apply a very small delay so don't just pop up and be bigger so we'll show that effect in action so if you just hover over it oh look at that that is really nice remove that trash if i get rid of the transition look what happens it'll snap so that oh that looks clunky yeah it looks horrible right but if you have a slight delay this transition then look how silky smooth it looks oh that is silky smooth but with so little like that and that thing right there that is nice it's crazy right that is beautiful so on hover you guys that's what's happening that's cool so okay oh yeah and one good point that michael also makes for you know why we have this distance over here is it's important to keep distance in these times nice yeah so a little bit of social distancing even for our app nice so for the row on so so that container that we spoke about earlier if you notice i because if you just go over to the app now and just start scrolling right look what happens so start scrolling whoa like we don't want that to happen right we don't want to we don't literally my header is moving out of the way whereas in the actual app the header and everything stays there and just this thing moves um and also just that row moves actually i just realized nothing else moves just that road that's really cool so here this entire app moves rather than the row yeah so we want to keep it we want to kind of keep that straight forward there so the way we do that is we go over to our container which is row posters and we add this rule here we say overflow y should be hidden so that's we're saying the vertical axes if there's any sort of room to for for a little scroll bar but we want to hide that and then we're going to say the x axis should now be a scroll right so now look what happens you add it threw in a scroll bar nice that is so clean all right look at that and you have a little spoon yeah it's beautiful hold on one second oh so this scroll bar actually works even on my computer if i just hold shift and i scroll that works too yeah so that's cool right and that's really clean but look what happens when you hover over the uh the the pictures now and all you hold all you have to do dude front end is actually blowing my mind one second this might be like normal stuff for you but it's actually pretty freaking mind blowing for me so like this one line here added the scroll yeah yeah so can you can you also add scroll here i want to see what happens it'll add a scroll on the yaxis right yeah so if we do that now you see it adds a little bit of scroll for the yaxis i don't see any scroll for the yaxis okay can you see that on the right look at that little tiny oh yeah yeah yeah yeah it's a tiny scroll bar it's it's there yeah yeah yeah oh yeah i can go up and down yeah and the reason why that's happening is because remember like think about what's happening here so when it goes a little bit bigger the the actual container is getting bigger so there's a reason to scroll right i see yeah so so here we run into like a front end sort of decision what we need to say is we need to say okay in that case we want to hide the the vertical scroll and what we want to do instead is add a padding of 20 pixels so that when it grows it's going to grow and you can see the growth so that now if you hover over it and now it doesn't crop you see that it's not cropping the tops off yeah right but if i get rid of that padding look what happens yeah it's gonna cross it zooms in and it crops out yeah i see i see what you're saying yeah you have to like if you're going to do a transform you're going to have to pad your container yeah so that's the first thing but if you notice in netflix like in our clone we didn't have that little scroll bar because to be honest it looks a little bit ugly right yeah that's why yeah yeah so what you need to do is you need to basically do this special rule you need to say row posters uh some row posters and then you say colon codon and you say webkit so it's webkit so i think it's dash webkit and then it's dash scroll bar and then here you basically are saying you'll be this is basically a rule to say tell all of the browsers so whether it be in edge chrome firefox whatever you're using display none so this is saying don't ever display your scroll bars but keep the functionality of it nice that is clean no more scroll bars so that way it looks really nice right yeah so that's that's really cool so then we get that working and everything sort of nice in that front now what we're gonna do and this is going to blow your mind a little bit so we've basically just set up the row right we've set up a row it seems to be all good everything seems to be nice um what we're going to do is we're actually going to do a little optimization here so in react whenever we render a big list so in this case i know it doesn't sound like a lot but when you've got 20 items in a row and then you've got a bunch of those rows we should be rendering it in the most efficient way and react has something called a key right and here if you pass you just need to pass some unique information here which is unique to that specific in our case each of those pictures we need to give it like an identity right so that way if anything changes in that row react doesn't simply rerender the entire row it just rerenders what it needs to rerender right so what we can do here is we can say movie dot id because each of those movies that came back actually had their own id yep so we can go ahead and do that and that will fix it for us so if i do this and save it now what you can see is it you wouldn't know it's much but it's actually a slightly bit faster than what it was before nice right so that's a small optimization step that you do yeah remove it real quick i know it's probably not going to show that much but yeah so if we remove it now uh you'll see if you refresh it yeah even i'm going to refresh it refreshes just a little bit slower on to what it almost feels like yeah yeah and when i scroll you're gonna notice it yeah especially when you scroll through and the way sort of react caches and everything like that it really does play a good part in sort of helping out so we can get rid of our little marker now and we've got some simple code that's sort of doing what we want nice so the nice juicy part now is basically where we rendered all the rows before wow this is one cool compliment so devin says it's funny i just struggled with this padding trick for hours yesterday for a slideshow if only this video came out yesterday dude honestly i feel your pain do you know how many times i sat there and i couldn't figure out i had a job once and i couldn't figure out how to overcome that padding issue and i must have spent the entire day trying to figure out how the hell do i get like the padding to show out of it so you're welcome i'm glad i know that i know that pain yeah nice damn it's funny because sunny will know all these things like all of this stuff takes like so many days or weeks or months of pain but then you might just give that trick just up front almost kind of like it's nothing so a person who's listening and even this happens to me because you say it so casually because now it's normal to you and maybe it's not normal to me you know i'm listening to it and i'm like oh maybe maybe it's important but if i hear your voice in this normal team i'm like i'll ignore it it's probably not that important so yeah one thing that's important for everybody if you're watching this just know that whatever value you're getting is months or years in the making on many different you know uh jobs freelancing and all of those skills and just hours and hours of like learning this and you also have your masters right yeah so so yeah when he says it he will his his style is he will say everything like super calmly like it's actually no big deal but like write that [ __ ] down because it's gonna save so many hours and frustration for you guys so i would that's just one thing i want to say um you know just because i know sunny yeah he's a good friend of mines nice yeah it's true actually it's a really good point that causes mention because i tend to sort of forget that very quickly and then it's like because he always rolls me in back to sort of like you're saying it really casually to maybe explain it a bit more so i think something just to know and add to what kazi said there is guys whenever you're sort of coding something or like building from scratch you're always going to run into problems or situations where you would spend hours i'm not joking like we've spent even when me and kazi have been coding before there's been hours where we sit there and then we had a problem one day where we spent hours and then within five minutes we set a timer and we managed to solve the problem yeah so sometimes yeah sometimes it's insane like it could take so long and then suddenly a light bulb will click just don't quit and even like sometimes it's very disappointing because even when we were working on the stripe to make that one form work i mean there's like yeah we spent 80 hours and three or four days coding that up like nonstop coding and most of the coding was just like looking at documentation just being frustrated and like not understanding and like we couldn't even make one line of code progress on that project for so long so that happens sometimes definitely it does happen and it's something which is completely normal and you shouldn't feel disheartened by that yeah yeah so we're going to have a little bit of magic here where basically we've just built a bunch of components and we built in such a way that it's going to be really impressive to show you something now so if i go ahead and i just paste these components out so inside of the app the really nice thing now is we have a bunch of different categories so we've got trending now we have top rated so top braided just to be clear i'm gonna say here so they can see it so we have top rated which is going to be this category right here what's the next i think it's action movies action movies right there there's comedy movies yep then it's horror movies mmhmm romance movies where's my arrow when i need it and terry's oh yeah i spell that wrong yeah documentaries document it teddies right here yeah there we go and here what we're going to do is we are going to add in the appropriate requests so this is another example of if you build something right it's actually going to be very easy and it's going to make your life super easy when it comes to doing it i just need to get the request from ice cream because i don't get the auto complete some reason um so let me go ahead and open up requests so now let's go ahead and pop these in so we've got fetch top rated so this one's top rated fetch and guys you can start from the bottom and i'll start from the top uh you can start popping them in if you want so actually just i'll stop following you oh yeah so fetch action movies comedy and horror movies there we go so that one's documentaries and that one's because this is how you guys are gonna see it so romance that one is yep and then the final one is horror movies so i think let's swap this one out so this one is dot uh fetch horror movies awesome uh now if i just click save the whole app the whole app is literally gonna do this magic oh that's so cool that just worked just clean it just works look at that hover over it so nice yeah and also we forgot to do one clean up step so when we actually were cleaning up the app if you just uh follow me one more time so let's uh yeah so now what we're going to do is let's go over to app.css so when you actually start off guys i want you to get rid of this stuff so go ahead and clear our app.css it will change the look and feel of your app but we don't want to have anything inside of our app what i would recommend is you go inside here and you add this one rule which does this we say margin zero so because by default the browsers give you this weird margin so if you notice on the right where cause he's got the preview open as soon as i add this one i save look at the imaginary margins that are going to disappear right see that it gets rid of all those imaginary margins right and we just don't want those to start with because we don't want to deal with them um so that's something just a side note you want to get i love dara just get rid of that stuff yeah oh yeah that this one has the mine yep yeah and then that way all of your styling is going to be all of your actual styling it's not going to be getting rid of things index.css you can leave this stuff this is just going to be some font stuff so unless you change the fonts i'll just keep this um but app.css i would change okay so now with that said we've got a nice looking app but have you noticed that the app that we saw earlier uh if you notice the app that we saw earlier uh so we had the the netflix originals were bigger than the trending now top braided so we had larger tiles so yeah we're gonna yeah i can hear you know oh really okay oh yeah yeah that's true actually it might be not on the stream okay okay okay now i can't eat you know cool you can get back to it yeah yeah i got you right okay so now what we need to do is [Laughter] so now what we need to do is change that to app first um so here what we want to do now is there's a few things we need to change so if we notice that look at the deployed app quasi um the deployed version so notice how the those you see the tiles here are bigger right so let's go down so notice how the tiles are bigger and also if you look a bit further down you'll see on trending now we don't actually have uh the posters you have these other thumbnails right yeah yeah so we need to fix this and but we want to use the same component but we just want to have a slight variation so what i'm going to propose is as all of the stuff from the um netflix originals down are the smaller design and everything and it's only one roll at the top which is slightly bigger yeah it's like the height there's like more height here right and maybe less width no wait i think looks so if you look at the posters so the post is actually much bigger as opposed to the ones that you can see in trending now i see yeah so you get a much smaller poster there because we're pulling in not the uh a poster but we're putting in a thumbnail instead got it so what i'm going to do now is i'll show you how we can actually do that so for that bigger one what we're going to do is we're going to pass in a is large row so is large row right and by default what this means is it means true but you don't actually have to write that um so we're going to pass this in so if we go over to row i'm going to go and pull in that prop so we're pulling that in and now i'm basically going to render the styles based on this so the first difference i want to have is rather than having a poster i want to have it so that if the if we're using a large row don't use the poster part but use the back is something called the backdrop part so what i'm going to do is i'm going to say if you're using a large row then use the poster path otherwise use the movie dot backdrop path and this will make sense in a sec when we save it so as soon as i save this notice on the right now all of the trending now top rated and everything look what happens you see that looking nice yeah but the sizing is is the opposite way now so we want those to be smaller and the other one to be a bit bigger right yeah so the way we fix that is we go over to our row.css and i just need to do a few different rules now so firstly i need to apply a class name based on which one was actually coming in so what i'm going to do here is i'm going to do some string concatenation so i'm going to do this so i'm just going to do a little change a tweak here i'm going to say everything gets a row poster class everything gets the original role poster but if it's a large row so if it's a large row then i'm going to give it an additional sort of class called roll poster lodge row poster large right and what this is going to do is we're going to style it basically and say you get the bigger styles if you are a larger row right so if we go into row.css now what i'm going to say is that the larger rows are going to get a max height of 250 pixels but they're going to get slightly bigger so if you see the normal rows got 100 pixels but the bigger one is gonna get a 250 pixel limit so this is going to be the netflix original one yeah so now you see that right yep they're a bit bigger and then we go over here and we say row and then i'm going to add another hover rule so just like we've done here but instead i'm going to say this one gets a slightly bigger hover so it's not naught point it's one it's not point zero eight it's point zero nine instead right oh and this one so now check this out look at that so now if you do wow it's really thick right you get a really nice user interface and you get bigger posters at the top and guys this is all using the same component so i really want to stress that so now we have a all just by passing in one prop we can differentiate if if that row is a large row or if it's a small row oh that's really powerful wait hold on hold on so okay so let me actually so go over to app.js and you'll see it here so row okay so you're you're you have a row component and then you are giving it a title prop and where are you telling it it's a large row so just for the large row we pass in this is large row with nothing no equal signs nothing right so so if you don't pass the equal sign it defaults to this okay and so when i go to row it's taking the title fetch url in this large row nice okay and if that is true then it does this large styling yep okay and also got it and this large styling is where is this large styling at it's in row.js no i mean yes sorry yeah nice okay so right over here okay nice nice nice nice nice clean very clean really nice right yeah nice okay so now what we're going to do is we are going to move over to the uh so we we we've got the rows set up so they look really nice they look really clean um what i do want to do is if you just follow me again let's just go to the css oh oh nice yeah so we got to grow so now the outside row if we notice it's actually touching the side so i don't want it to touch the side so i want to basically say row and then i want to give it a margin and i'm going to say give that margin white um sorry margin uh left of 20 pixels so now look what happens um so if we go back and i uncomment that out so you see it pushes it to the to the right because we're giving it a left margin right and that gives that little nice gap yeah um and now what we're going to do is we're going to basically go to our app and basically i'm going to base get rid of this top a clever programmers let's build netflix cone for today and i'm going to mark down some stuff that we want to have here so there's two components i need to build now there's one which is the nav bar so the nav bar should be at the top and there's another one which we're going to call it a banner right so if you go into the deploy that we can give a quick demonstration of what we're talking about so you've got the the banner at the top which is this big thing and then you've got the nav bar which is the the navbar with the query so banner when you say big thing is like where it says the witcher right now yeah exactly okay so we're gonna build this banner out right now right and then um header is this thing right over here where it says netflix at the top exactly okay and now we'll start to see everything sort of pull together when we get this in so banner we're gonna go ahead and create right now so we're gonna go and do we're gonna create banner and i'll create the file so that way it doesn't stop the sharing so i'll go in and create a banner.js and so inside and right now inside banner.js and then we go here i just need to import it so i need to do import from oops import banner from uh banner yep there we go and i remember guys this little snippet trick so we say rfce boom it gives us everything which is always nice um and now i'm gonna just check something so now what we're gonna do is we basically want to so for this banner we need to think about how it works right so it's basically because it's a top it's going to be something called a header instead of a div um so i just like to do that all the like always to start things off but i want to basically have a few things i want to have a title so the title is if you open up the deployed app because it'll be more visual to show them yeah so so we have a title so that's the witcher so this is okay i've got it yeah so we have the the title which is for the witcher we then have um we're gonna have a div and inside of that div we're gonna have two buttons so that's gonna be the ones that you see so play and my list and then we're gonna have a description right yep so these two buttons right over here yeah and for this part um so i'm just going to add a comment here oops um let me just add a one second we add a comment here so this header i'm going to actually give it a background image right so this header i'm going to give it a background image and that's where you see that with your image right yeah so that's basically i always recommend you do this because it kind of gives you a nice sort of overview of what's going on so what i want to do now is i'll basically need to have a movie so this is where we have some some pretty cool logic so i'm going to make a request here so i'm going to need the um so first thing i'm going to need to set up some state so i need to have a movie piece of state and i'm going to do set movie so i'm just setting up some state here and what the purpose of this state is going to be pretty simple and the re and what all it's going to do now is it's basically just going to be responsible for whatever random movie gets selected at the top yeah so yeah this is being this is a random movie because every time you refresh this it actually gives you a new movie right yeah exactly so we're going to write that exact logic right now yeah and it is fast every time i hit refresh that's crazy yeah the styling here was the really really sort of critical part because it's super responsive here um so we'll we'll show that now as well so if we go to what we need to do now is remember we use we have we demonstrated the use effect earlier so use effect is a piece of code which runs based on a given condition so in this case we want this to run once when the banner component loads and that's signified by this because we have nothing inside of it yeah nice yeah and then just like earlier we showed that if you want to run a asynchronous function so anything which makes a call to an external api or something here we're going to say fetch data so you do it like this and then you have your code in here and then you basically you need to actually call it so you say fetch data yeah that's a good idea actually that we should update the uh the side panel yeah i just did i just updated the top yep so now we're doing the banner build yeah oh banner build yeah yeah yeah yeah so now we're building the banners um awesome and then we should tick off the rows because the rows are pretty much done though nice so then what we're going to do is we have fetch data so all i need to do here is i need to actually first i need two things i need requests so i need my request so i'm gonna say import axios which is remember like a sort of postman kind of thing from our axios which had that sort of base url configuration already sell and then i'm going to say import the requests so remember those predefined requests the ones that we have like fetch from the romantic section or fraction fetch from the action movies all of that stuff we're going to import that stuff as well and then what i'm going to do is i'm going to say const request so const request equals and then here i'm basically just doing this so i'm going to say a weight and then we're making a request to get the netflix originals because all of those random films are at the top i want to have them to be the netflix originals but you could have them to be the action films or the trending films or something like that yeah yeah and now this is the clever part right so previously the way we did it was we had something like this we had console.log we had something like this we had request dot data dot results right and that had 20 different results in oops request.dated so this look this was a big array so imagine like you've got the array here it's a bigger and then we had like movie one movie two like movie three right we had a bunch of movies inside of this array right um but the problem is is that now we don't actually want we just want one but i want to basically randomly select it so i want to randomly select which one i want so in order to randomly select which one the way we do it is i say so this function right here is just basically grabbing a random one yeah yeah so this little this this right here is grabbing a num a random number between like zero so the beginning of the array all the way to you have to do minus one so that way it doesn't risk going over yeah um yep so we do that so then what i'm going to do now is i'm going to say i have a nice one i want to show you yeah it's like i have a yeah there you go yeah so you could do that right and then what we're going to do is rather than console logging it here i'm actually going to just go ahead and straight away set this as the movie because this is going to get us one thing back nice yep so let's go ahead and do this and to test that it all works so this is just a random this is this all simplifies to one string guys or one specific movie or object or something right like the yeah it's an object in that array so this will just get you one of those items randomly yeah so i've got some error here where is it because we've got this set movie is this you're not closing i think this uh there's something with the squiggly and this thing happening so something of the closing uh i've got a snippet here pressing a bit so let's just do this so this is a pressure yeah there we go yeah nice so we return the request outside okay cool uh we need to basically uh import user access yeah oh yeah you can here we go all right nice nice and then basically to get to make sure that this is working i always just do a console log i'll do a console log so console log movie so now where do you have clg uh oh that's a snippet that's es6 snippets so that's another extension that's another extension called es6 snippets um so here what we're going to do now is this is from requests that's what's freaking out okay so now if you open up the inspector you should see that a random movie gets pulled in in the console okay so you should see oh we need to actually stop so i'm gonna just go to row and stop console logging in row because that's spamming the console log um so now if it refreshes we should see it you should see um the original are you getting you're getting the entire object right yeah i am so so now i should be doing it so we've got we're doing we're making a request to the netflix originals banner 21 so it would start off as empty but then if you go down it should actually be correct so let me double check on my yes it is there is that yeah so if you go down uhhuh it's empty it's coming it's coming up on my localhost so if you refresh again so there you go so if you go up nice right here there you go yeah yeah so that's going to be the the movie the randomly selected one right and every time it sort of starts it will randomly get one yeah um so what we're going to do now is we're actually going to use that movie to actually put that background image and do a bunch of stuff around that yeah so the first thing we're going to do is we are going to have a div so i'm just going to go here and inside of this header i'm going to have a div and i'm going to call this div i'm going to say banner content so this is just going to be all the contents that we see including the text the buttons and everything like that yeah everything except yeah yeah right there but the actual sort of header itself should just have a class name of banner so this goes with them and then everything inside here now goes here so we've got some structure to it right okay and then what we're going to do now is for the title i'm going to have a h1 so i'm just going to h1 so what's the what's the reason for having a header like this class over here and then this banner contents like why can't you just not have this header over here and just have everything inside of this div yeah so that's a very good question the reason comes to when we start styling it so i need to start doing some stuff with the background image for the banner i don't want to affect this stuff so i want to apply a different rule here than i do to this container so this is applying to that image in the background yeah so that would be applying to that sort of background stuff but the banner contents you run into some small quirks yeah got it but most of the time you you can actually get rid of the div but in this case the way we're going to style it it kind of clashes so which is why we have to be a bit careful makes sense um okay so the next thing now so the first step i'm going to do is actually add that that banner background so let's go ahead and here i'm just i've got a snippet here so let's go ahead and use this so basically i'm adding so in um react what you can do is you can actually add like sort of javascript css right so here you can do style and then you can add you can basically pass an object so an object inside of your jsx and inside the object i'm going to pass these rules so background size means use up all of the size from the the container background image this is remember that base url this is just that base url for any picture and we're saying go and get the backdrop path so not the poster image that we're seeing on netflix originals but the trending now and the top rated that sort of image we want to see that one on the back yeah this little question mark is for if if the movie is ever for any reason undefined it won't freak out and and crash it will just say like handle it elegantly right and background position basically just centers it right so now if we save this we should see so let's scroll up and i'll save it and then we'll see it pop in so now if i save this we should be able to see a um oh right because we haven't actually got any content inside here there's going to be nothing to sort of so that's why it's not going to see anything just yet yeah we need to add something here so what we're going to do is in the h1 i'm going to basically do this so i'm going to say i did notice so i actually tested this a little bit earlier and i found that some films that come through here actually either give you a title a name or something called an original name so the way we sort of account for that is we do this all right and we say yes you say if because some apis don't always give you consistent information so to account for it you just find the edge cases so in this case they they can give us so this is so elegant i love that like question it's cool you got the little oars that take care of your edge cases and then this little thing here that is clean that is clean and it doesn't it doesn't empower you as well so it's kind of yeah yeah and because you're using all the truthiness that's already built in you don't have to write because most people would be like if movie title does not exist you know then basically look for a name and then or then look for original names so they would have this like giant if then statement here you're just like using um you know taking advantage of how ore works because yeah that's effectively what it's doing and then this question mark here just handling any errors i mean this is this is a really clean this is really clean it's really elegant yeah i recommend that everyone uses the question mark was actually something pretty new that came in it's called optional training um and it's just yeah as soon as they came in i was super happy about that because it saves you a bunch of headache and stuff so let's save that file now and we should be able to see i saw something at the top right there yeah so if we've remember we haven't started that properly but it's actually starting to look a bit somewhat in the right direction right yeah um so let's carry on with that so we've got that and then what we need to do now is actually so remember we've got this so we can get rid of our little marker here there we go and here we want to have a div so i'm going to say div and this div is going to be called uh banner underscore buttons and inside of here i want to have two buttons so i'm going to have button and then in emit you can see this you can say button times two which is cool and you can actually say so this is a really cool thing in emmet so emits a shortcut that's usually built into vs code so you see you can do this you can say button and then for each of them i want them to have a class name or button and i want to say i want to have two of those buttons and then watch it so as soon as i hit enter boom gives me two buttons nice really cool right yeah kind of saves you from typing out all that boring stuff and it gets the class name right yeah so the first button is going to be called play the second button is going to be called my list yeah uh and then that's the same and it's called emmett no i know i know but but but what did you do to make sure it got the class name did you give it the class then when you hit the autocomplete or whatever yeah you didn't actually write this entire thing in in the one emmet statement so i do div yeah so that i want to div with banner buttons oh yeah yeah you did give it a class side of it i want to have a button with banner uh buttons and i want to have two of those and look what happens if i say oh nice yeah it all happened at once yeah that is nice slick really good and to auto complete it you what do you what do you actually what what's the hotkey to autocomplete an emmett statement you just hit enter it will automatically start to do it so you know like how you did you do h1 and you click enter that's emmet nice okay awesome i love how your girlfriend marabon she is like stopping people from spamming in the chat that's real support i think we actually have a we have a mediator right we have a few we have multiple mediators yeah yeah go melbourne nice uh so we've got the div and the last thing we're gonna do is description so uh i'm gonna quickly add a description so i'm gonna use h1 and just say uh class name so i'm gonna get a class name of banner oh i should have used emmett here comment description that's fine description and then here i'm basically going to use the movie overview so here movie overview so that's another property which is actually just they actually do give us a description so it's like a synopsis right so we're gonna do that so nice so we have everything on the page in a rough fashion right so it might not look that pretty but it's it's all sort of there um okay so now we're gonna actually style that because it looks really horrible right now yeah the information is there i agree yeah it looks really horrible so this is gonna be a real transformation right now that you guys are gonna see so we need to i'm gonna create a banner.css so banner.com oh the button is there's buttons are there too i just realized the buttons are there marvel's daredevil the header is there i mean as a backend developer i mean what else do you need you got everything what's that yeah i mean like a back end developer at this point would say i'm done yeah yeah jacob jacob at this point would usually be like i'm finished yeah yeah so what we're going to do here is now we're going to have banner so let's do this what was that keep going keep going keep going yeah so we're going to have the banner um and here i'm going to say the color of the text is going to be white so that's the first change yo check this out bro uh devin just said didn't know about the asterisk 2 in emmett that's crazy to me i also didn't know about the nested emmet commands you just sped up my workflow like crazy dude you can even put brackets around complicated emit statements and do times too so you get the whole thing it's insane like you did you could do that level of like it's it's really crazy damn bro i did i just realized i look adorable with this little thing right right underneath here you know i got a good look going so i'm just gonna keep it i mean you got a few people saying can i be your friend cozzy so i think it's like slick is working all right guys let's get back to the code oh nice let's see what you did there object fit and then here we're gonna do i'm gonna give it a set height so a height of i saw was playing around with it earlier and i think like the most specific thing yeah as like when you're a good developer you guys you can just nail this in the first try like yeah honestly because all i was doing was looking at the the actual netflix app and i was kind of just like adjusting that number until it came somewhat near it um so yeah i said that's how i got that number um nice so what we're going to do next is we have the height and then i'm also going to do the contents next so the contents are what actually contain everything inside of the um so if we look at our banner here everything that we have so all of the the sort of text elements so you see where the buttons are where the header is where the description is is all inside of banner contents so if we go over to banner contents i'm going to add a margin left so i'm going to add these one at a time so margin left is first gonna push the stuff slightly away from the edge so as soon as i save that we'll see everything push slightly away from the edge we should see that uh oh it hasn't saved yep so now you'll see on your screen it should have pushed away from the edge so banana.css am i oh i'm not importing oops so yeah that happens at times say import banner dot cs oh there we go so save so now you can see that we've got white text and it's pushed away slightly then i'm going to add a bit of padding to the top so i'm going to go ahead and get rid of this and then i'm also going to change the height of the content so you see we added the it changed the the height there right we're also going to change the height but you see it's it's sort of flying off it right which is yeah so we will kind of want to limit that height so i'm setting a fixed height of 190 pixels oh nice that's the melbourne sister hey sir nice oh that's cool she's gone back to university so she's probably watching from birmingham right now nice yeah got the whole family in um so now let's actually style the title so um let's go ahead and change banner tai also banner title so banner title is going to be the top title that was talking about so whatever the film whether the film was called we're going to title it style it here so i'm going to change the phone yeah that's what i mean you've already got that sort of gap that we saw earlier right so i'm going to yeah exactly so right now i'm actually gonna um use something called font size so font size um but i'm gonna use rem so i inspected netflix earlier and i was trying to figure out what they had and they use these exact values so i use them too so rem is a different measurement so we're using pixels but ram is also a good one font weight this is going to change the sort of boldness of the uh the top and then i'm going to add a tiny bit of padding underneath the banner title so this one here so you should see now as soon as i click save oh my god a shout out nice and she got highlighted on the screen nice yes there we have a nice little thing going so we've got that i don't know did that take effect on your screen or no on your yeah so on the title so banner title no i didn't actually add the class name okay so here that's why we didn't see that so if we go here yeah so as soon as i add this in so class name so if i do banner underscore title banana tile so now if i save that you should see um we should have a little bit there we go so you see the text got a little bit bigger and it has a tiny bit so that still looks rubbish the the sort of um description so i'm going to start that next so what we're going to do for the the description is i'm going to go ahead and do banner description oops bem you do double underscore so it's banner description and then here i'm going to do a bunch of rules now to get it looking as we want it so firstly i'm going to change the width because if you notice in um in in netflix and stuff like that the width never sort of goes past a certain amount so i checked out what they were using and it's 45 rem and that's pretty much a case of it will stop it going greater than a certain width on the page okay the next thing is line height so again i figured out that they use 1.3 and i was trying to sort of mimic what they had on theirs and there was a few other things so there was padding top and font size i also grabbed from them so the padding top was one rim so you'll see it push slightly up and the font size is not okay so you can see it's already starting to start start to sort of look like them right and the way i did that is i sort of went to their website and i just inspected and i could see the different sizes and i was playing around until i got like a a close sort of number comparison right uh okay so what we're gonna do now is uh also i'm gonna add these two rules so the first one is max width right so max width is just gonna limit it always to 360 pixels so you see that it pulled it in right so if i get rid of that it flies off to the side yeah so this is completely going to be responsive and it will keep it very very nice and then the height the height is also something we need to sort of bring in right so i'm going to give it a height of 80 pixels right so as soon as i do that it should yeah so i have 80 pixels so that should limit it to 80 pixels um okay so we've done that the next thing is right now of course if you noticed in our demonstration it kind of truncated the text so when i say truncated i mean when it gets too big um success thanks and you've got to get back to teeth see you soon alright all the best she's a dentist nice um so truncate is basically when we have too much text on the screen so you want to just have that little ellipsis you know the three dots yeah so the way we do that is if we go to banner.js then what we could do here is i'm going to create a function now and this is a function i found online and it's completely copied and pasted from a stack overflow article but it works really well um so i'm going to paste the function here so it's truncate and it basically takes a string and you give it a number here so n is a number which is basically saying truncate after like let's say 500 characters and you can see here exactly exactly that yeah so over here where it says movie overview i'm just gonna pop it in here so you see truncate and i'm saying after 100 yep so now if you refresh so that one's actually quite small so if you refresh one more time oh there we go so you see that it truncated yeah yeah so that's a really nice way of sort of keeping it nice and short and that was a first for me as well doing that which is quite nice um okay so the next one is the buttons so the buttons look a bit like ugly right now so i'm gonna just copy this entire snipper because this pretty much the buttons i literally got the styling exactly from what i saw so this exact snippet right here is the cursor is basically going to make it so it's that little finger pointer the color of the text is going to be white i don't want to have any borders the font weight should be slightly bold i bought a radius of this means it's going to be slightly rounded on the corners and then a bunch of padding and margin rules and then the background color this is like a light gray that we have here and then the slight padding on the bottom so to make it easier to reach i can hear you yeah also guys if you can't hear quasi because it might not be coming through oh no i have somehow i was muted for like a really long time like probably oh really like i just realized i was probably muted for literally like half the stream or something something really long oh dumb yeah i just i just saw that so thank you guys for letting me know that was muted now it should be working okay i'll keep the i was i was hiding the volume levels sound levels i'm just going to keep them visible at all times so we can see it yeah nice um okay so i think if everything if it's all working yes now now it's working okay nice um guys if that ever happens just let us know um cool so now what we're going to do is i'm going to save that so the css rules for that and we should see you see the buttons have got a nice little star now ah yeah yeah yeah right here i can see them they're looking clean look at that yeah and the one more rule that i'm going to add here so i'm going to say for the button when we hover so look at that it's already looking like fresh but when we hover over the button i want it to sort of invert the color all right i wanted sort of the text to go black and then i want the background to go slightly gray white and i want it to transition when it does it so i'm adding this snippet of code here yeah yeah so this is transition all just means give every sort of transition that could have come come into play um allow it to sort of slightly fade over so if you now hover over it you'll see it's got a really nice sort of gentle um styling so if you hover over the play in my list button oh nice yeah yeah awesome so now we actually have pretty much everything set up but there's one thing that we need to do now so as you can see everything looks nice right but it doesn't fade really nicely into netflix originals right yeah so there's two things we need you know the first thing is cuts off a little bit uh so that's more the resolution so it sent us off but like that's sort of a compromise so if you scale in you see it sort of scales yeah so that's gonna include that's gonna need some additional code but for now it gets the majority of screen sizes you see that like it would work from sorry but like that's more of a dynamic issue yep um but in this case what we need to do now is the background of the app so i'm going to go ahead and find out what we do what we've done here so background of the app so if we go over to our app.css i'm going to add a slight background cover a background color so you see the entire app is surrounded by a div here i'm going to style that div and give it a background color of background color of this so one one one so this is i think this is like a it's near to black i think it might be black but it's pretty much just slightly off it's just slightly off right oh nice yeah so it's starting to look a little bit better but i mean like the text on the uh the text is gone yeah where it says trending now and all of that yeah so we need to go too oh i see because it's actually black that's why yeah you see like it's like a nice kind of subtle sort of uh gray right now right yeah so all we need to do is go to our row and change the color of the text so color to white so if i save that now boom yeah sort of gets that color back so what we need to do now is if you look at the deployed version so if you check out the deployed version yeah uh you'll be able to see there's like there's this really nice kind of uh gentle sort of um fade right so that fade looks super nice like and it adds that sort of final sort of finishing touch to it right so if we go over to banner so i'm going to go over to mana right now banner.js and what i'm going to do is so if i go to mana oops banner dot js um that's not my banner oops dot js here so if i go here now what i'm going to add is i'm just going to add an empty div right so this is this might sound very strange but i'm going to add an empty div and it's just going to have this so in bem whenever you've got the like we're saying we want to have a banner but it's going to have a modifier so the modifiers we're going to say fade bottom right i think you're not uh following me anymore are you i am are you oh yeah nice yes we're going to add a fade bottom so now i'm going to style this in css and basically we're just going to make this like an invisible sort of banner which is just going to be sitting there and it's just going to be the only purpose it's going to have is to essentially make it look nice and and fade into the the bottom right so the way we get that working is we basically need to add the following so this height i've calculated based on the height that we use up here the one that we've done it takes it takes them playing around guys whenever you have whenever you have like a fade you're honestly gonna have to play around with it and i'll show you what i mean by that so this is this is a background image it's got a linear gradient yeah so if you inspect it if you inspect it i'll show you what i mean wait wait what what is about what has that um is it this over here has a little uh gradient no so yeah so if you inspect uh uh so if you click the inspector and you basically click over you you if you click over where the gradient is so if you click the inspector little thing so if you you see on the left yeah grab that and then go to the bottom so remember i put it underneath right i chucked it underneath the the header stuff right so it's just underneath the closing bag of the header so that's why it's at the bottom and then i've given it a a like a height a set height and you can see now what it is it's just like an empty container with a linear gradient ah i see so yeah when i basically take it out oh that is cl that is nice dude that is so clean like it just adds a little touch because when i add it or take it away it makes a big difference yeah and honestly that's one of the things so front end development is like all about these subtle changes and then when they come together you're like whoa okay that just made the whole thing look really nice yeah like this looks so nice i mean this looks like a fullon final project you know it doesn't just look like oh here's another dummy app that we're building yeah like i've seen a few dummy apps and stuff like that and they just didn't look that clean so i went sort of and added these extra little things that sort of add or get closer to the actual netflix um so nice so i guess now that's the actual top banner done right that's the top down so what's up no no keep going keep going i'm just talking about i'm talking about frankie oh so now what we need to do is we need to add the final thing so the app so the nav so this is one the final thing so i think we can take off i just want to say like this app looks so nice i mean it just looks so clean i feel like if people want to see us do part two or part three of it where if they want to see user authentication around netflix or they want to see um i don't know yeah being able to register have your own account things like that yeah i mean that's something maybe we can even build it into the course sony like add it add it into profit with javascript that would be amazing yeah because we could actually have the um sort of uh you know that login screen that pops up on netflix and then it says which user is sort of in the account we could do that yeah and uh this is what here's what devin is saying devin says i've i'm finally seeing bem in action i know what it does i've seen companies use it but i've never actually tried writing it before it makes more sense now yeah honestly that's really the case with me when i first saw bem i was like um i i just i didn't really agree with that i was like why do i need to use this when i used it with the components i just saw that said this movie looks good nice sunny showing us the nittygritty with the british accent yeah like how we say it is like it's very knit nittygritty you know and you're just like you'll just eat all of that ni it's my favorite thing me agree let's get down to the [ __ ] so now we need to do i think logan said forget uh react teaching is sunny is teaching me lots of nifty css tricks oh thank you very much yeah i'm glad you guys are finding it useful it took me a long time to sort of work out all of these like little kinks in sort of css stuff um i think what would be cool cars is if we actually do a flexbox foggy one one day yes i think a lot of people are useful yeah i really think so i think that would be awesome and uh it is devon also says if you want to overlay gradient over an image you can just do background linear gradient but if the images are dynamic then it's better to add the fade on a separate element yeah so if the images are done at this pattern yeah exactly so it's kind of a mix between like there's always going to be like one way or another i would honestly recommend just playing around with it i've done this approach in some cases i've done different approaches than others um just find what works for you half the time you end up forgetting about what you did five months ago so i'd recommend you just kind of keep track of these or keep a portfolio is so good because you can go back and check the code and see how you did it yeah it's so hard to point like i'm trying to point where we're working on but it's really hard because it's all like inverse of everything right there yeah there you go build the banner so now now we're actually done on the banner so now we're moving to build number so i think it's time to uh time to drop that little the little chime so we've got this oh oh yeah okay hold on we're done with that yeah we're done on the banner yeah when i do this um when i change these things does it actually show it to you guys when i'm like yeah can you guys actually see the editor window yeah can you guys see the editor window with the color open and everything i actually don't think they can dude like ecam is sick you can't miss so yeah because otherwise they would see like sunny and cozy in the top left or something so so what is uh so we just got done with this what are we on now so we are now moving to the number okay let's build nav bar yeah and we'll do this and then we're gonna go to the build the banner and now we're gonna add a little check mark next to it and uh now we're gonna put our now we're gonna be working on build the navbar so that's where the pointer is going to go and i think it's time for a just hey i didn't i don't think they can hear it they can't no one no no they heard that it broke some of their ears yeah now they're they they can hear him they heard it twice not terrible all right guys let's let's get it nice all right so now we're going to create a navbar component so i'm going to go ahead and create nav.js and while i'm there i'm actually going to create a nav.css so nav.css as well nice so we've got nav.js css so inside of our app i'm going to basically pull that in so i'm going to say nav like that and then here in nav i'm going to say rfce because we love that little shortcut and boom we get we get in that bar so now and also this is actually one of the cleanest builds we've done like look at the the actual layout of the app it's actually what you're seeing it's like the nav bar then the banner then all of the rows like this is how componentbased design should be because then if you need to jump into it you can just jump into the appropriate like sort of component and work on it um so now this is actually a good idea i just wanted to mention this uh somebody on our facebook said it would also be good if you include how movie suggestion works in the course i'm sure i'm not the only one who's curious about that so i'm sure they're i think they're talking about you know how netflix suggests movies to you or how they make recommendations so i think that could actually be adding some data science portion to this project could actually be really cool like react data science and that would be cool yeah i would wonder how we would do it to be honest but um i mean we could actually mess around with firebase see if they have some they have some machine learning stuff on there yeah um we could definitely look into it yeah that would be cool that would be a lot of fun yeah everyone said we definitely heard it and everyone think we heard it i heard it bloody hell oh yeah ready yeah all right so now we've got the um yeah so the top so now i'm going to give it a class name the class name of nav so last name of nav and then we're gonna have at the top now so i need the netflix logo and i need that little user avatar right so the first one i'm gonna have is this so i'm gonna have the nav logo so this is literally a netflix logo there's a link to a netflix logo uh an alternative it should always be like context specific so in this case it's a netflix logo so if i save that it's not defined import import now from no there you go yeah so if we see that you should be able to see um okay so one actually may not be there so it's not actually there at the moment what we can do is oh no wait wait no it's there it's a very cute tiny little nav bar actually it kind of looks cool yeah like if you're in full screen and you come to netflix like this i mean i don't know it kind of looks actually cool like screaming at you aggressively um so what we're going to do now is we're going to go into our nav by the way just so we can put it side by side so you guys can see what it actually should be like is um this netflix should look like that right there yeah so that's what we're working on should be a much smaller little logo so i'm going to add the second logo which is the little avatar that you saw on the right yeah so if i save that so that's pretty much a link to a very small avatar so you should see on the on your screen now you've got that little smiley face right yeah very little so tiny so now this would be a really good exercise for everyone to pay attention for it it's going to be pretty much how we use flexbox and we combine that with uh fixed positioning to get everything that we need in the correct layout and form right so let's just put it side by side real quick just to kind of address what you're talking about so basically we're going to be using so right now first of all this is in a column and this is in a row yeah so we're probably going to use flexbox and do that put it in a row like this right exactly and then are we going to be using object fit contain to make the sizes smaller of this or does flex box will automatically do that no we do need to whenever you're dealing with images if you want to keep the aspect ratio so that it doesn't stretch or act overweight you have to use object fit contain got it and how will we make it this small so that we're going to use a uh we're just going to set the width and height of it yeah so we're going to set the width and height of it and then we're going to allow flexbox to determine how far apart the two elements should be got it that makes sense okay yeah and i'm also going to show you a little sort of edge case that everyone runs into because i ran into it today again um and it's a really sort of cool uh really sort of nifty point that everyone should sort of um if you run into it we're gonna go over how you fix it so the first part is is the div that we're gonna style so this is the sort of container that surrounds everything so the first thing i want to do is i want to say that this it should be there all the time so i want it to kind of always be at the top of the screen right so fixed position allows it to stick to the top of the screen so if i do this like this and now if i do that you should see that even if now if you was to scroll uh i need to save this save the file okay so now if you scroll down importing are you importing this file and in your oh i'm not that's good for good yeah that's twice now damn it i'm picking up on the pattern you know that's it now css so now it should come in so clean now i just see that right dude i don't know it looks cool i think we're done i think we're done i think like everyone give the video a thumbs up if you enjoyed that so now what we're going to do is we are going to um so this is the problem right if i give this display flex yeah so what we would typically do at this point is i would say display flex and then by default it should go into a row right so if i save this it should go into a row but can you see how it it did go into a row but it's it's a bit it's acting a bit strange right now yeah yeah so i mean what we're going to do is we're going to we're going to handle it as we normally would and we would assume that because the netflix logo is so big it's just pushed over so far to the side so i'm going to go ahead and style that logo so i'm going to say nav logo and i'm going to give that a so we're going to say that one is width of 80 pixels so it's going to be very small so you see this if we do this and save it now you see it's horrible it scrunches up right so to fix that we do object fit contain right and save it and now you should see like it saved that aspect ratio so now it's like that tiny little thing right yeah now if i do nav avatar and i do it like this and i say position oh sorry i say width nice 30 pixels now this one and i remember i also need to do object fit contain otherwise it's going to get all horribly messed up which i think contains so if i do that them two together boom oh yeah clean this time clean and then if i do justify content so justify content i do space between so i want to kind of i want the flexbox to figure out what the space between it should be right so this is where you would think things are broken right so i i ran into this today and i was like why is it not working oh my god like why is it not behaving so what happens is when you use position fixed with these rules you it doesn't behave the way you need it to for some reason so i think it's positionflix has a clash with justified content or something like that and i tried to do with the 100 so even if we were to do width of a hundred percent here you can see it's also oh well oh okay then again oh nice all right let's just let's just maybe go with that because uh i ran into an issue earlier where i had to double wrap it but i mean okay let's go with that so in that case we're gonna we've almost got it looking as we need it but right now what we need to do is add some additional padding so we're going to say netflix here there's spacing and then on ours there's like it's touching the corner too much oh you actually did it it's actually yeah i added it yes sir right but here's the problem yeah so you see like how it goes off on the side a little bit yeah my avatar is like gone so it doesn't look that nice right so what we can do at this point is we can kind of do two things right so i kind of have an approach with this and this is very opinionated how you sort of approach this issue um so what i would do here is i would give the nav logo because it's always going to be fixed in that top corner i would give the the logo a fixed position and i would say left zero and i would say and that so so now the the logo is not actually going to look like it changed too much or it is going to go push to the left a bit right yeah and then the right one i'm going to give it a position fixed but i'm going to say right um right but i don't want it to touch the side so i'm going to say 20 pixels so it's going to just slightly go away from the side oh see that yeah but for the first one i can i can actually say rather than left 20 pixels uh i can give left 20 pixels sorry and it should push away from the left right yeah now i don't actually need that additional padding i believe oh no i do need that padding because that's the top of the thing right so that's why i did that yeah so in this case now we've got fixed positioning so if you was to scroll down now everything looks perfect as it should like yeah look at that wow that whoops everything looks really clean it looks nice and it sort of does what we want it to do damn um look at that that is looking perfect it's nice right but what we want to do now is basically have it so how can we do it so that i have this so if i do background color black right so this so you see like here for example i need to give it a height so say for example i want to have so i'm going to show a neat little trick now so i'm going to set the height of 30 pixels because these these values can be fixed because we know what the size of the logo is and we know what the size of the avatar is so it's fine to give a fixed title so if i gave that 30 pixels there we go right nice yeah i don't want that black stuff to come up until i scroll down um all right so if you look at the deployed version yeah basically it's it's nothing is there right there there's nothing there let me refresh maybe get a lighter cover so it's more visible um yeah so there's nothing around here right now but then as i start to scroll down boom it pops up right over there so yeah that's what we get really nice you get a really nice sort of effect with that right yeah so what we need to do is firstly because it's a header it's always a good idea to add a zindex of one so it's always going to be at the top yeah and then what we're going to do is we are going to go into our navbar so this is something that is relatively new to me i've used it once before but it's basically what we're doing here is we need to add some kind of scroll listener inside of our navbar component so that way it's listening to the scroll sort of so we need to attach a listener to the window and say when you scroll down i need you to do something right yeah so what we're going to do here is i'm going to say i'm going to have a use effect because that's what we kind of run to whenever we need this sort of like a piece of code that needs to execute on a given condition so in our case we need the code to run once when the navbar component loads right and that's and then and that's because we want to attach a list now right yeah so the code is basically this one so i'm going to explain what it is i'm going to snip it out so it's here and it sets a piece of state so it's listening to it's listening to a scroll and if you scroll on the yaxis is greater than 100. like so basically 100 pixels or whatever so basically i'm imagining like uh even if i go to this app and i scroll down so it's like it doesn't happen right this second it doesn't happen now it doesn't happen now it doesn't happen now but basically when i'm 100 pixels probably down from the yaxis that's when it kicks in exactly yeah okay so that's when we basically want to set a piece of state so handle show to be true right otherwise if you're not 100 pixels downwards in the y axis set it to false right and what this is doing is it's saying every time like use effect gets fired off for whatever reason before you fire it off again just remove the listener so that way you don't get like 20 listeners if using oh you can remove listeners too like that yeah okay which is really clean right so we need to obviously add a piece of state here so the state that we need is this one here so it's gonna say const show handle show use state so we're just setting up a piece of state here so i'm going to import it over here and say use state like this and now what we're going to see is use effect oh so we also need to use effect so use effect and what we're going to do now is basically we're going to add a very little neat little sort of block here so where we have the class name here right we're going to basically do some string concatenation and i'm going to say it always should have the nav nav class i always wanted to have the nav class but if show is true right so if if they've scrolled past so 100 pixels and and that variable gets set to true then i want to also append this class we're going to call it nav black because it's going to have the black background right so i'm going to save that which means that now if if you scroll past if you scroll down 10 pixels if you scroll down it's going to get the black bar but obviously we haven't set up the css yet yeah so previously i had it to always apply right so if i get rid of that when i save it now it's going to have nothing as a background yeah yeah but if i now add the rule for nav black so if i say nav so firstly i need to actually i want to copy that background color so where is it this one i'm going to copy that and i'm going to say nav black here the background color this so now no look what happens if we scroll down it's going to snap the color in nice yep it does it instantly but i mean it's all make it let's make it let's make it really visible so here guys if you look at it there's nothing right but when i scroll down you'll notice it snaps it in you guys see that right there the little snap in like that so we want to make sure that that's not there if we look in our completed app when i scroll down you'll see that it has this nice little fade in so that's what we want to add to our app right now yeah that's a really good point yeah so that's what exactly what we're about to add so the animation code to add that is this so here we pretty much have a transition so this right here is saying add a transition to everything that you do in here so whether whether or not the width changes whether or not the opacity changes anything add a 0.5 second delay to it so it's going to have a nice little fade and then we're saying this is basically saying for all of your transitions how do you want to handle them so we're going to use something called ease in which gives you a very nice sort of gradual fade in right so let's save that and let's check it now and it should all be really nicely doing it so if we scroll down nice if i scroll down yeah that's awesome nice little scroll let's refresh so it's clear let's find a lighter image so right here this is gonna be yeah boom ooh that is slick it is so crazy how i went from just keep feeling like oh it's a draft app and i don't really care to like i really feel good about this app like i kind of want to just be in it and do stuff even though i know we didn't have much more functionality and that's the thing guys like frontend development what makes a good frontend developer is literally very subtle things like it's super subtle um but many people think it's always like these massive changes that you need to do honestly it's this the small tweaks that you learn to sort of do really well that give you big wins so literally in this case that little fade in how do you how do you get that the little sort of uh fade in from the um the banner to the rest of the app those sort of little small wins if you sort of learn those little tricks and sort of caveats then you can pretty much get your apps looking like this all the time yeah it just takes a lot of practice and i would recommend honestly just as much time as you put into sort of development look into design courses and stuff like that because they do they do make a big difference yeah that's actually true because honestly sometimes it motivates me to then add more back and and more functionality to my app because i get inspired every time i look at my app because when i'm looking at just console logs or a broken down html you know tables that i've built it doesn't really motivate me to keep making more things on that app exactly exactly and it's going to start to like sort of bring down your like if your app doesn't look good it kind of kills your motivation but the minute it starts looking like this you just want to keep on working on it like you want to keep on adding functionality and adding yeah yeah that's exactly right yeah so you're literally going to sit here and just play with it all night because you're just you're gonna you're gonna have this pride for this sort of app and then you wanna put it on your portfolio because you wanna show it talk about it and everything um nice so i think with that said so i think the last thing we actually need to do so there's two steps now right we've actually finished the banner so let's go ahead and take that off on the yes let's go ahead and take that off on the list oh so nice nice here we go let's hear that like hey build a navbar just got completed and we're also going to deploy it right yeah so we need to do oh right yes yes we kind of like that's a mistake on our end we should have had that deploy up to firebase yeah yeah oh right oh our css broke there we go uh cool so that's looking good and then now we're gonna work on adding trailer popups yeah so trailer popups right now this one is more of a so we use two packages to to get this to work right we used one which is react youtube so the first thing i'm going to do is install a dependency in our project called react youtube and i'm going to go over to the app or terminal before we continue working on it let's just explain what it is so for example when i hover over dark and i click it you think you can fix me nice you are not and we want it so that when you click dark again it will close that then when i click it again yep it's gone and um yeah that's here so that's effectively what we're trying to achieve sunny you were on mute for a little just a few seconds because i was playing system audio but now you're back so yeah this is this is uh this is what we're trying to build right now guys the ability to add like trailers to our app exactly yeah so now the way we're gonna do that is we're gonna use two packages one is called react youtube so i'm gonna go ahead and install that so i'm gonna cut the the app running and i'm going to say npm i uh react youtube so i'm in the terminal right now kazi yep you want me to follow you yeah okay there we go command j yep so i just write a command called npm i react youtube and that's going to bring it here yeah that's going to bring in the code for that and then we also have another one command is called npm um i react youtube right yep and there's another one called mpmi uh and we need to do a movie trailer so it's npmi and it's movie trailer movie dash trailer yeah movie dash trailer yeah okay this is and you guys can see my whiteboard right when i have it here cool so yom now i actually said a good point so yeah kind of yes you don't need a backend if you use firebase yeah so honestly you can actually really use like speed up your frontend development with firebase because you don't need a backend for a lot of this stuff uh in this case we're not actually using too much backend support and yesterday's call an instagram clone you could see the real power of a um of using firebase to actually get rid of all of that backhand headache that you usually have to deal with yeah nice so let's go ahead and so i installed two packages one was movie trailer and one was youtube so what i'm gonna do is go over to the row let's go over to row and i'm gonna type in so i actually need a few things now so i need one is going to be the um so let's figure this one out so firstly we want to get the a youtube embed underneath a row right so in order to test this out what we need to do is go underneath our row so i'm going to go over here and i'm just going to pop in yep looking at you all right yeah okay nice cool so right now now what we're doing is we are going to go and we need to add a youtube embed right so this is the code that we pulled in it allowed us to basically so i need to do an import at the top so we need to do import youtube from that package that i just installed so import youtube from react youtube and what this takes is it takes a video id and ignore the trailer url for now so i'm going to give you that in a second and it takes some options so the options we can actually add right now so this was literally on their documentation so you can pretty much check this out on their site so if you go to react youtube and type in npm it will come up here we just have some options and what i'm saying here is i want it to auto play when it loads in and i want to be 100 of the width and 390 pixels height right and then what we need is we basically just need to give it a video id so if i go over to youtube right now and i quickly grab a video id i'll show you how this works so if i go to youtube um oh my computer's actually freezing up for some reason um there we go we're good yep so if i go ahead and get a video id so let's say i get the netflix yeah yeah yeah go ahead and what i'm saying here is i want it to all play okay so there we go so if i go into video id and i just add in i think it's this should be enough right so now if i go and check the app out so if we go over to localhost and we refresh i just need to save ooh nice save yeah i see there we go right but you see it's coming under every single row right for now which isn't going to be ideal okay that's this yeah something hold on something really weird is happening i don't know on the stream something really weird is that well i think only you can hear that because i can't hear that on the on the stream yeah something um i hold on i think now it's back to normal something really weird just happened on the audio side i don't know exactly know what happened but no i know i mean you're because you're behind us but i think now it's fine there is sound sunny speak for a second hello hello hello yeah i think yeah it should be good to go it's about to happen yeah there we go okay nice so we have the video and we saw that if i added the trailer url like before it was popping in um meet me on the okay guys now we should be good to go sorry it was that like auto play was just freaking me out like crazy because it started playing my our own live stream so i started hearing all of us all over again so that really threw me off uh sorry about that i should have realized when i when i put that in i was because it was gonna actually started the amount of rows that we have it started that many live streams oh geez yeah because it was really crazy it was like one of those movies you know where they started going crazy in a mental asylum i was like holy crap what is happening i can hear myself 500 times over while loop in my ear so now what we need to do is i need to have a piece of state which is going to get the trailer url so whenever we click on a thumbnail i want to capture the trailer url now how we do that we're going to figure it out um but the actual sort of i only want to show that youtube video when we have the trailer url so the way i do that is i say when we have a trailer url for the url then i want to show the youtube video right um so that answers that bit so now what we need to do is i need to have it so that when we click on the um image so when i click on the image wait hold on they're saying problem with the sound but now it should be good yeah i think it's all good now i think it's because there was a delay on theirs oh yeah sound back yeah okay cool cool cool okay so now what we do is we add a on click so we say handle and then you're own click but i'm passing in the movie right because we're going to need to do that so i need to create that function so i need to go here and i need to say const handle click so this is b this this handle click is going to be when the user clicks on the picture so i click on the picture and then we pass in the movie here and the movie we get obviously because we're inside of a map function so it's going to be based on what what movie you click on that's going to be the one that gets past this function and then what we're going to do is we are going to have um some stuff here so basically i want to say now i want to say if there was already a trailer url so if the video was already open right and you've clicked that picture what i want you to do then is i want to say set the trailer url to be empty so that way it actually closes it right so that's the first thing we're going to do so if it's already open if there's already a trailer url and the video was already playing like we showed it in the beginning then you're going to basically clear it and it's going to hide the video so that's how we get that functionality when you click it twice then we're going to say else and this is where we have all the sort of magic so here we're going to say movie trailer so if we go to here we say movie trailer and then here i basically pass in so i say movie dot name right and what movie trailer is is it's an npm module and somebody else has coded this and if we pass it a name it's going to go ahead and try and find a youtube uh a youtube uh trailer for it right and what we need to do is here i've realized that like if you don't include this in this case because sometimes the name is also undefined um which which means we have this little protection here so then i want to do is just say then because it's a promise and then that's going to give us a url right it's either going to give us a url and we're going to do a bunch of stuff with it or it's going to give us a catch which is an error so if it gives us an error we're going to capture the error oops capture the error and then i'm going to console log it so that way we can just see what the error is but here i'm going to say so here i'm actually going to say const and basically what this is this gives us a full url guys but on youtube every single video has um so i don't know if it's gonna freak out so if i do this like when it youtube it won't do that thing again i'll catch it before it does that so if i copy the image the link address so let me just grab this link copy link address so for example this is the live stream link so if i go over here this is a live stream link right we need this that's the video id right so the way we do that in javascript is we can do this we can say const url rams and what we can do is we just need to pull out this one right yeah so i'm going to use a mixture of things now so in order to get the search so in order to get basically this part or no sorry in order to get this part right we do this this we say url and then we say um we pass it a url and then basically we do this dot search so that's how we actually this is a trick to basically we pass in this url so we're passing in like you get everything after the question mark yeah to basically and then this will give us that exact string right and then what we're going to do is we actually wrap all of this in something called a url search param so we wrap all of this inside of this so we say url search params and we do that right and what this allows us to do now is it allows us to do a get so it allows us to do this it allows us to say url params dot get and then we can actually get so say for example in this case v and what that does is it gets anything so say we have like a bunch of things after here parameters it's getting this one v so it's going to give us back this value yeah even if we had like even after this if we had banana is equal to five it will just get you the value of v and will not get you banana but if you write banana then it will get you that value right there five yeah so in this case we want v right so that's how we get that so what i can do here is i can just say set trailer url there's a really nice sort of little like hacky way of doing this you say set trailer url to to that right and then obviously if it's gonna then populate this and it should show the video and everything should be working so now if we go ahead and try so i need to just import at the top so there's one more step so i need to go ahead and do this so i need to go and say import movie oops import movie trailer from oh god oops from movie trailer okay so if you're going to give that a demo quasi then it should be good hey look at that oh nice that's working yeah yeah right so there you can see like everything's sort of working and then when we actually click the the the thumbnail again it will actually um hide the youtube video nice yeah so i click it and it shows it don't so i'm accidentally linked says i don't usually subscribe to channels but to yours i did thank you for the hard work you're welcome dude we're glad you're enjoying it yeah that's awesome thanks appreciate the love here that's really nice there's one more thing we need to account for actually i think we've already done it yeah we have already done it nice okay so in that case i think then we're ready right we're ready for the big deployment yeah hey nice so let's make sure we go ahead and uh let everybody know where we're at so we're gonna change this up so now you guys gotta see questions oh yeah nice so check it out now we're on the wait hold on did that actually play sound effects are muted i think so that did not play here we go nice little green check mark for add trailer popups are done now guys we'll be we will be moving on to deploying uh to firebase so we'll be uh hosting our app online yep exactly awesome so now what we're going to be doing is pretty much and guys when we do this it would mean a lot if you guys just so that we can reach out to you guys and see who's actually watching and interacting once we deploy it you're going to get a little url and you guys can actually go and visit the project that we just built right now and you can go and see that on your own computer and see it live and it will be up and working and everything that we've shown you can actually be on your screen yeah and what we want you to do is if you just share an instagram video and look make sure you record yourselves when you do this as well because we love to see your guys and see that it's all real and otherwise it doesn't to us it's just a number otherwise um it's really nice to be able to see your faces and then also show us the the video and make sure you tag us and that'll be awesome yeah seriously yeah i would take it do that guys because that actually is really really powerful for us just to see you and how much you guys are enjoying it so uh share that with us and we will definitely respond to you so we're gonna show you the app go demo it take a story show your face in it too you know just tell us what your biggest takeaway was and tag me at cleverkazy and uh make sure to tag sunny as well as sanga so maybe we can show it on the screen because i think um not everybody remembers what our tags are so here is um for me it's at cleverkazy right here you guys can see my screen hopefully right um and then for sunny it is uh sss so make sure to tag him on the story and share what you guys have built uh with us awesome nice and we love it because we can have a chat with you guys and see like what you're into and sort of see how it's going for you guys um and we love to see when you guys actually rebuild the project it's so cool for us and yeah everything and one more thing guys if you guys could just if you have watched at this point you know we put a lot of time and energy into this uh if you guys could just hit that like button that means the world to us it really helps that video go out for other people to be able to view it and get value out of this as well and it doesn't really cost you anything so if you can just go ahead hit that like button subscribe to the channel that would mean a lot thank you amazing perfect um so yeah let's go ahead and i think we don't actually even need to go into firebase console at this point because we set things up earlier yeah we just deployed yeah we can go into our terminal and here we can pretty much uh says open up terminal and then this cancel most people if you haven't done it you're gonna have to just run firebase login um so in our case firebase logout yep so we're gonna log out to show you guys so you need to run a command to say firebase login and that will pretty much so devin gray said is there some fancy cd ci get related setup for the point of firebase so actually it's super clean and you're gonna see it right now all you have to do is firebase login is the first step and um then what we need to do is pretty much go ahead and go to um the terminal and do firebase init right so this is the bit that we have to be quite careful about guys we have to make sure we do it very carefully and correctly so let's go down to hosting and let's go enter and let's get use an existing project and you want to make sure you find the right one so netflix clone there we go and here you need to make sure you type in build yeah it has to be built for react guys yeah so you make sure that that is built not and you don't just spam the enter key because this is really important configuration yeah i always find myself spamming the enter key so that's important build right over here guys pay attention yeah so make sure that's build and then what you want to do is for the next step you need to configure as a single page apps you're going to put y exactly so that's another important thing so put yeah that's a let me actually just in case it's not visible there just put y yeah and hit enter yeah exactly uh and then enter and then that's it so that's what the configuration done and now we have two things so most people actually end up deploying it but they see this default firebase page and that's because you need to run mpm run build to get the latest version of all of your stuff that you've coded right so in this case i love this comment michael says firebase init with british accent suddenly just makes more sense to me nice 5 8 in it yeah now what we need to do is uh we need to do mpm so if you just open up the directory guardian we can show everyone what it's actually going to do so open up build so you can so right now the build is empty it has a plain index html okay okay cool yeah so it's empty you'll get to this point and it'll just have some one file in it which is nothing so at this point you want to do mpm run build and you will see what will happen once we actually type that command in is this will start to build out right here yeah and what we need to do is what this is doing guys is it builds a production ready uh build of your react bundle so like your react app is basically stripping out the the developer stuff like the hot reloading all the expensive sort of stuff that takes up a lot of space and stuff like we don't need that in the actual production build so when it goes online we just need to be as lightweight as possible right we need to be as lightweight and just quick as possible so that's it so everything goes into that build folder and then we set up firebase to deploy it from that build folder so i think i think we can we can get ready for this big big big release now so you can say five there we go guys are you guys ready for this we're about to deploy this app online and all the hard work that we have done up until now is gonna pay off and you are gonna get access to this app and you will be able to actually use it right now are you excited we want to know let's do it we're not going to actually you know what we're not going to hit that deploy button unless we get a message from the chat that you guys are actually pumped up about this yeah i think we should just leave them like just right on the edge you know like if we get some excitement we get it going then then we'll hit that deploy button yeah i think actually we can just start chatting about what we're going to be doing next i guess sunny so um you know oh yeah uh yeah i'm gonna be coming down to uh britain at some point i'm gonna hang out yeah you're not in wales right where are you again no london london yeah how far is that oh damn people are actually excited joe's like let's go michael is like let's go they're like deploy and joy's like i'm pumped holy crap all right here we go that's that level of energy we're talking about guys you guys are falling asleep on us and that's not acceptable so that's the level of energy we want in this freaking room all right five four three two one one all right let's check it out i'm gonna hit enter vamos we're getting let's go in all kinds of languages that's what i'm talking about lauren john it's deploying pumped it's deployed and hold on i think it just deployed let's go all right let me actually click this now hopefully it doesn't drastic in the link let me drop it also there it is guys that's what we just built nice i dropped it in the chat go check it out guys let us know in the comments what you think and give it a resize try and break it you know play around with it a bit awesome final netflix clone app i'm gonna drop the link i'm dropping the link in chat i think everyone really loved that and guys if you're doing it remember shoot an instagram story and make sure you tag us it's always we always love to see your name says thanks guys such an amazing session you're the best blah blah blah nice lit lit liftoff i see i see netflix alone yeah people are dropping the link alexandros thank you for dropping the link everything he says comes with a plus have you noticed that any time you get a message i don't know why that is is he is he messaging us from like the command line or something maybe if he is we need to bring him on yeah wow that is sick uh sunny can we find out how many people are hitting can we find out how many people are hitting this page probably from uh firebase right from firebase console i should be able to get access to that information netflix clone i mean you say up with analytics right here we go here we go where where is it i think it might be hosting oh it says waiting for analytics there oh really did i just go back to the the main page overview jesus yeah better than netflix itself damn holy crap look at the response damn guys if you haven't already smash the thumbs up button because it will really help the video grow and more people can see it yes please yes smash that button share it with your friends family anybody you think would get value out of this just spread this like wildfire um michael is like it's lagging a bit because the traffic yeah that's funny i'm sure let me actually hit refresh funny can i talk uh we can only read uh messages at the moment joe so you can message in the comment section and we can you can he goes is that being cool nice yeah that's awesome that's such a fun part of it bro joe diaz is in the course yeah i know i was actually thinking that i'm pretty sure actually he's in the course yeah that's awesome let's go this is cool people are loving this also guys if you find this really useful we do this stuff we have four weekly coaching calls every week and we always build stuff like this um so if you're interested go check out the link in the description and have a look at the course that'll be awesome and you can even check this out in your phone and yeah guys if you guys want to learn all this stuff and you want to be able to learn how to make an income with this it would just be silly for us to not push you to go click the link in the description below to check out the course profit with javascript we literally teach you how to build all of these apps but more importantly we show you how can you go to upwork how can you go to freelancer all these platforms and actually like take your skills and make an income with it get those projects whether it's a 500 project or a 5 000 project or a sixfigure job we show you how to be able to get those uh in profit with javascript so click that link in the description below and jump in the course yeah exactly also paulo says trailer isn't working some of the clickable uh posters don't have trailers or is the the module that we're using isn't finding a trailer for them so that might be the reason why you're you're seeing that yeah man these analytics huh these analytics freaking take me take forever yeah i know i think that's gonna i don't know when that's gonna come true i think it does take like unless you're going through uh google analytics itself i think there's a big delay with that yeah well it's all good i think this was still fun um hopefully yeah this was fun i hope everybody all of you guys really really enjoyed this experience thank you guys for giving the video a like just make sure to do that if you haven't already we're going to be live streaming our goal is to live stream um and test out i mean we tried this week and going five times a week so we're gonna do something tomorrow as well and then for next week our goal is to hit five live streams next week as well so sometimes uh yeah the offer raja is saying is the offer over yes that offer is over we had a sale for july 4th and we were sharing it with you guys but if you have missed that offer unfortunately whoops one second yeah so that offer is gone and it's not going to come back and this program is kind of only going to go up in price you know i mean we have we have tons of students who are like yo this program should be worth more than a ten thousand dollar coding bootcamp because those are the programs they've gone to and in this program they actually get much more value than a ten thousand dollar coding bootcamp so for you to be able to get it at the price you can get it it's just stupid it's silly like literally nobody in the market would do that because it just would not make sense we just have a great team great community and we got you know we have you guys and we were able to put this together so we're really proud of this course we've worked tremendously hard over the last year nonstop on this course and so you know if you want we have success coaches who give you personalized video feedback i mean i don't know anybody else who's doing that we have uh you know over 1200 1300 active members who will answer your questions live we have four people who give live coaching calls tell me any program i mean i don't care if you tell me west boss or you tell me like some of the biggest most respected people in the programming space they are not doing that the fact that sunny is live in that program every single week helping you build projects and then you get a homework and then that homework gets personal video feedback that is not happening anywhere you getting a call with nas every single week and you guys build fullon projects and last week they built a covet 19 tracker that is not happening and the people who some of the people who built the covet 19 tracker actually got paid uh and got freelancing jobs where they were literally building a covet 19 tracker for them so the combination of the live trainings the recorded courses and then us teaching how to go make an income just not happening anywhere so if this offer is available to you and the price where it's available right now and you click it trust me you don't want to miss out on it and if you're serious about this stop playing around click it and join and we want to see you inside we'll help you 100 and i love it when people join and we end up having a conversation in the community and in slack it's it's such a guy's like not even just for the content the community is unbelievable like it's so supportive it's like i i can guarantee everyone who's a developer here has gone on to stack overflow and been a bit disheartened when they try and shoot a question where in slack in our community like in profit javascript we i barely get a chance to be able to reply first to your comments because somebody else would have jumped in that quick like it's it's really insane so mathuradon says do you only have a weekendonly training so we actually have uh weekly coaching calls across the week so it's completely within the week and on the weekends um so yeah we have very flexible sort of uh coaching calls so that it can get everyone's schedule devin says i may join just for the freelancer help for sure devon i mean the level of skill you have and you're even helping us in the live stream and you're bringing so much value like i know what level where you're at and if you join that community i promise you you're gonna get massive massive help in the community i mean the community is unbelievable so if you're in there and you're looking for freelancers to help you or even recruit somebody with you so you get like those clients and you get work you can distribute it with the people in there to even help you out so if it was you i mean you're probably you can get one or two projects that are going to pay 10 times the amount of what is going to cost you to get in the course and you're not just going to have access to those people like you have access to me directly you have access to sunny and you get to be on live calls with him every single week and for the people in the comm like youtube and facebook and stuff like that you guys can see there are 200 people live at any given time and we're pumped to have you but it's really hard to communicate oneonone with every single person it just doesn't really allow for that but in slack you can communicate with us real time and then when we do zoom hosted calls you can literally talk to us one on one we bring your question we speak with you and then we solve that question oftentimes even nas last week i talked to him by the way sunny i talked to nas last week and nas was like he got on a call with one of the students for 42 minutes literally 42 minutes and he helped that student solve all of his coding problems that he had for his job and it blew my mind i'm like that is insane amount of value so that's the level of value and care and passion that we bring it's just not there in the market anywhere and so if you're serious about this and you want to do this and you want some support you just want somebody to be there with you that's who we are and so that is why i'm saying and i'm so passionate behind so passionate about this like go click that link and jump in the program and we're going to be closing this program in a few days so please please please if you're serious don't miss out on that yeah and guys i'll say it firsthand having gone to university and even did a masters after that this course if i knew it existed i would have saved every single penny and i just would have gone and done a bootcamp like this like and it's more than a boot camp it's not just a simple sort of course or something like that it's just going to take you from absolutely nothing so literally never having coded before all the way and we teach you don't we don't even teach you just the basics of like getting a job at the end of it we show you different ways of making money so we teach you how even after a week of coding from basic pure beginner guys after a week of coding being able to make an income by teaching somebody else who's never coded before um and that really really actually incredibly does well for a lot of our students um and it's and i've actually lost i've honestly lost count of the amount of students now that i've seen who have landed jobs freelancing clients tutoring clients we have a 17 year old who made 180 dollars on a uh on i think it was like on two coaching calls which is insane like yeah that's he that means he's charging 90 an hour um yeah and we have had students who have gotten hundred and ten thousand dollar contracts we have ryan noble who last month closed out twenty eight thousand 000 in one month so we have i mean from students who are like making their first 50 dollars to more advanced people who are making 28 grand or 40 grand and so there are levels to this so not only we're going to give you that like side of coding but we're going to give you that side of freelancing the kick in the ass like how do you actually go approach clients like retain them over a long period of time make sure that they're not just paying you 500 for this one project they'll work with you throughout the year and pay you like 6 000 because you can bring so much value and really help them out and i love that devin just said um he's like i'm sold bro he's like lol keep talking and take my money awesome devin we want to see you in the program and if you jump in you know this week sonny is going to get on a call with you and hell like you know what i'll just i'll get on a oneonone personal call with you like if you jump actually you jump in and i see your name pop up because i have it on my phone where i can see who's coming in so i know like indra yani joined a little bit ago all right so if i see you pop up in here and you join the program i'm definitely just going to jump on a oneonone call with you and put you in touch with people and see where you could use the most help and then you're going to have calls with sunny and nas and everybody like that so whether it's freelancing help or building projects like we have got you covered exactly malika certhi asked a good question would oneonone guidance be available honestly this is the closest thing you will ever get to oneonone guidance like the amount of students that i have oneonone chats with every single day like my mornings and my evenings pretty much consist of just chatting to students um so it could be literally if you've landed an interview if you have a question about your homework or coding or anything like that i literally say there's no sort of barrier you can just ask me whenever you feel like it throughout the day at any point in time and i'll get back to you asap and every single time it it's a massive value to all of the students they love it they feel like they can chat to us uh and you don't even just have one guys you have like all of us you have me kazzy nars jacob like everybody's at your disposal and it's really really gonna it's a game changer in this sort of space yeah so guys take advantage of this this could be your secret weapon the link is in the description below click it join it we want to see you in the program live calls happening every week multiple live calls great community personalized video feedback and just we love you and we you know we got you and again if you don't like it for any reason you can cancel at any time you can cancel within your own dashboard there's no weird way you have to cancel so you can cancel any time you need a refund you're not happy we got you covered we don't want you your money we just want you to succeed and that's about it guys at this point if you watched up until now thank you so much for watching like the video if you haven't already just much love to everybody joe thank you for the support michael everybody who's on this live stream uh we love you guys and uh we will see you guys we're going to see them tomorrow right sunny that's it we're going to see you tomorrow for another build yep we're going to see you guys tomorrow just one thing for my own satisfaction you know it's um i just want to really hit this right there and just um you know just a little like right there there we go so now this project is just done completed and um also i just want to have the live live build of the app guys this is what we build these are the types of projects you guys will be learning how to build every single week um and tomorrow we're gonna go live again and build something give us your ideas shoot us your ideas on instagram and tag us outside of that sonny what else what else do we got uh i think honestly guys like we the one thing i would love to say is that like shoot us your ideas because literally we came up with this build like today and one day we came up with the build and we've already started to get some ideas from people but like we said like the ones that are actually really kind of get to us are the ones where people actually just send the video like literally yesterday we had a video submission and if we see one of those we're more likely to pick that one idea and you're gonna see the idea being built so um yeah honestly i'll say yeah just shoot us your ideas and we can def we'll build them for you yeah yep awesome devin gray says just purchase can't wait to link up with y'all amazing devin and as a matter of fact if you ever come out to la come hang out with us the entire team you're more than welcome to that'd be amazing and uh yeah anything we can do just let us know i'm super pumped to have you in the program you're going to be blown away and keep joining us on these live streams i mean i feel like you're already a part of the community honestly like even the live stream we were doing today i felt you were adding so much value so it's going to be exchange of both both ways you know value and so one thing i want to highlight here is that we have a high caliber of people in the community so like it's not just that devin is going to get value from the program the community is actually going to get value from devon as well so those are the type of people we actually attract in this community so that's another huge benefit for why you should consider it because you're going to have people like devin and people like you know ourminded people who are on this live stream and you can even see from the chat how positive and good energy and just positive vibes everybody has exactly yeah um awesome guys devin says i'm in the valley i'll bring masks and come see y'all hey nice awesome we got we got a few extra masks for you so uh we're located in hollywood so that would be actually really really cool awesome guys thank you so much and we will see you guys tomorrow on another build see you guys peace yo raja says payment failed um raja if your payment is failing don't worry just act just uh send us an email at support cleverprogrammer.com we'll try to help you out but yeah we'll try to help you out um and uh try using paypal as well that's that's we've we found that close to you yeah yeah exactly try paypal that works so yeah give that a try awesome guys love you peace okay see you guys tomorrow peace