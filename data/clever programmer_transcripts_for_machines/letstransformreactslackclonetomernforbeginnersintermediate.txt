how's it going everybody hope you guys and you guys are doing good this is david from cleverprogrammer and today we are gonna be building the slack mern clone so guys today is going to be a bit of an intermediate level um and i'm trying to make it like a bridge between basic and and the intermediate level so if you are new if you are uh a beginner coding this is for you but if you uh try to figure out how to migrate data and and your application from firebase when you actually like graduate from firebase because you know we always say that uh first let's go with always with firebase and once the functionality is not enough then we recommend highly to go for mirn and stuff like that so today i'm gonna be showing you guys how i actually transfer all these applications and then later on we will uh work on stuff like completely mean builds and either uh we have lots of buffers and internet stuff going on let me quickly set up my uh moderner device here so i see that some of you guys see that buffering every three second that that's actually strange i uh i'm pretty much like oh my god that doesn't sound good okay let me quickly quickly check it but it should actually be good uh for me even youtube says that stream health is pretty good so let's quickly refresh on that i mean we should be we should be good i'm hardwired to to the internet um that looks crazy okay uh please well yeah i'm watching the comments okay i'm checking it okay so the buffering is bad okay let me let me quickly look at here and i mean we are streaming okay i just turned off high definition uh and i have a control no no no i am i'm literally streaming in 1080p 60 frames per sec uh we should be good i have it over here and things are looking pretty good from here okay we the internet should be good internet should be good my upload is crazy okay okay so guys welcome everybody who is joining in who is new always uh wait guys let me know if you are new to this channel or if this is a mermaid that uh that is kind of like a practice for you okay it says it's okay now uh all right so then we should be good okay let's go how's it going rikiya what is up uh so uh we should okay everybody says it's good now okay that that that's cool that's cool all right so who is excited to build the mern uh slack clone today and put this uh thing on their portfolio and learn how to actually uh migrate your application from firebase to a fully functional build all right let me know guys we are 182 strong oh my god we are almost at 200 okay we are growing we are growing we are at 82 likes guys i think before we even started we can get this number up to a hundred uh we should be good can you show a demo please yes i will uh in just a sec uh okay i see the demand uh priyansha wants an asana clone okay hey lucy what's up here oh that's so awesome really appreciate that and guys this is literally the mentality that will get you forward that no matter how many how much work you got you still come here and put in the work as always all right we got new people in the house welcome to the family and all right okay um and it's good on it okay and perfect how's it going everybody what is up nitin um guys we should be good we really should be good this is going 1080p next to me okay i see rookie eyes are ready all right so uh we are 200 people strong and i think guys if you're ready let me know in the chat first but if if you guys are ready we can get started right now i want to make it like a dynamic a bit of a faster build so buckle up get your coffees get your water ready we will be learning a lot today we will be um transforming the uh working slack clone which was based on firebase and we will make it a fully functional mern build we are 205 concurrent viewers welcome everybody thank you so much for being here with us and guys if you are getting value out of this channel smash the like button so that we can get this and any other videos out and we are 111 likes already that's super cool guys awesome okay and okay let me quickly check the comments and i think we can get started yeah that's that's literally the goal uh what ricky i just pointed out right here uh we are working on putting as much content out to you guys as possible uh so yeah that's that's pretty much it so okay that that's that's exactly it like really okay so with that said i think i'm go oh my god we just got our first donation thank you so much waffy mohammed uh it's a lovely two dollar donation thanks for the hard work and the great job bro thank you so much really appreciate you brother that you're staying here and dropping these awesome donations okay hey good morning we are ready let's go says ferox awesome we got super pumped argen in the house and i think we can start getting it okay guys let me know in the chat who is ready to start rocking today who is ready to build the uh mern what is it slack clone let me know okay so with that said oh we got nero in the house what's up so with that said let's get straight into building today's build okay so uh let me quickly go ahead and share my screen we should be good all right so guys if you're watching this uh down below in the description there should be a uh hey let's go there that that's it all right so we should be you guys should be able to see a link down below in the description so this is the uh starter project for today and let's go ahead and everybody go to this link over here there is the green button that's what you want to click copy the link and you can go ahead and close that and what you need to do is first name your folder correctly because if you're missing a couple of letters that's just not slack so with that said let's go ahead open up a terminal which i'm gonna zoom in so that you guys can actually see it and we just uh we got this question so what is mirn uh mern actually stands for mongodb express js react.js and node.js which is the stack for today's build okay all right um guys if you're dropping questions like can you answer my questions i probably will not be able to answer those because they are just not there because they are way up uh if you drop it a couple of times uh i will make sure that i will answer it and we just got our second donation by shreya raj thank you so much brother for staying here and thank you so much for these lovely donations let's smash that like button and we appreciate you brother so let's go all right so what i will be doing is pretty much go ahead and zoom into this uh terminal a bit and what you guys can do is go ahead and clone it but first let's actually add a folder i think we need to add a folder let let's test it out are we going to do only becca and stuff tonight yes srimanki we are just going to be working with backend tonight okay so i will just add a folder um here and let's call it slack oops backhand nice and let's actually cd into that and once i'm in there i will um i will literally go ahead and type in git uh clone and just paste the link that i got from uh got from github and om gupta asks if is vue.js i thought it's easier to learn it's not ujs we are not going to worry about frontend stuff today we are just going to be transforming a a working frontend application that was built by sunny and qazi back a couple of months ago and we would turn that into a full stack build because that was a platform as a service plus a frontend build so that was a pretty lightweight stuff but today we are going to be taking it to the next level and we are teaching these stuff to you guys so that uh so that you can go ahead and and have this knowledge on your portfolio as well and we are at a 230 concurrent viewers thank you so much guys for being here and let's actually get started okay uh let's go ahead and and the other thing that i want to do today is actually um oh my god this wasn't even the back end which i uh cloned so the front end was the uh so the front end was the actual package that we cloned from github so let's actually copy and delete this one and paste it in here and because i created the backend folder let's rename it back to backend all right so what we will do is oh my god we just got another lovely donation by def tech uh it's another hundred rupees thank you so much we really appreciate you and thank you so much for all these lovely donations and hey we just got uh atharva's donations as well uh thank you so much atharva really appreciate you too brother and great job bro and we want david merchand what really okay we can look into that too all right okay so with that said let's go ahead and open up a wii s code in this folder so what i will do is just go up a folder and say code space dot uh we yeah and that should bring up a vs code here we go so we have the backend folder which is completely empty and we got the starter project right here which is actually a fully functioning react uh uh app i'm serious about merge l o l by oh my god okay so uh by the way yesterday's telegram clone was cool with perez oh my god we are so happy for him uh to doing these lives he is going to start coming on our youtube channel and that is going to be some serious stuff okay uh yeah let's actually dive into this so i will zoom into this as well hopefully okay here we go uh this actually might be a bit too much and so what we will pretty much do is we have the front end ready working um what we will do is go over here and go up a folder and let's actually go into the starter project so that we can go ahead and i always make typos today i guess so we can go ahead and say every uh literally download everything all the dependencies that we actually need for this uh frontend project to work so we will just type in mpmi and saad asks is if there is any alternative for mongoose yes there actually is i mean you can literally um go and connect directly to mongodb but i just don't recommend doing that because that's a lot more uh of a pain in the neck uh so that's why we are using mangoes but let me know why you ask that and why you don't like mangoes and we can continue this conversation okay yeah let's actually switch the screens back so while this is doing the uh installing uh we will go ahead and create our backend project as well so let's actually go into our backend folder and guys let me know if you are excited for today's build and if you guys are pumped to transform the slack clone to a fully functioning mern project so with that said we will say mpm init and we will go ahead and okay we got the package name version description entry point should always be server.js test command git uh keywords author dr mirn perfect license and there we go we also need to go ahead and initialize the version control we have a video from a couple of weeks back check it out if you don't know what kit is and if you want to get started because we literally teach you the best and the easiest way to learn how to use git all right uh so with that said uh let's actually initialize the version control there we go and the backend project will require the following uh dependencies so we will on the backend side we will have node.js which is uh a javascript runtime we will also have the express js which we need to install separately and that is actually gonna be uh the server side javascript that we are gonna be using today uh after we will alway also use uh mongodb which will be today's nosql database which is super easy to set up and then we will connect to mongodb with uh make sure uh we will connect to the mango db with mongoose okay so let's actually go ahead and install all those stuff we will go ahead and type in mpmi mongoose express and we will also use pusher to make the whole thing uh real time and we will also install the course headers dependency okay so that's gonna be pretty fast and once we are done with that we can go ahead and we can go ahead and um have the whole thing ready everybody says buffering again i don't know why you guys say it we should we should be good yeah everything is good okay so on that let's go into our project uh don't worry about the uh frontend stuff let's just close that thing up and what we will do is open up the package.json and inside of there we will add in some some cool stuff which will enable our us using uh es6 and we will also add the auto start script so we will say um inside of uh package.json that the type should be module that will pretty much go ahead and enable us using importing instead of requiring and we will also uh add the start script which is going to be responsible to start the actual application once it is deployed to a server yeah the live is cool all right um let's actually go ahead and save it we will also add the server.js file here we go and once we are done with that let's actually import everything that we will need today as a dependency of course we are going to be needing the express uh we will need mongoose we will need the course headers and we will also import pusher now um next up let's just jot down how the application is going to look like here's it so okay wonderful what says here it's okay not buffering i'm glad i'm glad it's not buffering and guys let's actually go ahead and get the energy up smash the like button if you are excited for today's build stretch out uh get yourself a coffee get yourself water because this one and a half hour left that we have is going to be epic and intense and we are gonna be just uh i'm gonna be focusing on dropping as much value to guys as possible uh i will focus on more like the overall oversight and how you should be thinking before making some kind of transitions be because if you if you just learn how to do it you will not be able to manage it so i will try to address that side of the project as well so smash the like button guys if you're ready and if you want to go ahead and up your freelancing skills by like i don't know 30 at least and raise your uh well and and raise what you can charge so let's go ahead smash the like button get this video out there to everybody uh that it's possible and let's continue okay so inside of here what we will first do is just pretty much outline the app so we will have the app config then we will also have some middlewares um we will also have some kind of db config says let's go yes exactly and we will also have some api routes and of course our application needs to listen to what we try to reach or what we try to do with it right okay so with that done let's go ahead and create our application instance that will pretty much consist of two declarations and what we will do is just pop these two in and we the first one is pretty much creating the application instance and the second one is going to define what the port will be uh by the way the mic is crisp okay sounds good okay and just use body parts anymore because express has built in now express json yes we will actually use that let's actually add those to you today uh or right now okay so arafat says let's rock and roll exactly yes so let's actually go ahead and add those middlewares that we were talking about one of them being the express json which is the builtin uh json parser the other one is the course headers now next up what we will do is uh not worry about any of the db stuff first let's actually create our api on the first the health check api route this will only say yo so i mean we can say let's build oops okay um let's say hello clever clever programmer fam and a rocket so guys that will be retrieved by this application so uh if you guys go ahead and uh call this api using the get method uh on the on the route so guys if you're with me that you have uh all the stuff that i was just talking about if you have on this on your computer it's a pretty good uh way uh time to start so let's actually go ahead and continue so let's go ahead and add the listening part which will um pretty much go ahead and do that stuff and let me actually quickly get rid of all these other unnecessary uh noises um oops okay that was the problem all right now uh what we will do next up is uh is pretty much we can go ahead and test it out i will teach you guys something new stuff because today is actually a bit of uh the next level right so i'm gonna try to uh not use postman too much it's actually an awesome tool but i will introduce today that that is a bit faster than uh trying postman every single time for every api and if it's just a get api i highly recommend using the terminal so we will focus on uh focus on that a bit so what we will do is go ahead and um this is okay this is front end let's move up here and this is going to be the back end so what we will do let's actually start up our backend server that will pretty much go ahead and oops there's something going on already oh and i'm not even not even showing my screen but this uh so there is some stuff going on let's actually go ahead and debug that so we have the esm modules experimental throw error uh okay so the 9000 port is already in use let's actually use a thousand instead um i mean it might okay we didn't even need the debug mode but that's okay so and now my lights are not changing back okay so uh with that said we still have 155 people on house so guys uh let's actually get everybody working and let's start uh doing uh whatever uh doing today's build so well what i will just pretty much do is type in curl and say local host oops local host and 8 000 and that will pretty much just make the uh request for me it's it's kind of like making a get uh uh get call so um there we go now we got our answer and that's it so let's go ahead and actually start uh connecting to our database but before that let's actually set up our database okay so today uh today's steps are gonna be setting up our database connecting then creating the api routes and defining schema and that will pretty much be the backend build for today afterwards we will go ahead and connect it to the front end that was built by sunny so without further ado let's go yes girl okay so let's go ahead and go to mongodb.com and i don't need this youtube going so uh we should be pretty good all right so with that uh let's go ahead and sign into mongodb what we will do is if you don't have an account you can go ahead and create one for free uh and if you have it just obviously just log in and that will do the work for you okay so you guys say that it's buffering a bit that's uh interesting shouldn't um so let's go ahead and go here click new project and say uh how like richard give it a name however you want to call this uh okay everybody says it is buffering let me check it out quickly it's actually not buffering it's working perfectly okay um so with that let's add the name of slack live learn and let's continue next up i'm not gonna be working with anybody today so i will just go ahead and create a project without adding any members or setting any permissions first up we will pretty much go ahead and create our cluster we will use the free one let's go ahead and click all the uh oh my god okay palm trees all right i hate these actually let's verify okay cool i'm not a robot that's nice and okay guys i'm gonna turn off high definition so that you guys can actually uh yeah there is a problem with transmission hmm okay i just turned off high definition uh guys you should be able to see it now uh working perfectly we shouldn't be receiving any more buffering okay we should be good seems good now it's not buffering okay okay i just keep high definition uh off and then that will be and contact my provider i guess so uh what we will do is go ahead and hit database access add a new database user and we got malika in a house with a lovely 20 rupees donation thank you so much we appreciate you a lot and thank you so much for staying around and being on all our uh live streams and actually she has a tiny bit of contribution to today's build she helped me a bit uh on uh today uh on preparing with the slack clone so huge shout out and let's continue let's go ahead and add the user which will be admin and just go ahead auto generate a password and copy it or make sure that you guys save it somewhere safe oops and let's go ahead and add that user because you will never ever be able to retrieve that same password now with that said uh next up what we will do and what i don't recommend you to do in production environment because because uh we because it's just uh not production friendly we will allow access from all the ip addresses why i say it's not recommended is pretty much that we can go ahead and anybody can hack into that database and that will be it so this was a huge disclaimer it's just for teaching purposes i'm actually preparing with some kind of security related uh live stream and the security related knowledge um it's just a fast it's just for the sake of speed okay so let's continue and let's add network access at ip address and this is the do not do confirm and we will actually make a security related video where we will go ahead and secure everything uh on one project and it will be just unable to hack into okay thank you so much sagar uh keep up keep the energy high and thank you so much i really appreciate you let's continue all right so now we have our database set up let's go back to clusters let's go to connect and hit the button in the center which says connect your application hit that copy that will go ahead and get it to on your um what you call a clipboard and let's go ahead and add a new cons which will be [ __ ] uri and let's add it in here and inside of here we will actually need to paste your uh the password that we had i'm using offred so i don't need to worry about any of this stuff i have uh actually three months of clipboard history uh at at my hand so okay uh yes okay uh yeah definitely we will prepare for that and we will do a security streams okay all right so next up what we will do is go ahead and say mongoose connect and we will pass in the mongoose uri which we just added and haven't configured fully because the db name is actually left just like that which is not cool so what we will do is just type in uh slack db okay we will actually guys uh i have a better idea uh if you guys have any kind of security related requests or whatever we should be talking about it's a it's a good stuff that you are putting it in the chat let's do it too but this is my instagram account and everybody okay and everybody go ahead and drop a message here and actually you can go ahead and request uh projects because we want to give you guys the value that you guys actually need and you guys actually want to put on your portfolio so this is my instagram and drop me a message what you guys want to build and what you guys want presentations on so that we can go ahead and give you guys the value that we need that you guys actually need and guys please keep the chat clean we uh do not tolerate uh spamming so we are here for learning everybody is here uh to have a great time so please keep it clean and i will remove this comment okay so with that said let's continue and what we will do is pretty much let's check out if our database connection is working perfectly and let's actually go ahead and say mongoose.connection and mongo's connection once open we want to go ahead and just console.log db connected let's not worry about any anything else so um teamviewer is using sure yeah drop it in my instagram cool so next up what we will do is set up all the all right that's exactly we want to do you guys whatever you guys need so let's actually go ahead and request stuff all right when twitch burn clone uh it actually needs a tiny bit of adjusting it's actually in the pipe so stay tuned for that and we got pre and shoe in the house so everybody who is spamming the chat is gonna be banned all right let's continue we have 167 people in a house let's go guys all right so first api that we will actually build is not gonna be the api instead we will fix the error that i just made which is not closing one of the um brands okay so first up we would just go ahead and uh do the schema for our db and we're just going to call it [ __ ] data hey mango data dot js nice that's going to be just a regular js file and inside of there we will go ahead and import uh import mongoose from mongoose of course we will go ahead and create a new mango schema right and that will be pretty much it and we also gonna go ahead and add all these fields inside of there so that we can actually validate what kind of data comes in here and whatever that is just not related to our build is just going to be removed or omitted so this pretty much oh thank you so much that's the goal that's literally the goal so what we will do is uh go ahead and so okay so this actually needs a little explanation so if we go to the firebase uh firebase project of sony's build i'm gonna bring it just next here so what you can see here guys is let's go back in here so this is how this is the exact same database that sunny built back in a couple of months ago so we see that there is a collection which is called rooms inside of there there are all these rooms which i was just uh playing around we have a sample one we have general we also pwj awesome and we have a test all these random stuff and inside of there we have the messages okay and every single message is another document so that will pretty much be how it looked like now what we will do is say we got the channel name which is gonna be uh this one right so this is going to be the name okay so profit for javascript is the name and it's actually inside of rooms which is going to be the collection or actually the yeah it's going to be the collection where we store all these stuff now because actually firestore so firestore is a hybrid between sql and nosql databases it can uh have multiple uh collections nested into each other but because we today we are going to be only working with um nosql we will uh we will we will mimic that thing with arrays and objects okay so think of think of collections like arrays and objects like documents okay i hope it actually made sense this is the first time i'm actually explaining it like this let me know down there let me know in the chat if it was clear and and why we do what we do so what we will do is have the collection which will contain all our conversations and all our channels and all of them will have a name and will contain a conversation which actually can be named to messages but for just the sake of simplicity we will go with conversation uh and inside of there every single object is gonna be one message okay so of course of course it will have a message which will be a string we'll have a timestamp a user which will actually stand for the username and we will have the user image as well now so let's go ahead and say export this thing and we what we will do is uh export default mangoes model and inside of there we will this is what creates the collection where we will store everything and that is going to be uh defined with the select schema that we just created up here all right so i hope it was actually clear and let's actually continue we have 154 people in a house let's go guys next up what we will do is go ahead and import this what we just built that will be just as simple as a single line of code uh we will import it as [ __ ] data and we will just go ahead and import the [ __ ] js file david are you seeing the chat who would i talk to if i ran into an issue uh drop me a message on my instagram okay drop me a message uh yeah and let's actually continue so next up what we will do is start creating all our uh all the uh api endpoints that we will use today so first things first we will need to create new channels inside of those new channels we will need to send messages we will need to retrieve only the channels to the sidebar and we will need to retrieve all the messages to the chat view right so actually this is gonna be four uh apis and we can actually get started building that thing let's go back to our screen and the first uh first api that we will say or that we will create is going to be the channel creator one and what we will do is just say app.post and inside of there we will have a new slash channel and that will fire off a function which has a request and the response parameter which will go ahead and create our channel for us now because we will be passing in the uh channel name inside of the request body we will need to first store it in a database not database in a variable it's been a long day let's not talk about it so what we will do is go ahead and say whatever we get from the request body we want to save it to a const which will be the db data now uh we want to go ahead and use that vb data uh to create a new document inside of the [ __ ] data right so that is going to be used for that and inside of that we will just do a bit of a bit of an error handling and that will be just a simple if gate and if we are receiving an error team sip is like a very good mug of coffee at 1am that is exactly the goal that right there is exactly the goal okay that's actually funny i'm gonna save that okay boom here we go uh so now let's continue and we just uh handled our error and one api is oh how did i put that oh my god okay so i messed up a bit uh the code and you don't want to put it to the mongoose connection instead you want to put them here so what we will do yeah uh after we save the request body we want to go ahead and go mango data create and [Laughter] exactly priyansha yeah that's it mango data create and we will pass in the db data and if there is an error we will go ahead and set the response status to 500 and we will send the error back and what if everything is cool we will go ahead and say 201 which means in server language everything is okay the new document is created now next up what we will do is go ahead and add the new message inside of there uh where's team cp now some of them are in los angeles some of them are in in the philippines some of them are in the uk i'm here on youtube so yeah okay and let's go ahead and actually uh continue on working and next api that we will build is gonna be the new message one so app.post slash new slash message which will go ahead and uh fire off request response uh [ __ ] function and what we will do is we will actually need to save two variables and the two of them is going to be one is going to be the id which will be the document id so that we can go ahead and identify which conversation do we want to push our new message into why is my chair not working and the other one is going to be the new message right so we will obviously because we are sending a message obviously we're going to go ahead and save it right so this is going to be the juicier part of of this api because we're gonna go ahead and first things first um we need to close all the brackets all right so there's no joke there but next up what we will do and i'm gonna type this thing out is that we will say mango data and we will not create instead we will update okay so let's go ahead and say update and what we will do inside of there so first we need to filter which conversation when do we want to uh add the new stuff into next we will push that and push the new data into uh the conversation that we have in uh there in that document and next thing is going to be the error handling all right let's go ahead and do that so first thing first let's filter that out and let's say id is going to be the id and guys actually i want to highlight this that mongodb uh okay i was pressing the wrong combination so mongodb is actually storing the ids with an underscore all right so let's actually go ahead and say uh id so everybody should see that there is that underscore that i was talking about okay so let's go ahead and okay cool so with that uh this id is actually going to be the id that we just passed in as a query from the url and next up what we will do is gonna go ahead and say uh push why did the dollar sign become four so we will say push because of course we need to push that new message in there but we will push it into the conversation right so conversation and that's where the new message goes all clear let me know in the chat if it is clear um all right thank you so much i'm gonna go ahead and answer all the messages that i got in my inbox today okay let's go ahead and continue and the only thing for this api is gonna be the error handling so let's actually do that let's do it is back welcome to the house let's go and continue so what we would do is just uh the only thing left is go is the error handling and that will be pretty much it and there is some kind of uh error which is i think not closing something or some okay so i left out a column after push okay uh it's crystal clear david what those comments are getting strange guys what is going on in there okay diamond clear chris talk oh my okay let's continue let's continue let okay you guys having some kind of different kind of conversation you should be paying attention to me so let's go ahead and retrieve all uh the channel names right so we will go ahead and retrieve everything but we will filter out only the necessary data this is actually a an easier uh step of security or it's more like confidentiality and all that stuff but we will go ahead and go over all these principles okay so one what we would do quickly is say uh we will filter out all the channel names and just those are gonna be uh retrieved back to the front end okay let's continue all right so so first things first what we will do is definitely it will be a get api so let's actually add that new thing in here and what we will say is that inside of there we will uh go ahead and find everything that we find in the database all right we will also start doing it with our usual error handling so i'm just going to pop it in so oh my god it's freaking out of course because the indentation and all that stuff is not breaking out all right so what we will do is we have the mango data fine we are not giving any simple or any single kind of filtering we'll just go ahead and retrieve everything and let's see so if there is an error we're gonna handle it of course and let's actually add in the new stuff so let's uh create an array and that array is gonna be retrieved okay so is this javascript in visual studio it's actually a vs code and i'm trying to find an alternative let's not talk about it so uh this is gonna be the array that i'm gonna be uh sending back to the front end next up what i will do is that you see that we are getting the data back okay so i'm gonna loop through that thing and i'm gonna grab out the id and the channel name right yes uh so what i would say is say data.map dot map and i will be getting back some kind of channel data right so every channel data i'm going to be grabbing out just the id and the channel name i only need those two for the side for side um yeah i'm thinking of webstorm as well so the only thing i'm gonna need for the sidebar is the id and the channel name okay so uh let's actually map those out and get those things uh out and for that we will actually go ahead and create a new uh object okay and this is what we will be passing into so we will be pushing this so say channels.push and we will go ahead and add the channel not data channel info okay this is literally what we will need for that thing so guys if you are with me if you almost have your second a third api route ready smash the like button and let me know if you're getting a value out of this video or i should just shut down this stream because nobody's actually watching let me know uh if you guys are enjoying this and if this is something that you want to learn or if this is something that you are actually interested in because i am very much relying on your feedback okay so that i can improve uh all these stuff uh which screen are you coding and watching comments so this is the one that i am watching the comments and this is the one that i'm actually sharing you with you guys and that's my camera okay um so let's go ahead and continue and what we will say is we will go back and uh sand back the channels outside of that loop and that will be pretty much it the third uh third api route is gonna be it and i think i have forgotten to close some stuff so let's actually do that um pretty much it that's all okay so uh what we would do uh all right so we were actually just talking about that react native is on the way so yeah stay pumped for that okay uh what we will do next is the last and the only um the last api route that we will use today and that will be just a simple we will retrieve everything back and that will be pretty much it so we will say app.get get conversation and we will save the uh query id which we will be passing on so that we know which conversation are we actually in okay so remember uh if you guys have done sun is build uh with the slack clone we were using something called the react router and that actually makes the request and that id is going to be passed into this request which we will be uh which we will be uh filtering the data based on so this is the filter uh again the underscore id and that's it and next up what we will do is go ahead and sure let's do it and what we will do is just pretty much do the usual error handling now what we will next up do because our backend is pretty much done so that was the back end build for today now we're gonna go ahead and detach firebase and attach this back end and make the whole thing uh fully um what you call it real time okay so let me know guys who is pumped for that who is ready to make this or finish this build in just half an hour i think we can do this in just half an hour we are gonna be super fast today okay and we will actually bring new stuff to the channel very very soon so guys drop some fire in the chat let me know who is excited and who is pumped and let's continue so what we will do is go into the front end project and and what we will do is uh say uh go into source and the files that we will need is gonna be the chat chat input and sidebar and sidebar the other sidebar thing so let's open up the chat let's open our chat input we will also need the uh sidebar option and we will also need okay i see all the fire coming in hey let's go that's it okay nice more fire uh okay we got sam in a house all right let's go so what we will do is say all these d beat our collection and all these firebase stuff this is awesome stuff but we're just gonna get rid of it today and yeah all right so what we will next up do is we don't even need this one and we will grab the sidebar.js file so first thing first i think the easiest one is going to be just retrieving the sidebar data and whatever we are going to be uh adding to this sidebar type js yes and what we will do is let's actually go ahead and fire this project up so i'll say npm start over here so this is probably gonna be freaking out um and we let's actually first fix that okay so we we are getting all the fire and love in the uh chat that's nice and actually something okay so it's starting development server that's good and i'm just gonna grab the whole thing to a whole new page so okay i think i think it's building or something it's taking very very long okay and let's actually put this user on timeout thank you for being here and while we would okay so let's actually wait a bit while this development server is starting up i don't know what's freaking out by the way and rukia asks if we are going to be using router or browser router and nope i mean it it's already built by sunny so we are not going to be focusing on it and we got the slack clone over here we're just gonna go ahead sign in with google and let's actually go ahead and do that pretty quickly great content in the house and youtube burn possible um i mean we can totally do that okay i'll look into that and we can do that okay so if i go in here it's now obviously okay what is going on in here okay sample uh i think we're everybody uses my um my credentials so okay keep it clean guys probably i made a mistake by not by not removing all the api keys so you can just go ahead and we can have some conversation in here while we are detaching so let's actually go ahead and what we will do is uh change this part and this is not gonna be pulled in to the uh in from firestore anymore instead we will be pulling it in from uh mongodb all right so let me know if you're excited for that and let's drop some fire and let's go so what we will do is let's first actually just comment this part out and inside instead of just starting with axios and all that stuff uh let's add the uh axios as a dependency so let's go ahead and say uh npm i and axios and that will pretty much go ahead and are you going to publish this app on google store i don't think so okay stream pros buffering buffering buffering um try to refresh it high definition is off so it's guys it should be perfect okay uh see all the fire is coming in nice okay so we have the axios installed and let's actually go ahead and add a new file which we will call axios.js and what we will say in here is we will import axios from axios and then we will just pretty much go ahead and create a new um instance okay which will be an axios dot uh create nice and inside of that what we would just what we will be passing on is uh it's just the base url okay so the base url is of course it's gonna be uh http colon slash slash local host and 8 000. and my emoji app is going crazy and yeah uh any plan for meet up i mean once this corona stuff is over as far as i know we are going to be planning and we are going to be doing live events so stay tuned for that okay let's continue so what we will do next up is just go ahead and export it so we we will be using default exporting so however we want to we can import it on the other side so instance that's it and yeah my stream is going cool on the other side all right we should be good okay so uh our axios instance is uh is ready and we just got this question from ferox uh why we use axios and the reason for that is axios is actually converting the response immediately to json and we don't have to deal with all the other headache stuff and it's just a lot more professional and and it's just a better thing to use okay i actually raised my volume a bit so you guys can hear me more clearly so that's pretty much the reason why we use axios and not fetch and all that stuff and as far as i know node.js doesn't even support uh fetch you need to import that or with another uh package so it's um it's a bit messy so let's go ahead and say uh let's go back let's close axios.js up we will not use it anymore and inside of here we're going to go ahead and pretty much just uh import that and that's uh pretty much it and the one thing we will do is create a new function which we will be uh using to uh render out all this stuff so we will create a get channel list which is going to be in axios.get and we will go to the get channel list uh endpoint and i think i think that's not the correct uh oh yes it is okay so we will go ahead and grab the channel list and then the response will be so the response data is going to be set as the channels so that's pretty much what we will do here for now and we don't even have to worry about any of these stuff down here uh because these are just compatible because we designed it that way so um next up what we will do is say instead of the uh use effect and all the firebase stuff we really appreciate you son of brother but we are just not going to be using firebase today uh and instead we will just call this uh function that will pretty much go ahead and do our stuff and of course this is where our real time stuff will come in so let's just worry about that that's gonna be the last one and we will be just ending it like super fast okay so next up what we will do is go to sidebar option and here we also see this one which we can go ahead and get rid of and well we will pretty much replace it with is another uh three line called or actually two line code uh we will actually add the channel name as the channel name of course because that's how we uh defined it and that's how we will uh accept it and we will go and say axios post to new channel and that will pretty much go ahead and create a channel for us okay so next up what we would do and guys let's actually get this energy up i see okay i see a couple of you say the um um live is froze i don't think it actually is froze i'm watching it right here and it's working so let's go ahead and say um okay now youtube is freaking out and saying the bitrate is not enough but we should actually be good okay uh i think even my internet no that's fine that's fine okay let's continue guys get the energy up smash the like button if you're getting value out of this video and if you are enjoying this speedy build uh we really want to uh show you guys that this can be done in just a matter of like one hour or one and a half i mean with all the talking it's of course it's more than an hour but without all these it's definite and i actually see all the messages coming in and without all this talking it's actually a lot faster so guys the reason being is today the title actually includes the word intermediate because we are not really testing and we're just gonna be oops we're just gonna be debugging everything at the end if there is anything to debug and um and yeah so we are just gonna i'm trying i'm trying to uh teach you guys that this actually can be done super fast okay and shivangi asked if i have a personal uh youtube channel uh not yet should i create one okay and the build is going like that that's exactly what today is about we are speeding up and we are gonna be bringing some new stuff very shortly so stay tuned for that guys and let's actually uh go okay from teams only coding but also how to speak in english stylish if you're learning english from it that that might not be the best idea but actually i'm glad that you are getting like double times the value so that's awesome okay okay uh braxx asks uh what are we doing here so brother uh we i think you're new here uh but we are doing is um uh pretty much sunny who is an awesome team member of clever programmer has built a uh slack clone back i think in august or july and that was actually using react and firebase so it was a front and only plus uh plus a platform as a service and that was built by them and today i am taking it to the next level by removing firebase and actually adding a complete backend to it so if you actually enjoy if you actually if this actually sounds like interesting to you i highly recommend uh first go ahead and watch sonny's video on the front and build and then next up uh come back here and watch this one this is actually gonna be a much much shorter uh than the other one so all together it's gonna be like around five and a half hours okay but then you will actually have a front end with a platform as a service build on your portfolio which will be using realtime database and you will have a mirn stack application on your portfolio and you will be able to show these two off and show the differences and all that stuff so that you are super e you will be super uh super easily getting a job in 2020 which is actually uh one of our goals that to in this year we want to help 5 000 people to get jobs as developers so if you uh happen to get a job uh using one of the uh using the knowledge that we share on this youtube channel let's drop it in the chat okay and one more question i'm gonna answer is which language is the best for programming javascript of course okay maybe swift on the side but these two okay next up cool got you i'm down for a job in coronado that's it that's literally it that's the mindset just put in the work and that's it okay okay and let's actually continue smash the like button guys if you're getting uh value out of this video and let's continue so what we will do next up is uh because we have the add channel function already uh yeah we can pretty much i think omit this file and let's go into chat input but actually let's go into chat and so guys you probably see that this is like a lot of code we don't like a lot of code we like simple shorter codes and we want to help our front end developers as backend developers so that they don't have to work that much and they can focus on the creative stuff on oh and the great ux so we want to help them by just reducing their whole coding stuff to three lines okay um like this actually four okay so i uh messed something up here um okay so this is the code that we will be using instead of all these and let's actually don't even worry about uh all these firebase things uh these are awesome but this is just a lot of work uh to go go with so guys as backend developers your goal is always to help the frontend one um what hair conditioner do you use nothing dude just watch it uh so as backend developers you want to go ahead and help the have the frontend guys so that they will have the more more focus on making the products super crisp and awesome looking instead of worrying about all these api calls so what we will do is say axios get and get the conversation for that specific room right so this is the query that we are adding at the end and then from the response we will go ahead and grab the data and the first which is zero in programming uh youtube channel of club programmer don't worry about books okay so from the response uh inside of the data you want to go ahead and grab the first object and you want to grab the channel name for setting the room details that will go ahead and set uh on the top and down in the bottom everything for us and next up what we will do is set room messages to the conversation and it's freaking out because we haven't imported axios now let's do that very quickly so we will just go ahead and say import axios from um axios and that will pretty much solve our problems hopefully maybe not let's check it out okay it's oh it's from the sidebar option so we can go ahead and copy this one and drop it in here boom let's see if i forgot it from somewhere else so we will go ahead sign in let's go ahead and actually guys we should be seeing all the empty stuff because i actually haven't added anything but let's actually keep it this way and once we actually add everything you will see that this is like super crisp and super fast okay so let's leave it like this for now if you want to go ahead go ahead and test everything out like the ad channel should be working so yeah and we also have the uh also have everything ready i mean this is where all the channels should be showing up but because we don't have any of those channels we're just not going to be bringing up about those for now um what did you use for designing with google uh actually it's still firebase so the amount of headache that you would get to work with like passport edges and all that stuff it's just not worth it we will definitely do a video on that but that's going to be like a not a full project uh because that's just too much um so that's why we are using authentication for with the firebase and also because today's topic is how to abandon firebase if it's not enough for you um the authentication is always going to be enough so there's just not going to be any better option than firebase's uh authentication okay so uh let's go ahead and go back in here and what we will pretty much do and go ahead and do is actually uh get these get this uh get this uh get this request into a function and that will pretty much go ahead and we we're just gonna go ahead and grab this out of here and put it out here so that we can call it from inside and you guys will see very soon why is that important and polog asks what is git uh i highly recommend you go ahead and watch the video that i did with ammanot uh another part another team member of clever programmer and we did an awesome how to begin with or get 101 sort of uh video with two recommendations what the whole what what is the whole thing and how to start using it as a developer and all that stuff um hi captain cool so let's go back in here and let's continue so this is where all the real realtime stuff is gonna go uh real time stuff and we will actually go ahead and not today but uh later on we will drop a video on how to make your app like super optimized that it doesn't even use any kind of resource okay so um last but not least uh i think we have the chat input left to do yes that is correct let's remove that thing and whoo somebody says i'm muted i shouldn't be am i guys i shouldn't be muted no no i'm not muted definitely not muted so clever programmer what's more difficult backend or frontend um it depends which one which one do you like for me it's frontend because i just don't like to mess around with all the css stuff but okay oh okay okay okay there is some other conversation going on and i'm just gonna ignore that for now okay uh so inside of chat.js what we will do is get the uh no we will go to chat input and we will actually create um the post request and we will not uh have it out in other function let's just not worry about that and what we will do is just say axios pose new message and we will need to pass in the channel id right because that's how the backend determines where to push that new message and uh oh yeah okay and what we would do is say create the message and that's gonna be the input and we will say the the timestamp is going to be a data now which is going to be super simple and we also have the user which will be the user.display name which we are actually grabbing from the react context api and guys if you don't know what this real context api is i highly highly recommend going back and watching sonny's video on this slack uh clone he does an awesome job explaining it i'm just not gonna go into that because uh that will be uh that will be uh too much okay so let's go and because we just added everything we should be good to go let's go ahead and test this out of course it's not because we haven't imported uh um xcos so import xios from axios that's it uh yeah we will build an admin panel later on we can definitely do that okay drop me a message on instagram and we can totally do that okay so we just imported axios that should have uh got this done let's test this thing out and let's see what we got so we should be able to create a new channel which will be you tube okay nothing happens that that's completely fine that's completely fine why why is it uh completely fine because it's still not real time yet but we will go ahead and refresh it and we should be seeing it popping up on the left hand side so uh private chat room club programmer if we want to make a private chat room user to your can you make with the same method as with channels yes you can definitely do that i think i will actually uh create an other one uh which will include that okay let's go in and sign in and there we go we have our channel on the left hand side guys drop a comment if you are here with me if you have that channel functionality working both retrieving and both adding a new channel let me know uh if you are if you're following and if you're with me and if you're enjoying this and smash the like button if you are getting video out or value out of this video okay almost got that word order and let's go ahead and select that and okay so for some reason it's not updating up here neither down below let's actually go ahead and address that and let's see what is happening okay so it actually is freaking out because uh there is still the wrong address going on in here boom so let's say here we go and let's go ahead sign in oh request should be 8 000. uh maybe i have messed it up in my axios.js no i haven't it's it's 8 000 should be good okay there we go and let's go into youtube okay so it's freaking out for some reason uh not no worries we will address that in just a minute so let's actually debug whatever is happening yes it is gonna be uh posted on youtube so what we will do is quickly go into chat.js and let's actually let's actually realize that uh there were more data stored into room details so that's why uh it is freaking out for now but let's remove all these stuff and we will actually be uh fine with that and let's actually remove it from here so that we are not passing in the wrong kind of data so right now room details dot name is undefined because of course it is undefined right so we are only uh grabbing the channel name to the room details no key and all that stuff and no id and all that stuff so let's test that thing out and i think it should uh it should have made uh corrected that mistake and yes it has so guys down below there is uh youtube and up above there is youtube as well so smash the like button if you are here with me and if you have this thing working to the point where i'm at and let's actually continue okay uh boom so we should be uh good all right we got so much fire going on in the chat section that's awesome okay and what i will do is say uh next up i am gonna test out the message sending functionality so let's go ahead and say hey guys oops hey guys and at some fire boom and we should be able to see it once we refresh okay sign in with google okay here we go and what okay so it's freaking out no problem no problem no debug mode for this so what what is happening is that the timestamp is not in the correct format not a problem uh we can fix it like super quickly in message.js file let's actually go ahead and go into message.js so this is the line of code which is uh freaking out and what i think the problem could be is so we will need to say parse in first uh to ma to timestamp and we will add the parts and we will remove the question mark the optional chaining and all that and we don't need the to date either and i think this should be able to make the app work so let's sign in again we still have 140 people let's drop some fire let's smash that like button we are at 278 likes that is super awesome that is super cool and let me know guys if you're actually enjoying it and smash the like button and let's actually get this thing up to 300. we are so close we are very close so let's get it up there and let's show this video out there to everybody all over youtube so we are at 280 let's go ahead and let's actually push that number up to 300 okay let's go so we are two for 284 let's continue growing that number so with that said let's go ahead and log in here we go okay and we got the date back normally image we have the message we have my name so that is uh and we have kazi on the left hand side um sorry kazi i'm gonna remove you from there and everybody who has uh logged in their name is gonna be showing up there so we will go into sidebar.js and i think it's actually coded and there is this typo not a problem so instead of quasi we will say user the display name and i think it's gonna be freaking out because we don't have a user imported so we will say uh up here we're just gonna go ahead and uh get the user from react context api and we can just do that super simply now i think that actually uh solved the problem uh newstate value is not imported not a problem uh we're just going to go ahead and do this and i think here we go johnny one he said hey oh this channel is lit that's it let's go all right next up uh let's sign in and let's see what we got so logging in hey nice okay we got the name changed so um we have the sand we have all the functionality right that we needed to work on the back end time to make the thing real time and that will be pretty much it for today so let's go to pusher.com and let's actually go ahead sign in if you guys don't have an account you can go ahead and sign up it's completely free with a couple of restrictions but don't worry about that we have never reached those and let's go ahead create our app use us three and west so the front end is gonna be react it's as native but nope we will we will use node.js on the backend a alexandra is in the house nice and so we just selected our languages exactly that is our goal to make it this channel as informative as possible so yeah huge shout out and thanks and what we will do is actually scroll down here to the back end because that's so much easier to set up and let's go back to our server.js file go up here to app.config and just paste it in here okay uh cycle quarter ask asks if there is a alternative for pusher and probably there is but it's just super simple to set up and super easy to use and probably is one of the most uh popular and i know a lot of you guys are going to be like oh there's soccer i o and yes there is socket i o but there's just a pain in the neck so i was like yeah let's do the easy one and the powerful one because that actually saves time for me with preparing and for you when you're working with clients right so the the more so actually it's time is money right let's put a price tag on every hour you spend and you will understand it's super fast okay and and the faster you work the more jobs you can do the more money you can earn simple as that so that is the reason why we use pusher so let's actually change the encrypted to use tls because for some reason uh encrypted is uh deprecated and we are gonna be using the tls one and let's rename the uh let's remove the war and we will say we will say const instead you got it brother uh the psycho coder okay and next up what we will do is we're going to go ahead and set up our chain stream uh and what we will do is go ahead and set up the change stream which is literally a super nice way by uh mongoose that you we can go ahead and watch all these uh collections what we do is create a chain stream change stream which is going to be watching the mongoose connection collection so the collection of the mongoose connection which is actually the conversations and it's going to go ahead and watch it and once there is something going on we can pretty much go ahead and say ooh caps lock we can say chainstream.on of course it's going to be change we're going to fire off something which will have a change uh parameter inside and we can pretty much go ahead and that is where we gonna go and uh runner i am beginner i am very slow in js it is no it is not yes it is completely normal uh today we are actually uh going a bit faster than usual uh we are just trying this out so that everybody gets entertained and i highly highly recommend that you got you watch this video so that you actually can see how fast this can be right and how fun and fast and powerful this whole development can be and then go ahead and watch all the other videos there is a lot of begin like very very beginner friendly content on this channel so you can go ahead and watch those and then come back and watch this one as well and once you you pass through all those uh videos uh you will be able to rush through this one as well and then you will feel so powerful okay i can guarantee you that all right uh let's go back and say that if the change okay so inside of here we are passing in the change so if uh change the operation type is actually insert oh insert yeah okay i'll tell i'll i'll learn how to type exactly alongside literally drop the code in here okay so that that's what we will be adding okay uh so if it's insert we're gonna go ahead and trigger a pusher which is gonna be a new channel even on the channel stream and if it's not uh we will so that is literally uh gonna be watching if you are running a new channel right so remember when we add a new channel that's when we actually insert a new document but uh when we are adding a new message we are just updating one of the documents right okay so that is what is gonna happen here so we will add an else if and an else statement uh here okay there is some craziness going on over here okay um right so as if the cha if the operation type is in update so that means a new message gets pushed into the database then we're going to go ahead and trigger the pusher button in a bit of a different way so up here we are triggering the channels channel and we are adding the new channel event but this time we're gonna be adding the conversation uh channel and we're gonna add the new message even right and we're just gonna be passing through the change let's not worry about that for now uh we will make a video on how to make this super super seamless and not use too much resource okay and we will also add the console login here if something is not working perfectly we're just going to cancel like the error triggering pusher now with that done we literally are done with the back end so great job next up what we will do is go to our front end and we will add all this stuff wherever we are retrieving something so that is going to be chat.js file right so whatever we have a get api call that's what we want to make real time all the others don't worry about those so we have the get combo over here and what we will do is go up here and actually grab this one which will go ahead and create the uh instance so let's actually remove the war you don't ever want to use var you want to use const instead and you want to go ahead and grab this thing which we will insert after over here let's remove the alert and let's actually add the get the function calling over here as well and we will actually subscribe to uh which one is it so it's the chat dot js so we are gonna be uh subscribing to the conversation one right and we are gonna be subscribing to the new message uh even all right so guys if this makes sense let me know or if it was too fast and i need to go over it again but before we do anything let's remove this bar hey dinesh what is up so add const in here and that will pretty much go ahead and refresh our conversation and yeah that's it so optimizing it would be like uh we add a new uh so optimizing would be that whenever we are passing in a new message we are just pushing it from uh the database to here right but that would just uh take too much time to implement but we will do it in a separate video okay so stay tuned for that we will get all the optimization things in one video and we will cover it okay like next let's go ahead and what else do we got we got the sidebar.js file and that will be pretty much it for today okay so up here let's actually add the uh pusher instance and what we will do is say uh const instead of var and hey we got another lovely donation by ff uh it's 40 rupees bro how should i learn morn from scratch help me honestly by watching these videos okay so i would leave this one to as the last one but i would go ahead and watch tinder mirn uh then tick tock mirn what's up mern and maybe instagram learn then facebook moan and then coming here okay i think that will that is like a nice learning curve so first is just the basics like how to retrieve and store data in uh in mango db right so and then you will learn with instagram and facebook clone how to actually store images and actually files because you can i didn't tell you that time but you can literally like upload whatever files you want so if you want to go ahead and uh upload like a video you can do that if you want to go in and upload like a pdf file you can totally do that but mongodb has a 500 mb free storage so if you're exceeding that it's just not going to be transferred and next up i would go here and learn this one maybe uh netflix mean by yourself actually that's that's a good idea as well uh but i would definitely make one of the uh discord clone maybe an imessage clone as well so that you can separate those uh so you can see the fundamentals of how to have like different conversations and then get this one so that you can see that how fast it can be and if you remove all the chatter that i do and like reflecting and answering all these comments uh then you will see like how fast it can be okay and actually let me know in the comments and in the chat if you guys would be interested in seeing us or either me sonny or or whoever will do that but how we actually prepare to these uh lives right so if you guys are pumped for that and if you guys want to see us behind the scenes like how we prepare so like without an idea of how i started uh from the beginning till the very end when it is actually working drop some fire and let me know so that uh we will have a reference and and we can we can show you guys how we actually work on these builds okay uh and last but not least we will remove this comment and add the um and this inside of here remove the var replace it with a const and why is it okay and let's actually get the channel list again inside of here once we see that we receive a uh we received a new channel and we just got another donation from ff 30 rupees thank you so much brother uh we really appreciate uh that and thank you so much okay um what do you think about microservices is six system design essential uh microservices i think it's only useful when you're working for like huge company okay uh okay uh and we also need to uh sign up for the channels channel and now this application actually should be a real time once we uh import all the pusher stuff because we haven't installed anything obviously it's not going to work like that let's go ahead and type in mpmi pusher js and yeah that will pretty much go ahead and do the work for us it installs the dependency for the front end hey thank you so much appreciate the love okay and we have it installed and now what we will do is we need to go to chat.js and actually import it so we will say import uh i said import from pusher.js we will and this is actually a capital p okay so we are importing with a capital p because we are creating a new instance of it here with a not capital p i don't know how it's called but it's not capital definitely okay i hope this was clear but you just need to make sure that this is a capital one and we will need to make sure that on the sidebar.js we do the same thing again a oh my zsa that's exactly what i'm using so we are going to be importing uh pusher with a capital here as well from pusher.js with a capital p and we should be good to go okay uh let's refresh hey hey okay should be good uh let's actually sign in there we go and all right we have the youtube channel let's say we had a new channel like real time lovers couldn't i could have come up with a better name by the way okay it's refreshing it's real time actually so yes and what we will do is just add a new message like welcome guys and some drop some fire in here hey there we go this application is real time hey hola tobias como estas ha uh that was my spanish knowledge by the way um okay not gonna translate okay not gonna work out i was literally trying to translate some stuff to spanish but not gonna work out okay uh and now what we will be doing is because we have a little bit of time until we reach the two hour mark uh hey david makes everything super simple that was dope thank you so much thank you so much really appreciate that and what we will be doing is we will go ahead and actually let's have a chatter in this application because i'm gonna go ahead and deploy this and we will go ahead and i'm gonna just drop it in the chat and we guys can have some fun uh actually pusher is gonna limit the whole thing because we are 150 in the house and um okay it is what it is so the pricing actually says that um we can only have 100 concurrent uh connections with pusher but it happens so let's go ahead and open up heroku um yes and let's actually add oh hold on i wasn't sharing my screen so this is heroku this is where i'm gonna be uh installing the node.js package let's go ahead and create a new app and i'll say slack uh mern and let's go ahead create way hey so dope music makes you dope yes isn't it okay so what i will do is just go ahead and run this command in the back end over here sure okay so i don't know what the dollar sign is but it just makes your life like not cool okay there we go and we just added the heroku kit we'll just go ahead do a comment and then get push rock master okay so we will say get a and we would then go ahead and git commit dash am and done and git commit oh i think i added three m's but it's good that i remember that we need to edit getting or otherwise it's gonna go crazy so say get ignore and we're gonna add a node modules and yeah that's gonna do the work for us because node module is gonna just kill everything so okay and how do i reset get oh okay it means comment prompt okay so how to undo get uh dot and let's see okay git reset okay so i go ahead and say reset it's because i've mixed it and i say git status so let's go okay we have all the necessary stuff in here so i'll say go ahead get a dot as a dot git commit dash am done and say get push heroku master and this will actually go ahead and deploy my application uh if this was fast uh you can check it out any other uh no mern stack application that we did back in uh around september or the beginning of september and davidson both could learn host awesome presentation thank you so much really appreciate that all right and what and yeah we actually have 150 people in the house that's awesome okay smash the like button guys if you like today's build and if you're excited to have a chatter in the live slack clone that i'm just gonna go ahead and deploy quickly um that should have done it okay we should be cool and what i will okay so we have the back end probably so i will just go in and say uh heroku logs and guys if you actually want to have like a heroku and all these command line stuff going on okay nice so if you guys are interested in some kind of heracle crash course or something let me know in the chat as well as on my instagram so that we can present those stuff for you and what i will say is i just paste it in here thank you so much oh that way we actually see the comments thank you so much really appreciate that okay and we have hello clever programmer fam on up here that means our api is up and running that's good that's actually good now what i will do is go ahead and inside of axios.js i will change this link to this remove the slash and we should be good to go now uh let's actually test it out if it is actually working let's go ahead sign in and remember the front end is still not real time but actually is real time say yo and some rocket i said rocket boom we got it working and nice guys we just have like five minutes left from the stream stay here smash the like button if you're excited i'm just gonna go ahead deploy this and then we will be able to go in here and have some chat all right so what i will do uh what about back and stripe implementations david uh drop me a message on my instagram i will do it but i will not remember uh this comment so drop me a message and cool and we should be uh ready to build this so what i will do is say fire space in it because i already have my project ready my firebase project so i'm not gonna worry about that uh we have done it dozens of times so we would just make it fast so we would say hosting use existing project and we have this slack clone over here and this is actually super important uh you want you want to get rid of the public you want to go always with build so it will say build in here and we will use a single page application and we will not worry about the github stuff and we just set up the hosting we will go ahead and type in mpm run build that will pretty much survive all the developer stuff like hot reloading and all that stuff and creating an optimized production build that will just reduce the size to like 5 mb from 200 mb so it's a pretty nice uh reducing and it's still gonna be the awesome react that we know and love okay so we're just doing it it takes a little bit of time while we optimize everything so hopefully it's gonna be done very fast and thank you so much ram really appreciate that and exactly that is what's happening what alexandra's just dropped in we are running npm run build and firebase deploy and actually we could have set it up in package.json but we will actually we we can make a tips and tricks video very soon so guys if you're excited for like some kind of other content than just coding and projects let us know because that way we will go ahead and do the stuff that you actually request okay i'm excited for that now what is this doing for so much time we the production build should be ready by now let's wait a little bit okay there we go there we go and what i'm just gonna say is firebase deploy and we should be good very very soon okay it's deploying nice nice nice let's go it's uploading all the files finalizing version releasing the version there we go and i'm just going to go ahead and grab this link and test it out but and guys we should be good to go in any minute not authorized to run this operation okay uh we have some kind of issue going on in here let's go to our firebase and let's check it out so slack clone author is authentication hey okay so we have a couple of people in here that's actually good signing method um maybe because this is the wrong link at the domain okay let's let's try it out this way let's refresh because why not sign in with okay that was it that was it okay let's sign in hey welcome youtube hey guys yo what's up everyone we are live and let's actually add the red circle here and let's add some fire and we are live we are real time i'm gonna go ahead and drop it in the uh youtube chat so and i think i can even edit in restream chat okay maybe not so guys let's go to that link let's have some fun uh let's go everybody and come up here and let's get some let's get the energy over here and guys if you are if you enjoyed today's build there is a link down below in the description uh which is a okay you're live okay mack talk all right we are getting people in here nice okay this is working real time guys if we reach 100 uh it's gonna uh it's gonna like throw the whole thing off but that's it and one thing though so down below in the description there is a link which actually takes you from zero to hero in a react and that is a netflix clone if you want to take it to the next level i highly highly recommend going down there and watch it and we will we will totally uh work this out so if you wanna if you enjoyed it smash the like button hit that subscribe uh go and smash that uh bell icon as well so that you do not miss any of our videos and i think that is it for today this is david from cleverprogrammer and today we'll build the slack clone with mirn stack stay tuned we're gonna be dropping some bangers very very soon and i'll see you in the next video peace out guys um oh hey you