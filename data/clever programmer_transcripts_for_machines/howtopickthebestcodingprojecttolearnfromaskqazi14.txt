I get this question a lot how do you pick the best coding projects to learn from I'm following these tutorials I want to pick a good coding project cause II what what is it that actually helps me the most what should I spend my time on well you're in a great place my friend because in this video we're gonna answer that so without any further ado let's jump right into it alright so you want to pick the best project your time is important if you work on the wrong project you might actually spend a lot of time working towards something you could actually never get done in the first place if you work on a project that's too easy now here's spent your time building something you completely already knew how to do and you did not learn any new skills and it won't even be good on your portfolio if you decide to put it there and in reality it'll actually be just a waste of your precious time we have many resources in the world we have money which is infinite we have energy which is actually infinite right I can put in boom as much energy as that one into this video but that energy does not go of it oh oh they away that energy is actually still here I have it and I can't go all in on the next video and I can go all in tomorrow but well we don't have infinite of my friend is time it's a limited resource and so your time is very important and if you're gonna work on a project that isn't gonna be the best for you and isn't gonna help you grow in your career in yourself learning then it's not worth your time so how do you pick the best coding project to learn from doesn't matter what programming language you're working in Python C Java I have a few answers for you okay and I'm gonna answer this not in a generic way just do whatever you feel like man like just practice just look online and you know feel it I'm gonna give you some tangible tack answers you can apply so one of the things I'll say is I'm gonna start off straight off the bat with the best way speak to somebody who's more experienced than you in coding okay knows a lot more about coding than you do okay somebody who might you might even look up to and ask them this question what project should I pick that will be quite possibly really challenging for me and at the same time still very doable here are some of the projects I've worked on here is my github okay if you have a github and please make a github show them what kind of things you've worked on and if they will invest a little bit of time with you they can see what your skill level is that what kind of concepts you're familiar with if this see that you can solve Fibonacci problems it'll be like okay this person is familiar a little bit with recursion if this see you've done like a tictactoe problem recursively that can beat any computer now they're like okay this person is really comfortable with recursive problems so maybe the project that I'll give them I wouldn't shy so much away from recursion but if you have never done it then you don't want to start on a project that will require you to use a concept of recursion does that make sense so by asking that question you're having somebody who can look out for you like a mentor and give you very specific advice on the list of projects that would fit your current skill level this is very important because if you just google everything and copy/paste everything now you're just learning how to copy and paste but if it's too easy for you now you're wasting your time right so by somebody actually looking out for you and giving you a list of these that could be challenging for you but in your current skill level that will be incredibly valuable for you because a solid project shouldn't take you one day or two days to do a solid project should take you one to two weeks or more to do okay and when you work on a project that goes very deep the amount you'll learn increases exponentially okay so I'll say it like this if you're working on ten small projects right it's gonna be you're gonna learn one thing from one small project one thing from the second small project one thing from the third small project and after doing ten projects you'll learn ten new things but if you work on one project and you just go incredibly deep you're gonna learn one new thing or day one you're gonna learn one new thing day two one new thing day three and by the end of ten days in a weird way you actually wouldn't learn ten new things you will learn a hundred new things and so it goes the depth of knowledge is a lot more important than the width of knowledge when it comes to coding my friend please don't fall into the I'm just gonna do a hundred projects and now be impressive even to your employer that's actually not gonna be impressive okay the person who's gonna potentially recruit you hire you whatever that may be freelancing fulltime doesn't matter but if you do one project that you've been working on for a really long time and you're just doing small steps but over a course of you know think about a few weeks a month a year a project will be ginormous and it'll be something you're proud of and you'll learn about how to maintain code how do you run a project for a very long time how do you deal with it in a way where when you come back to it you still understand it you're gonna learn about documentation you're gonna learn about how to make it your code readable you're gonna learn these things through yourself not through a textbook you're literally gonna learn this because you're gonna go to an experience where if you don't write readable code when you come back to your very own project a month later you're gonna be like what the hell am i working on right now you're gonna have no idea you're gonna be lost and you're either gonna have to destroy that project and start from new scratch a month's worth of work gone and that's gonna give you that painful lesson and then you're gonna be like I need to write readable code that's why this is important I need to document my coat I need to have a readme file when I post to github I need to have proper documentation I need to have testing for my codes just even looking at the test I can see what my code is doing okay and other people can see what it's doing and overall it's gonna put you in a position where you're gonna become a lot more employable than that next person who's doing ten free code camp projects and just like on their resume nothing wrong with free code camp and nothing wrong with using you know doing many projects but I would say avoid shallow work my friend work on deep projects and if you ask somebody specifically that would be great now if you don't have somebody you can ask in person you can pay for their time going to a service like code mentor hire a developer pay them fifty bucks or a hundred bucks for an hour of their time to listen to you and give you potentially a list of projects because you're gonna be working on this project for a few weeks maybe months right so what you don't want to do is pick something that is not worth pursuing okay and in if you're one week or two weeks or a few months of your time isn't even worth fifty or a hundred bucks to you let's say you actually just don't have that much money then what you can do is like post it online go to forums develop a relationship with some other developers there and ask this question and there will be people who will answer you okay and they can help you pick a solid list of projects you know because if you just look online you're going to get this generic list of projects once and I don't believe one size fits all when it comes to something like coding it needs to be very custom tailormade to you to give you those best peak performance things okay and I believe Tony Robbins says this and he's like if you can't plan your life you can't plan your day so remember that until you can plan your life you can't plan your day and until you can plan out the project you can't plan out what you're gonna be coding on the next day that's my tip for you for the day this is Kazi thank you so much for watching as always my beautiful person sitting on the other side of the screen I care for you I really appreciate you thank you so much for being on this channel if you have any questions please comment below like the video if you liked it and if you didn't like it dislike it but I want you to be active okay I don't want you to be passive so that's it subscribe if you haven't already that's it for this video as always I love your faces off and I'll see you in the next video