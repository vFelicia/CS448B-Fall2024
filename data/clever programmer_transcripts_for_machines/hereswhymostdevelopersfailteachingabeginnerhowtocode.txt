let's go man i'm over here my hands are like super cold right now just because of how nervous i am yo what's up guys how's it going this is qazi from cleverprogrammer.com today i have with me david what's up yo let's go david let's go today we're going to be doing something really interesting which is we're going to take david who has some coding skills david how would you describe yourself in your skill level you're advanced beginner right so he's one step below intermediate mostly beginner and we're gonna take david and work with him and give him some coding skills we'll see how it goes alright and hopefully you'll enjoy this with us let's rock and roll we'll just uh go through this together okay let's go through some javascript exercises and i want to see how you do in them okay so let's start with in javascript let's start with uh if you had to write something to figure out the max of an array would you be able to do that the max and if you don't know any of this is totally okay okay i'll work with you here i guess just start off by making an array in javascript okay and see if you could show it here where it says gs start if you just have like one of the items show up here on the header okay so i'll give you a hint on line six we have uh this that's showing up here so just start off by making a array in javascript and let's just put groceries in there um did i just take this over yes take it over you got it you said groceries yes oranges beautiful bananas uhhuh cool so we got our array right okay it's really good now i want you to um okay let's just do like i want you to print out bananas or console it out like so i want to see that how would you do that uhhuh and you said bananas groceries yeah and then get me get me bananas out of that two okay and let's take a look at the log and there we go bananas beautiful okay that so that looks really really good okay good job with that amazing okay awesome now make bananas pop up over here groceries dot get element by id and then i will say so let me give you a hint okay okay what exactly what you're trying to do somebody's already done that for you on line five and length six oh okay okay and then i would just have so somebody literally got that element by its id and then they changed its thing so i would just do the same thing in reverse so what you want to do is you already have access to this app div you just have to do app div dot inner html and make its inner html whatever you want got you okay there you go app and for everybody watching guys this is why it's really important for you before you go to react or anything else get your javascript right so let's keep going okay so try bananas so great it's showing up however what i want you to do so you know whether you wrote it like this or you wrote it like this it'll still say bananas here but what i actually want you to do is you hardcoded this but i want you to pull it out of this grocery array okay uh no don't know how to do that you did it on line 10. oh okay it's the same thing yes sir exactly wow nice work okay why this is important to know is because when you go into interviews this is exactly what happens i see like you guys saw this and everybody who's watching this saw this too it's like you knew how to do this you clearly just did it right right right but then because i asked you you probably just got stumped or your brain sometimes my brain literally started thinking wow i know how to do it but why am i going so slow why am i feel like i can't do it why do i yeah yeah yeah okay exactly exactly so that's why this is important for us to drill right okay cool so you're doing you're doing great so far this is this is looking good okay we have our banana showing up we're showing it from the array now what i want you to do is i want you to go ahead and loop through the groceries array and just like print everything out in the console i say print a lot because i'm from the python world and there you don't say console.log you print right okay so i want you to just console um put everything on the console like just loop through it and line by line show me all three of these items you're doing great by the way i need a hand let's take a look at this right so let name equals okay cool i know that it has to have parentheses so let's start here okay so for loops start with um have you ever written a loop in javascript or not right practicing that now okay cool so let for dot length i believe semicolon and then would be i plus plus cool and then it will have these curly brackets right there yep console.log and i think that's it so did you do what i asked you to do loop through okay you asked me to loop through all the items in the array until what and just make sure that each of them prints out line by line prints out line by line but what's happening here instead so it's just going to loop through what is it currently doing it's just gonna give all the arrays over and over and over yep it's just giving that array three times right when you do gross groceries it gives you the array again and again right right but uh if you were to do it by yours okay so show me how you would manually do it so go through forget about this loop and i want you to write out lines where it literally prints out apples apples then and then another console log that prints out oranges and then bananas okay so just do that manually without a loop without a loop yeah just cost groceries sorry zero and then i would you're going to know how to do that because we don't we don't need to type all over exactly copy and paste and let's go command c are you a windows guy no i'm a mad guy okay so let's make sure we do yeah perfect command c command v okay perfect good job you got it right now you're trying to automate this through this loop so what's the pattern that you see here zero one and two right so what's the thing that is there in every do you see that this bracket thing is there and every single thing you right so grocery sting is there every single line you wrote right right so that's why in the loop you're going to say groceries what else is there in every single line the location of the array yep so the the bracket is there and the location of the array is there right so pretty much we're gonna make the we can pretty much make the bracket here safely okay and then what's this thing that gives you zero one and two what what's that the location that's the location right so what do you have access to a variable or something that can give you zero on the first loop one on the second loop and two on the third loop because if you so if you hard coded zero here what would happen it would print out the first item in the array which is apples how many times maybe one or two times why would it be two times because it has i plus plus it will yes but it's running as many times as the length of the array so what's the length of the array the length of the array is two three three okay okay so it will print it out three times three times okay so let's type in a zero here and i got three apples gotcha okay what if i put a one here it would do the same thing before oranges and if i put two here bananas bananas but we don't want to hardcode a zero or one or a two out of all so i'll even give you this it's just on this one line there's this the variable that you created that on this first iteration is zero on its second it's one and a third is two do you know what that variable is in here okay so let's go through process of elimination okay okay is groceries itself a zero one or a two hold on guys i couldn't tell you guys what i know i'm like super nervous right now my brain is like frozen i'm not even thinking right now i know um how's he doing by the way guys super terrible he's doing great groceries just by itself is what what is groceries groceries is the array yes sir right okay so groceries is an array so groceries is not the number zero or one or two right right so it can't be groceries okay and therefore it can't be length right okay so what's another variable okay then it'll have to be i yes so try that and what did you get apples oranges bananas wow man wow so like all right i just got to take a pause man first of all guys disclaimer i wasn't ready no i'm kidding i'm kidding i'm learning a lot let's go you know these this is why these basics are so important to practice right because you can conceptually understand them right but if you don't do them on a regular basis it's so easy to forget what that is and what happens is when you don't have the building like if i want to teach you a more complex concept right if you haven't drilled this enough time it's going to be very difficult for you to understand a more some a complex concept understood that makes sense okay so like if i'm trying to teach you how functional programming works and you can turn this whole thing into one line of code using something called map do you know what i when we say this is the zeroth place first place second place do you know the term for that it starts with an i it's called index index okay zeroth index index first index right right right so really i here is your index i got you okay so you created this variable and you said let i equal zero so in the first loop i is zero which yeah in this case is going to be apples but i itself is just a number right it's literally zero well in the second loop what is i so first loop i is zero in the next loop i is i is groceries i is the number one the number one okay in the third loop i is the number two the number two okay so that's really what's happening here i see so the first time the loop goes it goes zero it prints out apples right then i becomes one one prints out oranges yep and then it becomes bananas after that okay my thought process right now is like so junked up man it's like i know this stuff but right now i'm like oh where's everything it's just gone right now yeah they're not the screen and everything's gone it's yeah i know i know you're like what is like it's almost feels like you never even coded before it feels like i've never even done it and i've seen it plenty of times but right now i'm just like yeah what what did you ask me to do that's what happens during interviews oh yeah that's the problem that happens with the interviews all the time people freeze it's almost like they kind of forget everything so the more times you can put yourself through in a situation like this the better yeah like my mind literally you're like creating an array i was like what's an array yeah exactly are you okay so let's create a function okay that adds two numbers and just returns them that's it so i should be able to give it like number one and number two for that function and then it just sums them up and returns let's say one plus two and then i guess i would say console dot log add okay so let's start off with the basics okay so here's the thing okay you have skills in a specific domain okay so when we spoke earlier you do shopify and you do stuff on ecommerce right right and so there you have more skills but the type of thing you're doing is you're taking existing code right and then you're making changes to it and you're making things work right it's very different than coding from scratch exactly okay so we're gonna have to develop these skills from the start okay so for example the first thing that i want it to come to your mind whenever you hear the word function you should start off by writing oh wait hold on function oh man see this is what i'm talking about my mind is just like okay right off on a break yeah bro function there we go [Laughter] man hold on so when we're calling this right you had the right hunch to add a parenthesis here because functions have they take in arguments right okay so your add function needs to have how many arguments that it takes i think it can take two in this case we're gonna give it two right a function can take as many arguments as you wanna give it you could literally give it a thousand arguments but here in this case we're just to give it two right okay you don't want to here you don't want to hard code anything okay uh because okay let's just say you did say two plus two and let's just say somehow it worked right your function whenever i call it would just return four what but what if i wanted you to add 20 and 50 together it would still just give me back four or something okay so we cannot hard code in here and we need to give it two arguments and those two arguments should be variables all right so here you could put a comma b and then you can do later a plus b yes return see now it comes back yes now it's coming back right um however i like to make my things verbose so they're easier to understand okay so you could do this way as well but whichever way it's fine so let's do add a comma b and then what are you gonna do um so let me just say it like this okay hint turn that line into code your code should not be more than one like on line 24 that's it you just get one line to write this okay um meaning that it doesn't it's not gonna be complicated it's not gonna have multiple lines right you don't need to set eight like look if you set a equal to one then if i give you your function okay like if i just call add one comma or let's say five comma two your function will not return seven right what your function will do it'll take five and set it to one set it to one here okay so that's what that will do and we don't want so i guess in this case i need to override i can put console.log a um plus b that's it yeah okay but instead of console.log i want you to return a plus b okay so let's do that okay so now let's go down and now i want you to console log this out and let's add up you know seven and ten and let's see what it gives us back okay so a few things here right your it's returning 17 so that's cool but are you calling your function here no you created no you're not calling your function here i need to cancel that log so you're giving it arguments okay so this is something you need to understand here you can't be adding both of the numbers oh okay your function takes two arguments arguments okay so you're doing what your function is supposed to do but let your function do that so you don't need to do this but you can give it to your function needs two inputs so let's give it two inputs so what would be the first input here hey okay it would be in this case so yeah here it's the variable a that's correct but you need to give it the hardcoded one here which is going to be the actual number which is seven okay so let's go seven seven comma comma ten yes okay and now it gives you back 17. okay so for you my diagnosis is this you need to start from scratch scratch yes it's going to hurt your ego no really because i i don't mind starting i don't mind um admitting when i don't know so we're good start learn the basics guys yes good so what i would uh prescribe to you is start from complete scratch you have so here's the thing right like you understand how arrays work you get the concept of indexing you conceptually understand how looping works there's a lot of conceptual things that you understand to me what's very clear is you're lacking a lot of practice you're not lacking necessarily like for example when i show you this you're like oh yeah i get it right but there's a difference between you getting it you being able to do it one is you're nervous i understand that but beyond that what's important is that you conceptually get this but you have to do in like a really high number of practices practice and that's where i would recommend to not look at online coding projects or building huge projects that's just to get your guys's attention that will make you a better coder that's just the truth like we make those fancy projects because we know everybody's gonna be like wow that's mindblowing wait is this live it's not live oh okay all right all right cool because that that's kind of what has to be like shaken up i'm like froze i'm thinking a thousand people are watching me what do i do you're not live okay okay let's go i'm over here holding my breath okay okay like so let's practice okay let's go and do another exercise okay and let's literally do this exact one okay so if i give you so make a function that doesn't even reverse anything that um i'll call it like let's just call it a spitter okay so make a function called spitter because it just spits out what you give it and um just return the string that i gave you okay so you could take in a let's just say it takes in a string as an input okay and um yeah and your function should just return that so i want you to go ahead and write that function right and we'll walk through that too how to break down any problem that i give you to in a second okay so now what i want you to do is to prove that it works i want you to call your function okay and i want you to console.log its result and i want you to give it the phrase um let's just say we give it david let's just say give it the word or name david oh you said console log it and give it the argument david give it the argument david yes let's let's go over even more basic okay okay because what i'm realizing is i want you to learn how to call a function first because i right now and i said call a function i want you to know what that essentially means okay okay so if i created a function and i called it quasi okay and it has no it's not taking in anything okay and uh it just prints out causey okay right in order for me to call this function how would i call this function just put um kazi at the bottom there okay when i put quasi at the bottom here let's see what happens i get nothing in the console log so what should i do so if it's not showing in the console what's happening is i'm not actually calling that function a function is not a variable okay if quasi was a variable like if i if i had something like let causey equals causey and i saved this all right let's go identification has already been declared so i'm i'm declaring it here okay let's just go quasi with two eyes i could call the quasi with two eyes and i would just console log its result in order to show it but that would say causey but if i call that function that i wrote this one here okay that doesn't call it right so in order to call the function you have to put this open close parenthesis so whenever you're calling a function always remember to put these parentheses you cannot call a function without them you have to put the parentheses now if your function is dependent on a thing inside of it then you have to give it that argument okay so for example like if i could give it any name and it gives me back that name right right so if i like let's say had this go you know take any name well what would be the argument i give it it takes in a name right and then what does it do it returns the name right and then when i'm calling it i just go give it a name david it goes here the function gets called it changes this to david it goes to line 38 runs this line and you get kazi then it goes to line 39 and it returns david right okay when i say that this function here takes in an argument this is what that means the function takes in something called name and i'm just giving it that name here right okay so first of all the few things that you were doing wrong with your spitter is that you were uh i think you call you did console log it's that was good okay then you did say spitter but you're not even calling your function here right okay so you have to call the function here and give it an argument okay so go ahead let's see how you would do that i have my function i have the splitter i have um this which is the equivalent of that right there yeah so then i could do you don't have to change your function right you just have to just on line 36 how do you call spitter there you go and did it return it right here yeah did it return it yeah it did because it's above the function that you wrote exactly so it did return it so it's good but the important thing for you to see here was that you functions you call them so you put these parentheses and then if they have an argument you must give it those arguments right if you call it without this it's gonna not work yeah it's gonna return undefined so you have to give it the argument does it matter what you call this variable here no no as long as you also call it the same thing here right so it's like spitter takes in a thing and returns a thing that's all nothing could be anything exactly okay what if i was like hey spitter thick takes in a thing and then just like adds buy to it instead of spitter takes anything and adds buy to it yup so it's like i would just do a return buy so now it's like causing buy right and then right right those things are there to make it easier for you to kind of speak to yourself in coding you know i can give you the technical phrasing as well and sometimes what you can do is you can turn it into something that's simple for you to understand it takes anything in technical terms it means your function has an argument right okay and it takes in one argument then returns the thing it takes that argument and returns that argument right right cool so now we wrote a function that literally just returns whatever you give it it's not super helpful but it can do some it it does something why this was helpful right now just for you is because it taught you or it at least reminded you of how to qualify see i feel like i don't know if other people can relate but i feel like up here yeah i understand everything that's going on yes because i've studied it i know what it is but then when i sit down to do it i can get it you know fifty percent of the time yeah fifty percent of the time they yeah if that makes sense 100 it does you can keep understanding and getting it right and that's the thing like i watch i watch a lot of chess okay so i watch magnus carlsen play chess all the time and he's the number one best player in the world and when i watch him play he plays so incredibly every move is on point it's perfection it's extremely well calculated and he makes it seem easy like it's water and i'm like wow this is awesome then i go to play a chess game and i'm like i'm going to play just as well as magnus carlsen and then all of a sudden i'm hanging pieces weird things are happening i'm hanging um a checkmate and i'm losing on the spot i'm like what the hell like i thought i would play exactly like carlson right and so the only difference between him and i is that he probably has like 10 or 20 years worth of more training just literally repetition skill building and so if even if you join pwj if you're watching the videos it's not the same as you doing it right and i want you to keep practicing doing it and never feel like you're better than the basics oh never that's why that's part of the thing that i told you earlier i haven't i i'm an empty cup i never feel like i know anything yeah no yeah that's good so you want to just keep practicing because people who put themselves above the basics this struggle forever so like keep practicing the basics again and again and again and again and again and that will make you really really dangerous and it's kind of crazy because man it's like i've seen this a thousand times i've seen yes a thousand times why can't i write a simple function have you done it a thousand times no that's the difference here's another thing i want you to do so let's make a new function and we'll call it reverser okay okay and what this function does is it takes in a thing and then it reverses it and then returns it okay okay so go ahead and write that function for me so i've never reversed anything javascript okay so very close the only difference with this is it reverses that thing and then returns it so but let's see if you can reverse a string okay so i'm not going to give you an array i'm going to give you a string so if i give you david okay could you reverse that and give me divad so you can look it up you can keep looking it up because you right now looked up how to reverse an array but i don't want you to reverse an array so what are you going to look for instead first a string so some of this stuff right might be trickier than other things but here they're giving you the solution it has 819 votes and it's simple enough right okay for example their code is saying what it's a function right it's called what reverse it takes in how many arguments one one so it's just like our so far we're just calling our argument thing they're calling it s yeah and then return and then we're just having it return this other thing so where they're saying s dot split ours would be s dot or is thing dot reverse exactly so you can pretty much copy paste that line oh no i want to type it out so thing yeah but it's not thing dot reverse dot join let's okay let's actually forget the split and join let's just write dot reverse can we write just dot reverse dot i don't think that will work but let's try it so let's try it let's see and i'll explain why if it doesn't work reverse and then it has the parentheses and i guess that's where i would put in my name not don't hardcode it because it'll always return okay so it'll be thing.reverse that's it return thing.reverse you're done oh okay return thing. okay yeah so because of how the code runs your return line won't run first it'll reverse the thing first and then return it okay cool so now call that and let's see if it does what we want it to do cool so it says reverse is not a function so here's why okay so let's go back here reverse is not a function that's made for strings this here is a string type okay reverse function is made for an array type so i'll give you an example okay if you're if you had an array like this okay and if i call dot reverse on this and i console log the result of that it reverses that thing you see what i'm saying i see what you're saying so it works on arrays it does not work on strings okay so the first thing we want to do is we want to take this string and turn it into an array but exactly like this one so a cool hack of doing that is i can say i can take david okay and go dot split and go just split it by like this okay and watch what happens okay i'll console log the result of this okay it literally took david and turned into an array and turn it into array right um this now i can actually reverse it so i can call dot reverse on this and now it's giving me the reverse of that okay and then the hack is to take it from that array and turn it back into a string again oh man you guys are crazy okay um so would that be that would be the dot join yes there we go so to write that here not join but that goes after that yeah that's right exactly and then i think that has to take parentheses with like that right yeah so is it giving you the right thing yes sir okay so now go to your function reverser and fix it fix line 49. so it will work for any name okay gotcha so in this case copy and paste thing let's let's make sure that we understand it though okay thing in this case corresponds to david david you understand that right so thing and dot what we're gonna take we're gonna take the string or the name and then what are we going to do to it let's go in order we're going to split it why are we going to split it because we need to turn it into an array beautiful so write split okay and we're going to split it by no spaces cool so that's fine right that's fine okay and then now we got that array now what are we going to do we're going to reverse it yes flip that thing and reverse it then we're going to dodge okay now call that function reverser and give it quasi and let's see if it returns like isaac boom that's sick right that's sick let's go and so now whatever you give it it will it will work okay that's the explanation behind that like one weird obfuscated line of code gotcha okay that's why data types are so important because if you know how to arrays work and strings work then you can mix and match even though you're like man it should just work it should be thing that reverse and works no so then you have to know how arrays work right so what data tabs would be booleans uh strings data types would be boolean strings arrays numbers exactly um i think that's it yeah i mean there's a bunch more like objects for example yeah objects okay and so it's really important to get a grasp on them and see what methods you can use right right be being familiar with them cool let's go and take it to another level but first we want to i want to make sure that you understand how if else conditional statements work right okay let's go so let's write let quasi equals um you know hungary so here's a here's the if else that i want if qazi is hungry print out hungry or food else print out work okay another important thing okay and and interviewers will give you bonus points for this and also make you really jacked at coding okay whenever you right now i'm doing you a favor by turning my words into pseudocode you understand what pseudocode means what i want you to do is in the future i want you to get in the habit of you writing the pseudo code i'm going to say to you and it's going to be your job to in very clear terms get it down that helps with the problem solving right yes because literally you just have to turn it from english to french aka english to code got you hey this is gonna be your sixth language you're gonna learn man paulie glut if um since your name is a string yeah if your name is a string kazi kazee equals hungary console.log food else console.log work but first i believe we have to let kazu kazi i think this goes also in the curly brackets if i'm not mistaken hold on so let's just walk through this we're going to remove all this because that you're just writing for no reason okay this was looking pretty good to me so if causey is hungry uh but here's the only thing about this okay you're not giving it a variable causey you're giving it a string quasi and you're saying that if string quasi is the same as string hungry will that ever be true yes let me ask you this will five ever equal eight no no no no no okay so you are giving it a string okay you're not do you understand the difference between string and a variable uhhuh yeah yeah strings are strings are like this they're like names and things like that so this is like hardcoded quasi this is not the variable causing online 58. okay this line will never see i got see i got you i got you oh i believe so let's let's um because kazi has been declared it's erroring out because we made a function called quasi so we'll just call it like if causey2 okay let's just do that so go ahead so i would say if i would take this out uhhuh and then i would put no u as he two equals hungary console.log okay i didn't see we i hadn't declared that up there exactly okay nice work damn sick so conditionals you did a good job with now what if on line 61 quasi 2 was not hungry instead quasi 2 was you know focused perfect and it would consol log it would log work not return just because functions returns are only in functions gotcha and here we have written no function what you were trying to do earlier where you started putting random curly braces here and here i don't know if you remember yeah i remember yeah we're trying to wrap this in correlation right because this is where you're combining concepts with this because you've probably seen this written in a function right and if you were to wrap this up in a function then you would have to okay i got you now actually let's do that so let's take it from this to instead it takes in a thing and if that thing is hungry then it says food or let's say it takes in a person and if that person is hungry then it's uh says food otherwise it says work i want you to turn this into a function and basically i should be able to go person hungry or i should be able to call it like person you know focus whatever okay okay or maybe status okay maybe status is a better name for it so i want to be able to call your function like this got you so i want you to turn this into a function okay so i would say function status and then there it would say um can we call it a i'm assuming that goes like that and then we can put that down there and i think return you don't need to do return for this okay so yeah you could have changed line 68 and line 70 to be returned but console log in this case is fine okay it's fine no no no you don't have to are you calling this now is that what you're trying to do when it comes to this function i think you're done you don't need to write anything more inside of this function okay i was gonna put like return blah blah blah console.log blah blah blah and see like how we did it earlier okay so you want to call your function is that what you're saying that's what i was gonna do yeah yeah but you can't call your functions inside from inside of the function it has to be outside okay yeah so like you want to get outside of it so you can call it otherwise you'll run into a recursive loop and recursion is a whole different thing have you ever learned about recursion i've heard about it and i heard that it's difficult to stop those it's like mindblowing dude recursion is the most fascinating and the coolest thing ever yeah so if you if you made this recursive you would essentially make it an infinite loop so for example if you in here set status something what will happen is your function will run it'll run this line this line this line and then i'll go down here and then it'll call the function status so i'll go up here then run all of this then i'll call status again okay and it'll just run forever i see and i heard that's bad for your browser bad for everything yeah it'll crash yeah now you can call your function yeah so i would say console.log um status and i believe right here would be okay so we give it hungry and let's see what it returned oh not status so here it would be a yes food okay perfect nice work and now instead of hungry what if i gave it focused if you gave it focused it would return work okay so let's try it exactly you can see the work right here and you could you could change these console logs or return statements as well okay and that what that would look like is you could do return okay i'm hungry or something yeah you could say return food or for this you could say returned what sleepy no i'm i'm just turning this cic i see right so these are the equivalent these are equivalent okay but return is slightly different than console logging and in functions generally you want things to return return console logging you generally want to do here great i mean we're making a lot of progress right we went from functions calling functions passing in arguments returning them how to call them arrays also we added conditional statements and then we learned we even did how to turn it into a function okay so you're doing a really good job one thing now i want to do is let's take this up a notch okay let's kick this up a notch i'm going to tell you it's going to be your job to write this down in pseudocode first okay and then you're going to try to turn it into a function okay i got you so i'm going to give you a string and you are going to find out if that string is a palindrome or not and based on that you're going to return it to true or false if the string is a palindrome or not yes okay a palindrome means for example a word like race car race car written forwards is the same as written backwards backwards so if i give you race car you will return race car wrong you will only return true or false okay got you got you got you i gave you race car you will return you can only return one of those oh it would be true yes you'll return true if i gave you baseball you will return false false got it got it that's what your function needs to be able to do okay so first i want you to write the pseudo code for what i just said and make sure that you understand the question clearly before you start writing any code so if i understand correctly if string is a how do you spell paddling yeah so it has it's palin with an end and then jerome drome i believe oh palindrome yeah if string is a palindrome return true exactly and if not return false what's another way of saying if not else yes else return false cool so you said oh also you said create a function right yes okay well i guess i can just keep that in my mind um so i would say function pattern palindrome and then palindrome function um a i guess um and then i would say um so let's make your variables better okay so i'm gonna give you generally i'm gonna give you words okay so your argument should be what instead of a um can i say true or true comma false let me say this again the input right i'm gonna give you words words so you should call your input words word okay because i'm going to give you one word okay one word so make it as clear as possible in english so when somebody's reading your code they can understand it too so word is perfect it's great it's literally great okay because then it's easy it's descriptive when you're using your stuff so it's easy to read your code now okay it's like oh it's a function is called palindrome and it takes in a word oh let me give your palindrome a word and see what happens so so i guess how would i be able to write a function that knows that my word is a palindrome yeah that's a good question um that's gonna have to be on google no no no no no no no no so this is why we did a lot of other things we did so you could have all the building blocks and all the information all the information you need is already okay so before you start going through it let's think it through okay this is where a lot of software development like you become a software developer i want you to think this through okay so what does let's start breaking down what palindrome means right right if i have the word um qazi what does a pal what would it be if it was reversed it would spell out the same thing but just in reverse so causey reverses what is izak izak are they the same word no no so it's uh not a penalty okay right so what's the so let's go through it right what's the algorithm algorithm that we're saying out loud okay let's write it down okay so let's write it down step by step if word is causey then what should i do to check it what are we doing we need to check if it's a palindrome yeah but let's break it down even more so exactly you're right so if we're this quasi um i guess i would say if word is qazi yeah so let's take the word david right okay is david a palindrome no how do you know because it's not spelled the same way backwards so there's a step in there that you're not writing down here which is you're making it backwards okay so then okay so then we would do the reverse thing that we did exactly okay okay if kazi equals kazi in reverse yes write that down that's really important write that pseudo code down that's really important great so if word is quasi then um write down exactly how you said it okay so forget about what i wrote you did a great job of saying it so i done exactly what you said so i said if kazi is equal is equal to return true so kaz is always going to be equal to khasi right so are you so like for example if if i take david oh hold on if kazi i guess in this case would be equal to izak right right i z a q then return true exactly and then we don't use if we use else return false got it right exactly but what's another way of saying isa here so we can make it into a recipe because right now it's not a recipe it's like qazi is izak but what did we say if david you said this earlier you said so when i check david what am i checking it against you're checking it against my name in reverse right so you should write that down here instead of ezok another way of saying izak is like it's causey and reverse right so maybe write that down there if cos is equal to reverse of causey right or causey reverse or whatever you want to say reverse return true okay got it that's your algorithm okay so when we say data structures and algorithms and all of that this is a recipe okay this is your recipe that you're going to give to your function okay and if you can train your function to do this it will do this correctly every single time every single time okay so so now essentially turn that into code okay so then let's start from the top yeah i want to write a function which is right there it's already written okay but you can practice it again if you want that's fine it's okay so it's already here so then in that function i want to all right man we're just going to go developer mode where's some copy and paste action at uh so it would basically be something like this right so here's the thing because you so i'm gonna teach you something new right now the power of calling your functions so now we're gonna build on some we're gonna build on another thing which is you don't need to copy and paste that code you can actually call the function you created earlier with what i'm doing now yeah so let me like to give you an example right then i would i have to change that so i would i have to change that to be thing so that it matches the so for example if causing is equal to wow that's cool right okay yeah you see what i'm saying so you're calling your other function and now you don't even care how it works anymore you just let it do its thing split it reverse join whatever right split it then reverse it like you don't care about that you're just gonna you just call the function see what i'm saying i see what you're saying okay you know and yeah and you can keep generalizing this more and more because you still have it hard coded right it says if causey but another way of writing is if word is equal to reverse kazi reverser reverser what don't hardcode qazi forget about kazi we're changing kazi with word right so if the word that i give you is equal to reverser what um not quasi but it's right there word okay so if the word is the same as the reverse of the word return true true else return false does this make sense it makes sense i i understand the concept i'm um just thinking about how i would put it into code cool so we're gonna work on that in a second okay we're gonna work on in a second but when you do algorithms what i want you to start doing in your pseudocode is start off by writing hard code meaning like do you understand what i mean when i say hard code yeah right we're hard coding kazi everywhere but you're not gonna get cause you're gonna get something more general so we make a more general version of it which is word in this case and we know it corresponds with our word right there right so we're very close to turning this into actual code now okay so let's go ahead and do that how would we write in code this line 91 here how will we write in code the line 91 so i would say just go literally step by step for everything that you see there okay so i would go if and then i'll put parentheses so let's start with that okay if parentheses and then i would say i'm not sure if i can put your name here but you're not going to put any names here remember this is a function you're not hard coding in here okay okay so i would put this reverser wrong okay look read line 91 reverser comes later oh so if word my bad word is equal to reverser word is that correct okay now what are you going to do if it is return true so let's do that return just remember for the if statements to put squigglies in the correct places right return true okay otherwise what are we gonna do on this line right here i'm gonna put else yeah and then we'll put other squiggly lines and then put return false okay so now in writing when you look at it does it look correct does it match the algorithm we wrote yeah it does it looks like what we just said yeah okay and look at this normally here you would need to write this long line of code to reverses right but you're using your own function you created within this function my mind is blown that's cool right yeah okay so now i want you to call this and let's see if it works okay so let's call palindrome on i want you to call palindrome on two different strings one is white house and two is race car okay what do you expect it to say if you wrote white house what do you expect your function to return false got it so let's try it let's see what it says so then i'll say console.log and then i would put in there pat lynn drong and then i guess i can put word right there no now you're gonna give it the actual word yeah white house and walk me through the algorithm before you continue walk me through the algorithm so when i go line 92 okay what happens where do i go once i hit line 92 where does my code go next to line what to line um 88 no line 84 984 so okay so kicks so once you console log this it goes to the top because you just called your function right and it checks to see if the word is equal give me hold one second does a console log like is the first thing that happened so within line 92 okay what's the first part that runs i think that it runs from this way to that way yeah so it's not console.log right it's checking to see if the it it's not checking anything it's calling this function call in the function that's all that's happening okay cool okay and then whatever that function simplifies to true or false right will sit inside of this console that makes sense you're with me so far so when i call this function where do i go you go to line 84. beautiful then walk me through what happens then line 85 walk me through what happens then it checks to see if the word is equal and it's not a word anymore what is it if uh the string is equal what string white house so if white house is equal to her in reverse of what of white house of white house then it's going to return true else is going to return false and in this case it's going to return false because it's not a palindrome right so this here would turn to what this this line right here would resolve to what true or false it will resolve too fast this will results to false so once this resolves to false this will run does that make sense makes sense cool cool okay now i want you to do race car and what do you predict it will return it will return true okay let's try it console.log and then once you're done with that explain each line okay okay it returns true hey let's go let's go that's cool that was something new um okay so in this case um first that's crazy to work right crazy that worked it basically did well i guess let me try to explain it um so that i can make sure that i understand also so what happened is i called this function palindrome uhhuh it went to the top to line 84. yeah it checked to see if the word was equal to the word in reverse and and now when i'm asking you don't speak in general anymore okay so you cannot say word anymore i want you because i'm having to go through line by line at that point it's not word anymore it's something specific so what will we call it it's race car okay so i want you to say exactly what it is then it checks if in this case word which is equal to race car race car race car in reverse yes if so it returns true and just real quick right to be even more technical when it it calls the function reverse so it doesn't just go to line 86 where does it go when it calls this function reverser it goes to um the first function that's at the top exactly okay see what's happening here i for i forgot about that function until i was like let's copy and paste right okay so it goes to this function and then it goes take uh thing becomes what thing becomes uh race car race car it reverses race car right turns into the it turns it into the i'm i'm assuming that it turns it into the array then it reverses it then it joins it exactly okay so it returns a reverse of the word race car right right and then we come back to this line here and so is race car equal to race car true true so then this part here becomes true true so when that happens does it return the else part or does it return it doesn't have to go to the else no it doesn't right and then it does what it will show true in the console yeah amazing i feel like i actually learned more than watching a thousand youtube videos i'm being honest because i i see it up here it's here i know what i'm doing up here yeah but due to the fact of even turning my words into an algorithm to do that was quite difficult yes like you get stuck in tutorial hell and you can understand what these people are doing but when you go to do it yourself it's kind of like you know what i mean everything all the stuff that you you know you've seen you know you've practiced yeah kind of goes away yes when you're doing it yourself because it's almost like now you're in the deep end exactly you have to do it so yeah my brain was exercised today beautiful beautiful man that makes me that makes me really really happy to hear that's awesome i'm glad that you were able to get value from this and learn amazing any parting words you want to share or maybe like the biggest thing that the biggest value or takeaway for you from this other than just making sure that you have the basics down maybe get off youtube and sit down and do it that's the i mean kazi kazu's channel is great but actually putting this into practice yourself is is is great this is amazing yeah beautiful amazing thank you for coming out brother thank you man i like i said i learned so much more sitting down with you doing it then watching a thousand youtube videos so and you explained everything well and clear and even though i'm nervous here and i'm doing it with you i'm still trying to stay with you and make sure that i understand the concept yeah and i understand how to do it so yeah man this is doesn't have value on it this was amazing okay amazing thank you bro uh appreciate you for coming in um and what's crazy is that he was you were also at the javascript tour that we did in person which was really cool we were glad to have you there so there you guys go thank you guys so much for watching we appreciate you if you enjoyed it or you got value out of it please share an insight or a comment whatever also it would really help get this video out everywhere if you smash the like button yes it really helped out um so yeah go ahead do that that'd be amazing subscribe to the channel you'll learn coding and become a developer and with that said we love your beautiful face this is kazi and david and we'll see you in the next video you