00:16 - thank you
00:18 - [Music]
00:34 - in this video you will learn the
00:36 - fundamentals of the Godot gaming engine
00:38 - we will start with the program setup and
00:40 - its key Concepts from there we will
00:42 - cover a broad range of topics like Tire
00:45 - Maps animation players lights particle
00:47 - effects shaders and user interfaces we
00:51 - will also cover more advanced topics
00:52 - like skeleton animations and pathfinding
00:55 - if none of these words mean anything to
00:57 - you don't worry I'm going to explain
00:58 - everything from scratch either way by
01:01 - the end of the video you should have a
01:03 - strong understanding of how to create
01:04 - basically any 2D game in Godot and you
01:07 - will also have a really good foundation
01:09 - to start with 3D games before we begin a
01:12 - huge shout out to the sponsor of this
01:14 - video not pass business when making a
01:16 - game you will end up with a lot of data
01:19 - and backing all of that up is a
01:21 - nightmare you want to access your data
01:23 - from anywhere from any operating system
01:25 - it should be convenient and it should be
01:27 - secure both from hackers and from your
01:30 - house burning down
01:31 - especially security is a major concern
01:34 - having my accounts hacked would be a
01:36 - disaster for me and if it can happen to
01:38 - a large organization like city project
01:39 - red or Linus Tech tips it could happen
01:41 - to me it could happen to you or it could
01:44 - happen to your company
01:45 - not past business is an excellent
01:47 - solution for all of that it safely
01:49 - stores your passport in one accessible
01:51 - location and even enters your login
01:53 - credentials for you this makes it super
01:55 - easy to save your game projects both on
01:57 - GitHub and Google Drive and have access
01:59 - to them everywhere in the world it even
02:02 - lets you identify weak passwords and it
02:04 - checks if any of your existing passwords
02:06 - has been leaked online on top of that
02:09 - you can also set up biometric
02:11 - identification and use multi-factor
02:13 - authentification
02:15 - notepass business also works with
02:17 - unlimited passports including Wi-Fi
02:19 - credentials and credit cards so even for
02:21 - things Beyond work it can be incredibly
02:23 - useful
02:24 - if you want to sleep peacefully at night
02:26 - and not worry about your passwords check
02:28 - out notepass business in the description
02:30 - and the link comment
02:31 - if you go to notepass.com clearcode you
02:35 - will get a free month of trial for an
02:36 - amazing password manager and also help
02:38 - me make more videos so definitely check
02:41 - it out
02:42 - all right let's get started first of all
02:44 - what is Kudo and how does it help you
02:46 - make a game
02:47 - Fido is a game engine which means it is
02:50 - an app that lets you display images play
02:52 - sounds capture user input and stuff like
02:54 - that the dough can do even more advanced
02:56 - things like physics calculations
02:58 - pathfinding skeleton animations and
03:01 - networking for multiplayer games all you
03:03 - have to do is to combine the various
03:05 - Concepts and then create your game
03:07 - this could either be a 2d or a 3D game
03:10 - Godot supports both other game engines
03:13 - you may have heard of are unity and
03:15 - unreal there are hundreds of engines But
03:17 - ultimately they all do basically the
03:19 - same thing
03:20 - one major advantage of Godot is that it
03:22 - is entirely free and Community developed
03:25 - you never have to pay for anything you
03:27 - don't have to sign away your soul in
03:29 - some legal text you don't even have to
03:31 - create an account all you have to do is
03:33 - go to godotengine.com and click on
03:35 - download latest then you can select a
03:38 - version that fits your operating system
03:39 - although Godot will likely detect the
03:41 - right version for you on the website so
03:43 - just click on Godot engine and you
03:45 - should be good with that you are
03:47 - downloading a zip file and if you
03:49 - extract that you get two files one is
03:51 - Godot itself the other would open a
03:54 - console
03:54 - you can use the latter one for debugging
03:57 - but I would just ignore it so I'll just
03:59 - click on Godot and you get the launcher
04:01 - in the main panel you would see the
04:03 - projects you have created in the past at
04:05 - the moment it is empty though since we
04:06 - haven't done that yet on the right you
04:09 - can create a new project or import an
04:11 - existing one I want to create a new
04:13 - project that will open the dialog where
04:15 - you can specify a project name and a
04:17 - folder I will call the project shooter
04:19 - and for the folder I click on browse it
04:22 - opens documents by default and you want
04:24 - to create a folder in there while making
04:27 - the game we're going to create a lot of
04:29 - files and you want to keep things
04:31 - organized
04:32 - we can aimed for the shooter as well and
04:35 - then select current folder after that
04:38 - you have to choose a renderer this will
04:40 - determine how Godot renders your game
04:42 - when it is run
04:44 - mobile is the default and it works for
04:46 - desktop and mobile games the name is
04:49 - slightly misleading this mode can also
04:51 - display 3D Graphics but it's a bit more
04:53 - limited for a 2d game though this is
04:56 - perfectly fine forward plus is for
04:58 - really pretty 3D games and compatibility
05:01 - is useful if you want to support really
05:03 - old devices or make browser games
05:05 - now for the purposes of this tutorial it
05:08 - doesn't matter which one you choose the
05:10 - dough is going to be of the same no
05:11 - matter what you choose and also later on
05:14 - you can change your selection for the
05:16 - purposes of this tutorial I will go with
05:18 - mobile but you can choose whatever you
05:20 - want it really does not matter you can
05:22 - also use Version Control but I'm going
05:24 - to ignore that one that finishes the
05:26 - setup now click on Create and edit
05:29 - this should open the editor to
05:31 - understand what you see we need to cover
05:33 - the most fundamental concepts of Godot
05:36 - notes and scenes
05:38 - nodes are the most basic building blocks
05:41 - a node could be an image a sound it
05:43 - could also be a timer a path a skeleton
05:45 - an area or a lot of other things there
05:48 - are hundreds of nodes and you basically
05:51 - combine them to create various parts of
05:52 - your game for example here is a simple
05:55 - Scout anime that we are going to create
05:57 - on the left you can see the nodes that
06:00 - create this character
06:01 - Sprite 2D is just an image and this one
06:04 - contains the actual image of the scout
06:07 - there's also an attack area we have two
06:09 - timers and a sound a place when the
06:11 - Scout was hit there are a couple more
06:14 - notes but don't worry about those for
06:16 - now the only thing that is important is
06:18 - that the Scout is consisting of multiple
06:20 - nodes Each of which does a particular
06:22 - thing like displaying an image or
06:24 - playing a sound or an area where we can
06:27 - check if another object has entered on
06:29 - top of that all of these nodes have
06:31 - properties that you can manipulate you
06:33 - can see all of that in the inspector on
06:35 - the right for example with the Sprite to
06:37 - deselected I could go to transform and
06:40 - then change the position the scale and
06:42 - the rotation we will use all of that in
06:45 - a lot of detail later on and that is
06:47 - basically all you have to know for the
06:49 - basics of notes the other important
06:51 - concept is a scene in this one there's
06:54 - two major things number one it organizes
06:57 - nodes and number two it displays them
06:59 - you can think of it as a canvas and a
07:02 - folder basically the main panel you see
07:05 - is the currently open scene this can
07:07 - either be 2D or a 3D and it displays the
07:10 - notes that you put inside of it meaning
07:12 - it contains and it organizes the nodes
07:15 - and it displays them what is really
07:17 - important to understand as well is that
07:19 - you can place a scene inside of another
07:22 - scene that way you combine notes into
07:24 - logical objects for example here we have
07:27 - to scout again and in the middle of the
07:29 - editor the big panel is the Scout scene
07:32 - besides that we can have other scenes
07:34 - for example I have a larger level called
07:37 - outside this is another scene that gets
07:40 - significantly more complex although if
07:43 - you zoom in you can see that we have
07:45 - multiple instances of the Scout scene in
07:47 - the outside level scene there is a lot
07:50 - more going on in here but don't worry
07:52 - about that I will go for all of that in
07:54 - a lot of detail later on for now all you
07:57 - really have to understand is that notes
07:59 - are d basic building blocks
08:01 - and you place these notes in scenes to
08:03 - organize them
08:05 - on top of that scenes can be placed in
08:07 - other scenes to organize the entire game
08:09 - a bit better that's basically it and it
08:12 - covers the majority of godot's UI so
08:15 - just as a recap we have the currently
08:17 - open scene in the center then on the
08:19 - left we have all of the notes inside of
08:21 - that scene and on the right you have the
08:22 - inspector for the properties of the
08:24 - nodes the last major part is the file
08:27 - system you can see that in the bottom
08:29 - left
08:30 - this displays your files and you can
08:32 - also use it to import other assets
08:35 - I actually want to do that if you look
08:37 - at the video description you will find a
08:39 - link to the resources that will lead you
08:41 - to a page where you can download the
08:43 - full game and the resources which is
08:45 - what I want to do so I want to download
08:46 - the zip file once you have finished the
08:49 - download you want to go back to Godot
08:50 - and there is the file which I want to
08:53 - extract also on downloads
08:57 - this is going to take a second
09:01 - then you have the folder in there you
09:04 - want to go to resources and there you
09:06 - have graphics and audio
09:08 - to import them you just have to drag the
09:10 - file into Godot like so
09:14 - thank you is going to import for a
09:15 - second
09:17 - and then you have all of the art assets
09:19 - so in there we have a ton of stuff at
09:22 - this point you could also import the
09:24 - audio folder although I am going to do
09:27 - that much later because for now we don't
09:29 - really need it
09:30 - finally at the top you can see a few
09:32 - more options although those aren't too
09:35 - important for now except for one
09:38 - by default Godot has a bluish tint which
09:41 - I find really distracting to change it
09:43 - go to editor and then editor settings
09:46 - this opens a new dialog where you can
09:48 - update the theme I will be using the
09:50 - gray theme which is much more neutral
09:52 - this only changes the color though if
09:55 - you like the default or want other
09:56 - changes just select what you like
09:59 - that makes the editor much more pleasing
10:01 - to look at now that we have covered the
10:04 - basics I want to actually create a
10:06 - couple of scenes and nodes specifically
10:09 - I want to create two scenes and a bunch
10:11 - of notes most importantly I want to
10:14 - create a level scene for now this one is
10:17 - only going to contain some images simply
10:19 - because that's the easiest thing to add
10:22 - besides that I also want to create a
10:24 - player scene this one also is just going
10:27 - to be a single picture for now
10:30 - finally the last thing I want to do is
10:33 - to put the player scene inside of the
10:35 - level scene that way we can add a lot of
10:38 - stuff later on to the player but still
10:40 - see the player itself inside of the
10:42 - level makes the organization much better
10:44 - but for all of this let's actually
10:47 - create some basic things in Godot here
10:49 - we are back in the editor and since I
10:51 - want to create a 2d game I want to work
10:53 - in a 2d workspace we can select the
10:56 - different workspaces at the top I want
10:59 - to work inside of 2D
11:01 - and now we can see a 2d workspace let me
11:05 - zoom out a tiny bit all of the gray area
11:07 - that you can see is the workspace
11:10 - although what you want to be aware of is
11:12 - that there is a blue rectangle it's kind
11:15 - of hard to see on video but if you have
11:17 - go to open this one is quite easy to see
11:20 - this blue area is what's going to be
11:23 - visible to the player this will
11:25 - effectively become the game window in
11:27 - just a bit or well it already is but
11:29 - this part is going to be visible all of
11:32 - the stuff you can see right now is a
11:34 - scene this scene at the moment doesn't
11:36 - have a name which means at the tab on
11:39 - top you can see empty to give this scene
11:42 - a name you have to save it something we
11:44 - are going to do in just a second but
11:46 - right now we can't because in order to
11:48 - save a scene we need to have some notes
11:51 - inside the notes we can get from the
11:53 - panel on the left
11:55 - we can choose to create a 2d scene a 3D
11:59 - scene a user interface or other node if
12:02 - I click on other node you can see all of
12:05 - the available nodes inside of Godot and
12:07 - there are quite a few for example inside
12:10 - of node 2D I can expand everything and
12:13 - see all of the available nodes
12:15 - now I will cover most of them throughout
12:18 - this tutorial but for now all of this is
12:21 - going to get way too advanced so I'm
12:23 - going to click on cancel instead I
12:26 - simply want to create a 2d scene
12:28 - this is going to create one node in node
12:32 - 2D this would be one of the simplest
12:34 - notes you can create in Godot
12:36 - effectively it is literally just a point
12:39 - in a 2d space you can actually see it
12:42 - already if you look at the canvas
12:45 - there's this Red Dot and if I hover over
12:47 - it you can see node 2D but this is
12:50 - literally what it is
12:51 - it's just well a Red Dot
12:54 - I can illustrate this a bit more because
12:56 - if you look on the right we have
12:58 - transform then we can set the position
13:00 - the rotation the scale and the skew of
13:03 - this point rotation is going to be
13:04 - really easy to see if I rotate the point
13:06 - we get a rotated Point although the
13:10 - player wouldn't see any of this this
13:12 - point is only visible in the editor
13:15 - and you might be asking how is this
13:17 - helping for a game and the answer is not
13:20 - very much at least in terms of
13:22 - visibility in no 2D largely is used for
13:25 - organization so you would add other
13:27 - nodes as children to this node 2D to
13:29 - organize your game as a matter of fact I
13:32 - want to rename this node 2D right away
13:35 - I think level is going to be a much
13:38 - better name
13:39 - now that we have that we have one scene
13:41 - with one note inside of it and this
13:44 - scene I now want to save this I can do
13:47 - either with Ctrl or command s or by
13:49 - going to scene and save scene
13:51 - at the moment we only have the graphics
13:54 - folder we imported earlier besides that
13:56 - I want to create another folder that I'm
13:58 - going to call scenes all in lowercase
14:01 - letters
14:02 - inside of this scenes folder I want to
14:05 - create another folder I call this one
14:07 - levels simply because later on we are
14:11 - going to have multiple of them
14:12 - inside of this levels folder I am going
14:15 - to save this scene and you can already
14:17 - tell that we have
14:19 - level.tscn Godot always chooses the name
14:22 - of the first node of the scene which
14:24 - means in my case the first note that we
14:27 - added to the sinus code level and this
14:29 - is going to be the name that we get by
14:31 - default and this is the one you probably
14:33 - want to use as well so I want to save
14:35 - that
14:36 - and now we have some minor changes the
14:39 - most important change is that we now
14:41 - have a tab called level this is the
14:44 - scene inside of this scene we have one
14:46 - note in node 2D called level this node
14:50 - 2D doesn't do very much right now it is
14:52 - literally just this point
14:55 - we're going to do something more useful
14:56 - in just a bit besides that
14:59 - we also have a new folder in our file
15:01 - system we have scenes that we have
15:04 - levels and then we have level.tscn
15:06 - although let me minimize all of this
15:08 - because we don't need it right now not
15:10 - if we have a basic setup I want to add a
15:13 - picture to this scene for that I will
15:15 - need another node to add another node I
15:18 - have to go either to this plus symbol or
15:21 - press Ctrl or command and a
15:24 - in either case you are going to find
15:26 - this dialog again
15:28 - inside of it you can simply select any
15:31 - kind of node like multiplayer spawner
15:33 - but this is not what I want so let me
15:35 - undo all of this with controller command
15:37 - Z
15:38 - instead I want to look for a specific
15:41 - node and since there are so many most of
15:44 - the time when you add new nodes you're
15:46 - using the search function I want to look
15:48 - for a Sprite
15:50 - or more specifically a Sprite 2D this is
15:54 - a node that can display an image
15:56 - so if I double click on it we have now
15:59 - added another node
16:01 - and before I continue something you do
16:03 - want to pay attention to is we have our
16:05 - level node this is the parent and this
16:09 - parent has a child which is the Sprite
16:11 - 2D
16:12 - this parent-child relationship is really
16:15 - important I'll cover more of it in just
16:17 - a bit but now just keep in mind we have
16:19 - a parent and a child and the parent
16:21 - influences the child
16:23 - that being said we still cannot see any
16:26 - kind of image inside of the scene for
16:29 - that we have to look on the right
16:30 - because there we have the inspector
16:32 - we still can transform the image so like
16:36 - with no 2D we have position rotation
16:37 - scale and skew but we don't care about
16:39 - any of them
16:41 - instead what we care about are the
16:43 - additional options we have texture
16:45 - offset animation and region texture is
16:48 - what we have to add to get a picture and
16:50 - if you click on the drop down you can
16:52 - add a whole bunch of stuff
16:55 - although I don't care about that because
16:57 - there's an easier way to add an image
16:59 - all you have to do is look at the file
17:01 - system
17:02 - for example in there I have icon.svg
17:05 - this you have an every Godot project by
17:08 - default and this image I simply want to
17:11 - drag into the texture and you can see
17:13 - there's this blue frame around the field
17:15 - so if I drop it in there we now have an
17:18 - image
17:19 - this is the Godot logo
17:23 - and we can see it because we have a
17:25 - Sprite 2D this image we can now
17:28 - influence for example I can simply drag
17:30 - it with my mouse and move it around and
17:32 - let me zoom out a tiny bit so I can see
17:34 - the entire game window I can simply move
17:38 - this image around and place it in a
17:41 - certain position
17:42 - besides that if you look at the
17:45 - inspector we have a few more things
17:47 - there's offset and then there for
17:49 - example we could use flip age that's not
17:51 - visible but you can use flip V for flip
17:54 - vertical
17:56 - you can also give it an offset but I
17:59 - don't really care about any of these
18:00 - options besides that we have an
18:02 - animation but that's a tiny bit more
18:03 - advanced so I'm going to ignore it and
18:05 - we have a region if you enable that
18:09 - the image disappears however what you
18:11 - can also do is edit region then you get
18:14 - another dialog and then here you can
18:16 - select one region of the image so let me
18:19 - just cut out a part of it and then click
18:21 - on close and now you can see some
18:23 - slightly weird Behavior don't worry
18:26 - about this too much because later on
18:28 - we're going to work with this in more
18:29 - detail and fix these weird artifacts for
18:31 - now I am simply going to disable the
18:34 - region and then we are back to the basic
18:36 - image
18:37 - finally you can use transform and we
18:40 - could update the position we can change
18:42 - the rotation we could scale all of this
18:45 - or we could skew it
18:47 - like so
18:48 - and you can also see inside of the
18:50 - inspector whenever we change the default
18:52 - value you can reset it by clicking on
18:54 - the return arrow thingy there we go with
18:58 - that we have added one image before we
19:01 - continue There are two important
19:02 - Concepts that I want to cover the first
19:04 - one is the coordinate system of the
19:06 - window that we are working in right now
19:08 - the window has a position the one you
19:11 - can see inside of the inspector we have
19:13 - X of 629 and Y of 303 this means that we
19:20 - are 629 pixel from the left and we are
19:25 - 303 pixels from the top the point we're
19:28 - talking about is the center of the note
19:30 - by the way this position can be a bit
19:33 - confusing basically what is happening is
19:36 - that we are creating a coordinate system
19:38 - with the origin point in the top left
19:40 - this point would be 0 for x and 0 for y
19:45 - if you want to place any element further
19:47 - to the right you have to increase X
19:50 - however if you want to move an element
19:52 - down you also have to increase y if you
19:57 - are used to coordinate systems from high
19:59 - school where the origin point is in the
20:02 - bottom left this might be a bit
20:03 - confusing because what you have learned
20:06 - is that if you want to go to the right
20:07 - you have to increase X
20:10 - and if you want to go up you have to
20:12 - increase y
20:14 - inside of Godot and most game engines Y
20:18 - is going to be inverted meaning if you
20:21 - want to go up you have to decrease y if
20:23 - you want to go down you have to increase
20:24 - y
20:25 - most game engines in fact most computer
20:28 - Graphics work like that so you kind of
20:31 - have to get used to it it will take you
20:33 - some time but eventually this will
20:35 - become natural and just to demonstrate
20:37 - let's move around this image a bit right
20:40 - now the X position is 629 if I change
20:42 - this to 500 we are moving a bit to the
20:45 - left
20:46 - if I change the Y part to 200 so we are
20:50 - going from 300 to 200 and I click enter
20:53 - we are moving up we have decreased Y and
20:56 - because of that we have moved up this
20:58 - was the first important concept now we
21:00 - have a coordinate system that we can
21:02 - work in besides that we have to talk
21:05 - about the relationship between the level
21:07 - and the Sprite 2D ever right now is the
21:10 - parent which effectively means if you're
21:13 - changing the level you would also affect
21:15 - the Sprite 2D image for example if I
21:18 - change the rotation of the level
21:21 - we are also rotating the image let me
21:25 - zoom out a tiny bit if I rotate this
21:28 - level we are rotating all of its
21:30 - children however if I simply click on
21:34 - spriter D and rotate this one we are
21:37 - only rotating the image itself
21:40 - this would also work with other
21:41 - properties for example if I click on
21:44 - level again I can change the position to
21:47 - 200 and 300 and now the level node is on
21:52 - this position and relative to that we
21:55 - have the Sprite Which means inside of
21:57 - the Sprite if I change the position back
21:59 - to 0 and 0 we are at the point of the
22:03 - level 2D node
22:04 - the interaction between any of these
22:07 - nodes is super important to understand
22:09 - we always have a parent and a child
22:12 - and whatever happens to the parent is
22:14 - also going to be applied to the child
22:16 - and whenever we are transforming the
22:19 - parent we are also transforming the
22:21 - child which means whenever we are
22:23 - changing average position the rotation
22:24 - the scale or the skew of the parent we
22:27 - also influence the child this by the way
22:30 - would also work with multiple nodes so
22:33 - if I have level selected I can click on
22:35 - the plus again and you can see on the
22:38 - left side we have recent notes that we
22:40 - worked with I want to add another Sprite
22:42 - to D now we have a second Sprite and
22:45 - this one right now is invisible because
22:47 - there's no texture
22:50 - to give it one and for this one I want
22:52 - to use a different image so let's say
22:54 - inside of Graphics there we have a car
22:57 - and we have main this is the main part
23:00 - of the car this I now want to drag into
23:03 - the texture and there we can see we can
23:06 - now see a car this car we can also move
23:08 - around
23:09 - let me place it roughly here
23:12 - now if I select the level again I can
23:15 - rotate and now I am rotating both the
23:20 - image of Godot and the car what I can
23:22 - also do and let me rename these Sprite
23:25 - to these so to be clear what they do if
23:28 - I double click on the first Sprite 2D
23:30 - this one is going to be let's call it
23:32 - logo the second Sprite to D is going to
23:35 - be the car what I can now do is Select
23:39 - this car and drag it on top of the logo
23:42 - image
23:44 - what this one is doing is it turns the
23:47 - car into the child of the logo
23:50 - and this means whatever transform we
23:52 - apply to the logo will also be applied
23:54 - to the car
23:57 - so if I now change the rotation of the
23:59 - logo for example we would also rotate
24:02 - the car the same would apply to scale or
24:05 - to skew
24:08 - we always get multiple transformations
24:12 - and of course level would still apply to
24:14 - all of the children so logo and car
24:17 - would both be affected let me
24:19 - demonstrate by using rotation again we
24:21 - are still rotating the car I hope this
24:23 - relationship makes sense you basically
24:25 - always want to be aware of the parent
24:27 - node and then whatever children there
24:30 - are their relationships and how they
24:32 - influence each other is something really
24:34 - important to understand in good though
24:35 - so this is something you absolutely want
24:37 - to practice
24:38 - as a matter of fact let's practice this
24:41 - right away I want you guys to create
24:43 - another scene this scene is going to
24:45 - have one parent note which is going to
24:47 - be the player this is going to be a node
24:49 - 2D this note 2D is going to have a child
24:53 - which is going to be a Sprite and the
24:55 - Sprite should be the player image you
24:58 - can find it inside of the file system
24:59 - and finally for good practice I want you
25:02 - guys to add another Sprite to the player
25:04 - and this is going to be a laser
25:06 - pause the video now and try to figure
25:08 - this one out
25:12 - to create a new scene I should have
25:14 - covered that sorry about that but to
25:15 - create a new scene all you have to do is
25:17 - click on this little plus icon now we
25:19 - get another scene and I want to create
25:22 - another 2D scene and this I want to
25:26 - rename to
25:27 - player
25:29 - let's save all of that right away with
25:32 - Ctrl s and I want to go one folder up so
25:35 - I click on the upwards pointing arrow
25:37 - and now I'm back in my scenes folder in
25:40 - here I want to create another folder
25:42 - that I'm going to call layer
25:45 - inside of the player I want to save the
25:47 - scene as player.tscn
25:51 - there we go now we have another scene
25:53 - although inside of it we can't see
25:55 - anything because we don't have any kind
25:57 - of image for that with the player
25:59 - selected I want to click on the plus
26:01 - icon and add another Sprite 2D I can
26:04 - select this from the recent tab now for
26:07 - this spriter D I want to minimize the
26:09 - car folder and instead look at the
26:11 - player folder inside of Graphics there
26:13 - we have player.png and this I want to
26:16 - drag on the texture and there we go we
26:19 - have the player on top of that I want to
26:22 - add another Sprite so now with the
26:24 - Sprite 2D selected actually let me
26:25 - rename it to player
26:28 - image
26:30 - with this selected I want to click on
26:32 - Ctrl a or the plus icon and add another
26:35 - Sprite
26:37 - this Sprite is going to be the laser so
26:40 - let's rename it to laser image
26:44 - the laser image if I minimize the player
26:47 - folder we are getting from projectiles
26:50 - and there we have a file called blue.png
26:53 - this I want to drag on the texture and
26:57 - there we go we have the laser what we
27:00 - can now do is arrange the laser in such
27:02 - a way that it looks a bit better
27:04 - something like this
27:05 - later on we're going to spawn these
27:07 - lasers dynamically so we're going to
27:09 - delete this anyway the position doesn't
27:10 - matter so much I just wanted you guys to
27:12 - practice placing notes inside of a scene
27:14 - and alright with that we have two scenes
27:18 - we have a player and we have a level and
27:21 - while we're here I want to change the
27:23 - node 2D level with the position back to
27:26 - 0 and 0. that just feels a bit cleaner
27:30 - also I want to reset the rotation and
27:33 - then I can move this Sprite and the car
27:36 - so that they are somewhat visible
27:39 - now we have a couple of scenes next up
27:41 - what I want to cover is how can we put
27:44 - one scene inside of another scene
27:46 - specifically what I want to do is to
27:48 - place this player inside of the level
27:51 - and for that we have this symbol it
27:54 - looks like a chain
27:56 - if you hover over it it says instantiate
27:58 - child scene you can also get this with
28:00 - Ctrl shift and a if I click on that we
28:04 - get all of the scenes available in the
28:06 - game and I want to get my player.tscn
28:10 - if I click on open we simply get another
28:13 - node inside of our game and this is very
28:15 - hard to see but on top of the car we now
28:18 - have the player I can move him around
28:20 - actually essentially what happened I had
28:22 - the car selected and on this car I added
28:25 - another scene
28:27 - and the scene we have gotten from what
28:29 - we created earlier the player and since
28:32 - I had a car selected this scene became a
28:34 - child of the car which is not exactly
28:37 - what I want so I'm going to click on the
28:39 - player and simply drag it on the level
28:41 - that way we have the logo with the cars
28:44 - the child and then as a peer we have the
28:46 - player if we are changing the logo or
28:49 - the car it's not going to affect the
28:51 - player because the player is not a child
28:53 - of the logo or the car but it is a child
28:55 - of the level to really understand how
28:58 - important this system is let me make a
29:01 - change to the player so right now we
29:03 - have a player with a Sprite and another
29:06 - Sprite if however I add another kind of
29:09 - sprite let me with the player selected
29:12 - click Ctrl a and add another Sprite I
29:15 - want to add the grenade
29:17 - I can add to it texture and move it
29:20 - let's say roughly here and also it's
29:22 - quite large so I want to change the
29:24 - scale to 0.2
29:27 - what is really important to understand
29:28 - now is whatever change we are making to
29:31 - this scene will show up inside of the
29:33 - level so now you can see we have the
29:35 - grenade we cannot select it from this
29:37 - level scene but inside of the playup we
29:40 - could make updates to it
29:42 - with that system you essentially can
29:44 - isolate the player and all of the code
29:47 - for the player could be in here and then
29:49 - the level is going to be separate from
29:51 - all of that
29:52 - later on this kind of system will become
29:54 - incredibly important to organize your
29:56 - game you will essentially have
29:57 - increasingly complex scenes and you
30:00 - place them inside of other scenes I
30:02 - think when you are getting started in
30:04 - Godot this can be a tiny bit
30:05 - overwhelming so I would very much
30:08 - recommend just play around with the
30:09 - notes and the scenes to make sure you
30:11 - understand what you are doing as a
30:13 - matter of fact let's do an exercise I
30:15 - want you guys to create another scene
30:18 - that scene is going to be for a bad
30:21 - once again the parent node is going to
30:23 - be a node 2D
30:25 - this note 2D is going to get one child
30:27 - which is going to be a Sprite of a bet
30:30 - you can find the images for that inside
30:33 - of graphics and objects
30:35 - on top of that I want you guys to add a
30:38 - few more images for the pillows on top
30:40 - of the bed and just arrange them in such
30:42 - a way that they look decently okay once
30:45 - you have all of that create an instance
30:46 - of the bed inside of the level
30:49 - so we can see it next to the player and
30:51 - the car pause the video now and try to
30:54 - figure this one out
30:58 - back in Godot I want to create another
31:01 - scene for that I click on the Plus or I
31:04 - can use Ctrl or command and n
31:07 - now we have an empty scene and once
31:09 - again I'm going to create a 2d scene
31:11 - this I want to rename right away to that
31:15 - I also want to save the scene let's go
31:17 - up one folder and let's create another
31:20 - folder I suppose we could name this
31:22 - objects
31:24 - inside of objects I want to have bad dot
31:27 - tscn now I can click on Save and there
31:30 - we have our bad scene
31:32 - the bet is going to be once again a
31:35 - couple of Sprites so I want to add a
31:37 - Sprite 2D and to find the image for the
31:40 - Sprite 2D I want to look at objects and
31:43 - in depth we have bad.png this I want to
31:46 - drag on the texture and there we have a
31:50 - pad besides that I also want to add a
31:53 - couple of pillows
31:54 - so with the pad selected I want to add
31:58 - another Sprite and this Sprite is going
32:01 - to be the pillow let me rename
32:02 - everything actually so we have the
32:04 - pillow and we have the bed
32:07 - for the pillow we don't have a texture
32:09 - yet although this one we can also find
32:11 - inside of the objects you have to scroll
32:13 - down a tiny bit there we have Pillow
32:15 - large and pillow small let's add a
32:18 - pillow large for now
32:20 - there we have the pillow large and this
32:22 - I want to move around a bit
32:25 - I can also use transform to give it a
32:27 - touch of a rotation you could also
32:31 - change the scale let's make it a bit
32:32 - smaller and we could skew it
32:35 - like so just make whatever changes you
32:38 - like in here whatever looks good
32:40 - now besides that I want to add another
32:42 - pillow which means with the bed selected
32:45 - I want to add another Sprite 2D and this
32:48 - one is going to be for the small pillow
32:50 - so I'd rack pillow small in there and
32:53 - this I can drag I don't know let's say
32:55 - somewhere here
32:56 - just to keep the naming consistent let
32:59 - me rename this one as well let's call it
33:01 - pillow small and with that we have the
33:05 - bat now we have to figure out how to get
33:07 - this bad scene into the level scene and
33:11 - for that I want to have the node 2D
33:12 - level selected and add another scene by
33:15 - clicking on the Chain icon and now we
33:18 - have another scene we can add which is
33:20 - the bad so if I now click on open we
33:22 - have the bad
33:24 - I can move it around like any other
33:26 - object and this is looking really good
33:29 - before we finish there are two things I
33:32 - want to cover the first one is the
33:34 - naming convention in Godot
33:37 - you might have already seen some minor
33:39 - bits of that when I created the bat I
33:42 - named the small pillow pillow small with
33:44 - no separation and each word started with
33:46 - a capital letter this is called Pascal
33:49 - case and that is what you use for
33:52 - basically any kind of node meaning
33:54 - there's no space between the words and
33:56 - every word starts with a capital letter
33:58 - however for everything else in godob you
34:02 - basically always use snake case which
34:04 - means everything is lowercase and if
34:05 - there's a space use an underscore Godot
34:08 - does this automatically actually so when
34:10 - I'm saving any of the scenes they are
34:13 - always written with lowercase letters so
34:15 - we have bad on lowercase letters player
34:17 - and lowercase letters level and
34:19 - lowercase letters and so on you don't
34:21 - have to follow this convention but it
34:23 - would be a good idea to do so and number
34:26 - two you have to be aware of the drawing
34:29 - order so for example right now the bed
34:32 - is on top of the player
34:35 - I hope that's quite easy to see if we
34:38 - move the bed of the player you can't see
34:40 - the player anymore
34:41 - that is because the bad note was added
34:43 - after the player node if I move those
34:45 - two nodes around
34:48 - so I click on the player and move it all
34:50 - the way to the bottom
34:52 - now we have the player on top of the bed
34:55 - basically what is going to happen is
34:57 - that you have a hierarchy that goes from
34:59 - the top to the bottom or rather from the
35:01 - root outwards which means level is all
35:04 - the way at the bottom then we would have
35:06 - the logo then we would have the bad and
35:10 - then we would have the player if a note
35:12 - is further down than another node this
35:14 - node will be drawn on top of the other
35:16 - node
35:17 - you can make some changes to this
35:19 - behavior and we will cover that later on
35:21 - but for now just keep in mind the order
35:23 - of these notes is quite important so
35:25 - when you are placing all of these notes
35:27 - you want to be aware of two things level
35:30 - one is the parent-child relationship so
35:32 - what note is part of what other node
35:35 - besides that you also want to keep an
35:37 - eye on the order
35:38 - so if a node is below another node it
35:41 - means it is drawn on top of that node in
35:43 - the actual game
35:44 - now before I finish this video the last
35:47 - thing I want to do is to actually play
35:48 - the game obviously right now nothing is
35:51 - going to happen but I do want to create
35:53 - a basic window so we can see something
35:55 - that the player would see for that you
35:58 - want to look at the top right there we
36:00 - have a play symbol or run project
36:04 - if I click on that the door is telling
36:06 - me that no main scene has been selected
36:08 - yet
36:09 - I can click on select cancel and select
36:12 - current
36:14 - when we are starting the game Google
36:15 - wants to have a starting scene
36:18 - in my case I do want to start with the
36:20 - level scene
36:22 - which means I want to click on select
36:23 - current and now we can see an actual
36:26 - window of the game it doesn't do
36:28 - anything right now but at the very least
36:30 - we can see something
36:33 - now that we have covered the basics of
36:35 - notes and scenes we have to come to the
36:37 - next major topic which is coding which
36:41 - in turn is what you're going to use for
36:43 - all of the interactivity inside of your
36:45 - game meaning if you ever want to rotate
36:47 - move or scale literally any object
36:50 - inside of the game you would need to add
36:52 - some code let's talk about it and there
36:55 - are two major issues we have to address
36:57 - number one is how to code in Godot and
37:01 - number two is how to influence notes and
37:03 - scenes I'm going to cover both of these
37:05 - points somewhat combined although I will
37:08 - start with the first question let's
37:10 - start with that one actually Godot can
37:12 - support multiple languages the most
37:15 - common and default one is 3D script
37:17 - besides that though you could also use
37:19 - something like C plus or C sharp and a
37:22 - host of other languages
37:24 - that being said GD script is the default
37:27 - language and also the most popular one
37:30 - as a consequence that's also the one I
37:32 - am going to use
37:34 - and GD script is most similar to Python
37:37 - and the most similar in here is a bit
37:39 - deceptive you could almost cross it out
37:41 - and simply say gdscript is python
37:43 - because the two languages are incredibly
37:46 - similar although that being said if you
37:49 - know any programming language you should
37:51 - have no problem picking it up
37:53 - let me go over the major differences
37:55 - between GD script and python at least
37:57 - for the purposes of this video
38:00 - in terms of data types we have all of
38:02 - the common ones we have integers floats
38:04 - booleans strings and dictionaries there
38:07 - are no tuples and lists have been
38:08 - replaced by arrays although in practice
38:10 - you are not going to notice much of a
38:12 - difference
38:13 - number two variables there are two types
38:16 - of variables in Godot we have normal
38:18 - variables and then constants
38:21 - in normal variable is well a normal
38:24 - python variable you are declaring this
38:26 - one with a VAR keyboard and then a
38:28 - variable name and then you can assign
38:30 - any kind of value
38:31 - you also have constants those are
38:34 - variables that are not allowed to change
38:35 - so whatever value you assign to it when
38:38 - you create it this is the final value it
38:40 - cannot be changed just like in Python
38:43 - once you declare a variable you can
38:46 - assign any new value to it for example
38:48 - if you don't want to have an integer
38:50 - like this 200 you could assign for
38:52 - example a string let's say string like
38:56 - so
38:58 - changing the data type dynamically is
38:59 - perfectly fine that being said though
39:02 - what you can see further down here you
39:05 - can tell a variable to only work with a
39:08 - specific kind of data for example the
39:11 - variable a string as a colon and then
39:14 - the string keyword this tells godo that
39:18 - this variable can only accept a string
39:20 - nothing else
39:21 - the same would also work with integers
39:23 - and booleans and all of the other data
39:25 - types as well on top of that if you are
39:28 - creating an array like I'm doing down
39:30 - here you can also tell gdscript to have
39:33 - specific kind of data types inside of
39:35 - this array in this case we have an array
39:38 - with integers
39:40 - which means we have an array and this
39:43 - one has one two three and four simple
39:45 - integers next up we have functions and
39:50 - functions work basically like in Python
39:52 - the major difference is that now you
39:54 - don't use the defined keyword instead
39:56 - you use func after that you are still
40:00 - specifying a function name and then you
40:02 - can declare parameters
40:03 - on top of that you can also tell the
40:05 - parameters to have a certain kind of
40:07 - data type in this case integers and
40:09 - strings besides that you can also
40:12 - specify a return value for this function
40:14 - which for this function would be a
40:16 - Boolean
40:17 - if you do not specify a return value
40:20 - what is going to be returned will be
40:22 - void which is essentially the absence of
40:24 - a value
40:26 - finally just like in Python if you want
40:29 - to assign a specific line of code to a
40:32 - function you would use indentation so in
40:35 - this example this annotation tells us
40:37 - that the return statement belongs to the
40:39 - function
40:40 - once again if you know python all of
40:42 - this should be really straightforward
40:44 - next up we have flow so how we can
40:47 - control the flow of your code and for
40:49 - that one we have if statements we have
40:51 - while Loops we have for Loops along with
40:53 - comparison operators so greater than
40:55 - smaller than greater equal than all of
40:57 - these are there you also have continue
40:59 - and break
41:01 - those are the major differences if you
41:03 - got so far and you know basic python you
41:06 - should have a good grasp on GD script
41:07 - that being said there's one really
41:09 - important topic I do have to address
41:11 - losses
41:13 - the way you have to think about it is
41:15 - that whenever you create a script you
41:17 - always have to add it to a node and
41:20 - nodes are simply classes with default
41:21 - methods and attributes
41:23 - which means if we want to create a
41:25 - script we would have to for example add
41:27 - it to a node 2D and this creates a new
41:30 - object this object would then have a
41:32 - position a rotation a scale and all of
41:35 - the properties and methods in node 2D
41:37 - would have
41:38 - this we can then use to overwrite these
41:40 - default values for example if we change
41:42 - the position we will place the node to D
41:44 - in a new position I'm going to add lots
41:47 - of examples on this later on for now
41:49 - just keep in mind that whenever you
41:50 - create a script you add it to a node and
41:52 - the node is a class with properties and
41:54 - methods now before I jump into Godot
41:57 - there are two more rather minor things I
41:59 - want to cover
42:00 - number one there are lots of inbuilt
42:03 - functions that you will use they all
42:05 - start with an underscore for example we
42:07 - have underscore ready and this is run
42:09 - when a node is added to the tree which
42:12 - basically means we're running this when
42:13 - the node is ready besides that we have
42:16 - process and this is run on every frame
42:18 - of the game there are a few more but
42:21 - those two are the most important ones
42:23 - besides that you can also Target other
42:26 - nodes from your node this can be done in
42:28 - two ways you could either use get node
42:31 - which is a function and this is going to
42:33 - return a node it wants one argument
42:35 - which is a string of the notepad this
42:38 - isn't used very often because the
42:40 - alternative looks like this you have a
42:42 - dollar sign with the notepad
42:45 - this does the same thing but is much
42:47 - more concise which is why you're seeing
42:49 - this significantly more often
42:52 - all right with that we have covered a
42:54 - whole bunch of theory let's actually
42:55 - jump into Godot and let's play around
42:57 - with all of this
42:59 - here we are back in the scene we created
43:02 - earlier and right now it's quite messy
43:04 - so I want to clean things up a bit I
43:07 - want to get rid of the player so I'm
43:09 - just selecting it and then click on
43:10 - delete
43:12 - is going to ask me if I want to delete
43:14 - the player node and I do want to do that
43:16 - I also want to get rid of the bad so
43:18 - delete a and I also want to get rid of
43:21 - the car now besides clicking on the lead
43:23 - on your keyboard you can also right
43:25 - click and somewhere in there we have
43:28 - delete all the way at the bottom
43:31 - this is going to leave us only with the
43:34 - logo as the only node inside of the
43:36 - scene
43:39 - for now I want to return all of the
43:42 - values to that default state so rotation
43:44 - should be 0 and position should also be
43:46 - zero and zero with that we have a very
43:49 - basic scene if you followed along so far
43:51 - you don't have to clean up the scene on
43:53 - your end I am just going to do it to
43:54 - keep things a bit more organized on my
43:56 - end
43:57 - now to add a script to any kind of node
44:01 - you have to use the symbol in the top
44:03 - left this one here it's a little scroll
44:05 - with a plus symbol before I am going to
44:08 - click on it you have to be aware
44:09 - depending on what note you have selected
44:12 - if you click the button you will attach
44:14 - a script to this particular node because
44:16 - remember whenever you create a script it
44:19 - always has to be attached to a node
44:22 - in my case I want to attach a script to
44:24 - the logo Sprite so I have this one
44:26 - selected I click on the symbol and then
44:29 - we get a new dialog and in there we can
44:31 - select a couple of things first of all
44:33 - the language although right now we only
44:35 - have GD script
44:37 - then we have inherits and this is Sprite
44:40 - 2D
44:41 - this is an option you basically never
44:43 - want to change then we have class name
44:45 - you can ignore that then we get a
44:47 - template for this one you want to keep
44:50 - the default don't worry too much about
44:51 - it then we have built-in script you can
44:53 - ignore this one as well and finally we
44:56 - have the path this is where we are going
44:58 - to save the script in my case I want to
45:02 - look at let's say I want to go up one
45:04 - folder and save the script somewhere in
45:07 - here
45:09 - I'm going to delete this later anyway
45:10 - but for now I'm going to save it inside
45:12 - of scenes
45:15 - as logo.gd
45:18 - if I now click on OK we are going to the
45:20 - script view if you want to go back to 2D
45:22 - you click on the top on 2D and this way
45:25 - you can change between 2D and script
45:27 - quite easily on top of that what you can
45:29 - also see now is that we have an icon
45:32 - next to the logo we have the logo node
45:35 - and on the right of it we have a script
45:37 - this is telling you that there's a
45:39 - script attached to this node should be
45:40 - fairly obvious other than that we can
45:43 - now see a few lines of code
45:46 - besides that what you can also do in the
45:48 - top right there's an expand symbol if
45:50 - you click on that you're maximizing the
45:52 - code window at least a tiny bit
45:54 - since I'm working on a small screen I'm
45:57 - going to work with that if you have a
45:58 - larger window this shouldn't be
45:59 - necessary
46:00 - now let's go through what we are seeing
46:04 - on the first line we have extends Sprite
46:07 - 2D this is really important and this
46:10 - extends spread to D let me minimize this
46:12 - a tiny bit this extends Sprites to D has
46:16 - to match the node that we have attached
46:19 - the script to so in my case I have
46:21 - attached a script to a Sprite 2D
46:23 - which is the logo we have created in the
46:25 - last part
46:26 - basically what this one is doing is it
46:29 - creates a new object from Sprite 2D and
46:32 - adds extra functionality whatever we are
46:34 - adding to it later on
46:36 - but to ensure that the spreadery still
46:38 - works we have to inherit from a Sprite
46:40 - to D that way we don't create some kind
46:42 - of new data
46:44 - since this is done automatically you
46:46 - don't have to worry too much about it
46:49 - other than that we have two functions we
46:51 - have a ready function and we have a
46:53 - process function
46:54 - I covered both of those earlier ready is
46:57 - essentially called whenever the node is
47:00 - ready process is called on every frame
47:03 - of the game
47:04 - we actually use them let me add a few
47:06 - print statements
47:07 - I want to print this string ready when
47:11 - the node is ready and then inside of
47:13 - process I want to print let's call it
47:16 - process
47:17 - and now that I have that I can run the
47:20 - entire game again by clicking on the
47:21 - button on the top right so if I run this
47:23 - now
47:25 - you can see let me close the window
47:29 - in the bottom we have output this is
47:32 - where you can see print statements and
47:33 - they can see process quite often and
47:37 - although at the beginning we have ready
47:39 - all of that came from these two
47:41 - functions
47:43 - although in our case we don't want to
47:45 - print things we want to move things
47:47 - around
47:48 - so what I basically want to do is I want
47:51 - to update the position of the Sprite
47:54 - and for that let me return to the 2D
47:56 - scene and if I click on the logo on the
47:58 - right we have the inspector there we
48:01 - have the transform properties
48:03 - in there we have position and this is
48:05 - what we want to change and if you hover
48:06 - over it you can see the property it says
48:09 - position
48:10 - this tooltip is telling you how you can
48:12 - Target this property with code which
48:15 - means if we overwrite the position we
48:17 - can update the position of the node
48:20 - which means if I go to script and let's
48:22 - say once the node is ready I can give it
48:25 - a new position and Godot has an auto
48:29 - complete that is quite nice so we can
48:32 - assign a new value to the position
48:34 - or this value it wants to have a vector
48:37 - 2 which is basically a list with two
48:40 - values and x and a y value which means
48:43 - if I add a 100 and a 200 in there we are
48:48 - moving this Sprite by 100 pixels to the
48:51 - right and 200 pixels down and that is
48:54 - all we need to update the position
48:55 - meaning if I now Run the game
48:58 - you can see we have a new position for
49:01 - the Sprite
49:03 - originally it was a disposition but we
49:06 - moved it down there because of the ready
49:10 - function
49:13 - on top of that we are still printing
49:15 - process because of the process function
49:18 - here
49:19 - but other than that we have a really
49:21 - good start
49:22 - what you can also do inside of process
49:25 - we can Target position dot X
49:30 - and then add a small amount let's say
49:33 - 10.
49:35 - if I now run all of this again the
49:37 - Sprite is going to move to the right
49:38 - there we go
49:41 - basically what is going to happen is
49:44 - that we are increasing the position X by
49:46 - 10 pixels on every frame which basically
49:49 - makes it move a tiny bit further to the
49:52 - right every time we're creating a new
49:54 - image of the game
49:56 - disappear some super basic stuff to
49:58 - extend this a tiny bit we can create a
50:01 - couple of variables for that all the way
50:04 - at the top outside of the functions you
50:06 - can either use VAR
50:08 - or const along with the variable name in
50:11 - my case I want to create a variable and
50:13 - I call this one the position
50:17 - since this is going to be a vector 2 I
50:19 - want to force a certain kind of data
50:21 - type which is Vector 2.
50:24 - and now with an equal sign I can
50:26 - actually assign a value since I will
50:28 - need a vector 2. I will have to type
50:31 - vector 2. now this Vector 2 has a couple
50:34 - of nice extra methods that we can work
50:36 - on for example if I add Dot and 0 we are
50:40 - creating a vector with zero and zero
50:42 - meaning this would be the same
50:45 - as a vector with 0 and 0.
50:49 - besides that I want to create a constant
50:52 - with this beat because this is not
50:55 - something that should change although it
50:57 - should be an integer so I'm going to
50:59 - tell it that the data type always has to
51:01 - be an integer and now for the value
51:03 - let's say 10.
51:07 - with that we have created two variables
51:09 - inside of this class and those two
51:11 - variables are available everywhere we
51:13 - could use them inside of ready or we
51:15 - could use them inside of process or we
51:18 - could use them in any other function
51:19 - that we create ourselves
51:21 - which means for the position let's say I
51:25 - want to update my pause variable that I
51:27 - just created and give it a vector 2 with
51:31 - 300 and 200. this by itself would not
51:35 - affect the game in a visible manner
51:37 - because right now we have created a new
51:39 - variable that has a vector 2 value and
51:42 - then we are assigning a new Vector to
51:43 - Value we are not actually updating the
51:45 - position of the Sprite for that we would
51:48 - need to position attribute and then give
51:51 - it the position variable we have just
51:53 - created
51:54 - the same thing we can do inside of
51:56 - process
51:57 - instead of updating position.x directly
52:00 - I want to get my POS dot X and then plus
52:04 - equal
52:05 - the speed and then I can assign a whole
52:09 - new value to the position which is just
52:11 - going to be pause
52:12 - with that I can run the code again and
52:15 - we're going to get a similar result
52:16 - that's looking pretty good
52:19 - what you can also do is declare local
52:21 - variables inside of every function you
52:24 - have for example inside of the ready
52:27 - function I can create a new variable
52:29 - let's call it test rotation
52:33 - for Value I'm going to go with 45. the
52:36 - specific number here really doesn't
52:37 - matter
52:39 - once I have that I can get the rotation
52:43 - once again I get these names from
52:45 - hovering over the value inside of the
52:47 - inspector so there I have rotation and
52:50 - if I have over it we get rotation
52:52 - one thing you do want to keep in mind is
52:54 - that rotations are in radians so if I
52:57 - want to use 45 degrees I would want to
52:59 - use rotation degrees
53:01 - which means inside of the code I want
53:03 - rotation degrees which is going to be
53:06 - the test rotation
53:09 - if I run this now we should have a
53:11 - rotated Sprite and that is looking
53:13 - really good now the Sprite is rotated by
53:15 - 45 degrees keep in mind now that this
53:18 - test rotation is a local variable inside
53:21 - of the ready function we could not use
53:24 - it inside of process if I try to for
53:27 - example print test row rotation
53:32 - we would get an error and you can
53:35 - already see that Godot is telling me
53:37 - that identify test rotation is not
53:39 - declared in the current scope let me
53:41 - extend the window tiny bit they can see
53:43 - it better
53:45 - Godot can be very aggressive at Godot
53:47 - can be really aggressive at telling you
53:49 - errors in your code early which is nice
53:52 - but can also be kind of annoying
53:54 - but in this case it is quite useful
53:56 - with that we have covered the most
53:58 - important basics of GD script
54:01 - since this is something really important
54:03 - to understand I do want to include an
54:05 - exercise at this point
54:07 - I want you guys to create another
54:08 - variable called test scale make sure
54:11 - that the data type for this one is an
54:12 - integer and the default value should be
54:14 - one
54:16 - when the game is ready use the variable
54:18 - to change the scale to do on top of that
54:21 - while the game is running continuously
54:24 - increase the scale by a very small
54:26 - amount choose whatever you like
54:28 - pause the video now and try to implement
54:30 - this one
54:34 - back in the code I want to create
54:37 - another variable or the name I want to
54:39 - have test scale
54:41 - and on top of that I want to force a
54:44 - data type which is going to be an
54:45 - integer and the default value should be
54:48 - 1.
54:49 - with that we have created a new variable
54:53 - next up inside of the ready function I
54:57 - want to use this test scale to change
54:58 - the scaling of this node to a 2. for
55:02 - that I want to get the test scale and
55:05 - set it to 2 and next up let me minimize
55:09 - this window a bit so I can see the
55:12 - inspector we want to look at this scale
55:15 - and there you can see the notes scale
55:17 - the unscaled value is one and one and
55:21 - whenever you see two parentheses it
55:23 - means it's a vector
55:24 - the problem is inside of the code we're
55:26 - using an integer for the test scale so
55:29 - we have to adjust a tiny bit
55:31 - but let's play around first of all I
55:33 - want to update this scale
55:36 - and the scale should be the test scale
55:40 - and now we are already getting an error
55:43 - and once again let me extend this window
55:45 - so we can see what's going on we are
55:47 - trying to assign a value of type int to
55:50 - a variable that wants to have a vector
55:52 - 2. so this is not going to work scale
55:55 - always wants to have a vector 2. but
55:57 - that we can account for quite easily all
55:59 - we have to do is get Vector 2 and then
56:02 - pass in the test scale for x and y and
56:07 - now the good old debugger is happy again
56:09 - with that I can run the entire thing and
56:13 - now the Godot logo is twice as large
56:15 - perfect
56:17 - which means with that we can work inside
56:20 - of the process function to continuously
56:22 - increase the size
56:24 - for that I want to get the test scale
56:27 - again and increase it by a very small
56:29 - amount let's say 0.01
56:32 - other than that I want to get the scale
56:35 - property and set it to a new Vector 2
56:39 - with the test scale for both X and Y
56:43 - let's try all of that
56:46 - and now it's not growing
56:50 - let's instead change it to a one and now
56:53 - if I run this again this is definitely
56:55 - working
56:58 - the issue with adding 0.1 is that test
57:01 - scale is always going to be an integer
57:03 - and when we add 0.1 we would get 1.1
57:10 - and since the value for test scale
57:12 - always has to be an integer the dough
57:14 - only takes the first value which is
57:16 - going to be a one anything after that is
57:18 - going to be ignored
57:20 - if where to float this would work better
57:22 - but in this case the code is only going
57:25 - to work if we have full numbers like 1 2
57:27 - and 3 and so on
57:28 - all right with that we have a couple of
57:31 - really important basics of GD script
57:34 - that being said there's still quite a
57:36 - bit to go the really important issue
57:38 - that we have right now let me minimize
57:40 - all of this and return back to the 2D
57:42 - scene right now we can only influence
57:44 - the logo itself but what if we wanted to
57:47 - go from level and then influence the
57:50 - logo this we can't do right now but this
57:53 - video is getting quite long so let's do
57:54 - all of this in the next video
57:56 - let's continue talking about coding in
57:59 - good dough and for this part I want to
58:01 - focus on two major things number one
58:04 - targeting one node from another node
58:07 - which means I want to use the level node
58:09 - to influence the Sprite on top of that I
58:12 - want to work with the flow so we're
58:14 - going to use some if statements and some
58:15 - for loops
58:17 - let's Jump Right In if you got so far
58:19 - this shouldn't be too difficult
58:20 - here we are back in the code and you can
58:22 - see we have 11 node and then a logo node
58:25 - with a script all of the stuff we have
58:27 - done in the last part
58:29 - what I now want to do is to give the
58:31 - level node a script as well which I Do
58:34 - by attaching a new script
58:36 - all of the default options for this one
58:38 - are okay I usually don't change any of
58:41 - those besides the path
58:43 - what you see most of the time is that
58:45 - people change the script next to the
58:47 - scene that it is attached to which means
58:50 - in my case I want to add the level
58:52 - script in the same folder where we have
58:54 - the level scene which is what I have
58:56 - right now so I'm going to click on open
58:59 - and then on create
59:01 - now we can see we have two script
59:03 - symbols because both of these nodes have
59:05 - a script attached to them
59:07 - we also have the scripts available in
59:09 - here
59:10 - which is quite nice to switch between
59:13 - the two
59:14 - now inside of the level you can tell
59:16 - that we don't have the functions we had
59:19 - inside of logo but that is only because
59:22 - of the preset I have selected you can
59:24 - totally add Funk and ready and then you
59:27 - get the same function in the app I can
59:29 - print let's say level node is ready
59:33 - and once I have that I can run the
59:36 - entire thing again and let me close it
59:38 - right away
59:39 - and look at the output again there we
59:42 - get level node is ready meaning this
59:44 - ready function works just fine
59:48 - these underscore functions you have
59:49 - available all of the time meaning you
59:52 - can always use ready or process and a
59:54 - host of other ones
59:56 - let me minimize the output and then we
59:59 - can work a bit more inside of the level
60:01 - script
60:02 - now I could be running any kind of code
60:04 - the same thing we have done inside of
60:07 - the logo
60:09 - but I want to do something else what I
60:11 - want to do is from inside of this script
60:14 - level.gd I want to update the logo and
60:18 - let's say I want to update the rotation
60:22 - that we can do quite easily but first of
60:25 - all I want to go back to logo.gd and in
60:28 - there I want to comment out the test
60:31 - scale because this is scaling everything
60:33 - too fast and we can't see what's
60:34 - happening anymore
60:35 - to comment out code in GD script you
60:38 - would use control or command and K if
60:40 - you add that you are adding a comment
60:43 - alternatively you can also simply add
60:45 - the hashtag symbol and then you're
60:46 - adding a comment so I can get for
60:49 - example to positions add the hashtag and
60:51 - then you have commented it out
60:54 - both is fine I tend to use Ctrl or
60:56 - command K because it's a bit faster but
60:59 - choose whatever you like
61:00 - with that if I run the code again
61:03 - you can see that we have the Godot
61:06 - symbol moving to the right and we have a
61:09 - starting rotation of 45 degrees which is
61:11 - what we're getting here
61:13 - let's comment out this one as well so we
61:16 - are starting with a rotation of zero
61:18 - degrees that is looking like a good
61:20 - start
61:20 - now inside of level.gd I want to change
61:24 - the rotation of the logo
61:27 - for that we first of all have to get the
61:29 - logo and this is what I talked about in
61:31 - the last video let me bring up this
61:33 - slide again there towards the end I
61:36 - talked about that we can Target notes in
61:38 - two ways we could ever use get node and
61:41 - then a notepad or a dollar sign along
61:43 - with the note path both of those would
61:46 - give us a note and then on this node we
61:49 - can change the properties for example we
61:51 - could get the node path and then dot
61:53 - position
61:55 - I hope you can read that and we could
61:58 - simply attach a new Vector too back in
62:01 - Godot I want to get a node
62:05 - and now the autocomplete is already
62:07 - giving me a couple of options we either
62:09 - have a DOT which doesn't do anything or
62:11 - we have the logo
62:13 - and with that we have the logo what we
62:15 - could do now for example is to change
62:18 - the rotation and for that we need the
62:21 - grease
62:23 - let's change it to 90 degrees
62:25 - with that if I run all of this again
62:28 - there we have a 90 degree rotation for
62:30 - the Godot symbol this is one way to get
62:34 - a node alternatively what you are
62:36 - probably going to use much more often is
62:38 - a dollar sign and then the name or the
62:42 - path of the node you want to Target in
62:44 - this case logo
62:46 - if I run the entire scene again we are
62:48 - getting the same result
62:51 - as a matter of fact you don't actually
62:53 - have to type it what you can also do if
62:55 - I get rid of it you can simply select
62:58 - and click on the note you want to get
63:00 - and then drag it into the code editor
63:03 - and if you then drop it you get the name
63:05 - of the node or rather the path of the
63:07 - node same thing
63:09 - this we can also Target multiple times
63:11 - for example we can once again use func
63:15 - underscore process
63:17 - then get the logo with dollar sign logo
63:20 - and then the rotation in degrees
63:24 - we could for example plus equal 0.1
63:30 - if I now run the scene again
63:33 - we get a very slow rotation let's
63:36 - increase the number by a fair amount
63:38 - let's say I want to increase it by one
63:40 - degree on every frame of the game
63:43 - that is much more visible and certainly
63:46 - it is working to make it even more
63:47 - visible let me change it to a 10 if I
63:50 - run this again
63:51 - much more visible cool that is what I
63:54 - wanted so with that we can now Target
63:56 - other nodes next up I want to work on
64:00 - the flow
64:02 - let's say I want to add an if statement
64:05 - that if
64:07 - the rotation is greater than 180 degrees
64:12 - I want to change the rotation back to
64:14 - zero for that we will need an if
64:17 - statement
64:19 - I want to get if and then I can Target
64:22 - the logo once again and I want to get
64:25 - the rotation
64:27 - underscore the grease
64:30 - and if that is greater than 180
64:33 - then I want to get this same node so I
64:37 - can just copy it
64:39 - and set the rotation degrees to zero
64:41 - also I've realized this should be an
64:43 - uppercase l
64:45 - for both of these nodes
64:47 - what you want to keep in mind that these
64:50 - properties you can either set or read
64:52 - both is totally fine
64:54 - let's run all of this again
64:58 - and this is quite hard to see but let me
65:01 - write again and it is certainly working
65:03 - because the face of Godot is switching
65:06 - around
65:07 - this isn't too visible but the really
65:09 - important thing is the if statement you
65:12 - basically add if like in Python and then
65:14 - the condition for this one we're
65:16 - comparing the rotation degrees against a
65:18 - number 180 in this case
65:21 - what you also see quite often is that
65:23 - people put parentheses around them the
65:26 - result would be the same
65:28 - and this is something I really want to
65:30 - practice
65:31 - I want you guys to update the position
65:33 - of the Sprite if it is greater than 1000
65:36 - move it back to zero and I am purely
65:39 - talking about the horizontal axis if
65:42 - this is our starting position zero we're
65:44 - going to add a line of 1 000 pixels
65:49 - this Sprite is going to start on
65:51 - position 0 enter continuously move to
65:54 - the right
65:55 - once it reaches the point 1000 I want
65:59 - you guys to move it back to the starting
66:00 - position
66:02 - that way it doesn't move infinitely to
66:03 - the right
66:04 - also all of this has to be on the level
66:06 - node so now pause the video and try to
66:09 - implement this one
66:13 - back in the code the rotation is kind of
66:16 - confusing so I just want to get rid of
66:18 - it along with the comment we don't need
66:21 - any of that
66:23 - instead I want to get an if statement
66:26 - once again I want to get the logo
66:30 - on that I want to get the position and
66:33 - this is going to return a vector 2.
66:36 - meaning on that I can either Target X or
66:39 - I can Target Y in my case I only want to
66:41 - look at X
66:42 - if this is greater than 1000 I want to
66:46 - do something so colon and if I now press
66:49 - enter we get another level of
66:51 - indentation
66:52 - just to see if this is working I want to
66:55 - print let's say position exceeded
67:00 - with that I can run the code again and
67:03 - now if we reach a thousand pixels at
67:06 - some point we get position exceeded
67:08 - with that we know this if statement is
67:11 - working perfectly fine
67:13 - that means we can use it once again let
67:17 - me copy it
67:20 - and set the position to zero
67:24 - if we run the code now
67:26 - we should move back to zero
67:29 - although we are not
67:33 - let's explore what went wrong and I
67:35 - would very much recommend you to
67:37 - investigate this yourself you can find
67:39 - all of the information inside of the
67:41 - logo GD script
67:43 - we do know that this if statement is
67:46 - working so something is wrong with this
67:48 - line
67:49 - and well the issue is inside of the logo
67:54 - GD script we are storing the position
67:57 - inside of this Vector that I called
67:59 - pause
68:00 - and we are updating this post vector and
68:03 - then we are setting the position to the
68:05 - pause
68:06 - the problem essentially is inside of
68:09 - level when we updating position.x and
68:12 - set it to zero we are actually setting
68:14 - the position of this Sprite to zero
68:16 - however what is happening right after
68:19 - inside of logo.gd we are setting another
68:22 - position the one we have specified here
68:25 - because of that we are overwriting what
68:28 - we have done inside of this line now to
68:31 - fix that all we have to do is to change
68:33 - the position to pause that way we don't
68:37 - update the position itself instead we
68:40 - are updating this post Vector which is
68:43 - responsible for the position
68:46 - which means now this should be working
68:50 - and there we go this is looking much
68:53 - better
68:54 - it keeps on working perfect basically we
68:58 - want to control the position with the
69:00 - pause variable which is a vector 2.
69:04 - and when you target a node from another
69:07 - node in this case the level you can
69:09 - Target any of the attributes it can
69:11 - either be some of the inbuilt ones like
69:13 - position or it can be one of the
69:15 - attributes that you have created like
69:17 - pause you can Target both just fine
69:19 - finally before I finish this video let's
69:22 - have a look at the for Loop and for that
69:24 - we are going to need an array and let's
69:27 - create one in the entire scope of the
69:30 - class I want to create VAR test array
69:34 - and this is going to be an array
69:38 - that is only accepting let's say a
69:41 - string for the data inside
69:43 - for an array you need square brackets
69:45 - and since we only have strings inside we
69:48 - will need either single or double
69:50 - quotation marks
69:51 - usually what you see in Godot are double
69:53 - quotation marks but single ones work
69:55 - just as well I'm going to add some
69:57 - random words it doesn't really matter
69:59 - what you add in here and stuff also
70:02 - let's extend the entire thing so we can
70:04 - see all of it cool now we have an array
70:07 - full of strings
70:09 - if you want to look at every single
70:11 - value individually you will need a for
70:13 - Loop which basically means we want four
70:15 - and then we need a name for the value
70:17 - just like in Python
70:19 - let's call it for I in test array
70:23 - then we need a colon and then inside of
70:25 - this for Loop we can for example print I
70:28 - if I now run the code you can see in the
70:31 - bottom we have test hello and stuff
70:35 - the content of the array
70:38 - if you're used to python this should
70:40 - feel very familiar or in fact if you
70:43 - know any programming language this
70:44 - shouldn't be too difficult on top of
70:46 - that you can also use indexing
70:48 - if for example I only wanted to print
70:51 - the first value I can go print a test
70:54 - array and then the index 0.
70:58 - once again if I run all of this we get
71:01 - test which is the first value inside of
71:04 - the array
71:05 - so I hope all of this is reasonably
71:07 - straightforward
71:09 - now that we are moving things we have to
71:11 - cover one super important concept that
71:13 - is called Delta time
71:16 - and Godot is actually already
71:18 - complaining that we are not using Delta
71:19 - time let's have a look in Godot right
71:21 - now actually here we are back in the
71:23 - editor and if you look at the bottom
71:25 - there we have a debugger that says two
71:30 - if you click on that you get some weird
71:34 - thing but then we have a tab that says
71:36 - errors with a two and in there we have
71:38 - either errors or Warnings right now we
71:41 - have two warnings so if you have over
71:43 - both of them we get a warning and the
71:45 - warning for both is the same that the
71:48 - parameter Delta is never used in the
71:50 - function process
71:51 - if this is intended prefix it with an
71:53 - underscore underscore Delta
71:56 - basically what Godot doesn't like right
71:59 - now is we have two scripts let me open
72:02 - them
72:03 - and in both of these scripts we are
72:05 - using Delta
72:07 - we have one here and we have another one
72:10 - here
72:12 - Delta always comes with the process
72:14 - function Godot inserts it automatically
72:17 - the question then is how can we use
72:19 - Delta
72:21 - and why does Google complain if we don't
72:23 - use it
72:24 - and well for that Godot actually adds a
72:27 - comment for this one if I expand it a
72:30 - bit
72:31 - we have called every frame this applies
72:34 - to the process function and Delta is the
72:36 - elapsed time since the previous frame
72:38 - and to understand what that means we
72:41 - have to cover a bit of theory let me
72:44 - open the slides
72:45 - when we are moving objects in the game
72:47 - the speed of them is determined by how
72:50 - fast the game runs I'll explain this in
72:52 - a bit more in just a second
72:54 - but the main thing we have to account
72:55 - for right now is that our game can run
72:58 - at wildly different speeds
73:00 - and when I talk about speeds I talk
73:01 - about how many frames are being
73:03 - generated
73:04 - so for example our game might run on a
73:06 - really slow computer or on a really fast
73:08 - computer
73:09 - and depending on where it runs we might
73:11 - get different frame rates and this can
73:13 - be a massive problem
73:15 - let's do some examples
73:17 - here is a table and for all three rows
73:21 - we want to move an object by 10 pixels
73:23 - per frame this is actually what we have
73:26 - already done if I jump back to Godot
73:28 - really quick when we move the logo we
73:30 - set position.x plus equal to speed and
73:33 - the speed was 10 pixels
73:36 - which means on every frame of the game
73:38 - we moved this position 10 pixels further
73:41 - to the right
73:42 - next column we have frames per second
73:47 - this is determined by your computer for
73:49 - example on my computer I have a
73:51 - reasonably fast one so my game would
73:53 - probably run a bit higher than 60 frames
73:55 - per second
73:57 - that being said another person might
73:59 - have a really really really good
74:00 - computer and their game might run at 120
74:03 - frames per second or even faster
74:06 - the list can go on forever and some
74:08 - person with a crazy computer might even
74:10 - have a thousand frames or higher
74:13 - on the other end if you have a really
74:15 - slow computer you might only get 30
74:18 - frames per second or something lower so
74:21 - this can also go up to zero where you
74:24 - get no frames at all
74:26 - this frame rate is really important
74:28 - because it influences how fast things
74:30 - are moving for example on this slowest
74:33 - possible computer but we only get 30
74:35 - frames per second if we are moving by 10
74:37 - pixels per frame we are moving 300
74:41 - pixels per second that is the total
74:43 - movement
74:44 - which is fine by itself but if the frame
74:47 - rate changes so if we get 60 frames or
74:50 - 120 frames then we get different kinds
74:53 - of movement
74:54 - we would get 600 or 1 200 pixels per
74:58 - second
74:59 - and that would be an enormous problem
75:02 - because now depending on what computer
75:05 - the game is run on we get different
75:07 - movement speeds just imagine you have
75:10 - the same game something like Elden ring
75:12 - and on some computers it runs four times
75:14 - as fast than on others and when I say it
75:18 - runs four times as fast I'm meaning the
75:19 - movement speed of a character is four
75:21 - times as fast as on another computer
75:24 - the game would effectively be unplayable
75:26 - so we do have to account for that
75:29 - this inconsistency is also not limited
75:31 - to different computers
75:33 - since some scenes are more difficult to
75:35 - render than others we might even have an
75:38 - inconsistent experience on the same
75:39 - computer
75:41 - if you imagine any kind of video game
75:43 - sometimes you have a small room with
75:45 - very few objects and sometimes you have
75:47 - a giant area with a huge amount of stuff
75:50 - obviously the larger area is much more
75:53 - difficult to run and you don't want to
75:55 - have different kinds of movement speed
75:56 - in the different scenes so we have to
75:59 - account for that and we want to avoid
76:00 - something like this where the frame rate
76:03 - dips quite a bit over time and while
76:05 - this by itself is fine and you see it
76:08 - fairly often it should not influence the
76:10 - movement speed so a lot of problems how
76:12 - can we account for it for that we have
76:15 - Delta time and Delta time literally just
76:18 - measures how long it took to create the
76:20 - current frame for example if our current
76:23 - frame rate is 60 frames per second then
76:25 - Delta time is one second divided by 60.
76:28 - roughly 17 milliseconds
76:31 - this information we can use to keep a
76:34 - constant speed of any object in the game
76:36 - regardless of the frame rate all we have
76:39 - to do is to multiply the movement with
76:41 - Delta time it's actually really easy to
76:43 - implement but to understand why this
76:45 - works let me add another table
76:48 - how frame rates influence the game when
76:50 - we have Delta time this table is
76:53 - somewhat similar compared to what we
76:55 - have seen earlier we still have our
76:57 - speed with pixels per frame and then we
77:00 - have the frame rate
77:02 - originally what we have seen was this
77:05 - column where we are getting different
77:07 - movements depending on the frame rate
77:10 - which was really bad so we have to
77:13 - account for that
77:14 - and for that we have added another
77:16 - column for Delta time
77:20 - now depending on the frame rate we are
77:22 - getting a different Delta time if our
77:24 - frame rate is 30 frames per second we
77:26 - simply divide one second by 30 and Delta
77:29 - time would be 0.033
77:31 - if our frame rate is 60 we would divide
77:34 - 1 by 60 and we get 70 milliseconds or
77:37 - something approximate to it and if our
77:39 - frame rate is 120 we divide 1 by 120 and
77:42 - we get 0.08 these numbers we can then
77:46 - use as a multiplier or the frame rate
77:49 - which is what happens in the final
77:50 - column
77:52 - for example for 120 frames we are moving
77:55 - by 10 pixels per frame at 120 frames per
77:58 - second and this you multiply with Delta
78:01 - time and the outcome is 10 pixels per
78:03 - second
78:04 - a better way to visualize this is this
78:07 - 0.08 is literally 1 divided by
78:10 - 120 and if you multiply 120 with 1 over
78:15 - 120 both cancel each other out so we are
78:18 - literally left with 10.
78:20 - and this applies to all the different
78:22 - frame rates the higher the frame rate
78:25 - the lower Delta time and since these two
78:28 - move proportionally they always cancel
78:30 - each other out
78:31 - and all that's left is the actual
78:34 - movement per second which is exactly
78:36 - what we want
78:37 - so with Delta time accounted the game is
78:40 - going to run at the same speed for any
78:42 - frame rate
78:43 - let's implement it
78:45 - back in Godot all I have to do is get my
78:48 - speed and then multiply it by Delta
78:52 - the issue now is if I run all of this
78:54 - this is going to be really really slow
78:56 - we basically have no movement left
78:59 - the reason for it the speed right now is
79:02 - 10 pixels per frame and Delta time is
79:04 - something like 0.000 and so on
79:08 - as a consequence the final result is
79:10 - going to be incredibly low whenever you
79:12 - use Delta time you want to have somewhat
79:14 - larger numbers
79:16 - let's go with 200 that is going to be a
79:19 - much better number
79:20 - and there we go now we have roughly the
79:23 - same Movement we had earlier the if
79:25 - statement also still works but now the
79:28 - important difference is that this
79:30 - movement always is the same regardless
79:32 - of the frame rate
79:34 - now in my case I can't easily control
79:36 - the frame rate so this is a bit
79:38 - difficult to visualize but trust me this
79:41 - is a very easy thing to implement and
79:42 - really important for a consistent game
79:44 - experience on top of that if you look at
79:47 - the bottom the debugger is now a bit
79:49 - less unhappy we only have one issue left
79:53 - fixing that one is going to be your
79:55 - exercise
79:56 - I want you guys to use Delta time in
79:58 - level.gd more specifically inside of the
80:01 - process function of level.gd possibly
80:04 - now and try to implement this one
80:09 - back in Godot I want to look at level.gd
80:12 - and there we have process with Delta
80:16 - for this one we have two things we are
80:20 - updating the rotation and then we are
80:23 - setting the position
80:24 - we only need to use Delta for one of
80:26 - them when we're updating the rotation
80:28 - this one we want to multiply with Delta
80:31 - and now remember the rotation is going
80:34 - to be incredibly slow because Delta is
80:36 - such a low number it's actually now we
80:39 - have a very very very minor rotation
80:43 - to make this more noticeable let's
80:45 - change this to I know 60.
80:49 - that is more visible and once again this
80:51 - rotation is now frame rate independent
80:53 - we do not need to apply Delta for this
80:58 - if statement where we are updating the
80:59 - position because this one is not a
81:02 - change in Movement we are simply setting
81:04 - the position of the frame to X being
81:06 - zero we are not continuously updating
81:09 - the movement we are only doing this once
81:11 - because of that we are not going to need
81:13 - Delta time in the future we are also
81:16 - going to encounter quite a few functions
81:18 - that apply the movement with Delta time
81:20 - automatically in build so quite often
81:23 - you don't have to think about Delta time
81:25 - at all but it is a really important
81:27 - concept you are going to see it fairly
81:29 - often and it is super important to
81:31 - understand so I hope this part was
81:33 - useful a really important part for any
81:36 - game is player input so let's talk about
81:38 - that
81:39 - to capture any kind of input in Godot
81:42 - there are two steps number one we have
81:45 - to create an input map basically what
81:47 - this one is doing is it allows you to
81:50 - capture different kinds of inputs and
81:52 - store them under a certain keyword for
81:54 - example we could get the left key on the
81:56 - keyboard and the a key and store them
81:59 - both under the left keyboard inside of
82:01 - the input map that way we can access
82:03 - both of these keys inside of the game
82:05 - very easily we could also account for
82:07 - the mouse joysticks controllers
82:09 - basically anything
82:11 - once we have all of that we have to
82:13 - access the input for that Godot has an
82:16 - input object and this is allowing us to
82:18 - capture various kinds of inputs
82:20 - all combined this should be quite easy
82:22 - to implement
82:23 - once again here is the project we have
82:26 - created so far and I want to get started
82:28 - by creating an input map for that we
82:31 - have to go to the top there is project
82:33 - and there we have project settings
82:35 - if you look at the top there we have an
82:38 - input map and right now it's completely
82:40 - empty for that we have to create a new
82:43 - action first of all this would be a
82:45 - category that can capture different
82:46 - kinds of inputs
82:48 - for example the one we could start with
82:50 - is left
82:52 - now we have one action called left and
82:55 - this action should have a couple of keys
82:57 - Associated for that I want to go all the
82:59 - way to the right there's a plus symbol
83:01 - and there I can add an event
83:03 - and here we have keyboard Keys Mouse
83:06 - buttons dropper buttons and joypad
83:08 - access basically any kind of input
83:11 - now the list for all of them gets quite
83:13 - long because well there are a lot of
83:16 - keys on the keyboard so most of the time
83:18 - you don't go for the list instead
83:19 - instead you click on listening for input
83:21 - and then you press the button on the
83:23 - keyboard that you want so in my case I
83:25 - want to have the left button so I click
83:27 - left
83:28 - and that way we find the key
83:30 - automatically that I can click on okay
83:32 - and now we have the left physical button
83:34 - this is the left key on the keyboard we
83:37 - can also add a second key to this action
83:39 - which I do Again by clicking on plus and
83:42 - the other key I want to add is the a
83:44 - button so I just click on a and click on
83:47 - OK
83:49 - with that we have left and a and they
83:51 - both represent left inside of the game
83:54 - we are going to add quite a few more
83:56 - actions later on but for now I want to
83:59 - keep it simple so let's close the input
84:02 - map and see how we can use it
84:04 - which is bringing us to the second step
84:07 - we have to access the input map and this
84:09 - is going to happen with code so let's
84:11 - say inside of the level
84:13 - I want to open the code and make some
84:16 - updates to all of this
84:18 - the code we're going to write has to be
84:20 - inside of the process function because
84:22 - this one is going to run on every single
84:24 - frame of the game if we try to run the
84:27 - code for the input in the ready function
84:29 - it wouldn't work because ready is only
84:31 - running for one frame when the game is
84:33 - starting after that it wouldn't do
84:35 - anything so checking input in there
84:37 - would be pointless which means inside of
84:40 - process I'm going to add a few more
84:42 - lines and the most important line is
84:44 - going to be input and you can see Godot
84:47 - is coloring this one already which means
84:49 - this is a special keyword
84:51 - to understand what it's doing I think
84:54 - the best way to start this is to look at
84:56 - the documentation and for that Godot is
84:59 - amazing because if you hold Ctrl or
85:01 - command and you click on input then
85:04 - Godot is opening the inbuilt
85:06 - documentation
85:07 - and then there you can read anything
85:09 - that you could possibly need about the
85:12 - input object there's quite a bit so let
85:14 - me extend the entire thing
85:16 - and there are all of the methods that
85:19 - you have on the input object a really
85:21 - easy one if I scroll down a bit is is
85:24 - action pressed this one is simply
85:26 - checking if a certain action has been
85:28 - triggered or pressed on the keyboard
85:30 - let's use this one for that I'm going to
85:33 - stop using this in full screen mode and
85:36 - go back to the level on input I want to
85:39 - run a method so I add Dot and then is
85:42 - action
85:43 - there we can choose just pressed just
85:45 - released or simply pressed I want to go
85:47 - with is action pressed
85:49 - and now we can look for the various
85:50 - actions the dough has a couple of
85:53 - predefined ones although all the way at
85:55 - the top we have the one that we created
85:57 - which is called left
85:59 - and now whenever we are pressing the
86:02 - button or rather whenever the player is
86:04 - pressing the button this is going to
86:06 - return a Boolean that says either true
86:08 - or false true if the button is pressed
86:10 - and Falls if it isn't pressed which
86:13 - means we can simply print all of this
86:14 - and we should see either true or false
86:18 - let me run the code and now I get false
86:20 - because the key isn't pressed but if I
86:22 - click on the left key or on a we're
86:26 - getting true which means we can register
86:29 - for the key press
86:31 - oh this one is working really well
86:33 - in case you're wondering if I return to
86:36 - input and look at the method we have
86:39 - just used
86:41 - there we go is action pressed what's the
86:44 - difference between is action pressed and
86:46 - is action just pressed
86:48 - for that you can simply click on the
86:50 - method and then you get the entry inside
86:52 - of the documentation the difference
86:54 - basically is that is action just press
86:56 - is only checking the action of pressing
86:59 - the button which means if the player is
87:01 - pressing a button and holding the button
87:02 - down we are only getting true once
87:04 - whereas is action pressed we are
87:08 - checking the button being pressed down
87:10 - so if the player holds down the button
87:12 - we keep on getting some kind of output
87:15 - the difference is somewhat subtle but it
87:19 - can be quite important if you play
87:21 - around with this it should become fairly
87:23 - straightforward
87:24 - and with that we have the basics of
87:27 - keyboard input all we have to do now is
87:29 - to expand all of this and then we can
87:31 - move the player at least in a very
87:33 - rudimentary sense
87:35 - first of all inside of project project
87:37 - settings I want to keep on working
87:39 - inside of the input map first of all I
87:42 - want to add a few new actions
87:44 - besides left I also want to have a right
87:46 - I want to have up and I want to have
87:50 - down this is going to cover the keys to
87:53 - move the player on top of that I want to
87:55 - have a primary action action
87:59 - this would be the left Mouse button or
88:01 - the spacebar to shoot a laser later on
88:03 - although there's still quite a bit of
88:05 - ground to cover before we reach that
88:06 - stage but first of all we have to add a
88:10 - few keys to all of these actions and I
88:13 - would recommend that you are doing this
88:15 - yourself but I'm going to add a proper
88:17 - exercise later
88:18 - although this shouldn't be too hard so
88:20 - let's just go through it
88:22 - for the right action I'm going to press
88:24 - right on the keyboard or I want to press
88:27 - e on the keyboard
88:29 - next up for up I want to press up on the
88:32 - keyboard click on OK or I want to press
88:35 - W on the keyboard and click ok
88:37 - or down I want to press down on the
88:40 - keyboard and I want to press s on the
88:43 - keyboard
88:44 - with that we can move around next up we
88:48 - need primary action this one is
88:50 - triggered either by the spacebar this
88:52 - one is easy to capture all you have to
88:53 - do is press space and there we go we
88:55 - have the spacebar
88:57 - capturing the mouse buttons is a tiny
89:00 - bit more difficult because I couldn't
89:01 - just click in there oh well I actually
89:03 - can but I didn't know I could do that so
89:07 - instead of doing that you could simply
89:09 - look at Mouse buttons and there's
89:10 - leftmost button right Mouse button
89:12 - middle Mouse button and so on
89:14 - I want to get the left Mouse button
89:16 - so I click on OK and there we go now we
89:19 - have a ton of keys that we can work with
89:21 - now back in the code let me move back to
89:24 - the editor I don't want to move this
89:27 - Sprite that we have created earlier
89:29 - instead I want to move the player and
89:32 - for that I want to clean things up a bit
89:34 - I don't need the laser image anymore so
89:37 - I'm going to get rid of this and this is
89:39 - brighter deep for the grenade we can
89:40 - also get rid of that way we are left
89:43 - only with the player image
89:45 - on top of that inside of the level I
89:49 - want to attach an instance of this
89:50 - player so with level selected I'm going
89:53 - to click on the Chain symbol and then
89:55 - attach the player and let's just move
89:58 - them somewhere there so we see what's
90:01 - going on
90:02 - now with that I want to give the player
90:05 - a script and the script is going to go
90:07 - on the player node 2D not on the image
90:10 - itself the reason for that is later on
90:13 - this node is going to get a whole bunch
90:15 - more children and we want to move all of
90:18 - them together
90:19 - for that we have to move only the parent
90:21 - node and since we apply the same
90:22 - transform to all of the children we are
90:25 - moving all of them if we move the parent
90:26 - which means the player is going to get a
90:29 - script once again we get a dialog to
90:32 - create a new script and the one thing I
90:35 - should have mentioned earlier when you
90:37 - click on template you either have
90:39 - default and this one includes the ready
90:41 - function and process whereas if you have
90:43 - empty it doesn't include anything except
90:46 - the extend statement for the inheritance
90:49 - I am going to go with empty because I
90:51 - like to start clean but you can choose
90:52 - whatever you want
90:54 - on top of that for the path I want to
90:56 - save this script so player.gd in the
90:59 - same folder where I have the scene for
91:01 - the player which I already have so I can
91:03 - click on open and create
91:06 - there we go now the player has a script
91:09 - to check for input once again we will
91:11 - need the process function
91:15 - and first of all in there I want to get
91:17 - the input
91:19 - and this I can do in a couple of
91:22 - different ways although there's one
91:25 - method that is the most succinct and the
91:27 - easiest to use let's have a look at
91:29 - input because in there if I scroll all
91:32 - the way up we have a whole bunch of
91:35 - methods that we can use and let me
91:36 - extend this window a bit so we can see
91:38 - things better
91:40 - the method that is going to be most
91:41 - useful for us is called get Vector if I
91:44 - click on that we get a bit more detail
91:47 - this method is designed for top-down
91:49 - movement basically what it wants is four
91:52 - different actions one for Negative X or
91:55 - left then positive X so right after that
91:58 - negative Y and positive y
92:01 - which would be up and down we could also
92:04 - add a dead zone but we don't need to so
92:06 - I'm going to ignore it
92:07 - once we have these four actions the
92:11 - dough is going to return a vector and
92:13 - this Vector is going to give us the
92:14 - movement
92:15 - for example if the user only pressed the
92:17 - negative X action we will get a vector
92:20 - that points at negative one and zero so
92:22 - we are just going to the left no up or
92:24 - down if you just read these things on
92:27 - your own I think especially at this
92:28 - stage this is probably a bit confusing
92:30 - and when you get started with coding
92:32 - reading documentation can be a bit
92:34 - difficult but if you have a bit of
92:36 - practice all of this should become quite
92:38 - easy to understand but well it does take
92:41 - some time to get used to it
92:43 - anyway though I want to minimize this
92:45 - window and work inside of the player
92:48 - to get the input
92:50 - I first of all want to create a new
92:52 - variable let's call it VAR Direction
92:55 - and this direction I get with input and
92:59 - then dot get underscore Vector that is
93:02 - the method we just looked at this one
93:04 - and now we have to go through the
93:06 - different actions for the four
93:08 - directions
93:09 - we have to start with negative X which
93:12 - is a fancy way of saying left
93:14 - then we need positive X which is just
93:17 - right then we need negative Y which is
93:20 - up and finally we needed positive Y
93:22 - which is done once we have all of those
93:26 - good old stops complaining and we are
93:28 - getting a vector
93:30 - to make sure this is working let's print
93:32 - what we are actually getting from
93:33 - Direction
93:35 - and before I run all of this inside of
93:38 - the level I want to comment out the
93:40 - print statement so we only see the
93:42 - output for the direction and it's not
93:44 - going to get too confusing
93:46 - let's run all of this and now by default
93:48 - we get 0 and 0 because I'm not pressing
93:51 - anything however if I press the left key
93:54 - or I press a then we get negative one
93:57 - because this is now telling the game
93:59 - that we want to move in the left
94:01 - Direction I can also press up or down or
94:05 - right or two keys combined then we get a
94:08 - slightly less pretty Vector but it
94:10 - certainly works
94:11 - the same would also work with wasd we
94:14 - get pretty much the same output
94:16 - this is looking really good
94:19 - which means with all of that we can get
94:22 - the input and then we just have to use
94:24 - it to move the player to actually move
94:27 - the player then we have to Target the
94:29 - position and once again I think for this
94:33 - it's easiest to have the inspector open
94:35 - because what we ultimately want to
94:38 - change is the position of the node 2D
94:40 - and this we can Target with the position
94:43 - which by itself is going to be a vector
94:45 - all we have to do is position plus equal
94:48 - the direction and then times some kind
94:52 - of speed let's say 200. on top of that
94:55 - what I covered in the last part do not
94:58 - forget Delta whenever you move anything
95:00 - continuously now once we have all of
95:02 - that I can run the code again and now we
95:05 - can move the player around
95:08 - it's quite slow but it definitely works
95:12 - so I am quite happy with that it might
95:15 - be a good idea to increase the speed to
95:17 - let's say 500 and now we can move much
95:21 - faster this is feeling better
95:23 - but this will be the basics of movement
95:27 - later on we are going to change that to
95:29 - account for physics but for now this is
95:32 - working just fine that being said I do
95:35 - want to add one more thing though
95:36 - because right now we are just able to
95:39 - move the player wouldn't have any way to
95:42 - input a shooting mechanic for that I
95:45 - want to add a bit more code
95:46 - let's call it the laser shooting input
95:51 - I want to check if the player is
95:53 - pressing the primary input I need an if
95:55 - statement and this is going to look very
95:57 - similar compared to what we have done
95:59 - inside of this print statement I want to
96:01 - check the input and then is action
96:03 - pressed which means inside of the player
96:06 - I want to get the input and then is
96:09 - action for this one you could use either
96:11 - is action just pressed or is action
96:13 - pressed later on we are going to have a
96:16 - timer to the later laser shooting anyway
96:18 - so the difference here is negligible but
96:21 - the action I'm looking for is primary
96:23 - action
96:24 - if that is the case for now I simply
96:27 - want to print
96:28 - let's say shoot laser
96:31 - and now I can run the game again now if
96:34 - I click with my mouse button I can shoot
96:36 - laser or if I press space we're also
96:38 - getting shoot laser so this is working
96:40 - just fine
96:41 - and that is covering all of the basics
96:44 - of keyboard input all we have to do now
96:46 - is do an exercise and then we are done
96:49 - I want you guys to create another action
96:51 - in the input map and call it secondary
96:54 - action
96:55 - the associated keys are control left
96:58 - control to be more specific but it
96:59 - doesn't really matter and also the right
97:01 - Mouse button
97:03 - if that action is triggered print should
97:05 - grenade and all of the code should be
97:07 - inside of the player right below the
97:09 - laser most of you now and try to figure
97:12 - this one out
97:16 - first of all I have to update the input
97:18 - map this I'm doing inside of project
97:20 - input map I want to add another action I
97:24 - call this one secondary action
97:27 - now that I have the action I have to add
97:30 - a couple of keys I want to add control
97:33 - so I just click control on the keyboard
97:36 - besides that I'm going to click on the
97:38 - plus again and I can
97:42 - click left Mouse button in the field and
97:44 - then select right Mouse button this is
97:45 - the one we're looking for
97:47 - that is going to update the input map so
97:50 - now I can close it after that I can
97:52 - reopen the player code and now we need
97:55 - to do something that is pretty similar
97:57 - to this
97:59 - I want to add an if statement and if
98:02 - input is action pressed
98:06 - I am looking for this secondary action
98:09 - if that is the case I want to print
98:12 - shoot grenade
98:15 - the specifics of what I print really
98:17 - don't matter we're going to change this
98:18 - later on quite a bit anyway but for now
98:20 - this should be all we need let's try
98:24 - and if I right click we get shoot
98:26 - grenade if I press on Ctrl we also get
98:29 - shoot grenade
98:31 - if I press space we still get to laser
98:33 - and we can also still move around so all
98:35 - of this is coming together quite nicely
98:36 - perfect
98:38 - before we continue I want to cover some
98:40 - more minor topics specifically I want to
98:43 - talk more on notes even more
98:45 - specifically I want to talk about how to
98:47 - interact with nodes via code we have
98:50 - already seen some of that
98:52 - to bring up an earlier slide you can
98:54 - Target nodes in two ways either with get
98:57 - node or with a dollar sign the dollar
98:59 - Note 1 is the much better one because
99:01 - it's just more concise
99:04 - we are going to explore this further
99:06 - specifically how to Target different
99:08 - nodes that are a bit more nested so if a
99:11 - node has more parent nodes or more
99:13 - children nodes how can we target various
99:14 - notes in there I think that's a really
99:16 - important thing to understand
99:18 - what you can also do is you can give a
99:21 - node unique names especially for a
99:23 - complex scene this can be incredibly
99:25 - useful
99:26 - also very easy to implement so quite a
99:29 - useful thing
99:30 - on top of that what I really want to
99:32 - emphasize is that once you capture a
99:34 - node inside of your code you can access
99:36 - the properties and the methods of this
99:39 - node you basically treat a node like a
99:42 - class that has properties and methods
99:44 - and you can work with them because
99:45 - that's basically what's happening
99:48 - here we are back in the level and let's
99:50 - see what we already have in terms of
99:53 - working with the nodes inside of the
99:55 - code so if I look at the level I can
99:58 - open the code in there and we can see we
100:01 - have already a couple of interactions
100:03 - most importantly we're getting the logo
100:05 - node this bright we have created earlier
100:07 - and we are changing the rotation and the
100:10 - position
100:11 - notice here that we are influencing and
100:15 - measuring some of the inbuilt properties
100:17 - like position and we are changing a
100:20 - custom attribute that we have added like
100:22 - pause so if I look inside of logo we
100:25 - have pause something we created
100:27 - ourselves and we have the position this
100:29 - is part of the node itself we could do
100:32 - the same thing with the player although
100:34 - for this part we don't really need it
100:36 - now what I first of all want to cover is
100:40 - how to work a bit more with different
100:42 - node paths for example let me add a few
100:45 - more notes so with the level node
100:47 - selected I press Ctrl a or I could also
100:50 - click on the plus symbol and I want to
100:52 - add another Sprite 2D
100:55 - however with this Sprite 2D selected I
100:58 - want to click on Ctrl D to duplicate it
101:01 - and then set the second Sprite 2D as the
101:04 - child of this Sprite 2D
101:06 - so we have never spread 2D with another
101:08 - child in this process I'm going to do a
101:12 - few more times
101:15 - that way we have Sprite 2d4 as a child
101:19 - of a couple of other nodes
101:22 - this isn't the most useful setup but for
101:25 - the purposes of this video it's going to
101:27 - be quite useful because let's say you
101:30 - wanted to Target this Sprite to D4 and
101:32 - let me rename it to Target so it's a bit
101:35 - easier to understand what's going on
101:37 - let me just drag it somewhere down there
101:40 - and there we can see we have a longer
101:42 - path we have Sprite 2D that is the first
101:46 - spriter D the first child of the level
101:48 - node because right now the code is for
101:50 - the level
101:51 - inside of this spriter D we have another
101:53 - spread to D this would be Sprite to D2
101:55 - that's this one then we have another
101:57 - Sprite 2D spriter D3 this one and
102:01 - finally we have the target the final
102:03 - note if your scene becomes more complex
102:06 - and you have more nested nodes this is
102:09 - the kind of thing you will see quite
102:11 - often but it's still not too bad and for
102:15 - example what you could do right now is
102:16 - simply print
102:18 - the node and let's not do this in the
102:20 - process node and instead put all of that
102:23 - inside of the ready function that way we
102:25 - don't clutter the output
102:27 - if I now run this
102:29 - we get
102:31 - inside of the output Target and then a
102:34 - spread to the somewhere with a unique ID
102:38 - meaning all of this is working just fine
102:41 - now if you feel like this is becoming
102:44 - too hard to read which it might actually
102:46 - become you can give this target node a
102:49 - unique name to give it one you have to
102:51 - right click on it and then access as a
102:54 - unique name if I click on that
102:56 - we have a percentage sign on the right
102:59 - side of it what this one means if I now
103:03 - delete this path and drag the target
103:06 - node again in there we are now getting a
103:09 - percentage sign and then the target
103:12 - although the result is going to be the
103:14 - same
103:15 - we are still getting the target which is
103:17 - a Sprite 2D with some unique ID
103:20 - basically what this one is doing is it
103:23 - gives this target a unique name that you
103:25 - can access anywhere inside of the scene
103:28 - for example if I wanted to work inside
103:30 - of the logo
103:32 - where we are simply moving a Sprite
103:34 - right now I could also Target the same
103:37 - node I can simply let's say I want to
103:40 - have the percentage sign then the target
103:44 - that will give us the entire node and on
103:47 - that I could for example get the
103:48 - position if I spell this correctly this
103:51 - would also help a lot and now if I run
103:54 - all of this again
103:55 - we are getting a position which is zero
103:59 - and zero with this kind of setup it's
104:01 - much easier to work in larger scenes
104:03 - although don't overuse it if you add
104:06 - this kind of thing to every single node
104:07 - the system kind of becomes pointless so
104:10 - use the sparingly but in certain
104:11 - situations this can be incredibly useful
104:14 - that being said in this case this is not
104:17 - useful at all because of that I want to
104:19 - delete all of the stuff we have just
104:21 - created so I'm going to lead all of
104:23 - these notes and get rid of the print
104:27 - statement inside of logo GD and level GD
104:31 - because the target node doesn't exist
104:33 - anymore the last thing I want to cover
104:35 - is what if you have a child node like
104:39 - this logo 2D with a script and you want
104:42 - to access something inside of the parent
104:44 - in this case the level for example right
104:47 - now inside of our level we have a test
104:49 - array with a couple of entries and I
104:53 - want to access this from inside of the
104:55 - logo which has this script attached to
104:57 - it that you can also do quite easily all
105:01 - you have to do is well you basically
105:03 - just have to drag the node into the code
105:05 - and then you see what's going to happen
105:07 - we get a double dot
105:11 - this is the signing Guido to get the
105:13 - parent node and on that we can Target
105:17 - certain things in this case inside of
105:19 - level GD we have a test array this is
105:22 - just a property of this node so I can
105:25 - get test array all of this I want to
105:29 - print so we can actually see it
105:31 - also let me get rid of any other print
105:34 - statement for example here we have test
105:37 - array 0 that we are printing which would
105:40 - be confusing right now inside of the
105:42 - player we are only printing if we are
105:44 - shooting the laser or the grenade so
105:46 - those are fine
105:47 - now if I run the code again
105:49 - we get the test array inside of the
105:53 - output and this is because we're getting
105:55 - the parent node with the property on top
105:58 - of that what you can also do is you can
106:01 - give this node a custom function and
106:03 - call it from any of the children or the
106:06 - parents
106:07 - something we haven't done yet actually
106:09 - so let's create a custom function so far
106:12 - we only use the inbuilt ones but you can
106:15 - totally create your own function
106:17 - simply type func and then type a custom
106:19 - name
106:20 - for example test function
106:25 - then you need the parentheses in there
106:27 - you could add parameters although in
106:28 - this case I don't have any and I simply
106:31 - want to print
106:32 - this is a test function this function I
106:37 - now want to call from inside of logo.gd
106:41 - I want to get the parent node and for
106:43 - this one I need quotation marks and then
106:45 - dot dot the same thing we have done up
106:47 - here
106:48 - the quotation marks you will need when
106:50 - you use the dot dots if I remove them we
106:53 - would get some weird output
106:55 - so when you use a parent node you would
106:58 - need the quotation marks
107:00 - although other than that we can simply
107:02 - call the test function and since we now
107:05 - want to call the function don't forget
107:07 - the parentheses at the end
107:09 - with that I can run all of this and
107:11 - there we get this is a test function
107:13 - looks pretty good and now inside of the
107:17 - level we could use this to do basically
107:19 - anything inside of this script for
107:21 - example we could change the position we
107:23 - could change the rotation we could
107:25 - change the test array whatever we want
107:27 - to do and this is something really
107:29 - important that you have to understand so
107:31 - let me emphasize it
107:33 - one of the most important aspects of
107:36 - Godot if you want to master it is to
107:38 - make notes communicate with each other
107:40 - what we have done so far is we have made
107:43 - notes work together in the same scene
107:45 - although later on we will also work
107:47 - across multiple scenes
107:49 - there are quite a few tools to make all
107:52 - of this work but I really want to
107:54 - emphasize that making nodes communicate
107:56 - with each other is a fundamental part of
107:59 - Godot and you have to understand how
108:01 - this works
108:03 - I suppose for now this isn't too
108:05 - difficult but later on we're going to
108:07 - expand on this system quite a bit so
108:09 - definitely play around with this and
108:11 - make sure you can access different nodes
108:12 - and change their properties from
108:14 - anywhere inside of a scene at this point
108:17 - you should be able to do just that
108:20 - for this section we are going to have a
108:22 - slightly different exercise it's a much
108:24 - more open-ended I want you guys to play
108:26 - around with the notes and try to change
108:28 - and update other nodes basically make
108:32 - sure that you understand the notepads
108:33 - and how you can use them to access
108:35 - properties and methods on other nodes
108:37 - there isn't really a specific goal with
108:39 - all of this just play around and see
108:42 - what you can change what you can access
108:43 - what properties you can work with it's
108:46 - really important to understand
108:48 - and once you understand all of that we
108:50 - can work with the actual character
108:52 - movement so in the next part we will
108:54 - talk about physics
108:55 - let's talk about one of the most
108:57 - important parts so far and that is
109:00 - physics
109:01 - this is incredibly important for any
109:04 - kind of movement
109:06 - to illustrate why I want to cover some
109:09 - problems we have right now
109:11 - so far we are currently just moving
109:15 - images which is fine but also limited
109:18 - because an image cannot Collide or slide
109:21 - along a surface essentially they don't
109:23 - have any physical properties
109:26 - which would be a massive issue for a
109:29 - game to fix that we have to use
109:31 - Collision bodies and physics bodies
109:34 - those are good nodes that can work with
109:37 - all of that
109:39 - and the best way to approach all of that
109:40 - is to look at this straight in good
109:42 - dough
109:43 - here we are back in the editor and I
109:45 - want to create a few more notes
109:48 - let's get rid of sprite 2D and here we
109:51 - can see all of the nodes
109:53 - in a very broad sense you have four
109:56 - different types of notes you have the
109:58 - blue ones those are notes for a 2d game
110:00 - then you have control notes those are
110:03 - notes for the layout we'll cover those
110:05 - to some extent later but this is quite a
110:07 - large topic so this is going to be a
110:09 - separate video
110:10 - we also have 3D nodes and then we have a
110:13 - lot of General nodes for example there's
110:15 - a timer we cover that quite soon
110:16 - actually
110:18 - for now I want to work inside of node 2D
110:21 - because we are making a 2d game and
110:23 - there we have lots more nodes but at the
110:25 - top we have Collision object 2D if I
110:28 - expand that we get physics body 2D and
110:31 - we get an area 2D node we can also
110:34 - expand physics body 2D and there we have
110:36 - a static body 2D a character body 2D and
110:39 - the rigid body 2D
110:41 - we can expand things a bit more but we
110:44 - don't need to these four nodes are
110:47 - incredibly important so I want to talk
110:49 - about them in quite some detail there
110:52 - are two major parts for every one of
110:54 - these nodes that you have to be aware of
110:56 - number one is what they do and number
110:58 - two is how you would move them because
111:01 - now that we are working with physics the
111:03 - movement gets a bit different most of
111:05 - the work is done by the dough so we're
111:07 - not going to do anything complicated the
111:09 - easiest note that we can talk about is
111:11 - area 2D this is just an area that can
111:14 - check if another body has entered this
111:17 - area you can also move by changing the
111:19 - position which is quite easily done a
111:22 - good example for this one would be if
111:24 - the player is entering a house the house
111:27 - would be an area 2D and this area 2D can
111:30 - check if a body has entered
111:32 - besides that when we are creating the
111:34 - lasers later on those will also have
111:37 - areas attached to them and those areas
111:39 - are going to check if the laser is
111:41 - colliding with an enemy or wall or an
111:43 - obstacle or something like that
111:45 - next up we have a static body 2D the
111:49 - name gives you a pretty good idea of
111:50 - what this one is doing it's a static
111:53 - body that is colliding with other bodies
111:55 - as a consequence there's no movement for
111:57 - this one I guess in theory you could be
112:00 - moving it but you're not supposed to
112:02 - examples for this one would be literally
112:05 - any static object in the game any kind
112:07 - of wall any kind of obstacles and what
112:09 - we've already created the bad is going
112:11 - to be a static body 2D which means later
112:14 - on other bodies can collide with them
112:16 - but they cannot move themselves
112:19 - they are the easiest kind of collidable
112:21 - body we have
112:23 - next up we have a rigid body 2D this is
112:27 - a body that moves purely via physical
112:28 - forces
112:30 - think of it like a cannonball if you
112:33 - want to move them all you have to do is
112:34 - set a velocity when you create them and
112:37 - then the body is going to move on its
112:38 - own
112:39 - we are not going to use this very much
112:42 - but when we are going to create the
112:43 - grenade later on we are going to use a
112:45 - rigid body 2D because for the grenade
112:48 - all we have to do is set a velocity and
112:50 - then it's going to move on its own
112:52 - finally the most important body is
112:54 - character body 2D this is a moving body
112:58 - controlled by code and you are moving
113:00 - this via inbuilt methods there are a
113:04 - couple depending on what kind of
113:05 - collision you want I'll cover this in
113:07 - just a bit but essentially any entity
113:09 - controlled by code is going to be a
113:11 - character body 2D this includes the
113:13 - player and all of the enemies and when I
113:16 - say an entity controlled by code I mean
113:18 - some complex movement for example the
113:21 - player has a complex movement of a
113:22 - direction that we get via input and then
113:25 - a certain kind of speed
113:27 - the enemies would also have some
113:29 - slightly more complex movement although
113:31 - for now I covered a whole bunch of
113:33 - theory so let's return to the editor and
113:35 - let's do something more practical
113:37 - back in Godot I want to create a couple
113:40 - of physics bodies and let's start with
113:43 - the easiest one I want to update the bad
113:46 - because right now we have a no too deep
113:49 - as the parent and then we have three
113:51 - Sprites attached
113:52 - to update this I want to change the
113:55 - parent node so this node 2D I want to
113:57 - turn into a static body 2D for that I
114:01 - have to right click on it and there we
114:03 - have change type
114:06 - right now we have an o2d this is not
114:08 - what I want instead I want to go to node
114:10 - 2D Collision object and physics body 2D
114:13 - and there we have a static body 2D
114:16 - alternatively you could also simply type
114:18 - in static body 2D and you will get the
114:20 - same result
114:22 - so now we get a static body 2D
114:25 - you can see that the icon has changed
114:28 - but so far not much has happened the
114:31 - other thing we got is a warning symbol
114:34 - which is saying that this node has no
114:37 - shape so it cannot Collide or interact
114:39 - with other objects consider adding a
114:42 - collision shape to D or a collision
114:44 - polygon 2D as a child to Define its
114:46 - shape
114:47 - what that means is that whenever you
114:49 - have any physics body you have to also
114:52 - attach a shape because right now this
114:55 - Collision body doesn't know what its
114:57 - actual body is or more specifically it
115:00 - doesn't know what the shape of its body
115:01 - is to fix that we need to add another
115:04 - node which means I click on the plus and
115:07 - what we need is a collision shape 2D or
115:10 - a collision polygon 2D
115:13 - is giving you predefined shapes whereas
115:17 - a collision polygon 2D allows you to
115:19 - create more flexible arrangements for
115:22 - now though since the bad is a really
115:24 - easy shape I want to have a collision
115:25 - shape 2D
115:27 - if I now click on enter we create
115:29 - another child which is a collision shape
115:31 - 2D although now we are getting another
115:33 - warning
115:35 - which is saying that a shape must be
115:37 - provided for Collision shape 2D to
115:39 - function
115:40 - to add this shape we have to look at the
115:42 - right there inside of the inspector we
115:45 - have a shape property right now it says
115:47 - empty but if I click on it we can select
115:50 - a set of shapes the one I want to look
115:54 - at is a new rectangle shape 2D if I
115:56 - click on that we get a small blue area
116:00 - on top of that if we look at our nodes
116:03 - we don't have an error anymore which is
116:06 - perfect
116:07 - what you now have to understand is that
116:09 - this blue area here that we can move
116:11 - around
116:12 - is the shape of this static body which I
116:15 - called bad right now
116:17 - to make all of that work properly I want
116:19 - to select it again and scale it up so
116:22 - that it fits the entire physical shape
116:25 - of the bed which right now is simply the
116:28 - image
116:29 - you can simply direct dots also what you
116:32 - can do if you select one dot and hold
116:34 - alt you are scaling it on either axis so
116:39 - vertical or horizontal is fine
116:41 - basically what you want to end up with
116:43 - is some kind of shape that covers what
116:45 - you want to have as the actual physical
116:47 - body something like this looks pretty
116:49 - good now I want to save the scene and if
116:52 - I look at the level again in here we
116:54 - don't have the bed right now
116:56 - so with the lever selected I want to
116:58 - click on the Chain symbol to add a child
117:00 - scene and add the bad
117:03 - and let's move it here ish
117:07 - you can still see we have the blue
117:09 - outline in the game though this is not
117:11 - going to be visible
117:13 - this blue area is purely for debugging
117:15 - purposes so you know what the actual
117:17 - Collision shape is
117:19 - that being said though if I run the game
117:21 - again I can move the player but we have
117:24 - no Collision
117:25 - the reason for that is that the bad has
117:28 - a collision shape but the player is just
117:31 - an image and images cannot Collide so we
117:34 - have to update the player and then we
117:36 - have an actual Collision
117:38 - which means once again we have to update
117:41 - a node in this case the player is also a
117:44 - node 2D but this is not what I want
117:46 - anymore
117:48 - so I right click on it and I want to
117:51 - change the type
117:52 - I don't want a node 2D instead I want to
117:55 - have a character body 2D
117:59 - with that once again we get a different
118:01 - symbol and a warning icon
118:04 - this body has no shape to fix that I
118:07 - want to add another node which is going
118:09 - to be a collision shape 2D I have this
118:12 - one in my recent tab I can click on
118:14 - create now we get another warning that
118:17 - there's no shape for this body and for
118:19 - that we have to look on the right where
118:21 - we can add a shape
118:23 - now for this one the shape is getting a
118:25 - bit more complicated because the player
118:28 - itself doesn't have a regular shape
118:30 - although we can simplify things a bit
118:33 - if you look at the player and squint a
118:35 - bit you get more or less a round shape
118:38 - which is what I want to go with
118:41 - which means for the shape I want to have
118:44 - a circle shape 2D
118:47 - this has now giving me a circle and this
118:49 - circle I want to expand a bit to
118:51 - something like this and on and on top of
118:55 - that I want to get the player image and
118:57 - move it so it's roughly in the middle I
119:00 - would recommend to always keep the
119:02 - Collision shape around the center so
119:05 - right now this character body has a
119:08 - center around the position 0 and 0. and
119:10 - this 0 and 0 I don't want to change
119:12 - so I keep the Collision shape around
119:14 - this position and then move the player
119:16 - to align with it
119:18 - with that we have a collision shape
119:21 - this sort of setup where you have a
119:25 - character body 2D and image and then a
119:28 - collision shape is incredibly common in
119:30 - good dough basically any kind of game
119:33 - for any scene is starting with something
119:35 - like that
119:36 - way you get collisions you get movement
119:38 - and you can see what's going on Via the
119:40 - image
119:42 - and if you don't have movement like for
119:44 - the bad you would have a static body 2D
119:46 - then an image or multiple images and
119:49 - then another Collision shape so this
119:51 - kind of setup is something you really
119:53 - have to understand
119:55 - that being said right now if I run the
119:57 - code again
119:58 - I still don't get any kind of collision
120:02 - so something still isn't working
120:06 - the reason why that is if I look at the
120:08 - player and open the code we get one
120:12 - problem and this is we are extending a
120:14 - node 2D
120:17 - this is because early on we created a
120:20 - note 2D and attached all of the code but
120:23 - we changed the node now we don't have a
120:25 - node to D anymore instead we have a
120:27 - character body 2D so we don't want to
120:29 - extend a note 3D we want to extend a
120:32 - character body 2D
120:34 - now that we have that I can run the code
120:36 - again and we still don't get a collision
120:40 - that is because we are right now
120:43 - updating the position which is not how
120:46 - you are supposed to use a character body
120:48 - 2D as a consequence let me get rid of
120:51 - this position also I want to extend the
120:54 - code window so we can see a bit better
120:55 - what's going on
120:57 - to update a character body 2D you will
121:00 - want to use a specific method that is
121:02 - called move and slide
121:05 - you don't have to add any kind of
121:07 - argument this one works by itself
121:10 - however what you also have to do is to
121:13 - update a velocity
121:16 - this velocity is a property of a
121:19 - character body to D you always have it
121:21 - but once you overwrite it move and slide
121:23 - is picking it up you move the body
121:27 - so in our case we want to set the
121:30 - velocity which is going to be a vector
121:31 - 2D
121:32 - do the direction and then multiply it
121:35 - with some kind of speed let's say for
121:37 - now I want to go with 500.
121:39 - now if I run the game again
121:41 - we are getting a collision
121:44 - and this is feeling much better
121:50 - let's talk about this setup a bit more
121:53 - and the best way to think about it is to
121:55 - look at all of this inside of the
121:56 - documentation for that I am going to
121:59 - hold Ctrl or command and click on
122:01 - character body 2D
122:03 - if I do that I get the documentation for
122:06 - a character body 2D
122:07 - and in there you have a lot of
122:10 - information
122:11 - I would recommend you to read this in
122:14 - your own time but for now it's not too
122:16 - important what is really important
122:19 - instead is the velocity this is what I
122:21 - want to First Look at if I click on it
122:23 - we get the current velocity in pixels
122:25 - per second
122:27 - used and modified during calls to move
122:30 - and slide on top of that we also see
122:32 - that the default is Vector 2 0 and 0
122:35 - which means the default velocity for
122:37 - character body 2D is no movement at all
122:40 - and once we're changing the vector 2D of
122:42 - the Velocity to something else move and
122:45 - slide is going to move this body in the
122:47 - direction
122:49 - speaking of which let's click on move
122:51 - and slide this one moves the body based
122:54 - on velocity the property we just looked
122:56 - at
122:57 - and if the body collides with another it
123:00 - will slide along that body
123:02 - you can define a floor but in our case
123:05 - since we have a top-down game we don't
123:07 - need to do that here's a bit more
123:09 - information but for now this isn't too
123:11 - important
123:12 - I guess one more thing that we could
123:14 - look at is that this method returns true
123:17 - if the body has collided and otherwise
123:19 - it returns false which can be useful
123:21 - information but for this tutorial we're
123:24 - not going to use it with that let me
123:27 - scroll all the way to the top and there
123:29 - we can see another way to move a physics
123:32 - body 2D which is called move and Collide
123:35 - this one has some slightly different
123:37 - Collision Behavior but it's ultimately
123:40 - quite similar to move and slide I am not
123:42 - going to cover this one for this
123:43 - tutorial because we don't need it move
123:45 - and slide is what you're going to use
123:47 - most of the time but just keep in mind
123:49 - there are two different ones also if you
123:52 - scroll down a bit further you can see
123:55 - there are lots more methods that you
123:56 - could work with for example you could
123:58 - tell if the body is on the floor is on a
124:01 - wall is on a ceiling stuff like that it
124:03 - can be super useful especially if you
124:06 - create a platformer this is going to be
124:08 - incredibly helpful but for now we don't
124:11 - need it since we are done with this one
124:13 - I want to close this entry inside of the
124:15 - documentation
124:16 - which can do either by right click and
124:19 - close or control and w
124:21 - and let me close the input one as well
124:23 - we don't need this one either
124:25 - so with that back inside of the player
124:27 - we are updating our velocity and we are
124:30 - using move and slide to move this body
124:32 - now that we have that let me minimize
124:36 - the code and return to the level scene
124:40 - first of all I want to clean things up
124:42 - we don't need this logo anymore which
124:45 - means I can click on delete and get rid
124:47 - of it on top of that inside of scenes we
124:51 - have logo GD this script I also want to
124:53 - get rid of
124:55 - video is going to complain that we are
124:57 - using this script inside of a scene and
124:59 - I'm okay with that
125:01 - so now we have the levels we have level
125:04 - GD and level scene we have the object
125:06 - which is the bad and we have the player
125:10 - that is feeling like a much cleaner
125:13 - setup also if you look at the debugger
125:15 - now it's complaining again so let's have
125:18 - a look
125:20 - we have once again the parameter Delta
125:22 - is never used in the function process
125:25 - if I double click on that
125:27 - we get now process Delta is not being
125:31 - used anymore
125:32 - let me minimize the debugger actually
125:34 - this is something I should have covered
125:36 - as well move and slide uses the velocity
125:39 - to move the character body and it
125:42 - automatically includes Delta because of
125:44 - that we don't have to use Delta in this
125:46 - process function at all
125:48 - to indicate that we're not using it the
125:51 - dough wants us to use an underscore at
125:53 - the beginning
125:55 - that way this Delta is still available
125:57 - but we are not using it so now if I run
125:59 - the code again the debugger is happy
126:01 - again
126:03 - although now we're getting an error
126:06 - because we got rid of the logo so the
126:08 - level scene has quite a bit of code that
126:11 - is not relevant anymore
126:13 - inside of the ready function we are
126:15 - using the logo and that's the only thing
126:16 - we are doing in there so let's get rid
126:18 - of all of that
126:20 - same with process actually we can get
126:22 - rid of all of this as well
126:24 - with that I can run the game again and
126:27 - now we have a much simpler setup and
126:30 - this is still feeling good though
126:34 - I guess while we are here we can also
126:36 - get rid of the test function and the
126:37 - test array that way everything is nice
126:40 - and tidy
126:41 - all we have to do now is add an exercise
126:43 - and then we are done with the video and
126:46 - for the exercise we have quite a bit
126:49 - I want you guys to create another scene
126:52 - that is going to be a static object
126:55 - this specifics here don't matter too
126:58 - much basically go through the graphics
127:00 - folder and look at the objects and just
127:02 - see what you want to create as a static
127:04 - object in the end it should look
127:06 - somewhat similar compared to the Belt we
127:08 - made earlier besides that I want you
127:10 - guys to create a moving scene with a
127:12 - drone and this one should move
127:14 - constantly to the right
127:16 - you can find the Drone under the enemies
127:18 - folder inside of Graphics pause the
127:21 - video now and try to implement both of
127:22 - these things
127:26 - back in the editor let's start with a
127:28 - static scene for that I want to create a
127:31 - whole new scene click on other node
127:33 - because now the parent node is going to
127:35 - be a static body 2D
127:38 - first of all in there we have to add an
127:40 - image for that I want to have a Sprite
127:43 - 2D
127:44 - and now for the spriter Deep we have to
127:46 - look at graphics and in there we have a
127:49 - whole bunch of stuff I want to look at
127:51 - objects and for example what we could be
127:54 - looking at is
127:56 - let's say there's a billboard this we
127:58 - could work with and this I want to drag
128:00 - into the texture for the Sprite 2D and
128:02 - there we have a billboard
128:04 - that's a pretty good start next up I
128:07 - want to add a collision shape
128:10 - there we have a collision shape and now
128:12 - this one needs a shape a shape we create
128:15 - inside of the inspector and for this one
128:18 - I think a rectangle would be the best
128:20 - shape
128:21 - and this shape I now have to extend a
128:24 - bit remember here holding down alts
128:27 - let's use scale the thing in either axes
128:32 - and also let me move this you can use
128:34 - the arrow keys to move it by one pixel
128:36 - at a time I think this one is looking
128:38 - good
128:40 - obviously play around with this as much
128:42 - as you like
128:45 - you can fine tune things a lot in here
128:47 - cool with that we have a billboard
128:50 - finally to finish up the scene I want to
128:53 - rename the static body 2D to build board
128:57 - and then save all of this
129:00 - I want to save it inside of scenes there
129:03 - we have objects we already have the bad
129:04 - and now I want to save the billboard in
129:07 - the same folder
129:09 - and that is all we need for the first
129:11 - part of the exercise so back in the
129:14 - level with the level selected I want to
129:17 - add another child node which I can do
129:20 - either by clicking on the Chain symbol
129:21 - or with Ctrl shift and a there we have
129:25 - our billboard I can click on open and we
129:28 - have a billboard
129:30 - you can also transform it inside of this
129:34 - level scene all you have to do is go to
129:36 - transform and then apply for example a
129:38 - rotation
129:41 - something like this now let's run the
129:43 - game
129:44 - and there we have still our Collision
129:47 - this one is looking really good
129:50 - the bad also works so I am very happy
129:53 - with this
129:54 - what is annoying me right now is that
129:56 - the bad is on top of the player and this
129:58 - is because the bad comes after the
130:00 - player inside of the note 3. to fix that
130:03 - I want to move the player below the bed
130:06 - inside of this note 3. if I now run this
130:09 - again this is feeling significantly more
130:12 - realistic
130:14 - later on we're going to work a bit more
130:16 - of the drawing order but this is a much
130:18 - better start with that we have covered
130:20 - the first part of the exercise I can
130:22 - also close the Bad scene and the
130:24 - billboard scene we don't delete them we
130:27 - just close them in the editor you can
130:28 - still access them later on
130:30 - I prefer to have as few tabs open as
130:33 - possible that way things are a bit
130:34 - cleaner to work with now next up we have
130:37 - to create a drone and this one since it
130:40 - is going to move is going to be a
130:42 - character body 2D which means for the
130:45 - first note inside of the scene I want to
130:47 - have a character body 2D
130:50 - once again this character body 2D is
130:52 - going to need a Sprite a Sprite we can
130:56 - find not inside of the objects but
130:58 - rather inside of the enemies
131:01 - there we have a drone and this drone I
131:04 - want to move into the texture
131:07 - that's all we need from the graphics
131:09 - folder and next up we have to add a
131:12 - collision shape for that I have the
131:15 - character body 2D selected click on Ctrl
131:17 - a and add a collision shape 2D
131:22 - for this Collision shape I want to have
131:24 - a custom shape which is going to be a
131:26 - circle shape
131:28 - and if you now look very closely we have
131:30 - a circle shape and this I want to scale
131:33 - up to roughly capture the body of this
131:36 - drone
131:38 - and once again with that we have the
131:40 - basic setup we have a physics body an
131:43 - image and a collision shape with that I
131:45 - can rename things let's call the parent
131:48 - a drone and then save the entire scene
131:52 - for all of this I want to add another
131:54 - folder that I called enemies
131:58 - inside of this enemies folder I want to
132:01 - have my drone
132:02 - and now back inside of the level I want
132:06 - to add with the level node selected my
132:08 - drone which I have all the way at the
132:11 - top
132:12 - and let's move the Drone somewhere here
132:15 - so we can see it perfectly inside of the
132:17 - game
132:18 - cool with that we have a drone and the
132:20 - collision with the player is still
132:22 - working so that's a good start
132:25 - to finish things up we have to move this
132:28 - drone and for that inside of the Drone
132:31 - the Drone is going to get a script
132:34 - meaning I want to attach a new script
132:38 - it should be in the same folder as the
132:40 - Drone which it is right now and for the
132:43 - basic setup I want to have empty
132:46 - I can click on Create and there we go we
132:49 - now have an empty script that is
132:51 - inheriting from a character body 2D to
132:54 - move it we have to do something roughly
132:56 - similar compared to the player which
132:58 - means first of all we will need a
133:00 - process function this one is quite easy
133:02 - func underscore process
133:05 - and we know already we're not going to
133:08 - use Delta so I'm going to add an
133:10 - underscore right away
133:12 - inside of this function we now first of
133:15 - all need a direction then we have to
133:18 - update the velocity
133:20 - and then we have to call move and slide
133:25 - the direction is the easiest because I
133:28 - want this drone simply to go to the
133:30 - right at least for now for that I want
133:33 - to create a new variable call it
133:36 - Direction like we have done for the
133:37 - player except this one is just going to
133:40 - be a vector 2 that has 1 and 0.
133:45 - which basically means we are going to
133:47 - the right
133:48 - we could actually make this a bit more
133:50 - expressive because instead of 1 and 0 we
133:53 - can type Dot and in all uppercase
133:54 - letters write
133:56 - the outcome is going to be the same
133:58 - now that we have that we can update the
134:01 - velocity we have to Target the velocity
134:03 - property
134:04 - and then get the direction and multiply
134:07 - it with some kind of speed
134:10 - for this one let's go with 400.
134:13 - finally all we have to do is call move
134:16 - and slide and we should be good to go
134:19 - let's run the game
134:21 - and there we go we get the Drone moving
134:24 - and also we have collisions with the
134:26 - player let's try all of this again so
134:29 - you can see a bit better so if the Drone
134:31 - is colliding with the player it's trying
134:33 - to wiggle around it
134:35 - I guess making the movement speed a bit
134:37 - lower to 100 is going to visualize all
134:39 - of this better now we have a very slow
134:41 - drone and the player can stop it so
134:44 - there's collision between these two
134:45 - objects
134:47 - and if the player is
134:50 - simply blocking a part of it then a
134:53 - drone slides along the player which is
134:56 - what we're getting because we are using
134:58 - move and slide
135:00 - and this was a super important lecture
135:02 - so I'm going to finish it here but
135:04 - definitely play around with this in your
135:06 - own time it's really important to
135:07 - understand
135:08 - once again to finish up this video this
135:11 - kind of setup is fundamental to
135:13 - basically any kind of game in Godot you
135:16 - have some kind of physics body then an
135:18 - image and then a collision shape this is
135:19 - something you see all the time and
135:21 - something I'm going to use a lot as well
135:24 - for the next major part we are going to
135:26 - create an area 2D and to use an area to
135:29 - do properly we are also going to have to
135:31 - talk about signals I'll cover that in
135:34 - just a second
135:35 - first of all though a bit of a recap
135:39 - here is an overview of all of the
135:42 - Collision body 2DS
135:43 - so far we have used a static body 2D and
135:46 - we have used a character body 2D those
135:49 - two I think at this point should at
135:51 - least be somewhat doable
135:53 - for this video I want to work on an area
135:56 - 2D
135:58 - which as a reminder is simply an area
136:01 - that can check if another body has
136:03 - entered it can also check for other
136:05 - things but I want to keep it simple for
136:07 - now
136:08 - ultimately what we're going to build is
136:10 - an inside Area entrance and the area 2D
136:14 - is going to check if the player has
136:15 - entered this area
136:17 - that being said there is a problem we
136:19 - have to talk about
136:22 - right now we can use an area 2D but it
136:26 - would be pointless it would simply be an
136:29 - invisible area that can't do anything
136:31 - as a consequence we have to learn about
136:34 - some extra functionality so that the
136:36 - area can actually do something
136:38 - that functionality is called signals and
136:42 - signals are incredibly important
136:45 - basically what they are doing when a
136:47 - certain action happens to a node for
136:49 - example a body entering an area it could
136:52 - also be a timer running out or two
136:54 - bodies colliding and a whole host of
136:56 - other options
136:58 - if that happens to a node then the node
137:00 - can call a piece of code somewhere in
137:03 - your script and this is called a signal
137:05 - so essentially whenever a certain action
137:08 - happens to a node the node can trigger
137:10 - some code that's basically all that's
137:11 - happening
137:13 - this is also incredibly powerful to make
137:15 - notes communicate with each other and
137:17 - make your game more Interactive
137:20 - back in Godot I want to start by
137:22 - cleaning things up a bit most
137:25 - importantly I want to delete the Drone
137:27 - the billboard and the bad because we
137:30 - don't need them right now and I want to
137:32 - have a bit of space with that the only
137:34 - note we have left is the player let's
137:37 - try this scene just to make sure that
137:39 - everything is still working and that's
137:41 - looking pretty good cool
137:43 - once we have that I want to build an
137:46 - entrance e area this is going to
137:49 - transition us later from an outside
137:50 - level to an inside level
137:53 - there is one graphic that contains all
137:55 - of that this is inside of Graphics there
137:58 - we have objects and in there we have the
138:01 - gate I already had it selected
138:04 - if I double click on it you can see it's
138:07 - a simple entrance area by the way what
138:10 - you can also do you can simply drag the
138:12 - node into Godot and then it creates a
138:15 - Sprite automatically can be quite nice
138:17 - although I don't use it too often but
138:19 - basically what we have is an entrance
138:21 - area
138:22 - what you do want to be aware of is that
138:25 - only this part of the area is supposed
138:29 - to be visible if the player can see the
138:32 - area in the back it's going to look a
138:34 - bit broken but the idea is that all of
138:37 - this is collidable and then in just a
138:41 - bit we're going to add some walls or
138:43 - obstacles around these areas surrounding
138:46 - it that way the player can never get to
138:48 - this back bit for now I want to move the
138:51 - entrance area a bit up like so
138:55 - so we can see it a bit better in our
138:57 - current scene and later on when we have
139:00 - the camera all of this is going to be
139:01 - much more visible but for now don't
139:03 - worry too much about it we need to see
139:05 - the entrance this bit
139:07 - so let me run the game and there we can
139:11 - see we have an entrance area although it
139:13 - doesn't do anything right now because it
139:15 - is literally just an image
139:17 - also I want to have this below the
139:19 - player so the players on top of it
139:22 - that's feeling a little bit better once
139:25 - again don't worry too much about it for
139:26 - now with that we have an image but there
139:29 - are two things we have to work on for
139:31 - now
139:32 - number one is we have to add the
139:34 - collisions for these parts here that are
139:38 - supposed to be collidable as a matter of
139:40 - fact if I scroll out a bit
139:43 - I want to have a collision that goes
139:45 - roughly around here then we have a
139:49 - cutout for the entrance and then we have
139:52 - the rest of the collidable area
139:56 - for that we have to learn about a new
139:58 - node because now we have a more
140:00 - irregular Collision shape after we have
140:02 - that we can add an area around this
140:05 - entrancy bit and this is going to
140:07 - actually trigger an action if the player
140:09 - enters it but that comes next first of
140:11 - all let's add a collision area for that
140:14 - with the level node selected I'm going
140:15 - to add a new node which once again is
140:17 - going to be a static body 2D because
140:20 - this entire area is going to be
140:22 - aesthetic body 2D and this static by 2D
140:25 - is going to get the image as a child and
140:29 - with that I can also move all of that
140:31 - below the player so we once again
140:33 - re-establish the drawing order where the
140:35 - gate is below the player
140:37 - this static Point 2D now once again has
140:39 - a warning that we are going to need a
140:42 - collision shape and there you can
140:44 - already see we have a collision shape 2D
140:46 - or a collision polygon 2D so far we use
140:49 - the Collision shape now we are going to
140:51 - use a collision polygon 2D
140:54 - which means with the static body 2D
140:56 - selected I'm going to click on the plus
140:58 - again and I am going to type into the
141:01 - search Collision polygon 2D
141:05 - then click on enter and now we are
141:08 - getting another node
141:10 - this node on the right side doesn't have
141:12 - a shape instead what it has at the top
141:15 - these three symbols we have create
141:18 - points
141:19 - we have edit points and we have erase
141:23 - points
141:24 - I'm going to start by selecting create
141:26 - points and then you can simply draw
141:28 - points on all of this
141:31 - and basically draw a shape that you want
141:35 - around this object I am not going to be
141:38 - too precise for all of this
141:41 - let me do it like this and around here
141:46 - obviously for an actual game you do want
141:49 - to be somewhat precise here
141:51 - and let me finish the shape like so
141:55 - there you can see we have a reasonable
141:57 - shape that covers the area and if you
142:00 - want to update a point you can simply
142:01 - click on it and move it around like so
142:04 - that feels okay
142:07 - and if I zoom in
142:10 - you could be a lot more precise with all
142:14 - of this also when you have over a path
142:16 - between two points you can see a plus
142:17 - and you can click on it and then move
142:19 - this point
142:20 - so let me add a few more
142:23 - and this isn't looking too terrible
142:29 - at least in terms of the game this
142:30 - should be working okay
142:32 - so I can refine this a bit but
142:39 - if you want to have a really nice
142:41 - Collision mechanic for your game you do
142:43 - want to spend some time on all of this
142:45 - but in my case I don't want to keep up
142:47 - the tutorial too long Alright
142:50 - I think this is working quite well
142:53 - Let's test it
142:56 - and if I now move around there is a
143:00 - collision it's a bit hard to see since
143:02 - the gate takes up so much space but it
143:04 - is definitely working
143:06 - nice
143:07 - with that I can rename the static by 2D
143:11 - to gate that feels a bit better and now
143:14 - we can work on the second part the area
143:16 - 2D
143:18 - with the gate selected I am going to add
143:21 - another node with Ctrl a and I want to
143:24 - have an area 2D
143:27 - this once again is not going to do
143:29 - anything and we're getting a warning
143:31 - that we need to add a shape like we have
143:34 - done for all of the other Collision
143:36 - objects
143:37 - and this has to be a child so with the
143:39 - area to deselected I am going to press
143:41 - Ctrl a again and for this one I want to
143:44 - have a collision shape 2D so let's
143:47 - create it
143:48 - we still can't see anything we're
143:50 - getting another error that now we have
143:51 - to provide a shape this we get on the
143:53 - right side in the inspector shape and
143:56 - for this one I want to have a rectangle
144:00 - and this rectangle we can now see here
144:05 - so let me move it to the place where I
144:09 - want it to be
144:11 - somewhere here and
144:16 - let's move it to some area like this I
144:20 - should probably make it a bit more
144:21 - narrow
144:22 - and something like this is looking okay
144:24 - I guess move it a bit further down
144:30 - there we go this is a roughly decent
144:33 - entrance area
144:34 - but now if I run the game
144:37 - you can't see it and it doesn't do
144:39 - anything I still have the Collision so
144:42 - it doesn't influence the game and well
144:44 - the issue right now is that this area
144:46 - today is literally just that it's an
144:49 - area and unless we give it extra
144:51 - functionality it doesn't do anything
144:52 - it's simply invisible to make it do
144:55 - something we are going to need a signal
144:57 - and signals you can see on the right
145:00 - under the node tab if you click on that
145:03 - you get signals and these are all of the
145:06 - signals that an area 2D could send out
145:09 - the one we are going to use is called
145:12 - body entered
145:13 - this is going to be triggered whenever a
145:16 - body like a character body 2D enters
145:18 - this area 2D
145:20 - we could also check for another area
145:22 - entering or exiting we could check if an
145:26 - area shape is entered we could check for
145:29 - a whole range of other things and these
145:32 - kind of signals are available for every
145:34 - node although every node has different
145:36 - kinds of signals for example if we click
145:39 - on the player we have signals for
145:42 - example for input or Mouse entered or
145:45 - exited but they are not as useful if I
145:48 - click on the level we get even fewer for
145:51 - example in there we have a signal if the
145:54 - current node is ready if it was renamed
145:56 - if it entered the tree or if it exited
145:59 - the tree which means it was deleted or
146:01 - well a couple of others but they're not
146:03 - too important
146:05 - area 2D is one of the nodes that has
146:08 - most of the signals that you actually
146:09 - care about to actually use a signal you
146:12 - have to double click on it so in my case
146:14 - I want to have the body entered I double
146:16 - click on it and now we get another
146:18 - dialog
146:20 - essentially what is going to happen
146:23 - when this body entered is triggered we
146:26 - are running a function somewhere and
146:28 - this function we can only run when we
146:31 - have a script so we have to connect this
146:33 - signal to some kind of code inside of
146:36 - this scene
146:37 - right now in the scene we have two notes
146:40 - with a script we have the level and we
146:42 - have the player I want to connect it to
146:44 - the level which means with the level
146:46 - selected you can see it we have a script
146:48 - there I want to click on connect
146:51 - although before I do that you could also
146:53 - rename the function we are going to call
146:55 - although you probably shouldn't so let
146:58 - me just click on connect
147:00 - and now we have a function inside of the
147:04 - level so inside of this node inside of
147:06 - the script of this node to be more
147:07 - specific we have a function and this
147:10 - function will be triggered whenever a
147:12 - body is entering the area 2D
147:15 - on top of that you can also see on the
147:18 - area 2D node we have a symbol that says
147:21 - node has one connection
147:23 - which basically means to notice one
147:25 - signal Let's test this one if this is
147:28 - the case I want to print let's say body
147:32 - has entered
147:34 - and now if I run all of this
147:37 - we already get body has entered and if I
147:41 - go into this area a couple of times with
147:43 - the player you can see we get body has
147:46 - entered multiple times
147:51 - the reason why we are getting body
147:52 - entered by default is well the player is
147:56 - already inside of this area when the
147:57 - game is starting
147:59 - that probably shouldn't be the case so
148:01 - let me move the player a bit outside of
148:03 - it now if I run this again
148:06 - we don't get any message by default but
148:08 - if I move into this area we get body has
148:11 - entered and this I can do multiple times
148:14 - understanding signals is another super
148:16 - important part of Godot so if you want
148:19 - to play around with these signals a bit
148:21 - more I would definitely recommend you to
148:23 - do so
148:24 - I guess I could add another one for
148:26 - example we could add body exited this is
148:30 - the opposite of body entered it's going
148:32 - to be triggered whenever a body exits an
148:34 - area
148:35 - for that I have to double click on it
148:37 - and I have to once again connect it to
148:39 - some kind of script this once again I
148:42 - want to do for the level so now click on
148:44 - connect again and now we have another
148:47 - function inside of the level node
148:50 - this one could for example print
148:54 - body has exited
148:58 - now if I run the entire thing again we
149:00 - get nothing by default if I enter the
149:03 - area to the body has entered and if I
149:05 - exited body has exited
149:07 - I think if you play around with the
149:10 - system it should be fairly
149:12 - straightforward there isn't that much to
149:14 - it I suppose one more thing that you
149:17 - should be aware of is that sometimes a
149:19 - signal gives you an argument in this
149:22 - case it is the body that has entered you
149:24 - can see it because we have one argument
149:26 - that we get by default into this
149:28 - function
149:29 - for example we could print this body
149:33 - and now if I run it again
149:37 - we get body as entered and we get the
149:40 - player character node because this is
149:42 - the body that has entered this area 2D
149:45 - so when we are printing the body we are
149:47 - printing the player
149:48 - let me expand the right side a bit
149:52 - sometimes a node has a lot of arguments
149:56 - for example when we look for area
149:59 - entered we can capture the area that has
150:01 - entered or if we look for area shape
150:03 - entered there is a lot of extra
150:06 - arguments you get
150:07 - you do want to be aware of them because
150:09 - sometimes they are really useful
150:11 - although in this case we don't need them
150:15 - because of that and you can already see
150:17 - it in the debugger
150:18 - we have one warning that the perimeter
150:21 - body is never used in the function so
150:23 - Godot wants an underscore or at least it
150:26 - would very much recommend it underscore
150:27 - so for that I'm going to add an
150:29 - underscore to both of these functions
150:33 - and get rid of the print statement
150:35 - because we are not going to need it with
150:38 - that we have covered the basics of a
150:41 - signal
150:42 - there's one other place where we are
150:44 - going to use it right away that is going
150:46 - to be inside of the player
150:50 - right now the player can shoot a laser
150:54 - and shoot a grenade whenever we are
150:55 - pressing the button let me demonstrate
150:57 - actually I can click on the left Mouse
151:01 - button and we're getting shoot laser as
151:03 - fast as I can click the button same with
151:05 - the grenade if I right click we're
151:07 - getting a grenade as fast as I can click
151:10 - this is not what I want
151:12 - instead I want to have a delay between
151:15 - shooting laser or shooting a grenade
151:18 - and for that I am going to add a bit
151:21 - more logic all the way at the top I'm
151:24 - going to add two variables the first one
151:26 - is going to be called VAR can underscore
151:29 - laser this one is going to be a Boolean
151:31 - which by default is going to be true
151:34 - after that I can press on Ctrl or
151:37 - command shift and d and duplicate the
151:39 - entire line
151:40 - I am going to change can laser to can
151:43 - grenade which is also going to be a
151:45 - Boolean that by default is true
151:48 - both of these booleans I'm going to use
151:51 - inside of these two input statements
151:54 - first of all I am only going to allow
151:56 - the player to shoot a laser if the input
151:58 - action is true and can laser is also
152:03 - true
152:04 - same for the grenade I want to check for
152:06 - the input and can renate also once again
152:10 - here GD script works like python where
152:13 - you don't have to add can laser is equal
152:15 - to true
152:17 - if this value is true by itself then 3D
152:21 - script is going to evaluate the entire
152:23 - thing to true
152:24 - inside of the function now I want to set
152:27 - can laser to false and can
152:32 - grenade who folds as well
152:37 - if I run the game again I can shoot
152:39 - exactly once so if I left click I can
152:42 - shoot once and not do it again and if I
152:46 - right click I can also shoot grenade
152:48 - once but not again
152:49 - that is because we can only do either of
152:52 - these things if can laser or can grenade
152:55 - is true
152:56 - which it is not once we have done it
152:58 - once because we are setting it to false
153:00 - now we have to use a timer to reactivate
153:03 - both of these variables and timers are
153:06 - simply another node so with the player
153:08 - selected I want to add another node and
153:12 - this node is called a timer
153:14 - a timer has a couple of parameters you
153:18 - can work with we have a wait time this
153:21 - is the length of the timer then we have
153:23 - one shot this one tells the timer to
153:26 - only run once and if it's deactivated it
153:28 - will run continuously
153:31 - finally we have auto start this tells
153:33 - the timer to start automatically once it
153:35 - was created
153:37 - also a timer has a couple of signals
153:40 - that you want to be aware of although
153:42 - timeout is the one you really want to
153:44 - care about
153:46 - once we have all of that we can do an
153:48 - exercise
153:50 - I want you guys to set the timer
153:52 - duration to half a second and the timer
153:55 - should be started once the laser is shot
153:57 - for that check out the methods of the
153:59 - timer
154:01 - after you have that once the timer
154:03 - finishes can laser should be set back to
154:05 - true and for that you want to use a
154:08 - signal
154:09 - finally add another timer and do all of
154:12 - that again for the grenades the one
154:15 - difference now is that the cooldown
154:16 - should be two seconds
154:19 - pause the video now and try to implement
154:21 - all of that
154:25 - back inside of Godot we have to cover a
154:29 - couple of things first of all for the
154:31 - timer I want to set a wait time to 0.5
154:36 - that is going to be the length of the
154:38 - timer on top of that since I only want
154:41 - this timer to run once we want to enable
154:43 - one shot
154:44 - although AutoStart should not be enabled
154:47 - because we want this timer to only start
154:49 - once the play has shot a laser
154:51 - speaking of which we have to look at
154:54 - some code because once all of this code
154:56 - here is run we want to activate the
154:59 - timer
155:00 - this we can do quite easily I first of
155:02 - all want to get the timer itself I can
155:04 - simply drag it into the code we have a
155:07 - timer
155:08 - and to start a timer we need the method
155:11 - start
155:12 - the last thing we have to do is once the
155:15 - timer has finished we want to set can
155:17 - laser back to true for that we will need
155:20 - a signal inside of the node I want to
155:23 - use the timeout signal I double click on
155:26 - it and connect it to the player script
155:29 - I don't have to change the name this one
155:31 - is perfectly fine I can click on connect
155:33 - and now we have on timer timeout
155:37 - this is going to run whenever the timer
155:39 - finishes or times out
155:42 - what I want to do inside of it is I'm
155:44 - going to set can laser back to true
155:49 - that should be all I need so now I can
155:51 - run the game again I can now click as
155:54 - fast as I want but we only get shoot
155:56 - laser every half second
155:59 - we can actually test this if I set the
156:02 - timer to something longer in the
156:04 - inspector let's say two seconds
156:07 - entry out of this again I can now click
156:10 - it and it takes longer to shoot the
156:11 - laser again but we do still get it cool
156:16 - 0.5 here was a better value though next
156:20 - up we have to add another timer for that
156:23 - with the player selected I am going to
156:26 - add one more timer and this timer I'm
156:29 - going to rename to grenade
156:31 - reload timer
156:35 - in your game it would probably also be a
156:38 - good idea to rename the laser timer
156:40 - although in my case I'm not going to
156:42 - worry too much about it this grenade
156:44 - reload timer is going to have a wait
156:47 - time of two and one shot should also be
156:49 - enabled
156:51 - next up inside of node I want to connect
156:54 - the timeout signal so I double click on
156:56 - it and connect it to the player script
157:00 - inside of that function all I want to do
157:02 - is set can grenade back to true
157:07 - that should be all we need so now I can
157:10 - still use shoe laser and now if I right
157:12 - click we get shoot grenade if I keep on
157:15 - pressing it
157:19 - nothing is going to happen
157:21 - the reason for that is inside of the
157:25 - input statement for the secondary action
157:27 - we're not starting the timer for the
157:29 - grenade that we can do quite easily I
157:32 - need grenade reload timer and drag it in
157:34 - there and then start it
157:37 - now let's try this again I can still use
157:40 - the laser and now shoot grenade should
157:42 - work every two seconds and this is
157:44 - looking pretty good
157:46 - cool
157:49 - with that we have covered a really
157:51 - important part of Godot signals
157:54 - especially for an area 2D or for a timer
157:58 - is something you are going to use all
158:00 - the time another really important thing
158:02 - you can do with signals is create your
158:05 - own and this sometimes is absolutely
158:08 - necessary
158:09 - you can create your own signals but why
158:12 - would you want to do that the reason is
158:14 - that the major limitations of signals is
158:17 - that they can only work between nodes
158:19 - inside of the same scene
158:21 - and triggering custom signals can really
158:24 - help you to communicate between scenes
158:27 - we actually already have that problem to
158:29 - an extent let's have a look
158:32 - inside of our level scene we currently
158:34 - have two main children we have the
158:37 - player this one is totally fine and then
158:39 - we have the gate the gate Dome if I
158:41 - expand it is quite extensive ideally all
158:46 - of this should be a separate scene but
158:48 - this we can't do right now because the
158:51 - area 2D node sends a signal that is
158:54 - being captured by the level
158:56 - as a matter of fact let's rebuild all of
158:58 - this and then you can see very well
159:00 - where the problem is and for that let me
159:03 - close the Drone scene and I want to
159:06 - create a new scene
159:08 - I want to add a static body 2D which is
159:13 - going to be the gate
159:15 - and this gate is going to be the same
159:17 - thing that we have done with all of
159:19 - these nodes which means first of all I
159:22 - want to add a Sprite 2D which is going
159:24 - to get the gate like so
159:29 - on top of that I want to add a collision
159:32 - polygon 2D that is going to get a couple
159:36 - of points let me do it a bit more
159:38 - quickly
159:40 - because once again for this tutorial
159:42 - it's not too important how this looks
159:49 - and especially the corners are something
159:52 - you want to spend some time on but in my
159:55 - case I'm not worried too much there we
159:57 - go this is looking passable
160:00 - next up we have to add the area 2D and
160:03 - the Collision shape
160:05 - for that I want to add an area 2D and
160:08 - this area 2D is going to get a collision
160:11 - shape 2D
160:13 - this if I zoom in a bit we have to add
160:16 - on the shape we want a rectangle and
160:19 - this rectangle is now all the way at the
160:21 - top
160:23 - and I want to extend it a touch
160:30 - like so this really doesn't have to be
160:33 - too large also what you want to avoid
160:37 - for now is this area 2D touching on the
160:40 - static body 2D when we are looking for
160:42 - body entering this shape a body could
160:45 - also be the gate itself so you do want
160:47 - to be careful with that but we can
160:49 - account for that I will cover that in
160:51 - just a bit
160:52 - now we have the basic setup
160:55 - and this I want to save under scenes and
160:59 - let's put it under objects it's
161:01 - basically just that
161:03 - with that we have a gate so I can get
161:05 - rid of all of this stuff so delete
161:09 - and also inside of the level I want to
161:12 - get rid of both of these functions
161:14 - because the nodes sending the signal
161:16 - doesn't exist anymore
161:18 - instead with the level selected I want
161:21 - to attach the gate which I can do by
161:25 - selecting the scene and there we go now
161:27 - we have functionally the same outcome
161:30 - although if I run the game
161:33 - we don't have any kind of signal once
161:37 - the player enters this area 2D
161:39 - also I want the gate to be below the
161:41 - player so it looks a little bit less bad
161:44 - the major issue is with the area to
161:46 - deselected I can click on node and I
161:49 - want to run some code if a body has
161:51 - entered this area 2D but if I now click
161:54 - on it
161:55 - I cannot select any node outside of the
161:59 - scene which is a problem because I have
162:02 - to connect the code to this level script
162:05 - and this is really important because the
162:07 - level is going to organize the entirety
162:10 - of the game so it needs to have the
162:12 - information if the player has entered or
162:14 - not we couldn't keep that logic
162:16 - organized inside of the scene it just
162:18 - needs to be available in more spaces
162:21 - and to make all of this work we have to
162:24 - send a custom signal
162:26 - this custom signal we're going to create
162:28 - inside of the gate
162:31 - or more specifically the root node of
162:34 - this scene
162:36 - this is going to get a script so objects
162:39 - and gate the folder is perfectly fine
162:41 - and now we have a script attached to the
162:44 - gate
162:44 - I don't need any of the inbuilt
162:46 - functions instead what I want to do
162:48 - first of all this area to D is going to
162:52 - now be connected to this script so body
162:55 - entered and now since gate has a script
162:58 - I can connect a signal so on area 2D
163:02 - body entered I can now once again print
163:05 - body has entered
163:09 - this would also work so if I run all of
163:12 - this I can run into it and now a body
163:15 - has entered so this is still working
163:18 - the issue now is that this information I
163:22 - need to know inside of my level script
163:25 - and to make that work we have to create
163:28 - a custom signal this is actually quite
163:30 - easy and it works somewhat similar
163:32 - compared to creating a variable
163:35 - the keyword to create a signal is called
163:37 - signal next up we have to give it a name
163:40 - let's call it player entered gate and
163:46 - once you end that these two keywords the
163:49 - word signal and then a name for your
163:51 - signal back in the level you can select
163:55 - the scene and under note you now have
163:58 - player entered gate and we can see at
164:00 - the top this is because inside of
164:03 - gate.gd we now have this signal this is
164:06 - a custom signal you can see at the tabs
164:10 - where a signal is coming from for
164:13 - example some signals are connected to a
164:15 - node other signals are connected to a
164:17 - canvas item and some are connected to a
164:20 - collision object 2D but in this case we
164:23 - have a script and this is where this
164:25 - signal is coming from and this signal
164:27 - you can use like any other signal so I
164:29 - can double click on it and now connect
164:31 - it to the level
164:32 - and now we get on gate player entered
164:35 - gate the naming here isn't ideal but uh
164:38 - well you get the idea if we are
164:41 - triggering the signal I now want to
164:43 - print
164:44 - layer has entered gate there's one more
164:48 - thing that we need though and that is
164:50 - inside of gate.gd
164:53 - we have created a signal but now we have
164:57 - to trigger this signal or more
164:59 - specifically the keyboard here is called
165:01 - we have to emit the signal that is
165:05 - because this function right now can only
165:07 - capture a signal but it doesn't know
165:10 - when the signal is being triggered and
165:12 - this we can do quite easily because we
165:14 - know
165:15 - when the body has entered the area 2D
165:18 - then we want to trigger this signal
165:21 - and this means instead of the print
165:24 - statement I want to get player entered
165:27 - gate and then emit this signal and don't
165:31 - forget to call it and now if I run all
165:34 - of this again we get back to player has
165:37 - entered the gate
165:38 - this is run inside of the level there we
165:42 - have player has entered the gate now the
165:45 - logic for all of this can be a bit
165:47 - confusing so let's go through it one by
165:49 - one we start inside of the area 2D node
165:53 - and this one has one signal attached
165:55 - body entered if this one is triggered we
165:59 - have some code inside of the parent node
166:02 - which is gate if it is triggered the
166:04 - function is this one on area 2D body
166:07 - entered this is the signal attached to
166:10 - this area 2D if we are emitting this
166:13 - signal we are emitting our own custom
166:16 - signal
166:18 - and this custom signal we are capturing
166:21 - inside of the level
166:23 - where it is now being emitted from the
166:25 - parent node so the gate and the result
166:28 - is going to be captured inside of the
166:30 - function on gate player entered gate now
166:33 - this is something you absolutely want to
166:35 - practice although before we get to that
166:38 - inside of the gate we don't need the
166:41 - body anymore because we assume that the
166:43 - body entering is going to be the player
166:45 - but while we are here you can add an
166:49 - extra argument or extra arguments into
166:52 - your own custom signals as well all you
166:54 - have to do for that is add parentheses
166:57 - and then the argument you want to add
166:59 - for example in this case this could
167:01 - simply be a body and then when you are
167:04 - emitting a signal you can simply pass
167:06 - the body in there
167:08 - and then after you have that inside of
167:11 - the level you need a parameter to
167:13 - capture this body let's call it body as
167:15 - well and then you can print the body
167:19 - and you should be good to go let's try
167:21 - out of that and now we get player has
167:25 - entered the gate and player character
167:27 - body 2D whatever we have in there I
167:30 - would very much recommend you to play
167:31 - around with this in your own time it is
167:34 - really important to understand custom
167:36 - signals because they allow you to make
167:38 - scenes emit signals as well and that way
167:42 - you can get a signal from inside of a
167:46 - scene and then work with this across
167:48 - multiple scenes and the exercise I want
167:51 - you guys to do is make the player emit a
167:53 - custom signal called laser when the
167:56 - laser input is detected and then inside
167:59 - of the level scene I want you guys to
168:01 - capture all of that and print laser from
168:03 - Level finally do all of that with the
168:06 - grenades as well pause the video now and
168:08 - try to figure this one out
168:12 - back in the editor I want to look at my
168:16 - player specifically I want to look at
168:18 - the script
168:20 - first of all all the way at the top I
168:22 - want to create a signal
168:25 - the signal is going to be let's just
168:27 - call it laser
168:30 - for now we don't need any arguments but
168:33 - later on we are going to add some for
168:35 - now though I simply want to admit that a
168:37 - player has shot a laser and for that
168:41 - also let me extend the window a bit
168:44 - if the player is clicking on the primary
168:46 - action and can laser is true if that is
168:50 - the case I know the player has shot a
168:52 - laser and because of that I want to get
168:55 - the laser signal and then emit
168:59 - that is all we need for this one so now
169:01 - we can return to the level click on the
169:04 - player and we now have a laser signal I
169:08 - am going to double click on that and
169:09 - connect it to the level node
169:12 - so connect and now we get on player
169:14 - laser
169:15 - we can't do very much with that just yet
169:17 - so for now I am simply going to print
169:20 - laser from Level now that we have that
169:24 - back inside of the player I can also get
169:27 - rid of shoot laser because we don't need
169:30 - that anymore
169:32 - and that should be all we need for this
169:34 - part so let's try all of this if I now
169:36 - left click we get laser from Level so
169:39 - this is working just fine and on top of
169:41 - that the other signal also works
169:43 - perfectly well next up all we have to do
169:46 - back inside of the player I want to
169:49 - create another signal
169:51 - this one is going to be called Grenade
169:54 - we are triggering this one if the player
169:57 - is pressing the secondary action
170:00 - in here I want to get grenade and then
170:03 - emit
170:04 - also now I can get rid of the print
170:07 - statement
170:08 - because all of this logic should be
170:10 - inside of the level
170:13 - so back inside of the level scene I now
170:17 - have another signal that I want to
170:19 - connect to the level
170:21 - and this one is going to print
170:25 - renate from level
170:29 - all of that I can run now I can left
170:32 - click I get laser I can right click I
170:34 - get grenade
170:36 - every two seconds and I can move around
170:38 - and I get player has entered the gate
170:41 - this is all we needed
170:43 - and with that we also have made huge
170:46 - progress to connect different nodes
170:48 - across different scenes which is
170:50 - incredibly important this level C now it
170:54 - feels significantly cleaner where we
170:57 - have one node for the gate and one node
170:59 - for the player
171:01 - earlier we had all of this stuff here
171:04 - inside of the level scene and if you did
171:07 - that for hundreds of objects it would be
171:09 - incredibly difficult to manage
171:11 - the next major aspect I want to work on
171:13 - is to create custom scenes in code
171:16 - and this is another really important
171:19 - aspect let's talk about why
171:21 - so far we always created scenes inside
171:24 - of the editor for example we made the
171:27 - gate we made a player we made lots of
171:29 - things like that but sometimes this
171:32 - isn't possible or desirable in the game
171:35 - for example when we are working with the
171:37 - lasers something we are going to do for
171:39 - this part we cannot just create a scene
171:42 - and then add it because we have to do
171:44 - all of that dynamically
171:46 - meaning we want to create a laser
171:48 - whatever the player is shooting
171:50 - and for that we have to use code to
171:52 - create and instance a scene
171:55 - let's talk about how this is going to
171:56 - work
171:57 - number one we have to create a scene in
172:00 - the first place this we are still going
172:03 - to do manually which means we are going
172:05 - to put together a couple of notes that
172:07 - are going to constitute the laser and
172:09 - that's going to be one scene
172:11 - this part we have already done multiple
172:14 - times it shouldn't be too difficult at
172:15 - this point number two this is something
172:18 - we haven't done yet we have to create an
172:20 - instance of the scene the way you have
172:22 - to think about it is that when we are
172:24 - creating a scene we are basically
172:26 - creating a blueprint which by itself
172:29 - doesn't do anything and once we are
172:31 - creating an instance this is a really
172:33 - important word then we are creating an
172:35 - actual node that we could use in another
172:37 - scene and once we have this instance we
172:40 - need to go through one more step and
172:43 - that is we have to add this new instance
172:45 - of the node to the node tree
172:48 - this is important because at step number
172:51 - two when we have an instance we only
172:54 - basically have a node that we can work
172:56 - with but it's not attached to our
172:58 - current scene and for that we need step
173:01 - number three where we add it to the node
173:03 - tree only then can we actually see and
173:06 - use it inside of the game
173:08 - so with that we have quite a bit of
173:11 - material to go through let's jump into
173:13 - Godot and let's have a look
173:15 - back in the editor I want to first of
173:18 - all close the gate because we don't need
173:20 - this part anymore
173:21 - next up I want to create a new scene and
173:25 - now I have to figure out how to create a
173:27 - basic scene for the laser and the most
173:30 - important part for now is we have to
173:32 - think about what the root node is going
173:34 - to be and let's talk about how we have
173:36 - to approach this
173:37 - we have area2d static body too deep
173:40 - rigid body 2D and character body 2D now
173:43 - when we are creating the laser we want
173:46 - to move the laser obviously so we have
173:48 - to choose one of these that can collide
173:51 - with something and that can move the one
173:54 - I'm going to go with is the area 2D this
173:57 - is a node we can move perfectly fine and
173:59 - it can also detect collisions which is
174:01 - basically all we need alternatively you
174:04 - could also use a rigid body 2D or even a
174:07 - character body 2D although you probably
174:10 - wouldn't want to a character body 2D
174:13 - would probably be Overkill because a
174:16 - laser ultimately is quite simple and a
174:18 - rigid by 2D also isn't really that
174:21 - necessary because laser is moving at a
174:24 - constant speed we don't really need any
174:26 - kind of advanced physics in there
174:27 - although later on when we are working
174:29 - with the grenade we are going to work
174:31 - with a rigid body 2D but now though we
174:34 - don't need it the way you want to think
174:36 - about it is that you always want to use
174:38 - the simplest note that you can possibly
174:40 - use in this case this would be area 2D
174:44 - I want to create another node which is
174:46 - going to be an area 2D this area 2D I
174:50 - want to rename to laser right away and
174:53 - now we have to do the usual we want to
174:55 - add a Sprite and I want to add a
174:59 - Collision shape 2D for the Sprite we
175:03 - will need a texture which we get inside
175:05 - of graphics and in there we have
175:08 - projectiles
175:10 - the file we need for this one is called
175:12 - Blue
175:13 - I just have to drag it in there and then
175:16 - we are getting the image of a laser next
175:20 - up we have to add the Collision shape
175:22 - for that I am going to go with something
175:24 - we haven't used yet which is a capsule
175:28 - this I want to extend a bit and
175:31 - basically what this one is is a
175:33 - rectangle with rounded corners once
175:36 - again as well I want to keep the center
175:38 - of this Collision shape around the
175:40 - origin point so position 0 and 0. so I'm
175:43 - going to move the image to a line with
175:46 - the Collision shape
175:49 - I think that's looking mostly okay
175:53 - you can play around with this a lot and
175:56 - if you want to have a really well
175:58 - working game these small details are
176:00 - really what make a good game so I think
176:03 - this one is a pretty good start this
176:04 - seems reasonably okay
176:06 - which means I can save the entire scene
176:08 - under scenes and in there I want to
176:11 - create a new folder let's call it
176:13 - projectiles
176:15 - and I can save it in there and now we
176:18 - have a laser
176:20 - this would cover the first part so now
176:22 - we have created a scene
176:25 - next up we have to create an instance of
176:27 - this scene in the new scene where we
176:29 - want to work with this
176:31 - what that means is I want to use this
176:34 - laser inside of the level specifically I
176:38 - want to create an instance of the laser
176:40 - when we are triggering the on player
176:43 - laser event
176:45 - for that we have to go through two steps
176:48 - first of all we have to pre-load the
176:51 - scene we have just created and this
176:53 - happens all the way at the top
176:55 - I want to create a new variable let's
176:57 - call it VAR laser scene and to pre-load
177:01 - a scene we need the function preload and
177:06 - this preload wants to have a scene since
177:08 - we do have quite a lot of stuff in there
177:10 - you usually just want to type the name
177:12 - of the scene and then Godot is quite
177:14 - intelligent about it and gives you the
177:16 - scene
177:17 - make sure that the ending is tscn this
177:21 - is a scene if you have PNG or anything
177:23 - other than TSC and in there something
177:25 - probably went wrong
177:27 - you can be even more aggressive about it
177:29 - and force a certain data type the data
177:32 - time we're looking for here is called a
177:34 - packed scene
177:37 - so now we have a scene ready that we can
177:41 - use what we have to work on next is we
177:44 - have to create an instance of this scene
177:46 - this is turning the actual scene into a
177:48 - node that we can use in our currency
177:52 - that is actually quite easily done and I
177:54 - want to do all of that inside of on
177:56 - player laser
177:58 - all I want to do in here is create a new
178:00 - variable that I'm going to call Laser
178:03 - and this laser is going to be an
178:06 - instance which means I want to get the
178:08 - laser scene the one we created up here
178:10 - and then run the method instantiate on
178:14 - it
178:14 - with that we have an instance of the
178:17 - scene
178:18 - which is covering part 2 of our
178:21 - requirement all that is left to do is to
178:23 - add this scene to the note 3. this we
178:26 - can do with a simple function it is
178:29 - called ADD child
178:31 - and the child we want to add in this
178:33 - case is going to be the laser with that
178:36 - we should be good to go let me run the
178:39 - game and let's just see what happens if
178:41 - I now click on the button you can see we
178:45 - have the laser the reason it is up there
178:47 - is because well inside of the laser
178:52 - we always are in the top left point and
178:56 - we don't update this position because of
178:58 - that we always have the laser in this
179:00 - point and it's not moving so we do have
179:02 - to make some updates but it's certainly
179:04 - a good start
179:06 - on top of that what is another really
179:08 - powerful part of Godot if I go back to
179:11 - the standard view if the game is running
179:13 - like it is right now
179:15 - so I can still run around perfectly fine
179:18 - then you can return to the editor just
179:20 - fine and you can actually look on the
179:23 - left there is besides local where you
179:25 - can see all of the notes every mode tab
179:27 - this is only visible when the game is
179:30 - running and this shows you in real time
179:32 - what is happening inside of the game so
179:35 - right now we have root this is a
179:37 - technical part but then we have the
179:39 - level this is this level scene
179:42 - inside of there we have the gate and we
179:44 - have the player these are the two notes
179:46 - we have added ourselves but after that
179:49 - we have the laser four times
179:51 - and if I go back to the game and I keep
179:53 - on clicking we add more and more lasers
179:58 - so we can tell in real time this is
180:01 - showing you what's going on in your game
180:02 - which is incredibly helpful to debug
180:05 - your game also when you click on them
180:07 - you can look at the inspector and get a
180:10 - lot of information about what's going on
180:12 - all of this updates in real time which
180:14 - is super useful
180:16 - although in my case I want to close the
180:18 - game because we don't need it right now
180:20 - for now there are two things I want to
180:22 - work on and let me add comments
180:24 - number one the most important thing is
180:27 - we have to update the laser position
180:31 - right now the laser spawns in the top
180:33 - left and well that's a problem
180:35 - number two we have to move the laser
180:40 - that part should also be fairly obvious
180:42 - and I do want to add a number three
180:45 - which is a bit smaller
180:47 - I want to add the laser instance to a
180:53 - node to E
180:55 - right now we always add the laser to the
180:58 - level scene itself which tends to get a
181:00 - bit messy because we just have a whole
181:02 - bunch of notes in there instead what is
181:05 - going to be much cleaner is if we add
181:06 - another node to D that we could rename
181:10 - as projectiles
181:12 - I want to add the lasers to this node
181:15 - that way the entire scene itself keeps
181:18 - much cleaner but we're going to work on
181:19 - that in more detail later on
181:22 - first of all though we want to update
181:24 - the laser position
181:25 - and that in the most basic sense is
181:28 - actually really easily done because this
181:32 - Laser Now is also just a class
181:35 - and we know how to update the position
181:37 - of a class all we have to do is get the
181:39 - laser and then get the position this
181:43 - position could for example be the player
181:45 - position which means I can simply drag
181:47 - the player note in there and then get
181:50 - the position of the player
181:52 - now if I run the game
181:55 - I can click and the laser is going to be
181:58 - on the position of my player which is
182:01 - already a pretty good Improvement but
182:04 - not perfect yet
182:07 - so instead what I want to do and let me
182:10 - illustrate the problem
182:11 - we are spawning the laser around the
182:13 - center of the player so this Red Cross
182:17 - which isn't realistic ideally we want to
182:20 - spawn the laser somewhere from the
182:22 - position of the top of the gun and for
182:26 - that we can actually learn about another
182:28 - node and about some Randomness which are
182:31 - two very important Concepts in gudo so
182:33 - what I want to start with is I want to
182:36 - get a couple of random positions around
182:38 - the top of the gun around here I want to
182:42 - have three random points distributed
182:45 - something like this
182:47 - for that we are going to need a marker
182:50 - 2D although this I want to organize
182:52 - because our player scene starts to get a
182:55 - bit messy so inside of the player I'm
182:57 - going to add a node 2D this one is not
183:00 - going to do very much it's just going to
183:03 - hold other notes
183:04 - I want to call this one the laser start
183:07 - positions
183:10 - what is actually going to become
183:11 - important is I want to add another node
183:14 - and this node is called a marker 2D
183:18 - this marker 2D if I hover over the
183:21 - center let me show my mouse actually if
183:23 - I hover over the center we have a marker
183:25 - 2D and this I can move
183:27 - a marker 2D is literally just a position
183:31 - you don't use it for anything else
183:33 - if you look on the right there really
183:35 - isn't too much
183:37 - so let me put it roughly in the middle
183:39 - that looks about right
183:41 - then I want to duplicate this node so
183:43 - with the node selected I click on Ctrl D
183:46 - and now we have a marker 2D2 and this I
183:48 - move somewhere here I can do the same
183:51 - operation again and now move the final
183:54 - marker somewhere here
183:57 - with that I get three different points
184:00 - and those are supposed to be my laser
184:02 - starting positions
184:06 - next up inside of the code first of all
184:10 - when the player is clicking on the
184:12 - primary action I have to randomly let me
184:16 - add a comment I want to randomly select
184:19 - a marker to D for the laser start
184:24 - which means I want to pick one of these
184:27 - three notes and that is going to be the
184:29 - actual starting position for the laser
184:31 - number two this is going to be right
184:34 - inside of emit I want to emit the
184:38 - position we selected when we are
184:42 - emitting the signals for the laser we
184:44 - also want to emit the position
184:46 - so there are two things we can work on
184:48 - let's start by randomly selecting one of
184:51 - the markers
184:52 - well that first of all I want to get all
184:55 - of the markers inside of a list that is
184:58 - going to make our life much easier I'm
185:00 - going to store all of this in a new
185:01 - variable let's call this laser markers
185:04 - to get the laser markers first of all I
185:07 - want to get the laser start positions
185:09 - this is just going to be a node 2D right
185:12 - now although this node 2D has children
185:16 - and these children we can get with the
185:18 - method get chilled during
185:21 - once we have that I can simply print the
185:24 - laser markers and let's see what we get
185:26 - if I now run the code and I click we are
185:30 - getting a list inside of the output with
185:34 - three markers we have marker 2D another
185:36 - marker 2D and the final marker 2D this I
185:40 - also want to store in a variable let's
185:41 - call it VAR selected laser and this
185:46 - should be a lowercase
185:47 - to get a random item from a list we
185:50 - first of all need the list itself so
185:52 - laser markers and I should say this is
185:54 - an array not a list but the difference
185:56 - is fairly minor
185:58 - on that we want to use indexing for
186:01 - example we could use index 0 this will
186:03 - give us the first item or index one this
186:05 - would give us the second item
186:07 - but we want to have a random item for
186:10 - that we will need random numbers in good
186:13 - dough which always is a tiny bit weird
186:16 - basically what you have to do is use the
186:19 - function Rand I then we need the modulus
186:23 - operator so the percentage sign that
186:25 - looks like this
186:27 - and then we need the highest number
186:29 - which in our case is going to be the
186:32 - laser markers Dot and this would be the
186:35 - size
186:36 - and just to test if this is working let
186:39 - me print the selected laser if I now Run
186:43 - the game again I can click and I always
186:46 - get
186:48 - some kind of marker there is some
186:50 - Randomness although since we don't have
186:52 - too many nodes it's going to be a bit
186:54 - hard to see but they can definitely tell
186:56 - we get random markers
186:58 - there are other ways to create
187:00 - Randomness but this is one of the more
187:02 - common ones you are going to see you
187:05 - want the function rant I then the
187:07 - percentage sign and then the highest
187:11 - number that you want for your Randomness
187:13 - in our case the number here would be a
187:16 - three because there are three items
187:18 - inside of the list
187:20 - and this would give us a number that
187:22 - goes from 0 up to three but not
187:25 - including free the possible numbers we
187:28 - could get would be 0 1 and 2. and those
187:31 - we are then using for indexing on the
187:33 - laser markers
187:35 - with that I can get rid of the print
187:37 - statement and of the comment as well
187:40 - next up I want to emit the position that
187:44 - we are getting from this selected laser
187:46 - position
187:47 - and something like this we have already
187:49 - done so I want to go all the way to the
187:51 - top there we have the laser signal this
187:54 - signal
187:55 - should contain one argument
187:58 - which is going to be the position
188:00 - now that we have that when I'm emitting
188:03 - the laser I want to also as an argument
188:06 - include selected laser and then the
188:10 - position of this one node that is
188:13 - actually all we needed now we are
188:14 - emitting a position in this position we
188:17 - can capture inside of the level because
188:19 - now on player laser is going to contain
188:22 - one argument which we can capture in a
188:25 - parameter which is going to be the
188:27 - position
188:28 - and this position we now want to use to
188:32 - set as the laser position
188:35 - let's try all of this now
188:39 - if I click nothing is happening
188:43 - however if I go back to Godot and go
188:47 - back to normal View and remote you can
188:49 - see we have the lasers and if I keep on
188:52 - clicking
188:54 - we also can see we are generating more
188:56 - lasers so
188:58 - the tool tip is a bit annoying right now
189:01 - but if you look at the scroll bar we are
189:03 - definitely creating more lasers so this
189:06 - is working
189:07 - basically the one change we have to make
189:10 - we don't look at the position of the
189:12 - selected laser instead we want to look
189:14 - at the global position
189:18 - now if I run all of this
189:21 - we can see the laser
189:23 - and this one is working perfectly fine
189:27 - which begs the question what is a global
189:30 - position and how does that differ from a
189:33 - normal position let's talk about it
189:35 - so far we always used a local position
189:39 - and this position is always relative to
189:42 - a parent
189:44 - we are basically measuring how far off
189:46 - we are from the center of the parent
189:49 - a global position however is an exact
189:53 - pixel coordinate that is independent
189:55 - from any parent the way you want to
189:57 - think about it is imagine you are
190:00 - sitting in your house right now you do
190:02 - have some relative position to the
190:04 - center of the house this would be your
190:06 - local position
190:08 - but that being said you still have even
190:10 - in your house a specific GPS location
190:13 - and this position doesn't care about the
190:16 - position of your house this would be
190:18 - your Global position
190:20 - to be a bit more specific for Godot
190:22 - imagine you add a node 2D with an offset
190:25 - of X100 and y200 and you give this node
190:29 - a child on the same position
190:32 - the child node would have a local
190:34 - position of X being 0 and Y also being
190:37 - zero that is because we didn't move it
190:40 - away from the parent however it does
190:43 - have a global position of 100 and 200
190:45 - because that is the actual pixel
190:48 - position
190:49 - understanding local and Global positions
190:51 - can be a bit tricky especially in the
190:53 - beginning
190:54 - I suppose for now just generally keep in
190:57 - mind that there can be a difference and
191:00 - just experiment with the two eventually
191:02 - this should become fairly
191:03 - straightforward
191:04 - with that though we can return to Godot
191:07 - because now we have the laser and this
191:10 - is covering the first part we have to
191:12 - update the laser position so I can get
191:14 - rid of that next up we have to move the
191:18 - laser
191:18 - for that I want to return to the laser
191:21 - and now the laser is going to need a
191:24 - script so I click on attach a new script
191:27 - for the template I want to go with empty
191:30 - and for the folder we are still in
191:34 - projectiles so I am happy with that I
191:36 - can click on Create and now we have a
191:38 - script
191:39 - first of all I want to Define some kind
191:42 - of movement speed let's just call it
191:44 - speed this is going to be an integer and
191:48 - for the number here let's go with 1000
191:52 - for now
191:53 - once we have that we are going to need a
191:56 - process function
191:58 - all we want to do in there is to update
192:00 - the position of the laser so I want to
192:02 - change the position and all I want to do
192:04 - is
192:07 - I want to have some kind of Direction in
192:10 - this direction I want to multiply with
192:12 - this speed and once again don't forget
192:14 - we also want to multiply all of that
192:16 - with Delta
192:18 - now the direction doesn't exist right
192:20 - now and later on we want to have the
192:22 - direction the player is looking at for
192:25 - now though I want to have a VAR
192:28 - Direction which is going to be a vector
192:31 - 2 and the actual variable is simply
192:34 - going to be Vector 2 dot up
192:37 - at the moment the player is always
192:38 - looking up so this is the only Vector we
192:41 - need I can now run all of this
192:43 - and shoot the laser and we get a laser
192:46 - that is moving this is looking really
192:48 - good
192:51 - at this point you probably want to
192:53 - experiment with the speed of the laser
192:55 - and there's one really nice feature of
192:57 - Godot when you are creating a variable
193:00 - at the beginning of the script what you
193:02 - can do is add the keyword export
193:06 - and this should be combined it should be
193:09 - orange then you know it's working what
193:11 - this one is doing if I return to the 2D
193:14 - View and with the laser selected I now
193:17 - get another parameter inside of the
193:19 - inspector and this is giving me the
193:21 - speed and I can update this so let's say
193:23 - to 2000 and now if I run the game again
193:27 - the lasers are moving a lot faster
193:31 - all this export does is it exposes the
193:35 - variable to the inspector so you can
193:37 - change it much more easily which very
193:40 - often is really nice and makes the game
193:42 - much easier to update
193:44 - cool in our case this is covering
193:47 - another important part we can now move
193:49 - the laser
193:51 - finally I want to add an instance to
193:54 - laser to this projectiles instead of the
193:57 - level node and this is super easily done
193:59 - right now when we are calling this a
194:03 - child we are calling the function on the
194:06 - Node the script was attached to which is
194:09 - this node 2D right now I already have it
194:11 - selected to add the child to another
194:13 - note all you have to do is get a note
194:16 - itself so let me drag in the projectiles
194:19 - and then run the method ADD child
194:23 - don't forget to actually add the child
194:25 - which is going to be the laser and then
194:27 - we are good to go if I now run all of
194:30 - this again click on remote
194:33 - you can now see if I move the game to
194:36 - the side inside of projectiles we have a
194:39 - drop down and we keep on adding more
194:42 - lasers it has a bit of a delay but it
194:45 - definitely works
194:49 - cool with that we have covered the final
194:52 - part
194:53 - all we have to do now is do an exercise
194:55 - and then we are good to go
194:58 - when this secondary action is triggered
195:00 - I want you guys to create a grenade
195:02 - scene with a rigid body 2D for now the
195:05 - movement is going to be really weird so
195:07 - don't worry too much about it I'll cover
195:09 - that in the next part
195:11 - once you have that create an instance of
195:13 - this node in the level scene and
195:15 - position it at the gun nozzle position
195:17 - basically I want you guys to repeat what
195:19 - we did for laser except with the rigid
195:21 - body 2D the major difference now is that
195:24 - instead of a laser we have a grenade you
195:26 - can find the image for that next to the
195:28 - lasers in the graphics folder
195:30 - pause the video now and try to implement
195:32 - all of that
195:36 - back in Godot I want to create a new
195:39 - scene and this new scene is going to be
195:42 - a rigid body 2D
195:46 - let's rename this right away to grenade
195:49 - like with the laser we're going to need
195:52 - two more nodes we first of all need a
195:54 - Sprite so we can see something and then
195:56 - we need a collision shape 2D
195:58 - the Sprite we're getting from
196:00 - projectiles and there we have grenade
196:03 - let me place it in there and there we go
196:05 - we have a grenade
196:07 - for the Collision shape I think for this
196:10 - one a circle shape is going to be ideal
196:12 - something like this
196:15 - with that I can save all of this as
196:17 - grenade next to the laser before we are
196:21 - using this I want to inside of the level
196:23 - just attach this scene with Ctrl shift
196:27 - and a and add the grenade because I
196:31 - think by default this one is a bit large
196:34 - it's even larger than the player
196:37 - for that inside of the grenade I want to
196:39 - get the Sprite 2D and transform the
196:43 - scaling to let's say 0.2 also now I have
196:47 - to update the Collision shape to
196:49 - something like this
196:53 - save the scene and now we have a grenade
196:57 - that's probably a bit too small let's go
197:00 - for a scale of 0.4
197:04 - once again we need a new Collision shape
197:07 - that's looking good
197:09 - and now this feels much more appropriate
197:12 - now that we have that we can work inside
197:15 - of the level script to create an
197:17 - instance of this scene once the player
197:20 - clicks on the secondary action which
197:22 - Triggers on player grenade I guess as a
197:25 - reminder when the player is clicking on
197:28 - secondary action then we are emitting
197:30 - the grenade signal and this grenade
197:32 - signal we are capturing inside of this
197:35 - function
197:37 - first of all though we have to create a
197:41 - laser scene like we have done for the
197:43 - laser earlier to keep things consistent
197:45 - I want to get a grenade scene which once
197:49 - again is going to be a packed scene
197:51 - which I want to pre-load and in there I
197:55 - want to get the grenade
197:57 - spelling this correctly would help a lot
198:01 - for this one now we have a couple of
198:03 - options we have grenade.png then inside
198:06 - of the UI we have another Grenada PNG
198:08 - and then we have the actual scene so be
198:11 - careful which one you are choosing here
198:13 - once again you always want to have a
198:16 - tscn ending
198:18 - I guess
198:19 - Udo is quite smart here if you choose
198:22 - anything else like the image you are
198:24 - going to get an error like so
198:27 - that you cannot assign a value of a
198:30 - compressed texture 2D to a variable
198:31 - grenade scene
198:33 - that is because we have a specified type
198:35 - packed scene so this packed scene is
198:38 - actually quite helpful here so let me
198:40 - undo all of this this is going to work
198:42 - much better
198:43 - next up we have to create an instance of
198:47 - this packed scene which I Do by creating
198:50 - a new variable let's call it grenade and
198:52 - for that we want to have the grenade
198:54 - scene and then instantiate
198:58 - next up I want to get the grenade and
199:01 - then update the position and set the
199:04 - position we are hopefully getting from
199:08 - this signal right now it doesn't exist
199:09 - so Godot is giving us an error
199:12 - to fix that inside of the player disc
199:16 - grenade emit has to include a position
199:19 - I suppose for this one we could go with
199:22 - a random position and if you want to
199:24 - practice that I would very much
199:25 - recommend you to do so although to
199:27 - simplify things a bit
199:29 - I want to get a position let's call it
199:33 - the marker an alternative way of
199:35 - approaching all of this is once again I
199:38 - could get the laser start positions
199:41 - on that I want to get
199:44 - the children once again and on that I
199:47 - simply want to pick child number zero
199:50 - this is the one I placed in the center
199:52 - so this one should always work just fine
199:56 - since this is now going to return a note
199:58 - I can get the global position
200:02 - on this one right away let's actually
200:04 - remove the marker because now we are
200:06 - simply getting a position in this
200:08 - position I want to emit when we are
200:10 - sending the signal
200:12 - so with that back inside of the level I
200:14 - get another parameter which is the
200:16 - position and with that Kudos should be
200:18 - happy again perfect finally we have to
200:21 - add this new grenade to the Note 3 and
200:25 - for that I am going to reuse the
200:27 - projectiles node 2D so I want to get
200:31 - projectiles and then add a child except
200:35 - now the child is going to be the grenade
200:38 - and with that I can run all of this
200:41 - if I now click
200:44 - with my right Mouse button we got some
200:47 - weird Behavior we do get a grenade but
200:50 - well it's falling down
200:52 - and that's a very weird Behavior the
200:54 - lasers though still work just fine
200:56 - and this part is getting really long so
200:58 - let's finish it here and in the next
201:00 - part we talk more about rigid body 2DS
201:02 - if you understand them they're quite
201:04 - easy to work with but if you don't they
201:06 - are really frustrating let's cover the
201:08 - final Collision body which is a rigid
201:10 - body 2D on top of that for this part we
201:13 - are also going to cover the player
201:15 - rotation that way we can shoot in
201:18 - different directions something that is
201:19 - very much missing right now but first of
201:21 - all a reminder here are all of the
201:24 - Collision objects at this point we have
201:26 - covered an area 2D in detail we have
201:28 - covered static body to these and we have
201:30 - a character body 2D so the only thing
201:32 - missing is a rigid body 2D and as a
201:35 - reminder this is a moving body that
201:38 - moves by a physics it's basically a
201:40 - cannonball we already created the
201:43 - grenade so we already have some pretty
201:45 - good starting points however if I go to
201:49 - godo I can already show you as a
201:52 - reminder that right now the grenades are
201:55 - acting really really weird so what's
201:58 - happening here the issue is that a
202:00 - richer body 2D has a gravity setting
202:02 - which by default is set to 1 which means
202:05 - it is falling down which is the issue we
202:07 - have to deal with right now besides that
202:09 - you can also set physics behavior in the
202:11 - inspector and there are additional
202:13 - options that you set via a physics
202:16 - material
202:17 - I'll cover those in just a second
202:19 - finally you are only supposed to give
202:21 - this rigid body 2D a starting velocity
202:24 - all of the other movement is handled by
202:26 - physics
202:27 - and that once again is quite a bit of
202:29 - theory so let's have a look at all of
202:31 - this back in the dough I want to have a
202:34 - look at the grenade and on the right we
202:36 - have the inspector right now the major
202:39 - issue that we have is this gravity scale
202:41 - this is set to 1 and this means that
202:44 - things are moving down if we set it to
202:46 - zero and start the game again I can now
202:49 - shoot a grenade and it doesn't fall down
202:52 - anymore
202:53 - we also get collisions but that's just
202:57 - about it nothing else is happening
202:58 - basically with this setup we have a
203:01 - static body
203:02 - so how can we actually change things
203:06 - for that you would want to look down a
203:09 - bit and there we have linear and angular
203:11 - linear is the easier one in there for
203:14 - example we have velocity this is the
203:16 - movement of this rigid body
203:18 - there we have X and Y for example if I
203:21 - set X to a hundred and run all of this
203:24 - again
203:26 - then we have a movement to the right
203:30 - and this works for all of the objects we
203:32 - are going to create so this is working
203:34 - just fine also we get collisions
203:37 - looking pretty good
203:39 - you can set a few more things in here
203:42 - for example there's angular velocity we
203:44 - have constant forces but I don't worry
203:47 - too much about those instead what I want
203:49 - to work on is the physics material and
203:51 - spam this a bit
203:54 - we have a physics material overwrite
203:57 - right now it says empty but if you click
203:59 - on it you can give it a new physics
204:01 - material
204:02 - and this gives you a few more options
204:04 - and in particular bounce in there is an
204:07 - interesting one for example this we can
204:08 - set to something really large let's say
204:11 - a hundred
204:12 - and now if we run the game again
204:14 - and we get a bounce there the grenade is
204:16 - bouncing off our player we can do this a
204:19 - couple of times let me create another
204:21 - grenade and yeah we get another bounce
204:25 - if we set this to a lower number let me
204:28 - set it back to zero and we do all of
204:30 - this again
204:31 - now we get a different kind of bouncing
204:33 - behavior all of these numbers depend
204:35 - very much on the mass the inertia then
204:38 - the physics material and then all of the
204:41 - other stuff you can set in here if you
204:43 - want to have really good physics
204:44 - Behavior you want to play around in this
204:46 - a lot
204:48 - although in my case I'm not going to
204:49 - worry too much about it instead what is
204:52 - much more important right now is that
204:54 - right now we always shoot the grenade in
204:57 - One Direction so right now this would be
204:59 - to the right but this obviously doesn't
205:02 - work terribly well so we have to figure
205:04 - out how to control the starting
205:06 - direction of this grenade and for that
205:09 - once again we will need some code
205:11 - although first of all I want to minimize
205:14 - the physics material if you click on it
205:16 - you can maximize and minimize it
205:18 - and I want to set the velocity back to
205:21 - zero
205:22 - once we have all of that I can have a
205:24 - look at the script and we are creating a
205:27 - grenade inside of the on player grenade
205:30 - function right now we are only setting a
205:33 - position
205:34 - what I also want to do is get the
205:37 - grenade again and then set a linear
205:40 - velocity right now Godot doesn't auto
205:43 - complete this line and there's actually
205:46 - something super useful I can cover right
205:47 - away we know that this grenade is a
205:49 - rigid body 2D and a rigid body 2D if I
205:53 - open the inspector has a linear velocity
205:56 - so it should come up in the autocomplete
205:59 - however it doesn't so if I type linear
206:02 - nothing is happening the reason it
206:05 - doesn't is because Godot doesn't know
206:07 - that this grenade is a rigid body 2D but
206:10 - we can give godo a hint or rather we can
206:12 - tell to instantiate this object
206:15 - as
206:16 - a rigid body 2D
206:19 - that way the grenade now is going to get
206:22 - a linear velocity
206:25 - which is much easier to work with
206:28 - you don't have to add these things but
206:30 - very often game development or in
206:32 - development in general you want to be
206:34 - really precise about the types of data
206:36 - you are working with so adding this s
206:38 - can be super helpful
206:41 - but anyway this linear velocity wants to
206:44 - have a vector
206:45 - let's just give it one and let's say for
206:48 - now we want to have a vector 2 that is
206:51 - always pointing up so we always shoot
206:54 - North this we can multiply it by a speed
206:57 - let's say for now a hundred
207:00 - what this one is going to do is now
207:03 - the grenade is going to move up
207:06 - the grenade we had by default in the
207:08 - scene is not going to get this attribute
207:10 - so as a reminder let me minimize this
207:14 - inside of the level I have created one
207:17 - grenade to test the scale and this one
207:19 - we are just adding as an instance inside
207:22 - of the editor
207:23 - however inside of the script when we are
207:26 - creating the grenades we are updating
207:28 - the position and the linear velocity
207:30 - which means the grenades we are creating
207:32 - inside of the function are going to move
207:34 - but the one we created just here is not
207:36 - going to move I hope the difference here
207:38 - makes sense
207:40 - you could also work with different
207:41 - directions now for example this could be
207:43 - left and let me run this again
207:46 - now we get a grenade moving to the left
207:48 - so this is still working just fine
207:51 - that being said we don't just want to
207:54 - have a hard-coded direction we want to
207:56 - shoot in the direction the player is
207:58 - looking at and for that we have to add a
208:01 - few more things first of all
208:04 - we have to start with the player so
208:07 - right now the player is always looking
208:09 - up and this obviously isn't ideal
208:12 - fortunately we can change that super
208:15 - easily
208:16 - inside of the process function I want to
208:20 - add another entry let's call it rotate
208:23 - layer or just rotate
208:25 - basically what we want to do is we want
208:28 - to play it to always look at the mouse
208:31 - meaning if the player is somewhere here
208:34 - and our Mouse is somewhere here we want
208:36 - the player to rotate and look at the
208:39 - mouse
208:39 - for that Godot has an inbuilt function
208:42 - that is incredibly helpful this one is
208:44 - called look at and this look at function
208:48 - is rotating any kind of node so it looks
208:51 - at a certain Vector you can see it in
208:53 - the prediction we get Point vector 2.
208:55 - the point we want to look at is our
208:57 - Mouse position
209:00 - and this we can get very easily we need
209:02 - another function that is called get
209:04 - Global Mouse position
209:07 - and that is almost all we need at this
209:11 - point I can run the code and we're going
209:12 - to get something weird
209:14 - you can see my mouse and the player is
209:16 - rotating but it is rotating in the wrong
209:20 - way
209:21 - so we basically have a 90 degree offset
209:25 - the reason for that
209:27 - and let me minimize all of this and
209:29 - explain things a bit more so here is the
209:33 - player
209:34 - we want the player always to look at
209:37 - straight ahead and let's say here's the
209:39 - mouse this would be the ideal
209:42 - right now however the issue is that the
209:46 - player always rotates in roughly this
209:48 - direction so what's going wrong the
209:52 - answer for this one is actually quite
209:53 - easy the default rotation for a vector
209:56 - is always going to the right so this is
210:00 - the default zero position and since our
210:02 - player currently is looking up we are
210:05 - giving it a negative 90 degree offset
210:07 - which is what's causing the problem
210:09 - inside of the game
210:10 - to fix that we have to get our player
210:13 - image then go to transform and then
210:16 - rotate all of this by 90 degrees
210:19 - and now we have to realign the playup
210:21 - with the Collision shape and this should
210:25 - work much better
210:27 - if I now run all of this again there we
210:30 - get
210:31 - a much better Behavior so this I am
210:34 - quite happy with
210:35 - although now if I actually click on the
210:37 - mouse button we get some weird laser
210:40 - spawn Behavior same with the grenades
210:42 - this doesn't work terribly well
210:45 - the reason for that is now we have the
210:47 - gun nozzle here and the laser starting
210:49 - positions are here
210:50 - that fortunately is quite easy to fix
210:53 - let me zoom in a bit all we have to do
210:56 - is take the markers and move them in the
210:59 - new position
211:00 - it doesn't have to be too precise but
211:03 - try to get it something like this
211:07 - way of that I can run the game again and
211:11 - now we get a laser from the top of our
211:14 - gun
211:15 - same with the grenades
211:18 - and this is definitely an improvement
211:20 - cool
211:23 - however now we have another problem and
211:27 - that is you could already see it the
211:28 - lasers always go up and the grenades
211:31 - always go to the left
211:33 - which means we have to add a few more
211:36 - things
211:37 - and let's start with the grenade and
211:39 - sending the signal I actually realized I
211:41 - forgot to add the position
211:45 - down here when we are emitting the
211:47 - signal for the grenade we already
211:49 - included the position and this still
211:52 - works even if you don't add it but it's
211:55 - better phone to include it
211:57 - I want to include a position and besides
211:59 - that I also want to include a Direction
212:03 - this direction we have to get all of
212:06 - that is going to happen inside of the
212:09 - secondary action if statement I besides
212:12 - a position want to emit a direction
212:15 - which doesn't exist right now so we have
212:18 - to create it let's create another VAR
212:20 - Direction
212:22 - so what are we going to need for the
212:25 - direction well what we are going to need
212:27 - is some Vector math we basically want to
212:30 - figure out and let me draw all of this
212:32 - our player would be somewhere around
212:34 - here the actual position doesn't matter
212:36 - so much and then we have a mouse
212:39 - position and what we want to know is the
212:41 - direction so what is this angle going to
212:44 - be and for that some very basic Vector
212:47 - math is going to be what we need and let
212:49 - me simplify the drawing this is our
212:52 - player let's call that P and then we
212:54 - have the mouse let's call this one m
212:57 - that is the worst M I have ever made
213:00 - that should look more like this to get
213:03 - the direction between two vectors you
213:05 - always want to have the target Vector
213:07 - which in our case is the mouse position
213:08 - and from that you want to subtract the
213:10 - starting Vector which in our case is the
213:12 - player position which means all that we
213:15 - want to do we want to get
213:18 - once again get Global Mouse position and
213:22 - from that we want to subtract the player
213:25 - position the position of the player we
213:27 - can get quite easily this is literally
213:28 - just a position because remember this
213:31 - script is attached to the player so a
213:33 - position is just the attribute of the
213:36 - player
213:36 - and with that we have a good start
213:38 - although Godot is complaining there is
213:41 - already a variable named Direction
213:42 - declared in this scope as a consequence
213:45 - we have to rename this direction let's
213:47 - call it player Direction
213:49 - and this is the direction we want to
213:52 - emit when we are emitting the grenade
213:54 - signal
213:55 - that being said there's one more thing
213:57 - that we do have to do this
213:59 - outcome which is going to be a vector we
214:02 - have to normalize
214:05 - what does that mean
214:07 - well back to the drawing and let me
214:11 - clean all of this up once again let's
214:13 - say the player position is at
214:17 - 200 for x and 100 for y this is just the
214:21 - position
214:22 - and the mouse could be at something like
214:25 - let's say
214:26 - 300 and 200.
214:30 - if we subtract one from the other the
214:33 - operation we have done down here all
214:35 - that we're doing we are getting our
214:36 - Target Vector which is 300 and 200 and
214:41 - from that we are subtracting 200 for x
214:45 - and 100 for y
214:48 - the result would be
214:49 - [Music]
214:51 - 10100 what these numbers mean is that we
214:55 - have to go 100 pixels to the right and
214:58 - also 100 pixels up
215:01 - and that way we get from one point to
215:02 - the other point now these numbers are
215:05 - useful for the position but for a
215:07 - Direction they are useless because what
215:09 - we want to do in just a second is we
215:12 - want to multiply this with a speed for
215:15 - Simplicity let's say our speed could be
215:17 - 500.
215:19 - a result of all of this would be a huge
215:23 - number way too large
215:25 - also it would be inconsistent if the
215:28 - mouse so this point is further away
215:31 - let's say it is at a position
215:34 - 1000 and 500. we would get one thousand
215:39 - and we would get 500 and from that we
215:43 - would be once again subtracting two
215:46 - hundred and one hundred
215:48 - the result would be
215:50 - 804 100.
215:53 - having these two numbers being different
215:55 - this direction and this direction are
215:58 - inconsistent the outcome would depending
216:01 - on how far away the mouse is from the
216:03 - player we will get faster or a slower
216:05 - movement so I hope all of this makes
216:07 - sense basically what we want to do is we
216:09 - want to normalize the direction that we
216:12 - only get the direction but not the
216:14 - length of this vector
216:16 - and for that we will need normalized
216:19 - this is a really common operation you do
216:21 - in game development is it reduces the
216:24 - size of the vector to 1. which would
216:27 - turn the length of this vector and this
216:28 - Vector identical so that when we
216:31 - multiply it with the speed we always get
216:32 - the same outcome
216:34 - okay there was a lot of explanation for
216:36 - not very much code but this is what we
216:38 - need to get the direction that the
216:40 - player is currently facing at
216:42 - this we can now use inside of the level
216:45 - because there we have on player grenade
216:48 - besides a position we also get a
216:51 - direction now
216:53 - and this direction I want to use instead
216:56 - of the vector.left so Direction
216:59 - and now this should be working much
217:02 - better
217:03 - so I can shoot a grenade and I always
217:06 - have to wait two seconds but now it
217:08 - moves in the right way
217:12 - so this is looking much better
217:16 - one more thing that I do want to do
217:18 - right now the speed is always 100 and
217:21 - that I don't like so much back at the
217:24 - grenade
217:25 - I want to add a script and the script
217:28 - once again I want to have in the same
217:30 - folder where we have the scene this one
217:32 - is looking good and for the note I want
217:34 - this to be empty
217:36 - so create and now we can set a VAR speed
217:41 - and let's go with 750. although this
217:44 - doesn't have to be a variable this can
217:46 - just be a constant because it's not
217:48 - going to change
217:50 - with that back inside of the level and
217:52 - once again I want to extend all of this
217:55 - I want to get the grenade
217:58 - and this now has an attribute which is
218:00 - going to be the speed let's try all of
218:03 - that again
218:06 - it is working
218:08 - well the grenades are moving faster so
218:11 - that's a good sign although there's one
218:13 - thing that I do want to do so let's say
218:15 - I hit a wall something like this right
218:18 - now the grenades stick to the wall
218:20 - almost perfectly but that I don't like
218:23 - so much
218:24 - to overcome that I am going to work
218:27 - inside of the inspector inside of the
218:29 - physics material I'm going to set the
218:31 - friction to 10 and the bounce to 0.4
218:36 - besides that under linear we have damp
218:41 - and this I want to set to 1.6 with that
218:44 - if I try all of that again and hit a
218:48 - wall we get quite a bit more bounce
218:51 - that I do like a bit more also when we
218:53 - had other rigid bodies we get basically
218:56 - billiard so if you want to make that
218:58 - kind of game you now have a really good
218:59 - start with that we just have to do an
219:02 - exercise and then we are done with
219:03 - another really important bit I don't
219:05 - think we have the practice of rigid
219:07 - bodies too much because they're
219:09 - ultimately not that complicated
219:11 - however what I do want to practice is
219:13 - the laser and this is the one part of
219:15 - the game that we definitely have to work
219:16 - on I want you guys to move the laser in
219:19 - the player Direction like we have done
219:21 - for the grenade most of you now try to
219:23 - implement this one
219:27 - I want to look at the level and in the
219:31 - app first of all I want to get rid of
219:33 - the grenade because this one shouldn't
219:35 - be there in the first place now we can
219:37 - work on the laser this part just annoyed
219:39 - me
219:40 - okay so for the laser we have to look at
219:43 - some code we are creating a laser in the
219:46 - on player laser function and this one
219:48 - right now only has a position besides
219:51 - that we also want a Direction
219:54 - this direction we have to generate
219:56 - inside of the player and for that let's
219:59 - look at the player inside of this if
220:02 - statement we are generating the laser
220:04 - action so this one will also need the
220:07 - direction I'm going to put this right
220:09 - below the other variables but you can
220:11 - basically put it wherever you want once
220:13 - again I want to create a player
220:15 - Direction This player direction is going
220:19 - to be a new vector and for that I want
220:21 - to get Globe build Mouse position
220:25 - and then subtract the current position
220:27 - of the player all of that we also have
220:30 - to normalize and then we are good to go
220:33 - one important thing to mention now is
220:35 - that we now have a player Direction
220:36 - inside of this if statement and another
220:38 - one inside of this if statement which
220:41 - well is a bit unnecessary we can
220:44 - simplify this by simply cutting out the
220:46 - first one and then placing it before the
220:49 - if statements that way we don't need the
220:51 - second one anymore next up when we are
220:54 - emitting the laser signal besides the
220:57 - position I also want to get the player
221:01 - Direction on top of that all the way at
221:05 - the top right now when we are declaring
221:08 - the signal we only have the position now
221:11 - all of this would still work but
221:13 - nonetheless you want to add the
221:15 - direction in there for one important
221:17 - reason
221:18 - if I minimize all of this and go back to
221:21 - my level scene
221:24 - in the app we have the player and the
221:26 - player has two signals we have the
221:29 - grenade and this one shows the position
221:30 - and the direction however the laser only
221:34 - has the position right now
221:37 - and it shows the position because inside
221:39 - of the script for the player we only
221:41 - have the position
221:43 - if I add the direction and then save all
221:45 - of this
221:46 - we now get laser position and Direction
221:49 - so this makes it much easier to see
221:52 - what's going on in your game you could
221:54 - leave all of this entirely blank and it
221:57 - would still work but if you work with
221:59 - anybody else or if you are not looking
222:01 - at your game for some time and come back
222:03 - to it this would become incredibly
222:05 - confusing adding these parameters here
222:07 - is really good documentation of your
222:09 - code all right with that we have a laser
222:12 - signal and we are emitting the position
222:15 - and the direction which means now inside
222:18 - of the level we are getting the position
222:20 - and the direction so now inside of the
222:23 - laser we can use all of that for this
222:25 - one we want to get our laser and now we
222:28 - have a bit of a problem because for the
222:31 - grenade so the rigid body 2D we could
222:33 - use the linear velocity but for the
222:36 - laser such an attribute does not exist
222:39 - and just to be consistent here it's
222:41 - going to be an area 2D
222:44 - so what can we do to move the laser in a
222:46 - certain direction well all we have to do
222:49 - is once again get our rotation degrees
222:52 - to get the rotation degrees all we have
222:55 - to do is get the direction and then use
222:57 - the angle method
223:00 - any Vector in Godot has this method it
223:02 - simply converts a vector to an angle
223:05 - however it returns a Radiance not
223:07 - degrees so you can make an adoption in
223:10 - one of two ways either you could wrap
223:12 - all of this inside of another function
223:14 - and the function you want is called red
223:18 - underscore 2 underscore degree or just
223:22 - deg this converts a radiant to a degree
223:25 - alternatively
223:27 - since the rotation by itself is looking
223:31 - for Radian
223:32 - this would also work just fine
223:36 - however if I run all of this now
223:39 - and I shoot
223:40 - we get some slightly weird Behavior
223:46 - so this is not ideal
223:49 - the reason for that if I open the laser
223:52 - scene you might already see it by
223:54 - default
223:55 - the vector position for zero goes this
223:59 - way but our laser points up because of
224:03 - that our direction is wrong by 90
224:05 - degrees now you could rotate the laser
224:07 - but in my case since I want to
224:10 - demonstrate a couple of different
224:11 - approaches we can do something different
224:13 - back inside of the level
224:17 - I want to expand all of this I once
224:19 - again want to use rotation the grease
224:23 - because that's going to make the math
224:25 - easier and I want to convert the angle
224:28 - we get from the direction and convert
224:30 - this
224:32 - with red to dig three like so all we
224:37 - have to do is add Plus 90 and this would
224:40 - also work so let's try this one
224:43 - and
224:44 - now we get a better Behavior so the
224:48 - laser is pointing in the right direction
224:50 - it's just not moving in the right
224:52 - direction it always moves up but we
224:54 - certainly make progress
224:56 - the reason why the laser is always
224:57 - moving up let's have a look at the
225:00 - script we have a direction that is a
225:02 - vector 2 and this one is always going up
225:05 - so this Vector we have to change
225:08 - which we can do inside of the level I
225:11 - want to get the laser and now one
225:14 - attribute is Direction This is the
225:17 - direction we have declared here and this
225:19 - direction is just going to be the
225:21 - direction we are getting from the player
225:23 - so the one we're getting via the
225:24 - attributes
225:26 - and now
225:28 - this is feeling drastically better
225:32 - and with that we have our laser
225:35 - and it's working really good cool so
225:39 - with that we have covered another really
225:41 - important part of Godot at this point
225:43 - you should have at least the basic
225:44 - understanding of the different physics
225:46 - bodies and also how to create instances
225:48 - of a scene in code which is super useful
225:51 - to create bullets or lasers or stuff
225:53 - like that for this part we're going to
225:55 - cover something surprisingly easy the
225:57 - camera
225:59 - all we have to do for that is to add one
226:01 - more node to our player and then we are
226:03 - done there is no Theory to cover here
226:06 - let's Jump Right In
226:08 - here we are back in Godot and if I run
226:10 - the game you can very much tell there
226:12 - just isn't very much space all of this
226:15 - feels incredibly cramped so what I want
226:17 - to have is a camera that follows the
226:19 - player which would enable us to actually
226:22 - explore the level
226:24 - and for that like basically anything
226:26 - else in godo we have to learn about
226:28 - another node that node is called a
226:31 - camera and the first thing you have to
226:33 - know about it is that it wants to be the
226:35 - child of the node it follows which in
226:38 - our case will be the player which means
226:40 - with the instance of the player selected
226:42 - I want to add a camera 2D
226:46 - and now we get another box around the
226:50 - player it's a pinkish color that well
226:54 - shows us another outline never run the
226:57 - game
226:59 - we already get some very different
227:01 - Behavior
227:02 - it's as easy as that to add a camera
227:06 - however at this point if I move around a
227:09 - tiny bit you can see there's some weird
227:11 - junkiness if you follow along just move
227:15 - around yourself it doesn't feel very
227:17 - natural
227:18 - that is because the camera 2D is lagging
227:21 - behind the object it follows it's not a
227:23 - perfect one-to-one movement instead
227:25 - there's supposed to be some smoothness
227:28 - that smoothness you get under positions
227:31 - moving and you basically always want to
227:33 - have this enabled otherwise your game is
227:35 - going to look quite weird
227:37 - you can set a speed Auto 5 pixels per
227:39 - second is usually what you want
227:42 - now with that everyone all of this again
227:44 - now our game is feeling much better
227:48 - and if I stop the movement you can see
227:50 - the camera is catching up to the player
227:53 - very very quickly but there definitely
227:55 - is some kind of movement swing after we
227:58 - stop moving
227:59 - and with that we have a camera that's
228:02 - actually looking good now another thing
228:04 - that you probably want to do is set the
228:06 - zoom level this tells you how big this
228:09 - rectangle is going to be so the actual
228:11 - visible area
228:13 - for example we could set this to 0.6
228:18 - and now you are going to see much more
228:21 - of the level
228:23 - and this is what I think I used for the
228:26 - final game so this is what I quite like
228:29 - other than that you have a few more
228:31 - attributes you could be working with for
228:33 - example you could give the camera an
228:35 - offset and if I set this to let's use a
228:38 - larger number 300 pixels you can already
228:41 - tell now the camera
228:44 - is being offset
228:46 - by 300 pixels
228:49 - this would also be visible in the game
228:51 - let's run all of this again and there we
228:53 - go now the player is always at the top
228:56 - and the object or the gate is still
228:58 - there
228:59 - there are a few more things you could
229:02 - work with
229:03 - but most of them aren't terribly
229:05 - important I guess rotation could also be
229:08 - an attribute but in our case the player
229:10 - isn't going to rotate so all of this
229:12 - gets much easier
229:13 - the last attribute you might be
229:15 - interested in is the limit and this
229:17 - tells you how far the camera is going to
229:19 - go for example if I set the left side
229:22 - which right now is at minus 10 million
229:25 - if I set this to zero you can already
229:28 - see it in the game now the camera cannot
229:31 - exceed the left side of 0 pixels
229:34 - 0 pixels is this side and our camera can
229:38 - never exceed it
229:40 - so now if I run the game
229:43 - you can see our camera is never going
229:46 - further and if I go up and you see the
229:47 - gate you can actually tell what's going
229:48 - on so our camera can never go further to
229:51 - the left but we can still go further to
229:53 - the right
229:54 - cool
229:55 - now in my case I don't want to have this
229:57 - enabled and I also want to set the
229:59 - offset to zero
230:01 - but these options you might find
230:03 - interesting
230:04 - but other than that a camera really
230:07 - isn't terribly complicated so there
230:09 - isn't that much you have to know about
230:10 - it
230:11 - but before I finish this part there's
230:13 - one more thing I do want to cover and
230:16 - that is the actual size of the game
230:18 - so right now you can see we have this
230:22 - blue outline around our game and this is
230:25 - telling us how big the window is and
230:27 - this you can change quite easily this
230:29 - happens inside of project and project
230:31 - settings and in there you have lots of
230:35 - options that can determine how the game
230:37 - is run on a computer
230:39 - the option you want to look at is under
230:41 - display and there we have a window right
230:44 - now we have a window size of 1152
230:49 - and 648 I have no idea how we get those
230:52 - numbers but you can change them quite
230:54 - easily in my case I'm going with 1280 by
230:57 - 720.
230:59 - those feel like much more natural
231:01 - numbers
231:02 - you can also set a whole bunch of other
231:05 - variables but in my case I'm not going
231:07 - to bother too much
231:09 - also if you have a larger window you
231:12 - could set larger numbers
231:13 - just choose whatever you think is best
231:16 - so with that said let's run all of this
231:18 - again and now we get a slightly larger
231:20 - window and that is all we need for this
231:23 - part the camera ultimately is a really
231:26 - easy thing to implement
231:28 - for the next part though we are going to
231:30 - cover how to actually fill out the level
231:31 - with something that looks good so
231:33 - there's actually a point to exploring
231:35 - the game I'll see you there
231:37 - now that we can move around it is
231:39 - becoming a bit obvious that our level is
231:42 - just not looking very good simply
231:44 - because we don't have that many images
231:45 - so what I want to cover in this section
231:48 - is how to display lots of images
231:51 - or more specifically we want to decorate
231:54 - the level with images
231:56 - and there are a couple of ways you can
231:58 - approach this the easiest one is you can
232:02 - simply place a lot of Sprites and then
232:04 - modify them quite a bit you can do that
232:07 - either by changing the scale or the
232:09 - color values and this is what I want to
232:12 - start with although I already want to
232:14 - emphasize for any kind of complex setup
232:17 - this is not going to be good enough for
232:19 - that we're going to use a tile map that
232:22 - I will cover in just a bit but now let's
232:25 - play some Sprites because they can do
232:27 - quite a bit
232:29 - back in good hope we can see that we
232:31 - have a gate and a player those are the
232:34 - only things visible which isn't very
232:36 - much and that's the main reason why our
232:38 - level doesn't look very good
232:40 - to make all of that a bit prettier with
232:42 - the level node selected I want to add
232:45 - another node and this for now is going
232:47 - to be a node 2D
232:49 - which I'm going to rename right away
232:51 - let's call this one the ground
232:53 - and this ground should be below
232:55 - everything else so I'm placing it before
232:57 - the gate and the player
232:59 - this round for now is going to get a
233:02 - Sprite I want to rename this one right
233:05 - away as well let's call this one the
233:08 - soil
233:10 - now that we have that I want to go to
233:12 - graphics and in there we have a folder
233:15 - called Ground there we have dirt mesh
233:18 - and Stones Stones is the one I want to
233:20 - use so I'm going to drag it into the
233:22 - texture Tab and now we get a texture let
233:26 - me move it a bit around
233:27 - and with that if I restart the game this
233:32 - is already looking a little bit better
233:34 - not that much but it's certainly an
233:36 - improvement
233:37 - for now the major issue is that this
233:39 - texture is ending quite quickly
233:42 - so this isn't ideal
233:44 - which means now we have to figure out
233:45 - how to extend this texture and the first
233:48 - thing you could be doing is if you go to
233:50 - transform and look at scale you could
233:53 - scale this by a factor of a hundred
233:56 - and well you would have technically an
233:59 - infinite texture or the very least a
234:01 - really large one but it would look
234:03 - really bad so this isn't acceptable for
234:05 - a game
234:07 - that being said though if you scale to
234:09 - something let's say a factor of five
234:12 - this would still be looking fine
234:17 - so this is definitely something you can
234:19 - work with but in my case though I don't
234:21 - want to use this scale at all so I'm
234:23 - going to set it back to 1.
234:26 - instead I want to use the region and we
234:29 - have seen this all the way at the
234:31 - beginning of this tutorial so if I
234:33 - enable it by default the texture is
234:35 - going to disappear because we now use a
234:39 - rectangle that has an X and A Y position
234:42 - and a width and a height
234:44 - by default all of these are zero so we
234:47 - are showing nothing of the texture but
234:50 - we can edit the region with the edit
234:51 - region button and there we can select
234:55 - what we want to show of this texture we
234:58 - could for example simply pick one part
235:00 - of it and there you can see inside of
235:03 - the game we get this texture inside of
235:06 - the game
235:08 - what we can also do is we can select a
235:11 - larger area and let me select a much
235:13 - larger area
235:14 - something like this
235:17 - and now we have well a larger texture
235:21 - but it looks absolutely horrendous and
235:24 - that is because Godot is stretching out
235:26 - the Border pixels
235:28 - which is not a good behavior
235:30 - we can change that though and this we do
235:33 - under texture and there we have filter
235:37 - and repeat
235:38 - filter tells you when you are scaling
235:41 - the texture how is it going to scale
235:43 - which in our case we're not going to
235:45 - touch repeat is what we care about
235:47 - because in there we have inherit
235:49 - disabled and enabled enabled is what I
235:52 - want and this is looking much better
235:56 - with that we get an actual texture that
235:59 - we can use
236:00 - basically infinitely
236:03 - so let me run this again and if you look
236:06 - very very very closely so let me close
236:08 - the game and if I zoom in
236:13 - you can tell there we have repetition
236:16 - marks
236:17 - which are quite fine and for our game
236:20 - they probably wouldn't be noticeable
236:22 - and in an actual game you could simply
236:24 - Place some other object on top of that
236:26 - and then not worry about it also if you
236:29 - zoom out it's barely noticeable so this
236:31 - is totally fine for a game that would be
236:34 - the first way you can work with your
236:38 - level to add more images and this is a
236:40 - really good start so now at the very
236:42 - least we have some kind of background
236:45 - although I do want to add a bit more
236:48 - so with the ground selected I'm going to
236:50 - add another Sprite note
236:53 - and this Sprite node I'm going to call a
236:56 - decoration
236:58 - the texture for that we get from decals
237:01 - and there we have a dirt patch this I
237:05 - want to drag into the texture and now we
237:08 - get something like this
237:11 - it's just a texture that is displaying
237:14 - some dirt I think it's quite
237:15 - straightforward
237:16 - and this one doesn't really fit into the
237:19 - background we have right now so if you
237:21 - look at it inside of the game I guess it
237:23 - kind of fits to an extent but it could
237:26 - be better
237:27 - to make this kind of thing look better
237:29 - with the decoration selected you want to
237:32 - go to visibility because there you have
237:34 - visible this one should be obvious but
237:37 - then you have modulate and self-modulate
237:39 - and by default they are showing a white
237:43 - color
237:44 - and this one changes the color of this
237:46 - Sprite texture for example if I change
237:49 - it
237:51 - like so you can see we get some other
237:54 - kind of color
237:56 - you can also change the transparency and
237:58 - then make it disappear or reappear
238:02 - and in my case we could make all of this
238:04 - quite a bit more orange
238:08 - although you would have to play around
238:10 - with this quite a bit to make it look
238:12 - really fitting and I just don't have the
238:14 - time inside of a tutorial so let me do
238:17 - this a bit more roughly I just want to
238:19 - wash it out so the color fits better
238:24 - I guess this one a bit slightly better
238:28 - it's certainly an improvement so I am
238:31 - reasonably happy with that
238:33 - you might also be wondering why is the
238:35 - modulate and self-modulate what's the
238:37 - difference between the two and if you
238:39 - hover over them you can already get the
238:42 - answer
238:43 - if you look at modulate we got the color
238:45 - applied to this canvas item
238:47 - this one should be quite obvious the
238:49 - more important part comes next and that
238:51 - is that this property does affect child
238:53 - nodes
238:54 - unlike self-modulate which only affects
238:57 - the note itself which basically means
238:59 - that if this node has children they
239:02 - would also be affected by modulate
239:03 - however self-modulate only affects the
239:06 - node itself which means if there are
239:08 - children they would be ignored
239:10 - that's the only difference between the
239:12 - two
239:13 - cool and with that we have some more
239:17 - upgrades I guess what you could also do
239:20 - is there's quite a bit of moss and you
239:22 - could just drag it into the scene let's
239:24 - say like so like so
239:27 - like so and just zoom in
239:30 - there we get just a couple of most
239:33 - images and all of these most images I
239:35 - want to have inside of the ground
239:38 - that way we keep everything organized
239:40 - which is really important for a more
239:41 - complex game
239:43 - and while these are once again just
239:45 - images you can move around they don't do
239:47 - very much
239:49 - so with that in place let's play the
239:52 - game and there we get more and more
239:54 - details
239:56 - for an actual game you basically want to
239:59 - keep on adding more images and then
240:01 - flesh out the game the more you have and
240:04 - the better you get at placing them the
240:06 - better your game is going to look
240:07 - although this kind of thing is really
240:09 - time intensive so if you want to have a
240:12 - really good looking game you will have
240:13 - to spend a lot of time working with
240:15 - these Sprites
240:16 - in my case though I'm happy with this
240:18 - and I think all of this is reasonably
240:21 - straightforward so we don't have to
240:22 - practice it instead there's something
240:24 - that I really want to cover which is
240:26 - significantly more important that topic
240:28 - is going to be tile Maps
240:31 - to explain what they are doing let me
240:33 - show you an image here we have a couple
240:35 - of walls
240:37 - and a tile map is dividing these into
240:40 - certain areas you can set the size
240:42 - yourself and when you design artwork you
240:45 - want to keep this kind of Grid in mind
240:48 - and once we have this kind of grid we
240:50 - can pick items from that and then place
240:52 - them in a certain position for example
240:55 - we could make something like this where
240:57 - we take specific parts of the wall for
240:59 - example we are starting with this part
241:02 - and place it on the top left
241:05 - then we place another bit this number
241:08 - six and place it there next up we take
241:11 - number seven and place it twice and that
241:15 - way we are creating much more complex
241:16 - images
241:18 - with that system you can create really
241:20 - really complex levels and keep
241:23 - everything quite organized and also it
241:26 - allows you to place elements really
241:28 - precisely
241:29 - also later on you can add something like
241:31 - collisions or different visibility
241:33 - layers something I'm also going to cover
241:35 - that should cover the basics now before
241:39 - we work with all of this in practice I
241:41 - want to cover the basics in terms of
241:44 - naming the most important part is a tile
241:47 - set this is simply a graphic that we are
241:50 - separating into individual parts
241:52 - or to be more specific each individual
241:55 - part is called a tile
241:57 - which means a tile is a single graphic
242:00 - then we have a tile set and this one is
242:03 - a combination of tiles finally Godot
242:06 - specific we have a tile map and this is
242:09 - a good node that organizes tile sets it
242:12 - can contain a single one but it could
242:14 - also contain multiple power maps on
242:16 - Godot are fairly powerful so I will
242:18 - spend quite a bit of time on them
242:20 - but with all of that covered let's jump
242:23 - into the editor and let's have a look at
242:25 - all of this in practice
242:26 - back in the dough I want to add another
242:29 - node and I want to add it as a child to
242:31 - the ground node so with Ctrl or command
242:34 - a I want to add a tile map
242:37 - if I add that nothing is going to change
242:40 - in the game but inside of the editor we
242:43 - are now getting a tile map this one
242:45 - contains a few tabs we have tiles
242:47 - patterns and terrains although right now
242:50 - all of them are empty so we can't use
242:52 - any of that
242:54 - to make something work we have to look
242:56 - on the right in the inspector there is a
242:59 - tile set
243:00 - right now this one is empty and to
243:03 - create a new tile set we have to click
243:04 - on empty and then new tile set
243:07 - if I click on that not much is going to
243:10 - change although at the bottom we now
243:13 - have a tile set and a tile map
243:16 - the basic separation between the two is
243:18 - that a tile map lets us use a tile map
243:21 - and draw things inside of the game
243:23 - whereas a tile set contains the graphics
243:26 - and lets us edit them for example in
243:29 - there we could rename things or we could
243:32 - add physics behavior and quite a bit
243:33 - more I'll cover that in just a bit first
243:36 - of although I want to click on the tile
243:39 - set again so inside of the inspector I
243:41 - want to click on this tile set because
243:43 - in there we get a few more options that
243:45 - are really important tile shape and tile
243:48 - size are the really important bits tile
243:51 - shape right now is square
243:54 - although besides that we could also have
243:56 - isometric half offset square and hexagon
243:58 - in our case we want to have a square and
244:03 - the square size we are setting in the
244:05 - tile size by default this one is 16 by
244:08 - 16 pixels although in our case I want to
244:11 - have a size of 390 by 390.
244:15 - there's no Universal Tile size this
244:17 - always depends on what kind of graphic
244:20 - you are using also with these numbers
244:22 - selected we can now see in the game some
244:25 - kind of grid so this is definitely
244:28 - helpful
244:29 - although before we continue let me
244:31 - explain what these numbers mean really
244:32 - quick here's the slide from earlier and
244:35 - there are two attributes that we need to
244:36 - set the first one is the shape of each
244:39 - tile right now this is a square but it
244:43 - doesn't necessarily have to be a square
244:45 - for example we could also have a hexagon
244:48 - so then the tiles would look like this
244:50 - and if I could draw this would look
244:52 - halfway decent but I hope you get the
244:54 - idea
244:55 - the other attribute we have to work on
244:57 - is the width and the height of each of
245:01 - these tiles by default in Godot this was
245:04 - 16 by 16. but in our case we are going
245:10 - with
245:11 - 390 by 390.
245:16 - that way the tiles align perfectly with
245:19 - the graphic and that sets the size of
245:21 - each of the tiles so if you have a
245:23 - Graphic where you don't know what the
245:25 - size is you do want to play around with
245:27 - this quite a bit if the size or the
245:29 - shape doesn't line up none of this is
245:31 - going to work properly with that we have
245:33 - everything we need to get started so I
245:35 - can minimize the tile set again if I
245:37 - click on that as well we are now getting
245:39 - the tile set inside of the editor and
245:42 - essentially what goodo wants is that we
245:44 - are dragging a graphic into this table
245:46 - thing here the graphics we're getting
245:49 - from graphics and in there we have tile
245:51 - sets and there we have a few different
245:54 - tile sets the one you have seen in the
245:56 - slides is called outside walls this I
245:58 - want to drag into the tile set like so
246:01 - and then we can already see the graphic
246:04 - first of although Godot is giving us a
246:07 - message if I expand this it says
246:09 - autocrate titles and non-transparent
246:11 - texture regions basically what Godot
246:14 - wants to do is to create a tile in all
246:16 - of the tiles where we have some kind of
246:19 - graphic
246:20 - this I do want to do so I'm going to
246:22 - click on yes
246:23 - and with that let me expand this field
246:26 - by clicking on the icon
246:28 - we now get a selectable graphic in all
246:32 - of the tiles that have a Graphic so
246:33 - those two at the bottom don't have
246:34 - anything so I have to click on them to
246:37 - activate them and if I right click on
246:39 - them I can delete them again which
246:41 - unselects them which is the behavior I
246:43 - want because those two tiles are going
246:45 - to be useless I don't need them
246:47 - now we have a tile set and this tire set
246:51 - right now we can change this for example
246:54 - we could do inside of this field we
246:57 - could for example change the name
246:59 - right now the name is the name of the
247:01 - file which isn't ideal so let me rename
247:04 - it to volts that seems a bit better
247:08 - you could also change the margin or the
247:10 - separation let me change the separation
247:12 - to 50 then you can tell we have a gap of
247:16 - 50 pixels between them which is very
247:19 - much not what I want but if you have
247:21 - some kind of graphic where you don't
247:23 - know the tile size you do want to play
247:25 - around with them quite a bit
247:27 - you could also if you look at the top
247:29 - select the tile so if I click on select
247:32 - we get a few more information for
247:35 - example we could add an animation we
247:36 - could change the rendering but I am not
247:39 - going to do any of these things
247:41 - what I am going to work on later on
247:43 - though is the paint tab in there we can
247:46 - paint properties and the properties we
247:49 - could paint are quite diverse for
247:52 - example later on we're going to add a
247:54 - physics layer which is telling a though
247:56 - that we want to have collisions with all
247:58 - of these Sprites but this is going to
247:59 - come later for now inside of the setup
248:01 - because I changed the properties some of
248:04 - these tiles aren't selected so I want to
248:06 - click on them to make them available
248:07 - again that way I can use all of them
248:10 - inside of the editor
248:13 - and well with that I can minimize this
248:16 - tab by clicking on the icon at the
248:17 - bottom right again and now with the tile
248:20 - map selected
248:22 - all I have to do is select one of these
248:24 - tiles then click on the level and now I
248:27 - can paint these tiles
248:31 - and create a wall for example I could
248:33 - make this even more elaborate and make a
248:37 - larger wall that has a corner
248:41 - something like this
248:45 - and with that we have a wall I can run
248:48 - the game now and we can see the wall in
248:51 - the game this is looking really good
248:54 - so I am quite happy with this one
248:59 - although the actual wall I don't want to
249:01 - have like this so I want to delete the
249:03 - tiles for that I simply have to right
249:06 - click on the tile and then it gets
249:08 - deleted
249:10 - instead what I want to do for now since
249:13 - the player isn't supposed to get into
249:14 - this area in the back I want to create a
249:18 - wall
249:19 - let's say roughly here and then move
249:22 - around
249:25 - I guess we can place one more here and
249:27 - then on the other side
249:30 - we could start a wall something like
249:33 - this and since the player isn't going to
249:35 - see this part here at all anyway we
249:38 - don't have to worry too much about what
249:39 - the graphics look like
249:40 - so I want to have a few more walls and
249:46 - you definitely want to play around with
249:48 - this and spend some time on it but this
249:51 - for tutorial is totally fine so now
249:53 - let's run this again
249:56 - and now we are seeing a wall
250:00 - and right now there's too much of a gap
250:02 - so we do have to work on that I guess
250:04 - later on I could add for example another
250:07 - kind of object in there but the wall
250:09 - otherwise is working just fine
250:12 - this is covering the absolute basics of
250:14 - a tile map that being said though tile
250:17 - maps are really powerful so there's a
250:19 - lot more to cover I guess what I want to
250:22 - start with with the tile set selected I
250:25 - want to add another tile set right now
250:27 - we have walls besides that I want to
250:29 - have soil so this I also want to drag in
250:32 - there
250:33 - and then Godot was asking us once again
250:35 - do you want to autocrate tiles and this
250:38 - I do want to do now we have a second
250:40 - tile set
250:42 - I want to rename this one as well let's
250:44 - name it soil and this is just about all
250:47 - we have to do in here there isn't that
250:49 - much more and this tile set is quite
250:51 - simple so we just have a couple of dirt
250:53 - textures basically
250:55 - those I can also use inside of the tile
250:58 - map so now besides the walls we have the
251:00 - soil and this soil I can also place on
251:03 - the map just fine
251:07 - so this one works just as intended
251:09 - however we do have a problem now if I
251:12 - place the soil tile in the same tile
251:15 - where I have the wall we can see we are
251:17 - deleting the wall which is very much not
251:20 - intended
251:21 - so let me undo it and instead what I
251:24 - want is to have these soil tiles always
251:27 - below the walls and to achieve that I
251:30 - have to work with layers
251:32 - so there on the tile map we have layers
251:37 - right now we only have a single layer
251:40 - and this I want to give a name right
251:42 - away let's call this one the walls and
251:46 - if I type in here a name you can also
251:48 - see we have wallets in this tab as well
251:51 - this is really important keep this in
251:54 - mind
251:55 - what you can also do is add another
251:56 - element which is what I want to do
251:58 - because besides the walls I also want to
252:01 - have soil or ground or whatever you want
252:04 - to name it
252:05 - with that we have two layers and the
252:09 - Order of these two layers is really
252:10 - important whichever layer comes first is
252:13 - going to be below the other layer this
252:16 - works kind of like what we have seen
252:17 - with the notes
252:19 - so in our case we have the wrong
252:21 - Behavior right now where the soil is on
252:24 - top of the walls and this you can change
252:25 - quite easily all you have to do is pick
252:28 - this icon on the left the three lines
252:31 - and then move it where you want it to be
252:33 - so now we have the soil below the walls
252:36 - which means now whatever we are placing
252:38 - inside of the soil layer is going to be
252:41 - below the walls and these layers you
252:44 - select with this tab where we have soil
252:46 - and we have the walls and if you select
252:48 - one of them right now all of our tiles
252:51 - are inside of the walls layer so from
252:53 - this I want to get rid of all of the
252:56 - soil
252:58 - which means at this point I only have
253:00 - walls on this layer but if I select soil
253:04 - these walls become a bit more
253:06 - transparent
253:08 - which is indicating to me that we don't
253:10 - have them in the current layer and
253:12 - instead what I can do I could for
253:14 - example draw below them a couple of
253:19 - tiles with soil and
253:22 - let me do it like this so all of this
253:25 - isn't looking too bad
253:27 - now if I once again select the walls we
253:31 - can see that the soil this is a bit hard
253:33 - to see but the soil is now blacked out
253:35 - and we can see the walls again
253:38 - and if I unselect the entire tile map we
253:42 - can see we now have a wall and below
253:44 - that we have tiles with the soil this
253:46 - also works in the game and if I walk
253:49 - over there
253:51 - we get quite a nice looking graphic so
253:54 - this is looking really good
253:56 - what you can also do with the tile map
253:58 - selected again on the right side it's
254:01 - going to be quite annoying to draw all
254:04 - of these tiles so if I simply want to
254:06 - paint this one area
254:08 - selecting every single tile is going to
254:10 - be kind of annoying and for that Godot
254:13 - has a couple of features so right now we
254:15 - have this pen selected which says paint
254:17 - on top of that we could also draw a line
254:20 - with this one selected I can simply draw
254:22 - a line and Godot is drawing a line from
254:25 - one point to another
254:27 - what is a bit more useful is the
254:28 - rectangle this one allows you to draw a
254:31 - rectangle which is drastically faster
254:34 - you also have a fill bucket and this one
254:37 - intelligently fills a certain area
254:39 - although this is not what I want to use
254:41 - right now
254:42 - because well we don't want to fill every
254:45 - single tile
254:47 - the way you would want to use the Paint
254:49 - Bucket is you want to draw an area of
254:51 - tiles let's say something like this
254:53 - and this needs to be enclosed and in
254:55 - there you can fill the entire area
254:57 - although this is not what I want to do
254:59 - right now
255:00 - instead I want to draw in the corners of
255:03 - this area here so something like this
255:05 - and there I realized that right now I am
255:08 - working on the walls I should have been
255:10 - working inside of the soil
255:13 - which means I want to get rid of all of
255:16 - the tiles I have just created this
255:18 - shouldn't take too long
255:23 - there we go and now with the soil
255:26 - selected I want to draw a couple of
255:28 - corner pieces like so like this one
255:32 - this one
255:34 - for the downward pieces I can use those
255:37 - and then at some point I'm going to go
255:40 - back to the right
255:43 - now for this one piece we have a bit of
255:46 - a problem because we don't have a corner
255:48 - piece for this particular area
255:52 - instead I'm going to place a tire like
255:55 - that and this wouldn't work in the game
255:57 - because you can see the transition from
255:59 - montile to the other is looking pretty
256:01 - bad
256:02 - to hide that later on I'm going to place
256:04 - a object on top of that
256:07 - if the player can't see it it basically
256:09 - doesn't exist so we don't have to worry
256:11 - about it too much and now if I zoom out
256:14 - I can close this area something like
256:17 - this and then fill the entire thing with
256:19 - a paint bucket
256:21 - with that let me try the game and I can
256:25 - still shoot the laser that's a good
256:26 - start and there we can see we have a
256:28 - wall and the wash should probably be a
256:30 - bit longer
256:32 - and on the right we can see we have
256:36 - certainly an improvement although we do
256:38 - have to extend the soil and we have to
256:41 - later on hide this corner
256:44 - first of all with the soil selected I
256:47 - want to click on region and edit region
256:53 - with the editor selected let me maximize
256:56 - the window I want to expand this window
257:00 - as much as I can
257:02 - and this if you make it too large can be
257:04 - a bit annoying to work with but I think
257:06 - something like this should work
257:08 - and there we go now we have a really
257:10 - wide level
257:11 - obviously if you have your own game you
257:14 - want to be a bit more specific here but
257:15 - I think for my purposes this is fine I
257:18 - guess inside of the editor we can change
257:19 - this from 25
257:22 - 000 to 22
257:25 - 000.
257:27 - that's looking a bit better
257:30 - let's say 20 000 pixels
257:33 - it looks about right
257:36 - later on we're going to constrain the
257:37 - player to roughly this area that way
257:41 - whatever happens outside of it doesn't
257:42 - really matter but you don't want to have
257:44 - a Graphic too large because that's going
257:46 - to affect performance at least a little
257:48 - bit
257:50 - I guess we could turn this to 16
257:52 - 000 and yeah that feels a bit better and
257:55 - for the height I want to have 10 000.
257:59 - and next up we have to hide this ugly
258:03 - corner and I suppose a good way to
258:06 - approach that is to Simply drag some of
258:08 - the Moss and then place it in that
258:11 - position and make sure it's on top of
258:13 - the tile map
258:14 - and that is looking a bit better
258:19 - I guess to make all of this look more
258:21 - realistic we could take all of the Moss
258:23 - and place it on top of the tile map
258:28 - that's not what I meant to do something
258:29 - like this is better and now we can
258:32 - simply have some Moss along this tile
258:34 - map and if you duplicate the notes you
258:39 - can add a lot of stuff in there quite
258:41 - quickly
258:42 - then I want to duplicate all of this
258:45 - with transform I want to give it some
258:49 - rotation move it there and I can do this
258:53 - multiple times and simply add more and
258:55 - more tiles
258:57 - once again the more detailed you add to
258:59 - your level the better it is going to
259:01 - look at least as a general rule finally
259:04 - this wall is too short right now so if
259:06 - the tile map selected I want to work
259:09 - inside of the walls and add or paint a
259:13 - few more bits there
259:15 - and this is not what I meant to do there
259:18 - we go
259:20 - and all right with that we have a much
259:24 - better looking level this is a
259:26 - significant Improvement
259:28 - all we have to do now is do an exercise
259:30 - and then we're done with another major
259:32 - part
259:33 - I want you guys to create a new scene
259:36 - with an area 2D as the parent
259:39 - the name of this scene should be house
259:43 - next up I want you guys to add a tile
259:45 - map as a child and then use the
259:47 - interior.png graphic to create images
259:49 - for the house
259:51 - to make all of that you will need three
259:54 - layers you will need the floor then the
259:56 - outer walls and then the interior walls
259:58 - the order of this also matters
260:01 - the philosophy at the bottom next up you
260:03 - have the outer walls and then the inner
260:05 - walls
260:06 - I suppose I should explain the tile set
260:08 - first of all let's have a look really
260:10 - quick
260:12 - back in the dome I am going to click on
260:14 - the interior.png tile set there I can
260:18 - expand things a bit
260:20 - we have lots of tiles the ones for the
260:22 - floor are these
260:26 - the outer bolts are those and then the
260:30 - inner walls are these ones at the bottom
260:34 - you will have to play around with this
260:36 - for a bit but I think once you have a
260:38 - bit of practice there should be a fairly
260:40 - straightforward tile set
260:42 - so pause the video now and try to figure
260:44 - this one out yourself
260:48 - back in good dome I want to make all of
260:51 - this a bit smaller and instead create a
260:54 - new scene this new scene as the parent
260:57 - is going to get an area 2D this area 2D
261:01 - I want to rename right away to house
261:05 - with that I can save all of that in
261:08 - scenes and I guess we could create a new
261:11 - folder let's call this one houses
261:13 - in case you want to create more you
261:15 - could create multiple in here although
261:17 - I'm gonna stick with one
261:19 - now with that we have a new scene
261:22 - this one is supposed to get a child
261:24 - which would be a tile map
261:27 - what is tile map now we have to set the
261:30 - tile map right now it's empty so we need
261:32 - a new tile map
261:34 - on this tile set I want to click again
261:36 - and change the size to 390 by 390.
261:41 - with that we can drag the interior.png
261:45 - into the tile set and we do want to
261:49 - create tiles automatically and there are
261:51 - all of the tiles we could be working
261:53 - with that's looking really good
261:55 - also just to stay consistent I am going
261:57 - to rename all of this and call it
261:59 - interior so with that if I click on the
262:03 - tile map we could start drawing but this
262:06 - is not what I want to start with instead
262:08 - I want to look at the layers and then
262:11 - create the three layers I will need
262:13 - first of all we have the floor
262:16 - that I want to have another element
262:18 - which is going to be the outer walls
262:23 - finally we have the inner walls or
262:25 - interior walls the name here really
262:27 - doesn't matter that much all that
262:29 - matters is that we can separate the
262:31 - different layers inside of this drop
262:32 - down menu let's get started with the
262:34 - floor and for that we have this tile and
262:38 - this is what I want to start with so
262:40 - with this one selected I want to draw a
262:43 - rough area for the house something like
262:46 - so
262:47 - and if you zoom in you can see there's a
262:50 - separation between the various tiles
262:52 - which I think is looking pretty good
262:54 - now that we have that I can click on
262:57 - outer walls and the outer walls are
262:59 - supposed to be this area
263:01 - on top of that we have these ending bits
263:03 - that we can use to close a door
263:08 - once I use it it's going to make much
263:09 - more sense so I want to draw a wall
263:13 - around all of this
263:16 - well I have to make sure I always select
263:18 - the right tile and then simply drag all
263:22 - of it around the area of the floor we
263:25 - just created
263:29 - that's looking pretty good
263:31 - and now if I zoom into the tile set we
263:34 - have these ending parts so this one will
263:36 - be for the left side and this one would
263:38 - be for the right side
263:41 - that way we don't have a simple ending
263:44 - of the graphic which would look a bit
263:45 - weird next up I want to select the floor
263:48 - again because now we have this empty
263:51 - space between the floor and the wall and
263:53 - to fill that I have these ending parts
263:55 - so I can simply drag
263:58 - my mouse over all of them and then paint
264:01 - in
264:02 - the Edge bits and there I made a mistake
264:07 - so with this kind of thing
264:10 - you just want to keep on working and if
264:13 - you make a mistake just fix it really
264:14 - quick you are going to make quite a few
264:16 - mistakes
264:18 - all right cool with that we have all of
264:22 - the edge bits besides the ones for the
264:24 - entrance the entrance is a bit special
264:26 - because those get these tiles so
264:29 - not this one but this one that way we
264:32 - cover the area up to the wall which I
264:35 - think looks better
264:38 - and now if I unselect the tire map we
264:41 - can see we have the area for a house
264:44 - this house we can simply put into the
264:46 - level and then we have another area
264:48 - although before I am doing that we still
264:51 - have the warning that we don't have a
264:53 - shape for this area 2D that we can
264:56 - change quite easily I want to give it a
264:58 - collision shape 2D and the shape is
265:01 - going to be a new rectangle shape
265:04 - and this rectangle shape I have to
265:06 - extend because it's quite a large area
265:08 - we have to work with let's say something
265:11 - like this would work just fine
265:14 - you don't have to be too precise here it
265:17 - doesn't matter that much but this is
265:18 - looking all right with that we have a
265:21 - house so now back inside of the level
265:25 - still inside of the ground I want to add
265:28 - this scene and I call this one house
265:31 - and now we can move this house around we
265:35 - could give it a rotation and a transform
265:38 - let's rotate it to something like this
265:42 - and then if I run the game again
265:44 - I can move to the house
265:47 - and eventually there we have it
265:50 - the entrance is probably a bit too large
265:52 - but it doesn't matter that much and well
265:55 - this is looking really good we have a
265:58 - house although right now we don't have
266:00 - an interior that back in the house I
266:03 - want to keep on working with the tile
266:04 - map also I want to move the Collision
266:07 - shape behind the tile map
266:09 - the order of these two notes doesn't
266:11 - matter in our case though the tile map
266:14 - on top makes it much easier to work with
266:17 - cool now
266:19 - with the inner World selected I want to
266:22 - look at the bottom and there we have all
266:24 - of the inner walls
266:26 - and for those I want to zoom in a bit
266:29 - and there for example we could take this
266:31 - tile this would be an ending bit
266:33 - and then add a few interior walls
266:39 - there we have a corner part and then we
266:42 - can go this way
266:45 - if you haven't worked with these tile
266:46 - sets before they're probably a bit
266:48 - difficult to work with so sorry about
266:50 - that but this is just a matter of
266:52 - practice so like this we have added
266:56 - in interior wall it's probably a bit too
266:59 - far up so let me get rid of all of this
267:03 - and instead start placing it I guess
267:06 - here's okay
267:08 - so I want to once again create a door
267:10 - inside of this area and then the rest is
267:13 - going to be just a wall and just for the
267:15 - sake of adding something else in there I
267:18 - guess at the top Wicked section of this
267:22 - area for that I want to have an ending
267:24 - bit here and an ending bit at other side
267:26 - and then simply drag a wall all across
267:30 - them and to decorate this a bit better
267:32 - we can get this t-shaped piece and then
267:34 - add another separation
267:37 - with that if I return to the level
267:40 - we can't see anything and that is
267:42 - because I didn't save the scene so if I
267:45 - save it and now we go back
267:47 - we can see we have actual interior walls
267:50 - for this house
267:51 - let's try out of this again and I do
267:53 - have to walk a bit which is fine
267:57 - there we go we have interior walls
268:01 - if we add more objects inside of it this
268:04 - would also look much better something we
268:06 - are going to work on in a bit
268:07 - but for now this section got quite long
268:09 - so let's finish it here now that we have
268:11 - a tire map we should discuss physics a
268:13 - bit more in particular I want to talk
268:16 - about physics layers and there are two
268:18 - issues we have to address right now and
268:21 - let me demonstrate out of this in good
268:22 - dough it should illustrate all of this
268:24 - the best here we are back in the dough
268:26 - and the most obvious issue if I run all
268:29 - of this I can still move the player and
268:31 - I can still shoot but at some point once
268:34 - we reach the house there are no
268:36 - collisions which obviously is not great
268:39 - so this is something we have to work on
268:41 - on top of that though and let me
268:44 - demonstrate this inside of the editor
268:47 - we have this area in this area later on
268:51 - will be a transition point which means
268:54 - if the player collides with it we're
268:56 - going to load an inside level for that
268:58 - though we want to make sure that only
269:00 - the player can interact with this area
269:02 - we don't want to load a new area if any
269:05 - other object collides with it for
269:07 - example if an enemy moves into it or if
269:09 - we shoot a laser into it we don't want
269:12 - to launch a new level I can actually
269:14 - demonstrate this as well so if I run all
269:16 - of this again and if the player goes
269:18 - into the area we get players entered the
269:20 - gate and then the player node and that's
269:22 - totally fine however if I'm shooting the
269:25 - grenade into this area
269:27 - we are get
269:29 - grenade and we also get players enter
269:32 - the gate which basically means that we
269:36 - are getting some inconsistent Behavior
269:38 - the reason why we're getting this is
269:40 - that this gate or the area to the inside
269:44 - of the gate only really cares that a
269:46 - body is entering this area it doesn't
269:48 - care which kind of body so the body
269:51 - could be the player but it could also be
269:52 - an enemy or it could be the grenade the
269:55 - legs that though wouldn't trigger it
269:56 - because that's an area not a body but we
269:59 - still have to account for that
270:00 - fortunately that is very easy to do
270:02 - using physics layers and let's talk
270:04 - about them in Godot every Collision
270:07 - object has a collision layer so if you
270:10 - look at any kind of collision object we
270:12 - could look at the player let me open the
270:14 - scene in the app we have the character
270:16 - body 2D this is a collision object
270:19 - and this one on the right inside of the
270:21 - inspector has a collision in there we
270:23 - have a safe margin this one I'm just
270:25 - going to ignore then we have a layer and
270:28 - we have a mask this kind of collision
270:30 - system we have for every single
270:33 - collidable object for example if I look
270:35 - at the grenade there if I minimize the
270:38 - physics a bit further down we have
270:41 - collision and once again we have a layer
270:43 - and we have a mask
270:45 - so what does that mean in Godot you can
270:49 - place collidable objects on various
270:50 - layers and then also tell them to only
270:53 - interact with objects on a certain kind
270:55 - of layer and for that we have a layer
270:58 - and a mask how the system is going to
271:00 - work is that a layer determines on which
271:03 - layer and object itself is while a mass
271:06 - determines which layer it can interact
271:08 - with and this might sound a bit
271:10 - confusing so let's do an example
271:13 - here's the definition again and in our
271:15 - game we are going to have multiple
271:17 - layers we have a layer for the player
271:19 - the enemies the objects the projectiles
271:21 - and then for items and zones
271:23 - the player scene or more specifically
271:25 - the character body too deep for the
271:27 - player is going to be on the player
271:30 - layer
271:31 - but the mask for it is going to interact
271:33 - with all of the other layers which means
271:35 - that the player can interact physically
271:38 - with all of these other layers for
271:42 - another example we have the enemies and
271:44 - the enemies itself are going to be on
271:47 - the enemies layer that should be fairly
271:48 - straightforward however for the mask we
271:51 - will only have the layer the objects and
271:54 - the projectiles which means enemies can
271:57 - only interact with those layers they
272:00 - cannot interact with items or zones and
272:03 - this would fix the gate Behavior where
272:06 - we only want the player to interact with
272:08 - it but no other object inside of the
272:10 - game
272:11 - and well with that we have a few things
272:13 - to implement so let's go back to Godot
272:15 - and then we can make some changes I want
272:17 - to start with the player scene in there
272:20 - we have the character body 2D that we
272:22 - called player if we look there on the
272:24 - right we have Collision
272:27 - the layer is going to set which layer
272:29 - this object is on and in there we have a
272:32 - couple of numbers right now they always
272:34 - say layer 1 2 or 3 which doesn't tell
272:37 - you very much to make this system a bit
272:39 - easier to comprehend you want to go to
272:42 - project and there if you scroll down I
272:45 - already have it selected we have 2D
272:46 - physics there you can give layers names
272:49 - that are much more descriptive in our
272:52 - case we want to have layer 1 being the
272:54 - player layer layer 2 is going to be for
272:57 - the enemies layer 3 is going to be for
273:00 - the objects layer 4 will be for
273:03 - projectiles and finally layer 5 will be
273:07 - for items and zones
273:10 - although the naming here really doesn't
273:12 - matter you can name this whatever you
273:14 - want
273:15 - you're going to see in a second what
273:17 - difference it is going to make now if I
273:19 - fall off that if I hover over these
273:21 - layers now we get or layer 1 player four
273:24 - layer 2 enemies and for layer 3 we get
273:26 - objects
273:28 - on top of that if I do the same thing
273:30 - for the mask on number one we get player
273:33 - on number two we get enemies and on
273:35 - three we get objects the same thing we
273:37 - have gotten for the layers the really
273:39 - important thing you have to understand
273:40 - is that layers and must talk about the
273:43 - same kind of layers so for example right
273:46 - now the player would be on layer 1 which
273:48 - would be for the player and it can only
273:50 - see itself and that is because the mask
273:52 - is also for number one
273:54 - however if I click on number two three
273:57 - four and five now the player is still on
274:01 - the layer for the player but the player
274:03 - can also interact with all of the
274:04 - enemies all of the objects all of the
274:07 - projectiles and all of the areas and
274:08 - items
274:10 - although right now this doesn't do very
274:12 - much because we also have to update
274:14 - everything else for that I want to look
274:18 - at the gate because this is the easiest
274:19 - thing to work on right now if I open
274:22 - that scene and click on area 2D we once
274:25 - again have a collision although now for
274:28 - the layer if we don't want this to be on
274:31 - layer 1. instead the area to D should
274:34 - only be on layer 5.
274:37 - and then for the mask we only want this
274:39 - to interact with the player we do not
274:42 - want to enable enemies for example
274:43 - because this would allow any kind of
274:45 - enemy to interact with this object as
274:47 - well or area not object but you get the
274:49 - idea and with that we should already
274:51 - have a pretty good start if I now Run
274:55 - the game and go into the gate we still
274:57 - get players enter the gate however if I
275:00 - shoot a grenade we are still getting the
275:03 - wrong Behavior
275:04 - and this is bringing us to a good
275:07 - challenging Point Let's do an exercise I
275:09 - want you guys to look at the grenade and
275:12 - figure out why it still triggers the
275:14 - gate area 2D as a tip look at the layers
275:17 - and the mask for this scene it should be
275:19 - fairly straightforward but most of you
275:21 - now and try to figure this one out
275:26 - let's have a look at the grenade more
275:28 - specifically I want to have a look at
275:30 - the rigid body 2D inside of the grenade
275:33 - scene on there once again we have a
275:35 - layer and a mask
275:37 - and the reason why we are still getting
275:39 - the wrong behavior is as far as the good
275:42 - dough physics system is concerned this
275:44 - grenade is the player because it is on
275:47 - the player layer so layer one but this
275:49 - shouldn't be instead it should be on
275:52 - layer four I think this one is for
275:54 - projectiles there we go now if I run all
275:56 - of this again
275:57 - I can shoot the grenade into the area
276:01 - and nothing is going to happen so now we
276:03 - don't get a print statement anymore this
276:05 - is exactly what we wanted
276:07 - although we also have to update the mask
276:09 - because a grenade is supposed to collide
276:12 - with the player it is supposed to
276:14 - collide with the enemies with the
276:16 - objects and with projectiles itself
276:19 - especially the last one projectiles this
276:22 - means that one grenade scene can
276:25 - interact with another grenade scene you
276:27 - can see this for example in the game if
276:29 - I shoot one grenade and then another
276:31 - grenade
276:32 - the two grenades interact if I take this
276:35 - four away they cannot interact with each
276:38 - other anymore so now if I do the same
276:40 - thing again
276:42 - there they are simply ignoring each
276:44 - other which is not what I want so I'm
276:47 - going to enable all of that alright next
276:49 - up we have to update the gate because in
276:52 - there we have a static body 2D inside of
276:55 - the gate we have the collision and this
276:58 - one should be on layer 3 which is for
277:00 - the objects however for the mask we want
277:03 - this to be one two three and four which
277:07 - means this gate can interact with the
277:09 - player the enemies other objects
277:11 - although this one we don't actually need
277:13 - because none of the objects are going to
277:15 - move
277:16 - although for number four we want this to
277:18 - interact with projectiles as well next
277:20 - up for the laser we have an area 2D
277:24 - although since this one is also a
277:27 - collision object we have Collision as
277:29 - well for this one the layer should be
277:31 - layer number four for projectiles
277:33 - although a laser can interact with the
277:35 - player the enemies the objects but not
277:39 - with other projectiles I hope at this
277:41 - point you get the system at least on a
277:43 - basic level it doesn't get too
277:45 - complicated
277:47 - the major thing you have to remember is
277:48 - that you want to set layers and masks
277:50 - really early on in the game because
277:52 - later on updating all of this can be
277:54 - quite tedious
277:56 - although in our case we are nearly done
277:59 - next up I want to work on the house
278:00 - because there we have an area 2D that
278:03 - later on I do want to use so on there
278:05 - for the Collision I only want this to be
278:09 - on layer this one should be five
278:12 - and it can only interact with the player
278:15 - so mask should be one
278:17 - with that we have most of the things
278:19 - although if I hold Ctrl or command shift
278:22 - and O I can open up all of my scenes
278:26 - in the app we have a few more the really
278:29 - important one is the Drone this is the
278:32 - one enemy we have right now
278:34 - this one definitely needs a collision
278:36 - layer because it shouldn't be the player
278:38 - it should just be enemies although it
278:41 - can interact with the player with other
278:43 - enemies objects and with projectiles
278:47 - other than that we have the Bad and the
278:49 - billboard and those should be the last
278:51 - two both of them are quite easy so if I
278:54 - look at the Collision they should both
278:56 - be on the objects layer and for the Mast
279:00 - they can interact with the enemies and
279:03 - with the projectiles
279:05 - and then finally let's work on the
279:08 - billboard and this one once again should
279:10 - be on layer number three and you can
279:12 - interact with the player the enemies and
279:15 - the projectiles
279:16 - and with that we are done updating the
279:19 - physics layers so let me close all of
279:23 - this because it's going to be really
279:24 - confusing having all of this open
279:28 - okay this is feeling much better
279:30 - although I didn't mean to close the
279:32 - house we're going to use that right now
279:35 - actually
279:36 - cool so with that we have Collision
279:39 - layers and this is a really important
279:41 - system to get started with
279:43 - so the next issue we have to deal with
279:45 - is how can we give the tile map a
279:47 - collision layer so the player can
279:49 - collide with it and for that if I
279:51 - minimize the layers and I click on the
279:54 - tile set itself in there we have physics
279:57 - layers among a lot of other stuff but
279:59 - this we can just ignore for now physics
280:01 - layers is what we care about if I click
280:03 - on that we can add an element and there
280:06 - once again we get a collision layer and
280:08 - a collision mask
280:09 - and if I hover over them we get the
280:12 - usual layers so we have the player we
280:14 - have the enemies we have objects and we
280:16 - have projectiles and since this is just
280:19 - going to be a static object one two and
280:21 - four is what I want to select although I
280:23 - just realized this is wrong because this
280:26 - should just be number three because
280:27 - Collision layer is the layer it is on
280:29 - and it's just going to be an object
280:31 - however it can collide with one two and
280:34 - four so the player the enemies and the
280:36 - projectiles
280:37 - getting these numbers confused is
280:39 - incredibly easy to do so you do want to
280:41 - be careful here if I run out of this now
280:43 - we still don't get the proper behavior
280:46 - so let me move over again I can still
280:49 - shoot and have grenades as well but we
280:52 - still don't get a collision
280:54 - and I think you can understand why quite
280:57 - easily
281:00 - if we look at this individual tile
281:03 - Godot roughly knows that there is going
281:05 - to be some kind of collision because we
281:07 - have set a collision layer and a
281:09 - collision mask what Godot doesn't know
281:11 - is which area can be collided with all
281:14 - that Godot says is that there is an
281:16 - image here but this could mean anything
281:19 - we could want to have a collision for
281:21 - example in a much larger area as a
281:24 - consequence we have to draw in the
281:26 - Collision area and for that inside of
281:30 - the tile set there we have paint and
281:33 - it's called paint because we literally
281:34 - paint an area where we want collisions
281:36 - to happen and let me extend all of this
281:38 - a bit
281:40 - what I want to do I want to click on
281:42 - Select Property editor and now we have
281:44 - physics layer 0. if I click on that
281:47 - and zoom out a bit on a tile set they
281:50 - can see the entire tile set and if I
281:54 - zoom in again on the outer tiles
281:57 - if I just click on this corner tile
282:00 - there we get the entire Collision area
282:02 - this means that right now all of this
282:05 - could be collided with which is also not
282:07 - what we want
282:09 - all of this bit and this inner bit
282:12 - should not be collidable we only want to
282:14 - have the Collision around the actual
282:16 - wall and for that on this left side you
282:19 - have a painting area where you can paint
282:21 - in or rather select an area that you
282:24 - want to have a collision on and there
282:26 - you have a bunch of points that you want
282:28 - to move around
282:30 - and right now we don't have enough
282:32 - points for the curve but if you click on
282:34 - a path between two points you can add
282:36 - more points
282:37 - there's no real limit to how many you
282:39 - have so
282:41 - work with this to your heart's content
282:43 - you can be very refined with this
282:48 - something like this looks good now I
282:53 - have an area I actually want to have
282:54 - collisions for and if I now click on the
282:56 - tile again this is looking much better
282:59 - and with that if I run the game again
283:02 - and go to the area I should have placed
283:06 - the house a bit closer but
283:08 - I hope you get the idea and this wasn't
283:11 - the curve that we needed I think it was
283:13 - this one
283:15 - nope
283:17 - there we go here we are in the right
283:19 - corner and now we can see I cannot go
283:22 - further than this area so this is
283:24 - working perfectly fine
283:26 - now since we don't have Collision areas
283:28 - for the other tiles this doesn't work
283:30 - perfectly but this is something we can
283:32 - work on quite well although drawing in
283:34 - all of these areas can be a bit
283:36 - cumbersome but there are tools to make
283:38 - this easier so right now I have this
283:40 - drawing area if I click on another tile
283:42 - we get literally the same area which
283:45 - doesn't fit anymore
283:47 - however what you can do is click on
283:49 - these three dots and then flip
283:52 - horizontally and now it fits again
283:55 - then I can do the same thing for the
283:58 - other corner and now flip vertically
284:01 - and click on the tile again and there we
284:03 - go finally for the last corner I can do
284:05 - all of this again and flip horizontally
284:07 - again and there we go now we have the
284:10 - Four Corners which are the most time
284:12 - consuming bit
284:14 - for this straight lines we can delete a
284:18 - couple of points let me get rid of most
284:21 - of them
284:22 - and then simply move things around and I
284:25 - didn't mean to delete this one
284:29 - I just want to move the points
284:33 - and obviously once again this is
284:35 - something for an actual game you do want
284:37 - to spend some time on but I'm not too
284:40 - concerned with that so in my case I'm
284:42 - going to speed all of this up a bit
284:45 - so this one is looking good
284:48 - and now if I run all of this again once
284:51 - again I need a bit of walking around but
284:56 - at least for the outer walls this is
284:58 - working perfectly fine
285:04 - cool so next up we have a few more tiles
285:07 - we have these door and the bits
285:11 - and for that let me just draw in the
285:14 - area
285:18 - so this is looking roughly good
285:20 - and then for the other bit I want to
285:22 - have this bit and then flip vertically
285:25 - and then we are done finally for this
285:28 - tile we have to create two areas which
285:30 - is totally doable so all I have to do is
285:33 - add another shape in there something
285:36 - like this and now if I click on the tile
285:38 - there we have two areas they are not
285:41 - perfect but this is just a bit of
285:44 - refinement
285:45 - what you can do if your control or
285:48 - command and use the scroll wheel you can
285:50 - zoom in and then with the middle Mouse
285:51 - button you can move around so this is
285:54 - feeling a bit better
285:56 - cool and then next up we have left and
286:00 - right for that I want to rotate
286:04 - everything right
286:06 - and select both of these and then I can
286:08 - just delete where appropriate
286:11 - and we are nearly done with this part
286:14 - okay there we go this is the first one
286:18 - now I can click on the other one and
286:20 - then flip horizontally there we go now
286:23 - we have all the Collision parts for the
286:26 - outer walls
286:27 - unfortunately we have another part and
286:31 - this is all the Collision part for the
286:33 - inner walls
286:34 - and this is going to be your exercise
286:36 - draw all of these areas and if you get
286:39 - through that you will have some really
286:41 - good practice to drawing in these areas
286:44 - it unfortunately is kind of repetitive
286:46 - work and you just have to get through it
286:49 - luckily though it's not particularly
286:50 - difficult and in my case I'm going to
286:53 - speed up all of this because it's going
286:54 - to be really boring to watch
287:09 - all right and this is going to cover all
287:12 - of the inner walls I hope you managed to
287:14 - do all of this on your own as well
287:17 - I guess I should have mentioned earlier
287:19 - there are three ways you can interact
287:21 - and draw these areas you have ADD
287:24 - polygon tool you have edit points and
287:27 - you have remove the one you want to use
287:29 - the most is the middle one edit points
287:31 - because this one allows you if you just
287:33 - over it to also add points so this is
287:35 - quite easy
287:36 - if you just play around with all of this
287:38 - it should be fairly straightforward but
287:40 - alright with that
287:43 - let me zoom out save the scene and now
287:46 - inside of the level I am going to move
287:50 - inside of the ground we have the house
287:53 - I'm going to move that a bit closer to
287:54 - the player so I don't have to walk as
287:56 - much
287:58 - so with that the outer Collision still
288:02 - work
288:03 - the gates also work and the inner worlds
288:06 - are also working perfectly fine and
288:08 - let's try a few more this feels really
288:11 - good
288:12 - now here there's one thing you have to
288:15 - be slightly aware of and that is if I
288:18 - reopen the tile map
288:22 - and go back to
288:25 - the tile set and painting
288:28 - you want to be really careful that when
288:31 - you have
288:32 - a
288:33 - they can see it quite well so right now
288:36 - for this point we have a slight gap
288:38 - which is right now so minor that you
288:41 - wouldn't really notice it inside of the
288:42 - game but if this becomes large enough
288:45 - this might be an area where the player
288:46 - or an enemy could get stuck in which
288:49 - would be really inconsistent Behavior oh
288:51 - and I just realized I messed up a bit
288:54 - this shouldn't happen
288:56 - so when you create especially for walls
288:58 - these kind of collision shapes you want
289:00 - to be very careful and they can actually
289:02 - see
289:03 - this kind of shape isn't ideal because
289:07 - if the player is coming from one side so
289:10 - if the player is coming from this area
289:12 - we might have a collision for this bit
289:15 - and then the game thinks there's a
289:17 - corner but there isn't in practice
289:20 - so when you're drawing these areas just
289:22 - be aware that you do want to have some
289:25 - very very detailed shapes and this is
289:27 - something you absolutely want to work on
289:28 - for a bit
289:29 - in my case though for tutorial this
289:32 - really doesn't matter so much
289:33 - and with that we have another super
289:35 - important bit and let me remove the
289:37 - house a bit further away so this doesn't
289:40 - look too cramped
289:41 - board and next part to make the game
289:43 - look actually good I want to talk about
289:45 - particles
289:47 - and particles are basically small
289:49 - objects that are dynamically generated
289:51 - the best example for that would be we're
289:54 - going to create some smoke in this part
289:56 - and for that smoke we're going to create
289:58 - lots of small dots and then combine them
290:01 - into the player this will look like
290:02 - smoke also we're going to add some
290:04 - visuals for the laser or more
290:06 - specifically when the laser is shot I
290:09 - think expanding all of this in practice
290:10 - is going to be much easier so let's jump
290:13 - straight into Godot here we are back in
290:15 - the editor and I want to create a new
290:18 - scene and this new scene as a bass note
290:21 - is going to get a static body 2D let's
290:25 - rename this one to steam vent
290:28 - and then this I can save right away
290:30 - under scenes there we have objects and
290:33 - there I want to have the steam vent
290:35 - cool now this one is going to get a
290:38 - Sprite
290:39 - and to Sprite we can get under graphics
290:42 - and in there we have objects and under
290:46 - objects we have all the way at the
290:49 - bottom a ventilation hole so this I want
290:52 - to drag in there
290:55 - and this is going to give us simply a
290:58 - ventilation hole now before we start
291:00 - with the actual particles I want to give
291:02 - this a collision shape and the shape
291:05 - here should be fairly straightforward
291:06 - this needs to have a collision shape the
291:09 - shape should be a circle shape
291:12 - and let's align it more or less
291:14 - accurately this is looking good cool
291:17 - also I want to move the Collision shape
291:19 - behind the Sprite so we can see a bit
291:21 - better what's going on
291:23 - right now this kind of object is going
291:25 - to look incredibly boring inside of the
291:27 - game and to make it more interesting I
291:29 - want to generate smoke that moves
291:32 - something like this so we have smoke
291:34 - coming out of this and moving in a
291:36 - certain direction
291:38 - and to create something like smoke we
291:40 - will need a particle emitter
291:43 - and like everything else in godo this is
291:45 - going to be another node so with this
291:47 - theme then selected I click on
291:49 - controller command a and now I type in
291:52 - particle we have CPU particles and GPU
291:56 - particles at least in a 2d space
291:58 - inside of the 3D space all of that gets
292:01 - a lot more complex but in our case we
292:03 - only have two nodes
292:05 - and if you look at the description we
292:07 - get a cpu-based particle emitter or a
292:10 - GPU based particle emitter
292:13 - now you might be wondering what's the
292:15 - difference between these two and well if
292:18 - you're creating lots of particles you
292:19 - want them to run on the GPU because the
292:22 - GPU is much more powerful and much
292:24 - better at processing these kinds of
292:26 - particles
292:27 - unfortunately you don't always have a
292:29 - graphics card available for example when
292:31 - you make a mobile game or browser game
292:33 - you might have to work with less
292:35 - powerful hardware and for that you would
292:37 - use CPU particles but in our case we are
292:41 - making a game for a computer so I want
292:43 - to use GPU particles basically the way
292:45 - you want to think about it is that CPU
292:47 - particles is for weaker systems GPU
292:49 - particles is for everything else so
292:51 - let's work with GPU particles 2D I can
292:55 - click on Create and nothing happened
292:57 - to make something happen we have to look
293:00 - on the right in the inspector the most
293:03 - important attribute in there is the
293:05 - process material right now this one is
293:07 - empty we can give it a Shader material
293:09 - or a particle process material the
293:12 - second one is what we want to go for
293:15 - and now we can actually see something
293:18 - we have a couple of particles going in
293:20 - One Direction
293:22 - which arguably isn't particularly
293:24 - helpful but we can customize all of that
293:26 - quite a bit if you click on particle
293:29 - process material there we get a whole
293:31 - bunch of options
293:33 - for example what we could be doing is
293:35 - set the emission shape right now it's a
293:37 - point this means all particles are
293:39 - emitted from this one point but in my
293:42 - case I want to have a sphere and this
293:45 - sphere should have a certain size
293:47 - depending on how large you want this
293:50 - area to be so I think a bit smaller than
293:52 - this should be okay
293:54 - and yeah this one is looking better
293:57 - if you want the particles to stop
293:58 - falling you would want to look at
294:00 - gravity we have 0 98 and 0. if I set all
294:04 - of this to 0 0 and 0 we get no movement
294:07 - at all
294:08 - and in my case I want the particles to
294:11 - move to the top right so this direction
294:15 - for that I want to have X being positive
294:17 - let's say I know 50 and then I want them
294:20 - to go up and this would be negative I
294:23 - know let's say 45 just have some random
294:25 - numbers
294:27 - with that we already get some nicer
294:30 - Behavior so this doesn't look terrible
294:32 - well it still looks terrible but it
294:33 - looks less terrible than before
294:36 - one way to make all of this look much
294:38 - nicer is to look at this scale because
294:40 - in there we have scale minimum and scale
294:42 - maximum and Godot is going to pick a
294:44 - random number in between right now
294:46 - they're both one so we always have a
294:48 - scale of one but if I make that much
294:50 - larger we're getting a better Behavior
294:52 - so this is definitely coming together
294:56 - if I now go back to the level and with
294:59 - the ground node selected add this scene
295:01 - I want to add the steam vent and this I
295:05 - want to have let me move it around
295:09 - let's put it somewhere there for now if
295:11 - I now Run the game again
295:13 - we have a steam vent although this
295:16 - doesn't look amazing right now but I
295:18 - guess you can at the very least tell
295:20 - what's going on somewhat
295:23 - the major issue we have right now is
295:25 - that we always have a square so this
295:27 - isn't great and this we cannot change
295:29 - inside of the process material so this I
295:32 - want to minimize for now instead what we
295:34 - need is a texture
295:36 - and the texture is going to be an image
295:39 - so under I think I put it under decals
295:43 - there we have white dot PNG this is the
295:46 - graphic I want to use
295:48 - and to use it I simply have to drag it
295:50 - into the texture and now we are getting
295:54 - some very strange Behavior the reason
295:57 - why this is happening is because the
295:58 - graphic is way too large
296:01 - or more specifically inside of the
296:03 - process material and the scale we have a
296:06 - way to large maximum scale let's set
296:08 - this to a 3 and this is going to feel
296:11 - much better
296:13 - and this is looking much more like
296:15 - actual steam so let's try this again
296:19 - and well we are making progress still
296:22 - not amazing but certainly better
296:25 - I suppose the most important thing for
296:27 - now is we don't have that many dots and
296:30 - for that at the amount although at the
296:32 - top I want to set this to let's go with
296:34 - 20.
296:36 - and this is feeling a little bit better
296:40 - another thing that you could be doing if
296:42 - you look at color there we have color
296:44 - and color ramp for example you could
296:47 - change the opacity a bit
296:51 - endemic all of this a touch darker
296:54 - and I think we do need a lot more dots
296:57 - so instead of 20 let's go with 60.
297:01 - and possibly even higher maybe a hundred
297:06 - that probably feels a good bit better
297:09 - what I can also do is lower the opacity
297:11 - and then just see what feels good when
297:14 - it comes to particle systems you do want
297:16 - to play around a lot and there's a lot
297:19 - of stuff you can do so all of these
297:20 - options you can just play with them and
297:22 - see what you like
297:24 - what you see quite often is a ramp so in
297:27 - this case the color ramp
297:29 - what this one is doing right now it's
297:32 - empty if I give it a new gradient
297:34 - texture 1D then we get some weird
297:36 - behavior and what this one is doing is
297:39 - when a particle is spawned it starts
297:42 - with black and then over time it becomes
297:44 - White
297:45 - we could change this so if I click on it
297:47 - and
297:48 - double click on that we get another
297:50 - color and let's say I want a particle to
297:52 - start
297:53 - white white with full transparency and
297:57 - then towards the end so I click on the
298:00 - ending bit
298:01 - I want transparity to go basically away
298:04 - entirely
298:06 - and have this thing go into a darker
298:08 - color
298:10 - and there you can see we have a new
298:12 - gradient and this one is giving us a
298:14 - different kind of behavior
298:16 - and that should be
298:20 - a decently occased behavior for inside
298:22 - of the game so once again for this kind
298:25 - of thing you do want to play around a
298:27 - lot to get the kind of look that you
298:29 - want
298:31 - you could also change the scale and give
298:32 - this one a curve
298:34 - but in my case I think the color was a
298:36 - bit too strong so let me if this a bit
298:42 - more opacity especially towards the end
298:46 - this might have been a bit too low
298:49 - and then the color could be a bit
298:50 - brighter
298:52 - and then I also want to have for the
298:54 - gravity slightly faster movement so
298:56 - instead of 50 I want a hundred and so of
298:59 - negative 45 I want to have negative
299:02 - 150.
299:05 - on top of that the emission shape could
299:07 - be a bit larger
299:09 - so this feels better and then for the
299:13 - amount of particles let's go with 200.
299:16 - and there we go this is coming together
299:19 - much better so with that we have some
299:23 - steam
299:25 - and what you really want to be aware of
299:27 - that you are spawning a huge amount of
299:29 - particles and for that if you have a
299:32 - proper GPU this isn't going to be too
299:34 - taxing especially in a 2d environment
299:36 - but still you do want to be conscious of
299:39 - the performance so use this sparingly
299:43 - one good way to do that is to only have
299:46 - a certain amount of particles
299:49 - 200 is still fine but in your own game
299:52 - test this a lot changing the amount of
299:54 - particles can make a huge difference
299:56 - I suppose I should also mention we have
299:59 - time Collision drawing and trails time
300:02 - is the one I want to focus on for now
300:04 - and there for example we have a lifetime
300:05 - if we extend that
300:08 - we get much longer living particles
300:11 - although in my case I'm not really
300:13 - interested in that
300:15 - and this is still way too long
300:18 - let's set this to 1.5 to some kind of
300:21 - custom value
300:23 - and what is much more important you can
300:25 - also set to one shot this is something
300:27 - we are going to explore in just a bit
300:28 - but if I set this one to on
300:31 - then we get lots of particles and then
300:33 - they disappear because we are only
300:35 - spawning every particle just once and
300:37 - you can see at the top emitting is off
300:39 - if I set this to on again
300:41 - we get all of the particles but just
300:43 - once and there we go
300:45 - we can do this multiple times and we
300:48 - only always have one round of particles
300:50 - now for this one I don't want to enable
300:53 - it
300:54 - so I just want to have embedding enabled
300:56 - and one shot set to false
300:59 - now besides that you could also look at
301:01 - drawing or Collision but all of this is
301:03 - a bit more advanced so I'm going to
301:05 - ignore it
301:06 - instead what I want you guys to do is
301:09 - when the player is shooting a laser
301:11 - inside of the player I want you guys to
301:14 - spawn some particles along with the
301:16 - laser and to be a bit more precise for
301:19 - the exercise I want you guys to emit
301:21 - particles when the player is shooting a
301:23 - laser you can reuse the same texture but
301:27 - make sure that you are changing lots of
301:28 - other attributes like the color or the
301:31 - scaling or the duration just see what
301:33 - looks good finally a really important
301:36 - part is that one shot needs to be
301:38 - enabled
301:40 - we only want to spawn a couple of
301:42 - particles when the player shot a laser
301:44 - but they should not be continuous
301:47 - so with that pause the video and try to
301:50 - implement your own particle system
301:55 - with the player selected I want to add
301:57 - another node which is going to be GPU
301:59 - particles 2D
302:01 - this one right now is giving us a
302:03 - warning that we don't have a material
302:05 - for that
302:07 - I want to have a process material which
302:09 - is going to be a particle process
302:11 - material
302:12 - if I have that selected we get particles
302:16 - that are barely visible
302:18 - and right away we have to make one
302:20 - change and that is that these particles
302:23 - should be at the nozzle of the gun
302:26 - basically here
302:28 - next up the direction doesn't work at
302:30 - all so this one we also have to update
302:32 - that we can do quite easily inside of
302:35 - the process material I want to update
302:37 - the direction
302:39 - although to be a bit more specific we
302:42 - have Direction and we have the gravity
302:44 - the Gravity by default should be 0 0 and
302:47 - 0. so the particles don't move at all
302:49 - however then we have a direction which
302:52 - right now by default is one zero and
302:54 - zero so we should only have movement in
302:56 - the x-axis
303:00 - but this we can't see at all right now
303:03 - everything just is static so we have a
303:06 - white dot there
303:08 - to change that we want to give each
303:10 - particle an initial velocity and this we
303:12 - can do on the right there we have
303:14 - initial velocity and let's give it some
303:17 - Randomness so something like this
303:20 - and that is looking significantly better
303:23 - for these numbers inside of Direction
303:25 - you can update the spread in my case I
303:28 - went with 15. this is a much more narrow
303:32 - range but once again just choose
303:34 - whatever you think is looking good
303:36 - besides that if I minimize these two
303:39 - tabs the next important part is we will
303:41 - need a texture and I still have white
303:43 - dot PNG and this I want to drag in there
303:46 - and with that we get something much more
303:49 - visible
303:50 - so this is a good start and let's try
303:54 - the scene itself
303:56 - and let's hope this is still working and
303:58 - yeah it's kind of working especially if
304:01 - you move around this doesn't work
304:03 - perfectly yet but at the very least we
304:04 - get something
304:06 - the main thing I'm looking for is that
304:08 - all of this aligns with the player
304:10 - Direction so if the player moves or
304:12 - looks at the top right the particles
304:14 - move in this direction as well
304:17 - which they do so this is a good start
304:20 - the one important thing that might be a
304:22 - bit of a challenge is that we only want
304:25 - to spawn these particles when the player
304:27 - is shooting a laser and for that on the
304:29 - time I want to set one shot and enable
304:32 - it and set it to true
304:34 - and now inside of the code so the player
304:38 - code and this I do want to extend
304:41 - whenever we have an input action for the
304:44 - primary action this if statement I want
304:47 - to emit the particles which I can do
304:49 - quite easily I want to get my particles
304:51 - node so
304:53 - GPU particles 2D and this has an
304:57 - attribute called emitting which I want
304:59 - to set to true and that is actually all
305:02 - we needed so if I now Run the game again
305:04 - I can shoot a laser and then we get a
305:07 - couple of particles I can do this
305:09 - multiple times and we get a couple of
305:13 - particles
305:14 - so this is working but the particles
305:17 - look terrible so this isn't great yet
305:19 - also if I shoot multiple lasers this is
305:21 - really inconsistent so we have to update
305:23 - some things
305:25 - which means with the GPU particle
305:26 - selected we have to update a lot of
305:30 - these attributes to make all of this
305:31 - look good what I started with was the
305:34 - initial velocity right now this is quite
305:37 - low I have set these numbers to 750 and
305:41 - 1 000. if I run all of this again
305:46 - we get particles that move really really
305:49 - far because well we have a really high
305:51 - initial velocity
305:53 - to account for this increased speed I
305:55 - want to set the lifetime of each
305:56 - particle to much lower number let's say
305:58 - 0.2
306:01 - and now if I run this again each
306:03 - particle
306:04 - moves very very quickly so this is
306:08 - definitely an improvement
306:10 - although all of the particles are still
306:12 - much too large for that and the scale I
306:15 - want to have
306:16 - a scale minimum of 0.05 and a scale
306:21 - maximum of 0.1
306:24 - if I run that again
306:30 - now we get particles that are way too
306:32 - small so these numbers are probably a
306:34 - bit overly aggressive let's say 0.5 and
306:37 - 1.
306:42 - and that's feeling a bit better
306:47 - I guess 0.3 and 0.8 should work
306:52 - and this is just a thing you have to
306:54 - practice over and over eventually you
306:56 - find some numbers that you like next up
306:59 - though much more importantly I want to
307:00 - work on the color this is the part that
307:02 - really doesn't work right now
307:04 - instead of a white color I want to have
307:06 - some light bluish because that's the
307:09 - color of the laser as well
307:11 - also the transparency should not be full
307:14 - I want to have some fairly
307:17 - see-through kind of color so if I run
307:20 - this again
307:23 - that is starting to come together much
307:27 - more nicely
307:30 - also we can give this a color ramp which
307:32 - is a gradient texture 1D and for this
307:36 - one we can set a color
307:38 - the starting color is the color I've
307:39 - just set and in there we have a
307:41 - hexadecimal color this we can simply
307:43 - copy with Ctrl or command s and then
307:46 - paste it in there now we get this
307:48 - starting color
307:49 - and for the end color
307:51 - I want to have the same color except I
307:54 - want to make this more whitish and less
307:58 - transparent
308:00 - at the end you should have some kind of
308:01 - gradient that looks something like this
308:03 - we start with a bluish tint and then we
308:05 - become more and more transparent if I
308:07 - run that one again
308:10 - we get something that's barely visible
308:12 - so we want this to be more
308:17 - so we want to increase
308:19 - these numbers a bit
308:24 - and once again this is just something
308:25 - you have to play around with
308:28 - we get some very faint particle effects
308:33 - although I think the initial velocity
308:35 - could even be higher let's go with 1200
308:38 - to 1 500.
308:45 - and there's certainly something that
308:49 - works
308:50 - and I don't want to keep you here for
308:52 - too long you can play around with all of
308:54 - this to a great extent and if you want
308:57 - your game to look good then obviously
308:59 - you have to spend a lot of time with all
309:01 - of this
309:02 - in my case though this is a tutorial so
309:05 - let's say for this part we are basically
309:07 - done the next major aspect that I want
309:10 - to work on is going to be light which is
309:12 - super important to make games look good
309:14 - and in Godot there isn't that much to it
309:18 - it's quite easy to work with light
309:19 - ultimately there are two nodes that you
309:22 - can use
309:24 - number one is called a point light and
309:26 - this is a single point of light that you
309:29 - have somewhere in your level so think of
309:31 - a flashlight or any kind of a lamp
309:34 - besides that we have a directional light
309:37 - and this is a light from a direction
309:39 - that usually is really far away the best
309:42 - example for that would be a sun although
309:44 - if you want to have some general
309:46 - lighting for your scene to create a
309:48 - certain kind of atmosphere you would
309:49 - also use a directional light
309:51 - that being said though most of the time
309:53 - you would combine a point light and the
309:55 - directional light all over your scene
309:57 - using lights is a really common thing
309:59 - you are doing that basically everywhere
310:02 - now besides those two nodes we have one
310:05 - more concept and that is called light
310:07 - occluder which is basically a shape that
310:10 - a light can collide with so so far we
310:13 - have used Collision bodies with a
310:15 - collision shape and a light occluder
310:17 - does the same thing just for light and
310:20 - that is all we need to get started so
310:22 - let's have a look at all of this in
310:23 - practice
310:24 - back in good old I want to create a
310:26 - whole new light so with a new scene
310:29 - selected I want to create another node
310:32 - and the root node is going to be a
310:34 - static body 2D
310:36 - let's call this one a simple light
310:41 - we are going to need a Sprite 2D and the
310:45 - Sprite 2D we find under Graphics there
310:47 - we have objects and under objects we
310:51 - have light.png
310:53 - is I want to drag into the texture and
310:55 - there we get a basic light
310:58 - this one is also going to need a
311:00 - collision shape so with simple light
311:01 - selected once again I want to give it a
311:04 - collision shape 2D and I think for this
311:07 - one a capsule shape is probably best
311:11 - although I do want to transform it and
311:14 - give it a rotation of 90 degrees and now
311:16 - we can drag it out to cover the area
311:19 - that we need
311:21 - that is looking roughly okay now I want
311:24 - to move the Collision shape behind the
311:27 - Sprite 2D so we can see what's going on
311:29 - and now we have a basic static object
311:31 - let's save it right away under scenes
311:34 - objects and then we have SIMPLE light
311:37 - now this light I want to use inside of
311:40 - the house right away so in there let me
311:43 - attach a new scene which is going to be
311:46 - this simple light
311:48 - and this simple light I want to move
311:50 - somewhere let's put it here on the right
311:53 - side
311:55 - so if I zoom in I can place it a bit
311:58 - better and if you use transform we can
312:01 - give this a negative 90 rotation
312:04 - although the proper rotation would be
312:06 - positive 90 degrees because this area is
312:10 - where the light is coming from and then
312:11 - we can move it a bit further to the
312:13 - right
312:15 - and then we have some kind of light so
312:17 - this is certainly a start but well we
312:21 - don't actually have any kind of light
312:22 - all we have is a lamp that is Switched
312:25 - Off
312:26 - for that back in the simple light we
312:29 - have to work with light notes and for
312:31 - that with the simple light selected I
312:33 - want to attach another node if I simply
312:36 - type light
312:38 - we can see we have a directional light a
312:41 - point light and a light occluder since
312:44 - we want to have a local light which
312:46 - means a light from one point we want to
312:49 - have a point light so this I want to
312:51 - create
312:52 - and this changes nothing and we are
312:55 - getting a warning if I hover over that
312:57 - Godot was complaining that we are
312:59 - missing a texture and the texture we are
313:02 - placing in there
313:04 - and to get a texture I want to minimize
313:06 - the objects and we have a folder called
313:09 - lights
313:10 - in there we have textures and then there
313:13 - we have circle.png this I want to drag
313:15 - in there I don't want to drag it on the
313:17 - editor I want to drag it into the
313:19 - texture that is looking better and you
313:23 - can already tell if I toggle the
313:25 - visibility of the point light we have
313:28 - some kind of light
313:29 - and now if I save the entire scene and
313:32 - go back to the house you can see we have
313:35 - a brighter color around this area and
313:37 - this is the light
313:39 - I can make this even more noticeable so
313:42 - on the right in the inspector we have a
313:44 - couple of attributes that we can work
313:46 - with the texture scale the color and the
313:49 - energy are the attributes you want to
313:51 - care most about color is the easiest one
313:53 - to see and there by default we have
313:55 - white but we can change this to any
313:57 - color we want
313:59 - let's say in my case I want to have a
314:01 - bluish color that should still be quite
314:03 - bright because we have a light but
314:06 - something like this
314:07 - should be much better and now I save the
314:09 - scene go back to the house and now we
314:12 - have a bluish light around this area
314:15 - still not particularly visible because
314:18 - the energy for this light is quite low
314:21 - if I make this brighter you can already
314:23 - see we have a much more noticeable light
314:26 - so now if I go back to the house there
314:29 - we have a very strong light and if you
314:31 - want to change the scale of the light or
314:33 - how far this light is reaching you would
314:36 - work with the texture scale if I
314:38 - increase that one to really large number
314:40 - and return to the house now we can see
314:43 - the light is Illuminating basically all
314:46 - of the house
314:48 - although this is way too much let's put
314:50 - this at a two that should be much better
314:53 - and yeah I think this is reasonably okay
314:57 - on top of that if I go back to the level
315:00 - we can see all of that as well and if I
315:03 - run the game and go to this area
315:07 - it still is going to take some time
315:11 - but there we have the light and the
315:13 - player is also reacting with the light
315:15 - so this is working quite well cool
315:18 - now this is a good start but it's still
315:21 - fairly limited and the main issue we
315:24 - have are shadows so right now we are
315:27 - Illuminating all of this area let me
315:30 - zoom out a bit we are Illuminating all
315:32 - of this but this is not how a light
315:34 - works instead I just want to have a cone
315:37 - that goes something like this
315:39 - or at the very least I want to have
315:41 - shadows around the back of the light and
315:44 - along the main wall of the tile map for
315:46 - that we have to learn about another node
315:49 - so back inside of the simple light I
315:52 - want to add another note and this node
315:54 - is a light occluded 2D if I create that
315:58 - one nothing is going to happen
316:00 - to make something happen inside of the
316:02 - inspector we have an occluder and this
316:05 - is just a shape so we have to give it a
316:07 - polygon and then on top we have the
316:09 - tools to draw another shape so let me
316:12 - draw a couple of basic points around
316:14 - this
316:16 - doesn't have to be too specific but once
316:18 - again if this is your game make sure
316:20 - that you are spending a fair bit of time
316:23 - on this because this is what makes the
316:25 - game look good
316:26 - cool and now if I have the shape you can
316:29 - see some parts do have light and other
316:31 - parts are blacked out if I save all of
316:34 - this and go back to the level
316:36 - we can see that now this part is not
316:39 - visible anymore
316:41 - now this still isn't looking great and
316:44 - to make it look much better back in
316:46 - simple light we want to enable Shadows
316:48 - if I switched up and on
316:51 - we get some slightly weird effect inside
316:53 - of simple light but if I look back at
316:55 - the house this is looking significantly
316:58 - better now we get some proper light
316:59 - Behavior
317:01 - the light possibly is a bit strong but
317:03 - this is something you can fine tune on
317:05 - your own now for the shadow you can also
317:07 - customize a couple of bits most
317:09 - importantly you have the color and the
317:11 - filter
317:12 - color is fairly straightforward so if
317:15 - you change this to something really
317:17 - weird you can create any kind of color
317:21 - for the shadow that you want although
317:23 - this is not something you particularly
317:24 - want to do because the shadow at some
317:27 - point has to disappear like you can see
317:29 - in this corner The Edge shadow
317:30 - disappears but for the other areas like
317:33 - this getting the shadow back to zero
317:35 - might take forever so you want to be
317:38 - really careful especially for the alpha
317:40 - value of the Shadow most of the time you
317:42 - want to have a really dark shadow
317:43 - because shadows in general are black
317:45 - they are the absence of light so you
317:48 - don't want to have a bright shadow that
317:50 - being said we can give it a slight
317:52 - bluish color
317:54 - to match it with the light so if I have
317:57 - something like this
317:59 - this is well it's getting a bit better
318:01 - but you don't want to have a shadow too
318:03 - visible
318:05 - besides that what you can do is work on
318:08 - the filter and there are three different
318:10 - kinds of filters that you can work with
318:11 - by default you have none and this is the
318:14 - fastest or the easiest one to calculate
318:17 - however if I go to PCF 13 then if I save
318:22 - all of this and go back to the level now
318:24 - we have a much fuzzier outline for the
318:26 - shadow so if I compare this with none
318:28 - and save all of this we now have a sharp
318:31 - line for the shadow
318:34 - and this is basically what the filter
318:35 - does and the more filter you use the
318:38 - more difficult it is for your computer
318:39 - to process so you do want to be careful
318:42 - with that this is the kind of thing that
318:44 - can really tank your performance
318:46 - I guess for this one we can go with
318:48 - average and then give it a bit of
318:50 - smoothing and just see what happens
318:54 - I guess this is an interesting effect
318:56 - although not exactly what I want
318:59 - if I add a lot more smoothing they can
319:02 - see what this one is doing it creates a
319:04 - greater distance between these points so
319:07 - I guess we should have very low amount
319:09 - between them
319:11 - and if you zoom out this is basically
319:14 - not noticeable anymore so with that
319:17 - let's run the game and let's see how
319:19 - this looks actually when we play it
319:23 - and I can move in there and this is
319:27 - looking at least acceptable
319:29 - but obviously customize this as much as
319:32 - you want
319:33 - once light thing that annoys me is that
319:35 - we have these larger blue rays and this
319:37 - is because of the color of the Shadow
319:40 - we want this to be a bit darker so let's
319:42 - reduce the opacity and make all of this
319:46 - generally a bit darker
319:47 - now if I save this there it's much less
319:51 - noticeable
319:53 - cool and with that we have some very
319:56 - basic light and some very basic Shadows
319:59 - and that is also a really good point to
320:01 - do an exercise I want you guys to create
320:04 - another wall light if you look at the
320:07 - graphics folder inside of objects we
320:09 - have another image called wall lamp.png
320:12 - use that to create another light this
320:15 - light should also have a couple of
320:16 - occlusion shapes finally make the player
320:20 - cast a shadow pause the video now and
320:22 - try to implement all of that
320:27 - I think we can start with the second
320:28 - part of the exercise I want to make the
320:31 - player cast a shadow this is quite easy
320:33 - to implement and quite fun so back in
320:35 - the player scene I want to give the
320:37 - player another note which is going to be
320:39 - a light occluded 2D
320:41 - for this one once again we will need an
320:43 - occluded polygon and now we have to draw
320:46 - in a shape
320:49 - this doesn't have to be too precise but
320:52 - you do want to spend a few seconds on
320:54 - this at the very least
320:56 - because once again the more work you put
320:59 - in here the better your game is going to
321:00 - look
321:01 - but in my case this is a tutorial so we
321:05 - can be a bit more sloppy
321:07 - although this was probably a bit very
321:09 - sloppy but
321:11 - um well there's not that much to say
321:13 - about it we just have to draw a whole
321:15 - bunch of points around the player
321:19 - nearly done
321:24 - there we go and the one bit that annoys
321:25 - me is that this bit properly needs a bit
321:28 - more work that's looking more acceptable
321:31 - with that our player has a light shape
321:34 - although we're getting an error
321:37 - that a polygon must be supplied and if
321:40 - we click outside of the node this
321:41 - disappears now if I go back to the level
321:44 - and run all of this again I can move to
321:47 - the light
321:49 - but take a few seconds and there we can
321:52 - see our player is casting a light which
321:56 - is looking really good
321:59 - also if we rotate around this works
322:01 - really really well well I'm happy with
322:04 - this
322:06 - so with that we can come to the second
322:08 - part of the exercise I want to create a
322:10 - new scene the parent or root node is
322:13 - going to be a static body 2D again
322:17 - let's call this one the wall light I
322:21 - suppose we can save this right away on
322:22 - the wall light right next to simple
322:24 - light
322:25 - and then once again we will need a
322:27 - Sprite
322:28 - which we are getting not from the lights
322:32 - but from the objects and all the way at
322:35 - the bottom we have the wall lamp
322:38 - this I want to drag into the Sprite 2D
322:42 - like so
322:44 - and now if I zoom out
322:46 - you might have noticed that I made a
322:47 - mistake when I prepared this graphic
322:49 - that there's way too much white space
322:51 - around it
322:52 - this isn't actually going to be much of
322:54 - an issue because this shape doesn't have
322:57 - any kind of collision although it is a
322:59 - bit annoying to work with to update this
323:01 - we have to go to region then enable the
323:04 - region and inside of edit region you can
323:07 - create a proper shape around it
323:09 - something like this
323:11 - and now this is much easier to work with
323:13 - next up we are going to need a collision
323:17 - let's go with a polygon 2D because
323:20 - there's no regular shape for all of this
323:23 - and to draw a shape in once again I'm
323:26 - going to be quite sloppy with this one
323:30 - and this is looking reasonably okay cool
323:34 - also I want to move the Collision shape
323:36 - behind the Sprite 2D so we can see
323:38 - what's going on
323:40 - with that we have a light and let's
323:43 - place this inside of the house right
323:45 - away so if the house selected I want to
323:48 - add the wall light
323:51 - and I guess we can put this somewhere
323:54 - here ish
323:56 - actually let's put it right next to the
323:58 - other light so we can see how the two
323:59 - lights interact with each other that
324:01 - might give us some cool effects
324:03 - I want to rotate it by negative 90
324:05 - degrees and now I want to move both
324:08 - lights right next to each other
324:10 - that's a good start next up we have to
324:12 - actually create a light for this light
324:15 - so I want to create a point light 2D
324:20 - first of all we need a texture so under
324:23 - lights and textures we have circle.png
324:28 - this I want to drag in there and now we
324:30 - have a light I guess for this one we can
324:33 - use a different kind of color I guess
324:35 - what might look good is a bluish purpley
324:38 - color
324:39 - then we can increase the strength of all
324:42 - of this
324:44 - and maybe the texture scale since this
324:46 - is a larger light it probably wants to
324:48 - have a bit more space
324:49 - let's try all of that and let's look at
324:53 - the house individually
324:54 - that is looking not bad at all or at
324:57 - least it's passable for tutorial let's
324:59 - try it in the game
325:00 - and if I walk over there
325:05 - we get two different kinds of color and
325:07 - they are working together quite well so
325:10 - I'm happy with this
325:13 - although I forgot for this wall light we
325:16 - don't have a shadow so this I want to
325:19 - enable and now let's try this again
325:28 - there we go we can also get two Shadows
325:30 - so this is quite a cool effect
325:32 - very happy with it next up I want to
325:35 - create a few occlusion shapes and
325:38 - specifically I want to mask out this
325:40 - holding thing because this is the only
325:42 - thing that should cast a shadow I think
325:44 - at least
325:46 - so for that I want to have a light
325:48 - occluder this one is going to need a new
325:50 - shape and now all I have to do is draw
325:55 - in a shape this doesn't actually have to
325:57 - be too precise but something like this
326:01 - should work quite well
326:03 - and there we get
326:04 - already we have the shadow
326:08 - now for the shadow for this one I want
326:11 - to have some filter so pcf5 that way it
326:14 - looks like the other one I'm not going
326:16 - to mess with the color I think this one
326:17 - is looking fine
326:19 - now there's one thing you need to be
326:21 - aware of when you are using a light
326:22 - occluded 2D and that is you can only
326:25 - ever have a single shape if I try to
326:28 - draw in another shape around the second
326:30 - bit
326:31 - something like this then the first shape
326:34 - disappears so this you simply can't do
326:37 - let me undo it and instead what you
326:39 - would do is copy this entire node so
326:42 - with Ctrl and D we are duplicating it
326:45 - and now simply what I want to do is to
326:48 - mirror it along the x-axis and a very
326:50 - simple way of doing that is under
326:52 - transform I want to change the scale of
326:55 - x to negative one while leaving Y at one
326:58 - to make that work I want to click on the
327:00 - Chain symbol and that way we can work on
327:02 - each axis individually and all I want to
327:05 - do is set X to negative 1.
327:08 - all we have to do then is update the
327:10 - position a tiny bit and we are done
327:14 - probably be a bit more specific
327:16 - something like this looks good
327:19 - and with that I can save all of this and
327:22 - let's have a look back at the level
327:25 - this is definitely working
327:27 - I guess one more thing that we could do
327:29 - is maybe a bit more energy for this one
327:31 - since it is quite large
327:36 - um yeah I guess this is something that
327:37 - you can play around with but for my
327:39 - purposes I am totally happy with this
327:41 - kind of light but now we have another
327:43 - issue and the issue is that all of the
327:47 - worlds are illuminated especially by the
327:49 - bigger light this doesn't happen for the
327:51 - smaller light because we have an
327:52 - occlusion shape in between the two but
327:56 - this simply doesn't work there's way too
327:58 - much light
328:00 - to work on that we have to look at the
328:01 - tile map so inside of the tile map
328:06 - we have I still have the physics layers
328:08 - open if I minimize that you can see we
328:11 - have more layers that we could work with
328:12 - for example there are navigation layers
328:15 - and custom data layers on top of that if
328:18 - you open rendering there we have
328:20 - occlusion layers
328:22 - those cover light and I want to add
328:24 - another element
328:26 - if I add one then we get a light mask
328:29 - and these masks are fairly similar
328:31 - compared to the physics layers we have
328:32 - seen earlier if I look at the wall light
328:34 - or the simple light we always get an
328:37 - item call mask
328:40 - those were kind of like the Collision
328:42 - layers so like we have done for physics
328:44 - where an object can only see another
328:47 - object if it is on a certain Mast the
328:49 - same works with lights lights can only
328:51 - see objects that are on a certain layers
328:54 - for this game though I'm not going to
328:56 - change them everything is going to be on
328:57 - one layer to keep things simple so I can
329:00 - minimize the occlusion layers and now we
329:02 - have another problem like with physics
329:04 - Godot doesn't know for each individual
329:06 - tile where the light begins and ends and
329:10 - for that if I maximize the tile set
329:13 - again and look at paint
329:16 - we can select a property so far we
329:19 - worked in physics but we can also work
329:21 - inside of the occlusion layer if I click
329:23 - on that and zoom out
329:26 - now you can already see what is going I
329:28 - think we can draw again shapes so for
329:32 - this one I want to have one shape for
329:35 - this wall and let me just do the four
329:37 - different worlds for now the one that
329:39 - are straight so this one and this one
329:42 - that I can do this one and rotate all of
329:45 - this
329:46 - and now we have the shapes for the wall
329:48 - if I save all of this you can already
329:51 - see the difference and if I go back to
329:53 - the level in particular now we can see
329:55 - the walls also have occlusion that being
329:58 - said to make all of this work properly
330:00 - if I move the light around you can see
330:03 - the issue we have with all of this
330:05 - so this occlusion right now only works
330:09 - for the straight tiles if I have a
330:11 - corner this doesn't work at all anymore
330:12 - which means back in the tile map in the
330:15 - tile set
330:17 - we have to create occlusion shapes for
330:20 - all of this once again so in my case I'm
330:24 - going to speed up all of this but well
330:26 - you get more time to practice your
330:28 - shapes so this is going to be another
330:30 - exercise for you
330:44 - all right with that we have covered all
330:47 - of the shapes now there's one thing I
330:50 - realized we're working on this if I look
330:52 - at this one shape let me draw it in
330:56 - again from scratch actually so the issue
330:58 - for this one is we have two separate
331:01 - areas
331:02 - and
331:05 - that's looking better
331:07 - if I want to create a second one I can
331:10 - start drawing but then the original
331:13 - shape disappears turns out that for
331:16 - occlusion shapes
331:19 - you cannot do this kind of area but I
331:21 - guess in our case this isn't too much of
331:24 - a noticeable issue
331:25 - but when you design your own graphics
331:27 - for your game just keep that in mind but
331:30 - now for the rest of it
331:33 - I can move the lights around let's say I
331:37 - want to duplicate them and place the
331:39 - lights throughout and you can already
331:41 - see this is working quite well we're
331:43 - getting pretty good light
331:45 - so let me
331:47 - set the color back to default move a
331:51 - light here
331:52 - I can duplicate it again move another
331:54 - light there and then
331:57 - is the light going to fit on the left
332:00 - there
332:02 - uh probably not let's get rid of this
332:04 - one and instead I want to get the simple
332:06 - light and move that one up they can see
332:10 - selecting these lights can be kind of
332:12 - annoying because they always cover a
332:13 - larger area if this becomes too much of
332:16 - an issue you want to use this lock
332:18 - symbol this one locks a node so you
332:21 - can't select it anymore so I want to
332:23 - select all of the existing notes and
332:25 - then drag the simple light and now I can
332:27 - move it around easily
332:30 - for this one for the transform I want to
332:33 - have negative 90 so it points to the
332:35 - right and I have something like this
332:40 - that I can duplicate it again and move
332:42 - it between those two lights
332:45 - and the rotation should be
332:47 - negative 180. and then I can move it
332:51 - right in between
332:53 - and now the house has basically become a
332:56 - disco but let's try all of this looks in
332:59 - the actual game
333:01 - so back inside all of this
333:04 - we're getting some lights we're getting
333:06 - Shadows we're getting multiple shadows
333:09 - and even when we have some walls they
333:14 - also get Shadows so with that we have a
333:16 - pretty good amount of light
333:18 - I am quite happy with this
333:20 - there's just one more light to cover and
333:22 - this one is actually quite simple so if
333:25 - I zoom out the other light let me
333:28 - minimize everything so we can see what's
333:30 - going on the other light that I haven't
333:32 - covered yet is a directional light and
333:35 - this one is incredibly simple if I
333:37 - double click on that our entire scene
333:39 - has become much brighter and if I change
333:43 - the energy of this light you can see
333:45 - that we are simply adding light to
333:47 - everything
333:48 - you can also update the color so if you
333:50 - don't want to have a pure white you can
333:52 - change this to a reddish tone or really
333:55 - whatever color you want it's entirely up
333:57 - to you and that's more or less all that
334:00 - you can do in here you can also enable
334:01 - Shadows but that's probably not what you
334:04 - want to do
334:06 - I guess one thing that I found kind of
334:09 - useful is if you want to have a much
334:11 - darker level then well you couldn't
334:13 - really set this to Black because then
334:15 - this thing doesn't add anything so if I
334:17 - have it to Black and toggle it on and
334:18 - off it doesn't do anything
334:20 - because the way light is working
334:23 - is that we are always adding the light
334:26 - or rather we are multiplying the current
334:28 - layer with a certain color and the
334:30 - brighter the color is the more
334:32 - noticeable it becomes but if the color
334:34 - for the light is black it doesn't change
334:37 - anything so even if you change the
334:39 - energy for pure black the light doesn't
334:41 - do anything
334:42 - and that is because of the blend mode
334:44 - right now it's add but if we change this
334:47 - to subtract then we can okay the energy
334:50 - doesn't do anything but if we now change
334:52 - the energy to something brighter
334:56 - what is basically going to happen is
334:58 - that we are subtracting whatever color
335:00 - we have on this from the level so the
335:03 - brighter becomes the more of a color we
335:05 - subtract from everything so this
335:07 - shouldn't be entirely white but if we
335:09 - have let's say a grayish color
335:12 - something like this this would allow us
335:14 - to make the entire game much darker so
335:17 - if I now toggle this light we get a
335:19 - darker game that being said the other
335:21 - lights are still working so if I run all
335:24 - of this again
335:26 - and walk back to the house
335:30 - we get a much more atmospheric game
335:33 - later on when we are building the
335:35 - interior level we are going to use this
335:37 - directional light quite a bit although
335:39 - for now I'm going to get rid of it
335:41 - because for this outer scene it wouldn't
335:44 - be particularly helpful but keep it in
335:46 - mind later on we are going to reuse it a
335:48 - lot and okay with that we have covered a
335:52 - really important part so now we have
335:53 - lights
335:55 - next up I want to talk about animations
335:57 - and animations are ultimately quite
336:01 - simple
336:02 - you basically always play images in a
336:05 - sequence the issue with that is that
336:08 - there are two ways to store all of these
336:09 - images
336:11 - you can either have separate images or
336:13 - you can have what is called a Sprite
336:15 - sheet for this project we are going to
336:17 - work with both so let's have a quick
336:19 - look at what we have inside of our
336:21 - Graphics folder if you look on the left
336:24 - there we have graphics and in there we
336:27 - have all of the folders
336:30 - if you look inside of Lights there we
336:33 - have a fan animation and these are just
336:36 - individual images that we want to play
336:39 - in sequence so we just have about 48
336:42 - different images it goes from 0 to 47.
336:45 - alternatively what we also have if I
336:48 - minimize the lights and look at
336:50 - explosions there we have just three
336:53 - images and if I look at one of these
336:56 - images in a bit more detail you can see
336:59 - that we have one images with lots of
337:02 - individual images on top of it
337:04 - essentially what we want to do is to
337:06 - pick individual parts from that so this
337:09 - is another thing we have to figure out
337:13 - and this Sprite I don't want to have in
337:16 - the scene
337:17 - but the main thing you have to
337:18 - understand is that we have to pick
337:20 - individual parts of these images
337:23 - like anything else in Godot what we have
337:25 - to use are different notes Godot can
337:28 - cover both but you are using different
337:30 - notes for each
337:31 - if you have separate images you would
337:34 - use an animated Sprite 2D it works kind
337:37 - of like a Sprite so the note we have
337:39 - already seen except it wants multiple
337:41 - textures instead of a single one if you
337:44 - have a Sprite sheet you would use the
337:46 - normal Sprite 2D because that one has an
337:49 - animation tab which allows you to pick
337:51 - specific parts of a larger image
337:54 - back in Godot first of all I want to
337:57 - close the steam vent this simple light
338:00 - and the wall light we don't need those
338:02 - anymore instead I want to create a new
338:05 - scene and for this new scene we have
338:08 - another root note and this root node is
338:11 - going to be an animated Sprite 2D
338:15 - if I double click on that we get an
338:17 - animated Sprite 2D along with a warning
338:21 - the warning being that we are going to
338:23 - need Sprite frames as a resource
338:26 - I'm going to cover that in a second
338:28 - first of all though I want to rename
338:30 - this and let's call it light fan
338:32 - animation to work with this kind of
338:36 - animated Sprite you want to look on the
338:38 - right under animations because there we
338:41 - have Sprite frames and right now it's
338:43 - empty which is what Kudo really does not
338:45 - like to fix that we have to click on it
338:48 - and then use Sprite frames
338:50 - if you have that nothing changes but if
338:53 - you click on it again now we get another
338:56 - kind of editor in here on the left side
339:00 - we can set a couple of animations right
339:03 - now we only have default and this is
339:05 - what I want to keep you could rename it
339:07 - though if you double click on it but on
339:09 - top of that you could also add new ones
339:11 - with this icon so if you want to have
339:12 - multiple animations this is how you
339:14 - would use that
339:15 - although in my case I want to delete
339:18 - these new animations because we don't
339:21 - need any of that
339:23 - instead I want to look at lights and in
339:28 - there we have the fan animation and this
339:30 - contains all of the images and all of
339:33 - these images I want to drag
339:36 - into these animation frames
339:39 - and there you can see we have lots of
339:42 - textures
339:43 - once you have that you can click on this
339:46 - play icon and then we are getting an
339:49 - animation right now it's looking really
339:51 - choppy because we only have 5 frames per
339:54 - second
339:55 - if I change this to 24 then we have a
339:59 - much smoother animation
340:02 - and well this is kind of all you have to
340:05 - know about the basics of animated
340:07 - Sprites they basically work like Sprites
340:09 - but instead of one texture you are
340:11 - working with Sprite frames where you
340:13 - have multiple textures that's pretty
340:15 - much it
340:16 - and with that I can save all of that
340:19 - let's say under scenes I want to save
340:22 - this I guess objects also work although
340:24 - this folder is getting quite crowded but
340:26 - it works for this one and now that we
340:29 - have that I want to look at the level
340:31 - and now we can add inside of the ground
340:36 - node 2D the light fan animation and this
340:39 - we can move around and there we get the
340:42 - same issue again that we've seen in the
340:44 - last part that right now I want to grab
340:47 - the light fan animation but we have lots
340:49 - of stuff on top which makes all of this
340:51 - a bit annoying to work with so because
340:54 - of that I want to lock projectiles and I
340:57 - want to lock the gate
340:59 - with that I should be able to drag the
341:01 - fan animation and there we go this is
341:03 - feeling better
341:06 - and let's just say I want to have it
341:09 - somewhere in here
341:11 - and don't forget to enable it so it
341:13 - plays and then I can run the game
341:16 - and move towards this area and there we
341:20 - should have
341:22 - well we don't have an animation but at
341:24 - the very least we have an image the
341:27 - reason why that didn't work is because
341:28 - we have to click on this icon which says
341:30 - autoplay on load and now I can run all
341:33 - of this
341:34 - and if I get to the area we now have the
341:39 - animation so this is what we actually
341:41 - wanted and well with that we have pretty
341:45 - much all we need for this kind of node
341:46 - on top of that you could also grab this
341:49 - node and transform it for example we
341:52 - could change the scale
341:54 - and double it in size if I save it now
341:57 - we get a much larger one
342:00 - let me move it a bit further to the
342:03 - middle and there I think this is looking
342:06 - okay
342:08 - now this light for animation you can
342:10 - also Target in code quite easily and we
342:13 - actually haven't written code in a while
342:14 - and for this one we still don't need it
342:16 - but once again the main thing you want
342:19 - to do in there is you could update the
342:21 - animation in our case we don't need it
342:23 - because we only have a single one if you
342:26 - want to update the animation you would
342:27 - simply the animation property
342:30 - cool but this is the first kind of
342:32 - Animation that you could be working with
342:34 - it's super easy
342:36 - I guess while we are here we could also
342:38 - add another smaller thing and that is
342:40 - with the light fan selected I want to
342:43 - add a point light 2D
342:46 - for this one once again I want to look
342:49 - at the lights there we have textures and
342:51 - then drag circle.png
342:54 - but what I meant to do I want to drag
342:56 - circle.png into the texture
343:00 - and now we can make all of this quite a
343:02 - bit brighter let me change the texture
343:04 - scale and the energy and now if I save
343:08 - this
343:09 - we get even more light inside of this
343:11 - area this might be a bit too much so a
343:14 - lot less energy now let's save it and
343:17 - there we get another kind of effect
343:20 - importantly for this one you do not want
343:22 - to have shadows
343:24 - with that we have the first kind of
343:28 - Animation along with a bit of light
343:30 - next up I want to add the explosions
343:34 - and this I want to do inside of the
343:37 - grenades so basically right now we only
343:40 - have grenades that work like hockey
343:42 - pucks they just move but they don't
343:43 - explode let's work on that a bit more
343:46 - which means with Ctrl or command shift
343:48 - and O I want to open the grenade
343:52 - and here you can see we have a grenade
343:54 - we have a Sprite 2D and a collision
343:56 - shape so basically nothing is happening
343:59 - to work on that a bit more I want to add
344:02 - the animation and this is in a Sprite
344:05 - sheet let me before I add the note
344:07 - look at this so instead of explosions we
344:11 - have let's say explosion 2.
344:15 - and zoom out
344:18 - we have one image that contains a huge
344:21 - amount of smaller images and basically
344:23 - what we want to do is to pick individual
344:25 - parts from that and then play them in
344:27 - sequence
344:28 - for that we can use enormous Sprite 2D
344:31 - the note we have already used many many
344:33 - times because in there in the inspector
344:36 - we have animations this one has a few
344:39 - properties we have age frames V frames
344:41 - and then frame if I increase the number
344:44 - you can see quite well what this is
344:46 - doing if I change this to 2 we are
344:49 - cutting the entire thing in half and if
344:51 - I increase the number even further at
344:54 - some point
344:55 - we are down to one column and let me
344:59 - draw on this that should be easier to
345:00 - explain when you look at this image you
345:02 - notice that we basically have columns
345:04 - like so and then we have rows like so
345:09 - in total we have one two three four five
345:13 - six seven and eight columns and I think
345:17 - the same amount of rows so one two three
345:20 - four five six seven and eight indeed
345:24 - what H frames and V frames want is the
345:27 - amount of columns and rows that we have
345:29 - age frames covers the columns and V
345:32 - frames covers the rows
345:34 - which means in our case we have eight
345:37 - columns and eight rows
345:41 - and you can already see I can zoom in
345:44 - now and we can't see anything because
345:47 - the very first frame doesn't have any
345:49 - kind of image and I should show my mouse
345:50 - I can see it right now we are splitting
345:54 - up the image into eight columns and
345:56 - eight rows and currently we have the
345:59 - first item selected
346:00 - which doesn't have anything so we can't
346:02 - see anything at all right now but if I
346:04 - increase this number at some point we
346:06 - get an image and the higher the frame
346:09 - number is
346:10 - the further we get in the animation and
346:13 - I can click on this faster and then
346:15 - recycle through the animation that's
346:17 - literally all that's happening in here
346:19 - so if you cycle around you have the
346:22 - animation you can even be a bit more
346:24 - specific because under there we have
346:26 - another attribute called frame
346:28 - coordinates there you can Target the
346:30 - column and the row more specifically for
346:33 - example if I set the frame back to zero
346:36 - we get X and Y being zero but if I
346:39 - change this Frame to let's say two then
346:42 - we move X to 2 but we stay on the first
346:45 - row I hope the system makes sense if you
346:47 - play around with it it should be fairly
346:49 - straightforward
346:51 - now though we have another issue and
346:53 - that is none of this plays automatically
346:55 - in the game so this kind of behavior we
346:59 - have to program and that would be kind
347:02 - of an issue now we could manually Target
347:04 - every single frame inside of code and
347:07 - then make this work but that would be
347:10 - really annoying to work with so we need
347:12 - a better solution and fortunately Godot
347:15 - has another better solution which is
347:17 - actually one of the most important notes
347:19 - you can learn about
347:21 - that node is the animation player and
347:25 - basically what it does is it plays an
347:27 - animation
347:28 - doesn't sound like a lot but the reason
347:31 - why this is powerful is because when we
347:33 - talk animation in this context we mean
347:35 - literally any kind of change in property
347:38 - it could be a movement a rotation
347:40 - animation frames light energy or
347:42 - literally any property of any node you
347:45 - can also use an animation player to call
347:47 - methods on a certain note and you get a
347:50 - huge amount of control over how these
347:52 - things change
347:53 - so let's play around with that first of
347:56 - all though I want to clean things up a
347:58 - bit and for that I'm going to get rid of
348:01 - explosion 2. so let me delete it and
348:04 - instead with grenade selected I'm going
348:07 - to add a simple Sprite 2D and this
348:09 - spriter D is going to get explosion free
348:12 - this is the one I actually want to use
348:14 - so I'm dragging it into the texture now
348:17 - we get another kind of sprite frame and
348:21 - on that once again I have eight columns
348:23 - and eight rows
348:26 - which means now we can animate via the
348:29 - frame what kind of image we actually
348:33 - want and by default let me set it to
348:35 - zero
348:36 - also I want to rename the Sprite 2D to
348:40 - explosion that feels significantly
348:44 - cleaner well with that
348:47 - I have the grenade selected and now I
348:49 - want to add an animation player if you
348:52 - just type in animation you get animation
348:54 - player and animation 3. for this
348:57 - tutorial we are only going to use the
348:59 - animation player however if you use more
349:02 - complex games especially 3D ones you
349:04 - want to use an animation tree to control
349:06 - the animation you have inside of the
349:09 - animation player although for now don't
349:11 - worry too much about that I simply want
349:12 - to add an animation player and then we
349:15 - are good to go at the bottom we have
349:18 - another kind of editor that doesn't
349:20 - really have any kind of content to
349:22 - change that you have to click on
349:24 - animation this gives you another menu
349:26 - and in there you can click on new this
349:29 - is going to create a new animation
349:32 - the kind of Animation I want to create I
349:34 - want to call explosion
349:37 - once you have that you get a timeline
349:40 - right now we have a timeline you can
349:42 - drag a kind of indicator around and this
349:45 - timeline goes from 0 to 1 second
349:47 - although you can make it longer so on
349:50 - the right we can set this to one second
349:51 - or two seconds or 10 seconds whatever
349:55 - you fancy
349:57 - in my case I want to set the animation
349:59 - length to 2 seconds for these kind of
350:01 - values you just want to choose whatever
350:03 - looks best in the end there's no
350:05 - Universal value
350:07 - you can also change the units they are
350:09 - seconds of frames per second the
350:11 - indicator right now we are moving in
350:13 - increments of 0.1 seconds
350:15 - and quite a few more but none of this
350:17 - really matters what instead is
350:20 - incredibly important is this ad track if
350:23 - you click on that you get a menu of what
350:26 - kind of value you want to animate in our
350:28 - case we want to animate a property track
350:30 - so if I click on that then Godot is
350:33 - asking me to select a node and in my
350:35 - case I want to select the explosion or
350:38 - more specifically the Sprite 2D that is
350:40 - called explosion if I now click on ok
350:43 - but those asking me which kind of
350:45 - property of this node I want to animate
350:47 - in my case I want to Target the frame of
350:50 - the Sprite 2D and on this I can click
350:52 - open and now we have the frame property
350:56 - and if I look back at the Sprite to the
350:59 - explosion all the way on the right we
351:01 - now have keys
351:03 - this is because of this property that we
351:05 - have set almost specifically because we
351:07 - connected this Sprite to an animation
351:09 - player and now with that we can create
351:12 - key frames so right now in the timeline
351:15 - I am at second zero and if I click on
351:18 - the key next to frame I have added a
351:21 - keyframe for this time which means at
351:24 - this time we are going to have this
351:25 - Frame however if I now go to one second
351:28 - I can right click on it and insert
351:30 - another key or to be more specific
351:32 - another keyframe and if I click on this
351:35 - one on the right in the inspector we get
351:37 - another value so for example in there I
351:40 - could set this to 1 and now if I go
351:42 - further to the right I can right click
351:44 - again insert another keyframe click on
351:47 - this one and then increase the value by
351:49 - one again
351:50 - and now if I move along the timeline and
351:52 - let me zoom in a bit
351:56 - if I now play all of this
351:58 - we get a very basic animation and if I
352:01 - move these Keys closer to each other you
352:03 - can see a bit better what's going on so
352:05 - if I now play it
352:07 - we get a really slow animation it
352:10 - doesn't look particularly good
352:11 - but that is a rather small issue all we
352:15 - need are more images and then we have
352:17 - all we need let me get rid of all of
352:19 - these keyframes and move the timeline
352:21 - back to zero now with the explosion
352:24 - spread selected
352:26 - I want to get my start frame for this
352:29 - particular one I want to start with
352:31 - frame 29 so let me increase this a bit
352:34 - and I want to start on 29 actually 28
352:37 - might be better let's start with this
352:40 - one
352:41 - so 27 this is where I want to start if I
352:44 - now click on the key we have added one
352:47 - keyframe and we have moved the timeline
352:50 - forward by one increment so 0.1 second
352:55 - because of that still with the explosion
352:57 - selected I can click on this key
352:59 - multiple times and every time we get the
353:02 - next frame inside of this animation and
353:05 - we're moving the timeline forward a tiny
353:07 - bit so I can do this multiple times and
353:09 - I want to go up to frame 44. or we can
353:12 - go a tiny bit further
353:15 - I guess this one looks good you do want
353:17 - to be careful here because if you keep
353:19 - on moving forward at some point you
353:21 - reach the end of the timeline and then
353:23 - you would get some weird Behavior so in
353:26 - my case I want to extend all of this
353:27 - let's say 2.4 seconds
353:31 - and if I now play all of this we are
353:35 - getting an animation so this is working
353:38 - really good and this is the basics of
353:41 - what you can do with animations pretty
353:43 - much all you want to do is always add
353:45 - another track then you have a property
353:46 - track and then you select a note and on
353:49 - that for example I could get the grenade
353:51 - now you can update one property of this
353:54 - node and literally any property of this
353:56 - node can be animated there's no limit to
353:58 - it
353:59 - also what you can do inside of the
354:02 - animation player we still have autoplay
354:04 - on load and we have looping the
354:07 - animation so both of these you could use
354:09 - just fine like we have seen for the
354:11 - other animation let's say I want to
354:13 - autoplay this animation if I now Run the
354:16 - game I shoot a grenade there we get an
354:18 - animation although you can see this
354:21 - isn't ideal yet we keep the last frame
354:24 - of the animation so we still have to
354:27 - work a bit more on this
354:29 - I want to select the animation player
354:30 - again and if you click on the Node and
354:32 - you don't get the editor all you have to
354:34 - do is click on the animation at the
354:36 - bottom and there we are again
354:38 - I want to add another track but now I
354:41 - want to call a method
354:43 - and the method is going to be on grenade
354:47 - and now we get another timeline
354:51 - if I now right click on this I can
354:53 - insert a key and now Godot is asking me
354:56 - what method I want to call
354:58 - right now grenade doesn't have any
355:00 - custom functions so we can only call the
355:02 - inbuilt ones but that is all we need for
355:04 - now the one I want to call is called Q3
355:08 - this destroys a node so this is the
355:12 - method I want to call at the end of this
355:15 - animation
355:16 - and now if I run out of this again I can
355:20 - shoot a grenade and by the end it
355:23 - disappears
355:24 - because we literally destroy the node I
355:26 - can actually demonstrate if I go to
355:28 - remote and look at the projectiles I can
355:31 - still show you the laser and we get a
355:34 - laser inside of the projectiles and if I
355:37 - shoot a grenade we get a grenade 4 bit
355:39 - but after a while the grenade disappears
355:41 - again along with the animation so this
355:43 - is exactly what we wanted
355:45 - and once again
355:48 - all we need to do for all of this is an
355:50 - animation player and this could do even
355:52 - more there's a lot of stuff you can do
355:54 - in here as a matter of fact we can do an
355:57 - exercise with this one
355:59 - I want you guys to add a red light to
356:02 - the grenade on top of that add another
356:04 - animation to the animation player and
356:07 - use that to make the red light blink for
356:08 - two seconds
356:10 - the energy property of the light is
356:12 - probably what you want to use for that
356:14 - but just play around
356:15 - on top of that add another function to
356:18 - the root node of the grenade this
356:20 - function should be called explode and at
356:22 - the end of the animation for the
356:24 - blinking I want you guys to call this
356:26 - function pause the video and try to
356:28 - implement this one yourself
356:32 - first of all I want to create another
356:34 - animation so with animation I click on
356:37 - new and let's call this one Ling ping
356:41 - inside of this animation we have a
356:43 - timeline and we want to add a track
356:46 - although to animate a property we first
356:48 - of all need the light for the grenade
356:50 - and for that with the grenade selected I
356:52 - want to add another Point light 2D and
356:56 - let me hide the explosion for now
356:57 - because this one would be distracting
357:00 - basically what I want to do is to have a
357:02 - light over this red circle also the
357:05 - Collision shape should probably be below
357:08 - the Sprite so we can see a bit better
357:09 - what's going on
357:11 - once again inside of Graphics we have
357:14 - lights and the texture there we have
357:16 - circle.png this I want to use for the
357:19 - texture and I definitely want to scale
357:21 - this down quite a bit let's say 0.3
357:26 - probably too large 0.2
357:28 - still quite large okay this one is
357:31 - definitely much too large
357:34 - 0.01 is too small
357:36 - 0.1 okay 0.03 was the ideal number here
357:41 - on top of that I want to update the
357:43 - color so the color for this one should
357:45 - be a reddish tone and let's go all the
357:49 - way to red and finally to make sure the
357:52 - energy works so we can
357:54 - add some blinking via the energy this is
357:57 - looking quite good
358:00 - which means we can use the animation
358:01 - player to update this energy property
358:04 - although first of all the animation
358:07 - needs to be two seconds long which means
358:09 - in the timeline I want to set this to 2
358:11 - seconds
358:12 - now I want to go all the way to the
358:14 - beginning and at this point I want to
358:16 - add a track then a property track I want
358:19 - to get the point light and on there I
358:21 - want to get the energy
358:24 - if I open this one now I can either add
358:26 - a keyframe with a right click and insert
358:29 - key and let's say by default this should
358:31 - be zero so we have no light at all and
358:35 - let's say if we go to half a second
358:38 - I could go to point light 2D and I could
358:40 - add another key via the inspector both
358:43 - is totally fine you get the same result
358:45 - although right now both of these points
358:48 - have a value of zero so there's no
358:50 - change instead I want to increase the
358:52 - value quite a bit let's say this one and
358:54 - to have a bit clearer numbers let's go
358:56 - with 10
358:58 - and if I now click on the key we go from
359:01 - 0 to 10 which means if I play this we
359:03 - get an animation cool
359:06 - and now we can go to one second set this
359:09 - to zero once again click on the key
359:12 - again then we get
359:14 - kind of a blinking animation then 1.5 it
359:18 - should be 10 again
359:20 - and then I can go to 2 and set this back
359:23 - to zero if I now play all of this
359:26 - we get an animation
359:28 - although it's not exactly a perfect
359:30 - animation we probably want to have some
359:32 - slightly faster blinking for that I want
359:36 - to move the nodes a bit closer to each
359:38 - other
359:39 - and once again I keep on repeating
359:41 - myself but the more time you spend on
359:43 - all of this the better it's going to
359:45 - look and let me move them in equal
359:48 - increments and what you can also do if I
359:51 - go to the right part you can simply
359:53 - duplicate a key so if I click on
359:55 - duplicate key we get the same kind of
359:58 - outcome
359:59 - now I want to get this one and let's say
360:02 - for last one
360:04 - I want to increase the time to 2.1
360:07 - second and now for the final key
360:10 - I want to duplicate this one and now we
360:12 - have faster blinking
360:15 - I guess this one works and this
360:17 - animation is what we want to play by
360:19 - default on auto load so now if I run out
360:22 - of this again
360:23 - and shoot the grenade
360:25 - we get a blinking behavior that stops
360:28 - after two seconds so this is perfect
360:32 - on top of that with the animation player
360:34 - selected
360:35 - I want to call a function at the end of
360:38 - this animation now for that I have to
360:41 - get to my grenade or the script on my
360:43 - grenade and right now there's literally
360:45 - nothing
360:46 - so I want to add a function that I
360:49 - called explode it doesn't need any
360:52 - arguments and in there for now I simply
360:55 - want to print
360:57 - explosion
360:58 - really important now make sure you are
361:01 - saving this script otherwise the next
361:03 - step is not going to work the next step
361:05 - being I want to add track then call the
361:07 - method I want to call the method on the
361:09 - grenade
361:10 - now we get another timeline and Godot
361:13 - wants a function
361:15 - all the way at the end of the animation
361:17 - I want to insert a key and now we have
361:20 - from script methods explode this is the
361:23 - function I want to call
361:25 - and if you didn't save the script you
361:27 - wouldn't have this final step you
361:28 - wouldn't get this explode function this
361:30 - is only available once you save the
361:31 - script
361:33 - but with that if I run out of this and I
361:36 - shoot a grenade after two seconds we
361:38 - should get explosion cool this is
361:40 - working
361:41 - although in this case I don't want to
361:43 - print explosion instead what I want to
361:46 - do inside of the animation player I want
361:49 - to play the explosion animation
361:53 - and now we can do quite easily all we
361:55 - have to do is first of all we have to
361:57 - get the animation player
361:59 - and then the play Method already doing
362:03 - that Godot is giving us a couple of
362:04 - choices blinking is the current
362:06 - animation and instead we want to play
362:08 - explosion
362:10 - and now if I run all of this I can shoot
362:13 - a grenade it blinks
362:18 - and then it simply disappears
362:20 - the reason why this doesn't work is
362:22 - because I have hidden the explosion node
362:24 - so if I make this one visible
362:26 - then it should be working so now if I
362:28 - run all of this again
362:30 - that is feeling much better
362:33 - I guess we could refine this a tiny bit
362:35 - though because this animation doesn't
362:36 - look amazing yet
362:39 - inside of explosion
362:42 - and let me show the editor there we have
362:44 - the explosion
362:46 - first of all I want to hide the actual
362:49 - Sprite 2D so if I hide this it's partly
362:52 - right now is the grenade itself I want
362:55 - to hide this around this part of the
362:57 - animation because there it's not visible
362:59 - at all
363:00 - so another property track I want to get
363:03 - property track then I'm going to get
363:04 - Sprite to D and the value I want to look
363:07 - for is visible in there I want to insert
363:11 - a key at this point and you can already
363:13 - see right now it's enabled but this
363:15 - should be disabled at this point in the
363:18 - beginning when we start the animation I
363:20 - want to have another key and there it
363:22 - should be enabled
363:23 - which means now if we run all of this at
363:25 - some point this spread too deep will not
363:27 - be visible anymore
363:28 - and this we can use around this timeline
363:32 - to add another track a property track I
363:35 - want to get the explosion
363:38 - and on that I want to get module late
363:43 - what this allows us to do is set a
363:45 - transparency of this animation
363:47 - and it was up here
363:51 - if I now insert a key we get pure white
363:53 - and this is totally fine we can leave
363:55 - this as it is however if I go all the
363:58 - way to the end of the animation I can
364:00 - add another key
364:02 - and this one is going to be fully
364:05 - transparent and now we are getting
364:10 - the explosion slowly disappearing
364:14 - so if I now play all of this
364:18 - the transition is a bit cleaner on top
364:20 - of that what you can also do is change
364:22 - how these two values change from one
364:24 - point to another point and this you do
364:26 - on the right
364:28 - there you have continuous discrete or
364:30 - capture or you have nearest linear or
364:34 - cubic this is how the animations change
364:36 - but this one for example if we go with
364:38 - cubic
364:39 - then we get some slightly different
364:41 - Behavior
364:43 - although in this particular case it's
364:45 - not too visible but you can play around
364:47 - with this a lot and get the exact kind
364:49 - of Animation that you want
364:51 - but with that I can run all of this
364:54 - again shoot a grenade
364:57 - and there we have a bit of an issue
364:59 - so you can see we still have the light
365:02 - and that is because the spriter D was
365:05 - hidden because of the animation if I now
365:07 - run all of this again with the spriter D
365:09 - visible now this looks better and let's
365:12 - try an animation
365:13 - this is looking pretty good we probably
365:15 - want to hide the light as well this
365:17 - could be a problem
365:19 - yeah definitely the light is going to be
365:20 - an issue
365:22 - so once again with the animation player
365:24 - for the explosion we have to add another
365:27 - track which is a property track for the
365:30 - point light 2D and all I really want to
365:33 - do is to hide the light entirely
365:36 - so this is not height this is visible
365:39 - at the start of the animation I want to
365:41 - have the light visible so insert key it
365:44 - should be visible and along with the
365:47 - Sprite 2D I want to hide the key so on
365:50 - this keyframe I want to make the light
365:53 - disappear
365:54 - and now this should look better
366:00 - and there we have another minor issue
366:02 - but the light disappears so basically
366:04 - every time we are playing the animation
366:07 - we are hiding the Sprite 2D that is
366:09 - because inside of this animation
366:11 - whenever we are playing this at the end
366:13 - of The Animation Sprite 2D is invisible
366:15 - I suppose the most secure way to ensure
366:19 - this isn't going to be a problem inside
366:21 - of blinking although at the beginning I
366:23 - want to add a track a property track
366:24 - then Sprite 2D and set visible
366:29 - to
366:30 - being enabled all the way at the
366:33 - beginning and that way we are not going
366:35 - to have the issue I can now shoot it and
366:37 - we have another issue now the light
366:39 - isn't being visible anymore and this
366:41 - once again
366:42 - is because inside of explosion we're
366:45 - hiding the Sprite 2D and the point light
366:47 - 2D so both of these if we're playing the
366:49 - animation past this point they are being
366:51 - hidden so you can see it in the editor
366:53 - right now this can be an issue and once
366:56 - again inside of blinking all the way at
366:58 - the beginning one more track property
367:00 - track Point light 2D I want to set this
367:03 - to visible and now I want to add another
367:07 - value to point letter D in the beginning
367:10 - this should be visible and finally let's
367:13 - try all of this if I now shoot it we get
367:16 - the light we get the grenade we get the
367:17 - explosion and we get a transparency
367:20 - effect cool with that we have animations
367:23 - and yeah I'm happy with this so this was
367:26 - the animation player one of the most
367:29 - powerful notes in all of Godot and you
367:31 - can have a lot more animations in there
367:33 - and you can do a lot of things also when
367:36 - you look at add track there's a lot more
367:38 - stuff that you could work with I have
367:40 - only touched the surface of this node
367:42 - I want to talk a bit more about
367:44 - animations specifically I want to cover
367:47 - another concept called tweens and tweens
367:51 - are not essential to make a good gaming
367:53 - Adobe but they can make your life
367:55 - significantly easier
367:58 - at this point we can animate basically
368:00 - any property using an animation player
368:03 - the thing is sometimes you just want to
368:06 - have a simple animation like zooming in
368:08 - with the camera updating a position or
368:10 - changing the transparency all of these
368:13 - things are quite simple and as a
368:15 - consequence an animation player for them
368:17 - would be Overkill
368:19 - to remedy that situation we have tweens
368:23 - and basically what they are most
368:25 - importantly they are not a node although
368:28 - there used to be in earlier versions of
368:29 - Godot
368:31 - instead they are an object that you
368:33 - create in the script of a node
368:35 - and then this twin object can
368:37 - interpolate between two values this
368:40 - might sound confusing so let's do an
368:42 - example we want to rotate any kind of
368:45 - node it doesn't really matter what it is
368:47 - for that we are setting a start value an
368:49 - end value and a duration with that
368:52 - information the twin object can start at
368:54 - a certain point in this case we would
368:56 - have a rotation of zero degrees at zero
368:59 - seconds and then over the duration of
369:02 - one second we would go through all of
369:05 - the values and eventually end up at the
369:09 - final value the one we have specified
369:10 - all of this would take just a couple of
369:13 - lines of code no dedicated node and it's
369:15 - very easy to work with once again here
369:18 - we are back in the dough and what I want
369:22 - to do is that if the player is entering
369:25 - this house I want to zoom in on the
369:28 - player which means inside of the player
369:31 - we have the camera 2D and this one has a
369:34 - zoom level
369:36 - if the player is entering the area to D
369:38 - of the house then I want to increase the
369:40 - zoom level to whatever value we want
369:42 - let's say if I go to one
369:45 - then okay you can't really see the
369:47 - outcome
369:48 - but if I zoom in this
369:52 - pink reddish area is the camera zoom so
369:56 - if we change this to a one it is much
369:59 - closer to the player although this is
370:01 - not the value I want for now I want to
370:03 - give it 0.6 for that though first of all
370:06 - we need to have a bit of a setup and
370:09 - first of all I want to close the light
370:10 - fan animation and the grenade we don't
370:12 - need those anymore instead I want to
370:14 - work inside of the house this one is now
370:18 - going to need a script so I'm going to
370:20 - attach a script
370:21 - for the template I want to have an empty
370:25 - one and the folder should be in the same
370:27 - folder where we have the house all of
370:29 - this looks pretty good now we have a
370:31 - script and next up with the house node
370:34 - selected I want to click on node and
370:36 - then look at body entered
370:38 - I want to trigger this signal once the
370:41 - player has entered and for now let me
370:44 - simply print
370:46 - player has entered also while we are
370:50 - here let me check the house area 2D in
370:53 - the inspector for the collisions those
370:55 - look good the house is on layer 5 and
370:58 - can only see the player
371:00 - whenever you check collisions this is a
371:02 - really important tab it's very easy to
371:04 - mess up
371:05 - now with that we should be printing
371:07 - something and let's test it that's
371:09 - usually what you want to do very often
371:11 - so there we already get an issue that we
371:13 - get players entered many many times
371:15 - although we are also getting it when the
371:18 - player is actually entering
371:20 - to check what's going wrong here let me
371:22 - print the body that we are getting and
371:25 - let's run off this again and there we
371:28 - can see this simple light is causing the
371:30 - problem along with the wall light but
371:32 - those we have to update the Collision
371:34 - layers
371:35 - which means I want to open up the wall
371:39 - light and I want to open up the I called
371:42 - it this simple light
371:44 - both of those have the wrong Collision
371:46 - layer and I really want to emphasize
371:48 - this you always want to keep in mind
371:49 - it's very easy to forget
371:51 - should not be layer 1 instead it should
371:54 - be on layer 3 for objects
371:56 - and for the Mast it can see the player
371:59 - it can see the enemies and they can see
372:02 - the projectiles
372:04 - with that we can save it and then for
372:07 - this simple light I want to have the
372:09 - same it should be on layer 3 and can see
372:11 - layers 1 2 and 4.
372:14 - and with that I should be able to close
372:16 - both of these run all of this again
372:20 - and now there's no print statement when
372:22 - we are running the game and if I walk
372:25 - into all of this we are getting the
372:27 - player and this works multiple times so
372:30 - this is looking really good that is a
372:32 - good start next up I want to connect
372:34 - this house to the level or more
372:37 - specifically the signal we have just
372:40 - created this one here this needs to
372:42 - trigger a function inside of the level
372:44 - which we can do via is signal so I want
372:48 - to create a signal let's call it player
372:51 - entered and instead of printing
372:54 - something I simply want to get the
372:56 - player entered and then emit all of that
373:00 - now with that back inside of the level I
373:04 - can get inside of ground we have the
373:07 - house and now the house has player
373:10 - entered as a signal this I want to
373:12 - connect to the level script
373:14 - and now we get on house player entered
373:17 - just to make sure that this one is the
373:19 - working I want to print player has
373:21 - entered a house in level
373:25 - it's really important to always double
373:27 - check your code and especially when
373:29 - you're recording all of this gets
373:30 - significantly more difficult but this is
373:33 - looking really good
373:35 - so finally we can start creating a tween
373:40 - the way you're doing that is first of
373:42 - all you want to get the tree
373:46 - this is a function that Returns the node
373:49 - tree basically the entire scene we
373:52 - currently have and this one has a couple
373:54 - of methods the one we want to use is
373:57 - called create Queen
373:59 - also function and the function that
374:01 - doesn't need any arguments so this would
374:03 - create a twin object this we want to
374:06 - store in a variable right away let's
374:07 - call it VAR tween and now we have a
374:11 - tween although this doesn't do anything
374:13 - instead what you now have to do is get
374:16 - this tween and then run tween underscore
374:20 - property
374:23 - and let me extend this window so we can
374:26 - see what's going on this twin property
374:28 - method wants to have at least four
374:31 - arguments but we have received zero so
374:33 - far so we have to make some updates also
374:35 - a really useful tip if you hold Ctrl or
374:38 - command and space then you can see what
374:41 - could those specifically wants for this
374:43 - method and number one it wants an object
374:47 - most of the time the object is going to
374:49 - be a node
374:50 - in our case the object would be the
374:54 - camera
374:55 - 2D so inside of the player we have a
374:58 - camera 2D
374:59 - next up we want to have the property on
375:02 - this node that we want to change
375:04 - which means if I minimize this window
375:07 - and go to camera 2D in the inspector
375:10 - there we have zoom and if you hover over
375:13 - that we get Zoom this is the property we
375:15 - want to address and importantly this
375:18 - property Godot wants to have as a string
375:20 - so in string Zoom the name of this
375:23 - property and then we're good to go and
375:26 - once again let me extend this we will
375:29 - need two more attributes
375:31 - the door wants to have the final value
375:33 - and the duration
375:35 - now for Zoom the value good ones is
375:38 - going to be a vector 2.
375:41 - with two values let's go up with one and
375:44 - one for X and Y values and finally we
375:47 - need a duration
375:48 - and this is in seconds so if you had a
375:51 - one here we have a one second duration
375:53 - and now Godot is not complaining anymore
375:56 - and this should be working so let's try
375:59 - all of this
376:00 - and I can walk towards the house and
376:04 - once we are entering the area 2D
376:06 - we can see our camera is zooming in so
376:09 - this is working really well
376:11 - I can still do everything else so I am
376:14 - quite happy with that
376:16 - perfect I really hope you understand why
376:19 - the system is incredibly powerful if the
376:22 - player is entering the house we only
376:24 - want to zoom in so ultimately a fairly
376:27 - simple operation we could accomplish all
376:30 - of this using an animation player but it
376:33 - would be way too much work which is why
376:35 - you're seeing tweens all over the place
376:36 - they make your life much easier although
376:39 - you could get by without them
376:41 - however with that being said if I run
376:44 - all of this again and I go into the
376:48 - house so just a second
376:51 - the animation still works but the issue
376:53 - we have now is that if the player is
376:55 - leaving the house the camera doesn't
376:57 - return back to the default state
376:59 - and fixing that is going to be your
377:01 - exercise I want you guys to change the
377:04 - camera zoom back to the start value of
377:06 - 0.6 for both X and Y once the player is
377:09 - leaving the house pause the video now
377:11 - and try to implement that
377:16 - I want to start working on the house
377:18 - because in there we have to attach a new
377:21 - signal which is body exited I want to
377:24 - add that to the house and now we have a
377:27 - new function although this is local to
377:30 - the house scene so we have to create
377:32 - another signal let's call it player exit
377:36 - it
377:36 - once we have that all you have to do is
377:39 - get player exited and then emit this
377:41 - signal
377:42 - with that we can return to the level
377:45 - scene select inside of the ground the
377:49 - house and now we have another signal
377:52 - this we want to trigger and connect it
377:55 - to the level script
377:56 - let me get rid of the white space
378:00 - and extend the window inside of this
378:04 - function we now want to create a new
378:06 - tween and use that to update the camera
378:08 - once again for that once again I want to
378:11 - create a new variable with tween
378:15 - and this one is going to get 3 and then
378:21 - on that I want to create a queen
378:25 - on the next line I want to use this twin
378:29 - object and then run the method tween
378:31 - property
378:33 - and once again we're going to need four
378:36 - arguments first of all we need an object
378:38 - which in our case is the player camera
378:40 - so I want to have the player and then
378:43 - the camera 2D once again we want to
378:46 - Target the zoom so as a string I want to
378:49 - add Zoom next up we want to return to
378:51 - the start value which was Vector 2 and
378:55 - 0.6 and 0.6
378:58 - finally for the fourth value we need a
379:00 - duration and just do something else
379:02 - let's say two seconds
379:05 - once we have all of that Google stops
379:07 - complaining we can run the game again
379:09 - and now if I go into the house this
379:13 - should still work
379:15 - and that is looking really good and now
379:16 - if I leave the house
379:18 - we are going back to the default camera
379:21 - zoom and well we can do this multiple
379:24 - times
379:25 - this works really well
379:27 - I am happy with this with that we have
379:31 - the basics of tweens now that being said
379:34 - you can do quite a few more things with
379:36 - them although before I get to them the
379:38 - debugger is complaining and this I don't
379:40 - like basically we are using body inside
379:43 - of these two signals and Godot doesn't
379:47 - like that so we have to add an
379:48 - underscore
379:50 - so the debugger stops complaining
379:53 - this is a smaller issue but you don't
379:55 - want to have too many debugger issues at
379:57 - some point they are going to become
379:58 - annoying and confusing if we now run out
380:01 - of this again the debugger is happy so
380:03 - everything is good now with that covered
380:06 - we can look at a few more extra
380:09 - functionalities of tweens that can also
380:11 - be super useful
380:12 - right now we have one animation when the
380:15 - player is entering the house and another
380:17 - animation when the player is leaving if
380:19 - you want to have something a bit more
380:21 - fancy you could add multiple animations
380:23 - on one tween for example what we could
380:28 - be doing if I want to add another
380:30 - animation I would simply add tween again
380:32 - then use tween property once more
380:36 - let's say as an example I want to make
380:38 - the player invisible for that I want to
380:41 - get the player
380:42 - or the player know to be more specific
380:44 - next up the property I want to Target is
380:48 - modulate this property covers the color
380:51 - and the transparency of any node
380:53 - ultimately it is a vector 4 with 4
380:57 - values we have a value for the red color
380:59 - for green for blue and then for the
381:02 - alpha values which we cover with a now
381:05 - in our case we don't really want to
381:06 - Target all of them all we care about is
381:09 - the alpha value and for that Godot has a
381:12 - nice shortcut you can use a colon and
381:15 - then lowercase a with that we are only
381:17 - targeting one value inside of this
381:20 - property
381:22 - and this value we want to set to zero
381:25 - finally for the duration let's say I
381:28 - want to have a duration of 2 seconds
381:30 - and with that if I now run all of this
381:33 - again I can move the player to the house
381:37 - and now we are zooming in and after we
381:41 - have done that the player becomes
381:42 - invisible
381:44 - and we still have the Shadows so
381:45 - everything else works fine but well now
381:48 - we have an invisible player
381:50 - which is illustrating one major issue
381:53 - that we are first playing this animation
381:55 - and then we are playing the other
381:57 - animation
381:59 - Godot plays them in sequence which means
382:01 - if I turn all of this around and have
382:03 - modulate first and then the zoom you can
382:06 - kind of tell where this is going we are
382:08 - going to have first the transparency and
382:10 - then the camera so now the player
382:12 - becomes invisible and then we are
382:14 - zooming in
382:16 - sometimes this is the desired Behavior
382:18 - but most of the time it is not to play
382:21 - both of these animations in parallel you
382:24 - would get the tween and then the method
382:26 - set parallel and you would set this one
382:30 - to true or false depending on what you
382:31 - want in my case I want this to be true
382:35 - which means if I run all of this now we
382:38 - can walk in there
382:40 - and we would get
382:42 - the animation and well we will get both
382:45 - animations for the camera and for the
382:47 - transparency
382:48 - you might have also seen let's say if I
382:52 - type tween again and then set you can
382:55 - also set a Loops so if you want to play
382:57 - an animation multiple times you could do
382:59 - it with that one although I am not going
383:01 - to do that that's something slightly
383:03 - more advanced or not really more
383:04 - advanced just slightly different and I
383:06 - am not going to need it
383:08 - instead I want to cover something else
383:10 - and that is when you are treating a
383:13 - property you can add a tiny bit more or
383:16 - example right now we are setting the
383:21 - player we're getting transparency and we
383:23 - are only setting the end value and the
383:26 - duration
383:27 - what we can also do is set a start value
383:30 - this you get by adding a DOT and then
383:33 - the from method in there you can simply
383:36 - set a start value for example if I set
383:38 - this to 0.5
383:40 - then let me actually demonstrate what's
383:42 - going to happen if I now run into the
383:45 - house we are going to transition the
383:47 - player almost immediately to half
383:49 - transparency and then we are moving to
383:51 - zero transparency
383:53 - by default Godot is going to start with
383:55 - the current value of the player which is
383:58 - one so full transparency but if you want
384:01 - to have a default start value you could
384:03 - use from
384:05 - besides that you could also set a
384:07 - transition speed for example right now
384:09 - we are zooming in with the camera and
384:12 - this works at a linear speed but
384:14 - sometimes you don't want to have a
384:15 - linear speed and for that you can add
384:17 - another method called set runs for set
384:20 - transition and in there you get a whole
384:24 - bunch of different kinds of transitions
384:26 - for example I guess trans quote should
384:30 - be visible if I now run all of this
384:33 - you might be able to see this or you
384:35 - might not or this kind of Animation it's
384:37 - a bit hard to see so there we are
384:39 - zooming in seemingly faster but we're
384:42 - not actually doing that let me draw this
384:44 - actually when you think about
384:45 - transitioning any kind of property you
384:48 - would have two axes
384:49 - on the x-axis you would have time and on
384:53 - the y-axis you would have some kind of
384:55 - value
384:56 - the simplest transition to understand is
384:58 - a linear one this one simply moves at a
385:01 - straight line however this is not always
385:03 - what you want to have sometimes you want
385:05 - to have animation transition that looks
385:07 - something like this or something like
385:10 - this
385:11 - or even something like this
385:15 - all of these you could set with set
385:18 - trends now in my case I will not be too
385:21 - concerned about this but this is also
385:22 - something you can do
385:23 - tweens are actually quite powerful in
385:26 - the dough although at some point if you
385:28 - add too many things inside of this tween
385:31 - you might simply want to use an
385:33 - animation player
385:34 - there's no hard line between which one
385:37 - you should be using at some point you're
385:39 - just going to get a feeling for it but
385:40 - both are perfectly fine approaches
385:43 - in my case though I want to comment out
385:46 - the modulate because this is not
385:48 - something we are going to need
385:49 - now finally there's one more thing that
385:51 - I want to do
385:52 - if I
385:54 - go back to the main scene when the
385:57 - player is entering this area
386:01 - so far I can actually demonstrate this
386:03 - the player can keep on moving so this is
386:06 - not ideal
386:09 - instead what I want to do is if the
386:11 - player is entering this area I want to
386:13 - transition the player speed to zero what
386:16 - that is going to mean is that the player
386:17 - is moving normally and once we are
386:19 - entering we are slowing down the player
386:22 - so we are ending up somewhere here
386:25 - that way the player is never going to
386:27 - reach this bit which would look a bit
386:30 - unrealistic for that we will need a few
386:34 - more things it's not too much
386:36 - back in the player I want to work in the
386:39 - script and I want to give the player a
386:41 - few more attributes also for those I
386:44 - want to use export I want to create VAR
386:47 - max speed
386:50 - this is going to be an integer and this
386:52 - should be 500.
386:54 - besides that I want to have a normal
386:56 - variable which is going to be speed
386:59 - this one is going to get the max speed
387:02 - value by default also we can be a bit
387:06 - more aggressive here this speed should
387:08 - also be an integer
387:10 - once we have that I can update this 500
387:14 - with the speed if I now run all of this
387:17 - we are not going to see a difference
387:19 - because as far as Godot is concerned the
387:22 - numbers haven't changed
387:23 - speed is still 500.
387:25 - that being said what we are now able to
387:28 - do inside of the level
387:31 - when the player is entering the gate
387:33 - this is happening inside of this
387:35 - function
387:36 - I don't want to print things anymore
387:38 - instead I want to create another
387:41 - variable which is going to be the tween
387:43 - and there's something I forgot to
387:44 - mention earlier so far we created a
387:47 - tween with get 3 and then create tween
387:49 - you don't actually in the first part you
387:52 - can simply type create Queen and then
387:56 - Godot figures out the rest for you so
387:58 - this is also perfectly fine
388:01 - and also to more easily understandable
388:03 - part so this is probably what you want
388:05 - to do next up I want to get the tween
388:08 - once again and then run tween property
388:13 - I want to get the player node and spell
388:16 - this correctly as well
388:18 - on that player node I want to update
388:20 - this speed
388:22 - the final speed should be zero and I
388:25 - want to have a duration of one second
388:28 - with that I can run all of this again
388:30 - and now if I go into this area we cannot
388:34 - move anymore although the duration was a
388:36 - bit too long so let's say this one could
388:39 - be 0.5
388:41 - and now if I run this again
388:43 - in there we cannot reach this ceiling
388:46 - anymore this is exactly what I wanted
388:49 - now right now this is looking very silly
388:51 - and we are breaking the game but later
388:53 - on we're going to add a transition that
388:55 - the player is going to get into a
388:57 - different level
388:58 - although for now we have covered another
389:00 - really important part so we are good to
389:03 - go although before that before I forget
389:05 - the debugger now is unhappy again
389:07 - because we have this body parameter that
389:10 - we're not using so let's add underscore
389:12 - and now gudo is happy again at least I
389:16 - think it is yep that looks good
389:18 - cool with that we are finished with this
389:21 - part
389:21 - now that we have a level I want to
389:23 - connect the laser to it and this is
389:26 - going to mean a couple of things most
389:28 - importantly I want the laser to
389:30 - disappear when it is colliding with a
389:32 - wall or an object on top of that if it
389:35 - is colliding with an enemy it should
389:36 - trigger a function but now this function
389:39 - is going to do very much later on when
389:41 - we work on the enemies all of that will
389:43 - be much more elaborate on top of that
389:45 - there's one more thing I want to cover
389:46 - and that is that the laser should
389:49 - disappear after a certain amount of time
389:51 - that is important because I want to make
389:54 - sure that we cannot have infinite laser
389:56 - and the reason I think is best explained
390:00 - if I look at all of this in the dough
390:04 - back in the editor I want to run the
390:06 - game although I don't really care about
390:09 - the game
390:10 - I want to look at remote there we have
390:12 - the level and there we have projectile
390:14 - this right now has nothing in it however
390:17 - if I go back to the game
390:19 - and I simply shoot in One Direction we
390:22 - now get a whole bunch of children and
390:25 - this can go on ever
390:27 - which is fine for the game and for this
390:30 - kind of 2D game it wouldn't cause a
390:32 - problem that being said if you have a
390:34 - more elaborate game where you work with
390:36 - 3D objects where things get much more
390:38 - complicated you want to have a limit on
390:40 - how many objects you have in the game
390:42 - just imagine that the more objects you
390:44 - are creating the more your computer has
390:46 - to process so we want to have a limit on
390:49 - how many we can have and for that we
390:51 - want to have a timer that even if the
390:52 - laser doesn't hit anything we still want
390:54 - to get rid of it after some amount of
390:56 - time
390:57 - now for all of that we have to work
390:59 - inside of the laser so let me open this
391:02 - scene with controller command shift and
391:04 - oh I can open the laser
391:07 - and there we have a laser and the laser
391:10 - has a script we are simply creating a
391:14 - speed and a direction which by default
391:17 - is up and then inside of process we are
391:19 - updating the position of this area 2D
391:23 - and then inside of the level when we are
391:26 - creating all of this
391:28 - inside of the on player laser function
391:31 - we are setting a position for the laser
391:33 - a rotation and the direction
391:36 - so now we have to create a few more
391:39 - things most importantly whenever this
391:42 - laser collides with a static object then
391:45 - we want to destroy it which means inside
391:47 - of node we want to look at body entered
391:51 - body entered because the area is going
391:53 - to collide with bodies which are static
391:55 - objects or character bodies
391:57 - so this I want to connect to the laser
391:59 - and now we have a function what we could
392:03 - be doing in here for example is fringe
392:05 - and let's say Collision
392:07 - now if I run the game again
392:10 - I can shoot at a wall and we get
392:13 - Collision
392:14 - to be a bit more detailed we can also
392:18 - print the body this laser is colliding
392:20 - with
392:21 - so if I now do this again
392:24 - we get a collision with the gate and if
392:26 - I shoot in this direction we get
392:29 - collision with a tile map and this
392:30 - multiple times so if I click on this we
392:33 - get a whole bunch more and this seems to
392:35 - be working just fine
392:37 - that being said though for this game I
392:39 - don't want to print anything I want to
392:41 - destroy the laser and this we can do
392:43 - quite easily all we need is the command
392:45 - Q3 this is destroying a node and that is
392:49 - exactly what we want to do if I run the
392:51 - game and I shoot at a wall the laser
392:54 - simply disappear the same works with the
392:56 - steam vents and the same is going to
392:58 - work with these walls as well
393:00 - with that we have covered the first part
393:02 - that now the laser is going to disappear
393:04 - once it collides with a static object
393:07 - but this is not enough because if I go
393:10 - back to the level and minimize
393:12 - everything
393:13 - what I now want to do is add another
393:15 - scene and the scene I want to add if I
393:18 - click on Ctrl shift and a I want to add
393:20 - a drone scene to my level
393:23 - let's say somewhere here and now if I
393:26 - run the game
393:28 - the Drone is going to move to the right
393:29 - and if I shoot at it the laser is also
393:32 - going to disappear so this one is still
393:34 - working just fine
393:35 - but now what I ultimately want to do is
393:38 - that if the laser is colliding with this
393:40 - drone I want to call a function and for
393:43 - that we have to figure out inside of the
393:46 - script on the laser we want to get the
393:49 - body which could either be a static
393:51 - object or an enemy and on this body we
393:54 - want to call a function if the body has
393:57 - certain attributes for example if the
393:59 - body belongs to an enemy the way I
394:01 - approach all of that is inside of the
394:04 - Drone we have a process function and I
394:07 - want to create another function I call
394:09 - this one function hit
394:11 - doesn't have any parameters and all it
394:14 - is going to do for now it is going to
394:16 - print let's say damage it doesn't really
394:18 - matter what it is what I now want to do
394:20 - inside of the laser I want to call this
394:23 - hit function what we can be doing quite
394:25 - easily is we can get the body and then
394:28 - call the hidden method on it and this
394:30 - would already work so if I now run all
394:32 - of this and I shoot at the Drone we get
394:35 - damage so this is working just fine the
394:38 - problem is if I should add anything else
394:40 - the game is crashing because we have a
394:43 - non-existent function hit in Bay's
394:45 - static body 2D which basically means
394:48 - that this method doesn't exist inside of
394:50 - a static body which is the steam vent
394:53 - to fix that we have to check if the body
394:57 - has a hidden method or not
394:59 - the easiest one would be with if then
395:03 - the body and then the inbuilt method has
395:06 - method
395:08 - I don't suppose I have to explain what
395:10 - this one is doing the one argument that
395:12 - this method wants is a name of a
395:14 - function in our case this would be hit
395:16 - and if that is the case I want to call
395:19 - this method and now if I run all of this
395:22 - again I can shoot at a drone it is still
395:24 - working just fine but if I should add
395:26 - anything else we are not getting an
395:28 - error anymore
395:30 - and that is because this if statement is
395:32 - not triggering
395:34 - which is basically covering the other
395:36 - aspect of the assignment so now we can
395:38 - trigger a function if we're hitting an
395:40 - enemy with a laser
395:42 - although you don't actually see this
395:44 - kind of method being used all that often
395:46 - because Godot has a simpler way of doing
395:48 - all of that all you have to do if I get
395:51 - rid of it you have to check if the
395:54 - function or property in this case hit is
395:57 - in the body
395:59 - the result would be the same so if I now
396:01 - run all of this again I can still shoot
396:03 - at the Drone we get damage and if I
396:04 - shoot anything else we don't get
396:06 - anything
396:07 - so this is the same outcome but a bit
396:11 - easier also more powerful because with
396:14 - this syntax you can check if a method
396:16 - like hit or a property is inside of a
396:20 - node for example what I could be doing
396:22 - inside of the Drone
396:23 - I could create an attribute let's say
396:27 - VAR is enemy
396:31 - and this would be a Boolean which by
396:33 - default is root this notably is an
396:37 - attribute not a method
396:39 - so we cannot call it but inside of the
396:42 - laser we don't really care about it we
396:45 - could simply check if
396:49 - is enemy
396:51 - is in the body
396:55 - then we can print
396:57 - is an enemy
397:00 - if I now run this again I can shoot at
397:03 - it and we get is an enemy and this we
397:06 - don't get anywhere else
397:08 - although this isn't actually what I want
397:10 - to do so I'm going to get rid of it
397:12 - also in the Drone we don't want to check
397:15 - if this is an enemy
397:17 - cool with that we have another really
397:19 - important bit now we can call a method
397:21 - on an enemy and we can also get rid of
397:24 - the laser if we have a static object now
397:26 - we have another way to damage an enemy
397:28 - and that is via a grenade and for now
397:31 - I'm going to ignore this one because
397:33 - later on we have to cover another
397:35 - concept to make all of this work
397:37 - efficiently so don't worry about this
397:39 - one for now finally I want to create the
397:42 - third part and that is that we want to
397:44 - get rid of the laser after a certain
397:46 - amount of time even if it doesn't hit
397:48 - anything and that is going to be your
397:50 - exercise basically what I want you guys
397:53 - to do is to use a timer to destroy the
397:55 - laser after two seconds or basically
397:57 - whatever amount of time you think is
397:59 - appropriate pause the video now and try
398:01 - to implement this one
398:05 - back in Godot I want to keep on working
398:08 - in the laser and since we now want to
398:10 - use a timer I have to attach to this
398:13 - laser another note which would be a
398:15 - timer I'm going to call this the self
398:18 - destruct timer
398:21 - this self-destruct timer inside of the
398:23 - inspector is going to have a wait time
398:26 - of two seconds one shot should be
398:28 - enabled but auto start should not be a
398:31 - name once we have that inside of this
398:34 - script we basically want to start this
398:36 - timer once the node has been created
398:39 - and for that we will need the ready
398:41 - function so func underscore ready
398:45 - and once it is ready I want to get the
398:48 - self destruct timer
398:50 - and then start it
398:53 - that's the first part the second part is
398:55 - once the timer is running out
398:57 - then I want to call the timeout method
399:00 - and connect it to the laser all this one
399:02 - has to do if I get rid of s
399:05 - we want to Q3 meaning we want to destroy
399:09 - this node
399:10 - and with that we should be done so now
399:13 - if I run this
399:15 - I can shoot all the way to the right and
399:18 - if I now look at remote level vectiles
399:21 - right now it's empty
399:25 - let's try this again
399:26 - we get a laser for a short period of
399:29 - time so this there we have a laser and
399:32 - there disappear
399:34 - and this to the player would never be
399:36 - visible because the laser leaves the
399:37 - screen really quickly
399:39 - but well we make sure that we never have
399:41 - too many laser and with that we have
399:43 - connected our laser to the level scene
399:46 - which is another major part of the game
399:48 - so with that we have made a huge amount
399:51 - of progress at this point we are able to
399:53 - create a single level but that is still
399:56 - quite limited so in this part we are
399:58 - going to cover how to create multiple
400:00 - levels
400:01 - all of that in the most fundamental
400:04 - sense is actually kind of easy all we
400:07 - have to do is to create multiple level
400:09 - scenes unfortunately it isn't that easy
400:13 - simply because our level contains quite
400:15 - a bit of code for example to create a
400:18 - laser or the grenades all of that codes
400:20 - exist inside of one level scene if we
400:23 - made multiple level scenes that would
400:25 - not be available
400:26 - now we could copy the code over but that
400:29 - would be really inefficient imagine
400:31 - later on you might have hundreds of
400:33 - levels and you wouldn't want to copy
400:35 - over the code every single time
400:37 - if you had to make a single change this
400:40 - would just not work anymore now to
400:42 - illustrate all of this a bit better
400:43 - let's have a look at all of this in good
400:45 - dough right now we have a single level
400:48 - so I can zoom out and we have all of
400:51 - this a fairly basic level but for now
400:54 - this is pretty good if I wanted to
400:57 - create a second level in the most basic
400:59 - sense all I would have to do is create
401:01 - another scene this would be a 2d scene
401:04 - and let's rename it right away to level
401:07 - two the name here doesn't matter so much
401:10 - I am going to delete all of this in just
401:12 - a bit anyway so if you don't want to
401:14 - code along for this short bit don't
401:16 - worry too much about it for this level 2
401:18 - I could for example add another scene
401:20 - which would be the layer if I save all
401:24 - of this under scenes and levels there we
401:28 - have level two and now I have level two
401:31 - this one contains the player and I guess
401:34 - just so that we have something else
401:36 - let me add the bed in there as well so
401:39 - there we have a bed and the player
401:41 - if you want to test an individual scene
401:44 - you wouldn't click on this play icon
401:47 - instead you will click on this one
401:49 - with that you are only running the
401:52 - current scene so now if I click on that
401:54 - the player is still working around
401:56 - however now we don't have a camera and
401:59 - if I shoot we only get the particles but
402:02 - we don't get an actual laser
402:04 - and that is because all of the logic for
402:07 - that happens inside of the level
402:09 - meaning all of this code here 35 lines
402:13 - of code are only available inside of
402:15 - this level they are not available inside
402:18 - of level 2.
402:21 - which is why all of this is incredibly
402:23 - Limited
402:24 - as a consequence I will close the scene
402:27 - and go to levels
402:30 - and level 2 and delete this scene
402:33 - because it's simply not an efficient way
402:35 - to create multiple levels
402:37 - instead let's talk about a much better
402:39 - way
402:40 - the concept we need is called
402:42 - inheritance basically what that means is
402:45 - we want to create a parent level scenes
402:48 - and this one is going to contain all of
402:50 - the logic so for example this one would
402:52 - contain the logic for shooting a laser
402:54 - shooting a grenade and anything else
402:56 - that we could need
402:58 - but this parent level scene isn't
403:00 - actually going to be visible instead
403:02 - what we are going to do is when we are
403:04 - creating any other level scene these
403:07 - level scenes are going to inherit from
403:09 - the parent level scene
403:10 - that way they have all of the important
403:12 - code but we can create multiple
403:14 - instances of that scene that way we
403:17 - could have hundreds of levels they would
403:19 - all share the same code base and then
403:21 - you could even add additional parts
403:24 - Godot is making all of that actually
403:26 - quite easy so let's Jump Right In and
403:29 - let's have a look at all of that what I
403:31 - want to do is to have this level as the
403:33 - parent scene and then I'm going to
403:35 - create an inside level and an outside
403:37 - level and both are going to inherit from
403:39 - this level that way we can keep all of
403:42 - the code we have written so far and then
403:44 - have two other scenes inheriting from
403:46 - this code
403:47 - or at least from parts of this code
403:49 - you're going to see in a second what I
403:50 - mean
403:51 - when you look at the top left there we
403:53 - have scene and the first entry is new
403:56 - scene besides that though right below we
403:59 - have a new inherited scene
404:01 - if I click on that Godot is giving me
404:03 - another dialogue in there it helps me to
404:06 - open up a scene the scene we are opening
404:08 - up would be the parent scene and right
404:11 - now this will be level so this is what I
404:12 - want to open
404:13 - and now we get another scene and let me
404:17 - put both of those scenes right next to
404:19 - each other so you can see the difference
404:21 - also I guess I should close everything
404:23 - else so things are a bit easier to see
404:26 - right
404:28 - now we have the level and we have an
404:30 - unsafe new scene if I minimize
404:33 - everything in there you can see now we
404:36 - have the same notes but some of them are
404:38 - yellow so in the original everything is
404:40 - white in the inherited one we have some
404:43 - yellow scenes
404:44 - the yellow scene means that it is
404:46 - inherited and all of this should be
404:48 - yellow
404:49 - this may just be a bug but all of these
404:51 - scenes are inherited from the parent
404:53 - scene
404:55 - and what is really important now if I go
404:57 - to the level and I for example delete
404:59 - the Drone
405:02 - if I now set the level again and return
405:05 - to the unsafe scene the Drone has also
405:08 - disappeared
405:10 - which means that whatever change we are
405:12 - making to the parent scene it will also
405:14 - affect the child scene
405:16 - and I guess to make all of this a bit
405:18 - more noticeable let me rename this scene
405:21 - to the outside scene
405:25 - and now once I've renamed it the bug
405:27 - disappeared now all of this is yellow
405:29 - this is how it should look like
405:31 - I can save all of this as well now I
405:34 - have outside.tscn and if I run this we
405:37 - have no change whatsoever besides that I
405:40 - want to create from My Level another
405:43 - inherited scene so new inherited scene
405:46 - once again I want to inherit from the
405:48 - level so I click on open and this scene
405:51 - I want to rename to inside
405:56 - I want to save that one as well and we
405:58 - have the name right away insight.tscn
406:01 - perfect with that we have three levels
406:05 - we have a parent then outside and inside
406:07 - with outside and inside being Children
406:09 - of the level the issue now is that both
406:12 - of the inside and the outside levels
406:14 - look identical and for that we have to
406:17 - make a few more changes inside of the
406:19 - parent all of this needs to be quite a
406:21 - bit more flexible
406:22 - for example what we could be doing is
406:24 - that this gate isn't necessary inside of
406:27 - the parent it should only be inside of
406:29 - the outside scene
406:31 - which means I want to get rid of it
406:34 - I can simply delete it and now it's not
406:36 - visible anymore with that make sure you
406:38 - are saving this level and now in the
406:40 - outside scene this one isn't visible
406:42 - anymore
406:43 - that being said we can totally add it
406:45 - again so with outside selected I click
406:48 - on Ctrl shift and a and I want to add
406:51 - the gate again
406:52 - and place it once again in the right
406:54 - position something like this
406:57 - and also make sure that it's below the
406:59 - player with that we have the gate inside
407:01 - of the outside scene but inside doesn't
407:03 - have it
407:04 - and a similar thing if I go back to the
407:07 - level I want to do with all of the notes
407:10 - inside of the ground node 2D so for that
407:14 - I want to right click and cut all of
407:16 - them out the level scene becomes really
407:19 - empty and this is by Design all of this
407:22 - should be empty so we can design the
407:23 - actual level inside of the child scenes
407:26 - in there we still have all of this stuff
407:28 - in the parent and that is because I have
407:29 - to save this level it's very easy to
407:31 - forget now the ground node is entirely
407:34 - empty but what we can do now is simply
407:37 - paste all of the stuff we have cut out
407:39 - and there we have the level again
407:41 - however inside of the inside level none
407:44 - of that is visible so this is looking
407:47 - significantly better
407:48 - at this point I can play both of these
407:50 - scenes so if I run the outside scene
407:52 - just the scene itself
407:54 - which I do with this icon I can still
407:57 - run around everything is working just
407:59 - fine so this is really good we also
408:01 - still have the house over there and all
408:04 - of this is working although there's
408:06 - going to be one change we have to make
408:08 - and that is the Gate entrance this one
408:11 - doesn't work anymore because we have to
408:13 - reconnect the signal but that is quite
408:15 - easily done
408:16 - what is much more important now if I go
408:18 - to the inside level and run all of that
408:21 - I can run around and there's nothing
408:23 - right now however we still have a camera
408:25 - and we can still shoot a laser we can
408:28 - also shoot a grenade so this is working
408:29 - just fine and there if I shoot it you
408:31 - can see the camera is still working
408:34 - that is the basics of inheritance if you
408:37 - are creating multiple levels you want to
408:39 - have a parent level that is ultimately
408:41 - quite bare bone though in this case we
408:44 - have a no 2D for the level then a ground
408:46 - node then the player and then
408:48 - projectiles however then inside of the
408:51 - outside scene we have the actual images
408:54 - that flash out the level and besides
408:56 - that we have an inside scene in this one
408:58 - we're going to decorate in just a bit
408:59 - first of all though we have to cover one
409:02 - more thing and that is that if I zoom in
409:06 - this area 2D has lost its functionality
409:10 - if you look at the code
409:12 - we want to reconnect this signal but
409:16 - there's a bit of a problem right now and
409:18 - that is that this outside scene has the
409:21 - level node so if you hover overt you can
409:23 - see level.gd if I go to the parent node
409:25 - the level we have the same script so
409:28 - level.gd and inside of the inside scene
409:31 - we also have level.gd
409:34 - which basically means that all three
409:36 - scenes share one script which might be
409:39 - intentional but very often it is not for
409:42 - example for the outside scene we want to
409:45 - have the functionality for the gate only
409:47 - inside of this particular scene
409:50 - which basically means for the outside
409:52 - level I want to have another script and
409:55 - this script should inherit from the
409:56 - level scene as well
409:59 - and that you can also do quite easily
410:00 - first of all
410:02 - with outside selected I'm going to click
410:04 - on this icon which is going to detach
410:07 - the script from the selected node if I
410:09 - click on that
410:11 - we don't have a script anymore but now I
410:13 - can add another script and this one
410:15 - would be outside.gd
410:18 - I want to save all of that in the same
410:20 - folder so all of this is looking really
410:22 - good I can now click on create
410:25 - and with that if I run this particular
410:28 - scene
410:29 - we are losing our access to the laser so
410:31 - now once again we don't have level.gd
410:34 - anymore meaning nothing is going to
410:37 - happen
410:37 - which means we have to figure out how to
410:40 - get all of the code from level.gd into
410:43 - outside.gd to achieve that you want to
410:46 - go to level.gd and then all the way at
410:49 - the top you want to create what is
410:52 - called a class underscore name and you
410:55 - can see once you write it it becomes red
410:57 - right away once we have that Godot wants
411:00 - to have a name for this class name in my
411:03 - case I'm going to call it level parent
411:07 - what this allows us to do is to inherit
411:10 - from this script
411:12 - which means inside of outside I don't
411:15 - want to extend a node 2D instead I want
411:18 - to extend a level parent right now Godot
411:22 - cannot find it because we have to save
411:24 - level.gd
411:26 - if I save it go back to outside now the
411:29 - error should disappear and there we go
411:31 - if I now run all of this again
411:34 - I can shoot and you can see I have
411:37 - loaded level the currency and this one
411:40 - doesn't contain anything right now
411:41 - instead I want to play the outside scene
411:44 - so if I run out of that now we have the
411:48 - shooting functionality once again so
411:50 - this one is working just as before and
411:52 - that is because
411:54 - with this class name we can inherit from
411:57 - the script like we have inherited a
411:59 - scene
412:00 - so all of these functionalities are
412:02 - available inside of outside.gd
412:05 - what this is going to allow us inside of
412:08 - level.gd we want to cut out this on gate
412:11 - player entered gate so I can simply
412:14 - control or command X and get rid of this
412:16 - code because we don't need it inside of
412:18 - level.gd it should only exist inside of
412:21 - outside.gd
412:22 - and let me save level.gd really quick
412:24 - and now in outside.gd I want to select
412:27 - the gate go to node and now player
412:30 - entered gate we can connect to the
412:32 - outside scene
412:33 - and with that we get this signal once
412:37 - again and inside of there I want to
412:39 - paste the code in that we had earlier
412:41 - like so if I run this scene again and I
412:46 - go to the gate the player stops moving
412:48 - really quickly
412:50 - meaning this code is working just fine
412:52 - and it is only available inside the
412:55 - outside scene
412:57 - inside doesn't have anything like that
412:59 - but it does have access to all of the
413:01 - stuff from the level
413:03 - although we are getting a debugger arrow
413:06 - and that is because in outside it should
413:09 - be an underscore body with this part
413:12 - implemented we have the two major
413:14 - approaches to inheritance you can either
413:17 - inherit from a scene which you do by
413:19 - going to scene and a new inherited scene
413:21 - or control or command shift and n
413:24 - you can also inherit from a script and
413:26 - this you do for example inside of laser
413:28 - you are giving a script a class name and
413:32 - then on any child script you are
413:34 - extending this script not to note you
413:36 - inheriting from
413:38 - that is pretty much all you have to know
413:40 - if you understand that you can work with
413:42 - inheritance quite well
413:44 - now this is incredibly important to
413:47 - understand so I really want to do an
413:49 - exercise
413:50 - I want you guys to create a generic item
413:53 - container scene it should just be a
413:55 - static object a Sprite and a collision
413:57 - shape
413:58 - it should also have a script with a hit
414:01 - function so if a laser collides with it
414:03 - you are printing something this could be
414:06 - literally anything let's say for now you
414:08 - should be printing the word object from
414:10 - that I want you guys to create two child
414:13 - scenes one should be for a toilet the
414:15 - other for a box all of the graphics you
414:18 - can find inside of graphics and objects
414:20 - finally there should also be inherited
414:23 - scripts one for the toilet and one for
414:25 - the box for both of them I want you guys
414:27 - to overwrite the hit function so that
414:30 - you are printing toilet for the toilet
414:31 - and box for the Box
414:33 - pause the video now and try to implement
414:35 - all of that and see how far you get
414:40 - I want to get started by creating the
414:42 - parent scene so a new scene the root
414:45 - note should be another node and more
414:47 - specifically a static body 2D
414:51 - let's rename this one right away as well
414:53 - I suppose item container seems
414:57 - appropriate
414:58 - besides that I also want to give this
415:01 - one a Sprite 2D and a collision shape 2D
415:06 - important for this one they don't have
415:09 - any contact the Sprite 2D doesn't have a
415:11 - texture and the Collision shape doesn't
415:12 - have a shape Godot is going to complain
415:15 - about it but we can just ignore it
415:17 - next up I also want to give this item
415:20 - container a script although first of all
415:22 - I want to save it
415:23 - with Ctrl or command shift I want to go
415:26 - to scenes and in there I want to create
415:28 - a new folder
415:30 - I suppose I could call it container all
415:34 - I have to do in there is save it and now
415:36 - we have an item container this one
415:39 - should get a script right away so I
415:41 - attach a script item container the same
415:43 - folder all of that is looking really
415:45 - good
415:46 - I can create and all I really want to do
415:49 - in here is to create a function for hit
415:51 - without any parameters and all I want to
415:54 - do is to print the word object
415:58 - with that we have a couple of nodes
416:01 - inside of a scene along with a script
416:04 - this we want to use via inheritance
416:07 - which we do by going to scene and then
416:10 - new inherited scene the parent should be
416:12 - the item container this I want to open
416:16 - and let me return to the 2D view that's
416:19 - a bit easier
416:20 - now we have an unsafe new scene with a
416:23 - Sprite 2D a collision shape and a static
416:25 - body 2D
416:27 - I want to rename that one right away
416:29 - let's call it toilet inside of this
416:32 - child scene I now want to add the Sprite
416:35 - texture which I'm getting from Graphics
416:37 - there we have objects and inside of
416:40 - there I think all the way at the bottom
416:42 - we have a toilet.ph
416:44 - I want to direct that into the texture
416:46 - and there we go we have a toilet
416:49 - next up we will also need a collision
416:51 - shape 2D
416:52 - and I think for this one a circle shape
416:56 - 2D would be best let's do something like
416:58 - this this really doesn't have to be
417:00 - perfect
417:02 - I want to save all of this and now we
417:04 - have a toilet.tscn
417:06 - this would cover one of the objects next
417:08 - up I want to go to scene again and then
417:10 - new inherited scene for this one now we
417:13 - have to be a bit careful because Godot
417:16 - by default sets the parent as the
417:18 - currently selected scene which is the
417:20 - toilet scene in my instance this
417:22 - shouldn't be the parent scene instead
417:24 - the parent should be the item container
417:25 - make sure you select the right one for
417:28 - this one can be really easy to confuse
417:31 - this I want to open and now once again I
417:33 - have the same basic setup although for
417:35 - this one I want to go all the way to the
417:37 - top there we have box and the box has a
417:40 - base and a lid I just want to use the
417:42 - base and drag it into the texture
417:44 - although that being said with this item
417:46 - container we could add another Sprite 2D
417:50 - and place it right below the other
417:52 - Sprite 2D and simply place the lid in
417:55 - there
417:57 - and I think the lid needs to be moved
417:58 - down it tiny bit something like this
418:02 - you don't necessarily have to add this
418:04 - step but I'm going to use this one later
418:05 - on anyway so we might as well add it
418:08 - right now next up we have to add a
418:10 - collision shape and for this Collision
418:12 - shape I want to have a rectangle shape
418:14 - 2D which I want to space accordingly
418:18 - that's looking pretty good once we're
418:21 - part of that I can save it let's name it
418:23 - create and that's not how you spell
418:25 - create that's better now we have a crate
418:28 - and a toilet that's a really good start
418:31 - inside of the outside scene I want to
418:33 - add these two new scenes so with Ctrl
418:36 - shift and a I want to add the toilet
418:40 - and I want to add the crate
418:43 - I can also place them in a better
418:45 - position and I think the toilet ended up
418:47 - to be a bit large but that we can work
418:49 - on later first of all though I want to
418:52 - run this particular
418:53 - and now if I shoot at the toilet we get
418:55 - object and if I shoot at the crate we
418:57 - also get object on top of that the
419:00 - collisions are also working just fine
419:03 - and the player can collide with them so
419:05 - this is looking really good
419:09 - perfect that's a really good start
419:11 - so once again we have an item container
419:14 - and this is a static body 2D with a
419:17 - Sprite and a collision shape
419:19 - this we are using inside of the toilet
419:21 - to give it a certain kind of texture and
419:23 - a certain kind of collision shape
419:25 - same with the crate in this one we have
419:28 - another texture and another Collision
419:29 - shape and on top of that we are adding
419:31 - another Sprite 2D
419:33 - whenever you do inheritance I guess the
419:36 - best way to think about it is that
419:37 - whatever you're doing to the parent is
419:39 - going to affect the children however
419:41 - what you are doing to the children is
419:43 - not going to affect the parents or the
419:45 - other children
419:46 - that way we can customize each children
419:49 - individually without affecting any other
419:51 - child
419:53 - next up we have to work with the script
419:55 - so just as a reminder if I run out of
419:58 - this again if I shoot at the toilet and
420:01 - the crate we always get object and this
420:03 - is not what I want
420:05 - right now the issue is that the item
420:08 - container the toilet and the crate all
420:11 - share the same script they all have
420:12 - itemcontainer.gd
420:14 - to work with that I want to open the
420:17 - item container.gd script and give it a
420:20 - class name
420:22 - plus underscore name I suppose item
420:25 - container for this one is also a pretty
420:27 - good name
420:29 - this now allows me to inherit from the
420:31 - script which I want to do inside of the
420:33 - toilet
420:34 - first of all though I have to get rid of
420:36 - the previous script for that I want to
420:39 - detach that script and add a new one
420:42 - it should be called toilet this one's
420:44 - just fine and I want to create that one
420:46 - really important I don't want to extend
420:49 - aesthetic body 2D instead I want to
420:52 - extend this item container.g meaning I
420:55 - want to extend this class name
420:58 - for that inside of toilet.gd I want to
421:01 - extend the item container
421:04 - so far this is not going to make a
421:06 - difference so if I just run all of this
421:08 - I can still shoot at the toilet and we
421:10 - get object
421:12 - however this allows me now inside of
421:14 - toilet.gd to create another function
421:17 - called Hit
421:18 - this one should simply print or lit
421:22 - what is now going to happen is that
421:25 - toil.gd is looking at the item container
421:27 - and gets access to all of these
421:30 - functions almost specifically this one
421:32 - particular function
421:33 - but then it also looks at its own body
421:36 - where it also finds a hit function
421:39 - and it always prioritizes its own hit
421:41 - function meaning this head function is
421:44 - going to overwrite this hit function
421:45 - inside of the parent
421:48 - as a consequence if we are running the
421:50 - outside scene again
421:52 - I can shoot at the toilet and we get
421:54 - toilet however if I shoot at the crate
421:56 - we're getting object
422:00 - to work on that inside of the crate I
422:02 - should also rename the item container to
422:05 - create
422:06 - next up I want to detach the script and
422:09 - attach a new one with create.gd
422:12 - this one once again should inherit from
422:15 - item container
422:17 - and after that I want to create a new
422:20 - function that is going to be it without
422:23 - any parameters and for now it is just
422:26 - going to print rate
422:29 - that should cover everything we need I
422:31 - can run outside we have toilet and we
422:34 - have crate and this is looking really
422:36 - good
422:37 - I supposed to demonstrate that we are
422:40 - still getting from Level container the
422:43 - basic information we could for example
422:45 - add a method here let's say func
422:48 - underscore ready and simply print
422:53 - object was created
422:56 - if I now run outside again we get object
422:59 - was created for both of these objects
423:01 - but the other stuff still works just
423:04 - fine which means you could add any kind
423:07 - of function inside of the item container
423:09 - and they would be available inside of
423:11 - create GD in toilet.gd
423:13 - once again it might be a good idea to
423:15 - play around with this yourself it can be
423:18 - a bit overwhelming in the beginning but
423:20 - once you get the basics of it it's
423:22 - incredibly useful especially when you
423:24 - have multiple objects that are kind of
423:25 - similar but not exactly similar before
423:28 - we finish with this part there are two
423:30 - very minor changes I want to make number
423:32 - one inside of the level the projectiles
423:35 - should be below the player that way if I
423:39 - am running this particular scene
423:41 - the lasers look like well they don't
423:44 - look like they're on top of the gun
423:45 - anymore when we are creating them it's a
423:47 - fairly minor change but once you notice
423:49 - it it gets really annoying so look at
423:51 - the gun the laser always starts on top
423:54 - of it which isn't ideal
423:57 - but if we have to project ads below the
423:58 - player this is not a problem
424:00 - besides that I want to go to project
424:03 - project settings and there inside of run
424:06 - we can set the starting scene which I
424:09 - want to set to the outside level
424:13 - that way I can close all of this and now
424:15 - whenever I click on this button to run
424:17 - the game we are starting inside of the
424:19 - outside level the apparent level the
424:21 - player is never actually going to see
424:23 - it's simply a template for all of the
424:25 - other levels
424:26 - the major part missing right now is that
424:28 - we have to create an inside level and
424:30 - this is what this part will be about and
424:33 - fortunately there isn't very much that
424:35 - we need to get started basically we're
424:38 - going to reuse the tile map and the
424:40 - earlier bits we have built to build this
424:42 - level
424:42 - there's only one thing that I absolutely
424:45 - have to cover and that is how to use a
424:47 - tile set across multiple tile Maps so we
424:51 - don't have to redraw all of the shapes
424:52 - for the collision and the lights but
424:54 - that is very easily done here we are
424:56 - back in Godot and first of all I want to
424:59 - close the item container the toilet and
425:02 - the crate so I have only the levels open
425:06 - and what I want to do right now is
425:08 - inside of the level I want to add in the
425:11 - ground a tile map so we'll control our
425:13 - Command a I want to add a tile map
425:18 - the issue right now is that for this
425:19 - tile map we could create a tile set new
425:22 - tile set and then redo all the stuff we
425:25 - have done for the house as a matter of
425:27 - fact let me reopen the house
425:31 - or the house scene to be a bit more
425:32 - specific there we have built all of the
425:35 - stuff with a tile map and the tile map
425:38 - gets quite extensive so if I look at
425:40 - tile set then all of this underpaint we
425:44 - have painted a whole bunch of physics
425:47 - layers
425:48 - there you can see it a bit better
425:50 - and on top of that we have also drawn a
425:53 - whole bunch of occlusion shapes
425:55 - all of this we right now only have
425:58 - available inside of the house scene but
426:01 - we want to use all of that inside of the
426:03 - inside level
426:04 - and for that you want to go to tile set
426:07 - and then click on Save the tile set now
426:10 - Godot is giving you a no file dialog and
426:12 - there we have house.tress this is the
426:15 - tile set we are currently working with
426:17 - and this I want to save not inside of
426:20 - houses but instead I want to save it
426:22 - inside of levels
426:23 - save it in there and now if you look
426:26 - under scenes there we have levels and in
426:29 - there we now have house.tress
426:32 - doesn't look like very much but what we
426:34 - can use it for is inside of the inside
426:36 - level we can drag this how stress into
426:39 - the tile set
426:41 - and now we have everything available
426:43 - that we need especially if I go to tile
426:45 - set all of the occlusion and physics
426:48 - layers are still available so we don't
426:50 - have to redraw everything
426:53 - also the size of each tile is also
426:55 - correct and that is pretty much all we
426:57 - needed which means now we can start with
426:59 - the exercise and that is going to be I
427:02 - want you guys to build the inside level
427:04 - make sure to use a time lapse
427:06 - extensively and add some lights maybe
427:07 - some particles and just make the entire
427:09 - thing look nice
427:11 - pause the video now and try to create
427:12 - all of that
427:16 - back in Godot before we start there's
427:19 - one thing I forgot to mention
427:21 - if you look at the layers you can see
427:23 - that we don't have the layers from the
427:25 - earlier tile set inside of houses we had
427:28 - if I scroll down a bit we had layers for
427:32 - the floor the outer and the inner walls
427:35 - these layers are not being carried over
427:37 - so we have to recreate them that being
427:39 - said physics layers or all the layers
427:42 - associated with the title set like
427:44 - physics layers and occlusion layers
427:45 - those do carry over so if I look at this
427:48 - house there we have physics layers and
427:51 - we have the occlusion layers as well
427:52 - although we didn't change them but they
427:54 - would be changed if we had changed them
427:56 - which means inside of the inside level I
427:59 - want to create a couple of layers and
428:01 - I'm going to use the same I have used
428:03 - for the house meaning we have a floor
428:06 - then we have outer walls
428:09 - and finally we have inner walls
428:12 - I think I just called them floor outer
428:14 - and inner but let me extend the
428:17 - inspector a bit and let's look at all of
428:19 - this up I call them properly so outer
428:21 - walls and inner walls though this should
428:24 - be called outer walls and inner walls
428:29 - this is all we need now we have
428:30 - different layers and if I now look at
428:32 - the tile map we have floor outer walls
428:34 - and inner walls perfect
428:36 - with that we can start sketching out a
428:39 - basic shape for the level and usually
428:42 - the best way to approach this is to use
428:43 - the rectangular shape I already have
428:45 - that one selected which means if I now
428:48 - select the basic floor tile I can sketch
428:52 - out a couple of rough shapes let's do
428:55 - something like this then we can add a
428:57 - shape down here
428:58 - and obviously for all of this you want
429:01 - to spend some time for an actual level
429:03 - but in my case I am not terribly
429:04 - concerned with this I do however want to
429:07 - have some entrancy area and that's
429:08 - looking pretty good and now I have a
429:11 - rough shape for the level
429:14 - once I have that I can zoom in and then
429:18 - create the outer walls
429:20 - for the outer walls I want to use the
429:23 - pencil
429:25 - and then do something like
429:27 - this
429:29 - also making sure that I finish the
429:32 - ending bits like so
429:36 - basically what we have to do is draw a
429:39 - shape around all of this and I'm pretty
429:41 - sure I'm going to speed up the video at
429:42 - this point because this is pretty boring
429:45 - to look at
429:52 - all right there we go this covers the
429:54 - outer wall and you can still see we have
429:56 - these gaps in the middle and for that we
430:00 - have and we have to work on the floor
430:01 - layer we have these bits we have those
430:04 - Corner bits and we have some round
430:07 - shapes for this area
430:10 - and well now we have to go for all of
430:12 - this again and add these other shapes
430:25 - all right that is quite a bit and this
430:29 - is quite a large level
430:32 - finally before I start the scene I want
430:34 - to place the player at the starting
430:36 - point roughly here next to the main
430:39 - entrance
430:40 - and that wasn't the layer
430:43 - that was the camera so I want to undo
430:45 - all of this the issue we have for this
430:47 - one is that if I try to move the player
430:49 - I always move the camera so the node
430:52 - furthest down in the tree but this is
430:54 - not what I want I want to only target
430:56 - the parent not the child node and for
430:59 - that Godot has another nice
431:01 - functionality it's this symbol right
431:03 - next to the lock if you select the
431:06 - player and activate it now whenever we
431:08 - click on the player we only select the
431:10 - parent node we cannot select the
431:12 - children anymore which in this case
431:13 - would be the camera 2D
431:15 - so with that I want to move the player
431:17 - roughly to the entrance area and that is
431:20 - looking quite good now before we
431:23 - continue and test all of this there's
431:24 - one more thing that I want to do and
431:26 - that is inside of the ground I want to
431:29 - add is Right 2D this spriter D has to be
431:33 - behind the tile map
431:35 - it's gonna get a graphic so I go to
431:38 - graphics and there we have round and I
431:43 - want to use dirt.png so drag this into
431:45 - the texture and right now you can't see
431:48 - this one at all because it's way too
431:49 - small
431:50 - for that I want to enable region then
431:53 - click on edit region and you can see
431:55 - what kind of texture we have it's some
431:57 - Basic Ground texture and on that I want
432:00 - to select a giant area
432:03 - so we are covering a larger bit if I
432:06 - close this now it's still not large
432:08 - enough so let me manually update the
432:11 - width and the height
432:13 - right now it's 7 000 let's go with ten
432:16 - thousand
432:18 - probably still too small let's say 15
432:22 - 000.
432:24 - definitely better and for the height we
432:26 - currently have about four thousand let's
432:29 - go with ten thousand
432:31 - and move the thing in the right spot
432:35 - something like this that's feeling a bit
432:38 - better now the issue we have right now
432:40 - is that
432:41 - the repetition of these pixels is wrong
432:44 - so we are stretching out the outer bits
432:46 - for that I want to go to texture and
432:49 - repeat should be enabled now this is
432:52 - looking significantly better
432:54 - and with that let's test this particular
432:57 - scene
432:58 - and I can move around I still get
433:01 - collisions
433:02 - and
433:04 - I am quite happy with this
433:07 - at the moment we are still able to walk
433:09 - out of the building and then break the
433:10 - game meaning if I walk too long in One
433:12 - Direction you will be seeing the
433:14 - background there we go but in the actual
433:16 - level once the game is done I'm going to
433:19 - add another area here that is going to
433:21 - transition us to the outside level
433:23 - so that that way the player will never
433:26 - notice
433:28 - but so far this is looking pretty good
433:30 - although we don't have any inside bits
433:33 - and for that I want to work in the time
433:35 - lap again and now we have inner walls
433:38 - and for the inner worlds we have to use
433:40 - the bits at the bottom and I am probably
433:44 - going to speed up all of this once again
433:46 - because looking at this part is going to
433:47 - be incredibly boring but basically all
433:50 - you want to do is to add a few parts and
433:52 - then make the game look good
434:04 - all right with that we have a couple of
434:07 - interior walls obviously as always this
434:10 - isn't too fancy and for your game if you
434:13 - want to have a good looking one you want
434:15 - to spend a lot more time on all of that
434:17 - but for my purposes this is a decent
434:20 - tile map
434:21 - which means next up we can add some
434:23 - lights
434:24 - now the lights I want to have in a
434:26 - separate node so that we have the ground
434:28 - projectiles the player and then I want
434:30 - to have lights
434:32 - since we want to have this inside of the
434:35 - inside level and the outside level I'm
434:37 - going to create a new node inside of the
434:39 - parent level all I want in there is a
434:42 - node 2D that I will call
434:46 - lights
434:48 - if I now save the scene inside of the
434:50 - inside level we have lights the one
434:53 - light that we have already used if I
434:55 - open I think I called it fan light light
434:58 - fan animation step one I can place this
435:01 - in a couple of spots let's say one here
435:03 - then I can duplicate it Place another
435:06 - one I know let's say somewhere here and
435:09 - then the final one somewhere over there
435:11 - and let's test all of that
435:15 - it's looking pretty good so I am
435:19 - reasonably happy with that there are a
435:21 - few more lights that we can work with if
435:23 - I close ground and look at lights there
435:25 - we have overlays and there we have whole
435:28 - infrastructure and letters
435:31 - basically what those are if I direct
435:33 - them in there we have simply a kind of
435:37 - light texture that we could use as an
435:39 - overlay
435:41 - the way you would want to use it I want
435:43 - to place all of this into the lights
435:46 - you want to go to visibility and under
435:49 - modulate you want to lower the
435:51 - transparency quite a bit
435:54 - something like this
435:55 - and once you have that you can use all
435:57 - of that you drag image to something like
436:02 - this
436:04 - I guess I could move it over here so
436:06 - we're covering the entire area
436:09 - and a bit more something like that and
436:12 - now if I run the game
436:14 - we have an overlay that adds a bit more
436:17 - texture
436:19 - it doesn't look ideal but I think you
436:21 - get the idea
436:23 - let's say for this one I want to lower
436:25 - the opacity quite a bit more so it's
436:27 - barely visible
436:30 - something like this and yeah that gives
436:33 - it a bit more of an atmosphere
436:36 - and essentially what you want to do is
436:37 - once again you want to scatter around a
436:40 - couple of these throughout the inside
436:41 - level make the entire game look good
436:44 - by the same logic we could add a few
436:46 - more lights
436:48 - for example if I add another Sprite 2D
436:51 - we could add a whole add it to the
436:54 - texture and there we have a hole and if
436:56 - you hold alt and shift you can scale it
437:00 - up proportionally
437:01 - and this once again I want to modulate
437:05 - and lower the modulation and lower the
437:08 - transparency and then give it a slightly
437:10 - different color to add a bit of
437:12 - atmosphere
437:14 - something like this looks good and
437:17 - finally we have the lattice so let me
437:19 - duplicate this Sprite 2D
437:21 - and paste in the letters and this one is
437:25 - a bit too large so let's scale it down
437:29 - and I want to move it I don't know let's
437:31 - say somewhere here and also
437:34 - change the modulation so it's a bit less
437:37 - visible
437:39 - it's probably a bit too little
437:41 - there we go
437:43 - so with that we can add a few more
437:44 - lights and those I want to duplicate
437:47 - just to place them in different spots I
437:50 - am probably going to speed up all of
437:51 - this quite a bit because well it's going
437:54 - to be boring to watch this is fairly
437:56 - manual labor
438:00 - all right I think with that we have a
438:02 - decent start especially for tutorial
438:05 - the last thing I want to do is to
438:06 - duplicate this industrial line then
438:09 - rotate it and this you can do by the way
438:11 - on top you have these symbols there you
438:15 - have move mode you have rotate mode and
438:17 - you have scale mode if you click on
438:19 - rotate you're just rotating whatever
438:20 - object you're selecting
438:22 - I'm going to rotate it to roughly 90
438:24 - degrees now go back to the normal mode
438:26 - and then scale all of this up
438:30 - so we are covering the entire rate and
438:34 - then scale it a bit further
438:37 - and there we go this is adding a bit
438:40 - more and the more of the stuff you add
438:42 - the better your level is going to look
438:44 - let's try and test all of this that is
438:48 - still looking pretty good
438:50 - and yeah I'm reasonably happy with all
438:52 - of that
438:53 - next up we have to add a few more lights
438:56 - and those I want to add in the ground
438:57 - because the player should be on top of
438:59 - them
439:00 - basically what I want to add
439:03 - is the wall light and the simple light
439:06 - let's start with the wall light and I
439:08 - could see another problem that if I try
439:09 - to select this light I am selecting this
439:12 - upper light
439:13 - and for that I want to lock the lights
439:15 - for now so they're not cutting in the
439:17 - way as a matter of fact let's lock all
439:19 - of this
439:21 - that way I should be able to Simply drag
439:24 - light and move it to wherever I'm going
439:27 - to need it like this then I can do it
439:30 - again place it with a transform of 90
439:35 - degrees
439:37 - actually negative 90 degrees somewhere
439:40 - here
439:42 - do the same thing down there
439:47 - and I think at this point you get the
439:48 - idea and this should be kind of boring
439:51 - but if you want to create a level you
439:54 - simply have to put in some manual work
439:55 - so let me create a few more lights I
439:58 - don't want to make this too boring
440:00 - say one more here one more there
440:04 - and
440:07 - final one up here
440:13 - and
440:14 - let's go with one here
440:17 - this will be the first kind of light the
440:18 - other kind of light I want to add
440:21 - is going to be this simple light I think
440:24 - I called it
440:26 - there we go it's a smaller light and I'm
440:29 - going to place those here I want to
440:31 - place them there
440:33 - they never won
440:35 - but this position
440:37 - then I can rotate all of this in the
440:41 - right way
440:43 - and just add a few more things
440:48 - like this so now we once again have kind
440:52 - of a disco theme and once again let's
440:54 - trial of this to make sure it's working
440:56 - and I get some lights I get Shadows so
441:00 - all of this seems to be working just
441:01 - fine
441:04 - another part that I do want to add now
441:06 - and we had this earlier in the outside
441:09 - level that so far we always used a point
441:12 - light
441:13 - let me open for example the wall light
441:14 - there we have a point light and then a
441:18 - couple of light occluders but besides
441:20 - Point light we also saw a directional
441:22 - light but inside of the outside level
441:24 - this wasn't necessary in the inside
441:26 - level though I do want to use it and let
441:29 - me minimize all of this because this
441:31 - light should be all the way at the top
441:33 - of everything else I want to add another
441:35 - light and the light I want to add is
441:37 - going to be a directional light 2D if I
441:40 - add this by itself everything is going
441:42 - to be really bright
441:43 - that is because we are adding a color
441:45 - but this is not what I want to do I want
441:47 - to go to blend mode and then subtract
441:50 - now the color we have selected is going
441:53 - to be subtracted from the color in the
441:55 - level meaning the brighter the color is
441:58 - the more of a color we are subtracting
442:00 - so you want to have this kind of dark so
442:03 - we're not making our level too dark also
442:05 - if you give this color a bluish tint you
442:08 - make the entire level more red the way
442:10 - you want to think about it is that
442:11 - whatever color you select inside of this
442:13 - color wheel is the color you remove from
442:15 - the level so in my case I want to have a
442:17 - bluish color with a very faint tint so
442:21 - that the entire level looks a bit more
442:22 - reddish and
442:25 - make this a bit
442:27 - darker I guess and if you toggle the
442:29 - visibility you can see the result
442:31 - and I think this adds a lot more
442:34 - atmosphere let's try it again
442:37 - and there we go
442:38 - this I think adds quite a bit and one
442:42 - more thing that we can do now with the
442:44 - player node
442:45 - I want to add another Point light
442:49 - and for that we need a texture we can
442:52 - use the circle once again place it in
442:54 - there if I change the strength you can
442:57 - see what's happening with that we are
442:59 - lightening up the area around the player
443:01 - a bit so let's try something like this
443:04 - all of this again and that is definitely
443:07 - too much but you can see that now we
443:09 - have some light around the player
443:11 - although it's way too strong let's keep
443:13 - it at one that should look better
443:17 - and
443:19 - we probably have to work with the
443:20 - texture scale
443:22 - let's try to increase that to a three
443:30 - and there we get a slightly brighter
443:32 - area around the player which I think
443:35 - helps a lot for visibility but once
443:37 - again just play around with the numbers
443:38 - and just choose what you think looks
443:41 - good I think we should make the entire
443:42 - level quite a bit darker
443:45 - that way the effect is much stronger
443:48 - but now run this again there we go this
443:50 - is feeling quite a bit better so now
443:54 - we can still see something around the
443:55 - player but the level itself looks really
443:57 - dark and we get some lights and all of
444:00 - this is starting to come together really
444:02 - really well
444:04 - all right and I think with that we have
444:07 - made a huge amount of progress and
444:09 - unfortunately if you look at this in the
444:11 - editor now because the directional light
444:13 - everything is really dark so I guess
444:15 - when you want to work with it you want
444:17 - to disable it also you want to lock the
444:19 - layer that way you don't select it by
444:21 - accident but with that we have another
444:23 - level the last thing we have to do to
444:27 - make all of this work is to add a final
444:30 - area 2D and this can just be an area 2D
444:33 - this one once again wants to have a
444:36 - collision shape to the and this
444:39 - Collision shape is going to be a
444:40 - rectangle shape and this one right now
444:43 - is going to be in the center of the game
444:45 - let's scale it out a bit so it's easier
444:48 - to see this shape is going to be the
444:51 - door or the transition area it makes it
444:54 - impossible for the player to leave
444:57 - so I want to scale this to the size of
445:00 - the door
445:03 - something like this should be reasonably
445:05 - okay next up I want to connect this area
445:07 - to D with a signal to the inside level
445:10 - so we can use it to trigger a script the
445:13 - issue however is that the script
445:14 - attached to this node is right now A
445:17 - level.gd so the one from the parent node
445:20 - I have over that we have level.gd which
445:23 - means we have to do kind of the same
445:25 - thing we have done for the outside level
445:27 - where we have created another script
445:29 - with inheritance this I can do quite
445:31 - easily I want to detach the current
445:33 - script and then attach a new one called
445:35 - insight.gd
445:37 - I'm going to create this and if I look
445:40 - at the outside level
445:42 - they can see we are extending the level
445:45 - parent this I also want to do for the
445:47 - inside level
445:50 - and this is all we have to do for now if
445:52 - I now run the inside level again we
445:54 - should still be able to shoot a laser
445:57 - and shoot a grenade
446:00 - and we can this is all working pretty
446:02 - well
446:03 - what that means is I can select the area
446:05 - 2D as a matter of fact let's rename it
446:09 - to exit gate area
446:13 - this I now want to connect my signal
446:15 - whenever a body enters then I want to
446:19 - run a script inside of the script for
446:21 - the level for this one I can actually
446:23 - copy what we have done inside of the
446:25 - outside level so I want to copy all of
446:28 - that and paste it in there and this is
446:31 - very hard to read that's better
446:33 - but now we are basically just slowing
446:35 - down the player let's try that one
446:37 - actually just to make sure it's working
446:38 - if I now run there the player stops
446:41 - moving pretty much immediately now this
446:44 - part has gotten quite long so for the
446:46 - next part we're going to work on the
446:47 - actual transition first of all though
446:49 - there's one more thing that I want to
446:51 - cover the debugger is unhappy again
446:53 - because we are using the perimeter body
446:55 - inside of this function and we're not
446:59 - actually using it we're just having the
447:00 - parameter which means we have to add an
447:03 - underscore a good deal stops complaining
447:05 - and I'll run this again no more debugger
447:08 - issues and this is much better with the
447:10 - inside level build we have an outside
447:12 - and an inside level so for this part we
447:14 - will look at the transition between the
447:16 - two
447:17 - which in practice means that we want to
447:20 - change a level which means we have to
447:22 - load another scene ever the inside or
447:24 - the outside scene
447:26 - fortunately this is Trivial in Goodwill
447:28 - it's really easily done however just
447:31 - transitioning between two scenes is
447:33 - going to be a really hard cut we are
447:35 - immediately going from the inside to the
447:37 - outside level which isn't going to look
447:38 - amazing for that we're going to use an
447:41 - animation player to add a proper
447:42 - transition that being said that last
447:45 - part we are not going to cover for now
447:47 - because I will have to cover a few
447:49 - topics inside of the UI so the user
447:51 - interface to make that part a bit more
447:53 - understandable so for now we have a
447:55 - transition with a hard cut let's
447:57 - Implement that one
447:59 - right now we have an outside level and
448:02 - let me close everything where the player
448:04 - is starting outside of the gate and once
448:06 - again I want to make sure that we cannot
448:08 - select the children so I can choose to
448:11 - place the player right here
448:14 - also the crate shouldn't be there
448:17 - and the toilet should also not be there
448:20 - what is really important now to
448:21 - understand is that when we are loading a
448:23 - scene we are loading all of this
448:27 - which means that this player will always
448:28 - start in this position same for the
448:30 - inside scene this will be the starting
448:32 - position of the player
448:34 - later on once we had enemies you're
448:36 - going to see what this means in practice
448:38 - basically when we're going to this scene
448:40 - and waiting some monsters and the player
448:42 - comes in here for the game and kills all
448:44 - of the monsters then goes outside and
448:46 - then inside again so we are reloading
448:49 - all of this then the monsters would
448:51 - reappear it's going to make a lot more
448:53 - sense later on for now just be aware
448:54 - that we are loading all of this so all
448:57 - of these nodes and this is always from
449:00 - scratch there's nothing persistent right
449:03 - now
449:03 - and to change the scene we have to look
449:06 - at some script and we have on gate
449:08 - player and that gate if that is the case
449:11 - we want to transition to the inside
449:13 - level
449:14 - all we have to do for that is to get the
449:17 - tree
449:19 - and then run the method change scene to
449:22 - file
449:24 - there you can already see Kudos giving
449:25 - us all of the scenes we have available
449:27 - inside of the project and I want to look
449:30 - at inside level
449:33 - it's very hard to read that's a bit
449:35 - better we are basically opening a file
449:38 - from the file explorer that's all we are
449:40 - doing and now if I run this again
449:43 - we are starting inside of the outside
449:44 - level and if I go into the gate we have
449:47 - another scene
449:49 - this doesn't work the other way around
449:51 - we're just stopping and not moving
449:53 - anymore but that
449:55 - inside of insight.gd we want to do the
449:58 - same thing I want to get the tree
450:03 - and then run the method change scene to
450:06 - file and now I want to open the outside
450:08 - scene and another way to get the file in
450:10 - there is you could literally look at the
450:12 - file explorer there we have scenes and
450:15 - there we have levels and there we have
450:20 - outside.tsen this you can just drag in
450:22 - there like so and there you have the
450:25 - right file
450:26 - if I now run out of this again
450:28 - I am in the outside I can go inside and
450:31 - if I go outside again we are in the
450:34 - outside
450:35 - so this keeps on working just fine
450:38 - although you can't see very much that
450:40 - the transition between the two is
450:42 - incredibly harsh we are basically
450:43 - teleporting
450:45 - which isn't ideal but it certainly a
450:48 - start
450:49 - right now we have used change scene to
450:51 - file which works reasonably well besides
450:54 - that we can also use get free once again
450:57 - this we always need and then if I type
451:00 - change we get changes into file or
451:02 - change the scene to Pact
451:05 - and what that means is that this method
451:08 - wants to have a packed scene that we are
451:10 - loading into the level
451:12 - yes we do all the way at the top
451:14 - I could for example create VAR outside
451:17 - level scene which has to be a packed
451:22 - scene
451:24 - and to add this one we have to do the
451:26 - same thing we have done for the laser if
451:28 - I look at the level.gd we are
451:32 - pre-loading a scene here we have done
451:34 - this for a laser and here we have done
451:36 - the same thing for the grenade inside of
451:38 - inside.gd I want to use preload once
451:41 - again and what I want to preload is the
451:45 - outside level
451:47 - once I have that I can simply paste in
451:50 - outside level dot scene and comment out
451:53 - the earlier code to change scene to file
451:55 - run all of this again and we should have
451:58 - the same result
451:59 - if I do this we are still going between
452:03 - the inside and the outside so this is
452:05 - also working real
452:07 - I guess one more thing that could be
452:09 - super useful
452:10 - is that you can set this outside level
452:12 - scene to an export variable so if I add
452:15 - add export
452:17 - we can change all of this inside of the
452:20 - editor and
452:22 - right now I don't want to preload
452:23 - anything
452:25 - which means I am simply creating a
452:27 - variable that has to be a packed scene
452:29 - but there isn't any packed scene
452:31 - available right now
452:32 - which means if I now go to the inside
452:35 - level or scene click on inside there we
452:38 - have outside level as a new attribute
452:41 - inside of the inspector and there we can
452:43 - simply drag in a scene
452:46 - once again I want to use the outside
452:48 - scene so I can simply drag it there
452:52 - once again the result will be the same
452:56 - I can switch between the scenes very
452:58 - easily perfect
453:00 - now this kind of setup can be really
453:02 - useful if you want to have a lot of
453:04 - control over what kind of scene you are
453:06 - spawning for this setup probably not
453:09 - terribly useful but for example for the
453:11 - lasers this could actually be incredibly
453:12 - powerful you will see immediately what
453:15 - kind of scene you have
453:16 - that is going to cover the transition
453:18 - now right now this isn't going to look
453:21 - amazing
453:22 - and to make it look good we have to
453:24 - cover UI topics so let's talk about that
453:26 - the next major topic is going to be the
453:28 - user interface which means I want to
453:31 - display the amount of Health the player
453:32 - has the amount of ammunition and the
453:34 - amount of grenades on top of that I also
453:36 - want to display a couple of icons to
453:38 - make the entire thing look a bit nicer
453:40 - although for all of this we have to
453:43 - cover a tiny bit of theory let's Jump
453:45 - Right In
453:47 - in Godot they are fundamentally four
453:49 - kinds of nodes number one we have the 2D
453:52 - notes and those are always blue we have
453:55 - seen quite a few of them a Sprite would
453:57 - be a really good example next up we have
453:59 - 3D notes and those are for 3D games and
454:02 - I'm going to skip them entirely for this
454:04 - video
454:05 - next up we have the control notes and
454:08 - those are the notes you would be using
454:09 - for the user interface I will cover them
454:11 - in just a second
454:12 - finally you have other nodes and this
454:15 - would for example be a timer if we look
454:17 - at all of this in the dome you can see
454:18 - so far all of the nodes we have worked
454:21 - with always have a blue icon on the left
454:23 - this means that they are exclusively for
454:25 - 2D space The Only Exception is the
454:29 - timers that we have used those icons are
454:32 - white and also if I open the grenades
454:37 - there we have an animation player but
454:39 - while an animation player could be used
454:40 - for a 2d game for a 3D game or for
454:42 - literally any kind of app now I want to
454:45 - close the player the wall light and the
454:48 - house so I'm stuck with the level and
454:50 - the parent also let me close the
454:52 - animation player if I'm trying to add
454:54 - another node you can see all of the
454:56 - notes we are working with and the really
454:59 - important ones are either in node 2D in
455:02 - control or in node 3D if you look at the
455:05 - control notes and expand that one
455:08 - one really popular note you would see in
455:11 - there is a label which is the easiest
455:14 - way to display text inside of Godot
455:16 - besides that if I go down a bit further
455:19 - we have a texture rectangle this one you
455:22 - could use to display an image and
455:23 - besides that we would for example have a
455:26 - video stream player
455:28 - with that you could display videos
455:29 - meaning all of these notes are for
455:32 - displaying some kind of user interface
455:36 - there are quite a few more examples for
455:38 - control nodes labels and images are the
455:40 - really big ones but we'd also have
455:42 - progress bars buttons areas of colors
455:44 - text input graphs menus videos and
455:47 - basically anything you would use for a
455:49 - user interface in just a second I will
455:52 - cover quite a few examples but before
455:55 - that there's something really important
455:56 - I have to cover and that is when we are
455:59 - placing 2D nodes we are working with
456:01 - pixel positions which means that any 2D
456:04 - node has an X attribute and a y
456:06 - attribute and together those to
456:08 - determine the position of a 2d node
456:11 - control notes work differently for there
456:14 - you ever use anchors or containers or
456:16 - both you still have X and Y attributes
456:19 - but you wouldn't really use them
456:21 - this is something that confuses a lot of
456:23 - beginners so I'm going to cover it in
456:25 - quite some detail although first of all
456:27 - let's jump into Godot and let's have a
456:29 - look at all of this and practice here we
456:31 - are back in the editor and let's say I
456:34 - want to add a couple of control nodes
456:36 - inside of the outside level for that I
456:39 - really just have to add a couple of
456:40 - notes for example I could add a lay bill
456:46 - if I that and let me zoom in a bit
456:49 - we get some kind of outline and in the
456:52 - top left we have something that looks
456:54 - like green needles for now ignore that
456:56 - part what is much more important on the
456:58 - right in the inspector we have a text
457:00 - property and there we can write some
457:03 - text
457:04 - and that is giving us some text inside
457:07 - of the game
457:09 - if I now zoom out we can see text is
457:12 - part of the game I can also run the
457:14 - entire thing and there we have some text
457:17 - this works pretty easily although note
457:20 - right now that the text is literally
457:22 - part of the game so this wouldn't work
457:24 - for a UI because the text would have to
457:26 - stay inside of one part of the game we
457:28 - are going to enable that in just a
457:30 - second first of all though I want to
457:32 - cover a few other notes another really
457:35 - popular one would be a button you also
457:37 - have a texture button if you want to
457:39 - have images in your button but I just
457:41 - want to work with a button on its own
457:43 - this one once again has some kind of
457:46 - area and then these green needles also
457:49 - on the right we have a text property
457:50 - there we can add some text like a button
457:54 - also you can move these elements around
457:56 - so let me move it somewhere here
457:58 - and play all of this again
458:01 - and now I have a button that I could
458:03 - click on with my mouse
458:05 - these notes work like any other node in
458:08 - the sense that they would have signals
458:09 - that you can send you could run a
458:11 - function when the button is pressed when
458:12 - the button is released
458:15 - or when the button is toggled there are
458:17 - quite a few options you have in here
458:19 - besides that
458:20 - one more note I do want to cover would
458:23 - be a texture rectangle
458:27 - this by itself doesn't have anything but
458:29 - on the right we have a texture property
458:31 - which means in there we can drag some
458:34 - graphic let's say I want to place the
458:37 - Scout PNG in there
458:39 - and there we go we have an image
458:42 - as part of the game
458:44 - this is somewhat similar to a Sprite but
458:46 - there's one really important difference
458:48 - if you look on the right you cannot see
458:51 - a transform property
458:54 - although I tell a lie if you look at
458:56 - layout there we have transform and this
458:59 - you could use to place this Sprite for
459:02 - example if I change these numbers to 300
459:05 - we would be moving this texture
459:07 - rectangle but this isn't what you are
459:10 - supposed to be using
459:12 - for an actual layout they are much more
459:14 - efficient ways of working with all of
459:16 - this
459:16 - so the main difference of a texture
459:19 - rectangle to a Sprite is that this
459:22 - texture rectangle would allow you to
459:24 - work with containers and anchors if you
459:26 - look at the top there we have presets
459:29 - for anchors and we have anchors
459:31 - themselves if you click on that you get
459:33 - a couple of predefined choices and you
459:36 - could use that to place the element
459:38 - although this doesn't work perfectly
459:39 - right now but you can see at the very
459:42 - least we can work with it don't worry
459:44 - too much about this for now I will cover
459:46 - it in a lot of detail in just a second
459:48 - before we can get to that I have to
459:50 - cover one more note and the major issue
459:53 - we have to fix right now is that if I
459:55 - run the game and let's say we want to
459:57 - have a UI meaning in the bottom left we
460:00 - want to have the ammunition and the
460:02 - grenades we have and in the middle
460:04 - bottom we want to have the health bar
460:06 - for the player
460:07 - but this we can do right now because the
460:09 - UI is moving along with the camera so
460:12 - this we have to fix and to fix that we
460:15 - have to learn about one more node also
460:18 - let me get rid of these notes
460:20 - instead I want to create a new scene and
460:24 - the root note for this one is going to
460:26 - be a canvas layer a canvas layer is
460:30 - essentially another layer on top of the
460:32 - game and this layer ignores the camera
460:34 - the best way to think about it is that
460:36 - right now we have a camera pointing at
460:38 - our game and this camera is following
460:41 - wherever the player is going a canvas
460:43 - layer would be a sheet of glass glued to
460:45 - the camera so it is always going to be
460:47 - inside of the frame
460:49 - this canvas layer is going to become the
460:52 - UI this I want to save right away let's
460:55 - do it inside of scenes and then I want
460:58 - to create another folder and let's call
461:00 - it user interface
461:02 - in there I want to save the UI and now
461:05 - we have the UI
461:07 - I guess while we're here we could give
461:08 - it a label and we could give it a
461:13 - texture rectangle
461:15 - the texture rectangle once again is
461:17 - going to get discount just for now and
461:19 - let's move it here and the label is
461:21 - going to get some random text this
461:24 - canvas layer we can now use like any
461:26 - other nodes and I want to place it
461:28 - inside of the level and edit there
461:31 - on top of everything else
461:33 - if I now Run the game
461:36 - we have the texture and we have the text
461:38 - but if I move around
461:40 - they are always on top of the game and
461:43 - they always stay inside of the frame so
461:45 - this is working really good
461:47 - meaning this UI node is doing exactly
461:50 - what it's supposed to do perfect
461:52 - now with that I can get rid of these two
461:54 - nodes and now we can talk about how to
461:57 - actually place a control node
462:00 - fundamentally there are two ways to
462:02 - place control notes those will be
462:05 - anchors and containers anchors are the
462:08 - green needles in the top left of a
462:10 - control node and they determine what
462:12 - side the control node is sticking to so
462:14 - it determines the position and the size
462:17 - besides that you have containers and
462:20 - those are parent nodes that determine
462:21 - the position of their children
462:24 - for example you could have a node that
462:25 - places all of the children in a vertical
462:27 - or horizontal layout those are the two
462:30 - major ways to place a control node and
462:32 - that gives you a ton of control over how
462:34 - you are placing UI elements
462:36 - now you could also use X and Y
462:39 - Properties or drag a control node to the
462:41 - position that you want but this is
462:44 - almost never a good idea let me actually
462:46 - demonstrate why back inside of the
462:49 - editor let's say I want to add some
462:53 - label and this label is telling us the
462:56 - amount of lasers we have
462:58 - let's call it bullets for now
463:01 - and those bullets I want to place in the
463:04 - bottom left of the screen somewhere here
463:06 - and if I now Run the game
463:10 - this works reasonably well so for both
463:13 - scenes we have in the bottom left some
463:15 - bullets so you might be happy with that
463:17 - but if I resize the screen
463:21 - then well all of this is going to break
463:23 - also if I remove this one
463:26 - you can see pretty well that this kind
463:28 - of layout doesn't work all that well and
463:30 - if I make the screen smaller the note
463:32 - disappears entirely so this kind of
463:34 - system really isn't that good which is
463:37 - why most of the time you want to avoid
463:39 - it you want to have a game that works
463:41 - with basically any kind of size and
463:43 - placing UI notes like that by using an X
463:45 - and the Y position is going to give you
463:47 - a ton of problems
463:49 - so let's not do that and instead I want
463:51 - to undo everything and instead use
463:54 - anchors
463:56 - and to best visualize what's happening
463:57 - let me get rid of this label and instead
464:00 - use a color rectangle
464:04 - this is simply a rectangle that has a
464:07 - color that's all that's happening in
464:08 - here
464:10 - inside of the inspector you can change
464:12 - the color let's go with a bluish color
464:15 - now the first way to place a UI note you
464:19 - can see in the top left there we have
464:21 - the anchors
464:22 - those are also these green needles and
464:25 - for example if I click on this full rect
464:27 - icon then you can see pretty well what's
464:29 - happening
464:30 - we are sizing this node to the size of
464:34 - the entire window and the green needles
464:37 - are also covering all the four corners
464:40 - if I now Run the game
464:42 - all we can see is this greenish color
464:45 - because it covers the entire window if
464:48 - you click on something else for example
464:50 - the middle left then we are placing this
464:53 - color rectangle purely in this one point
464:55 - in the center of the left side
464:58 - you could also manually drag these
465:00 - needles so if you click on one of them
465:02 - you can resize them this works perfectly
465:04 - fine although also not what I want to do
465:06 - instead how you would want to work with
465:09 - them is inside of layout
465:12 - there you have the anchors properties if
465:15 - I extend this a bit you have an anchors
465:17 - preset right now it's Center left but
465:20 - what you could do is click on custom
465:23 - and then you get anchor points anchor
465:25 - offset and grow Direction and anchor
465:28 - points is the really important one this
465:30 - one will give you the position and the
465:32 - size of this area
465:34 - and I think the best way to think about
465:35 - it is to draw all of this in at the
465:39 - moment there are four properties that we
465:42 - can work with we have left up right and
465:46 - bottom
465:48 - those refer to the four sides of the
465:50 - screen we have the left side
465:52 - we have the top side we have the right
465:55 - side and we have the bottom and I guess
465:58 - let's focus on one side for now
466:01 - I just want to talk about the left side
466:03 - the associated value for this property
466:06 - would be zero this means that this node
466:10 - has a distance of 0 to the left side if
466:14 - you combine that with the right side
466:16 - which is also zero it means that we are
466:19 - starting on the left side and we are
466:21 - going to zero percent of the right side
466:23 - which means that the width of this area
466:25 - is effectively zero however what we
466:28 - could be doing is that this ride to
466:30 - something like 0.25 what this is going
466:34 - to do is replaces the right side of the
466:37 - area to 25
466:39 - of the distance to the right side
466:42 - meaning this part here would be zero and
466:45 - this side would be one and we are
466:47 - currently at
466:49 - 0.25 in the game right now we still
466:53 - couldn't see anything because we have
466:56 - some kind of width but the height of our
466:58 - area is still zero because the top side
467:00 - is 0.5 and the bottom side is also 0.5
467:03 - so the starting point is at half of the
467:06 - window and the ending point is also at
467:08 - half of the window
467:10 - but if I change the bottom to let's say
467:12 - 0.8
467:14 - then we are back to having an area
467:17 - so once again let me explain there are
467:19 - two properties you have to be aware of
467:21 - the top side is the first one this one
467:23 - starts all the way up here and the
467:26 - default value is zero the final value
467:29 - all the way at the bottom would be one
467:31 - and the value we currently have selected
467:33 - will be right in the middle at 0.5
467:37 - so this 0.5 gives you this distance
467:43 - we are effectively 0.5 times the window
467:45 - height away from the top side of the
467:48 - window
467:49 - the other property you have to be aware
467:51 - of is the bottom this is the bottom area
467:53 - and this one also has an end value of 1
467:56 - and a start value of zero currently the
467:58 - value we have is 0.8 which would be this
468:02 - line
468:04 - this means that we're going from the top
468:06 - eighty percent to the bottom of the
468:09 - screen
468:11 - which is then going to give us a proper
468:13 - area so these numbers combine quite well
468:16 - these anchor points are incredibly
468:18 - useful but also really difficult to
468:20 - understand when you're getting started
468:22 - so I would very much recommend for you
468:24 - to play around with these numbers and
468:26 - play a couple of color rectangles so you
468:28 - can see what's going on
468:30 - CE you understand it it makes a ton of
468:32 - sense but to get there you will need a
468:34 - couple of hours so give it some time
468:36 - these anchor points are also available
468:38 - for any control node for example if I
468:41 - add UI
468:42 - and give it another label
468:45 - this would be another piece of text
468:49 - for this once again at the top
468:52 - we have the anchors so far we have seen
468:55 - the presets for example this you can use
468:57 - to place it in the center in the bottom
468:59 - right on the right in the top or to
469:02 - cover the entire top area you can also
469:05 - change the sizing although this one
469:07 - isn't too important when you're getting
469:08 - started the one on the left is what you
469:10 - want to focus on the most and that would
469:13 - be the first way to work with UI notes
469:15 - in terms of layout the second one would
469:18 - be containers and let me get rid of
469:21 - these two notes and let me explain the
469:24 - problem that you might encounter say you
469:26 - want to create a container with a couple
469:29 - of items for example in the bottom left
469:32 - we want to create the ammunition
469:34 - indicator for that we want to have an
469:36 - icon on the top and then some text at
469:39 - the bottom which means we want to place
469:41 - two control notes in a vertical order we
469:44 - could accomplish all of that with
469:46 - anchors but it would be kind of a pain
469:48 - to work with so for that Godot has
469:50 - another way and that would be contain to
469:53 - work with them you would add another
469:55 - node there we have control and in there
469:58 - we have container for example in the app
470:00 - we would have a grid container to place
470:01 - items inside of a grid we would have a
470:04 - margin container to give a node some
470:05 - margins and we would have inside of a
470:09 - box container a vbox container and an
470:11 - hbox container those are aligning
470:14 - control nodes in a certain direction
470:15 - either in the vertical axis or in the
470:18 - horizontal axis
470:19 - let's say for now I want to work with an
470:21 - hbox container and if we're just adding
470:24 - it this doesn't look terribly impressive
470:26 - so right now we have alignment in the
470:28 - inspector but nothing else the way you
470:31 - are supposed to use this kind of
470:32 - container is by giving it children let's
470:35 - add some labels to illustrate what's
470:37 - happening and if I add one note the
470:40 - entire area collapses but first of all
470:43 - let's give this label some text let's
470:46 - say label one
470:48 - this is still not doing very much but
470:51 - now if I duplicate this label we have
470:53 - another label right next to it and let's
470:55 - call this one label 2. this I can
470:57 - duplicate multiple times now we get
470:59 - another label
471:01 - and all of these labels will always be
471:03 - to the right of each other
471:04 - and let me duplicate this a few more
471:06 - times now we have a whole bunch of
471:08 - labels and they're always right next to
471:10 - each other this is because of the hbox
471:12 - container
471:14 - you can tell this even better if I click
471:16 - on one individual label and I go to
471:19 - layout
471:20 - if you look at layout mode we have a
471:22 - container and this one is not available
471:24 - so we cannot change this and that is
471:27 - because we are getting the position from
471:29 - the hbox container so stuff like
471:31 - transform also doesn't work
471:33 - the position and the size of this node
471:36 - is determined by the hbox container the
471:38 - door literally is telling you that this
471:40 - node is a child of a container and if
471:42 - you click on that use container
471:44 - properties for positioning the only
471:46 - thing you could influence is a custom
471:48 - minimum size and by extend the inspector
471:52 - you could for example give each nodes a
471:54 - certain minimum size this could be 200
471:56 - pixels and now this node has 200 pixels
471:59 - of minimum width although not exactly
472:01 - what I want to do instead you would look
472:03 - at the hbox container and in there you
472:06 - determine all of the positioning and the
472:08 - sizing for example what you could be
472:10 - doing is make this thing span the entire
472:13 - window and now we have all of the nodes
472:16 - in the middle of it on the left side
472:18 - but this you can change with alignment
472:20 - right now let's begin if you set this to
472:22 - Center they're all in the center and if
472:24 - you set this to end they're all at the
472:26 - end another thing you could be doing
472:28 - inside of theme override there we have
472:30 - constants and there you have separation
472:32 - which gives you a space between these
472:35 - nodes so if you increase that one you
472:37 - get a bit of spacing between them and
472:39 - well that's kind of it basically what
472:42 - you would be doing is you would use this
472:45 - hbox container with anchors to place it
472:47 - in a certain position and then inside of
472:49 - the hbox container everything is aligned
472:52 - along a horizontal axis
472:54 - and if you combine those two you can
472:56 - create incredibly powerful layouts I
472:59 - suppose we could do another example so
473:01 - let me get rid of the hbox container and
473:04 - instead add a grid container
473:08 - for this one we could once again add a
473:11 - couple of labels so let's call this just
473:14 - label the actual text really doesn't
473:16 - matter I just want to have lots of
473:18 - labels
473:19 - right now the grid container is aligning
473:22 - all of them on a vertical axis but
473:24 - that's because we only have a single
473:26 - column if I change this to a 2 or 3 we
473:30 - get the associate number of columns and
473:32 - for that once again I can place all of
473:34 - this let's say make it span the window
473:38 - and under theme overrides we could add H
473:40 - separation or V separation and I know
473:44 - place all of this out quite a bit more
473:46 - and that would be a very basic
473:49 - introduction to control nodes now this
473:52 - is barely scratching the surface you can
473:55 - go much much deeper into all of this I
473:58 - am going to make a separate video on all
474:00 - of that but for now it would be massive
474:02 - Overkill
474:04 - what you want to focus on is to master
474:06 - containers and anchors that's the really
474:08 - important bit to understand for now so
474:10 - in our case what I want to start working
474:12 - on is the indicator for the laser amount
474:14 - and the grenades
474:16 - for that
474:18 - I want to add one node that would simply
474:20 - be a control node
474:23 - this one doesn't really do anything you
474:25 - would largely use it as a parent for
474:27 - another node let's rename it right away
474:29 - to the laser counter or bullet counter
474:32 - whatever you want to name it this laser
474:35 - counter I want to have in the bottom
474:36 - left of the screen which means with the
474:38 - anchor I want to select bottom left now
474:41 - we are all the way in the bottom left
474:44 - that's a good start next up I want to
474:47 - have two notes on top of each other for
474:49 - that I am going to add a v box container
474:53 - this vbox container is going to have two
474:55 - children the first one will be a label
474:57 - and the second one will be a texture
475:00 - rectangle
475:02 - the label is just going to be a number
475:04 - for now we're going to have some
475:05 - placeholder text let's say 20. also in
475:08 - there we have horizontal and vertical
475:10 - alignment and I want to set the
475:12 - horizontal alignment to Center that way
475:14 - we are centering the text for the
475:15 - texture rectangle I want to close the
475:18 - enemy folder and instead we have a UI
475:22 - folder
475:23 - which has bullet and grenade as images
475:27 - but now I want to work with the
475:28 - bullet.png and drag it in there and now
475:31 - you can see a bit of a problem that this
475:34 - image is way too large to change that we
475:37 - have the expand mode right now we have
475:40 - keep size this one keeps the size of the
475:42 - original image which is very much not
475:44 - what we want instead what I want is to
475:47 - use fit height
475:49 - with that we are fitting
475:51 - this image to only cover the available
475:53 - height that looks significantly better
475:55 - now we have a label and a texture
475:57 - rectangle so with that we have a decent
476:01 - start but if I run all of this you can
476:03 - see that the icon for the bullets isn't
476:06 - perfectly inside of the window we're
476:08 - cutting off quite a bit to fix that I
476:11 - want to click on the laser counter go to
476:13 - layout and right now we have the bottom
476:16 - left but this I want to change to custom
476:19 - and then work with the Anchor Point
476:22 - because in here I give it a tiny bit of
476:25 - padding to the left side let's say 0.01
476:28 - and if I change that look at what's
476:30 - happening to the right side
476:33 - it also changes to 0.01
476:36 - the reason is that the right side can
476:38 - never be lower than the left side if
476:40 - that was the case we would have a
476:41 - negative width which shouldn't be
476:43 - possible
476:43 - besides that I want to set the top to
476:46 - 0.88 and that way all of this is going
476:49 - to move up a fair bit
476:51 - the right side and the bottom we can
476:53 - simply ignore the right side simply
476:55 - doesn't matter and the bottom should be
476:56 - one because I want to have this node all
476:58 - the way at the bottom
477:00 - and now if I run out of this
477:03 - we have the icon in the bottom left
477:05 - there might be quite a bit of a distance
477:06 - between the bottom of the icon and the
477:08 - bottom of this
477:10 - so let's change the top to 0.92
477:14 - that might be a bit better
477:17 - and yeah I'm much more happy with that
477:20 - also what is really important now if I
477:22 - resize the window
477:24 - this is always going to stay in the
477:26 - bottom left
477:27 - I guess the one downside is if you just
477:30 - get all of this too much at some point
477:31 - there's going to be more and more of a
477:33 - space between them but this is something
477:35 - you can work on in your own time
477:39 - and the node you would want to use for
477:41 - that would be a margin container but in
477:43 - my case I think I cover quite a bit of
477:45 - content already so I don't want to add
477:46 - too much at once
477:48 - instead Let's do an exercise
477:50 - I want you guys to add the grenade text
477:52 - and the icon to the right of the laser
477:54 - counter
477:55 - basically use the vbox container and
477:58 - anchors like we have done for the laser
478:00 - but make sure that you are changing the
478:02 - anchors so that the grenade is to the
478:03 - right of the laser counter most of you
478:06 - now and try to implement that one
478:10 - with the UI node selected I want to add
478:13 - another control node this control node
478:16 - is going to be the grenade counter
478:19 - and this grenade counter is going to
478:21 - have a v-box container and this v-bucks
478:24 - container is going to have label and it
478:26 - is going to have a texture rectangle
478:30 - we are pretty much copying what we have
478:32 - done for the laser
478:33 - for the label for now let's add a
478:36 - placeholder or five in there doesn't
478:38 - really matter what it is and for a
478:40 - texture rectangle I want to use the
478:41 - grenade or the grenade I want to place
478:43 - into the texture and now once again this
478:46 - is way too large
478:48 - so with that I want to select the
478:50 - grenade counter and once again place
478:52 - this thing in the bottom left
478:55 - that is a tiny bit of an improvement
478:57 - next up the texture rect I don't want to
479:00 - have keep size instead I want to fit the
479:02 - height besides that for the label I want
479:06 - to set the horizontal alignment to
479:07 - Center
479:09 - so with that we have a reasonable
479:11 - upgrade
479:13 - although the problem is that the grenade
479:14 - is below the laser not to the right of
479:17 - it for that we will need the grenade
479:19 - counter and go to layout and instead of
479:22 - bottom left this should be custom
479:24 - with that we can use the anchor points
479:26 - once again the major difference compared
479:28 - to the lasers is that the left side
479:30 - should be 0.06 we go to the right of the
479:34 - laser and we have 0.1 units of the
479:36 - display width as padding
479:39 - the top should be the same number so
479:41 - 0.92 is what I think I used
479:44 - and the other two numbers can stay as
479:46 - they are this is going to be a
479:48 - reasonable start if I now run all of
479:51 - this
479:51 - we have a pretty good UI already well
479:55 - it's not pretty good but at the very
479:57 - least it's an improvement
480:00 - I think for now this is a really good
480:01 - start and before I continue there's one
480:05 - thing that is annoying me a bit and that
480:06 - is that the text doesn't look very good
480:09 - so with the label selected I want to
480:11 - give this a custom font this you do via
480:14 - a theme and right now we don't really
480:16 - have a theme so I'm going to create a
480:18 - new one and now if you click on that
480:20 - you have a default font at the moment
480:23 - this is empty but we have in the UI
480:25 - folder is subatomic tsunami tdf this you
480:29 - can drag into the default font and now
480:31 - we have a different kind of font on top
480:34 - of that you can set the default font
480:35 - size let's say 25 and that feels much
480:39 - better
480:40 - this theme I want to save so with the
480:42 - drop down arrow I want to save it and
480:45 - now I'm going to save it in the user
480:46 - interface folder let's call it the main
480:49 - underscore theme
480:51 - and there we go once we have that I can
480:54 - go to label and there we have theme and
480:57 - I want to quick load a theme and we only
481:00 - have one theme the main theme if I open
481:02 - that this one gets the same font
481:05 - and now if I run all of this this is
481:08 - massively improved because now the text
481:10 - is looking better
481:11 - all right finally there's one more thing
481:14 - we have to cover and that is that this
481:16 - grenade is a bit too small right now
481:20 - let me explain what the issue is we have
481:22 - a grenade counter which is a control
481:24 - node which covers this area
481:27 - inside of that we have a vbox container
481:30 - that is covering this area and inside of
481:32 - that we have a texture vect that is
481:34 - constrained by the size of the vbox
481:36 - container right now these green needles
481:39 - determine how much space the vbox
481:41 - container can occupy which is zero so if
481:44 - you change this to cover the entire
481:46 - available area
481:48 - now we can see the green needles are
481:49 - covering the entire available space but
481:52 - still the grenade counter
481:55 - constrains the size of the grenade so
481:58 - this fed height is the constraining
482:01 - factor that being said if we make all of
482:03 - this a bit wider let's say 0.08
482:08 - then the grenade is also scaling up
482:10 - because now there's more space in the
482:12 - horizontal and in the vertical axis
482:14 - although this might be a bit too large
482:16 - let's say 0.07
482:18 - I think that's looking better
482:20 - and with that
482:23 - I can run all of this again
482:26 - and we have some basic UI this is
482:29 - feeling quite nice cool
482:31 - the next major part of the UI is going
482:34 - to be the health bar and for that we
482:36 - will need what is called a progress bar
482:37 - the dough actually has two of them we
482:40 - have a plain one and a textured one the
482:43 - only difference between the two is that
482:45 - the texture progress bar has custom
482:46 - textures whereas a plain one does not
482:48 - other than that they are basically
482:51 - working in the same way
482:52 - I am still in the UI scene and I want to
482:55 - add another note so with UI selected I
482:58 - add another node and the node I want to
483:00 - add is called progress bar and there you
483:03 - can see we have a progress bar and a
483:05 - texture progress bar for now I will work
483:07 - with the simpler one the progress bar so
483:09 - I create that one and now if I zoom in
483:13 - we can see we have a thin area with zero
483:16 - percent in the middle
483:17 - you understand a bit better what's
483:19 - Happening Here let me go to layout and
483:21 - give this node a custom minimum size for
483:23 - the x-axis let's say 200 pixels
483:27 - if I now
483:29 - look at the entire thing you can see a
483:31 - bit better what's going on
483:32 - and if you look at the inspector we have
483:34 - a minimum value a maximum value and a
483:37 - value there are few other attributes but
483:40 - those don't matter so much for now
483:42 - if you update the value you can see
483:44 - quite well what's going on for example
483:45 - if I change this to 20 we get 20 percent
483:49 - and if you update the minimum value
483:51 - let's say to 10 and the maximum value to
483:54 - 30. you can also tell that we now have a
483:57 - minimum value and a maximum value and
483:59 - the actual value we see is the value
484:01 - between the two
484:02 - also we get the actual progress bar so
484:04 - that is quite nice
484:06 - on top of that if you don't want to see
484:08 - the percentage you can simply disable or
484:10 - enable your percentage inside of the
484:12 - inspector
484:13 - it's kind of it for simple progress bar
484:16 - later on when we have the player Health
484:19 - we're going to update this value and
484:21 - that way displaying the amount of Health
484:23 - the player has
484:24 - although for all of this I want to have
484:27 - a bit more styling right now we have a
484:29 - plain gray color this doesn't look very
484:31 - good and for that I want to get rid of
484:34 - the progress bar and instead add a
484:37 - texture progress bar
484:39 - this one like the normal progress bar
484:42 - has a minimum value and maximum value
484:44 - and a value but if we add a value in
484:48 - here nothing is going to happen
484:50 - the reason for that is that we have to
484:52 - add textures and there are three
484:54 - textures we could add and at a minimum
484:57 - to make this work you would need a
484:59 - graphic behind the texture bar and a
485:01 - progress indicator
485:02 - well that inside of Graphics under UI we
485:07 - have another folder called progress bar
485:09 - and in the app we have three pretty
485:11 - simple images we have a background we
485:14 - have an overlay and we have a
485:16 - progress.png
485:17 - all three of which if I simply drag them
485:21 - in
485:26 - the progress bar is a simple green
485:28 - rectangle the BG is a grayish rectangle
485:33 - and the overlay file is an outline over
485:36 - a rectangle
485:39 - the way you'll be using them is under
485:42 - would be the background of the progress
485:44 - bar and for that I am going to use
485:46 - bg.png so I can drag it in and now we
485:49 - can already see a bit better what's
485:50 - going on
485:52 - besides that you absolutely need a
485:55 - progress texture and for that I have
485:57 - progress.png I want to drag this in
486:00 - there and now we have an actual progress
486:02 - bar once again on that we can update the
486:04 - value let's say to 50 or 280 and you can
486:09 - see this is working like a progress bar
486:11 - besides that you can also add an overlay
486:14 - and this is simply a graphic that is on
486:16 - top of everything else
486:18 - it doesn't actually serve a purpose it's
486:21 - just there for decoration and in my case
486:23 - I don't really like it so I am going to
486:25 - leave this one empty
486:27 - which is a totally fine thing to do
486:30 - cool and with that we have a progress
486:34 - Bar for our health that being said
486:36 - though if I run the game
486:39 - this health bar is all the way in the
486:41 - top left so this isn't ideal
486:44 - instead I want to have it in the middle
486:47 - of the bottom of the window
486:49 - implementing that is going to be your
486:51 - exercise I want you guys to place the
486:53 - progress bar in the center of the bottom
486:55 - of the window with some margins and for
486:58 - that I want you guys to use anchors and
487:00 - a margin container now imagine container
487:03 - I haven't used myself so you have to
487:05 - experiment with this a tiny bit but I'm
487:07 - sure you can figure it out positively
487:09 - now and try to make all of this work
487:14 - I first of all want to wrap this texture
487:17 - progress bar in a margin container which
487:19 - means with UI selected I want to add a
487:22 - margin container and then make the
487:25 - texture progress bar a child of that
487:27 - container and if you do that nothing is
487:30 - going to change inside of the game next
487:32 - up I want to place this margin container
487:34 - in the center of the bottom of the
487:36 - window and for that I want to go to
487:38 - Anchors and then use this Center bottom
487:41 - button and click on it and then we are
487:43 - all the way at the bottom and this is
487:45 - already a pretty good start
487:48 - on top of that what you can also do is
487:51 - you can go to theme overrides there we
487:52 - have constants for example in my case I
487:55 - want to give all of this a bottom margin
487:57 - and if I increase that number
488:00 - at some point we are moving all of this
488:02 - up by a certain amount let's say 30
488:04 - pixels
488:05 - looks about right
488:08 - if I now run all of this again
488:10 - there we have the progress bar bottom
488:15 - on top of that because of the margin
488:17 - container this health bar is always
488:20 - going to be 30 pixels from the bottom of
488:21 - the window so if I make the window much
488:24 - larger
488:25 - you can see this health bar still works
488:28 - just fine whereas the indicator for the
488:30 - ammunition and the grenades don't work
488:32 - as well
488:35 - so working with the margin container is
488:37 - definitely the better choice
488:39 - and with that we have covered another
488:40 - important widget for the next part we
488:43 - can actually start working on the
488:44 - functionality of all of this
488:47 - now that we have the UI notes in place
488:49 - we want to make the UI interactive
488:52 - although before we can make that work I
488:55 - have to cover another really important
488:56 - concept
488:58 - let me explain the problem
489:00 - right now when the player is shooting a
489:02 - laser or a grenade we want to reduce the
489:04 - lasers or the grenades by an amount of
489:06 - one
489:07 - which means that we have to have a laser
489:09 - variable available in two scenes in the
489:12 - player and in the UI
489:14 - and if the game was more complex we
489:17 - might even want this available in more
489:19 - scenes like an upgrade menu or store or
489:21 - literally anything else
489:23 - that means that we have to make the
489:25 - lasers and the grenades accessible
489:27 - everywhere inside of the game
489:30 - which is not something that we can do
489:31 - right now but we can learn how to do it
489:33 - quite easily the concept we have to
489:35 - learn about is called autoload this one
489:38 - literally loads a scene or a script into
489:40 - every single scene in the game
489:43 - that way we can store and access
489:45 - information globally
489:47 - by globally I mean every single scene
489:49 - regardless of what scene you are in
489:52 - for now we are going to use that for the
489:54 - laser and the grenade amounts and the
489:56 - player Health later on we are also going
489:58 - to use it for the player position but
490:01 - don't worry about this one for now we're
490:02 - going to cover that later
490:03 - but now let's play around with auto load
490:07 - if you look at the top there we have
490:09 - project and there we have project
490:10 - settings so far we have looked at
490:12 - General and the input map besides that
490:15 - if you look on the right we have Auto
490:17 - load and this tab is incredibly
490:19 - important
490:21 - in there you can set a path and then a
490:23 - node name
490:24 - pretty much what you want to do is use
490:26 - the folder symbol and then click either
490:28 - on the script or on a scene both would
490:30 - be possible
490:31 - and then this script or scene would be
490:34 - loaded into every single scene by
490:36 - default
490:37 - and for now I want to create another
490:39 - script and for that I want to create
490:41 - another folder so let me create a new
490:45 - folder and I'm going to call this one
490:47 - Globe belts inside of this folder I want
490:50 - to create a new script so I right click
490:52 - on it and then new and then script
490:55 - is not going to ask me what I want to
490:58 - name this script and I want to call it
491:00 - Glow bills also for the template this
491:04 - should be empty by default and if I now
491:06 - create it we have another script
491:09 - I can double click on it to open it and
491:11 - right now we have an empty script that
491:13 - is extending the node now that we have
491:15 - that I can go back to project project
491:17 - settings and autoload and I want to
491:19 - select this particular node so all the
491:22 - way at the Globus folder I want to
491:25 - select globals.gd and now Godot wants to
491:28 - give this a node name and globals is
491:30 - perfectly fine
491:32 - if you are happy with both of them you
491:34 - can click on ADD and now we have a
491:36 - globals that is being Auto loaded so
491:39 - what does that actually mean and to
491:42 - illustrate that let me run the game
491:44 - if I now look at remote
491:48 - we have globals and we have outside
491:50 - inside of outside we have all the stuff
491:52 - inside of the game but globals is also
491:55 - there and if I go to another scene
491:57 - there we have Insight but we also have
491:59 - globals
492:01 - and this globals we never added manually
492:04 - into a scene it's not inside of level
492:06 - it's not an outside it's not an inside
492:07 - it is only there because we are auto
492:10 - loading it which is incredibly useful
492:12 - because now we can simply store any kind
492:15 - of value inside of this script
492:17 - for example what we could be adding
492:19 - could be a variable for the laser mount
492:23 - which by default could be 20. I don't
492:26 - really care about the number here just
492:27 - choose whatever you like the important
492:29 - thing is that we can access this laser
492:31 - amount from any other script
492:35 - for example we could look at the player
492:38 - player.gd and I could extend this window
492:42 - inside of the player we could add
492:43 - another function for underscore ready
492:45 - this function will be run automatically
492:48 - once the player has been added to the
492:50 - game and I want to print
492:52 - layer and then I want to print
492:55 - your low builds and inside of there we
492:58 - have the laser amount
493:01 - and the same thing I can do inside of
493:02 - level
493:04 - once this scene is underscore ready I
493:08 - want to print
493:10 - that we have a level
493:12 - and then I also want to print the low
493:15 - builds and the laser amount
493:20 - if I now Run the game
493:23 - you can see we have player 20 and level
493:25 - 20.
493:27 - which is a really good illustration that
493:29 - we have globals available everywhere
493:31 - this would also work inside of the UI or
493:33 - literally any other node it's available
493:35 - globally
493:37 - also for the name here you could name
493:39 - this script whatever you want although I
493:41 - think in my case globals makes the most
493:43 - sense
493:44 - I guess on top of that I should mention
493:46 - we have named the script in lowercase
493:49 - globals.gd but inside of project and
493:52 - auto load we have given this a custom
493:54 - node name which is globals with the
493:57 - first letter being capitalized this is
493:58 - how you would access this node but well
494:01 - with that we don't need this information
494:03 - in the level at least for now
494:06 - also inside of the player I want to get
494:08 - rid of this ready function because it's
494:10 - not yet let me move the inspector a bit
494:13 - to the side so I have a tiny bit more
494:15 - space
494:16 - the way I want to use this Global's
494:19 - information
494:20 - right now we are shooting a laser with
494:23 - this if statement but we are checking if
494:25 - we are pressing the primary action
494:27 - button and the player can laser on top
494:30 - of that I want to add another
494:32 - conditional part
494:34 - I want to check if Globe builds and the
494:37 - laser amount
494:39 - is greater than zero
494:42 - with that we are reading the global
494:44 - variable on top of that we can also
494:47 - change it so the first thing I want to
494:49 - do is to get
494:51 - globals.laser amount once again and then
494:54 - subtract one from it
494:56 - with that I should be able to shoot the
494:58 - laser 20 times and let's try that
495:02 - so this might take a second I probably
495:04 - am going to speed all of this up
495:08 - and there we go I keep on clicking but
495:11 - there's no laser and well this is
495:14 - covering the first part now the player
495:16 - has access to the laser amount next up
495:18 - we have to access all of this as well
495:21 - from inside of the UI and for that we
495:24 - have to give this one a script so I'm
495:26 - going to click on ADD script and I want
495:28 - to save the script inside of the same
495:30 - folder where we have the scene this
495:31 - looks pretty good so I can edit and I
495:34 - don't want to have anything else there
495:36 - the way I want to approach this is I
495:39 - want to write another function and let's
495:41 - call it update laser text this doesn't
495:45 - need any parameters and really all I
495:48 - want to do
495:49 - I want to get the label inside of the
495:51 - laser counter this label here
495:54 - and I could drag all of this in there
495:56 - but this would be kind of annoying to
495:57 - read also later on I want to access this
496:00 - multiple times so this isn't a really
496:02 - efficient way of working
496:04 - instead what I am going to do is to
496:06 - store this label or this node to be more
496:08 - specific inside of a separate variable
496:10 - all that means is I want to create
496:12 - another variable that I'm going to call
496:15 - the Laser label
496:17 - this has to be a label node and the
496:21 - value is going to be what we're getting
496:23 - from this node
496:25 - also let me extend this window so we can
496:28 - see a bit better what's going on I hope
496:29 - this kind of setup makes sense
496:31 - I am simply storing a reference to the
496:34 - note inside of a separate variable that
496:37 - way inside of this function I can get my
496:39 - laser label
496:41 - and then I can look at the inspector to
496:44 - see what we can work with so if I look
496:46 - at the label and I have a over text you
496:48 - get text so if you want to update this
496:50 - property you will use the text property
496:53 - and then give it a new value
496:55 - in this case I want to Target my globals
496:59 - and then the laser amount once again
497:02 - however we have two problems inside of
497:05 - this script right now and Godot is
497:07 - actually complaining the first one is
497:09 - that the default value is using a dollar
497:10 - sign which won't return nodes in the
497:13 - scene 3 before the ready function is
497:15 - called
497:16 - which means that only when you're
497:17 - calling the ready function we are
497:19 - creating all of the nodes and this one
497:21 - will be run before that so it wouldn't
497:22 - work
497:23 - there are two ways to solve this one
497:26 - approach would be to Simply create a
497:28 - ready function and then paste this
497:31 - variable in there and this would be
497:32 - totally fine although now we have
497:35 - another problem that this variable is
497:38 - only existing inside of the ready
497:39 - function as a local variable so it
497:41 - wouldn't be available inside of the
497:43 - update laser text so this isn't ideal
497:46 - I guess you could work around it but
497:48 - there's an easier way
497:50 - you could add an ad and then on ready
497:55 - with that this line of code is only run
497:58 - once the scene is ready
498:01 - it's effectively the same thing as
498:03 - running this line inside of the ready
498:04 - function although with the difference
498:07 - that all of this is going to be in the
498:08 - global scope of this class
498:10 - this will be the first problem the
498:12 - second problem is when we updating the
498:14 - text Godot is expecting a string but
498:17 - globals.laser amount right now is a
498:19 - number and this would cause an error so
498:22 - we have to convert this number into a
498:24 - string which you can do very easily by
498:26 - using the Str function
498:28 - and that is pretty much all we need to
498:30 - update this node the one issue we have
498:33 - now is that we have to call this
498:35 - function at a certain time
498:37 - right now we have a function that could
498:39 - update a laser label but we don't know
498:41 - when to call it
498:43 - this I want to do inside of level.gd and
498:46 - once again let me extend all of this
498:48 - when the player is shooting a laser I
498:51 - want to Target the UI and on there I
498:55 - want to get the
498:58 - update laser text
499:01 - or paste it in there and simply run it
499:04 - with that I should be good to go let's
499:06 - try out of this
499:08 - and now the numbers are updating this is
499:11 - looking really good and once again let
499:13 - me keep on shooting the laser so we can
499:15 - make sure that this doesn't work once we
499:18 - have zero lasers
499:20 - and there we go this is looking really
499:21 - good
499:22 - and just to reiterate what is happening
499:25 - here
499:27 - the first step is we have a global
499:30 - script and in there we're only storing a
499:32 - single value the laser amount this value
499:35 - we access in two places we have it in
499:38 - the player and there we are checking if
499:40 - the number is greater than zero and if
499:42 - it is we're reducing it by one
499:44 - besides that inside of the UI we have an
499:48 - update laser text and this one is taking
499:50 - one node and then uses the global laser
499:52 - amount to update this text
499:55 - finally inside of level.gd we are
499:58 - targeting the UI scene and then calling
500:00 - update laser text I hope all of that is
500:03 - straightforward
500:04 - this is an incredibly important concept
500:06 - to practice so let's do that
500:09 - I want you guys to create a global grade
500:12 - amount variable and connect it to the
500:14 - player and the UI it should look really
500:16 - similar compared to the laser most of
500:19 - you now and try to figure this one out
500:24 - I want to start by working inside of
500:26 - globals.gd right now we have a laser
500:29 - amount besides that I also want to have
500:31 - a grenade amount
500:34 - for the starting value I want to set
500:36 - this to 5.
500:37 - next up we have to work inside of the
500:40 - player
500:41 - and in there like we have done for the
500:45 - laser I want to check if the input is
500:48 - pressed for the secondary action if we
500:50 - have a timer for can grenade and on top
500:52 - of that I want to check if
500:55 - globals.grenade amount is greater than
500:58 - zero
501:00 - if that is the case
501:02 - I want to reduce
501:04 - globals.grenade amount
501:07 - by one this should already be the first
501:10 - step so if I now Run the game we should
501:12 - be able to shoot five grenades one
501:16 - two
501:18 - three
501:20 - four
501:21 - and five
501:23 - and now I shouldn't be able to do it
501:25 - anymore and I can't so this is
501:28 - definitely working
501:29 - next up we have to look at the level and
501:33 - if the player is emitting the on player
501:37 - grenade signal
501:39 - I want to Target my UI once again and
501:42 - then run a function called update
501:44 - grenade text
501:47 - this function doesn't exist right now
501:49 - let me copy it and then work inside of
501:51 - the UI
501:52 - I want to create a function
501:55 - called update grenade text doesn't need
501:58 - any parameters and all we have to do now
502:00 - is Target the label and then update the
502:02 - text for this one once again I want to
502:06 - create a global variable that stores a
502:08 - reference to this node so with on ready
502:11 - I have VAR grenade
502:14 - label which has to be a label just to be
502:18 - sure and this value we can simply drag
502:21 - in there I get it from the grenade
502:23 - counter there we have the label and that
502:25 - I want to drag in there like so this we
502:28 - can now use with the grenade label dot
502:32 - text and then I want to have a string
502:35 - with
502:36 - globals.grenade amount
502:38 - and that should cover us let's try all
502:41 - of this
502:42 - and we are getting an error because I
502:45 - didn't get the proper note I got the
502:47 - grenade counter the vbox container but
502:49 - not the label and since I specified that
502:52 - this has to be a label we're getting an
502:53 - error
502:55 - all we have to do to fix that is to add
502:57 - the label and now it should be working
502:59 - let's try again this is looking better
503:02 - if I shoot a grenade we are updating the
503:05 - number cool so this is working quite
503:07 - well
503:10 - I can also do this over multiple scenes
503:12 - and there you can see a problem we are
503:15 - recreating the new number let me
503:17 - actually play all of this again
503:21 - right now we are in the outside scene I
503:24 - can shoot a laser a couple of times also
503:25 - the grenade and now for the numbers we
503:28 - have 17 and 3. but if I go to the inside
503:32 - level we are back to 20 and 5. however
503:36 - once I shoot a laser we are going to 16
503:38 - and if I shoot a grenade we go to
503:41 - the issue
503:44 - we have here is
503:47 - if I go back to the UI we have a default
503:49 - value for both labels which are 20 and
503:53 - which are five
503:55 - now I could get rid of them but this
503:58 - wouldn't exactly help me so if I remove
504:01 - these numbers we can't see any number
504:03 - and if I run the game
504:05 - by default we don't have any numbers and
504:07 - only if I shoot we are getting numbers
504:09 - but this also isn't ideal and once again
504:11 - once we entering a new scene this also
504:14 - isn't working
504:15 - basically what we want to do is once we
504:18 - are starting a new scene we want to
504:19 - display the global numbers doing that is
504:22 - actually really easy I want to work
504:24 - inside of the script of the UI and in
504:26 - there I want to create the function
504:28 - underscore already once again this will
504:31 - be run once the UI scene is ready
504:34 - which means once we're entering the
504:36 - inside or the outside level this
504:38 - function will be executed
504:40 - and basically all we have to do is get
504:42 - the laser label
504:44 - then get the text and assign it the
504:47 - string value with globe
504:51 - builds and the laser amount now if I run
504:55 - this
504:57 - we're getting 20 by default and if I
504:59 - shoot all of this we are down to 16 if I
505:01 - now go inside we still have 60. so this
505:04 - is working even across scenes
505:08 - and you may be noticing now that we are
505:11 - duplicating code I am running this line
505:13 - and this line here and they are
505:16 - identical
505:18 - which means I can simply call update
505:22 - laser text and I guess what we're here
505:25 - also update grenade text
505:28 - once the scene is ready and with that we
505:31 - should be having everything in place so
505:33 - we get the numbers right away and now
505:35 - the numbers are 17 and 4. if I go inside
505:37 - we keep the same numbers so this is
505:40 - working super well
505:42 - cool let's try it one more time and yeah
505:45 - I am really happy with it but we can
505:48 - make all of this look quite a bit more
505:49 - fancy I'll cover that in the next bit
505:52 - next up I want to change the UI color or
505:56 - more specifically at the moment the
505:59 - laser and the grenade parts are pure
506:00 - white which is a bit boring instead I
506:04 - want them to be green by default and red
506:06 - when the number is zero so if the laser
506:09 - is a number like 10 or 20 I want the
506:12 - icon and the text to be green but if
506:14 - they are zero they should both be red
506:16 - all of that we can change quite easily
506:19 - using modulate so let's Jump Right In
506:21 - once again back in Godot for now I want
506:25 - to give the label a default value of 20
506:28 - and same for the grenade a default value
506:30 - of 5. that way it's a bit easier to see
506:33 - what's going on
506:35 - the really important thing to understand
506:36 - is that the default white color is on
506:38 - purpose what that allows me to do for
506:41 - example if I take this texture rectangle
506:43 - I can go to visibility and modulate and
506:47 - change the color really easily to
506:49 - whatever value I want
506:51 - what modulite is doing it is multiplying
506:54 - the color with the color we are
506:56 - selecting in here and if it is pure
506:59 - white we are ignoring the base color and
507:01 - only use the selected color if this was
507:04 - any other color we would multiply this
507:06 - value and keep the original so the white
507:09 - here is a deliberate choice
507:11 - that being said though I don't want to
507:13 - modulate this by hand instead I want to
507:15 - change this with code
507:17 - for that I want to open this script and
507:21 - extend all of this and declare two color
507:24 - values
507:25 - I guess I should add a colors comment
507:28 - and I want to create a variable for the
507:31 - green
507:33 - color
507:34 - I guess we can just call it green
507:35 - although we can specify this has to be a
507:39 - color
507:40 - and to create a color value we are
507:43 - simply typing in color
507:45 - and then Google lets you create a color
507:47 - and you can create color in quite a few
507:49 - different ways the prediction here gives
507:51 - you an idea of what you can do
507:53 - one way would be to use hexadecimal
507:55 - values
507:57 - which is actually what I want to do and
507:58 - the value I want to use is 6bb f a 3.
508:03 - the way hexadecimal values work is you
508:06 - have six digits in total the first two
508:09 - are for red the third and fourth are for
508:11 - green and the final two are for blue
508:14 - and the values always start with 0 and 0
508:17 - which are the absence of the color and
508:19 - they go all the way to F and F for the
508:22 - full amount of the color
508:24 - and this might seem a bit weird to go
508:27 - from
508:28 - 0 and 0 all the way to F and F but
508:31 - basically the way it works is we go from
508:33 - 0 0 to 1 1
508:35 - and then so on at some point we reach 9
508:38 - and 9 and after that we are getting to a
508:41 - and a
508:42 - with that system we get quite a few more
508:45 - values although when you start reading
508:46 - about it it's kind of confusing
508:49 - but most of the time you don't create
508:51 - these values by hand you use something
508:53 - like Photoshop or an online Editor to
508:55 - create them for you as a matter of fact
508:57 - Godot has something inbuilt if I close
508:59 - all of this and select the texture
509:01 - rectangle again under modulate you can
509:04 - select any value let me choose one and
509:07 - there in the bottom you can see the
509:09 - value or a similar kind of value
509:11 - besides that I want to create another
509:13 - color this one would be for red it also
509:16 - has to be a color
509:19 - and this will create with color
509:21 - and for this one I want to have another
509:23 - approach to color in the first approach
509:25 - we used a code string to create a value
509:29 - for the next one I want to have an RGB a
509:31 - tuple
509:33 - which means we have to add four values
509:35 - all separated by comma the value for red
509:37 - for green for blue and for the alpha
509:40 - value
509:41 - for each of these values you have to
509:43 - choose a value between 0 and 1. for
509:45 - example for transparency zero would be
509:48 - full transparency and one would be no
509:50 - transparency at all
509:52 - this is actually what I want to keep for
509:53 - this one now besides that for red I want
509:56 - to have 90 of the color and for green
509:59 - and blue I want to have none of the
510:01 - color
510:03 - and there we go with that we have
510:05 - another color object
510:08 - and there are quite a few more ways to
510:10 - create colors in Godot but these would
510:12 - be two popular ones the way we would be
510:14 - using either of these values is we would
510:17 - simply get the laser label for example
510:21 - and then use modulate
510:24 - to that we would assign the color for
510:26 - example this could be rain
510:29 - or it could be for the grenades let's
510:31 - start with red so I want to have the
510:33 - grenade label use modulate
510:37 - and then assign the red color
510:39 - if I now run this scene
510:43 - we are getting different kinds of color
510:47 - for now we're only changing the color of
510:49 - the text and the icon for the bullets is
510:52 - colored because I have changed the value
510:54 - by hand so if you look at this text
510:56 - direct I have changed the color this
510:57 - shouldn't have happened if I now run
510:59 - this again
511:00 - that looks much better so now we have a
511:02 - green and a red color
511:04 - that isn't enough though and we have
511:07 - quite a few problems at the moment
511:09 - number one is we are only coloring in
511:12 - the labels not the icons
511:14 - so what I want to do is to also
511:17 - store the icons inside of separate
511:20 - variables which means I want to have on
511:22 - ready a variable for the laser let's
511:27 - call it icon this has to be a texture
511:31 - rectangle
511:34 - and the value for that we can simply
511:36 - drag it in there so I can drag this
511:39 - texture back in there
511:42 - and then I can duplicate the entire line
511:45 - and change this to a grenade icon
511:50 - and the value we are getting from the
511:52 - grenade counter then we have the vbox
511:55 - container and then the texture rectangle
511:57 - that way we can Target the grenade icon
511:59 - much more easily and for example what we
512:02 - could be doing is besides the laser
512:04 - label I also want to get the laser icon
512:06 - and then run the modulate
512:11 - attribute and assign it also the green
512:14 - color
512:15 - if I now run this
512:16 - we have a green color both for the text
512:18 - and the icon of the laser that's working
512:21 - really well
512:22 - and this covers all of this setup so
512:24 - next up I want to do a slightly more
512:27 - advanced challenge I'm sure you can
512:28 - figure it out
512:30 - I want you guys to create a function
512:33 - called update color and this one has
512:36 - three parameters the amount a label and
512:38 - an icon and this function should color
512:41 - the icon and the label red if the amount
512:43 - is zero and otherwise green
512:46 - pause the video now and try to make this
512:48 - one work
512:51 - I want to create another function all
512:54 - the way at the bottom
512:56 - this function is called update color and
513:00 - we will need three parameters the amount
513:02 - the label and an icon
513:05 - and in here we can be a bit more
513:09 - specific although for now let me add
513:10 - person there so Google stops complaining
513:13 - we know that the amount always should be
513:16 - an integer so we can add an intern there
513:18 - just to make sure we don't add any other
513:20 - data the same we can do for the label
513:22 - this needs to be a label and for the
513:25 - icon this needs to be a texture
513:28 - rectangle
513:30 - basically what I want to do is to pass
513:32 - any of these labels or Texture
513:35 - rectangles into this function
513:37 - and I guess while we're doing this you
513:39 - can also specify the return value in
513:40 - Godot so this function by default should
513:43 - return void meaning it doesn't return
513:46 - anything
513:47 - and this should be a lowercase V
513:51 - you see this kind of setup really often
513:53 - in good dough so you're specifying what
513:55 - kind of parameter you're getting and
513:56 - what return value you're getting from
513:58 - the function
514:00 - if I change this void to let's say an
514:02 - integer the dough would complain that
514:04 - the function doesn't return that value
514:06 - but if it is void we are not returning
514:09 - anything
514:10 - inside of this function I want to check
514:14 - if the amount is smaller or equal than
514:18 - zero
514:20 - if that is the case I want to get the
514:22 - label and then run modulate on it
514:26 - or more specifically I want to overwrite
514:28 - the modulate value
514:29 - the value I want is the red color
514:32 - the same thing I want to do for the icon
514:36 - and in there once again I want to get
514:39 - the modulate value and this should be
514:40 - red
514:42 - if that is not the case so else
514:45 - I want to do basically the same thing so
514:48 - I can just copy all of this except this
514:50 - shouldn't be red this should be green
514:53 - that is pretty much it all we have to do
514:57 - now is call this function and this we do
515:00 - inside of update grenade text or update
515:02 - laser text I don't want to modulate this
515:06 - grenade label anymore instead I want to
515:08 - call update color
515:10 - and pass in the value which would be
515:13 - the low builds and then the grenade
515:16 - amount
515:18 - next up we need the label which would be
515:21 - the grenade label and finally we need
515:23 - the icon which will be the grenade I can
515:27 - now we can duplicate this line and move
515:30 - it into the laser amount because in
515:33 - there we want to have pretty much the
515:34 - same thing except it would be the laser
515:36 - amount
515:38 - the laser label and the laser icon like
515:42 - so and now if I run all of this
515:46 - by default we get green icons and if I
515:49 - shoot the laser and the grenades let me
515:52 - do all of this whichever one finishes
515:54 - faster
515:57 - I guess the laser is going to be faster
515:59 - if we get to zero this thing is becoming
516:02 - red the same with the grenades let's try
516:05 - this again actually I want to move to
516:07 - another scene to make sure this works
516:09 - across multiple scenes so if I now go
516:11 - inside we still get the same colors and
516:14 - I can shoot the grenade and do it one
516:16 - more time it also becomes red and this
516:19 - also works across multiple C cool so
516:22 - this one is working super well
516:24 - I think the logic here keeps on getting
516:26 - a bit more complicated so I hope all of
516:29 - this is still making sense
516:31 - the major new thing is that now we are
516:34 - passing entire nodes into other
516:36 - functions which is a perfectly fine
516:38 - thing to do
516:39 - I hope that was useful and for the next
516:41 - part we can actually work on the
516:43 - transition between the two levels
516:46 - now that we have covered the basics of
516:47 - UI we can work on a pretty level
516:50 - transition
516:52 - we already have e-level transition but
516:55 - it doesn't look very good so let's make
516:57 - this a bit nicer basically what we are
516:59 - going to do we're going to take a canvas
517:01 - layer a color rectangle and an animation
517:03 - player to create a transition we are
517:06 - fading to Black when we are leaving a
517:07 - level and we are fading from black to a
517:10 - transparent cutter once we are entering
517:11 - a level
517:13 - all of this will also be Auto loaded
517:15 - into every scene so it is easily
517:18 - accessible
517:19 - I want to start by creating another
517:21 - scene and this scene has to be once
517:24 - again a canvas layer
517:27 - that way it's ignoring the camera
517:30 - this I want to rename right away to a
517:32 - transition let's call it transition
517:34 - layer the first note we are going to add
517:36 - is going to be a color rectangle
517:40 - this color rectangle is going to get a
517:43 - black color and I wanted to cover the
517:45 - entire window
517:47 - and with a control node this is quite
517:49 - easily done
517:50 - cool with that we have a transition
517:52 - layer
517:53 - this I want to save right away inside of
517:56 - globals and let's call the transition
517:58 - layer the name works and now inside of
518:01 - project project settings there we have
518:03 - Auto load
518:05 - I want to add not a script but a whole
518:09 - scene which Godot is perfectly happy
518:10 - with
518:11 - if I know open this we have a transition
518:14 - layer name which is perfectly fine so I
518:17 - want to add this one as well
518:18 - if I now Run the game
518:20 - we are getting a black screen and that
518:23 - is because you can see it under remote
518:24 - we have globals and then a transition
518:27 - layer and this transition layer is pure
518:29 - black right now so everything else is
518:31 - going to be black as well and note here
518:33 - as well that this transition layer comes
518:36 - before the outside level
518:38 - but still inside of the game it's on top
518:41 - of it
518:42 - you could change that but I do want to
518:44 - keep it because later on the transition
518:46 - layer has to be on top of the outside
518:48 - level anyway
518:49 - so let's change the transparency the way
518:53 - we would be doing that is by adding an
518:55 - animation layer
518:58 - this animation player is going to get
519:00 - for now is single animation I guess we
519:02 - could call it Fade to Black we have to
519:06 - add one track for a property we want to
519:09 - cover the color rect node and in there I
519:12 - want to get the modulate property
519:15 - we have to add two keys one at the
519:17 - beginning and this value should be
519:20 - purely transparent
519:23 - and then at the end we want to add
519:25 - another key and this one should be pure
519:27 - black or pure black with full
519:29 - transparency
519:31 - that way
519:33 - if I play the animation
519:35 - we are fading to Black so this is
519:38 - working really nicely
519:39 - once again though we have to figure out
519:41 - when to play this anime and for that I'm
519:44 - going to add a script to the transition
519:46 - layer this one can be empty and I want
519:49 - to create it and now I want to create a
519:52 - function that I call change underscore
519:56 - scene this one is going to get one
519:59 - argument that I called Target
520:01 - and the value for that is going to be a
520:03 - string also to be a bit more consistent
520:06 - the return value for this function
520:08 - should be void once we are calling this
520:10 - function I want to get my animation
520:12 - player and then play the animation Fade
520:16 - to Black
520:17 - after the animation is done I want to
520:20 - get the tree
520:21 - and then call the method change scene to
520:24 - file and pass in the target
520:27 - why that is useful if I hide the
520:31 - animation and go for example to the
520:33 - outside.gd file right now we are simply
520:36 - changing scene to file and this works so
520:39 - far but this is not what I want to do
520:41 - anymore so instead let me copy the
520:44 - target
520:45 - and get rid of all of this
520:47 - instead I want to get the transition
520:50 - layer
520:52 - and then on that run change
520:55 - scene
520:57 - and I realized I didn't save the
520:59 - transition layer so now if I save it and
521:02 - go back to the outside level
521:04 - if I now type change
521:07 - underscore scene Kudos should be
521:09 - predicting it
521:11 - in there now I want to pass in the
521:13 - Target this is almost going to work if I
521:16 - now run the entire game
521:18 - we are still getting pure black
521:21 - and that is because if I go back to the
521:24 - transition layer by default the value
521:26 - for the color rectangle is a pure black
521:28 - this is not what I want I want to set a
521:31 - transparency to zero so that way if I
521:34 - run the game
521:35 - we can't see the actual game but now if
521:38 - I go into the transition area
521:43 - we are still not seeing anything the
521:46 - reason for that is that once we're
521:48 - entering this area we are starting to
521:50 - play the animation but we are
521:52 - immediately changing the scene so the
521:54 - animation doesn't actually matter for
521:56 - that we have to learn one New Concept
521:59 - and that is called a weight the weight
522:02 - does what the name applies it awaits
522:04 - another kind of event for example an
522:06 - event we could be looking for would be
522:09 - the animation player and then animation
522:11 - underscore finished
522:14 - so we want to play the animation then we
522:16 - want to wait for the animation to finish
522:18 - and then we want to change the scene
522:20 - if I now Run the game and I walk into
522:23 - there
522:24 - we okay this didn't exactly work but you
522:28 - can see if I go in there the player
522:29 - stops and after about a second we are
522:32 - transitioning so now at the very least
522:34 - we have a delay
522:36 - and the reason why it didn't work if I
522:38 - go back to the scene this color
522:40 - rectangle always has a pure transparency
522:43 - but this shouldn't be the case I want
522:45 - this to be actually visible
522:49 - with that the animation player is
522:51 - actually going to show this modulate so
522:53 - now if I run this
522:56 - and move in there
522:58 - we are actually fading to black but now
523:00 - we have loaded the other scene but we're
523:03 - not fading from black to a transparent
523:05 - color again
523:06 - but that we can fix quite easily and
523:09 - there are actually two ways of
523:11 - approaching this the first one would be
523:13 - inside of the animation player I want to
523:15 - add a new animation
523:17 - and let's call this one reveal
523:21 - for this one once again I want to get a
523:24 - property track get the color rectangle
523:26 - get the modulate property and for this
523:29 - one I want to get a key that should be
523:32 - pure black by default
523:34 - so I want this to be completely black
523:36 - and then after one second or whatever
523:39 - amount of time you want
523:40 - I want this to be completely transparent
523:44 - once we have the animation I can look at
523:46 - the script again
523:47 - and then get the animation player and
523:52 - play
523:53 - the reveal animation
523:55 - if I have all of that I can see it in my
523:58 - animation player so I am moving from
524:00 - Pure Black to purely transparent and
524:03 - then inside of fader black I'm doing the
524:05 - opposite
524:06 - which is pretty much exactly what I want
524:08 - so now if I am trying all of this we can
524:11 - see the game I can move in there we have
524:13 - a transition and now we are revealing
524:16 - the other level and this should also
524:18 - work
524:19 - right now it only works in one way but
524:21 - at least this way it is working really
524:24 - well
524:24 - which means there's only one more thing
524:26 - to do and exercise
524:28 - instead of playing this reveal animation
524:32 - we could simply play another animation
524:35 - backwards and what I want to play
524:37 - Backwards is Fade to Black so if you
524:39 - look at the animation player we
524:41 - basically have from transparent to Black
524:43 - and then from black to transparent
524:46 - which means if we reverse one of these
524:49 - animations we get the other animation
524:51 - both approaches here would be fine and
524:53 - let me actually test all of this now we
524:56 - still get a level transition so this is
524:58 - working just fine cool
525:00 - for this part the exercise is going to
525:02 - be quite easy I want you guys to play
525:04 - the transition when the player is
525:06 - leaving the inside level
525:10 - all we have to do is go to our scripts
525:13 - and I want to look at not outside but
525:16 - inside.gd
525:18 - currently we are getting a packed scene
525:20 - and this is not what I want anymore
525:22 - also I want to extend the window and get
525:25 - rid of all of this
525:28 - instead I want to have the transition
525:30 - layer and then
525:32 - change scene I think I called it
525:36 - instead of transition layer change scene
525:37 - yes this one works this one wants to
525:40 - have the target node and I think the
525:43 - best way to approach step one is to
525:45 - Simply drag it in from the scenes so in
525:48 - scenes we have the levels and I want to
525:51 - go to the outside scene so I can paste
525:55 - this in there or rather drag it in there
525:57 - and now we should be good to go let's
526:00 - try it so I can go into the inside area
526:02 - and if I now leave it
526:05 - we are going to the outside area let's
526:07 - try it again and all of this is working
526:11 - just fine perfect so with that we have
526:14 - much nicer level transitions at this
526:17 - point we have all of the setup we have a
526:19 - UI so the last major thing that we have
526:22 - to add are items and the enemies
526:25 - meaning we are going to add the more
526:27 - interactive parts to the game I want to
526:29 - start with the items because that bit is
526:31 - quite a bit easier and that way we can
526:33 - set up the interaction between the level
526:35 - or rather the dynamic items of the level
526:37 - with the player and the UI
526:40 - I want to create one item which is going
526:43 - to be a scene that gets a random value
526:45 - it can either update the health lasers
526:47 - or grenades on top of that depending on
526:51 - what choice it has taken it will get a
526:53 - different color so for example health is
526:55 - going to become Green Lasers I think
526:57 - will become blue and grenades will
526:58 - become red
526:59 - although the colors here are fairly
527:01 - random at this point all of this should
527:04 - be reasonably trivial the only major
527:06 - challenge is going to be to wire up all
527:08 - of this with the player and the UI
527:11 - for now we're going to do all of that
527:12 - with signals I want to get started by
527:15 - creating a new scene and now we have to
527:18 - think about what kind of setup we want
527:20 - that will determine the root node in my
527:23 - case I want to have an area 2D
527:26 - and right away when we work with the
527:28 - collisions I want to set this before I
527:31 - forget the area to D should only be on
527:34 - the fifth layer which is going to be
527:36 - items and zones it shouldn't be or
527:38 - anything else on top of that it should
527:41 - only be able to see the player and
527:42 - nothing else besides that I would like
527:46 - to rename all of this I suppose item
527:49 - would be a good name on top of that I
527:52 - want to have a Sprite a Sprite we are
527:55 - getting from graphics and in there we
527:57 - have items and in items we have one file
527:59 - called orb2.png
528:01 - this I want to drag into the texture and
528:04 - there we go we have some icon looking
528:07 - thingy
528:08 - once again it is pure white because that
528:10 - allows us to use visibility and modulate
528:13 - and then set any custom color
528:16 - although for now I don't actually want
528:18 - to do that we will work on that in just
528:20 - a second before that I want to give this
528:23 - item a collision shape which is going to
528:26 - be pretty simple this is going to be a
528:28 - circle shape
528:30 - and let's give it this kind of size
528:33 - looks about right now I can save all of
528:36 - that and let's save it under scenes and
528:39 - I guess we should create a new folder
528:41 - let's call it items and save it in there
528:45 - now we have one item and let's test it
528:48 - right away I want to place one inside of
528:51 - the outside area so item and place it
528:55 - somewhere here
528:56 - and then the same I want to do inside of
528:58 - the inside level and place an item in
529:02 - there as well
529:03 - just to test if they are looking good
529:05 - and the item right now is here and let's
529:09 - place it in the dark so we can see
529:11 - what's going on
529:12 - Also earlier when I locked all of these
529:16 - lights I kind of made a mistake so with
529:19 - all of them selected I want to unlock
529:21 - them and this I have to do
529:24 - like
529:25 - so basically when you want to lock all
529:28 - of the children of one particular node
529:31 - in this case of all of the lights you
529:33 - wouldn't select everyone individually
529:35 - and then lock them because that is
529:37 - incredibly inefficient instead you lock
529:40 - the parent node but then you can still
529:42 - select the children so there I can
529:44 - select for example the light
529:46 - but what you can do on top of that
529:48 - besides locking this layer you can also
529:50 - select this icon so you cannot select
529:52 - the children anymore with that I cannot
529:54 - select anything and right now I am
529:56 - selecting the player
529:58 - that kind of setup is significantly more
530:00 - efficient
530:01 - also I want to lock the directional
530:03 - light I may have done that earlier
530:06 - cool but with that we can try all of
530:08 - this
530:09 - and now we can see one item and if I go
530:13 - inside
530:14 - we should be able to see another item
530:16 - and I guess they work reasonably okay
530:19 - although right now they're also on top
530:21 - of the player but I think they should
530:23 - work better with some light
530:26 - so besides the spread to D and the
530:28 - Collision shape I want to give this one
530:30 - a point light 2D next up for the point
530:33 - like 2D we will need a texture for that
530:36 - inside of Lights we have circle.png I
530:39 - want to drag this in there and now this
530:42 - one is a little bit too large let's
530:45 - change the scale to 0.2 and let's see
530:49 - how it looks
530:52 - possibly a bit too strong and let's see
530:54 - how it looks indoor
530:57 - looks a bit better in here but still I
530:59 - think a bit too much light so I'm going
531:01 - to set the energy down to 0.5 and the
531:05 - texture to 0.4
531:08 - and slight improvements and this one is
531:13 - I think looking quite good actually
531:16 - once again just play around with the
531:18 - values here and see what you like the
531:19 - most in my case I am happy with this so
531:22 - I'm going to give the item a script and
531:25 - this should be empty by default so let's
531:28 - create it and now we have a script for
531:30 - an area 2D for this area 2D what I want
531:33 - to start with is to make the entire item
531:35 - rotate this I can do with the process
531:37 - function and all I really have to do is
531:40 - get the rotation
531:42 - and then increase it by some kind of
531:46 - rotation speed that doesn't exist right
531:49 - now and don't forget we want to multiply
531:51 - all of that with Delta
531:53 - next up we have to create a rotation
531:56 - speed variable which has to be an
531:59 - integer for the value let's go with five
532:03 - I can run the game again and now we get
532:06 - a rotation might be a little bit too
532:08 - fast let's say four
532:12 - but once again just play around and see
532:15 - what looks best next up I want to give
532:17 - this a type
532:19 - and a item could either be a laser it
532:24 - could be a grenade or it could be a
532:27 - health upgrade
532:29 - the value should be randomly assigned
532:31 - and for that we have to use an array an
532:35 - array if you ever use Python is
532:37 - basically a list so in here we can add
532:39 - the values that we want for example this
532:42 - could be a laser
532:43 - this could be a grenade
532:46 - or this could be elf
532:49 - also let me expand the window
532:52 - now we have an array with three values
532:55 - and we want to pick one of them at
532:57 - random we would be using indexing so we
533:00 - would add another square brackets
533:02 - afterwards and if we added a zero in
533:04 - there we'll pick the first item but I
533:07 - don't want to have a hard-coded first
533:08 - item I want to get a random number
533:11 - to achieve that I'm going to get rid of
533:14 - the square brackets and rename this type
533:17 - to available
533:19 - options
533:21 - and then on the next line I'm going to
533:23 - create the actual type
533:25 - and this type is going to be the Veil
533:31 - options
533:32 - and this one is going to get the square
533:34 - brackets
533:35 - inside of there I want to create a
533:38 - random number and this I do with Rand I
533:40 - and this will create a random number but
533:43 - this random number I want to limit to
533:45 - the length of this list for that I will
533:49 - need a modulus operator and then the
533:51 - length of the available
533:55 - options
533:56 - once I have all of that I can run the
533:59 - ready function and simply print what
534:03 - kind of type we are getting
534:04 - Let's test all of this
534:06 - and we're getting laser if I try this
534:09 - again
534:10 - we're getting grenade let's try it again
534:13 - we're getting Health this is actually
534:15 - working incredibly well and we're
534:17 - getting grenade so this seems to be
534:19 - working just fine
534:20 - cool with that we got the different
534:23 - options that an item can take but
534:25 - there's a bit of a problem right now and
534:28 - that is that I want to prioritize the
534:30 - laser so right now we have a one and
534:33 - three chance to get a laser a grenade or
534:35 - a health upgrade but this isn't exactly
534:38 - what I want I want the lasers to be more
534:40 - likely
534:41 - and to make that a thing we can use a
534:43 - slight workaround all we have to do is
534:46 - add the laser multiple times in this
534:48 - list
534:49 - and that way getting the laser is
534:51 - significantly more likely
534:53 - although we could still get a grenade or
534:55 - a health upgrade
534:57 - next up inside of the ready function I
535:01 - want to use the type to give this item a
535:04 - color this we can achieve with a simple
535:06 - if statement so if the type is for
535:09 - example a laser
535:12 - that I want to get this bright 2D use
535:16 - the modulate property
535:19 - and give it a color
535:22 - that should be some shade of blue and
535:24 - once again for that I can use an RGB
535:26 - value so I want to specify a value for
535:29 - red for green and for blue
535:31 - to keep this one simple I'm going to
535:34 - give this 100 blue no amount of green
535:37 - and no amount of red
535:41 - and with that I can run the code and
535:44 - there we already have something although
535:47 - the blue might be a bit too strong so
535:49 - let me go back in there ah and now we
535:51 - can see since we have reloaded the scene
535:53 - we get a new kind of item this we're
535:56 - gonna fix later but for now there we
535:58 - have a blue item again
536:00 - let's say instead of a one I want to
536:03 - have 0.6
536:06 - and that is looking a bit better once
536:10 - again if you play around with these
536:11 - numbers let's say I want to increase the
536:13 - other values to 0.2 and 0.1
536:18 - and now let's try this again
536:21 - and that's looking a bit washed out but
536:23 - you get the idea I'm going to change
536:25 - this to 0.8 and now let's try it again
536:28 - and this is a white item
536:32 - there we go I think this is looking
536:33 - decent
536:36 - which means next up we can work on the
536:39 - other type
536:41 - which would be the grenade
536:43 - for this one we can do the same thing we
536:45 - have done for the laser so I can simply
536:46 - duplicate this line and if we have a
536:49 - grenade I want to have a red color which
536:52 - means the red in the RGB Tuple should be
536:55 - 0.8 and then the 0.8 for blue should be
536:58 - 0.1 to test this one I am going to
537:02 - comment out the available options and
537:05 - then simply type in
537:07 - renate
537:09 - let's try that one
537:11 - and that's a decent-ish red color so I'm
537:14 - quite happy with that
537:16 - finally I want to copy all of this one
537:18 - more time
537:20 - the final value we want to look for is
537:22 - going to be health
537:23 - for this one I want to have
537:26 - 0.1 or red and blue and 0.8 for green
537:31 - and to test this one the type is going
537:33 - to be health so let's try and this is a
537:38 - decent green color cool
537:40 - that means I can get rid of this testing
537:43 - string and then get a random option
537:45 - let's try that button and it should
537:47 - still work yep that is looking good
537:50 - cool with that we get the right kind of
537:53 - color once we get an item
537:55 - that is going to bring us to the
537:57 - slightly more complicated bit and that
537:59 - is that we want to connect this item if
538:02 - I go back to the scene actually I want
538:05 - to connect this item if the player is
538:07 - touching it I want to update let's say
538:09 - the player lasers and then the UI
538:12 - and this is going to happen once the
538:14 - player touches the item
538:16 - which gives us the first step I want to
538:19 - go to node and then have the item
538:21 - selected and then click on body entered
538:23 - once the player is entering the item we
538:26 - can run a function
538:28 - and since we get access to the player
538:30 - via the body we can run a function
538:32 - directly on the player
538:34 - basically what I want to do is to get
538:36 - the body of the player and then use a
538:40 - function that I call add item
538:42 - and this add item needs to know what
538:45 - kind of item we have which we are
538:47 - getting from the type
538:48 - also while we are here once the player
538:51 - touched an item I want to destroy the
538:53 - item which we can do with
538:55 - Q3 and if I am able to type this would
538:59 - be much easier done
539:00 - now we can work inside of a player and
539:03 - run and add item function so let me find
539:06 - the player once again there we go and
539:09 - extend all of this
539:11 - also I can minimize the process function
539:13 - for the player
539:15 - and then work
539:18 - all the way at the bottom we want to
539:19 - have a function called add
539:21 - item
539:23 - this function needs to have one
539:25 - parameter which is the type
539:27 - which needs to be a string
539:30 - and on top of that
539:32 - this function should return nothing
539:35 - just to test if this is working let me
539:38 - print
539:39 - player scene and on top of that I want
539:43 - to print the type that we are getting
539:46 - if I now run the code again
539:49 - we can collect the item and we get
539:51 - player scene and grenade so this is
539:54 - working just fine which means now
539:56 - besides printing something I want to
539:59 - check what kind of type we are getting
540:00 - so if the type is for example a let's
540:05 - start with a laser actually
540:07 - if that is the case I want to get
540:09 - globals inside of there we have the
540:12 - laser amount and this I want to increase
540:15 - by a certain number you could use a one
540:18 - here but I'm gonna go with five because
540:20 - we want to use the laser quite a bit
540:23 - this logic should already work but there
540:26 - is going to be a major downside to
540:28 - illustrate let me run the game and there
540:30 - we have a blue item this is going to
540:32 - update our lasers
540:34 - and to visualize the problem let me
540:37 - shoot away our entire ammunition I am
540:39 - probably going to speed this one up
540:43 - perfect now we have zero lasers left so
540:45 - I cannot shoot anymore but if we go over
540:49 - the item we still can't see any laser
540:52 - bullets but we can shoot again and if I
540:55 - should we get to four bullets
540:57 - which means that
541:01 - this line here does update the amount of
541:03 - lasers but it doesn't update the UI
541:06 - which is going to be a bit of a problem
541:09 - because we don't have direct access to
541:11 - the UI
541:12 - so if I minimize this and go back to the
541:15 - 2D view we only have the UI available
541:18 - either inside of the level inside of the
541:21 - outside level or inside of the inside
541:22 - level
541:23 - meaning we have to get
541:26 - if I go back to the player from inside
541:29 - of this function we have to tell any
541:31 - kind of level that we want to update the
541:33 - UI for this one we can use a signal but
541:37 - I think you can already tell that this
541:39 - kind of system is getting kind of
541:41 - convoluted and in the next part we're
541:43 - going to find a much easier and better
541:45 - way of working with this but for now I
541:47 - just want to implement the basics so
541:49 - what I want to do the player is going to
541:52 - get another signal that signal is going
541:55 - to be update stats
541:58 - and as soon as we are doing any of this
542:02 - I want to get the update stats signal
542:05 - and emitted
542:07 - that is information we can use inside of
542:09 - the level as a matter of fact if I go
542:12 - there select the player we now have
542:14 - update stats
542:15 - this I want to connect to the level so
542:18 - connect and now we have a function
542:21 - inside of the level and inside of that
542:23 - level we have the UI which is quite
542:26 - handy because that way I can get the UI
542:30 - and the UI has a couple of functions
542:33 - that update the UI itself
542:36 - let me open it actually I want to open
542:38 - the UI
542:39 - in there we have update laser text and
542:43 - update grenade text also I've realized
542:45 - that those two lines shouldn't be there
542:47 - anymore all we have to do inside of the
542:50 - level is called these two functions and
542:52 - then we are good to go
542:54 - I want to get UI and then update laser
542:58 - text
542:59 - yes I want to duplicate because the next
543:01 - line is going to be update grenade text
543:05 - and with that we should be good to go if
543:08 - I now run out of this I can shoot the
543:09 - laser a couple of times and now if I
543:12 - collect the blue orbs our lasers are
543:14 - indeed updating
543:15 - so this is a really good start
543:18 - and I really want to reiterate what is
543:21 - happening here we are starting inside of
543:24 - the item
543:25 - this item is going to select a type when
543:28 - it is being created let's say it becomes
543:30 - a laser and because of that we are
543:32 - giving it a certain color
543:34 - although this doesn't affect the
543:36 - functionality at all what does however
543:38 - affect the functionality is the function
543:40 - at the bottom if the player is colliding
543:43 - with it we are running the add item
543:45 - function this exists inside of the
543:48 - player and we are accessing the player
543:49 - via the body that is entering the
543:51 - function which means next up inside of
543:54 - the player we can run the function here
543:56 - we are checking the type of the item and
543:59 - if it is a laser we are updating the
544:01 - global amount and this laser amount we
544:04 - are using in the process function to
544:06 - check if the player can shoot a laser
544:08 - also in the UI we're updating all of
544:11 - this the problem is the UI doesn't know
544:13 - when it is supposed to be updated so
544:15 - here we are updating the laser amount
544:17 - but we're not telling the UI to update
544:19 - this we are doing via a signal which is
544:22 - called update stats that we can capture
544:24 - inside of the level and inside of the
544:26 - level we have the UI and the depth we
544:29 - update in the text for laser and the
544:30 - grenades
544:31 - once again all of this is getting a bit
544:33 - convoluted and in the next part we're
544:35 - going to cover a much better way of
544:37 - covering this first of all though I want
544:39 - to do an exercise
544:40 - I want you guys to implement the logic
544:42 - to update the grenades once again this
544:45 - is going to be really similar compared
544:46 - to the lasers pause the video now and
544:49 - try to work on that
544:53 - first of all I want to work inside of
544:55 - the item in there we are already getting
544:58 - the type for the grenade so this one is
545:00 - working just fine and we are still
545:02 - calling the on-bodied entered function
545:04 - which means next up we can work inside
545:07 - of the player in there we are only
545:09 - checking for the laser right now which
545:11 - means I can duplicate these lines and
545:14 - change the type to grenade
545:17 - if that is the case I want to update the
545:20 - grenade amount and increase it let's say
545:23 - by one with that we have an increased
545:26 - Global amount and we are also telling
545:28 - the UI to update which we're doing via
545:30 - this signal and since this inside of the
545:33 - level is covering both the laser and the
545:35 - grenade we should be good to go and just
545:38 - to test this inside of the item I'm
545:41 - going to once again comment out the
545:43 - random item and instead get a grenade
545:48 - with that we should always get a red
545:50 - item and that's looking good and now
545:52 - we're getting six grenades
545:55 - and everything else is still working
545:56 - just fine meaning now I can get rid of
546:00 - the grenade and we have a random item
546:02 - again so let's try this one more time
546:04 - and there we have more lasers perfect
546:08 - this covers the first important part and
546:11 - in the next part we're going to make all
546:12 - of this significantly more efficient
546:14 - I'll see you there for this part we are
546:16 - going to cover set get which is a really
546:19 - powerful tool in Godot but to understand
546:21 - why it is useful let's talk about a
546:24 - problem
546:25 - at the moment when the player is
546:27 - colliding with an item we are updating
546:29 - the player stats and the UI separately
546:31 - which is getting really complex really
546:34 - fast we have to work across multiple
546:36 - scenes we have to use signals and the
546:38 - game is still quite simple if it became
546:41 - more complex this would become a
546:43 - nightmare to manage
546:45 - what would be much better is to have
546:47 - some kind of code that updates the UI
546:49 - automatically as soon as we're updating
546:52 - the player's stats and all of this
546:54 - should work on a global level to make
546:56 - that work we will need set get basically
546:59 - what this one allows us to do is to run
547:02 - code whatever the value of a variable is
547:04 - changed or accessed for example what
547:07 - we're going to do in this part is
547:09 - whenever the health of the player
547:10 - changes we want to update the UI from
547:13 - the globals file which we can do quite
547:16 - easily using set get so let's look at
547:19 - that back in Godot before we can start
547:22 - working on the actual set get we have to
547:24 - make a few more changes at the moment
547:27 - let me work inside of the item we are
547:31 - getting the type of Health when we are
547:34 - creating an item and this also updates
547:37 - the color however when we run on body
547:41 - entered we are running add item and this
547:44 - happens inside of the player and in
547:47 - there we are currently not checking if
547:49 - we are updating the health
547:51 - which isn't possible because if I look
547:54 - at the globals there we have an amount
547:56 - for the lasers and for the grenades but
547:58 - there's nothing for health for now let's
548:00 - say I want to create another variable
548:02 - that I'm simply going to call Health
548:05 - and this is going to get a default value
548:07 - of 60. the value here once again doesn't
548:10 - matter although for the health bar it
548:12 - would be easier if you choose a value
548:14 - between 0 and 100. now that we have that
548:17 - I want to work inside of the item I want
548:20 - to update the global health
548:22 - which once again is going to be an if
548:24 - statement if the type is equal to health
548:28 - then I want to get below builds update
548:31 - the health amount and let's say increase
548:33 - it by an amount of 10. now this is
548:36 - already going to work for example after
548:38 - this line of code we could print globals
548:42 - and health
548:44 - and also just to test this I want to
548:46 - once again comment out the random item
548:48 - and replace it with health that is going
548:52 - to make testing all of this much easier
548:53 - so now let's run it and if I select it
548:57 - we are getting 70. which would be the
549:01 - start amount of 60 plus 10.
549:05 - the thing is though this did not update
549:07 - the UI and with our current tools there
549:10 - would be no easy way of doing that
549:12 - basically what we would have to do from
549:14 - inside of the item we would have to go
549:16 - to the player and then from the player
549:19 - we would have to emit a signal and then
549:22 - inside of the level we would have to add
549:25 - another function inside of on player
549:27 - update stats to make all of this work
549:29 - and once again this is not an efficient
549:32 - way of working
549:33 - instead I want to do all of this inside
549:36 - of globals specifically as soon as the
549:39 - health changes I want to run a function
549:41 - and to make that work Godot has an extra
549:44 - functionality what I want to do is I
549:47 - want to add a colon after the 60. once I
549:51 - have that I can basically add two
549:53 - functions inside of this variable the
549:56 - first one you just need the name would
549:58 - be called get
550:00 - and in there I am just going to add pass
550:02 - for now but we are going to add
550:04 - something else in there in just a second
550:05 - besides there you can add a set and this
550:09 - one needs a parameter called value
550:12 - also in there for now I simply want to
550:14 - add pass
550:15 - what this is going to do it is going to
550:17 - influence how we are working with this
550:19 - variable yet determines what happens
550:22 - when you are reading this variable and
550:24 - just to demonstrate right now inside of
550:27 - the item when the player is colliding we
550:30 - are updating the value of health and we
550:32 - are printing it which means we are
550:34 - writing on the value and we are reading
550:36 - the value and both of those are set with
550:38 - get and set
550:40 - if you are trying to read a value so for
550:43 - example using the print statement you
550:44 - would trigger the get function and if
550:46 - you're trying to update the value you
550:48 - will trigger the set function
550:50 - if we are trying to get the value I
550:52 - simply want to print health
550:54 - value what's red
550:57 - then I can duplicate all of this and
551:00 - instead of setting a value we can write
551:04 - the health value was changed
551:06 - and now if I run the game again we're
551:09 - going to get some really strange
551:10 - Behavior if I get the item
551:13 - we are getting an error that we have nil
551:16 - and interoperate up with plus and this
551:18 - is happening down there for now let me
551:21 - simply comment out this part so I can
551:23 - demonstrate what's happening
551:25 - now if I collide with it we get health
551:28 - value was red and null
551:30 - that is because when we are currently
551:35 - trying to print globals.health we are
551:38 - triggering this get method which is
551:40 - printing Health method was red on top of
551:43 - that this get method is always returning
551:46 - a value and if we don't specify that
551:49 - value it is going to be null and this is
551:51 - what we printed on the second time via
551:54 - this print statement
551:55 - most of the time print doesn't actually
551:58 - do anything complicated instead what he
552:01 - would do is you return the value itself
552:03 - of the variable that way when you try to
552:06 - print it let me demonstrate this
552:07 - actually
552:09 - you are simply getting 60 which means
552:12 - inside of the item we are trying to
552:15 - access globals.health so globals.health
552:18 - is looking at the variable it sees a get
552:21 - function and it returns whatever this
552:23 - function returns currently the value of
552:26 - the variable itself
552:28 - set Works somewhat in the same way
552:31 - although for this one we want to update
552:34 - the variable
552:35 - which means in this case to get this
552:38 - variable to work normally we want to get
552:40 - health
552:41 - and then set it to the value we are
552:44 - getting set is looking for a way to
552:47 - update this health and the value we are
552:49 - getting is any kind of change that could
552:51 - happen for example inside of item if we
552:55 - are updating
552:56 - globals.health by increasing it by 10
552:58 - then the resulting value is going to be
553:01 - the value of this parameter which means
553:03 - if I print the value run out of this
553:06 - again
553:09 - we are getting 70 twice
553:14 - because this value is the result of
553:19 - this operation and we are printing that
553:22 - and we are setting it as the value for
553:24 - health which means we are updating this
553:27 - variable
553:29 - the best way to think about set get is
553:31 - that we are simply attaching two
553:32 - functions to a variable one is triggered
553:35 - when we are getting the value the other
553:37 - is triggered when we are setting the
553:38 - value that's literally all that's
553:40 - happening here and all of that is really
553:43 - useful because now we can run other
553:45 - functions once this value is updating
553:48 - the way we would be using this is in my
553:51 - case I created a new signal
553:55 - and this signal I call Health
553:58 - change
553:59 - and as soon as we are updating the
554:02 - health value so we are setting a new
554:04 - value I want to emit this health change
554:07 - so Health change dot image
554:11 - and this health signal we can capture
554:13 - everywhere because globals is available
554:15 - globally so for example inside of the UI
554:18 - we can also work with it although for
554:21 - that to work we first of all have to
554:23 - work inside of the ready function
554:25 - because right now if I simply run the UI
554:29 - on its own so I'm simply running this
554:31 - one scene which doesn't do anything but
554:34 - if I click there on remote we have
554:37 - globals and inside of globals we can
554:40 - emit a signal
554:43 - but this signal right now is not
554:45 - connected to the UI script this we have
554:48 - to do manually
554:50 - but that is quite easily done all we
554:53 - have to do is get the global script and
554:55 - then connect a signal the signal we want
554:58 - to connect is called health
555:01 - underscore change Kudos predicting it
555:03 - already and if we're getting that signal
555:05 - we want to run a function for example
555:08 - this could be update elf actually to be
555:11 - a bit more specific update Health text
555:13 - now next up we have to create this
555:16 - function and let me put it
555:19 - somewhere here
555:21 - I want to update Health text which is a
555:23 - function
555:24 - and this one for now is going to print
555:28 - hello builds and then the health that
555:32 - the player has
555:33 - next up inside of the item I don't want
555:37 - to print globals.health anymore just to
555:40 - keep things simple also inside of
555:43 - globals we are not printing anything so
555:47 - now if I run this again we should only
555:49 - see 70 once and we do and this 70 we are
555:54 - printing from inside of the UI
555:58 - this function to be a bit more specific
556:00 - but we don't actually want to print it
556:02 - instead
556:04 - we want to get the health bar and then
556:06 - update the value and for that like we
556:09 - have done with the other nodes I want to
556:12 - on ready write a variable let's call it
556:15 - the health
556:16 - bar
556:18 - this one has to be a texture progress
556:21 - bar
556:22 - and the value for that we can simply
556:24 - drag in there I want to get this texture
556:27 - progress bar
556:28 - drag it so I can capture it in a
556:30 - variable
556:31 - now that I have that I can get the
556:34 - health bar and set the value and the
556:37 - value should be globals.health
556:40 - and with that we are good to go if I now
556:43 - Run the game and I collect the item
556:47 - we are changing the health amount now if
556:51 - you look at this closely you can see the
556:53 - value changed and that is because if I
556:56 - go back inside of texture progress bar
556:59 - we have a minimum value a maximum value
557:02 - and then a start value of 80. which is
557:06 - different from what we have inside of
557:07 - globals in there we are starting with
557:10 - there we have globals we are starting
557:12 - with 60. so this we have to update that
557:16 - we are going to do inside of the UI we
557:19 - have ready and there we want to get
557:23 - the health bar and then set the value to
557:28 - low builds
557:30 - DOT health
557:33 - and now if I run this
557:36 - we have slightly more than half of the
557:37 - health and if I collect the item we are
557:40 - increasing it by an amount of 10. also
557:43 - this code is now a bit inconsistent
557:45 - because I'm using a function for the
557:47 - laser and the grenade but for the health
557:50 - I am setting the value individually so
557:52 - for that I want to use the function as
557:55 - well
557:56 - and that's feeling a bit cleaner
557:58 - with that we have the health
558:00 - functionality and I really hope you get
558:03 - a sense of why this kind of system is
558:05 - much more efficient we are basically
558:08 - bypassing the player entirely so while
558:11 - for the laser and the grenade we have to
558:13 - go through the player and then emit a
558:16 - signal Health doesn't need any of that
558:18 - we are simply working inside of the item
558:22 - and in the app we are updating the
558:25 - global Health amount and that is
558:27 - literally it we don't do anything else
558:29 - the entirety of the logic happens inside
558:32 - of globals and in there we're updating
558:34 - the value and if that is the case we are
558:37 - emitting a signal
558:39 - and then this signal is telling the UI
558:42 - in there to update
558:45 - the health text just imagine we had a
558:48 - much more complex game across lots of
558:51 - scenes and maybe a level is inside of
558:53 - another scene and this scene could be
558:55 - inside of another scene we would have to
558:57 - use signals consistently across multiple
558:59 - scenes which would get incredibly
559:01 - confusing but with our system we are
559:05 - always targeting the UI basically
559:07 - directly and on top of that we are
559:09 - addressing it from the global scope so
559:11 - from globals.gd Let's do an exercise to
559:14 - make sure you understand I want you guys
559:17 - to update the grenade and Laser logic to
559:19 - also use set get like we have done for
559:21 - the health part
559:23 - on top of that remove the signal logic
559:25 - so we're not cluttering up the code most
559:27 - of you now and try to implement that
559:32 - I want to start working inside of
559:34 - globals.gd because in there we have to
559:37 - add setget to laser amount and Grenada
559:40 - mount
559:40 - although we don't actually have to
559:43 - update the get functionality because
559:45 - this part we don't really want to update
559:48 - and Godot is perfectly happy to only
559:51 - cover one of them we could simply delete
559:53 - get and the code would still work just
559:55 - fine meaning now whenever I update
559:57 - Health we are getting the same
559:59 - functionality which saves us a bit of
560:02 - writing
560:03 - on the laser Mount I want to add a set
560:06 - function the parameter you can call
560:08 - whatever you want but it is basically
560:09 - always called value
560:12 - and now I want to get the laser amount
560:14 - and set it equal to this value
560:16 - on top of that this I also want to add
560:19 - for the grenade although for that
560:22 - I want to update the grenade amount
560:25 - and this we can now use to emit a signal
560:28 - like we have done for the health
560:30 - and right now we only have a signal for
560:33 - health but I think we could have the
560:36 - same signal for all three of these
560:38 - variables which means I don't want to
560:40 - have a health change I want to have a
560:43 - stat change signal so let me rename
560:45 - things stat change
560:47 - and this signal I want to admit when any
560:50 - of these values changes once I have that
560:53 - I can work inside of UI and I want to
560:57 - check if we have a stat change if that
561:01 - is the case I want to run a different
561:04 - function right now we have update Health
561:06 - text I want to rename this to update
561:09 - stat text now Godot is going to complain
561:12 - because this function doesn't exist but
561:14 - we can create it quite easily
561:17 - I want to have a function called update
561:20 - stat text it doesn't need any parameters
561:22 - and in there all we have to do is to
561:25 - call the same three functions we have
561:27 - already created
561:29 - like so and then we should be good to go
561:33 - although before we can test all of this
561:35 - we have to get rid of the earlier
561:37 - functionality
561:38 - so inside of the layer
561:42 - we are currently having the add item
561:44 - function and this I don't want to run
561:46 - anymore but I do want to copy the two if
561:48 - statements so let me cut them out and
561:51 - paste them inside of the item because
561:53 - these we are still going to need but we
561:56 - don't have to call Body dot add item
561:58 - anymore this should already be enough if
562:02 - I now run the code
562:04 - health is still going to work and I can
562:08 - get rid of the health for the type
562:10 - and get a random item again if I now run
562:13 - this again we get a laser item and this
562:17 - is updating our lasers and just to make
562:19 - this a bit faster let me add grenade for
562:22 - the type
562:24 - and this one is going to update our
562:27 - grenades cool
562:28 - so all of this is still going to work
562:31 - just fine
562:32 - which means inside of the player we can
562:35 - get rid of this function entirely on top
562:38 - of that inside of the level I can
562:40 - minimize this and now the player
562:44 - for the node doesn't need the update
562:47 - stats signal anymore so I can disconnect
562:49 - this one and then inside of the player I
562:53 - can remove this signal entirely
562:56 - if I run the entire code again we are
562:58 - still getting our laser updates and
563:02 - everything else should still work just
563:03 - fine with that I really hope you get why
563:06 - this kind of system is incredibly
563:07 - powerful we are basically inside of the
563:10 - item simply updating the global amount
563:13 - for the health the lasers and the
563:14 - grenades and then inside of globals we
563:18 - are emitting a signal whenever any of
563:20 - these values change and then this signal
563:22 - we are capturing right away inside of UI
563:24 - and simply updating the text there's
563:27 - only one more thing to do and that is
563:29 - that the debugger is unhappy so let's
563:31 - click on it and right now we have on
563:34 - body entered but the body we're not
563:37 - actually using which means I can add an
563:40 - underscore and run this again
563:43 - and now Godot is happy again
563:45 - and the rest is still working just fine
563:47 - perfect with that we have a really
563:49 - important functionality to keep our game
563:51 - more organized we are nearly done with
563:53 - the items the last thing that we have to
563:55 - do is to spawn them from crates and
563:57 - toilets right now we only have a single
564:00 - item and we have to place it manually
564:02 - which I guess works fine but I would
564:04 - rather have it so the player has to
564:06 - shoot at toilets and crates and then we
564:08 - are spawning the items most of that we
564:11 - can already do quite easily so let's get
564:13 - started
564:15 - back in Godot let me first of all
564:17 - explain what I want to do I want to
564:19 - reopen a great that we created earlier
564:22 - than a toilet we made and on top of that
564:26 - we had an item container which is empty
564:30 - right now but it's the parent of the
564:32 - crate and the toilet
564:34 - and basically what I want to do is to
564:37 - have it so that when the player is
564:38 - shooting at these objects then we are
564:40 - spawning the items and to test all of
564:43 - that a bit better inside of the outside
564:45 - level I want to attach a crate and I
564:49 - want to attach the toilet and let me
564:52 - just move them around
564:54 - like so
564:56 - and just as a reminder what we have done
564:58 - so far if I run the game I can shoot at
565:01 - the toilet we're getting toilet I can
565:03 - shoot at a crate and we are getting
565:05 - great
565:06 - we're getting this by the way if I open
565:08 - the script inside of the crate we have a
565:11 - hit function that is printed great and
565:13 - inside of the toilet We have basically
565:16 - the same thing except we are printing
565:18 - toilet on top of that we have a parent
565:20 - script item container
565:22 - this one has a ready function and a hit
565:24 - function
565:26 - that being said though I don't need
565:28 - either of those anymore so let me just
565:30 - get rid of them instead here's what I
565:32 - want to do when we are hitting either of
565:34 - these objects let's say we are hitting
565:36 - the crate then I want to spawn items in
565:40 - the direction this crate is facing which
565:42 - right now for both of them would be down
565:45 - but this should be flexible so for
565:48 - example if I take the toilet and
565:50 - transform it and give it a rotation of
565:52 - 90 degrees if that is the case then the
565:55 - iTunes should be spawning in this
565:57 - direction
565:58 - to make that work we have to get started
566:01 - inside of the item container parent
566:03 - script in there I want to create a
566:06 - variable called Direction actually let's
566:09 - call it current direction
566:12 - this one has to be a vector 2 and the
566:16 - value we are going to use will be Vector
566:19 - 2
566:20 - then down and this Vector we want to
566:24 - rotate so I'm going to use the rotated
566:26 - method and then pass in the current
566:29 - rotation of the object so what does that
566:32 - mean we are starting with a vector down
566:35 - and this Vector I am using
566:38 - because both of these objects by default
566:40 - are pointing downwards the toilet
566:43 - currently is pointing to the left
566:45 - because we have rotated it but if we
566:47 - didn't add any rotation so if I remove
566:50 - the transform property from the toilet
566:54 - then the toilet would also be facing
566:56 - downwards
566:57 - because of that I am using a downward
566:59 - facing vector and this Vector I am
567:01 - rotating to whatever rotation we are
567:03 - applying to the object
567:05 - and since we have this inside of the
567:07 - parent object inside of the children I
567:10 - could print
567:11 - the current
567:14 - Direction quite easily and let's do this
567:16 - both for the toilet and for the crate
567:22 - also you might have noticed that Kudos
567:25 - complaining that current direction isn't
567:27 - declared that is because I didn't save
567:29 - the parent script if I do that the error
567:31 - disappears
567:33 - now let's try all of this again if I
567:35 - shoot at the toilet we get 0 and 1 and
567:38 - the same for the crate this is because
567:40 - we haven't rotated either of them
567:43 - but if I now go to the editor and for
567:46 - the toilet let's say 180 degrees and for
567:50 - the crate
567:51 - I want to have a transform of negative
567:54 - 90 degrees
567:55 - if I now run this again
567:57 - I can shoot at the toilet and we are
568:00 - still getting 0 and 1. same for the
568:02 - crate so what's going wrong here
568:05 - well the issue is that
568:09 - all of this is being calculated before
568:11 - we are actually creating the node the
568:14 - way you want to think about it is that
568:15 - we are running all of this before the
568:18 - ready function
568:20 - and then when we are running the ready
568:23 - function that is where we are applying
568:27 - rotation and this is essentially where
568:30 - we are creating the node
568:32 - and since we're doing all of this before
568:34 - that the rotation hasn't been applied
568:37 - but that you can fix quite easily all
568:39 - you have to do is add on ready and then
568:43 - it's going to work so let me get rid of
568:46 - the comments because they're not
568:47 - necessary
568:49 - and now if I run this again
568:51 - I can shoot at the toilet and we get a
568:54 - very small amount of X we can just
568:55 - ignore that the minus one for y is
568:57 - important this is a vector pointing
568:59 - upwards and for the crate we get one for
569:02 - x and a really small amount for y
569:05 - this is a vector pointing to the right
569:09 - with that we have a direction and a
569:12 - really important thing in Google to
569:13 - understand is this on ready
569:16 - basically the way you want to think
569:18 - about it is that all of the actual
569:20 - attributes of a node are being created
569:22 - when you are adding this node to a scene
569:24 - which is happening inside of the ready
569:26 - function so if you try to get a rotation
569:29 - before that it wouldn't work because the
569:31 - rotation hasn't been applied
569:33 - if you play around with this for a while
569:35 - it should become quite straightforward
569:37 - but this can be confusing in the
569:38 - beginning but alright with that we have
569:41 - a direction next up we have to actually
569:44 - create some items and I want to start
569:46 - working inside of the create
569:49 - in there we currently have a Sprite
569:51 - another Sprite for the lid and then a
569:53 - collision shape
569:55 - although while looking at this I think
569:57 - we can refine all of this because later
569:59 - on for the toilet we also have a spray
570:01 - Duty for the base but on top of that I
570:03 - want to add a lid and since I want to
570:06 - have the same setup for the crate and
570:07 - the toilet I'm going to work inside of
570:09 - the parent
570:10 - in there I'm going to rename the Sprite
570:13 - too deep we so far have into base right
570:16 - and then I'm going to add another Sprite
570:19 - to the
570:20 - right on top of the other Sprite and I'm
570:22 - going to call this the lid Sprite
570:26 - because of that change inside of the
570:28 - crate and the toilet we are going to
570:30 - lose all of the content of the node so
570:33 - if I get rid of this Sprite redeem that
570:35 - only existed inside of the crate
570:37 - we have a base Sprite and a lid Sprite
570:39 - but neither has any texture
570:41 - what happened here is that as soon as
570:43 - you're renaming a node you are losing
570:45 - all of the content of this node in the
570:47 - children so in this case bassbrite used
570:49 - to be a Sprite 2D with a texture but
570:52 - this changed because we renamed it
570:53 - inside of the parent
570:55 - but this we could fix quite easily back
570:57 - inside of Graphics there we have objects
571:00 - and then objects we have the box with
571:02 - bass and lit base is going to go into
571:05 - the base Sprite and lid Sprite is going
571:07 - to get the lid
571:09 - then the lid I want to move a bit
571:11 - downwards something like this
571:13 - now we have to create again and then for
571:16 - the toilet we also have a base Sprite
571:18 - this one is there
571:21 - and then besides that we have a lid
571:23 - Sprite that is literally just a lid
571:27 - this I also want to move down using the
571:29 - arrow keys
571:31 - and there we go now we have a toilet
571:33 - and this kind of setup is a bit cleaner
571:35 - because we can simply make changes
571:37 - inside of the parent and then update
571:39 - them inside of the children besides that
571:42 - there's one more thing I want to add to
571:44 - the parent and that is just going to be
571:47 - in node 2D
571:49 - which I want to rename right away to
571:52 - spawn
571:53 - positions these spawn positions if I
571:56 - work with them inside of the crate are
571:58 - going to get lots of marker 2DS they are
572:02 - essentially going to be a random
572:04 - position on top of the crate
572:06 - that will be a starting position for an
572:09 - item and let me just create a whole
572:11 - bunch of them
572:13 - all across this box and then we're going
572:16 - to pick a few random ones of them and
572:19 - use them to spawn an item
572:21 - something like this looks pretty good so
572:25 - now we can work inside of the script and
572:27 - update the hit function for the crate as
572:30 - soon as this crate is hit first of all I
572:33 - want to hide the lid Sprite this I can
572:35 - do super easily I want to get the lit
572:37 - Sprite
572:39 - and then hide it if I now Run the game
572:42 - and shoot at the lit it disappears or if
572:45 - I shoot at the crate the lid disappears
572:46 - to be more specific besides that I want
572:49 - to implement something like we have done
572:51 - for the laser where this hit function is
572:54 - emitting a signal to the level
572:56 - and in the level we are creating an item
573:00 - so as a comparison inside of the player
573:04 - once the player is inside of process
573:09 - activating the primary action we are
573:12 - emitting a laser signal and this lays a
573:15 - signal inside of the level if I find
573:18 - that one on player laser is creating one
573:21 - instance of a laser scene
573:24 - the same thing I want to do for the
573:27 - crate
573:28 - so in there I want to get some kind of
573:30 - signal we could call this one open and
573:33 - this I want to emit
573:36 - now this signal does not exist right now
573:38 - and I could create it inside of this
573:40 - script but that wouldn't be ideal
573:43 - because I also want to use it inside of
573:45 - the toilet as a consequence this is
573:47 - going to be created inside of the item
573:49 - container
573:51 - I want to create a signal that is going
573:53 - to be called open
573:54 - this signal will have two parameters we
573:58 - have a position and we would have a
574:01 - direction now that we have that back
574:03 - inside of the crate
574:06 - stops complaining about this signal so
574:09 - that's a good start
574:11 - although now I have to figure out a
574:13 - position and a direction the direction
574:15 - is easy because we literally can just
574:18 - use the current direction and we are
574:20 - good to go
574:22 - however we will need a position and this
574:25 - one is currently not available and for
574:28 - that I want to basically pick one of
574:30 - these spawn positions at random and then
574:32 - use that position for that let me create
574:35 - another variable and call it pause and
574:38 - all I really want to do is get my spawn
574:41 - positions
574:44 - and on there we have a method called get
574:47 - child
574:49 - your child wants to have an index where
574:51 - the first item would be index 0 and the
574:53 - last index would be the length of the
574:55 - list
574:55 - which means in there we want to create a
574:58 - random number with Rand I with a maximum
575:01 - length of the amount of children inside
575:04 - of this node and this we can also get
575:06 - once again I want to have my spawn
575:08 - positions and on there I want to get
575:11 - child Hound
575:14 - and this definitely has to be extended
575:19 - for this one we are looking at the spawn
575:21 - positions this one contains lots of
575:23 - marker 2DS and we want to get one child
575:26 - for this child we're using an indexing
575:28 - and we are basically creating a random
575:31 - number between 0 and the length of the
575:34 - list this would give us a node but that
575:37 - wouldn't be a position yet to get the
575:39 - actual position we have to get the
575:42 - global
575:43 - position of that node
575:46 - and then we have a position so now we
575:49 - have all we need for this signal which
575:51 - means I can return to the outside level
575:55 - and if I select the create go to node we
575:59 - have an open signal we could be
576:02 - connecting this one to the outside level
576:03 - right away but that wouldn't be great
576:06 - there are a couple of problems we have
576:08 - right now there are two problems
576:10 - actually that we really have to be aware
576:12 - of the first one is that let's say right
576:15 - now I have a single crate so I could
576:17 - connect this to the outside level and it
576:19 - would work just fine
576:21 - but I don't want to have just one crate
576:23 - I want to have multiple crates so let me
576:25 - create multiple
576:27 - and now I could get every single one of
576:30 - these crates and connect all of them
576:32 - individually but the outcome would be
576:35 - that I have a ton of functions
576:38 - so we are replicating the same signal
576:41 - over and over again which would really
576:43 - not be ideal you would have to wire up a
576:46 - new function for every single instance
576:48 - of this great scene
576:50 - on top of that the other problem is that
576:52 - I don't actually want to connect this
576:54 - crate signal to the outside level script
576:57 - I want to connect it to the actual level
577:00 - script so the parent but this I can't do
577:03 - right now because we are in the outside
577:05 - scene so if I click on Create and open
577:08 - we can only target the outside script
577:11 - both of these problems can be solved
577:13 - With A New Concept
577:15 - the concept we need is called groups and
577:18 - basically what that means is that any
577:19 - note or scene can be added to a group
577:22 - and Via that you can Target this scene
577:25 - or node from anywhere inside of the game
577:27 - and do anything to it for example you
577:29 - could run a function or connect a signal
577:31 - or literally anything else this system
577:33 - is incredibly flexible back inside of
577:36 - the level you can see currently we are
577:38 - looking at the signals but if you look
577:40 - to the right of that we have groups and
577:43 - right now this is not something we have
577:45 - used at all the way you would be using
577:47 - it for example I want to add my item
577:49 - container to a group for that I would
577:53 - have to have the item container selected
577:55 - and then give it a group name let's say
577:58 - container
578:00 - if I now click on ADD we get an entry
578:02 - inside of the manage groups tab on top
578:05 - of that next to the icon we have this
578:07 - symbol which is telling us that this
578:09 - node is in a group container this also
578:12 - applies to the children so great will
578:15 - also be inside of this group and the
578:18 - same for the toilet and that is
578:21 - information that we can use for example
578:23 - if I am shooting at the crate we could
578:27 - get the tree and then get notes in group
578:34 - this is a method that wants one argument
578:36 - the name of the group we are looking for
578:39 - now we would be getting all of the
578:41 - instances of a scene inside of this
578:44 - group meaning I could print it so print
578:47 - all of that and now whenever I am
578:50 - shooting at a crate
578:52 - we're getting two objects we're getting
578:53 - a crate and a toilet because we have an
578:56 - instance of a toilet and an instance of
578:58 - a crate
578:59 - since both of those are part of the
579:01 - container group they will be displayed
579:03 - here so they are easily accessible
579:06 - although I don't want to use that inside
579:08 - of the crate itself instead I want to go
579:12 - to the level
579:14 - and in there let me maximize the window
579:17 - I want to make it so that once the ready
579:21 - function is called meaning once the
579:24 - outside or the inside level is ready
579:26 - then I want to get all of the scenes
579:28 - inside of this group
579:30 - I want to get
579:32 - the tree and then get notes in group
579:37 - specifically the container group
579:41 - this would return an array of notes
579:44 - which I can use right away inside of a
579:47 - for Loop let's say for container in get
579:50 - three
579:51 - and all of the nodes inside of this
579:54 - group
579:54 - I could use that for example to print
579:56 - all of the containers
579:58 - with that set up I can run the game
580:00 - again and now once the scene is ready we
580:03 - get create and toilet on top of that if
580:06 - I now duplicate this crate and add
580:09 - multiple instances and I could also
580:11 - duplicate the toilet and now if I run
580:13 - all of this again
580:15 - we're getting all of these objects that
580:17 - being said I don't actually want to do
580:19 - that I want to have one crate and one
580:21 - toilet for now now we have access to all
580:24 - of the scenes that we want to connect to
580:26 - a signal and for that we can run another
580:29 - function
580:30 - I want to get the container and then use
580:32 - the method connect
580:34 - this one wants to have two arguments
580:36 - first of all the signal we want to
580:38 - connect which in our case is open
580:41 - this is the open we have gotten from the
580:44 - item container this open here
580:46 - and if that signal is received we want
580:49 - to run another function which I'm going
580:51 - to call on
580:53 - container opened this function doesn't
580:57 - exist right now and let's create it
580:59 - right below I want to have on container
581:02 - opened they had two parameters we need
581:04 - for this one a position and a Direction
581:07 - although for now inside of this function
581:10 - let me simply print container opened
581:14 - now if I run this again
581:17 - I can shoot at the toilet and nothing is
581:19 - going to happen because this one doesn't
581:21 - have the function but if I shoot at a
581:23 - crate we get container opened
581:25 - which means that
581:27 - this open.emit is working just fine and
581:31 - that means inside of the level we can
581:34 - use this function to spawn items like we
581:37 - have done for the laser which means once
581:40 - again we want to pre-load a scene so all
581:43 - the way at the top VAR item underscore
581:46 - scene which is going to be a packed
581:49 - scene I want to pre-load
581:52 - and item scene and I hope I find it
581:56 - really quick this item.tscn is what we
581:59 - want to pre-load once we have that
582:02 - inside of the container I want to create
582:06 - VAR item which is going to be an item
582:09 - scene and an instance of that
582:13 - and this shouldn't be instance this
582:15 - should be instantiate
582:16 - this item right now is going to be in
582:19 - position 0 and 0 so I want to update the
582:22 - position to the pause we are getting
582:25 - from the parameters the direction I'm
582:27 - going to ignore for now so next up what
582:30 - I want to do is to add this item to the
582:33 - current scene
582:34 - although for that inside of the level
582:38 - I want to add another node which would
582:41 - be a node 2D and this node 2D I want to
582:45 - have below projectiles I'm going to call
582:47 - this one items
582:50 - and to this items
582:54 - I want to add the child of the item we
582:57 - have just created
582:59 - with that we should already have
583:01 - something working if I run the game now
583:04 - I can shoot at the crate and nothing is
583:08 - going to happen although if I shoot
583:10 - multiple times you can see if you look
583:12 - at the bullets or the grenades or the
583:14 - health if I shoot at this they are
583:15 - updating
583:17 - which basically means that as soon as
583:19 - the item is spawned it is being
583:21 - destroyed
583:23 - and I think that is because inside of
583:25 - the item container under Collision we
583:28 - haven't updated these layers
583:30 - so it shouldn't be on the player layer
583:33 - it should be on the object's layer
583:36 - and for the Collision we can see the
583:37 - player the enemies and the projectiles
583:41 - but we should not be able to see layer 5
583:44 - because there we have the items if we
583:47 - are now trying all of this again then I
583:50 - can shoot at a crate and we are getting
583:52 - something there are a couple of issues
583:54 - right now
583:55 - the first one the most obvious one to be
583:58 - honest
583:59 - is that our items are below the crate
584:01 - and the toilet that I can fix very
584:03 - easily we simply have to put the notes
584:06 - below the item that means I can try it
584:08 - again now and we should have the items
584:10 - on top
584:11 - and that is looking quite a bit better
584:14 - on top of that the player can also
584:16 - collide with them and we are updating
584:19 - the lasers and the grenades although I
584:22 - can't collide with all of them because
584:24 - they're on top of the crate but that we
584:26 - can fix very soon
584:27 - if you look at the bottom we have Godot
584:30 - being incredibly unhappy
584:32 - the first one is quite easy we're not
584:34 - using Direction so this we can ignore
584:36 - for now for this function we are going
584:38 - to use Direction in just a second so
584:40 - this one's fine the next one though is
584:42 - in Red so this one is quite a bit more
584:45 - serious and that is that on container
584:48 - open can't change the state while
584:49 - flashing queries and use call deferred
584:51 - or set the Third
584:53 - this issue is happening because we are
584:55 - spawning an area on top of a static body
584:59 - and Godot doesn't like that because it
585:01 - messes with physics calculations there
585:04 - is a lot of stuff in the back end but
585:06 - don't worry too much about it basically
585:07 - whenever you're getting this kind of
585:09 - error you can either get it when you're
585:11 - updating an attribute or when you're
585:13 - calling a function in our case we are
585:16 - getting the error inside of level if I
585:19 - find it really quick there we have level
585:21 - and let me actually expand all of this a
585:23 - bit we are getting the error on this
585:26 - line that we are calling a child and
585:28 - Godot wants this to be the third which
585:30 - is very easily done all we have to do is
585:33 - to not call this method right away
585:34 - instead we want to call it
585:37 - deferred call the third wants two
585:40 - arguments
585:41 - the first one is the function you
585:43 - actually want to call which in my case
585:45 - would be ADD child
585:47 - the second argument would then be the
585:49 - argument you want to pass into this
585:51 - function or method
585:53 - for this particular case we only have a
585:55 - single argument although if you had
585:57 - multiple you would add multiple
585:59 - arguments after this
586:00 - now I can run all of this again and if I
586:03 - shoot at the crate Godot keeps on being
586:06 - happy so this is a really good sign
586:08 - everything else also still works so I am
586:11 - quite happy with it
586:13 - so with that we connect the items and we
586:16 - get them into the level there's only one
586:18 - last thing to cover and that is I want
586:20 - to move the items when they are being
586:22 - created
586:23 - you could achieve that either with an
586:25 - animation player or with tweens I am
586:27 - going to use tweens
586:28 - and for that first of all when we are
586:31 - creating the item I want to give that
586:33 - one a direction the direction we are
586:35 - getting from the container
586:37 - which means in there I want to get the
586:39 - item
586:40 - and give it a direction the direction is
586:43 - simply going to be the direction we are
586:45 - getting from the parameter this we can
586:47 - now use inside of the item in the ready
586:50 - function from there I want to create a
586:53 - couple of tweens to animate the position
586:56 - and the size we can do both actually
586:58 - let's get started with the more
587:00 - important one I want to move this item
587:02 - for that I want to define a Target
587:05 - position
587:07 - this target position is going to be the
587:10 - current position of this node
587:12 - and then plus a direction and this I
587:15 - want to multiply with some kind of
587:17 - distance
587:19 - now for that we have a couple of issues
587:22 - we do right now doesn't have a direction
587:25 - and it doesn't have a distance now
587:27 - direction we would be getting from the
587:29 - level what we are doing here although
587:31 - inside of this script we want to have a
587:34 - variable ready for it which means when
587:37 - I'm creating this node I want to create
587:40 - a VAR Direction which has to be a vector
587:44 - 2.
587:45 - besides that I also need a distance
587:49 - which has to be an integer and for this
587:52 - I want to have a random number a random
587:54 - number I get with Rand I range short for
587:58 - random integer from a range in there we
588:01 - have to get a from into two value in my
588:04 - case I want to have a distance between
588:05 - 150 and
588:08 - 250 pixels
588:10 - once we have that Godot is happy again
588:13 - and now we have a Target position for a
588:16 - tween
588:17 - which means we can now create let's call
588:20 - it a movement
588:22 - Queen which we are creating with create
588:25 - Queen
588:26 - on this movement tween I want to Tween a
588:31 - property and the property is going to be
588:34 - the node itself which I haven't covered
588:36 - yet so the object if you want to cover
588:39 - the actual object itself you would
588:41 - simply type self in there
588:43 - if you're doing that you're always
588:45 - targeting the node that has the script
588:47 - attached in this case this area 2D next
588:50 - up we will need a property to Target in
588:53 - our case this will be the position then
588:56 - we need a final value which in our case
588:58 - will be the Target and finally we need a
589:00 - duration in my case I think half a
589:02 - second is pretty good
589:04 - oh and this shouldn't be Target this
589:06 - should be Target position if I now run
589:08 - all of this I can shoot at the crate and
589:12 - this is looking like a nice movement so
589:15 - I am quite happy with this
589:17 - although what we could also do instead
589:20 - of spawning a single item I want to
589:22 - spawn multiple which means inside of the
589:26 - crate currently we are meeting this
589:28 - signal only once
589:31 - but that seems kind of low so in my case
589:33 - I want to run this emit multiple times
589:35 - what I can do with 4i in range let's say
589:39 - five
589:41 - and then I want to emit this thing five
589:43 - times if I now run all of this again and
589:46 - I shoot at the crate and this almost
589:49 - works
589:50 - the issue is
589:52 - we are declaring this position once and
589:55 - then when we are meeting the signal we
589:57 - are always emitting the same position to
589:59 - fix that I want to move the position
590:01 - into this for Loop
590:04 - that should fix it if I now run this
590:07 - again that is feeling drastically better
590:10 - although you can see we can spawn
590:13 - infinite items and if I collect all of
590:15 - them the player has infinite resources
590:18 - so not ideal yet but we are certainly
590:20 - making progress
590:22 - the last thing we need for the basic
590:24 - functionality inside of the item
590:26 - container I want to add another variable
590:28 - and let me put it there I want to have
590:31 - VAR opened which has to be a Boolean and
590:35 - by default this one is going to be false
590:39 - then back inside of the crate
590:43 - I only want to do all of that
590:46 - if not
590:48 - opened
590:51 - then I have to indent the entirety of it
590:53 - and finally at the end of it I want to
590:56 - set open to true
590:59 - with that we should be only able to
591:01 - shoot at the crate once or while we
591:03 - could shoot at it more of times but we
591:05 - only get items once and this is looking
591:07 - really good cool the items still work
591:10 - and all of this is working just fine
591:13 - now this section has gotten really long
591:14 - so let's do an exercise and then we are
591:16 - done
591:18 - the exercise is going to be to work out
591:21 - the toilet so whenever the toilet gets
591:22 - it it should spawn a single item on top
591:25 - of that there should only be a single
591:27 - spawn position that is going to simplify
591:29 - the entire thing quite a bit but pause
591:31 - the video now and try to implement that
591:33 - one
591:36 - let's open the toilet and right now we
591:40 - have all of the images we have a
591:42 - collision shape and we have spawn
591:43 - positions but spawn positions doesn't
591:45 - have any children and just to keep
591:47 - things consistent I'm going to give it a
591:50 - marker 2D
591:52 - this marker 2D is already in the right
591:54 - position I think this center of the
591:57 - toilet is pretty good which means next
591:59 - up we can work on the functionality
592:01 - right now we only have a basic function
592:04 - that prints the current direction not
592:06 - amazing
592:09 - although for that we can actually copy
592:11 - quite a bit from the grade as a matter
592:13 - of fact let me copy all of it and paste
592:16 - it into the toilet
592:18 - now pasting code is not really a good
592:21 - solution
592:22 - what would be more elegant here is to
592:24 - have the item container with a function
592:26 - that covers most of the logic and then
592:28 - inside of the toilet or inside of the
592:31 - crate you are executing shorter pieces
592:33 - of code that rely on the function from
592:35 - the parent but I think inheritance can
592:37 - get really complicated really fast and I
592:39 - do want to keep it simple so for now
592:41 - we're going to copy a tiny bit of code
592:43 - but let's go through it on the first
592:45 - line we have function hit and this one
592:47 - is totally fine next one if not opened
592:50 - I'm happy with that one as well then we
592:52 - have let's sprite.height this one is
592:54 - still working just fine
592:56 - all the way at the end we have open
592:57 - being true this one also works perfectly
593:00 - okay
593:01 - the only change we have to make is that
593:03 - we don't want to have five random
593:05 - positions
593:06 - we only need a single position and that
593:09 - is this marker 2D
593:11 - which means I want to cut out open image
593:15 - and then get rid of the rest
593:18 - now Godot is going to complain that
593:20 - identifier pause is not declared
593:22 - position simply does not exist
593:25 - for that I want to create another
593:27 - variable called position and the
593:29 - position we are getting from the market
593:31 - to B and this one has a global position
593:37 - and with that we are pretty much done if
593:40 - I now run out of this shoot at the
593:42 - toilet we are getting one item the crate
593:45 - is also still working and well with that
593:48 - I am quite happy
593:50 - although really quick before I finish
593:52 - there's one more thing that I have
593:54 - forgotten inside of the item when we are
593:58 - creating it I want to have two tweens
594:00 - one is going to be for the movement and
594:02 - the other is going to be for the size
594:04 - although to be a bit more specific here
594:06 - I only want to have a single tween so
594:08 - let me rename movement tween simply to
594:12 - Queen the other thing besides the
594:15 - position that I want to Tween is going
594:17 - to be between property
594:21 - with self again and the property I want
594:24 - to Tween is going to be the scale or
594:28 - this one the final variant has to be a
594:31 - vector 2 and the default size is one and
594:34 - one so this is what I am going to keep
594:36 - next up we have a duration let's say 0.3
594:40 - seconds finally this is not going to do
594:43 - anything by default because our starting
594:45 - size is 1 and our end size is one so we
594:48 - are transitioning between two equal
594:50 - values it's not going to do anything
594:52 - you fix that I want to add one more
594:55 - method and it is called ROM
594:57 - this defines our start value which also
595:00 - has to be a vector 2 and in this case
595:02 - it's 0 and 0. this is telling between to
595:05 - start from zero and then go to the end
595:07 - value
595:08 - with that we are nearly done although
595:11 - this isn't going to work perfectly you
595:13 - can already see it and there well this
595:17 - is looking a bit weird
595:18 - the major issue is that we are calling
595:20 - these twin properties in sequence
595:22 - meaning we are first moving it with the
595:25 - original size and then we are updating
595:27 - the size to fix that one we have to get
595:29 - the tween and then set parallel and this
595:33 - should be true
595:34 - and this should fix basically everything
595:36 - let's try and if I now shoot at a toilet
595:40 - that's looking better and that's also
595:42 - looking better
595:44 - let me try again because we only got
595:46 - blue items
595:48 - and yeah this is quite good now we're
595:51 - done with this part
595:52 - next up we can work on the enemies
595:55 - for this part I want to make a couple of
595:57 - updates to the inside level and add a
595:59 - few minor fixes there is no theory for
596:03 - this part let's Jump Right In once again
596:05 - back in Godot there is first of all the
596:08 - main issue that we have a single crate
596:11 - and we have one toilet but we want to
596:13 - have multiple of them and also not in
596:15 - this position as a consequence let me
596:18 - get rid of both of them
596:21 - on top of that I realized that the
596:23 - toilet is a bit too large
596:26 - which we can fix quite easily with
596:28 - transform I'm going to set it to a size
596:31 - of 80 percent
596:33 - and that way we should have a much more
596:36 - realistic proportionate toilet
596:39 - also we have to update the Collision
596:40 - shape and that's feeling better that
596:43 - isn't actually the issue I wanted to
596:45 - work on first but basically for the most
596:47 - part we are going to work inside of the
596:50 - inside level and in there I want to add
596:53 - a whole lot more static objects for
596:56 - example in there we would have the bed
596:57 - we would have the item containers we
596:59 - would have the toilet and on top of that
597:01 - I am also going to add a few additional
597:03 - things but that's going to come later so
597:06 - let me go back to the outside level
597:08 - because if I run the game
597:10 - and I go to the outside house there is
597:14 - one thing that doesn't work right now if
597:16 - I enter the house the camera tween is
597:19 - not working anymore the reason for that
597:21 - is that we have the house inside of the
597:26 - ground
597:27 - somewhere there
597:29 - and this house is sending a signal we
597:32 - have player entered and player exited
597:34 - but those we originally connected to the
597:37 - level node
597:39 - which means in there we have on-house
597:41 - player entered and on-house player
597:43 - exited but this shouldn't be inside of
597:45 - the parent level it should be in the
597:47 - outside level I have to reconnect both
597:50 - of these signals although first of all
597:52 - inside of the level
597:54 - I want to cut out these two functions
597:57 - because they are
597:59 - not working and not needed anyway
598:02 - with that we can work inside of the
598:04 - outside.gd script and connect the signal
598:08 - for on-house player entered and on top
598:12 - of that also player exited and now let
598:15 - me extend this script and paste in what
598:18 - I have cut out earlier
598:20 - the actual tweens do not change so I can
598:23 - literally just copy cut and paste them
598:25 - into the appropriate function and we
598:28 - should be good to go
598:29 - these other functions should be deleted
598:32 - also I can get rid of twin parallels and
598:36 - the comment
598:37 - and with that we should have the
598:40 - previous functionality let's try
598:45 - I can now once again walk to the house
598:48 - and if we are entering
598:51 - we are back to a working camera
598:53 - transition so this is feeling much
598:56 - better
598:57 - also the code is much more organized
598:59 - because these two functions should only
599:02 - be available inside of the outside level
599:04 - it wouldn't make sense to have them
599:05 - inside of the parent class because they
599:07 - are not needed there and that covers
599:10 - another super important part next up I
599:13 - think I have realized there's another
599:15 - issue and that is that we don't need
599:18 - these functions anymore so UI update
599:21 - grenade text is not needed because we're
599:23 - doing all of that via the global script
599:25 - anyway
599:27 - which means I should be able to get rid
599:28 - of all of that
599:31 - and the game should still work just as
599:34 - before
599:36 - and that is looking pretty good
599:38 - cool
599:39 - now all of this is looking significantly
599:42 - cleaner
599:43 - that means we can come to the actual
599:45 - important part of this section I want to
599:47 - flesh out the inside level for that I'm
599:50 - going to hide the directional light so
599:52 - we can see a bit better what's going on
599:54 - in here
599:56 - I mostly want to work inside of the
599:58 - ground and then add a few more objects
600:02 - for example we have a bet that we could
600:06 - be adding Deb on a spawn in the center
600:08 - and also I want to lock every other
600:12 - scene that we don't need so items we
600:15 - don't need and with that we should be
600:17 - able to select just a bat and then place
600:20 - it in wherever we want to have it
600:22 - also we can duplicate it and place it in
600:25 - a couple of positions where it could fit
600:28 - well yes one
600:31 - there
600:32 - with a transform of 180
600:36 - and then duplicate it one more time and
600:39 - place it somewhere here
600:40 - and the same thing we can do for the
600:42 - other room
600:45 - something like this
600:48 - and once again this is going to be a
600:51 - fairly boring process I am not going to
600:54 - add too much but in your own game play
600:56 - around with this a lot besides that what
600:59 - I also want to add and this is much more
601:01 - important I want to add the crate
601:04 - and I want to add the toilet
601:08 - and I guess before we use the toilet let
601:11 - me compare it to the player and I think
601:13 - that's a reasonably sized toilet maybe
601:15 - still a tiny bit large but it's doable
601:18 - this toilet I now want to place into
601:21 - certain positions let's say we can put
601:23 - one right here I think for real game you
601:26 - would want to create an actual bathroom
601:28 - but uh I'm not too concerned
601:34 - let's say we can put one there
601:37 - this would be minus 90 actually just 90.
601:42 - and a similar one for the other room
601:47 - and besides that I also want to work
601:49 - with the crate and on this one we have
601:51 - to check where the front is so this part
601:53 - is the front of the crate it's a tiny
601:55 - bit hard to see
601:56 - but this one I want to place let's say
601:59 - here
602:01 - then I can place another one there and
602:04 - since the player is going to need lots
602:06 - of ammunition you do want to have quite
602:08 - a few of them
602:10 - um I guess we could put one there ish
602:13 - then another one
602:17 - could be here and this one I do want to
602:20 - rotate by 180 degrees then we can copy
602:24 - it again
602:25 - [Music]
602:26 - and place a couple all the way in but um
602:31 - of this room
602:34 - let's do one more time with a bit more
602:36 - rotation so this one should have a
602:39 - rotation of 90 degrees
602:42 - and we can place it here later on I am
602:45 - probably going to add lots of enemies so
602:47 - it's a bit more difficult to reach this
602:49 - area let's do one more crate here
602:53 - and that should be quite a bit of stuff
602:56 - I guess I should minimize things and
602:59 - there is one item that shouldn't be
603:02 - there
603:03 - this item I want to get rid of right
603:06 - away
603:07 - I think same at the outside level there
603:09 - we have one item that should be here
603:12 - so let's get rid of it
603:14 - and now I can try all of this the
603:17 - outside level is still looking just fine
603:19 - so I can go inside and we should be
603:22 - seeing the crates and shoot at it we are
603:25 - getting the items
603:28 - we also have the bed and religions also
603:32 - work toilet is also good cool next up in
603:36 - the inside level we also can add
603:40 - inside of ground
603:42 - the steam vents so the particle thingy
603:46 - that I worked on earlier and this one I
603:49 - just want to place in a couple of
603:50 - positions
603:52 - so it's not getting too annoying I guess
603:55 - we can put one here ish and then another
603:59 - one
604:01 - there and
604:04 - third one here it doesn't really matter
604:07 - for this tutorial but obviously the more
604:10 - time you spend on this kind of work the
604:12 - more realistic your game is going to
604:13 - feel and look
604:15 - I guess here works
604:19 - once again let's try all of this and if
604:22 - I go inside
604:25 - we have steam vents and collision is
604:28 - also working and once again this is
604:30 - feeling quite nice
604:32 - notice here also that none of these
604:34 - objects I have added the steam vents the
604:37 - beds the toilets they don't interact
604:39 - with the light whatsoever meaning I
604:41 - could place them here and nothing would
604:42 - happen
604:44 - that is by Design
604:47 - the more objects you make interactive
604:49 - with light the more the performance hit
604:51 - you are going to suffer so you want to
604:53 - be careful with that and these steam
604:55 - vents don't really need light alright
604:57 - with that we are nearly done there's
605:00 - just one more thing that I do want to
605:01 - add inside of level I want to add
605:04 - another node 2D and this one has to be
605:08 - below the ground
605:11 - I call this one decals
605:14 - although right now this wouldn't do
605:16 - anything what this one is going to get
605:18 - if I work inside of the let's say inside
605:20 - level
605:22 - in graphics we have decals and there we
605:25 - have brushes Moss blood ceiling holes
605:27 - and some random stuff
605:29 - most importantly inside of brushes we
605:31 - have lots of random brushes and those we
605:34 - could use to add some dirt on top of the
605:37 - tile map
605:39 - although right now if I minimized the
605:42 - ground we have decals to D and if I add
605:45 - a Sprite in there
605:47 - and add a texture it wouldn't be visible
605:50 - because it is below the tile map
605:53 - so what could we do about that and there
605:56 - are two solutions either you could take
605:58 - this Sprite 2D and the tile map and
606:01 - simply drag them in the scene tree
606:03 - before the decals node 2D that way we
606:06 - could see this one once again but that's
606:08 - not exactly what I want to do because
606:10 - that would clutter up the scene I want
606:13 - to have all of this a bit more organized
606:15 - instead I want to do something else if I
606:18 - have for example this Sprite 2D selected
606:21 - and as a reminder this is the background
606:24 - dirt graphic so this we absolutely have
606:27 - to have in the background as the deepest
606:29 - layer
606:30 - everything else has to come on top of
606:33 - that one to ensure that you can look
606:35 - inside of the inspector we have another
606:37 - tab called ordering and there you have a
606:40 - z index a z index in a 2d game
606:43 - determines what is drawn on top of each
606:45 - other right now every object we have
606:48 - ever worked with has a z index of zero
606:51 - however if I increase this for the
606:53 - ground by 1 the ground is on top of
606:55 - everything else except the lights are
606:57 - getting a bit weird
606:58 - this number can also go negative so now
607:01 - the Z index for the ground is negative
607:03 - one and every other object has is the
607:06 - index
607:07 - of zero which means that
607:11 - a ground will always be below everything
607:14 - else
607:15 - so in this case what we could be doing
607:16 - is that the Z index for the ground to
607:19 - negative two and for the tile map to
607:21 - negative one
607:24 - and that way we can once again see the
607:27 - decals again the advantage of that
607:30 - solution is that now the game is much
607:32 - more organized or at least reasonably
607:35 - more organized you can tell that this
607:37 - scene is getting quite busy because we
607:39 - have quite a few notes in there and well
607:41 - it's becoming a proper game
607:43 - it's still quite small but you get the
607:46 - idea although right now what I want to
607:48 - do is I want to lock the items and the
607:51 - ground make sure I can't select any
607:53 - children for the ground now I can work
607:55 - inside of decals and move stuff around
607:59 - and those are simply a couple of
608:01 - Graphics that I want to modulate so they
608:04 - are looking dark and green they should
608:07 - be much darker and a bit less green and
608:11 - a bit less transparent
608:14 - and now we have a Graphic that gives the
608:17 - entire thing a bit more texture so we
608:20 - could put this for example there
608:22 - let's scale it up and now if I run the
608:25 - game and
608:27 - go inside again you can see this is
608:31 - feeling much better
608:33 - and for some reason in the outside level
608:36 - the gate has disappeared
608:38 - although if I hide the ground nodes we
608:42 - can see it again which means something
608:44 - went wrong here with the Z index we can
608:46 - fix that by increasing the Z index by
608:48 - one
608:50 - not quite sure what happened here but
608:52 - well it's working for now
608:55 - anyway I went to work inside of the
608:57 - inside level and duplicated D cards and
608:59 - while we're doing that I want to
609:02 - make everything else invisible so it's
609:05 - not getting distracting I guess we can
609:07 - put one more of those here and then
609:10 - another one you can also rotate it or
609:14 - scale it up although you do have to be
609:16 - quite careful with that but basically
609:18 - just take a couple of them and then move
609:21 - them around next up I want to add
609:23 - another Sprite to the with a different
609:26 - kind of brush doesn't really matter
609:28 - which one it is
609:30 - this one
609:32 - also has to get visibility modulate much
609:35 - darker green ish and less transparency
609:39 - and definitely more dark
609:41 - I guess a bit less transparency
609:45 - and there we have another one and pretty
609:48 - much all you want to do is add lots of
609:50 - those all over the game
609:54 - so that the bass actually looks like it
609:57 - was infested by some random bugs and
610:00 - aliens
610:03 - I am probably going to add quite a few
610:05 - more and speed the entire thing up
610:07 - that's why you don't have to watch me do
610:09 - this for five minutes
610:35 - all right with that we have added quite
610:38 - a bit so the last thing we have to do is
610:40 - to make everything else visible again
610:42 - and now let's try the game
610:46 - and there we can see that this is
610:50 - feeling significantly better
610:52 - now the game doesn't look as clean
610:54 - anymore and we have a lot more texture
610:56 - to it
610:58 - so this is feeling a lot more scary and
611:02 - everything else is still working
611:03 - perfectly fine
611:06 - cool I am quite happy with this although
611:09 - there's one issue I've just noticed in
611:11 - the outside level if I run all of this
611:14 - again
611:14 - and notice when I am entering the gate
611:18 - the player is now below the house
611:22 - this is because the gate now has a z
611:25 - index of one but the player has a z
611:27 - index of zero
611:29 - because of that the gate is always on
611:32 - top of the player
611:33 - now in my case I'm going to set the Z
611:36 - index for the player to 2 and call it a
611:38 - day
611:39 - for real game you probably want to have
611:41 - a bit more of planning in terms of what
611:44 - layer gets what Z index otherwise you
611:46 - can get quite lost with this one and it
611:49 - might get a bit annoying
611:51 - but now if I'm trying this again
611:54 - this is much better
611:56 - now there's one more thing that I do
611:58 - want to do inside of the inside level
611:59 - and for that I want to hide the other
612:02 - stuff again
612:04 - we now have lots of stuff for the ground
612:06 - but on top of that especially for this
612:09 - area I want to add a bit of infestation
612:12 - and for that once again inside of the
612:15 - parent level I want to add another node
612:19 - 2D and this node 2D I'm going to call
612:23 - infestation
612:25 - this infestation is going to be right
612:27 - next to the ground and basically what
612:30 - this one is going to be if I work inside
612:32 - of the inside level we have infestation
612:34 - and it's there if you look under
612:39 - I think it is under objects and there we
612:42 - have infestation
612:44 - there we have a corner large line stuff
612:46 - like that I basically want to take all
612:49 - of them and drag them into this area
612:52 - and now we have added them to the parent
612:54 - node so let's move them to their proper
612:58 - place infestation
612:59 - also I want to lock the decals so
613:03 - they're not getting in the way
613:05 - inside of infestation now we have all of
613:08 - these random objects that look like
613:13 - let me break them apart all of these are
613:17 - random infestations that give the level
613:18 - once again a bit more detail and those I
613:22 - just have to place in the proper way for
613:24 - example this one would be a corner piece
613:26 - more or less so I can place it roughly
613:30 - here
613:32 - doesn't have to be perfect but once
613:34 - again the more time you spend on this
613:36 - the better it's going to look and if you
613:38 - duplicate nodes you can also make all of
613:42 - this a lot nicer
613:48 - so I want to keep on adding more nodes
613:51 - and this is
613:54 - a fairly boring tasks so this is also
613:57 - going to be sped up
614:06 - I guess this one is serviceable so I am
614:10 - reasonably happy with that now we have a
614:12 - problem though and that is that none of
614:14 - these have any kind of collision
614:16 - and you could approach that in two ways
614:19 - one would be to turn every single one of
614:21 - these Sprites into a separate scene and
614:24 - then place them all again that obviously
614:27 - is not what I'm going to do that would
614:28 - take way too long
614:30 - instead what you can do inside of these
614:33 - infestations we can add a static body 2D
614:37 - and for that first of all once again
614:39 - you want to update the Collision layers
614:41 - this one should only be in the objects
614:43 - layer and you can see the player the
614:46 - enemies and the projectiles
614:49 - now that we have that I want to add a
614:51 - collision polygon 2D
614:54 - this one is going to get a rough shape
614:56 - to block out one area and you really
614:59 - don't have to be too precise for this
615:01 - sort of thing
615:02 - the play-up would never notice this will
615:05 - be one area now we can do all of that
615:07 - again
615:08 - and cover an area down there although
615:12 - for that I want to get rid
615:15 - this shape
615:17 - and then do something like this
615:21 - one more time and this static body area
615:24 - should cover
615:25 - this bit
615:29 - then I can duplicate It Again cover the
615:31 - other area
615:37 - copy it once again this area now
615:42 - and
615:44 - I think you get the idea
615:49 - I'm going to this corner and then ignore
615:51 - the other two parts because they're not
615:53 - terribly important so this bit gets this
615:56 - area
616:00 - all right with that we have most of the
616:02 - areas and let's just say the player can
616:04 - walk on top of the other bits
616:06 - so with that we have inside of one node
616:09 - 2D a lot of extra decoration for this
616:13 - one part now before we test all of this
616:15 - I have to re-enable the lights and the
616:17 - player or rather make all of this
616:19 - visible again and now if I go in
616:27 - we are getting a lot of dark atmosphere
616:30 - especially when I'm getting to the area
616:32 - at the bottom you can see there we have
616:35 - some spooky stuff and the collisions
616:37 - work perfectly fine
616:41 - also all the way at the bottom we should
616:43 - be having the crates and they also work
616:46 - once we have enemies this is going to
616:48 - get even better
616:50 - but well with that I think we have added
616:53 - a whole bunch of stuff and I guess let
616:56 - me talk about really quick if I switch
616:58 - off the light
617:00 - when you're creating some area like this
617:02 - most of these little infestation Sprites
617:05 - are so simple they don't really need
617:07 - their own scene
617:09 - all you would do is create a static node
617:11 - a Sprite and then a collision shape but
617:13 - since this is so simple you could just
617:15 - add them directly and then add the
617:17 - Collision shape to the parent level in
617:20 - this case the inside level
617:21 - sometimes you might want to reuse them
617:23 - and then having separate scenes might
617:25 - make sense so this is totally fine for
617:28 - the next part we are going to start with
617:30 - the enemies the first enemy I want to
617:32 - work on is the Scout enemy this one is
617:35 - the easiest one it's basically going to
617:39 - be a static object that can shoot like
617:41 - the player which means we can already
617:43 - reuse all of the laser logic besides
617:46 - that the only difficulty is that we have
617:49 - to alternate between the two guns of the
617:51 - Scout but that should be quite easily
617:53 - done once again back in Godot I first of
617:56 - all want to close a couple of things we
617:59 - don't need the item anymore we don't
618:01 - need the UI we don't need the item
618:03 - container we don't need to create and we
618:06 - don't need the toilet
618:08 - instead I want to create a new scene
618:11 - and the root node is going to be a
618:14 - character body 2D I can rename this one
618:17 - right away to a
618:19 - Scout and then save all of this
618:22 - it should be in scenes and in there we
618:25 - have enemies currently there's a drone
618:27 - in there we're going to update this one
618:29 - as well but for now I want to work on
618:31 - the scout
618:32 - this scout like any other object is
618:35 - going to need a Sprite and he is going
618:38 - to need a collision shape 2D
618:42 - the Sprite we are getting from Graphics
618:44 - there we have enemies and there we have
618:47 - the scout
618:48 - I want to drag this one in there
618:51 - and there's one thing we have to change
618:54 - already
618:55 - and that is that the Scout has to face
618:57 - to the right that way we can use the
618:59 - look at function and make a point at the
619:02 - player easily
619:03 - so we have to give him a rotation of 90
619:06 - degrees and then align him to something
619:08 - like this
619:10 - so that we can give him a collision
619:11 - shape and for this one I'm going to use
619:13 - a circle shape
619:16 - something like this and let's align the
619:18 - Sprite a bit better
619:20 - I suppose I should mention that in just
619:23 - a bit we're going to spawn the lasers on
619:25 - top of the guns and if you made the
619:27 - Collision shape something much larger
619:29 - something like this or you added a
619:31 - collision polygon and covered the entire
619:33 - area you would get an error later on
619:35 - where the lasers would Collide
619:37 - immediately with the shape of the enemy
619:40 - as a consequence we have to have this
619:43 - shape away from the guns like we have
619:45 - done for the player I didn't mention it
619:47 - back then but here's the player and the
619:49 - gun of the player is outside of the
619:51 - Collision area
619:53 - because of that the lasers when we are
619:56 - shooting from the player do not collide
619:58 - with the player itself if you wanted to
620:00 - have more specific Collision shapes then
620:03 - you would have to add for example a
620:04 - timer to each laser to only have a
620:06 - collision after let's say half a second
620:09 - but in my case I don't really care about
620:11 - any of this this Collision shape is
620:13 - totally fine
620:14 - which means now inside of the outside
620:17 - level
620:18 - I want to add this enemy although I want
620:21 - to keep everything organized and for
620:23 - that inside of level I will add another
620:26 - note 2D which is going to be for the
620:30 - enemies
620:31 - and the enemies could be right next to
620:33 - the player that looks about right
620:37 - if I now save the scene go to the
620:39 - outside level we have enemies in there I
620:43 - want to add this scout
620:45 - right now Godot is complaining that the
620:47 - Scout doesn't have a shape that is
620:49 - because I didn't save the Scout scene if
620:51 - I do that all of that looks just fine
620:54 - and let's move him to a slightly better
620:57 - position
620:59 - somewhere up here
621:01 - I can now Run the game and we have a
621:05 - scout so that is kind of working
621:07 - although before we do anything else
621:10 - there's one thing I forgot inside of the
621:12 - Scout we have to work on the collisions
621:14 - because right now Godot thinks that this
621:17 - scout is a player
621:19 - so the Scout shouldn't be on the player
621:21 - layer it should be on the enemies layer
621:23 - it can however see the player it can see
621:26 - the other enemies and it can see
621:28 - projectiles
621:29 - with that we can add a script to the
621:32 - Scout and the most important thing for
621:35 - now is a process
621:38 - function what I want to do in there is
621:41 - to make this enemy look at the player so
621:44 - we have to get the player position
621:47 - somehow this is a bit of an issue and
621:51 - let me explain why
621:52 - currently we have one player and one
621:55 - enemy and the enemy doesn't know where
621:57 - the player is
621:59 - we could store the position of the
622:01 - player in the outside scene or we could
622:03 - work with signals to make the player
622:05 - signal where he is but this would be
622:07 - kind of annoying because if we're
622:08 - working inside of the inside level then
622:10 - we would have to redo all of that once
622:12 - again
622:14 - but we already have a much better way
622:17 - and that is inside of the globals if I
622:21 - find it
622:23 - globals in there
622:25 - I want to store the player position so
622:29 - VAR let's call it player position this
622:33 - has to be a vector 2. although for now
622:36 - we are not going to give it a value
622:38 - instead what we are going to do inside
622:41 - of the player and we do have a ton of
622:43 - scripts but the player is here whenever
622:48 - we are moving the player this is
622:50 - happening inside of process after we are
622:52 - running move and slide
622:55 - I want to get globals and in there we
622:58 - have the playup position the value that
623:01 - this one is going to get will be the
623:03 - global position of the player this is
623:05 - allowing us inside of this scout this
623:08 - one
623:08 - you simply get the low volts and then
623:11 - the player position
623:14 - remember globals is available everywhere
623:16 - which means enemies have access to it as
623:19 - well
623:20 - now I can run out of this again and the
623:23 - enemy is looking at the player so this
623:25 - is working just fine
623:28 - I can also shoot at the enemy and the
623:30 - laser disappears so we are making quite
623:32 - a bit of progress before we do anything
623:34 - else Godot is complaining that we have a
623:36 - debugger error that the parameter Delta
623:39 - is never used to keep godo happy I want
623:41 - to add an underscore if I now run this
623:44 - again Godot is Happy perfect
623:48 - with that we can add a few more things
623:51 - first of all I want to add an area 2D
623:55 - this area to D I'm going to rename to
623:59 - let's call it an attack area
624:02 - this area has to have a collision layer
624:05 - it should be on layer 5 items and zones
624:07 - and you can only see the player
624:10 - this attack area is going to get a
624:13 - collision shape to the which is going to
624:15 - be a circle shape 2D this circle shape
624:19 - 2D should be fairly large something like
624:23 - this if I try this in the outside scene
624:25 - this is going to be the area where the
624:28 - Scout starts to attack the player you
624:31 - probably want to play around with the
624:32 - distance just see what feels good
624:35 - this area we can now use with a signal
624:39 - where I want to have body entered and on
624:42 - top of that also body exited all I
624:45 - really want to do is to add another
624:47 - variable call it player near by which is
624:52 - going to be a Boolean that by default is
624:54 - false
624:56 - and as soon as the player is entering
624:59 - the attack area we're going to set this
625:01 - player nearby to true
625:03 - and if the player is exiting the area
625:06 - it's going to be false again that we can
625:09 - use inside of process that if the player
625:12 - is nearby
625:14 - then I want to print
625:16 - it tag
625:19 - let's try this one and now we get attack
625:23 - although if I move outside of the area
625:25 - the attack is stopping but if I go back
625:28 - in we can see it again
625:30 - meaning this is working already
625:32 - next up we have to add the laser Logic
625:35 - for that we will need a few more notes I
625:39 - first of all want to have another node
625:41 - 2D which I'm going to rename to laser
625:44 - spawn positions
625:48 - they had two positions we have actually
625:50 - this is what I mentioned at the
625:51 - beginning of this section we have two
625:53 - guns and we want to alternate between
625:55 - them
625:56 - which means for the laser spawned
625:58 - position
625:59 - we have a marker 2D for one gun let's
626:03 - put it there
626:04 - and then a second position for the other
626:07 - gun besides that I want to add one more
626:09 - node which would be a timer and this I
626:13 - want to rename to let's call it a laser
626:16 - cool down back in the script of the
626:20 - Scout I want to send a signal that I
626:24 - called laser this laser will need a
626:27 - position and a Direction
626:29 - and if you remember from about 10 hours
626:32 - ago this is just about the same thing we
626:35 - have done for the player if I open that
626:37 - one we have a laser signal with a
626:40 - position at the direction and this we
626:43 - are emitting in this if statement which
626:47 - in turn will be captured by the level in
626:49 - the on player laser function we are
626:51 - creating one instance of laser and
626:53 - overwriting the position and the
626:55 - direction
626:57 - we are going to reuse all of this in
626:59 - just a second
627:00 - for now though inside of the Scout we
627:03 - have to emit the signal with a position
627:05 - and the direction this is going to
627:08 - happen if the player is nearby and
627:10 - actually we only want to look at the
627:13 - player if the player is nearby
627:15 - oh and there's one thing that I did
627:17 - forget to mention that we also want to
627:19 - have a cooldown between the lasers like
627:22 - we have done for the player there we
627:23 - have Ken laser this one is connected to
627:26 - a timer on timer timeout can laser is
627:29 - true
627:29 - I want to do the same thing for the
627:31 - scout
627:32 - which means I am going to create another
627:34 - variable and we can call this one can
627:37 - laser as well also this is going to be a
627:41 - Boolean by default this one is going to
627:43 - be true
627:44 - inside of the if statement if the player
627:47 - is nearby I want to add another if
627:49 - statement that if can laser if that one
627:53 - is true I want to get VAR position which
627:57 - is going to be some kind of vector true
627:58 - besides that I also want to get a
628:01 - direction which also needs to be a
628:04 - vector 2. once I have all of that I can
628:07 - get the laser and then emit the signal
628:10 - with the position and the direction
628:13 - other than that we have to add the logic
628:15 - for the timer we want to set can laser
628:19 - to volts and on top of that we want to
628:22 - get the laser
628:24 - cool down and start the timer
628:28 - this time up we have just created laser
628:31 - cooldown and if this timer times out
628:34 - then I want to set an laser back to true
628:39 - I hope all of this at this point is
628:41 - becoming fairly straightforward if you
628:43 - fold along it should be but if you want
628:46 - to have a reminder when I did all of
628:48 - this for the player we had pretty much
628:50 - the same logic so check this one out if
628:52 - you are totally confused now though we
628:55 - have another issue one that we have
628:57 - already seen the Scout at the moment is
629:00 - emitting a laser signal however inside
629:04 - of the outside level we are not
629:06 - capturing it
629:07 - there's no function either inside of
629:09 - outside or inside of level that would
629:12 - look for the signal from the scout
629:15 - we could connect all of that manually so
629:18 - I could click on the Scout and then
629:19 - connect the laser to the outside scene
629:21 - but that would be incredibly annoying
629:24 - once we have multiple Scouts we would
629:26 - have to connect every single Scout to
629:28 - make sure they can shoot a laser
629:30 - but this problem we have encountered
629:32 - before specifically inside of the
629:35 - container section we had the issue that
629:38 - we wanted to connect all of the
629:39 - containers to the signal and for that we
629:42 - used groups the same thing I want to do
629:45 - for the scout
629:46 - which means with discount selected I am
629:48 - going to go to groups and let's call
629:51 - this one Scouts now the Scout has a
629:54 - group and this we can use inside of
629:56 - level
629:57 - I want two for scout in get 3 and get
630:04 - notes in group the group we are looking
630:07 - for is called Scouts I think I called it
630:10 - Scouts yep and then inside of this for
630:13 - loop I want to Target every single Scout
630:16 - and connect
630:17 - the laser signal to a function since we
630:22 - already have an on player laser function
630:24 - I want to call this one on Scout
630:28 - laser
630:29 - this one doesn't exist right now so
630:31 - let's create it right away function on
630:36 - Scout laser this one will need a
630:39 - position and a direction the arguments
630:42 - we are getting from the signal
630:44 - for now let's simply print Scout is
630:49 - shooting
630:50 - this should already work if I now Run
630:53 - the game we can see Scout is shooting
630:55 - about once a second
630:57 - so I am quite happy with this that's a
630:59 - really good start
631:01 - however we are not actually getting
631:02 - lasers for that we have to make two
631:05 - changes the first one is we have to copy
631:08 - all of this so we actually create an
631:11 - instance of a laser besides that inside
631:13 - of the Scout we have to get an actual
631:16 - position and a Direction so let's get
631:19 - started with the position for now I'm
631:21 - going to keep things a bit more simple
631:23 - and I am simply going to get from Scout
631:27 - the first marker too deep for the
631:29 - position which means I can simply drag
631:31 - this in there and then get the global
631:35 - position of this marker for the
631:37 - direction we are going to need a tiny
631:39 - bit of math and once again I covered
631:41 - this a while back inside of the player
631:43 - if you want to have the direction
631:45 - between two vectors inside of the player
631:48 - we have done this all the way at the top
631:50 - we have to get a Target position and
631:53 - from that subtract the current position
631:54 - and then normalize everything
631:58 - so inside of the Scout I want to get the
632:01 - low builds dot player position that
632:05 - would be our Target from that I want to
632:07 - subtract the current position
632:10 - of the Scout all of this is going to
632:13 - return a vector and this Vector I want
632:16 - to normalize and that is going to give
632:19 - us a position and a direction this we
632:22 - can now use inside of level
632:25 - because in there we have on Scout laser
632:28 - which is carrying the position and the
632:30 - direction
632:31 - and for that we are going to reuse all
632:35 - of that and to make that a bit more
632:37 - organized I'm going to cut it out and
632:39 - then create another function let's call
632:42 - it create laser
632:44 - this grid laser is going to need two
632:46 - parameters for the position and the
632:48 - direction
632:50 - I am deliberately also naming them like
632:53 - I have done for onscout laser
632:55 - or for on player laser because that
632:57 - allows us to Simply call
633:00 - create laser and pass in the position
633:02 - and the direction if I'm doing that the
633:06 - player should still be able to shoot
633:08 - there we go this is working just fine
633:11 - all we have done is taking the logic we
633:13 - had sofa for the laser and place it
633:15 - inside of a function this is useful
633:17 - because now we can use the same function
633:19 - create laser with a position and the
633:23 - direction for the scout
633:25 - let's try this one and now
633:28 - we are getting
633:32 - lasers from the Scout and this seems to
633:36 - be working just fine
633:39 - so I am quite happy with this there are
633:42 - two more things to do inside of the
633:44 - Scout we are currently only using one of
633:47 - the guns I also want to use the second
633:49 - one besides that inside of the debugger
633:52 - we have two errors or two warnings that
633:55 - Godot isn't happy about fixing all of
633:57 - that is going to be your exercise
634:00 - so just to reiterate I want you guys to
634:02 - get the Scout to shoot from both guns
634:04 - and Alternate between them besides that
634:06 - fix the debugger warnings pause the
634:08 - video now and try to figure this one out
634:13 - the easier bit to work on is to debug a
634:16 - warning you can actually click on them
634:18 - the dough is bringing you to the
634:20 - function where the error is happening
634:21 - right now the issue is that we are
634:24 - having these two functions that use the
634:27 - body parameter but we don't actually use
634:29 - this parameter so Godot isn't happy
634:32 - about that and wants us to add an
634:33 - underscore before them if I now run all
634:35 - of this again the debugger is happy
634:38 - so this is working just fine also I
634:40 - should test if the Scout is the shooting
634:42 - at us if we're moving outside of the
634:44 - attack area and this is working fine
634:48 - next up the more important bit I want
634:51 - the Scout to shoot alternately between
634:53 - the guns
634:54 - and this you could approach in a couple
634:56 - of ways and I think there's a smart way
634:59 - to write the least amount of code
635:02 - let's say I want to create another
635:04 - variable for the marker note
635:09 - to get the marker node we want to get
635:12 - the laser spawn positions and this has
635:17 - two children we want to get one of them
635:19 - which we can get with get child
635:21 - get child wants to have an index and in
635:24 - our case we ever have 0 or 1. these are
635:28 - the only two options
635:30 - and we want to have a quick way to
635:31 - switch between them although first of
635:33 - all for now I want to get the first note
635:36 - this is the one we already have down
635:38 - here which means if I replaced all of
635:41 - this with the marker node we shouldn't
635:44 - see a difference let's try it and now we
635:48 - are Yep this is looking good same result
635:53 - what you can also do is write true in
635:55 - there
635:56 - it seems a bit weird but if I run this
635:58 - we are still getting the same outcome
636:01 - although a slight difference now we are
636:05 - getting the right gun
636:07 - whereas if we write volts in there we
636:11 - would be getting the left gun
636:12 - and they can see we are using the left
636:15 - gun
636:17 - the reason why this is working is that
636:20 - godom like python is converting data
636:22 - automatically to suit its needs
636:25 - your child wants to have a number like 0
636:27 - or 1. with those converting faults to a
636:30 - zero and true to a one which will get us
636:33 - one of these children
636:35 - you could be more explicit about this
636:37 - and convert The Faults to a number using
636:42 - the int function although you don't have
636:44 - to
636:45 - and now all we have to figure out is how
636:47 - to switch between false and true every
636:49 - time we are shooting for that I want to
636:52 - create another variable
636:54 - let's call it VAR right on
636:58 - use this has to be a Boolean which by
637:01 - default is going to be true
637:04 - this red gun use we want to place
637:06 - into the getchild method after that I
637:09 - want to get write gun use and then
637:13 - assign it a new value the value has to
637:15 - be whatever write gun use is not so not
637:19 - right gun use if right can use is false
637:23 - then not red can use is going to return
637:25 - true and if right can use is true then
637:28 - not right can use is going to return
637:30 - false that way we are alternating
637:32 - between true and false which is exactly
637:35 - what we need for this one
637:37 - let's try it and
637:41 - there you can see we're using both guns
637:44 - in an alternating way so this is working
637:47 - really good
637:48 - with that we have the basics of a scout
637:51 - for the next part we are going to add a
637:53 - bit more interactivity I'll see you
637:55 - there at this point we have to scout
637:57 - unfortunately the Scout doesn't do very
637:59 - much it just shoots at us but we can't
638:02 - shoot back for that we want to connect
638:04 - the Scout to laser and to the grenades
638:06 - unfortunately at the moment the grenades
638:09 - don't work so let's work on that at the
638:12 - moment the grenades only explode which
638:15 - is basically an animation
638:17 - meaning they don't damage anything or
638:20 - more specifically they do not call the
638:22 - hit function and what is really
638:24 - important for this one is that as long
638:27 - as the grenade is exploding it should
638:29 - trigger the hit function the laser is
638:32 - only calling the hit function once and
638:34 - that's perfectly fine but for the
638:36 - explosion I want there to be some damage
638:38 - as long as any kind of entity is
638:40 - standing inside of the blast radius and
638:43 - for this part there is pretty much
638:45 - nothing new as a consequence all of this
638:48 - can be an exercise right away
638:50 - I want you guys to implement the grenade
638:52 - mechanic for that number one I want you
638:55 - guys to place the enemies and the player
638:57 - inside of another group called entity
639:00 - any node can be in multiple groups so
639:02 - the Scout for example could be in a
639:04 - scout group and in an entity group
639:07 - besides that if the grid is exploding
639:09 - check the entity and the container nodes
639:12 - after that if they are close trigger the
639:15 - hit function and make sure that you're
639:17 - continuously triggering it as long as
639:19 - the explosion is playing for this
639:21 - exercise I want to give you two tips
639:23 - number one is you can combine two arrays
639:26 - with a plus so if you add one array to
639:29 - another array you are getting a third
639:30 - array with all of the elements besides
639:33 - that there is a distance to method in
639:35 - every single Vector with all of that you
639:38 - should be able to implement all of this
639:39 - yourself so pause the video and try to
639:41 - work it out
639:45 - first of all I want to open the grenade
639:47 - scene
639:49 - at the moment there isn't very much we
639:52 - have a collision shape we have to spray
639:54 - to the of the grenade then we have an
639:56 - explosion and the explosion is
639:58 - controlled by an animation player
640:00 - besides that we have a point light and
640:02 - this one is a blinking to show us that
640:04 - the grenade is working
640:07 - if we are opening the code you can see
640:10 - there really isn't very much in there
640:12 - I guess I should mention that we have
640:15 - autoplay blinking and this one changes
640:18 - the energy of the light and if the two
640:21 - seconds of the animation duration up we
640:23 - are calling the explode function this
640:26 - explode function which is playing the
640:28 - explosion animation and that one
640:30 - is going through all of the frames of
640:33 - the animated Sprite to update all of
640:35 - that first of all I want to create
640:37 - another variable let's call it explosion
640:42 - active
640:44 - this has to be a Boolean which by
640:47 - default is going to be false
640:49 - and as soon as we're calling the explode
640:51 - function we want to set explosion active
640:55 - to row
640:58 - what that allows us to do is to use the
641:01 - process function
641:03 - and then check if explosion is active if
641:08 - that is the case for now I want to print
641:10 - explosion
641:14 - and with that let me return to the
641:16 - blinking animation and now if I run the
641:19 - game
641:20 - I can shoot a grenade and after two
641:23 - seconds we get explosion and we're
641:26 - getting this okay I should do this again
641:28 - and fix my typo explosion
641:32 - if I now run all of this again and not
641:35 - go into the inside level and shoot a
641:36 - grenade
641:37 - after two seconds we're getting
641:40 - explosion multiple times
641:43 - although at some point it stops because
641:46 - after the
641:48 - lay animation has finished so in the
641:50 - animation player we can look at the
641:53 - explosion animation
641:55 - once this animation is done we are
641:58 - destroying the entirety of the scene
642:01 - with Q3
642:02 - because of that the process function
642:04 - will not be called anymore
642:06 - also we're not going to use Delta inside
642:08 - of this function so let's add an
642:09 - underscore next up if that is the case
642:13 - so we do have an animation I want to
642:16 - check
642:17 - or Target
642:20 - in let's call it actually targets just
642:23 - to keep it all a bit more readable
642:26 - if that is the case I want to get
642:28 - something like Target dot it
642:31 - although we want to add one more thing
642:33 - and that is if
642:35 - it in Target and only if that is the
642:40 - case we want to call the hidden method
642:42 - the issue we have right now is that
642:43 - there are no targets for that I want to
642:46 - create another variable
642:49 - this variable is going to be called
642:51 - targets and we get that with get
642:54 - re and then get notes in group
643:00 - for now I am only going to use the
643:02 - containers
643:04 - but later on we're going to add a bit
643:06 - more in there but for now we have all of
643:09 - the containers we're going through all
643:10 - of them and if there's a hit function in
643:13 - them we're going to call the hit
643:14 - function or method although I believe
643:17 - this should only be called container not
643:19 - containers but let's try this now if I
643:22 - go to the inside level and down there we
643:26 - have a great if I shoot a grenade at it
643:29 - and wait for two seconds there we go we
643:32 - now have the items but there's a bit of
643:34 - a problem and that is if I go to the
643:37 - other crates
643:38 - we can see they all have been triggered
643:40 - so this toilet was triggered and then we
643:43 - had a few more crates up here they have
643:46 - all been opened
643:48 - that is because as soon as we have
643:51 - explosion active we are running the hit
643:55 - method on every single Target but this
643:57 - obviously isn't what we want to do we
644:00 - only want to call the hit method if a
644:02 - Target is within a certain range of the
644:05 - explosion
644:06 - for that I want to create another
644:08 - variable let's call this one explosion
644:11 - radius
644:13 - this one has to be an integer which I
644:16 - want to set to 400.
644:19 - and then inside of the if statement if
644:23 - the explosion is active I want to get
644:25 - another variable let's call it in range
644:30 - this we are getting via the target
644:33 - and on there I want to get the global
644:35 - position this would be a vector 2. and
644:38 - this is what I mentioned earlier every
644:40 - Vector 2 has a distance
644:43 - to method and I just realized this
644:47 - doesn't work because we don't have the
644:49 - target I can fix that by moving this
644:52 - inside of the for Loop
644:53 - now we have access to the Target which
644:55 - is important because this gives us the
644:57 - position of the crate or the toilet so
644:59 - I'm checking the target Global position
645:02 - and I want to get the distance to the
645:05 - position of the grenade which we are
645:07 - getting with the global position of this
645:11 - one this is telling us now the distance
645:13 - between these two vectors if that number
645:16 - is smaller than the explosion
645:21 - radius
645:22 - only then do we want to call this hidden
645:25 - method which means we want to check if
645:27 - there's the method inside of Target and
645:30 - in
645:32 - range
645:34 - with that I can run the entire thing
645:36 - again and now if I shoot at the crate it
645:42 - should still work that's looking good
645:45 - if I however go to the toilet this one
645:47 - should still be closed and it is
645:49 - although I can still shoot at it and
645:50 - this one also work
645:53 - now for the distance you do have to
645:56 - experiment so if I shoot a grenade let's
645:58 - say here
646:01 - that shouldn't trigger it and it doesn't
646:03 - I shoot it here
646:05 - bill doesn't if I shoot it here that
646:07 - should triggered yeah and it does so
646:10 - obviously with the distances you do have
646:12 - to experiment quite a bit
646:15 - 400 might be a tiny bit large but these
646:18 - numbers are entirely up to you
646:21 - anyway though with that we have a
646:24 - process function and this one
646:27 - runs the hit method on the target but
646:29 - now the targets are only the crates in
646:31 - the toilets but we can update that to
646:33 - also incorporate the player and the
646:35 - scout
646:36 - let's have a look at the scout
646:39 - right now the Scout is in a single group
646:42 - the scouts
646:44 - but besides that I want to have another
646:46 - group called entity
646:49 - entities are supposed to be the objects
646:51 - that can move around in the game and be
646:53 - damaged I couldn't really think of a
646:54 - good name you might have called it
646:56 - damager builds but that sounded weird so
646:58 - I stuck with entity
647:00 - entities are going to be all of the
647:01 - enemies plus the player
647:04 - speaking of which we have to get the
647:06 - player seen and the player should also
647:09 - get the group entity
647:11 - that is going to give us the player and
647:13 - the scout
647:15 - with that we can return to the grenade
647:17 - and let me extend all of this because
647:20 - right now we are only getting the
647:22 - container but I want to get the
647:24 - container and the entities for that we
647:27 - can simply combine these two arrays
647:29 - meaning I want to get the tree again and
647:33 - on that I want to get notes in group and
647:37 - the group I'm looking for is entity I
647:39 - just realized I got a typo instead of
647:42 - get notes in group I got get first node
647:44 - in group which is another thing you can
647:47 - do but not what I want to do right now
647:49 - so get notes in group and now Godot is
647:52 - happy again this would give us the
647:55 - enemies or to very least the Scout and
647:57 - the player but it wouldn't do anything
647:58 - because the Scout doesn't have a hit
648:00 - function so we have process and then a
648:03 - couple of signals but nothing for a hit
648:05 - function that we can add right now
648:08 - though let me do it all the way at the
648:10 - top I want to create another function
648:12 - called Hit no parameters and for now I
648:16 - want to print Scout was it
648:19 - besides that I also want to go to the
648:21 - player and the player has a ton of stuff
648:26 - so let me minimize everything
648:29 - actually most of it is inside of the
648:31 - process function
648:32 - but you can tell there's no hit function
648:35 - for the player which I also want to add
648:37 - so func it no parameters and for this
648:41 - one I want to print
648:44 - layer was hit
648:47 - and now if I run all of this again
648:50 - the player can be shot at and we get
648:52 - player was it so this one is working the
648:55 - same is also going to work for the Scout
648:56 - so we get Scout was it and now if I
648:59 - shoot the grenade
649:02 - we get Scout was hit multiple times the
649:05 - same is going to work for the player so
649:07 - if the player stands next to the
649:08 - explosion we get player was hit multiple
649:10 - times all of that is working just fine
649:13 - so that covers another really important
649:16 - part now we have the grenades working
649:18 - properly so next up we can work on the
649:21 - actual enemy
649:23 - with the lasers and the grenades in
649:25 - place we can work on the Scout Health
649:27 - basically what we want to do is that the
649:30 - Scout has a hit function but this one
649:32 - doesn't really matter because the Scout
649:34 - doesn't have health
649:35 - which means we want to give him some
649:37 - health and then reduce that Health
649:39 - whenever he is hit
649:41 - on top of that we are going to need a
649:44 - timer and you will see very soon why but
649:46 - for now let's implement the basic damage
649:49 - mechanic once again back in good old
649:51 - first of all I want to close the grenade
649:54 - scene
649:55 - then I can work inside of the Scout and
649:58 - for the Scout I want to make the
650:01 - inspector a bit smaller
650:03 - also what you can do is this little
650:05 - arrow is hiding
650:07 - all of the open code which is giving me
650:10 - in particular a bit more space I assume
650:12 - you are working on the larger monitor so
650:14 - you probably don't need it but if you
650:16 - work on a laptop this can be super
650:17 - useful at the moment we are printing
650:19 - Scout was hit as soon as we're calling
650:22 - the hidden method but that isn't going
650:24 - to be enough instead I want to create
650:26 - another variable that we can call Health
650:29 - this one has to be an integer and the
650:32 - value is kind of random I'm going to go
650:35 - with 30. once again choose values that
650:38 - you like
650:39 - and basically all that we have to do if
650:41 - this scout was hit we want to get the
650:44 - health and then subtract it by a certain
650:46 - amount let's say 10 for this one after
650:49 - that if health is smaller or equal then
650:53 - 0 and if that is the case I want to
650:56 - destroy the node with Q3
650:58 - and that should be all we need if I now
651:01 - shoot at the scout three times
651:04 - eight disappears so this is working
651:07 - really well and this was incredibly easy
651:09 - but there is an issue and let me run the
651:13 - entire game again
651:14 - if I now shoot a grenade at the scout
651:18 - the Scout disappears immediately the
651:21 - reason for that is that we are calling
651:23 - the hit function from the grenade inside
651:25 - of the process function which means we
651:27 - are calling it multiple times per second
651:30 - and since every call of the hit method
651:33 - is reducing the health by 10 amounts we
651:35 - are destroying the Scout after three
651:37 - frames of the game which is incredibly
651:40 - fast
651:41 - that is about one tenth of a second and
651:44 - that would make the grenades way too
651:46 - strong meaning we have to find some
651:49 - other way to work with this and the way
651:51 - you usually see this is that once any
651:54 - kind of entity has been hit this could
651:56 - be the Scout or a player it doesn't
651:57 - really matter as soon as they have been
651:59 - hit there's going to be a short timer
652:01 - doing which they are invulnerable
652:04 - this is going to be a very short amount
652:06 - of time let's say less than half a
652:07 - second that way if we have something
652:09 - like a grenade that continuously cuts
652:11 - the hit method we have at least some
652:14 - kind of delay between calling this
652:15 - method implementing something like this
652:18 - is actually not that difficult so it is
652:20 - going to be your exercise I want you
652:22 - guys to play around and create some
652:24 - logic so that the Scout can only be
652:26 - damaged every half second
652:28 - pause the video now and try to figure
652:30 - this one out
652:34 - first of all I am going to need another
652:37 - timer node so with the Scout selected
652:40 - I want to add another timer
652:43 - this timer we can call it a hit timer is
652:49 - going to get a wait time of 0.5 seconds
652:54 - one shot should be enabled this one
652:56 - should only run once and auto start
652:58 - should not be enabled
653:00 - we only want to call this a timer once
653:03 - the Scout has actually been hit but
653:05 - first things first
653:07 - at the moment I feel like the Scout node
653:10 - could be organized a tiny bit better so
653:13 - we do have Sprite 2D we have a collision
653:15 - shape we have an attack area and we have
653:18 - laser spawn positions those are working
653:20 - just fine but we have two timers that
653:23 - could be inside of another node which
653:25 - means we've just got selected I want to
653:28 - add simply a note the simplest note you
653:31 - have in Godot if I add this one we are
653:33 - getting a white node and if you look at
653:36 - the inspector this one has some process
653:38 - and editor description but it doesn't do
653:40 - anything this is perfect because for
653:43 - example for the laser spawn positions
653:46 - you want to have the parent being in
653:48 - node 2D because the node 2D could have
653:51 - transformed so position and a rotation
653:53 - what you need for a marker 2D
653:56 - but the lasers don't have any kind of
653:59 - positioning
654:00 - I hope that makes sense basically what
654:02 - I'm saying is that you always want to
654:04 - use the easiest node available and for a
654:07 - timer the parent could just be a play
654:09 - node because timers don't need a
654:12 - position so I want to move both timers
654:14 - into the node
654:16 - this note I want to rename right away to
654:19 - timers
654:20 - and if I now minimize everything this is
654:23 - feeling much cleaner
654:24 - although that being said we have a laser
654:27 - cooldown and a hit timer so the naming
654:29 - here I'm not a big fan of I want to have
654:31 - this being a laser timer
654:34 - now with that we have to update this
654:36 - script it touch
654:38 - at the moment we have on laser cooldown
654:41 - timer this I want to get rid of entirely
654:45 - and then in the laser timer I want to
654:48 - disconnect the signal now I want to
654:51 - reconnect the timeout for on laser timer
654:53 - and also for on hit timer
654:57 - that will give us two new functions the
654:59 - first one is on laser timer timeout
655:02 - this one should simply re-enable can
655:04 - laser and set it to true
655:08 - then I can remove some white space and
655:10 - next up we have on hit timer timeout
655:14 - for that I am basically going to
655:16 - implement a similar logic compared to
655:18 - what we have done for can laser which
655:21 - means all the way at the top we have can
655:24 - laser and a similar thing we want to do
655:26 - for the vulnerability
655:29 - so VAR let's call it vulnerable this has
655:33 - to be a Boolean which by default is
655:36 - going to be true
655:38 - and then we are only going to reduce the
655:41 - amount of Health if the Scout is
655:44 - vulnerable a very difficult word to
655:47 - spell vulnerable
655:49 - and only if that is the case we want to
655:51 - reduce the health by 10. besides that we
655:54 - want to set vulnerable and I am terrible
655:57 - at spelling that word vulnerable we want
655:59 - to set two false and on top of that we
656:03 - want to get the hit timer
656:05 - and started
656:08 - and with that I can try all of it
656:11 - and we're getting an error because I
656:13 - have forgotten to rename the laser
656:15 - cooldown this I can do quite easily I'm
656:18 - going to get rid of the laser cooldown
656:19 - and use the laser timer instead
656:22 - now if I try this again it's feeling
656:25 - better and if I shoot a grenade at the
656:27 - scout
656:29 - he only disappears he actually doesn't
656:31 - disappear at all so I have to shoot at
656:34 - him
656:37 - okay he is completely invulnerable and I
656:41 - think I know why
656:43 - so we don't need the process function
656:45 - the issue right now is that we are only
656:48 - running or we are only reducing the
656:50 - health if the Scout is vulnerable but
656:53 - then inside of the on hit timer we're
656:56 - never setting vulnerable back to true so
656:58 - vulnerable should be true once the timer
657:02 - takes out
657:04 - and now this should be working so let's
657:06 - try grenade again
657:08 - and the Scout disappears after 1.5
657:11 - seconds perfect so this one is working
657:14 - just fine and on top of that now our
657:17 - Scout scene is significantly better
657:19 - organized
657:20 - but right now we have a problem let me
657:24 - close the Scout and I want to look at
657:26 - the player if I run the entire game
657:29 - again I can shoot the grenade
657:31 - and this still makes the Scout disappear
657:34 - but the player is going to be hit
657:36 - continuously
657:38 - and that is also something we have to
657:40 - fix but that's going to be in the next
657:42 - part I'll see you there for this part we
657:45 - are going to work on the player health
657:46 - and most of that is going to be
657:48 - straightforward but we are going to have
657:51 - some issues but first of all the player
657:53 - already has some health this is stored
657:56 - inside of the global script which is
657:59 - fine except for two issues number one is
658:03 - we want the player to have a damage
658:05 - cooldown like the Scout however the
658:07 - player should always be able to pick up
658:09 - Health items the way you want to think
658:12 - about this one is that the Scout can
658:14 - only be damaged if vulnerable is set to
658:17 - true
658:18 - which means if that variable is false
658:20 - the Scout Health could never be changed
658:22 - if we had a similar logic in the player
658:25 - the player couldn't pick up Health items
658:28 - once he was hit
658:29 - which obviously would be a really big
658:32 - issue besides that
658:34 - we are storing the health of the player
658:36 - inside of globals which is just a script
658:39 - and as a consequence we cannot add a
658:41 - timer node we have to figure out
658:43 - something else
658:45 - we are back inside of Godot and I want
658:49 - to go to this script and look at the
658:53 - player I guess this is where we can
658:54 - start
658:55 - if the player is hit we are calling the
658:57 - hidden method and this one right now
658:59 - doesn't do anything besides printing the
659:01 - player was hit
659:03 - the actual health information though is
659:05 - stored inside of globals and there we
659:08 - have health at the moment this one is 60
659:10 - but the actual amount here doesn't
659:12 - matter first of all then we have to
659:14 - connect the player to the actual player
659:16 - health and for that inside of hit I want
659:19 - to get globals then the health of the
659:21 - player and reduce it by a certain amount
659:24 - I am always going to work with 10
659:26 - because that's an easy number to work
659:29 - with but once again you can choose
659:31 - whatever value you want in here
659:33 - I guess the value should be positive and
659:36 - this shouldn't be equal to 10 this
659:37 - should be minus equal 10. we want to
659:39 - reduce the health by 10.
659:42 - now let's try it off this and this scout
659:45 - is shooting at me and it reduces my
659:47 - health by 10.
659:49 - and if I get hit multiple times there we
659:51 - go now the player is dead
659:54 - on top of that if I run all of this
659:56 - again and let me do it in the inside
659:58 - scene if I shoot a grenade
660:02 - that is going to kill the player
660:03 - basically instantly so this is something
660:06 - we have to work on all of that logic is
660:08 - going to happen inside of globals so let
660:12 - me give it a bit more space and now we
660:14 - have to figure out a couple of things
660:15 - inside of this set function most
660:19 - importantly we want to implement some
660:21 - kind of logic that if
660:24 - let's call it player
660:26 - vulnerable
660:28 - only if that is the case we want to
660:31 - update the health this player vulnerable
660:33 - doesn't exist right now so let's create
660:36 - it I want VAR player vulnerable Boolean
660:40 - which by default is going to be true if
660:43 - that is the case we're going to do the
660:45 - same thing we have done for the Scout
660:47 - which means if I find it really quick
660:49 - inside of the scout
660:52 - we are updating the health we are
660:54 - updating vulnerable and set it to false
660:56 - and then we are starting a timer that
660:58 - sets vulnerable back to True once the
661:00 - time has run out
661:02 - which means inside of globals
661:06 - I want to update the amount of Health
661:07 - that we get I want to set layer
661:11 - vulnerable to false
661:15 - and then I have to start some kind of
661:17 - timer which unfortunately we cannot do
661:20 - because globals is just a script instead
661:24 - I want to call a function let's call it
661:27 - player invulnerable
661:29 - timer
661:30 - this function doesn't exist so we have
661:33 - to create it let's do it right below
661:36 - Funk layer invulnerable timer
661:40 - doesn't need any parameters and in there
661:42 - we want to create a custom timer purely
661:46 - in script
661:47 - and that we can do quite easily we once
661:50 - again want to get the tree and on there
661:53 - we have a function called create timer
661:55 - it's actually all the way at the top
661:58 - this time up wants to have one argument
662:00 - the duration of the timer in my case I
662:03 - want to go with half a second this time
662:05 - up would also start right away and the
662:08 - way you would be using it is with the
662:11 - await function and then what you're
662:14 - looking for is Timeout
662:17 - like the timeout we have seen for any
662:19 - kind of timer here we have a timeout and
662:21 - this timer Works in basically the same
662:23 - way
662:24 - and what this line of code does is it
662:28 - waits for half a second and then it does
662:30 - something else whatever we are writing
662:31 - afterwards
662:32 - the thing that we want to do is player
662:35 - vulnerable and this one should be true
662:38 - again
662:39 - let's try all of that and let me move
662:43 - this way if I now shoot a grenade and
662:46 - the player gets it
662:47 - we are only updating the health every
662:50 - half second so this is working now we
662:53 - have a problem though and that is that
662:55 - if the player isn't vulnerable then we
662:58 - cannot change the health at all because
663:00 - the entirety of the function happens
663:02 - inside of this if statement
663:05 - meaning there is a timer if the player
663:07 - gets hurt but there's also going to be a
663:09 - timer when the player is picking up a
663:11 - health item but fixing that is going to
663:13 - be fairly straightforward
663:15 - there's no New Concept we have to learn
663:17 - which means this can be an exercise
663:19 - which means I want you guys to update
663:21 - the set function for the health so at
663:23 - the health items can always be picked up
663:25 - and affect the player also with you now
663:27 - and try to implement this one
663:31 - righty let's think about the issue if we
663:36 - go back to the item and somewhere down
663:39 - there we are if the player is colliding
663:42 - with a health item we are increasing
663:44 - Global Health by 10. which means back
663:47 - inside of globals the value after
663:50 - picking up an item would in this case be
663:52 - 70. 60 plus 10 from the item that
663:55 - information we can use because we can
663:59 - check in an if statement if the value is
664:02 - greater than the current amount of
664:04 - Health this can only be the case if we
664:06 - have picked up a health item
664:08 - there's nothing else that is currently
664:10 - updating the health of the player and
664:12 - increases it
664:13 - and there we can get the health and then
664:16 - set it to the value we are getting
664:19 - and this we can refine even further
664:21 - using another function called minimum
664:25 - this one is picking from two values and
664:28 - it always picks the lower one and I want
664:31 - to have the value and 100. this one
664:34 - limits the maximum amount of health of
664:36 - the player to 100 so if value becomes
664:39 - 150 minimum is going to pick 100.
664:43 - since our current health bar only goes
664:45 - up to a hundred this is quite important
664:47 - to include
664:49 - imagine we could have a health of 150
664:51 - but our health bar would only show a
664:53 - hundred so if the player get hit we
664:55 - would be at 140 and the health bar
664:57 - wouldn't move at all so this helps to
664:59 - not confuse the player
665:01 - besides that I want to add an else
665:03 - statement so we are checking if the
665:06 - value is smaller or equal to health and
665:09 - if that is the case I want to check if
665:12 - the player is vulnerable
665:14 - then we can update to health update the
665:16 - vulnerability and then call the timer
665:18 - although the one thing we have to update
665:20 - is the stat change this one should
665:23 - always be called without it this change
665:26 - appeared to increase the health wouldn't
665:28 - be emitted so it wouldn't be visible
665:30 - but that is all we needed so let's try
665:33 - all of it and I guess it's going to be
665:35 - really hard to show but if I get hit
665:38 - we are decreasing the health and if I
665:41 - get hit by a grenade
665:43 - this is also working and now if I pick
665:46 - up Health items I hope I can find some
665:53 - also not lucky
665:57 - okay I am really unlucky with health
666:01 - items right now let's try it all the way
666:03 - at the bottom
666:04 - and I am probably going to speed up all
666:07 - of this
666:09 - okay there we have health items and if I
666:11 - pick them up we are increasing the
666:14 - amount of Health oh and then we have
666:15 - quite a few health items so I can pick
666:18 - up all of them and this is working just
666:19 - fine perfect
666:22 - with that we have the player Health
666:24 - sorted out for this section I want to
666:27 - work a bit more on the Scout
666:28 - specifically I want to make it light up
666:31 - under certain conditions so the problem
666:34 - right now is that if the Scout or the
666:37 - player get hit there will be a change in
666:39 - health and if we hit the Scout often
666:42 - enough the Scout is going to disappear
666:44 - the problem is that a change in health
666:47 - of the Scout is not being communicated
666:49 - all we can see is that the laser
666:51 - disappears once it collides with the
666:53 - Scout ideally what I want is that the
666:55 - Scout is flashing for a short period of
666:57 - time after it is being hit for that we
667:00 - are going to need a completely new topic
667:01 - called shaders
667:03 - shaders in the most basic sense
667:05 - determine how elements are being
667:07 - displayed in the game for example we
667:09 - could have a simple resource that would
667:11 - be the Godot logo
667:13 - this coder logo is just an image
667:15 - comprised out of pixels if I open the
667:18 - same logo in Photoshop we get something
667:19 - like this and if I zoom in Far Enough at
667:23 - some point you can see individual pixels
667:26 - and all of those pixels have a couple of
667:29 - attributes if I click on this pixel for
667:32 - example
667:33 - we have a value for red a value for
667:35 - green a value for blue then we also have
667:38 - an alpha value and a position
667:40 - all of that happens inside of the
667:42 - original resource but this isn't
667:44 - necessarily what we are going to display
667:46 - inside of the game now so far for every
667:50 - graphic we have ever used we have simply
667:52 - told every pixel to have the same color
667:54 - and the same Alpha which means we didn't
667:56 - update the original image at all but we
667:59 - could totally make updates to it for
668:01 - example what we could be doing is tell
668:04 - Godot to display every single Pixel as a
668:06 - white color that way instead of a
668:08 - graphic we are simply getting a white
668:10 - rectangle what you really have to
668:12 - understand here is that in the original
668:14 - image the corners are rounded because
668:16 - these pixels are transparent
668:19 - any image that you have is always going
668:21 - to be a perfect rectangle and if you
668:24 - want to have rounded Corners you have to
668:25 - make the corner pixels transparent but
668:28 - if we tell Godot to make every single
668:30 - Pixel white we will always have a
668:32 - rectangle with sharp corners
668:35 - now that being said what we can also do
668:39 - is to tell Godot to display every single
668:41 - Pixel as white but keep the original
668:43 - Alpha values that way we keep the
668:46 - rounded corners and all of that is just
668:49 - the very tip of the iceberg shaders get
668:51 - incredibly more complex you can do so
668:53 - much more with them
668:55 - there's literally an entire website
668:57 - dedicated to Godot shaders and this
668:59 - gives you a really good idea of what you
669:00 - could be doing with shaders
669:03 - for example there we have a color
669:05 - cycling hit effect and this one is
669:07 - looking quite nice besides that you
669:10 - could also give items an outline or you
669:13 - could create a vignette or you could
669:14 - swap the colors of Sprites and you could
669:16 - do a lot more water shaders are also
669:19 - really common thing and well
669:21 - the list goes on for quite a while
669:23 - shaders are a really extensive topic and
669:26 - it can only cover the most basic parts
669:28 - of them although I will be making a
669:31 - dedicated video on them well now though
669:33 - let's cover some basics
669:35 - shaders can change a couple of
669:37 - attributes the most important one is the
669:39 - color of a pixel besides that we can
669:41 - also change the transparency of a pixel
669:43 - and the position of a pixel
669:46 - all of this is calculated in real time
669:48 - which means you could change these
669:50 - values dynamically and then create
669:52 - movement or changes in color over time
669:54 - this is going to give you a ton of power
669:56 - in terms of how your game will look
669:58 - but that being said shaders are more
670:01 - advanced and they can get very
670:04 - complicated
670:05 - most importantly because we are not
670:07 - using GD script instead Godot has a c
670:11 - like shading language what that means to
670:13 - give a couple of basic examples is that
670:16 - you have to be really strict with data
670:18 - types you couldn't even add up an
670:20 - integer and a float
670:22 - besides that you also have to add
670:24 - semicolons after every single line and
670:26 - there are quite a few more differences
670:27 - we are literally going to use a whole
670:29 - new programming language
670:31 - on top of that what is really important
670:33 - to understand is that when we are
670:35 - running the script we are running a
670:37 - script for basically every single Pixel
670:39 - of the graphic we are working with
670:41 - because of that we are a bit more
670:44 - constrained for example the print
670:46 - statement wouldn't be available
670:48 - simply because you would get way too
670:50 - much output and this is making debugging
670:52 - much more difficult
670:54 - alright that was a ton of theory let's
670:56 - do all of this in practice actually that
670:58 - should be much more straightforward
671:00 - here we are back in Godot and I want to
671:03 - reopen this scout so the Scout scene in
671:06 - there we have a couple of items we have
671:09 - the timers we have the laser spawn
671:10 - positions attack area and collision
671:12 - shape all of those we are going to
671:14 - ignore
671:15 - because we want to work with the Sprite
671:17 - 2D this is the only visible element of
671:21 - the scout
671:22 - so this is the only element we want to
671:24 - work with now to give an item a Shader
671:27 - you have to go to material and in there
671:31 - you have a material attribute right now
671:34 - it's empty but you can give it a Shader
671:36 - material
671:37 - then you get something weird but if you
671:40 - click on that
671:42 - you get a Shader right now this one is
671:44 - empty and we want to give it a new
671:46 - Shader
671:47 - now Godot is going to ask you what you
671:49 - want to name this script I think
671:51 - scout.gd Shader is perfectly fine so I
671:54 - want to create this new script
671:57 - and now nothing has happened
671:59 - you actually make something happen you
672:01 - can either click on scout.gd Shader or
672:04 - you can go to the Shader editor at the
672:05 - bottom if you click on that you can see
672:07 - an editor right now there's nothing but
672:09 - if you open the script you can see we
672:12 - have Shader type and notice a semicolon
672:15 - and after that we have void fragment
672:18 - and then we have some curly brackets
672:20 - inside of there we can actually write
672:22 - some code so what does all of that
672:25 - actually mean
672:26 - on the first line we have the Shader
672:29 - type that is going to tell Godot what
672:31 - kind of graphic we are working with a
672:33 - canvas item is a 2d item besides that we
672:36 - could also have a spatial Shader type
672:38 - and this would work for 3D objects but
672:40 - in our case canvas item is totally fine
672:43 - besides that all of that is a function
672:46 - and a very specific one called fragment
672:48 - this one determines the color and the
672:51 - transparency of every single Pixel
672:53 - another inbuilt function you could be
672:55 - working with would be void and this one
672:58 - is called vertex
673:00 - this one would let you update the
673:02 - position of every single Pixel although
673:04 - this is not something I am going to work
673:06 - with
673:07 - we want to keep it simple and I just
673:09 - want to work with the color and the
673:10 - transparency of every pixel and for that
673:12 - let me zoom in on Scout and let's see
673:15 - what we can do
673:17 - in here ultimately what could do once is
673:20 - some kind of color attribute and this
673:23 - color attribute has to be a vector with
673:26 - four values and inside of the shading
673:29 - language to create that we want vac 4 so
673:34 - this is telling a door to create a
673:35 - vector with four values and there we can
673:38 - simply add four values
673:40 - in my case I could go with one one one
673:42 - and one and now don't forget at the end
673:45 - we do want to have a semicolon
673:48 - and if I now wait a second we are
673:52 - getting a completely white square around
673:54 - everything what has happened here is
673:56 - that Godot looked at every single Pixel
673:58 - of this image and then changed the color
674:01 - of this pixel to the vector we have
674:03 - gotten in there
674:04 - the values we would get in there are red
674:06 - green blue and transparency
674:09 - so if we change the vector 4 to 0.1
674:14 - and save all of this we're getting a
674:17 - bluish color because now we are removing
674:19 - the red color
674:20 - I could actually get this to zero and
674:23 - then we get an even Bluer color
674:25 - and that is the very first thing you
674:27 - have to really understand about shaders
674:29 - that inside of a fragment Shader Adobe
674:32 - wants to have a color and this color
674:34 - determines the color of the pixel and
674:36 - the transparency of the pixel the
674:39 - transparency you get via the last value
674:40 - so 0.5 would give us 50 transparency
674:45 - and while we're working on this I am
674:47 - going to tide the Collision shape and
674:49 - the attack area so we can actually see
674:51 - what's going on so with that we can
674:53 - already change the color of everything
674:55 - but that doesn't help us very much right
674:57 - now now before I continue I do want to
675:00 - cover a few more basics of the shading
675:02 - language first of all you can create
675:04 - variables for that you wouldn't use a
675:07 - VAR instead you would use the data type
675:09 - you want to create for example if you
675:11 - want to create a float you would type
675:13 - float and then the name of the variable
675:15 - for example we could have a test
675:17 - variable
675:20 - and then we can assign it a value let's
675:22 - say 0.1 and then once again don't forget
675:24 - to semicolon that is giving you a test
675:27 - bar and this test bar you can use inside
675:29 - of color for the vector 4 and if I save
675:32 - this we have a lower transparency
675:36 - however this is something I've mentioned
675:38 - earlier that you have to be incredibly
675:41 - strict about the data types what you
675:44 - couldn't do for example is get a test
675:46 - VAR and then add a 1 to it
675:48 - the dough is going to give you an error
675:50 - right away that we have an invalid
675:52 - arguments to operator plus load plus int
675:55 - so in normal python or GD script you can
675:59 - add a float and an integer perfectly
676:01 - fine together because to humans those
676:03 - are both just numbers but for a computer
676:05 - those are entirely different values and
676:09 - in the shading language we cannot simply
676:11 - add them up together
676:12 - which can be kind of annoying but you
676:15 - will get used to it eventually
676:16 - besides that the shading language also
676:19 - has a couple of predefined keywords that
676:21 - are super useful color is the one we
676:23 - have already seen another one is UV and
676:27 - this one gives you the position of the
676:29 - current pixel
676:31 - for example what we could be doing if I
676:34 - once again get a vector 4 with 1 1 1 and
676:37 - 1. so completely white area
676:40 - what change I could be making is for the
676:43 - first value I want to have UV and this
676:46 - is giving me the current position of the
676:48 - pixel and this one is going to be a
676:50 - vector 2 with an X and A Y attribute if
676:54 - for example I change this to UV X then
676:57 - the output would look something like
676:59 - this so what happened here
677:03 - there are four values we're working with
677:04 - in total we have a red color a green
677:07 - color a blue color and then a
677:09 - transparency
677:11 - the last three values are always one so
677:14 - we have the full amount of transparency
677:15 - and all of the green and all of the blue
677:17 - color the only change we are making
677:19 - applies to the red color and the value
677:22 - we get here is determined by the
677:24 - position
677:25 - these values start at 0 all the way on
677:28 - the left and then go to one all the way
677:31 - on the right
677:32 - which means all the way on the left we
677:34 - get no amount of red so this area is
677:36 - going to be blue and then all the way on
677:38 - the right we get the full amount of red
677:40 - so the color is going to be white now in
677:43 - this case we are rotating the entire
677:46 - thing if I show this really quick we are
677:49 - rotating the entire Surface by 90
677:51 - degrees
677:52 - we're just going to make all of this a
677:53 - bit more confusing but if you look at
677:55 - the material we have the unrotated
677:57 - graphic and in there you can very much
678:00 - see that the further to the right we are
678:02 - going the more white it is going to
678:04 - become or rather the more red we are
678:06 - going to have because if you have a
678:09 - pixel all the way on the left then X is
678:10 - going to be zero and if you have a pixel
678:12 - all the way on the right X is going to
678:14 - be 1. what we could also do for example
678:17 - with the transparency get a UV and then
678:19 - y if I now save all of this we get
678:23 - transparency for the other pixels
678:25 - and once again if you look on the right
678:27 - all of that is much more understandable
678:30 - we start all the way at the top and they
678:33 - are transparency for uvy is zero so this
678:36 - UV for the pixel all the way at the top
678:38 - would be zero but the further down we go
678:42 - the closer we get to one which is the
678:45 - value all the way at the bottom and once
678:47 - we reach the bottom we are getting a one
678:49 - so all of those pixels will be
678:51 - completely visible however there is one
678:54 - important thing that we cannot do right
678:56 - now we cannot get the current
678:58 - transparency of the pixel that we are
679:00 - working with for that we have to learn
679:02 - One More Concept so
679:04 - right now I'm creating a float test varm
679:07 - but this I want to get rid of instead I
679:10 - want to get the current Alpha value of
679:13 - the pixel I am looking at
679:15 - and for that we will need a function
679:17 - this function is called texture
679:20 - texture wants to have two arguments the
679:23 - first one is called a texture sampler
679:25 - you can see it kind of there at the
679:27 - bottom although I am running out of
679:29 - space a sampler is simply giving us
679:32 - access to a certain kind of texture the
679:34 - one we want to use is the texture
679:36 - applied to this Sprite 2D which we're
679:38 - getting with simply the word texture all
679:41 - in uppercase letters
679:43 - besides that the texture function wants
679:46 - to know the position that we are looking
679:47 - at which in our case we are getting via
679:50 - UV
679:52 - and with that we are getting an error
679:56 - that we have an invalid assignment of
679:58 - vector 4 to a float which means that
680:01 - this texture is returning the current
680:04 - color so RGB and the alpha value of the
680:08 - current pixel
680:10 - which actually means that this is
680:12 - returning the literal color that we have
680:15 - so we could replace this
680:17 - and get rid of the vector 4 and if I now
680:19 - save it we get the original
680:22 - oh well I have to comment out
680:24 - the float a because this is giving us an
680:26 - error but this texture is literally what
680:29 - you get by default
680:31 - you are looking at the current pixel and
680:33 - on this pixel you are copying the alpha
680:35 - value and the color however what you can
680:38 - do on this Vector 4 is get one specific
680:41 - value
680:42 - and that would be the alpha value
680:45 - and once we have that good old stops
680:47 - complaining so this is a good start and
680:50 - what you could be doing now and let me
680:52 - give a bit more space
680:55 - you could use an if statement that we
680:57 - only want to have the current color if
681:00 - there is a transparency value
681:02 - and to add if statements inside of the
681:04 - shading language you would need if
681:06 - then parentheses and then you want to
681:09 - have current a is equal to 1. however
681:14 - this is not going to work and godo is
681:16 - going to complain that once again we
681:18 - have to be really strict with the data
681:20 - type right now we're comparing a float
681:22 - and an integer
681:24 - to fix that we have to add a point zero
681:27 - that way Godot is happy and now we need
681:29 - curly brackets and inside of there I
681:32 - want to have
681:34 - the color
681:36 - and just so that we can see what is
681:38 - happening I don't want to have the
681:39 - current color instead I want to have a
681:41 - vector or with one one one and one
681:46 - so basically what we're doing right now
681:48 - and you can see a really ugly result
681:51 - we are getting the current Alpha value
681:53 - of the pixel
681:55 - and once again remember this script is
681:57 - run for every single Pixel of this
682:00 - texture
682:01 - and then if the current Alpha value is 1
682:05 - then we are coloring in the current
682:07 - pixel in pure white
682:09 - this kind of well partly works but you
682:12 - can see the issue
682:14 - that some of these pixels don't have
682:16 - perfect transparency but they are still
682:18 - visible so they might have 90
682:20 - transparency
682:22 - which is why this kind of if statement
682:24 - wouldn't really work here and more
682:27 - General an issue with shading languages
682:29 - is that you want to avoid if statements
682:32 - simply because they have some
682:33 - performance penalties let's get rid of
682:35 - them instead
682:37 - what I want to create is going to be a
682:40 - vector 4 and this is going to be the
682:43 - target other
682:46 - and for this target color I want to use
682:48 - another function mix
682:50 - is going to mix two colors
682:54 - and in our case we want to mix the
682:55 - current color with a pure white color
682:58 - which means we want to have
683:01 - the texture
683:04 - with texture and UV to get the current
683:07 - color of the pixel besides that I want
683:10 - to have another vector or
683:14 - and this one
683:16 - actually let's do it like this this is
683:18 - much easier to understand
683:20 - for this Vector 4 I want to have a
683:24 - vector 3.
683:25 - that has one for all of the values and
683:29 - besides that since I will need a fourth
683:31 - value I want to have the current Alpha
683:33 - value
683:35 - finally we need one more argument which
683:38 - is a floating value for the progress
683:40 - let's say 1.0 for now and although at
683:43 - the end we will need a semicolon
683:45 - I'm going to explain all of this in a
683:47 - bit more detail in just a second but
683:49 - what I can do now is get the color and
683:53 - then assign it the target color
683:55 - and this is going to light up everything
683:58 - exactly as we want
684:01 - so what happened here mix is going to
684:04 - mix two values in our case two Vector
684:07 - force and how much you get of the second
684:10 - Vector is going to determine by the
684:12 - final value which would be this 1.0 1.0
684:16 - means you have all of the second vector
684:18 - and none of the first Vector if we
684:21 - change this 1.0 to let's say is 0.5
684:27 - then we're making all of this much
684:28 - brighter but you can see the original
684:30 - pixels much better and if this value is
684:33 - 0.0 we can only see the original there's
684:36 - nothing of the white pixel besides that
684:39 - there's one more change that I have made
684:40 - we are for the second Vector 4 creating
684:44 - a vector 4 and then we have vac 3 1 and
684:48 - the current Alpha value what happened
684:50 - here when you're creating a vector 3 you
684:53 - can give it values in a couple of
684:54 - different ways if you simply add a 1 and
684:57 - there is the only argument then all of
684:59 - the three values inside of the vector
685:01 - are going to get that value which means
685:04 - simply adding a 1 would be the same as 1
685:06 - 1 and 1. that's simply a way to write a
685:10 - bit less code and the reason why I am
685:12 - choosing a vector 3 is because 40 Alpha
685:15 - value we want to have the current Alpha
685:17 - value of the pixel we are looking at
685:19 - that way if we're getting a value let's
685:22 - say in the top right where there is
685:24 - literally nothing of the Scout we are
685:26 - keeping the original Alpha value both in
685:28 - the original Vector 4 and in the new
685:30 - Vector 4 we have the same Alpha values
685:34 - which means all we are changing is the
685:36 - color when you're getting started with
685:38 - shaders all of this is going to be
685:40 - really confusing so at the moment I am
685:43 - not going to make this any more complex
685:44 - so I'm going to add some minor parts to
685:46 - access the Shader but this is as complex
685:48 - as it's going to get for this video
685:50 - shaders can get quite a bit more
685:53 - advanced and well they can get really
685:55 - difficult so this is something you want
685:57 - to approach once you have a bit more of
685:59 - a stronger foundation in Godot
686:02 - yes one more thing we have to figure out
686:04 - and that is at the moment we can set a
686:07 - static color let's say one but we can't
686:10 - influence this from inside of gdscript
686:13 - let's say inside of the Scout and I give
686:17 - it a bit more space
686:19 - if this scout has been hit inside of
686:22 - this function
686:23 - we want to tell the Shader so the script
686:26 - all the way in the bottom should change
686:28 - the value to one and if we're not being
686:31 - hit we want to change the value back to
686:33 - zero
686:35 - how could we do that
686:37 - and well for that we have another
686:39 - concept and that is called uniform
686:42 - uniform is a key word that if you add
686:45 - this to a variable this variable will be
686:48 - exposed to GD script
686:50 - or while to godo in general so he can
686:53 - access it via the inspector for example
686:56 - what we could have is a vector 3 for the
687:00 - color
687:01 - and for this color we can tell Godot
687:03 - that this is going to be a source color
687:05 - that's why Google knows that we're not
687:08 - just working with a vector but with a
687:09 - color expressed as a vector after that
687:12 - we can set a start value let's say
687:14 - Vector 3 where all of the values are one
687:18 - and once again don't forget to semicolon
687:20 - and right now nothing really changed but
687:23 - if I show the inspector of the Sprite 2D
687:28 - you can see on the material we have
687:30 - Shader parameters and in there we have a
687:32 - color
687:33 - and this color we can simply update to
687:36 - whatever we want for now let's keep it
687:38 - at a pure white now this color I want to
687:42 - use inside
687:44 - of mix to replace this vector3 so in
687:47 - there we want to have the color
687:50 - right now this is not going to change
687:52 - anything but what I can do now
687:55 - is to go to Shader parameters and select
687:57 - a new color and then we are in real time
688:01 - updating the color of the highlighting
688:03 - color I guess we could make this fairly
688:06 - bright and
688:09 - make it a bit more bluish whatever kind
688:13 - of color you like it really doesn't
688:14 - matter
688:15 - besides that I want to create another
688:17 - variable this is going to be a uniform
688:20 - variable as well although this one has
688:22 - to be a float I called it progress this
688:26 - is a value I want to have inside of a
688:28 - certain range and to give that
688:30 - prediction I want to add hint range
688:34 - for this one we need three values a
688:36 - start value 0.0 and a final value 1.0
688:40 - and then a step size let's go with 0.1
688:43 - although this one doesn't really matter
688:46 - and then for the start value I want to
688:48 - set this to zero once again don't forget
688:51 - to Summit colon and now Kudos stops
688:54 - complaining this progress is what I want
688:57 - to use all the way at the end instead of
688:59 - this 1.0 I want to have the progress
689:01 - variable what this is now allowing us to
689:04 - do is we have a color and we have a
689:07 - progress it starts at zero and then we
689:09 - can use it to update the color or rather
689:12 - how much we see of that color
689:14 - and with that we have written a
689:17 - reasonably complex Shader
689:19 - it still is incredibly basic but for our
689:22 - purposes this is all that we are going
689:24 - to need
689:26 - next up inside of the Scout in GD script
689:30 - when we are calling the hit method I
689:32 - want to update the value of this
689:34 - progress
689:36 - or more specifically if the Scout is
689:38 - vulnerable we want to set the progress
689:40 - value to 1. for that we will first of
689:43 - all need the Sprite 2D so the note with
689:46 - the Shader
689:48 - on there we have a material and on there
689:51 - we can set Shader
689:54 - parameter
689:56 - that is going to give us access to this
690:00 - material and these two Shader parameters
690:02 - and there we have color and progress
690:05 - the one I want to work with is progress
690:09 - this will be the first argument the
690:11 - second argument is the value you want to
690:13 - set it to in our case this will be one
690:16 - and with that we are good to go if I now
690:20 - run all of this
690:23 - you can see we have the Scout being pure
690:26 - white
690:27 - and that is because by default we have
690:29 - set this to one I want to set this back
690:31 - to zero and now if I run this again
690:34 - the Scout has the original colors but if
690:38 - I shoot it and hit it now it gets a pure
690:40 - white color with a slight blue tint but
690:43 - this line is working just fine we're
690:46 - getting the Sprite to D and we are
690:48 - updating the Shader parameters on the
690:50 - material
690:51 - we could also update the color but in
690:54 - our case we don't really have to do that
690:56 - besides that I also want to disable this
691:00 - color once the Scout is vulnerable again
691:03 - that is going to happen inside of the on
691:06 - hit timer timeout if that one times out
691:09 - the Scout is vulnerable once again
691:12 - in there we want to get a Sprite to D we
691:17 - want to get the material and on there we
691:20 - want to set Shader
691:23 - parameter once again we want to get the
691:27 - progress attribute and now set this back
691:29 - to zero if I now run all of this again I
691:33 - can shoot a discount and we are getting
691:36 - an error
691:37 - that is because
691:39 - in godob I have made a typo this should
691:42 - be set Shader parameter let's try again
691:44 - now and if I shoot at the scout and hit
691:48 - it
691:49 - there we go
691:51 - I should run this again but you can tell
691:53 - that this scout is lighting up for a
691:57 - short period of time
691:59 - although the amount of time here might
692:01 - be a tiny bit long for that inside of
692:03 - the hit timer I want to set the wait
692:05 - time to 0.2
692:09 - now I can run this again and
692:12 - we get a much shorter blinking up as
692:15 - always for the specifics you can play
692:17 - around quite a lot but I think for this
692:19 - part
692:20 - we have learned about some really
692:22 - important Concepts and well I think this
692:25 - is a really good start there's not going
692:27 - to be an exercise but for the next part
692:28 - we are going to have a much chunkier
692:30 - exercise so I'll see you there