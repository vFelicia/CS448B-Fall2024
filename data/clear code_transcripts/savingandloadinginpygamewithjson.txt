00:00 - hello there in this tutorial we are
00:02 - going to talk about how to create a safe
00:03 - game functionality for pygame
00:05 - and here's what we are going to make i
00:07 - have a simple clicker game
00:08 - and i can click on the red or the blue
00:10 - square and then i get
00:12 - the clicks selected so far this is a
00:15 - super simple game
00:17 - but the really important part here is
00:19 - that if i close it
00:20 - and reopen it my score is saved
00:24 - so i can do this multiple times and keep
00:26 - on closing it
00:27 - and reopening it and the score will
00:30 - always be carried over to the next game
00:32 - and the reason why this is happening is
00:34 - because i saved the score in a separate
00:36 - file
00:37 - and then every time we load our game we
00:39 - are loading this score file as well
00:41 - and this system would work in basically
00:43 - any game that you want to use
00:45 - so it would work in pygame but it would
00:47 - also work in oceana or in
00:49 - arcade for example and really all i'm
00:51 - doing is i'm using python to create a
00:53 - separate file
00:54 - and then when i start the game i am
00:55 - loading from that file that's literally
00:57 - all that's happening
00:58 - here but that actually brings us to the
01:00 - first big topic
01:02 - how to write files with python let's
01:04 - talk about that
01:06 - so in the most basic sense when we are
01:08 - saving or loading a file
01:09 - all we are doing is we are ever writing
01:11 - a file when we are saving a game
01:13 - or we are loading a file when we are
01:15 - loading a game
01:16 - and it doesn't really matter what kind
01:18 - of file we are saving
01:19 - as long as this file can contain what we
01:21 - want to save
01:22 - so in our case this would be simple
01:24 - numbers and for that we have lots of
01:27 - different options that we could be using
01:29 - the most basic approach i think would be
01:31 - to just create a text file
01:33 - which python can do by itself super
01:35 - easily and then you could just write
01:36 - some text in there
01:38 - and then when you load the game you load
01:39 - specific parts of this text file
01:42 - and while this would work it's not
01:43 - exactly ideal for storing lots of data
01:46 - so i wouldn't recommend this one
01:48 - but if you want to store more complex
01:49 - data you still have lots of different
01:51 - options
01:52 - you could for example create an excel
01:54 - file or create an sql
01:56 - file those two would be really powerful
01:58 - to store lots of really complex data
02:00 - although those two options would
02:02 - probably be a bit of an overkill for a
02:04 - simple game
02:05 - so i wouldn't exactly recommend those
02:08 - two either
02:08 - although if you have really complex data
02:11 - you might want to think about using
02:12 - those too
02:13 - but instead what i'm going to use is
02:15 - called json
02:17 - which is a fairly powerful way to store
02:19 - data and also to send it
02:22 - so json stands for javascript object
02:24 - notation
02:25 - and javascript is used to make websites
02:27 - interactive
02:28 - and json was developed to send
02:30 - information across the internet
02:32 - but since it was developed json became a
02:34 - standard for lots of different
02:35 - interactions
02:36 - and you could use it with basically any
02:38 - programming language
02:39 - as a matter of fact if you understand
02:42 - python you can very easily read json
02:44 - files
02:45 - for example here's one that we are going
02:47 - to create in this tutorial
02:49 - and well it looks basically like a
02:51 - python dictionary
02:52 - and python also has an inbuilt library
02:55 - that can create json files by itself
02:57 - and before i get into the actual game
02:59 - let's actually play around just with
03:01 - jason
03:02 - and let's see how far we get with that
03:03 - one so here i have an empty sheet of
03:05 - code
03:06 - and the first thing i have to do is to
03:08 - import json which happens with import
03:10 - json and now if i run the code i
03:14 - can't see any error message which tells
03:16 - me that python can import this
03:18 - successfully
03:18 - so this one is working already and
03:22 - now we first have to create some kind of
03:24 - data that we can work with
03:26 - so let me just create a dictionary
03:29 - with a couple of spare entries and in
03:31 - here
03:32 - i'm just going to let's go some
03:34 - countries and their capitals so let's
03:35 - say germany
03:37 - and we have berlin then let's say
03:40 - we have the uk and we have london
03:45 - and then let's say we have
03:50 - china with
03:53 - beijing the actual data in here really
03:56 - doesn't matter
03:57 - and just to make sure to illustrate this
04:00 - let me add another entry
04:01 - let's say kitten and one two three
04:05 - so this is just a plain python
04:07 - dictionary
04:08 - really nothing fancy happening here but
04:11 - now
04:12 - i want to do two things number one is i
04:14 - want to store
04:15 - this dictionary in its own separate file
04:19 - and more specifically this file should
04:21 - be a json file
04:23 - and to achieve that let me clean this up
04:25 - a tiny bit
04:26 - we need the with command and this one is
04:29 - basically what python uses to work with
04:31 - different files
04:33 - and what i want is to open a file
04:37 - that for now let's call this test data
04:41 - dot e x t and
04:44 - let me just be clear here that we are
04:46 - creating a txt file
04:47 - and into this file we are writing json
04:50 - data so json data
04:51 - is just written in a text file so if we
04:55 - had to open this
04:56 - python would try to open the text file
04:59 - but in our case this one doesn't exist
05:01 - yet so instead i have to add a second
05:03 - argument
05:04 - and that is a w just a single letter
05:08 - lowercase
05:09 - and what this tells python that if this
05:11 - file doesn't exist
05:13 - it's supposed to create it and now
05:16 - we have to work with this file as a
05:18 - variable so now we need the s keyword
05:21 - and now we need a variable that is
05:23 - supposed to be the shorthand for this
05:24 - text file
05:26 - in my case let's call it test file
05:28 - doesn't really matter
05:30 - and in here all we have to do is type
05:32 - json
05:33 - dump and then the file we want to
05:37 - create so my case this is data
05:40 - and then the file we want to write it to
05:42 - which is test file in this case
05:44 - so test file and this is
05:47 - literally all i had to do so now if i
05:49 - run the code
05:50 - we again can't see anything but in this
05:53 - case this is a good sign
05:54 - because there's no error message but now
05:57 - if i open the folder where this script
05:59 - is in
05:59 - i have a new file called test data and
06:02 - if i open that one
06:04 - this is what you can see we have the
06:06 - dictionary we have just created
06:07 - in adjacent format now it looks
06:10 - basically like python code
06:12 - and the reason for that is that python
06:14 - and json look very similar
06:16 - but this here is a json data set and you
06:19 - could for example send this to a website
06:20 - or to a server and this would still
06:22 - be recognizable and all right with that
06:25 - you have learned how to write a json
06:27 - file it's literally as simple as that
06:29 - you could also write different data
06:31 - types besides a dictionary
06:33 - and there are lots of different ways to
06:35 - approach this but
06:36 - in this case i really want to keep it
06:39 - simple so we're just sticking with a
06:40 - dictionary
06:42 - so now we have learned how to save a
06:44 - file now we have to learn how to read a
06:46 - file
06:46 - and this happens in basically the same
06:48 - way so let me comment
06:51 - this bit here out and now we're going to
06:54 - write some code to open the file we just
06:56 - created
06:57 - so let's just imagine that this one here
06:59 - doesn't exist
07:01 - and instead i want to import the file i
07:02 - have just created
07:04 - and here again we need with open
07:07 - and now we need the name of the text
07:08 - file we want to target
07:10 - which is still going to be testdata.ext
07:14 - and this time i don't want to add the w
07:17 - because i know this file already exists
07:20 - and i want to again call this test file
07:24 - so now all we're really telling python
07:26 - is we want to open this text file
07:28 - and in our code we are going to name it
07:30 - test file
07:31 - and the first thing we are going to need
07:33 - in here is to create a new variable
07:35 - where we want to store the file we are
07:37 - reading out
07:37 - so this one here right now is only
07:39 - giving us a text file
07:40 - right now we don't know this is json
07:43 - code so what we have to do
07:44 - is to create a new file let's call it
07:46 - data
07:48 - and this time we need json.load which is
07:51 - basically the counter site to json dump
07:53 - which instead of writing code it reads
07:55 - the json file
07:56 - and this one is just reading some json
07:58 - file and converts it to python code
08:01 - and then we have to put in our test file
08:05 - and now what this is doing is it
08:07 - converts all of this
08:08 - back into a python dictionary so in this
08:11 - data variable
08:12 - we now have a dictionary and with a
08:14 - dictionary
08:15 - we can do something like for entry in
08:18 - data let's say i just want to print
08:22 - the entry and let's see what happens
08:26 - and we get the four different countries
08:30 - i could also go with items
08:33 - so we literally just created a
08:36 - dictionary
08:38 - and that's basically json it's a really
08:40 - powerful way to
08:41 - store and load data and you could also
08:43 - use it to send data across the internet
08:46 - but in this case i don't really care
08:47 - about sending files along the internet
08:49 - instead i want to use it to create a
08:51 - safe functionality for a game
08:52 - so let's have a look at that
08:56 - so here i have a basic setup for pygame
08:58 - that
08:59 - right now it just creates a black screen
09:02 - so we have created a display surface we
09:04 - have a clock
09:05 - and a font and then we have our basic
09:07 - game loop
09:08 - and there is update and the frame rate
09:12 - but nothing is being drawn yet and the
09:15 - first thing to get the startest is we
09:17 - have to import json as well
09:19 - so now we have three different modules
09:20 - to make all of this work
09:22 - and to get this started let's start by
09:24 - adding a background color so i want
09:26 - screen
09:27 - dot fill and the color i went with here
09:31 - is two four five two five five and
09:34 - two five which is basically a white
09:37 - color
09:39 - and besides that i want to create two
09:41 - rectangles
09:44 - and for that let me put all of this into
09:46 - its separate sections so let's call this
09:48 - rectangles and i have approached this by
09:51 - first creating two surfaces
09:53 - color these with red and blue
09:54 - respectively and then use rectangles to
09:57 - place them on the screen
09:58 - so let's do that so the first one is my
10:01 - red surface
10:02 - and this one was just pygame dot surface
10:06 - and in here this one was 200 pixels wide
10:10 - and 200 pixels high and i
10:13 - filled this surface with a red color
10:17 - that has the rgb
10:19 - of 240 80
10:22 - and 54.
10:25 - and then from the surface i want to get
10:27 - a rectangle
10:28 - so red rectangle and this is going to be
10:30 - the red surface
10:33 - with get rekt and
10:36 - in here i want to place the center to
10:38 - the position
10:39 - of 150 and
10:43 - 180 so the entire window is 600 pixels
10:47 - wide and 400 pixels high
10:49 - so this one is going to be roughly on
10:50 - the left side in the middle
10:53 - and i put it slightly above the middle
10:55 - so we have some place for the text below
10:58 - but all right this is going to be the
11:00 - red rectangle now besides that
11:02 - i also want to get a blue surface and
11:05 - this one is going to work in basically
11:07 - the same way so pi game
11:08 - surface this one is also going to be 200
11:11 - and 200
11:13 - this one i want to fill with a blue
11:16 - color
11:17 - that in this case is 0 1 2 3 and 194
11:23 - and then i want a blue rectangle
11:26 - that is going to be the blue surface
11:29 - and again get rekt and
11:32 - in here this center this center
11:37 - is going to be at position 450
11:40 - and again at 180
11:43 - so this time this rectangle is going to
11:45 - be slightly further to the right
11:48 - and all we have to do now in the game
11:50 - loop
11:51 - to draw both of them so i want screen
11:54 - dot split
11:56 - and in here i want the red surface and
11:58 - the red
11:59 - rectangle and then i can copy this line
12:02 - and do the same thing for the blue
12:04 - surface
12:05 - and now if i run this we get an error
12:08 - because i made a typo
12:10 - this should be a dot now let's try this
12:12 - and there we go
12:13 - now we have a red rectangle and a blue
12:15 - rectangle
12:16 - now i can click around but nothing is
12:18 - going to happen yet that comes
12:19 - in a bit now the other thing i have to
12:22 - do
12:23 - is to create some text so let's go with
12:26 - that
12:26 - so let's add a new section let's call it
12:28 - text
12:31 - and in here i call this red score
12:34 - surface and for that i need a game font
12:37 - and
12:38 - i want to render this font and in here i
12:41 - need three bits of information
12:43 - the first one is the text let's call
12:46 - this red for now
12:47 - then if i want to anti-alias it which in
12:49 - this case i do want to do and i need the
12:52 - color
12:52 - and for this one i just went with black
12:55 - and then again
12:56 - we have a surface so i also want to
13:00 - create a rectangle to place it
13:02 - and this one is going to be my red score
13:05 - surface
13:06 - get rekt and here
13:09 - i went with center is equal to 150
13:14 - and i went with 320
13:18 - so the same x position as this one but
13:20 - quite a bit further down so it's below
13:22 - the rectangle and that's going to be the
13:25 - red text
13:26 - now besides that i have to do the very
13:28 - same thing for the blue text
13:30 - so let me copy all of this
13:33 - and let me change all of this to blue
13:37 - and then we are almost ready with the
13:39 - boring setup
13:41 - and then we can actually get to the
13:43 - important bits
13:46 - so blue blue blue that looks good
13:49 - and now again we have to actually put
13:52 - all of this on the screen
13:54 - so screen dot blit and
13:58 - let's start with red score surface and
14:00 - red score rectangle
14:03 - and then screen dot blitz blue score
14:06 - surface and blue
14:10 - score rectangle and now let's run off
14:14 - this
14:15 - and this almost worked i just forgot to
14:17 - update the position
14:20 - which should be 450
14:23 - and there we go now we have a simple
14:25 - image that
14:26 - shows the color it doesn't actually do
14:29 - anything right
14:30 - now but that we can start working on now
14:33 - and i guess the first thing we have to
14:34 - do is to actually give us the ability to
14:36 - click on the different rectangles
14:39 - and for that we have to add a new
14:42 - element to the event loop
14:43 - so if event dot type
14:47 - is equal to pi game dot
14:51 - mouse button down and
14:54 - now we can check if we have clicked the
14:57 - mouse button and this would also allow
14:59 - us to check
15:00 - where the position of the mouse is at
15:01 - that point in time
15:03 - and that information we can use to check
15:05 - if that mouse position was on top of one
15:07 - of the rectangles
15:09 - and for that we first have to get one of
15:11 - the rectangles
15:12 - let's go with the red rectangle and in
15:15 - here we need collide
15:16 - point which is one of the inbuilt
15:18 - methods of a rectangle
15:20 - and all it does is it checks if one
15:23 - point is on top of this rectangle and in
15:26 - here
15:27 - all we have to enter is event.pause
15:32 - and if that is the case for now let's
15:35 - just say i want to print
15:36 - red and let's check this so if i print
15:39 - on red
15:40 - we get printed red cool
15:44 - so with that i can copy this entire
15:46 - statement
15:49 - turn it to an l if statement and now i
15:51 - want to check for the blue
15:53 - rectangle and this would then be blue
15:56 - and now let's try this one and we get
15:59 - red and blue
16:00 - so with that we have all the bits
16:03 - established to actually get to the
16:04 - saving and loading part of this tutorial
16:07 - and the first one we need to get started
16:10 - on loading something
16:11 - is an actual score and this one i'm
16:13 - going to put before the text and that's
16:15 - important you'll see in a second why
16:17 - and in here let's call this the data
16:22 - so what i want to do is when i first
16:24 - create this text
16:26 - i don't just want to write red or blue
16:28 - that would basically be pointless
16:30 - instead i want to load some information
16:32 - either from a dictionary
16:33 - or even better from a file but for now
16:36 - let's start with a dictionary
16:38 - and this dictionary i have called data
16:41 - and it's just going to be a basic
16:42 - dictionary
16:44 - with two key value pairs the first one
16:46 - is called red
16:48 - and this one is zero by default and then
16:51 - we have a second entry that is blue
16:54 - that is also going to be zero and these
16:56 - two values
16:57 - are going to carry the score of the game
17:00 - so when i first
17:01 - create the text i don't just want to
17:03 - write red
17:04 - instead i want to create an f string
17:07 - and this f string is going to be
17:12 - clicks and then we insert into this f
17:15 - string
17:16 - the data dictionary and i want to get
17:19 - the red key from this
17:21 - and then i also want to do the same
17:23 - thing for
17:25 - the blue text so let me write over this
17:28 - one
17:29 - and now i want blue oh but i made one
17:32 - mistake here
17:33 - that this right now is going to cause an
17:35 - error because we have single quotation
17:37 - marks
17:38 - here and here and here and here
17:41 - and this is going to confuse python so
17:43 - instead this has to be double quotation
17:46 - marks so that python doesn't get
17:48 - confused
17:50 - and let me change this to blue
17:53 - okay now this should work and there we
17:55 - go we are click 0
17:57 - and 0. now if we click on them nothing
18:00 - happens so far
18:01 - and that's fine we can work on this now
18:03 - because what i want to do
18:05 - instead of printing red or printing blue
18:07 - i want to create new text and a new
18:09 - rectangle
18:11 - and all of this should still be
18:13 - connected to
18:15 - to this dictionary here as well so the
18:17 - first thing i have to do
18:18 - is to get the dictionary again then get
18:21 - the key i want to target
18:23 - and then add plus equal one and this
18:25 - would apply to both sides of this
18:28 - so red and blue
18:31 - so now we're updating this file here
18:33 - whenever we click on one of the two
18:35 - rectangles
18:37 - but we couldn't really see it so we have
18:40 - to add some more code
18:41 - to update all of this here and well
18:44 - to make this easy all we can do is copy
18:47 - this entire bit
18:49 - and indent it properly and
18:52 - just recreate this text that's really
18:55 - all you have to do
18:56 - now this isn't the cleanest code because
18:58 - we are repeating some lines here
19:00 - but at least for this tutorial this is
19:02 - good enough
19:04 - and let me do the same thing for these
19:06 - as well
19:08 - and that looks good so just to talk over
19:12 - what is happening here
19:14 - whenever we click on either of the
19:16 - rectangles let's say the red rectangle
19:18 - we are adding one to this specific entry
19:21 - in the dictionary
19:22 - and then we are recreating the text and
19:24 - the text rectangle around it
19:28 - and that way when we are drawing all of
19:30 - this later on
19:31 - we get the updated score so now if i try
19:34 - this
19:35 - we get clicks for the specific parts so
19:38 - this is working quite well but
19:41 - well if i restart it we still go back to
19:44 - zero so
19:45 - this isn't exactly working yet but
19:48 - with that finally we can come to the
19:50 - really important part of this tutorial
19:52 - that whenever we close the game we are
19:54 - writing a json file
19:56 - and whenever we are loading the game we
19:58 - are also loading a json file if that
20:00 - file exists
20:01 - and let's start with the easier one that
20:04 - whenever we are closing the game
20:06 - we are going to write a json file that
20:08 - stores all of this
20:10 - and this is going to happen when we are
20:12 - quitting the game
20:13 - so in here i want to add some code
20:16 - and be careful here this has to be
20:18 - before these two
20:20 - lines because these two lines are
20:21 - closing the game so if you had a code
20:23 - after here it would not be run
20:26 - but okay what i want to do is with open
20:29 - so we are creating a file again and
20:32 - let's call this file
20:34 - clicker score
20:38 - dot txt and here again we need a w
20:42 - to tell python that this is supposed to
20:44 - be a new file that we want to create
20:46 - it's not supposed to read a file
20:49 - since we have to work with this in the
20:50 - code i want to call this the score
20:53 - file and well all we have to do in here
20:56 - is use json dump and then the file i do
21:00 - want to save
21:01 - is the data i created earlier
21:04 - so this one here and where i want to
21:08 - store it
21:08 - is in this file here that is right now
21:11 - referenced with this score file
21:14 - so i need score file so
21:17 - json.dump all needs is the data you want
21:19 - to store and the file you want to store
21:21 - it in
21:22 - and that is literally all we needed to
21:24 - save the file
21:26 - so now if i run this i can click on
21:28 - these again
21:30 - now if i close it we don't get an error
21:32 - message but we don't see anything else
21:35 - but now again if you open the folder you
21:37 - can see a new file
21:39 - that's called clicker underscore score
21:41 - and in there we have some json data that
21:43 - we have just
21:44 - created so this is actually working
21:46 - really well
21:47 - so i can close it go back to my code and
21:50 - now all we have to do is whenever we are
21:52 - starting this
21:53 - game we want to load the json file which
21:56 - again has to happen before we are
21:58 - creating the text in the first place
22:00 - so right after the dictionary and in
22:04 - here you could start this with just with
22:07 - open
22:08 - and then the file we have created
22:09 - earlier is called clicker score.txt
22:12 - so let me actually copy this one and
22:14 - again here there shouldn't be a w
22:16 - because we want to read a file not write
22:18 - it and this one again i can scope
22:21 - score file and all i want to do
22:24 - is to overwrite this data so that when
22:28 - this text is being loaded
22:29 - it's loading from the file not from this
22:31 - dictionary
22:32 - so all i have to do is get my data
22:34 - variable as well
22:36 - and then assign it json.load
22:39 - and then whatever is in this score file
22:43 - and this is pretty much all we needed
22:45 - for now
22:46 - so now if we run this we are starting
22:48 - with five
22:49 - so this has worked already and what
22:51 - happens here is
22:52 - that when python is starting the game it
22:55 - does
22:56 - all of the stuff the basics we have
22:57 - created earlier and it creates a
22:59 - dictionary
23:00 - but then it looks at this file
23:03 - and it sees there's something in this
23:05 - file and whatever is in this file is
23:08 - being allocated to the data variable
23:10 - so all of this is being overwritten
23:13 - and as a consequence this text here and
23:16 - this text here
23:18 - shows the content of the data file and
23:20 - even better
23:21 - if we added higher numbers in here and
23:23 - we closed it
23:25 - and now if we were to reload it this
23:26 - would still update
23:28 - because every time we close the game we
23:30 - are overwriting the file we created
23:33 - so this is working pretty well now
23:35 - there's one more thing that we do need
23:38 - and the problem here is if this file
23:41 - didn't exist
23:42 - we would get an error message so let me
23:45 - delete the file
23:47 - from the folder and let's try all of
23:50 - this again
23:51 - and we get an error message that we get
23:53 - file not found error
23:54 - no such file as clicker underscore score
23:58 - and this is kind of a problem because
24:00 - whenever we start a new game
24:01 - there's no save file yet but there's
24:04 - quite an easy way to get around that and
24:07 - that is the try command in python
24:10 - and in case you haven't seen this one
24:12 - yet
24:13 - what try does is it tells python to try
24:16 - a certain line of code
24:17 - in our case this one here and what try
24:20 - does is it runs the code
24:22 - and see if it gets an error message and
24:24 - if it gets an error message
24:26 - you can tell python to ignore that error
24:28 - message
24:29 - so you're basically telling python try
24:32 - these two lines of code but if they
24:33 - don't work
24:34 - don't worry too much about it just
24:36 - continue with whatever comes next
24:38 - and after try what you need is accept
24:42 - and that is what you want to write if
24:44 - you get an error and in my case
24:46 - i just want to print no file
24:50 - created yet
24:53 - and now let's try all of this
24:56 - so the game is loading and we get no
24:58 - file created yet
25:00 - because well it doesn't exist yet but
25:02 - now i can click on these things again
25:06 - and close it and now if we run all of
25:09 - this again
25:10 - we still get the same numbers and no
25:12 - error message whatsoever
25:14 - cool so this is working pretty well
25:17 - and that is pretty much it so i hope
25:20 - that was helpful
25:21 - and i'll see you around