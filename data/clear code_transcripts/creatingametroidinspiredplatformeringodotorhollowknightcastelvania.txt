00:00 - [Music]
00:15 - [Applause]
00:15 - [Music]
00:17 - hello there in this tutorial we will
00:19 - create a Metroid inspired platformer it
00:21 - will include fancy movement systems lots
00:24 - of guns and enemies along with pretty
00:26 - environments for all of this I will also
00:28 - talk about how to manage larger projects
00:31 - meaning we are going to cover a lot of
00:33 - inheritance and building tools I am also
00:36 - going to cover to store data between
00:37 - scenes so that dead enemies stay dead in
00:40 - terms of requirements you should already
00:43 - know the basics of gdo if you have some
00:45 - knowledge of notes scenes and signals
00:47 - along with physics bodies and a bit of
00:49 - GD script you should be good to go if
00:52 - you followed My ultimate introduction to
00:53 - goo you will be super well prepared for
00:56 - this project but it's also okay if you
00:58 - followed other tutorials
01:00 - besides that we will also cover math
01:02 - topics like vectors and basic
01:04 - trigonometry if you want to get really
01:06 - good at these topics check out the
01:07 - sponsor of this video brilliant.org
01:10 - brilliant is a website or an app that
01:13 - you can use to learn math and
01:14 - programming Concepts they offer
01:16 - interactive lessons along with lots of
01:18 - exercises so you can Master a skill in a
01:21 - fun and engaging way every exercise was
01:24 - made with an enormous amount of care and
01:26 - the content comes from industry
01:27 - professionals so you know it will be
01:29 - relevant to to your career doing these
01:31 - exercises is also much more engaging and
01:33 - rewarding than passively reading a book
01:35 - or watching a video and since the
01:37 - exercises are available on a computer or
01:39 - phone you can even do them on the bus or
01:42 - at the gym they also regularly update
01:44 - and add new content just recently they
01:46 - added a section on python data
01:48 - visualization and how llms work if you
01:51 - head over to brilliant.org clear code
01:54 - you can get 20% off a subscription and
01:56 - the first 30 days are free by signing up
01:58 - you also support me making more of these
02:00 - videos so thanks again to brilliant for
02:02 - sponsoring this video before we begin
02:05 - there's a setup project that I will be
02:07 - using as a base if you go to the video
02:09 - description you can find a link to
02:12 - Google drive folder with the starting
02:13 - files there's one for gdo 4.2 and
02:16 - another for
02:17 - 4.3 since the letter version is still in
02:19 - development I will be using gdo 4.2 but
02:23 - if you watching this in the future you
02:25 - can very safely use 4.3 or any more
02:27 - recent version for our purposes the
02:30 - differences really aren't that relevant
02:32 - and I'll talk about them in just a bit
02:34 - download one of the folders and import
02:36 - it into gdau and then you should say
02:38 - something like this most importantly we
02:42 - have a level scene which contains a
02:45 - whole bunch of notes I will talk about
02:47 - them in just a second first of all
02:49 - though this level scene is the parent
02:51 - for sky station and
02:54 - underground and you can tell quite
02:56 - easily those are going to become the
02:57 - levels of the game the way all of them
03:00 - are going to work for that let's work
03:02 - inside of level we have a whole bunch of
03:06 - noes notes that are supposed to be in
03:08 - the background nodes that are supposed
03:10 - to be on the main layer and the nodes
03:12 - that are supposed to be in the
03:14 - foreground on each of those layers I
03:17 - have a whole bunch of tile
03:19 - Maps these nodes all work with the same
03:22 - tile set which has a bunch of collision
03:25 - layers and a tile size of 16 by 16 in
03:28 - there we have three Graphics which are
03:32 - going to be all of the level graphics
03:34 - and those I have used for example inside
03:36 - of Sky to draw the main level if I hide
03:40 - main you can see what's disappearing so
03:44 - for example on Main I have the actual
03:46 - outline of the level whereas for
03:49 - background I have the background and
03:51 - then we have some decoration that's all
03:53 - that's happening in here I suppose one
03:56 - thing you should keep in mind if you
03:58 - look at the tile set there under paint
04:02 - we have one physics layer and Via this
04:05 - physics layer we are drawing a bunch of
04:07 - collision
04:09 - shapes it doesn't apply to that many
04:11 - tiles but well you can see the
04:14 - result I'll talk about this part later
04:16 - for now it's not too important and while
04:19 - watching it you might have a question
04:22 - until now if you're working with a tile
04:25 - map in Gau the tile map itself lets you
04:28 - to find a couple of layers
04:31 - so why do I have so many tile map nodes
04:34 - and well that is because in G 4.3 the
04:37 - system with the tile Maps is going to
04:39 - change where you don't have individual
04:41 - layers inside of one tile map anymore
04:44 - and instead you are defining one tile
04:46 - map layer inside of the node and if you
04:49 - want to have multiple layers you are
04:51 - creating multiple tile map layers in
04:54 - fact let's have a look so here we are in
04:57 - gdo 4.3 at the bom you can see that it's
05:01 - 4.3 beta 2 the latest available version
05:05 - and in there we still have tile
05:09 - layers or in other words if you look at
05:11 - station the game looks basically the
05:13 - same however the icon is a bit different
05:16 - and if I try to add another node and
05:18 - just type tile map we now have the old
05:21 - tile map that's the one I have already
05:23 - used and this is depreciated at this
05:26 - point instead you are supposed to use
05:29 - multip tile map layers and that is this
05:32 - tile map layer it works in pretty much
05:35 - the exact same way the only difference
05:37 - is that on this tile map you do not have
05:39 - individual layers anymore instead every
05:42 - single node is supposed to be a separate
05:44 - layer besides that everything else works
05:47 - just as before so the change is really
05:49 - minor the only other difference that is
05:51 - relevant to us is that visual shaders
05:53 - look very slightly different so here's
05:55 - the Shader we are going to create later
05:57 - in 4.2 and here's the one for 4
06:00 - .3 so in 4.3 we have a few more colors
06:04 - but that's literally it functionality
06:06 - wise nothing has changed so let's return
06:08 - to the main project now I suppose if you
06:11 - don't know that much about inheritance
06:13 - and good do this yellow text might be a
06:17 - bit confusing so let me do a
06:19 - demonstration the way I have created all
06:22 - of these levels is by going to scene and
06:25 - then new inherited
06:27 - scene after which we have to select one
06:30 - scene that is going to be our parent
06:32 - scene which in my case is always going
06:34 - to be level. TSN if I double click on
06:37 - that we have created a new scene and
06:39 - then we have some yellow text for all of
06:42 - the nodes and Via that system you can
06:44 - simply select one layer and then start
06:47 - drawing whatever kind of level you want
06:50 - to create so in there you can select
06:54 - anything from the title set and then
06:57 - start drawing that's literally all I
06:59 - have done for underground station and
07:02 - sky and if you want to save it you want
07:04 - to rename the parent node for example
07:07 - this one could be the test scene then
07:11 - save it and then you get test. TSN save
07:14 - it and you should have under scenes and
07:17 - levels another scene that you can play
07:20 - with although not something I want to do
07:22 - at the
07:23 - moment next up if you look at project
07:27 - and project settings you can see that
07:30 - inside of run our station scene is the
07:33 - starting scene which means if I run the
07:35 - entire game we can see this station
07:39 - level there we go besides that if you
07:44 - look at
07:45 - textures I have set the default texture
07:48 - filter to nearest which is what you are
07:50 - supposed to be using when you have pixel
07:52 - art other than that if you scroll a bit
07:55 - further down we have the 2D physics
07:57 - layer and in there I have a bun of named
08:00 - layers Rin player enemies transition and
08:04 - projectiles not too important for now
08:06 - but just keep it in mind other than that
08:09 - if you look at input map there we have a
08:12 - whole bunch of actions I am going to
08:15 - cover input for mouse and keyboard and
08:17 - for using a game pad meaning for the
08:20 - actions for example for shooting we have
08:22 - a left Mouse button and two buttons you
08:25 - could be choosing from a game pad once
08:27 - again I'll talk about all of this later
08:29 - on for now it's not too
08:32 - important finally there's one more Scene
08:35 - that is not going to be part of the game
08:37 - but that is going to make our life much
08:39 - easier tutorial data in there we do have
08:43 - quite a bit of material let's have a
08:45 - look at the player animation we have an
08:47 - animated Sprite 2D a Sprite an animation
08:50 - player and an animation tree I will
08:53 - explain all of this in a lot of detail
08:55 - later on the reason why I have it here
08:57 - is because later on for for example for
09:00 - the animation player the player has a
09:03 - huge amount of animations that are all
09:05 - fairly simple but it took a while to
09:07 - create all of this having all of this in
09:10 - here makes our life quite a bit easier
09:12 - later on the same with the soldier
09:14 - animations in there we have an animation
09:16 - player with a bunch of animations let me
09:20 - play one you can see this is all we are
09:22 - doing in here although for now this
09:25 - really isn't too important so for now I
09:28 - only want to have level and station open
09:30 - because those are going to be our main
09:32 - scenes that we will work on and the
09:35 - first thing that we are going to work on
09:37 - will be the player
09:38 - movement for now I don't want to worry
09:41 - about Graphics so we are going to be
09:43 - using the G logo for all of this now for
09:46 - the movement system we want to implement
09:49 - a whole bunch of abilities number one
09:51 - the player can move left and right and
09:53 - has acceleration and friction meaning
09:56 - the movement gradually changes
09:59 - number two the player can jump at
10:01 - various Heights depending on when the
10:03 - player releases the jump button next up
10:06 - we're going to expand the jump mechanic
10:08 - a bit more after the player walked off a
10:11 - cliff there should be a small window of
10:13 - time where the player can still
10:15 - jump which is called a coyote jump
10:18 - besides that when the player is just
10:20 - about to land and presses jump there
10:22 - should be a jump the moment we
10:25 - land this system is called jump
10:27 - buffering and both of these systems make
10:29 - the game feel much
10:31 - snappier besides that the player is also
10:34 - able to dash which we will Implement via
10:37 - a tween finally the player can duck but
10:39 - that's not important until we get the
10:41 - graphics
10:42 - part and that is all we need for the
10:45 - basics of the player although there's
10:47 - one more thing that I do want to talk
10:49 - about inside of the game we have a whole
10:52 - bunch of entities and the player is one
10:55 - of them but besides that we also have
10:57 - the soldiers the monster and the drones
11:00 - and all of these are somewhat similar
11:03 - meaning they can share a couple of
11:04 - attributes and shaders in other words I
11:07 - want to have a parent class that
11:09 - contains all of these methods and then
11:11 - the children are going to be the nodes
11:13 - that we actually see in the game let's
11:15 - start with that for all of that inside
11:19 - of gdau I want to create a new scene and
11:22 - the parent scene is going to be a
11:24 - character body 2D which I want to rename
11:27 - right away to
11:31 - entity after that I want to save the
11:33 - scene under scenes and then create a new
11:36 - folder called
11:38 - entities in there app I want to save the
11:40 - entity scene and then we have a name in
11:43 - the tab that's a good sign besides that
11:46 - for the entity I want to have a
11:49 - collision shape
11:51 - 2D although I only want to add the Noe I
11:54 - do not want to add an actual shape in
11:56 - there that's going to come later when we
11:58 - actually create create the specific
12:00 - entity so for example the player and the
12:02 - Drone have different Collision shapes
12:04 - speaking of which we can start right
12:06 - away I want to go to scene and then new
12:08 - inherited scene the scene I want to
12:10 - create should have a parent of entity.
12:13 - TSN if I now click on open we have an
12:16 - entity parent node or well a character
12:18 - 2D and then Collision shape 2D is yellow
12:21 - because it's getting inherited from the
12:23 - parent entity
12:25 - scene this entity I want to rename right
12:27 - away to play
12:30 - here and to make sure we can see
12:32 - something I want to add another note
12:34 - which would be a Sprite 2D to which I
12:38 - want to add the gdo logo so drag it into
12:42 - the texture and then we can zoom in and
12:44 - there we go we have the gdo logo once we
12:47 - have that we can also set a collision
12:49 - shape and this has to happen inside of
12:51 - the player which means I want to go to
12:54 - shape and then select a rectangle shape
12:57 - and set it to the right side
12:59 - something like this looks okay now we
13:03 - can save it under player.
13:05 - TSN cool with that we have the very
13:08 - basic player node this we want to add to
13:11 - our level so for example in the station
13:14 - I want to have the player somewhere and
13:16 - to keep all of this organized I want to
13:19 - inside of level add one more note which
13:23 - should be a Noe
13:25 - 2D and I am going to jump around quite
13:27 - quickly between the different noes
13:29 - so definitely pause sometimes if you get
13:32 - confused at the moment I am working
13:34 - inside of the level Noe and create node
13:37 - 2D called
13:39 - entities if I now save the level and go
13:42 - back to station we have another node
13:45 - with yellow
13:46 - text to that I want to add the player
13:50 - node like so and then let's move the
13:53 - player I don't know let's say here
13:56 - although the player is a little bit
13:57 - large to fix that back inside of the
14:00 - player scene I want to go to transform
14:03 - and then set the scale of the player for
14:05 - now to
14:06 - 0.25 for X and Y on top of that we need
14:11 - to update the Collision shape to align
14:14 - with the graphic like that if I now save
14:17 - all of this and go back to station this
14:20 - looks much more reasonable so we can
14:22 - move the player somewhere here although
14:25 - that being said I think the Collision
14:27 - shape is a little bit too large
14:29 - it should only cover the graphic nothing
14:32 - more that's better to make sure all of
14:35 - this is looking good let's run the
14:37 - entire game and that seems all right I
14:41 - guess what we could also do to the
14:43 - player is add another node which would
14:45 - be a camera
14:47 - 2D which we do want to make sure is
14:50 - enabled which it is by default and then
14:53 - for the zoom level I want to go with
14:55 - five for X and Y let's try all of this
14:58 - again
14:59 - and that should be looking a lot better
15:01 - cool so now we are focused on the player
15:04 - the issue now is that the player doesn't
15:05 - do anything at the moment and for that
15:08 - we have to add a script with the
15:10 - character body Tod player selected I
15:12 - want to add a script and then player. GD
15:15 - in the same
15:16 - folder so create and now we have a
15:20 - script for the player in there I want to
15:22 - Define quite a few attributes that
15:24 - should be changeable later on inside of
15:26 - the editor or in other words when the
15:29 - player node is selected inside of the
15:31 - inspector I want to be able to set
15:33 - something like the speed or the
15:35 - acceleration the friction the gravity
15:37 - the cool down for the guns and things
15:39 - like that or in other words I want to
15:41 - create export variables for example for
15:44 - the
15:45 - speed which for this particular example
15:48 - should be an integer with a default
15:50 - value of 200 which you could write like
15:52 - this it simply means that for the speed
15:55 - variable we are only accepting
15:57 - integers and the default value is going
16:00 - to be 200 but if you look on the right
16:02 - we have speed and we can update the
16:05 - value although all of the values have to
16:08 - be
16:09 - integers now this is not usually what
16:12 - you see in Gau because it takes a bit
16:14 - longer to write than doing something
16:16 - like this but the result would be the
16:19 - same if you writing this world operator
16:22 - the data type of the first value that
16:24 - you assign to this variable is going to
16:26 - be the only data type this variable can
16:28 - accept
16:29 - so in this case this would be an integer
16:31 - I can save all of this and inside of the
16:33 - parameter we have the same result now
16:36 - this we can organize just a bit better
16:38 - because later on we are exporting quite
16:40 - a few variables so I want to organize
16:42 - them via export
16:46 - groups to assign a name you have to an
16:48 - argument which should be a string in my
16:51 - case the first one should be
16:53 - move if you now look at the inspector we
16:55 - have a drop- down menu that we can open
16:57 - and in there we have to speed if you
17:00 - want to have multiple groups you can add
17:02 - another export group as well for example
17:05 - later on I want to have one for
17:07 - jump and any export variable you assign
17:10 - afterwards is going to be inside of this
17:12 - group for example if I save now at the
17:15 - moment we can't see anything because we
17:17 - are not exporting a variable in there
17:20 - but for example what we are going to
17:22 - Define is a variable for the jump
17:25 - underscore strength which is going to
17:28 - get a default value of the integer 300
17:31 - if I now save all of this on the right
17:34 - we have a tab for move and a tab for
17:37 - jump that way the inspector doesn't get
17:39 - too cluttered which I think is better
17:42 - but is entirely optional if you don't
17:43 - think these groups are useful you can
17:45 - just skip them entirely besides the
17:47 - speed for the movement I also want to
17:49 - have a few more variables the first one
17:52 - is the direction of the player which is
17:54 - going to get a default value of vector
17:59 - 2 do0 all in uppercase letters that way
18:04 - we are creating a vector 2 with X and Y
18:06 - where both values are zero and this we
18:08 - are using for the movement very soon
18:11 - besides that I want to have one more
18:13 - variable called cancore move which
18:17 - should simply be a Boolean value that by
18:19 - default is going to be true also
18:21 - Direction and move should not be
18:24 - exported they are simply there to
18:26 - process what we are specifying in the
18:28 - game but they shouldn't themselves be
18:29 - modifiable by the game designer to
18:32 - actually make the code do something I
18:34 - want to use the underscore process
18:37 - function which is going to be run on
18:39 - every single frame of the game in there
18:42 - I want to first of all check if we can
18:44 - move in the first place and if that is
18:46 - the case I want to get the player input
18:50 - and then apply the
18:53 - movement neither of these functions
18:55 - exist at the moment so gdo is going to
18:57 - complain to fix that I want to create
19:00 - Funk Gore input without any parameters
19:04 - and it doesn't do anything at the moment
19:06 - and I want to create Funk
19:09 - apply
19:11 - movement this one also doesn't do
19:13 - anything at the
19:14 - moment to get started with the input I
19:17 - want to get horizontal movement
19:22 - input for which we're going to overwrite
19:24 - the direction vector and since we are
19:26 - only moving left and right this should
19:28 - be Direction
19:30 - dox This value should be set by the left
19:33 - and right movement from the input map or
19:36 - in other words if I go to project and
19:38 - project settings and the input map we
19:40 - want to get the left and right input and
19:43 - determine from that if the player wants
19:45 - to move left or right the best way of
19:48 - doing
19:49 - that is with input and then get access
19:55 - this one measures the strength of the
19:56 - left and right input so what we have to
19:59 - add in here as an argument is the
20:01 - negative action first of all which in
20:02 - our case is the left
20:05 - input next up and let me expand the code
20:08 - a bit we do wants to have the positive
20:10 - action which in our case is going right
20:13 - so the right input good do is then going
20:16 - to combine these two values and we're
20:18 - getting a combined output in the form of
20:20 - a floating point value I can demonstrate
20:23 - that right away actually I want to print
20:25 - direction
20:27 - dox if I now run the code the game
20:30 - doesn't crash that's a good sign and in
20:33 - the output you can see a zero so this
20:35 - happens down here but if I press D on
20:38 - the keyboard we're getting a one and if
20:41 - I press a we're getting a negative 1 so
20:44 - with that we're getting a
20:47 - Direction that's a really good
20:50 - sign but you might be confused now I
20:53 - said that we're getting from this method
20:55 - a floating point value returned but in
20:58 - the out put let me open it we have
21:00 - gotten Zer -1 or 1 so what happened here
21:06 - and well at the moment I have only used
21:08 - the input from the
21:09 - keyboard which can only be on or off on
21:12 - basically any keyboard but this changes
21:15 - if you're using a game pad so let me run
21:18 - all of this again but now I am going to
21:20 - use input from my game pad and in there
21:24 - the fero I go to the right you can see
21:26 - that we get an increasingly large value
21:28 - that ends at one and if I go to the left
21:31 - we're getting smaller and smaller values
21:33 - that end at -1 meaning with that I get
21:36 - much more detail in my movement you do
21:40 - want to be aware of these differences
21:41 - but in our case they don't actually
21:43 - matter that much but keep them in mind
21:45 - in some cases they can be really
21:47 - important anyway with that we're getting
21:49 - the direction for left and right this we
21:52 - want to use to actually move the player
21:55 - which happens inside of apply movement
21:59 - in the most basic sense what we want to
22:01 - do is overwrite the velocity of the
22:03 - player and at the moment we want to
22:05 - update velocity
22:07 - dox which in the simplest terms could
22:09 - simply be Direction dox multiplied with
22:14 - the speed of the
22:16 - player the variable that we have defined
22:20 - earlier after we have that we want to
22:22 - call move and slide to actually apply
22:26 - the velocity to the movement and with
22:28 - that
22:29 - if I run the game I can move the player
22:32 - left and right this works I on the
22:35 - keyboard or with a Gamepad so we are
22:38 - capturing both mouse and keyboard input
22:40 - or Gamepad input also if I move very
22:44 - carefully on the game pad to the right I
22:46 - can move very slowly or rather I can
22:49 - Define the speed I want to move at
22:52 - whereas on the keyboard I only have move
22:54 - or not move
22:56 - basically now while this is a good start
22:58 - this kind of movement usually doesn't
23:00 - feel good so at the moment if this is
23:04 - the time of the game and this is the
23:08 - movement speed our player has a movement
23:11 - graph that looks something like this we
23:14 - have no movement at all then all of a
23:16 - sudden we're moving at a certain speed
23:17 - and then we stop
23:19 - moving this does not feel natural what
23:22 - you would rather expect in proper
23:24 - movement is a curve that looks like this
23:26 - where player accelerates then has a
23:29 - speed and then decelerates at some point
23:32 - this is also what we want to have in the
23:34 - game once we know that direction not X
23:36 - is not zero we want to move from zero to
23:39 - our maximum
23:41 - speed and then once Direction not X is
23:43 - zero again we want to go from our
23:45 - maximum speed to zero and this should
23:47 - happen over a certain amount of time for
23:51 - that I don't want to have this very
23:53 - basic velocity update anymore instead to
23:56 - apply a very simple mechanic for left
23:59 - and right
24:01 - movement I want to check if Direction
24:05 - dox has a value different from zero if
24:08 - that is the case we want to accelerate
24:10 - from zero to our maximum speed but we
24:13 - still want to update velocity dox and to
24:17 - get the value we want to use the move
24:19 - toward function which wants to have a
24:22 - couple of arguments you want to have a
24:24 - starting value a final value and then a
24:27 - Delta value
24:29 - which is going to Define how fast we are
24:32 - accelerating our starting point is going
24:35 - to be the current direction
24:38 - dox our final value is going to be
24:41 - Direction dox multiplied with this speed
24:46 - finally for the Delta value I want to
24:48 - have an
24:49 - acceleration that we have to multiply
24:51 - with Delta that we getting from process
24:55 - to make sure all of this is frame rate
24:57 - independent
24:58 - now for that to work inside of apply
25:00 - Movement we have to pass through the
25:03 - Delta
25:04 - argument and this has to become a
25:07 - parameter inside of apply movement the
25:10 - only other error we are getting now is
25:12 - that acceleration doesn't exist but that
25:14 - we can fix quite easily I want to create
25:16 - another export variable called
25:21 - acceleration which is going to be an
25:24 - integer that by default is going to be
25:26 - 500 if we now run all of this inside of
25:30 - the game I can press to the right and
25:32 - the player is moving and if I release
25:34 - the button the player doesn't stop
25:37 - moving that is because inside of
25:40 - direction we are only doing something if
25:42 - the player is not moving so once the
25:44 - player is moving we cannot change the
25:46 - movement anymore although inside of the
25:49 - game the player movement was really slow
25:51 - that is because inside of move toward W
25:53 - I have made a mistake this should be not
25:55 - direction. X but velocity dox
25:59 - X that way if I now run all of this
26:02 - again if I press to the right the player
26:05 - starts to move much faster but there's
26:07 - still
26:08 - acceleration or in other words if I set
26:11 - the acceleration to a really low value
26:13 - let's say 100 you should be able to tell
26:17 - this much better if I now press to the
26:18 - right we are starting slow and at some
26:20 - point reach our maximum
26:23 - speed that's a good sign although I want
26:26 - this value to be 500
26:30 - and also inside of apply
26:32 - movement if the player stops holding
26:34 - down left or right the player should
26:37 - feel some friction and slowly move back
26:39 - to a movement speed of zero or to be a
26:41 - bit more specific velocity. X very
26:44 - slowly should become zero again
26:46 - implementing that is going to be your
26:48 - exercise I want you guys if there's no
26:51 - more input to gradually change the
26:53 - player speed to zero pause the video now
26:56 - and figure this one out on your own
27:02 - inside of apply movement I want to add
27:04 - an else statement this is only going to
27:07 - trigger if direction dox is zero and if
27:11 - that is the case I want to update the
27:13 - velocity dox once again via the move to
27:17 - W
27:19 - method for the starting point I still
27:23 - want to use velocity
27:25 - dox but now the target value should be
27:29 - zero and for the Delta value I want to
27:32 - get some kind of friction that we will
27:35 - Define in just a second and multiply it
27:37 - with Delta now at this point gdau is
27:39 - going to complain that friction does not
27:41 - exist that we can fix quite easily I
27:44 - want to have another export variable
27:46 - called
27:47 - friction for which I have set a default
27:50 - value of 600 I can now Run the game
27:53 - again and if I move to the left we are
27:55 - accelerating and if I stop holding it we
27:57 - are are getting some friction and slowly
28:00 - stop and this is feeling much better
28:03 - although I think the game is quite soft
28:06 - in terms of acceleration and
28:09 - deceleration the default value for
28:11 - friction could probably be 900 and for
28:13 - acceleration we could go with
28:15 - 700 let's try this again and now we are
28:19 - starting faster and we are stopping also
28:21 - much
28:22 - faster now these values are really
28:24 - subjective so play around with them for
28:27 - your own game and just see what feels
28:29 - good there just isn't a universal answer
28:31 - or well in other words whatever feels
28:33 - good to you in the game is the right
28:35 - answer and the only way to get there is
28:37 - to experiment a lot so play around in my
28:40 - case though I want to go to the next
28:42 - part and that is jumping for which we
28:45 - will need two parts a jump strength and
28:49 - gravity now in this game I want to have
28:52 - the gravity as an export variable inside
28:54 - of the player meaning in there I want to
28:56 - have gravity with a default value of
29:01 - 600 I am only doing this because the
29:03 - player is the only entity inside of the
29:05 - game that has any kind of gravity if in
29:09 - your game you want to apply gravity to
29:11 - more entities you want to have this
29:13 - gravity either in some kind of global
29:15 - script or inside of the physics part in
29:18 - Gau so it's more globally
29:20 - available but I want to keep things
29:22 - simple now for jumping to work we first
29:25 - of all need gravity which I want to keep
29:28 - in a separate function so apply
29:30 - underscore
29:32 - gravity and then
29:34 - create Funk apply underscore
29:39 - gravity in the most basic sense all that
29:41 - we want to do in here is velocity now
29:44 - dot y plus
29:47 - equal
29:49 - gravity multiplied with Delta so it's
29:53 - frame rate independent for that we will
29:55 - need the parameter Delta and then has
29:58 - Delta into apply gravity once we have
30:01 - that I can run the game and at the
30:04 - moment you can't see anything because
30:07 - inside of the station the player sits on
30:09 - a collision shape but if I move the
30:11 - player to let's say here is and try all
30:16 - of this again player should be falling
30:19 - and he does
30:21 - perfect also apply gravity should always
30:24 - be applied it doesn't matter if the
30:25 - player can or cannot move so next up we
30:29 - want to apply jumping for that inside of
30:32 - get
30:33 - input I want to capture the jump
30:37 - input for which we want to have an if
30:40 - statement if input and is action just
30:45 - pressed the just press is really
30:47 - important because we only want to
30:49 - capture this input once this specific
30:51 - input that we want to capture is jump
30:54 - and if that is the case I want to set a
30:56 - jump variable to true now this jump
31:00 - doesn't exist right now so gdo is going
31:02 - to complain to fix that under my jump
31:06 - section I want to create a variable
31:08 - called jump which is simply going to be
31:11 - a Boolean value that by default is false
31:15 - once we have that inside of apply
31:18 - movement I want to move move and slide a
31:21 - bit further down and then add a section
31:23 - for
31:24 - jumping if jump is the case then I want
31:28 - to update velocity
31:31 - doy and set it to the
31:34 - negative jump strength that way the
31:38 - player is going to go up if I try all of
31:42 - this I can press space and the player is
31:45 - moving up the issue is the player never
31:48 - stops moving up and that is because this
31:51 - jump keeps on being true forever which
31:54 - means we keep on lowering velocity doy
31:57 - which is not ideal to fix that I want to
32:00 - set jump to BS once we have done a jump
32:04 - if I now tra off this again I can jump
32:07 - and the player only does a jump and I
32:09 - can also move left and right and that is
32:12 - coming
32:13 - together this is a good start but this
32:16 - jump system we have to modify quite a
32:18 - bit and I guess the part where we can
32:20 - start is terminal velocity to illustrate
32:24 - that if I go back to the level and then
32:28 - remove these
32:30 - platforms so I want to get rid of those
32:34 - two and then you can see the player
32:36 - falling for a bit longer and I guess for
32:38 - that we can also move the player up just
32:40 - a
32:42 - bit if I now Run the game the player is
32:45 - going to fall and it's going to fall
32:48 - increasingly
32:50 - fast this at the moment isn't
32:52 - particularly visible because we still
32:53 - have other things there that the player
32:55 - can land on and the entire distance
32:57 - isn't even that much but the issue is
33:00 - still important that the longer we fall
33:02 - the faster we fall and at some point we
33:05 - are falling so fast that there's simply
33:07 - no point to controlling the player
33:08 - anymore which we really want to
33:11 - avoid and avoiding all of that is
33:13 - actually quite easy we want to set on
33:16 - that jump I guess right below the other
33:18 - export
33:20 - variables another export variable that I
33:24 - called terminal uncore velocity for
33:28 - which I have set a default value of the
33:30 - integer
33:32 - 500 and then when we are applying the
33:36 - gravity just to demonstrate what we are
33:38 - getting I want to print velocity do y if
33:43 - I now run all of
33:45 - this you can see that we are getting a
33:48 - whole bunch of values while we are
33:49 - falling and we are landing at this
33:54 - point so I want to make sure that we
33:57 - never fall faster than
34:00 - 500 for that all we have to do is get
34:03 - velocity doy once again and then use the
34:07 - minimum function which is going to pick
34:09 - the smaller of two values in there I
34:12 - want to have
34:14 - velocity do y itself and then the
34:18 - terminal
34:20 - velocity that way once again I can print
34:24 - velocity
34:25 - doy run the entire game
34:28 - and now you can
34:30 - see that we are
34:33 - falling but we never exceed 500 this is
34:37 - our maximum fall speed cool that is
34:40 - working well so we don't need the print
34:42 - statement anymore next up I want to work
34:45 - on a variable jump speed if this is the
34:49 - player and we are pressing jump the
34:51 - player should be
34:54 - jumping but then we only get to the max
34:57 - maximum height if the player keeps on
34:59 - pressing jump but if the player releases
35:02 - the jump button let's say somewhere here
35:04 - then the player should start falling
35:06 - from this point and this needs to happen
35:08 - gradually the way I implemented that is
35:11 - that once we are jumping and the player
35:13 - releases the jump button really fast and
35:16 - we are increasing the gravity for a
35:17 - short amount of time or well until we
35:21 - are landing for that I want to create
35:24 - one more variable which I have called
35:26 - faster score Fall by default this one is
35:30 - also going to be false after that when
35:33 - we are capturing the
35:35 - input I want to check below the jump if
35:39 - input is action just released for the
35:44 - jump
35:46 - action if that is the case then I want
35:48 - to set faster fall to true that value we
35:53 - can use inside of gravity because in
35:57 - there we can add velocity do y once
36:00 - again and set this value to Velocity doy
36:05 - divided by two if faster fall is the
36:09 - case and we are moving down so and
36:12 - velocity dot Y is smaller than zero if
36:18 - that is not the case else we simply keep
36:20 - velocity dot y with that let me move the
36:24 - player back to the ground area run all
36:29 - of
36:30 - this if I now jump we can only jump a
36:33 - very small amount so something went
36:36 - wrong and I think to diagnose what's
36:39 - happening here let's print faster fall
36:43 - if I now Run the game you can see that
36:46 - we are getting faster fall all the time
36:49 - even though it should only be the case
36:51 - if we are in the air and we are
36:54 - releasing the jump
36:55 - button we only want to set faster for to
36:59 - true if the player is releasing the jump
37:01 - button
37:03 - and not is on Lor or in other words if
37:09 - the player is releasing the jump button
37:11 - if we not on the
37:12 - floor
37:14 - and velocity do
37:18 - y is smaller than zero so we are going
37:21 - up with that if I run this again you can
37:25 - see in the output that now fasta fall is
37:28 - false which means if I jump we're
37:30 - getting Thea jump height but if I start
37:32 - jumping and then release it we are
37:34 - setting faster fall to true so now we
37:37 - can only jump a little
37:39 - bit to fix this last bit when we start a
37:43 - jump I want to set jump to fults and
37:46 - faster fall fults as
37:50 - well let's try this one again and
37:53 - now I can jump the full height I can
37:56 - jump a bit and then release the
37:58 - button and now every time I jump again
38:02 - faster fall is faults when we start to
38:05 - jump so that way if I press jump very
38:08 - quickly we only jumping a small bit but
38:10 - if I hold down the button we are jumping
38:12 - much further and then you can control
38:17 - the jumping height quite a bit and while
38:19 - we are here there's one more thing that
38:21 - I do want to work on if I run the game
38:23 - again the issue is that the player at
38:26 - the moment can just jump in the air so
38:28 - we basically fly which obviously is not
38:32 - ideal for a platformer I only want to
38:35 - allow jump if the player is pressing the
38:37 - jump button and in there I want to check
38:41 - if is on lore and only then do we allow
38:45 - a jump that way I can run all of this
38:48 - again and I can press jump if we are in
38:51 - the air we cannot jump this only works
38:54 - on the floor so that is much better
38:58 - we are still not done with the jumping
38:59 - though because there are two more things
39:01 - that I want to implement that I talked
39:03 - about earlier we want to have a coyote
39:05 - jump and a jump buffer for coyote jump
39:09 - if the player falls off a cliff and then
39:10 - presses jump right away let's say after
39:13 - 0.1 second then the player still gets to
39:16 - jump even though technically he
39:18 - shouldn't be allowed to while this
39:20 - system doesn't make any sense in terms
39:21 - of physics in practice it makes the game
39:23 - feel much better and that's all we
39:25 - really care about for jump buffer if the
39:28 - player is falling and presses jump just
39:30 - before landing then we want to jump
39:32 - right away with that we avoid an awkward
39:35 - pause when the player is landing for
39:38 - both of those systems we are going to
39:41 - need a
39:42 - timer or well we're going to need two
39:45 - timers and to keep everything organized
39:48 - I want to add inside of entity another
39:51 - section called a note and ers
39:57 - although inside of the entity itself we
39:59 - are not going to add any timer we are
40:01 - just going to save the scene now inside
40:03 - of the player we getting a note called
40:06 - timers and to that I want to add two
40:09 - timer
40:10 - notes two timer notes the first one I
40:14 - have called coote then we can duplicate
40:17 - this the next one is called the jump
40:21 - buffer both of these need to be one shot
40:25 - they should not be repeated also auto
40:28 - start is not going to be the case for
40:30 - the wait time for the jump buffer I want
40:33 - to have a value of
40:34 - 0.25 or a quarter second for the coyote
40:38 - jump I want to have a value of
40:41 - 0.15 once again these are values you can
40:44 - play around with on your own there's no
40:46 - Universal answer here once I have those
40:49 - two timers back inside of the code to
40:52 - get started with the coyote jump I
40:54 - basically want to start the coyote jump
40:56 - timer if the player is falling off a
40:58 - cliff which means first of all we have
41:01 - to figure out when the player is falling
41:03 - off a cliff for that we want to work
41:06 - inside of a Ply movement and we don't
41:08 - have to print fast a fall anymore
41:11 - basically what we want to
41:13 - check after we have done all of the
41:15 - movement we want to know if the player
41:17 - is currently on the floor and if we are
41:20 - then updating all of the movement is the
41:22 - player still on the floor afterwards and
41:25 - also is the player falling down then we
41:27 - pretty reliably know if the player is
41:29 - falling off a
41:30 - cliff to figure this one out I want to
41:33 - create a new variable bar
41:37 - oncore floor which is simply going to be
41:40 - is on
41:43 - floor so that way we know before we are
41:45 - applying the movement if the play is on
41:47 - the floor or not and then after we have
41:50 - done the movement we want to check if on
41:54 - floor and not is on floor that way we
41:59 - know if the player was on the floor and
42:01 - is not on the floor anymore on top of
42:04 - that I want to check and velocity doy is
42:08 - greater or equal to
42:11 - zero if that is the
42:15 - case we want to for now print B of Cliff
42:21 - let's try this
42:23 - one inside of the game I can move to the
42:25 - right and we are falling a cliff let's
42:27 - try again we're falling again and once
42:30 - again this is working pretty good cool
42:34 - so once this is the
42:36 - case I want to start the coyote timer
42:39 - and then you can simply type coyote and
42:41 - we get timers and coyote I want to start
42:44 - this
42:46 - timer and while the timer is running I
42:49 - want to give the player the ability to
42:50 - still jump now for that you could work
42:55 - with the signals and check if the coote
42:58 - timer hasn't sent a timeout signal and
43:01 - during this time allow for a jump that
43:03 - would be possible but kind of Overkill
43:06 - what I think would be much better let me
43:08 - minimize apply movement and apply
43:11 - gravity and the bunk uncore process
43:15 - inside of the input we know when the
43:17 - player is pressing jump and at the
43:19 - moment we are allowing a jump if the
43:21 - player is on the floor this we can
43:24 - expand we want to allow a jump if the
43:26 - player sters on the floor or if the
43:30 - coyote
43:32 - timer has some time left so essentially
43:36 - once the player is falling off a cliff
43:38 - we are starting the timer and this timer
43:39 - runs for 0.15 seconds and during this
43:43 - time the player is still able to jump
43:46 - let's try this one although it's going
43:48 - to be a bit difficult to demonstrate so
43:50 - I got to follow off the cliff and I can
43:51 - still jump let's try again there you can
43:55 - see it works fairly well
43:57 - the duration might be a bit too long so
43:59 - let me fall a bit longer and I cannot
44:01 - jump
44:02 - anymore this you might want to test on
44:04 - your own game because it's probably very
44:06 - hard to see on YouTube but it definitely
44:09 - works and I guess to demonstrate that
44:11 - this is working we can set the coyote
44:15 - duration to 1 second which would be a
44:18 - crazy long time so now I can fall off
44:22 - and still jump even after falling for a
44:25 - while
44:27 - which does look very strange indeed
44:30 - let's not do that
44:32 - 0.15 seconds I think it's a decent value
44:36 - with that covered we can work on the
44:38 - jump buffer this part is going to be
44:41 - another exercise for you if the player
44:43 - is falling and presses jump just before
44:45 - landing make the player jump right away
44:48 - or to be a bit more visual if the player
44:51 - currently is falling and we are just
44:54 - about to reach the floor and the player
44:56 - presses jump with a bit of space before
44:59 - the landing then the player should jump
45:02 - right away as soon as we are landing for
45:05 - that we already have a timer Noe use
45:07 - that to implement this jump buff a
45:09 - mechanic so pause the video now and see
45:11 - how far you
45:15 - get we have to expand the input for the
45:17 - jump just a bit if the play has pressed
45:21 - jump at the moment we are only checking
45:23 - if we on the floor or if we have the
45:25 - coyote timer running besides that I also
45:28 - want to check if velocity do y is
45:33 - greater than zero I.E we are falling and
45:37 - not is on floor or in other words we are
45:41 - falling and we are not on the floor if
45:43 - that is the case I want to get the jump
45:47 - buffer and start the timer after that
45:51 - inside of apply movement at the moment
45:55 - we are only checking if the player is
45:57 - jumping or well if the jump variable is
46:00 - true but we also want to check or jump
46:07 - buffer has time left this we have to
46:11 - combine with and is on lore we are going
46:15 - to jump if the player is pressing the
46:17 - jump button or if the jump buffer is
46:20 - active and we are on the floor which can
46:22 - only be the case if we have recently
46:25 - landed so with that that I can try the
46:28 - game again and now I can
46:31 - jump right away if I press jump just
46:34 - before landing and just to demonstrate
46:37 - if I comment out this part and run all
46:41 - of this again and I try to jump multiple
46:44 - times there's always a very small pause
46:47 - between the jumps which just doesn't
46:49 - feel good so this jump buffer can make
46:52 - quite a bit of a difference but that's
46:55 - basically all we need to implement a
46:56 - jump buffer so I hope this part wasn't
46:58 - too difficult the last major part for
47:01 - the movement is going to be a dash
47:03 - mechanic for which I want to go all the
47:06 - way to the top and then under move I
47:08 - want to have another variable called
47:11 - Dash which is going to be a Boolean
47:14 - value that is false by default besides
47:17 - this variable I want to export another
47:19 - variable and for this I want to have
47:21 - export
47:23 - range with a value from 0.1 1 2
47:28 - 2 which is going to define the variable
47:31 - dashore cool
47:34 - down by default I went with
47:37 - 0.5 this variable is going to Define
47:40 - when the player can Dash again after
47:42 - having just dashed and if you have
47:44 - export range you can go to player and
47:47 - under move you now have a slider that
47:50 - sets a floating point value which is
47:53 - quite nice to work with so with that we
47:56 - first first of all want to figure out
47:58 - when the player is pressing the dash
48:00 - button and let me clean all of this up
48:02 - just a bit there we go inside of get
48:06 - input I want to check for Dash or well
48:11 - Dash input to be a bit more precise but
48:13 - you get the idea in there I want to
48:15 - check if
48:18 - input is action just pressed and we have
48:22 - a dash action although we do need a
48:26 - second condition and velocity
48:31 - dox you could add is different from zero
48:34 - but it's not really
48:36 - necessary the basic idea here is that
48:39 - the player should only be allowed to
48:40 - dash if we're moving in One Direction we
48:43 - cannot really dash in place that would
48:45 - be weird if this if statement triggers
48:48 - we want to set Dash to through with that
48:52 - in place we can work inside of app
48:55 - movement and then work on
48:58 - the
49:00 - dash first of all like for the jump I
49:03 - want to check if Dash is the case and
49:06 - then set Dash to faults right away now
49:10 - we have to implement the actual Dash
49:11 - mechanic and for that I am going to use
49:14 - a tween I want to have a dashore tween
49:18 - which we are creating via create
49:22 - twin now in case you don't know what the
49:24 - twin is it's B basically a move to
49:28 - function that is much more powerful or
49:31 - in other words we can specify any
49:33 - attribute of the player and then
49:35 - gradually change the value of this
49:36 - attribute over time this we can do in a
49:39 - couple of different ways twins are quite
49:41 - flexible for example what we could be
49:43 - doing is we can use the dash
49:47 - TW and then tween a property first of
49:51 - all for that we will need an object
49:53 - which in our case is the note itself so
49:55 - self then we need the actual property
49:58 - which needs to be a string in our case
50:00 - the
50:01 - velocity although in our case we only
50:04 - care about the X part of the Velocity
50:06 - which we can get via colon and then X
50:09 - next up we will need the final value
50:12 - which in our case is going to be
50:15 - velocity
50:16 - dox plus
50:19 - direction do X multiplied with some kind
50:23 - of static value that is going to be our
50:25 - Dash distance but now let's go with 600
50:28 - finally we will need a duration which I
50:30 - have set to 0.3 seconds and as opposed
50:34 - this part could be slightly
50:36 - confusing basically imagine that this is
50:40 - our player and our player is currently
50:42 - moving to the right from that
50:44 - information we want to make the player
50:46 - Dash in this direction or in other words
50:49 - we want to get the current velocity and
50:52 - then update it by adding the current
50:54 - direction multiply it with some kind of
50:56 - speed let's try all of that and see what
50:59 - happens if I now Run the game and press
51:02 - Dash the player is
51:04 - Dashing so that is working although it's
51:10 - quite strong that is because after
51:12 - playing this tween our velocity is
51:15 - really really strong so ideally after
51:18 - this tween is finished we want to set
51:20 - the velocity of the player to something
51:21 - more reasonable or in other words we are
51:24 - stopping the player for that we can get
51:27 - the dash tween again and then connect it
51:31 - to a signal the signal that we want to
51:33 - Target is called finished so we know
51:35 - when the tween is finished and then we
51:38 - want to call a function which I have
51:40 - called on
51:42 - dashcore
51:45 - finish this function doesn't exist at
51:47 - the moment so let's do it all the way at
51:49 - the bottom I want to have Funk on dash
51:54 - finish if that one is the case I want to
51:57 - get the velocity dox of the player and
52:00 - move to Ward from the current value so
52:03 - velocity dox to Zero by a certain value
52:07 - I simply added 500 in here to keep it
52:09 - simple if I now run all of this again I
52:12 - can move to the left and dash and now we
52:16 - are stopping which is much
52:21 - better and that is actually controllable
52:24 - I can also jump and dash this is mostly
52:28 - working the one thing I don't like about
52:30 - it is that if we are dashing gravity is
52:33 - still applied to us so we always falling
52:37 - down to fix that part under
52:41 - jump I want to add another variable the
52:46 - gravity uncore
52:49 - multiplier the value for this one and
52:51 - this always has to be an integer is
52:53 - going to be one and essentially once we
52:56 - start dashing I want to set the gravity
53:00 - multiplier to zero and when we are
53:03 - applying the gravity before we are
53:06 - setting the minimum value I want to
53:08 - update velocity dot y one more time all
53:12 - I want to do in here is get velocity doy
53:15 - and multiply it with the gravity
53:19 - multiplier also after we have finished
53:22 - dashing we need to set this gravity
53:25 - multiply
53:27 - back to one so that the gravity applies
53:31 - to us once
53:33 - more let's try all of that if I now jump
53:38 - and
53:40 - dash we stay in the air so that is
53:44 - working really well perfect that is
53:47 - looking really good we are nearly done
53:50 - there's just one more issue if I run the
53:52 - game again and let's say I jump and then
53:55 - press Dash really fast the player can
53:58 - basically Sprint through the entire
53:59 - level which obviously isn't good for
54:03 - that we have already started setting a
54:05 - dash cool down but we're not using it at
54:07 - the moment to fix that I want to add
54:12 - inside of the timers in another note I
54:15 - guess I can copy the jump buffer and
54:17 - change the name to dash cool down for
54:21 - the wait time we can simply go with 1
54:23 - second we're going to overwrite this
54:25 - using the dash cool on variable anyway
54:28 - but one short has to be activated back
54:31 - in the
54:32 - code once the scene is ready or in other
54:35 - words Funk uncore ready is running then
54:39 - I want to get the dash cool down Noe and
54:42 - set the weight time to whatever we have
54:45 - specified inside of Dash cooldown this
54:48 - part isn't strictly necessary you could
54:51 - simply Define a value or a wa time
54:53 - inside of Dash cooldown and you would be
54:55 - good to go
54:57 - but I find this setup a bit more elegant
54:59 - because that way inside of the player
55:01 - under a move we have a dash cool down
55:04 - and that just feels more
55:07 - elegant I suppose this part is a bit
55:09 - more subjective in fact when I have
55:11 - created a coote timer and the jump
55:13 - buffer I haven't used that system so I'm
55:16 - not entirely consistent
55:18 - myself I suppose in your case if you
55:20 - create a real game be consistent either
55:23 - always work with the weight time inside
55:25 - of the timer or or have some kind of
55:27 - export range
55:29 - variable either way is fine just be
55:33 - consistent if you mix the two ways up
55:35 - it's going to get really confusing
55:37 - really fast now to use all of that we
55:41 - want to work inside of get
55:45 - input in there at the moment we are
55:47 - checking for the dash input if the
55:50 - player is pressing the button and if we
55:52 - have movement on top of
55:54 - that I want to check and not Dash coold
55:59 - down timer as time left and then as soon
56:04 - as we are pressing the dash button I
56:06 - want to start the
56:07 - timer so Dash cooldown do
56:12 - start and with that I can run the entire
56:15 - game once again I can now dash and
56:19 - there's always a delay between the
56:22 - dashes
56:27 - cool that's looking really good that
56:29 - means we are nearly done with the player
56:31 - movement there's just one more thing
56:33 - that we have to work on and that is the
56:35 - player ducking for that under
56:39 - movement I want to have another variable
56:42 - called duck actually I call this one
56:44 - duck King but doesn't really matter this
56:47 - is going to be a Boolean value that by
56:49 - default will be false after that inside
56:53 - of get input I want to have another
56:55 - section for
56:57 - ducking in there we are overwriting the
57:00 - ducking variable and the value here is
57:03 - simply going to be input is action
57:07 - pressed and important for this one we do
57:10 - want to get action pressed not action
57:12 - just pressed because this one should be
57:14 - checked
57:16 - continuously the input we want to check
57:18 - is called
57:19 - duck also this should only be possible
57:23 - if the player is on some kind of floor
57:27 - since those two values combined are
57:28 - going to return a Boolean value we are
57:31 - good to go now I suppose we could print
57:34 - the results print
57:36 - ducking and then inside of the game I
57:39 - can press the duck button and we're
57:42 - getting true or false although other
57:44 - than that it doesn't do anything at the
57:46 - moment to make it actually do something
57:49 - we want to minimize get input and then
57:51 - work inside of apply
57:53 - movement if the player is ducking we
57:56 - shouldn't allow left or right movement
57:59 - which means after we are getting the
58:01 - velocity from that part I want to check
58:04 - if
58:05 - ducking and then update velocity dox
58:09 - from that if the player is ducking we're
58:11 - going to set velocity. X to Zero that
58:14 - way if I run all of this again I can
58:17 - move left or right but if I press the
58:19 - duck button we do not get any horizontal
58:21 - movement anymore we can still
58:24 - jump and then we can move so this part
58:28 - is working this is a bit hard to see if
58:31 - you're just watching the video so
58:32 - definitely try this one on your own it's
58:34 - a bit strange if you don't see the
58:35 - proper Graphics something we are going
58:37 - to work on
58:39 - next but anyway with that we have quite
58:43 - a bit of logic for the player movement
58:46 - so we have written nearly 100 lines of
58:48 - code and I hope the entire system so far
58:50 - wasn't too complicated I suppose the one
58:53 - additional thing you could be adding is
58:55 - a wall jump
58:56 - for that you would want to check if the
58:58 - player's on a wall and then lower the
59:00 - gravity that would be a good starting
59:02 - point you would need a bit more but I
59:04 - think at this point you can figure this
59:05 - part out on your own in my case I am
59:08 - going to continue with the player
59:10 - Graphics that part is much more
59:11 - important the next major bid are the
59:13 - player graphics for which we have a ton
59:15 - of animations that need to be managed in
59:18 - fact the player consists of two parts
59:21 - the legs and the Torso the legs are
59:23 - controlled by the movement Direction
59:25 - while the Torso gets updated by the aim
59:27 - Direction which we don't have yet also
59:31 - for this section we will use an
59:33 - animation tree which I think lots of
59:35 - people struggle with I'll be extra
59:37 - detailed for that part first of all
59:40 - though back inside of Gau and to play a
59:42 - scene I want to add the Crosshair for
59:45 - which first of all I want to add a
59:47 - Sprite 2D to the player scene this we
59:50 - can rename to cross
59:54 - air and then if if you look at the
59:57 - graphics bit we have guns and Crosshair
60:01 - PNG this I want to direct in there and
60:04 - then we have the
60:05 - Crosshair at the moment this thing is a
60:08 - bit too large so let's go to transform
60:10 - and
60:11 - 0.1 might be a bit too small let's go
60:14 - with
60:15 - 0.25 we can readjust out of this when we
60:18 - have the proper player Graphics what is
60:21 - much more important for now is that we
60:23 - are controlling the position of this
60:25 - cross here the way you want to think
60:27 - about that is if the player is aiming to
60:30 - the right that I want this Crosshair to
60:33 - be roughly here so we are indicating
60:35 - visually to the player that we can shoot
60:38 - to the right and this we want to do for
60:40 - all of the directions the player can
60:42 - shoot to the top right up up left and so
60:46 - on we get in total eight directions also
60:51 - really important for this part we should
60:53 - get to this aim Direction via the mouse
60:55 - or via at the game pad speaking of which
60:58 - if you look at the project settings in
61:01 - the input
61:02 - map if you scroll down we have aim left
61:06 - Aim down aim up and aim right and those
61:09 - only have the joypad axes all of that we
61:12 - using the right joystick and those are
61:15 - only necessary for the game pad if we
61:17 - have a mouse and keyboard for the aim
61:18 - direction we will use the mouse for
61:20 - which we don't need an input map so it's
61:23 - not in here for all of that I want to
61:26 - work inside of get input we already have
61:29 - a few things in there next up I want to
61:32 - add aim I want to create two variables
61:35 - the first one is the aim input game pad
61:40 - besides that I want to have an aim input
61:43 - uncore Mouse and let's for now focus on
61:47 - the game
61:49 - pad for that basically all I want to do
61:52 - is to get the input from the right
61:54 - joystick and that I can get via input do
61:58 - get Vector get Vector works very similar
62:02 - compared to what we have seen with get
62:04 - axis the only difference is that get
62:06 - axis works on one axis while get Vector
62:09 - works on two so there we can get left
62:12 - right up and down we have to start with
62:15 - the left action or the negative action
62:17 - which in now case is aim left and let me
62:20 - expand all of this next up we want to
62:22 - have positive X which in our case is
62:25 - going to to be aim right the next
62:28 - argument is the negative Y which in our
62:30 - case is aim up and finally we will need
62:32 - the positive Y which is aim down and
62:37 - that is all we need if I now print aim
62:40 - input gam pad and Run the
62:44 - game I am only using my Gamepad now and
62:48 - I can move things around for example if
62:51 - I move the game pad joystick to the
62:53 - right we're getting roughly one and his
62:56 - zero if I go down we're getting roughly
62:59 - zero and one let me get it a bit better
63:02 - there we go and so on so this input
63:04 - works pretty well perfect that means
63:08 - next up we want to get the mouse input
63:11 - what we want to do for this one let me
63:13 - comment this part out and go back to the
63:16 - player scene so if I show my mouse there
63:19 - we go I basically want to get the
63:22 - direction between The Mouse and the
63:24 - center of the player or in other
63:27 - words if the mouse for example is here
63:31 - and the center of the player is here I
63:33 - want to get this Vector but for this
63:36 - part you do need to be careful because
63:38 - when we are inside of the
63:41 - station we have the player anywhere
63:43 - inside of the level so the center of the
63:45 - player can be a very relative
63:47 - number especially if you add a camera
63:49 - this can get a bit confusing although
63:52 - fortunately we don't really have to
63:54 - worry about it too much because inside
63:56 - of gdau there is a function called get
63:59 - local Mouse position which is giving us
64:02 - well the local Mouse position so we
64:04 - don't have to worry about the actual
64:05 - center of the player we only care about
64:08 - the mouse position inside of the player
64:09 - scene basically let me print a result so
64:13 - aim input Mouse I can now Run the game
64:17 - and it should be visible there we go so
64:20 - we can see if a mouse is to the right of
64:22 - the player we are getting eight and
64:26 - roughly zero if I go to the left of the
64:29 - center of the player we get ne8 and a
64:32 - very small number for
64:34 - y now this we can improve just a bit
64:37 - because this Vector that we are getting
64:39 - should be
64:41 - normalized that way I can run all of
64:43 - this again and now we can see the
64:45 - numbers a bit better if a mouse is to
64:46 - the right of the center of the player
64:48 - we're getting for the vector X being one
64:50 - and Y being roughly zero next up we have
64:54 - to figure out which of these variables
64:56 - to use and for that I have created
64:59 - another variable at the top under move I
65:03 - have
65:05 - controller underscore active which is
65:09 - going to be a Boolean value that by
65:11 - default is true I do assume that by
65:14 - default the player wants to use a game
65:16 - pad because that just feels better
65:19 - however as soon as we're getting Mouse
65:20 - input I want to disable this value but
65:24 - first of all I want to create another
65:27 - variable VAR aimore input this one is
65:31 - going to be aim input gamad if
65:35 - controller active and I realize this
65:39 - should be called gam pad just to be a
65:40 - bit more consistent so Gamepad active
65:44 - let's do it at the top here as well game
65:47 - pad
65:49 - active if that is not the case else I
65:52 - want to use the aim input Mouse we do
65:56 - have to refine this just a bit more but
65:58 - for now this is fine first of all I want
66:01 - to work with Gamepad active and for that
66:05 - I basically want to check if we have any
66:07 - kind of mouse input and if that is the
66:09 - case gamad active should be
66:12 - false now to track Mouse Movement we
66:16 - will need another inbuilt function in
66:18 - Gau called function underscore input
66:22 - because in there we can get the input
66:24 - event with which can track the mouse
66:26 - very easily all we have to do is if
66:30 - event is
66:33 - input Mouse
66:36 - motion this is going to trigger as soon
66:38 - as we have any kind of mouse movement
66:40 - for example I could print Mouse is
66:44 - moving if this if statement triggers
66:47 - which is going to be whenever the mouse
66:49 - is moving so inside of the game if I
66:51 - move the mouse we get mouse is moving if
66:54 - that is the case I will want to get game
66:56 - pad active and set it to fals also in
67:00 - there I want to check the same thing we
67:02 - have done inside of this line where we
67:06 - are checking the aim
67:09 - input if we get a value from this thing
67:13 - returned then I want to set game pad
67:15 - active back to true so with that logic
67:19 - as soon as the player is using the mouse
67:21 - we are switching to the mouse input and
67:23 - if the player starts aiming with the
67:25 - GamePad then we are using the game pad
67:27 - again now you might be wondering why do
67:30 - we only activate the game pad if the
67:33 - player is aiming in a different
67:34 - direction with the game pad why not
67:36 - activate the game pad if we are pressing
67:37 - shoot or if we are moving the player and
67:40 - well we don't need to if you look at the
67:43 - project input map for the left Movement
67:47 - we are already capturing the keyboard or
67:49 - the GamePad at the same time so for this
67:52 - part it doesn't really matter what kind
67:54 - of input we have the only part where we
67:56 - have to separate The Mouse and the game
67:58 - pad is when we are aiming but once we
68:01 - have that we can work on the next part
68:04 - and the issue we now have to fix is if
68:06 - this is the player we want to have a
68:09 - Crosser to the right to the bottom right
68:11 - and to the bottom at least for this
68:14 - section what we do not want is a Crosser
68:17 - in between so in this area and in this
68:20 - area it shouldn't be possible for the
68:22 - player to have the Crosshair we only
68:25 - want to allow certain positions which
68:28 - basically means that we want to round
68:30 - this aim
68:32 - input or to be a bit more specific I
68:35 - want to check if a input has any value
68:39 - which we can check via the length if
68:42 - this value is greater than
68:44 - 0.5 then we know we're getting some kind
68:46 - of reasonable movement and remember we
68:49 - can get a value that is very low because
68:52 - on a game pad you can move the joystick
68:54 - just a bit but we want to have at least
68:56 - some activation strength required
68:58 - here and if that is the case I want to
69:01 - set an aimore Direction which doesn't
69:05 - exist yet but at the top I want to
69:08 - create another section so let me copy
69:11 - the export group and I want to have a
69:14 - section for the gun for now in there I
69:18 - want to have an aimore Direction which
69:22 - is going to be a vector 2 that by
69:25 - default points to the
69:27 - right also I guess while we are here we
69:30 - can create an export variable that I
69:33 - have called Crosshair uncore
69:36 - distance which gets a default value of
69:41 - 20 with that back inside of the aiming
69:45 - section I want to make sure that the aim
69:47 - Direction gets only specific kind of
69:50 - values although that sounds almost too
69:53 - complicated basically all that we want
69:55 - to do is create a vector 2 with X and Y
69:59 - and this value we're getting from the
70:02 - aim input which is either going to be
70:04 - for the GamePad or for the
70:08 - mouse so in there I want to get the aim
70:10 - input do X and the aim input
70:15 - doy let me print the result so we can
70:19 - tell what's going on Aim input and let's
70:22 - run all of
70:23 - this if I show my mouse you can see that
70:27 - we are getting the same result we had
70:29 - earlier so if I am to the right of the
70:31 - player we're getting roughly one and
70:33 - zero so we know we are pointing to the
70:35 - right and if I use the GamePad I can
70:38 - press up and we are getting similar
70:41 - values so right now I am holding my
70:44 - joystick to the left and we're getting
70:46 - negative - 1 and roughly zero so this is
70:50 - working reasonably well but we are still
70:53 - covering a whole range whereas I only
70:56 - want the player to be able to point to
70:58 - the right or up basically and that we
71:01 - can achieve by rounding both of them so
71:05 - aim input dox aim input doy and both
71:09 - should be rounded that way let me print
71:13 - the aim Direction I can run all of this
71:16 - again and if my mouse is to the right
71:18 - we're getting one and zero if I go up
71:21 - we're getting one and negative 1 and if
71:23 - I'm just above the player we're getting
71:25 - 0 and-1 so this part is working pretty
71:28 - good I can also use the game pad and if
71:32 - I hold up we getting zero and negative 1
71:34 - if I hold right we're getting one and
71:36 - zero and so on so that covers the input
71:40 - with that we simply have to get the aim
71:43 - Direction into the Crosshair Sprite the
71:47 - one we have created earlier and then we
71:50 - can update the position in fact for all
71:53 - of this I want to create another screen
71:55 - script inside of the Crosshair to keep
71:57 - things a bit more organized I want to
72:00 - create a new script and create a
72:02 - Crosshair then we don't need any of this
72:06 - and we can start writing our own logic
72:09 - although first of
72:11 - all I think if you look at scenes and
72:14 - entities this could be a bit better
72:16 - organized because for the player we are
72:19 - going to create a few more scenes so I
72:22 - think what's going to be a good idea is
72:23 - to create a new folder inside of
72:26 - entities called player and then put all
72:30 - of the player stuff so the crossair
72:32 - player GD and player scene inside of
72:35 - that folder it's not necessary but we
72:38 - are going to create a few more entities
72:40 - and this just feels cleaner all right
72:43 - next
72:44 - up we don't need get input
72:48 - anymore and instead I want to create
72:50 - another function let's do it right at
72:53 - the top function
72:57 - animate this function is going to cover
73:00 - all of the animations for the
73:02 - player and for now I want to get the
73:06 - Crosshair so this bright Tod that we
73:09 - have created just a second ago this
73:12 - Crosshair and on that we want to call a
73:14 - method I call this one
73:16 - update for which we're going to need
73:18 - three arguments the aim direction we
73:23 - want to know the Crosshair distance and
73:25 - we want to know if the player is ducking
73:27 - or not because if that is the case we
73:30 - want to lower the crossair by just a few
73:32 - pixels once we have that inside of
73:35 - cross. GD we want to create function
73:38 - update with a direction a distance and
73:42 - ducking all we really want to do in
73:44 - there is to update the position of the
73:47 - Crosshair and since this crossair is a
73:49 - child of the player we know that player
73:52 - is always in the position zero and zero
73:55 - which means for our purposes all we have
73:57 - to do is get the direction and multiply
74:00 - it with the distance and then we should
74:03 - already get something the last thing
74:05 - that we have to do is call this animate
74:08 - function that happens inside of process
74:11 - if the player can move I also want to
74:14 - call
74:15 - animate let's try all of that and now
74:19 - we're getting the Crosshair following
74:21 - the mouse so very happy with that and if
74:25 - I use the game pad I can point up up
74:28 - left to the left and I get all of the
74:30 - directions so this part is working
74:33 - pretty well if you feel like the
74:35 - crossair is too close you can simply go
74:37 - to the player on the gun we have
74:39 - crossair distance if I set this to let's
74:42 - say 50 and try the entire thing again
74:46 - then the Crosshair is much further away
74:49 - that is definitely too much so play
74:52 - around and see what value you like I'm
74:54 - going to stick with 20
74:56 - nearly done there's just one more thing
74:57 - we need and that is we have to cover
75:00 - ducking for that I want to create an
75:02 - offset so bar duck underscore offset is
75:07 - going to be for now let's say six if
75:11 - ducking and if is not the case else it
75:13 - should be
75:15 - zero and this value I want to add to the
75:18 - position which means we have to add a
75:20 - vector two with X being zero and Y being
75:24 - the duck
75:27 - offset with that if I run the game again
75:31 - and the crossair is pointing to the
75:32 - right I can duck and to crossair is
75:34 - going down just a bit once we have the
75:37 - proper Graphics this is going to look
75:38 - much more reasonable although this isn't
75:42 - perfect yet because this six isn't ideal
75:45 - ideally what I
75:47 - want inside of the player under gun is a
75:53 - variable Ros hair
75:56 - y
75:58 - offset which is going to get a value of
76:01 - six and this value we want to use for
76:03 - the Crosshair and later on for a couple
76:05 - of other things and also this value
76:08 - doesn't change so it can be a
76:11 - constant so now we have to figure out
76:13 - how to get this Crosshair y offset into
76:17 - the actual Crosshair we could pass it in
76:20 - as an argument and I guess that would
76:22 - work but it doesn't feel right instead
76:25 - what I have done once this scene is
76:28 - ready so on ready I want to create a y
76:33 - of set and for that we want to get the
76:37 - parent of the
76:39 - scene and since that is the player in
76:42 - there we have the
76:44 - Crosshair y of set which is what we can
76:48 - use instead of this six to make all of
76:51 - this a bit more flexible the end result
76:54 - though should still look the same so I
76:56 - can duck and we get the same movement
76:58 - this also works in other
77:00 - directions that is pretty nice but now
77:03 - we are storing the offset for ducking in
77:05 - one central place so if we're changing
77:08 - the graphics later on we have to update
77:11 - one number and then everything updates
77:12 - along with it which is much more
77:15 - reliable cool with that we have the
77:18 - crossair and that covers the entirety of
77:20 - the Crosshair actually so I can close
77:22 - this script to keep things a bit more
77:25 - streamlined next up I want to create the
77:28 - actual player graphics and that part is
77:31 - going to get a bit more
77:33 - complex so to keep things a bit more
77:35 - organized I want to create a separate
77:38 - scene purely for the player Graphics
77:41 - which means a new scene the parent scene
77:44 - is going to be a node 2D let's call it
77:47 - player
77:49 - Graphics this I want to save under
77:52 - scenes entities and
77:55 - ler and then we are going to need a
77:57 - whole bunch of animations and for that I
78:01 - want to copy in a couple of things so
78:04 - let me open the scene tutorial data in
78:08 - there we have the player animation we
78:10 - have a Lex animated Sprite with duck
78:13 - idle jump and run very simple
78:18 - animations besides that we have the
78:21 - Torso and let me hide the so soier that
78:25 - part comes later inside of the Torso we
78:28 - have a Sprite sheet with all of the
78:31 - player
78:32 - images in fact let me open that part
78:36 - under entities we have player.png if I
78:40 - direct this thing in you can see that on
78:43 - there we have all of the various
78:46 - positions for the Torso with the
78:47 - different guns the first line is for the
78:50 - AK the second line for the shotgun and
78:52 - the final one for the rocket and if you
78:54 - go down a bit we have all of the lack
78:58 - positions there's quite a bit of white
79:00 - space because I messed up the planning
79:03 - but that's really not that much of an
79:04 - issue to animate the Torso we are using
79:07 - an animation player and in there we have
79:11 - all of the animations I talked about
79:13 - earlier so for example in there we have
79:16 - AK down which is basically one image of
79:18 - the player pointing down with the AK
79:22 - selected if I go to Rocket down or Ro
79:25 - down left we're getting the rocket
79:27 - launcher pointing to the bottom
79:29 - left so that's really all that's
79:31 - happening in here basically via the
79:34 - animation player I am selecting one
79:36 - frame from the Torso
79:38 - Sprite that part isn't hard to do it's
79:41 - just tedious so it's kind of annoying to
79:43 - do it for a tutorial to skip all of that
79:47 - I want to copy the Lex the Torso and the
79:49 - animation player and copy them and then
79:52 - drag them into the player graphics
79:55 - you should still get something like this
79:58 - where you can animate the player torso
80:00 - via the animation player so let me
80:03 - select the shotgun left and we're
80:05 - getting the shotgun left also for the ls
80:08 - for the animated Sprite you can get idle
80:11 - and if you click on run and play the
80:14 - animation you should be getting an
80:16 - animation so that part is also working
80:20 - although I do want to set idle to
80:21 - autoplay and I think before we continue
80:24 - definitely have a look around the
80:26 - animation player and the animated Sprite
80:28 - so you know the setup of what we're
80:30 - working with once again none of this is
80:32 - particularly difficult it's just a lot
80:34 - of stuff so I hope it's not
80:37 - overwhelming now for all of this let me
80:39 - select the default AK right so we have
80:43 - the default look of the player this I
80:46 - want to add to the actual player scene
80:49 - in there I want to add another scen
80:51 - player
80:52 - graphics and this should
80:55 - be a bit more in the center something
80:59 - like this and then we don't need the
81:01 - Sprite Tod anymore we can just get rid
81:03 - of it entirely also for the Collision
81:05 - shape we want to update the shape do
81:09 - something that fits the player a bit
81:10 - better in fact I don't want to have a
81:12 - rectangle at all anymore I want to have
81:15 - a capsule shaped 2D which usually feels
81:18 - a lot
81:21 - better and then we have to get the
81:23 - points just write something like this
81:26 - and make sure that the bottom of the
81:28 - player aligns with the Collision shape
81:32 - so right now we have half a pixel of an
81:34 - offset to fix that for the player
81:37 - Graphics under
81:38 - transform we want to move up by
81:41 - -7.5
81:43 - pixels and then align the Collision
81:45 - shape along with it and that looks good
81:48 - now we can get rid of the
81:50 - ruler and we have a proper Collision
81:53 - shape let's try the
81:55 - game and this is feeling much better all
82:00 - the collisions also work just fine and
82:03 - we can still
82:04 - Dash that's a good start
82:07 - perfect that means we can close the
82:09 - tutorial data scene and then work inside
82:12 - of player graphics for this one we want
82:15 - to add a script to player Graphics which
82:19 - should also be inside of entities player
82:21 - and then we can call it player Graphics
82:23 - that part is totally fine there are two
82:25 - things that we want to do in here number
82:27 - one is we want to update the legs which
82:31 - we are going to do via a function and
82:33 - for this function we will need three
82:35 - arguments the direction if the player is
82:39 - on the
82:40 - floor and if the player is stucking
82:44 - although for now we don't want to do
82:46 - anything in here because first of all I
82:49 - want to create another function called
82:51 - update Oro for this one we will also
82:54 - need a direction although for this
82:57 - direction we're talking about the aim
82:58 - Direction while the direction for the
83:00 - legs was the moving Direction but since
83:03 - those two are separate functions we can
83:05 - keep direction for the Torso we also
83:08 - want to know if the player is stucking
83:10 - and finally we want to get the current
83:12 - gun because for the Torso we have three
83:15 - different gun
83:17 - animations and that we have to account
83:19 - for that comes later though for now
83:20 - simply pass in here is fine so with that
83:25 - I don't need tutorial data and inside of
83:28 - the player we already have an animate
83:31 - function I want to get the player
83:35 - graphics and then call update underscore
83:39 - lags for which we need three arguments
83:42 - the first one is the moving direction of
83:44 - the player or the direction Vector we
83:47 - have said
83:48 - earlier the next argument is if the
83:50 - player is on the floor or not for that
83:53 - we can use the inbu function is on floor
83:57 - finally we want to know if the player is
83:58 - ducking or not that is simply the
84:00 - ducking
84:01 - variable cool with that we are calling
84:04 - this function with all of the proper
84:07 - arguments that we can already use right
84:09 - away because I want to flip the graphics
84:11 - if the player is moving to the left
84:14 - let's add a commment for flip and
84:17 - basically all I want to do if Direction
84:21 - dox exists if that is the case case I
84:25 - want to check if the player is facing to
84:27 - the left or to the right and use that to
84:29 - flip the legs by default they are
84:31 - pointing to the right but if the player
84:33 - is moving left then obviously we want to
84:36 - flip all of this on the horizontal axis
84:39 - but really important once the player
84:41 - stops moving we still want the legs to
84:43 - point to the left so we are only going
84:46 - to update the animation if the player is
84:48 - moving that way if the player moves to
84:50 - the left stops moving we keep the left
84:53 - animation
84:55 - even though the player isn't actually
84:57 - animating all we need for this part is
85:00 - the legs and then the parameter flip
85:06 - H this wants to have a Boolean value
85:09 - which we can get via Direction dox being
85:11 - smaller than
85:13 - zero that way I can run all of this if
85:16 - we're moving to the right the legs are
85:18 - facing in the right direction and if I'm
85:19 - moving left they're being flipped and
85:21 - this works even if we're not moving so
85:24 - quite happy but obviously this still
85:27 - doesn't look amazing because we need an
85:29 - actual
85:30 - animation or to be a bit more specific
85:33 - we want to set the animation State
85:35 - because we for the legs are working with
85:37 - an animated Sprite for which we have
85:40 - four different animations duck idle jump
85:43 - and run all we have to do in the code is
85:45 - to set the right animation for example
85:48 - what we could be doing inside of
85:51 - X we can set the animation
85:55 - to run if I now run all of this the
85:59 - player is running and this still works
86:02 - with the flipping so we are always
86:04 - pointing in the right direction but we
86:07 - do have to select the right
86:09 - animation or to be a bit more specific
86:11 - we want to set the right animation state
86:14 - for which I want to create a variable
86:17 - state which by default is going to be
86:19 - idle but only if we are not
86:23 - ducking if we are ducking then the state
86:26 - should be duck there should be an else
86:28 - in there as well and this state we are
86:31 - then using for the actual animation
86:34 - let's try all of that if I now duck we
86:39 - are getting the proper duck and idle
86:41 - animation and this
86:43 - works pretty well so we can move around
86:47 - we can stop moving we are facing always
86:49 - the right direction and we're getting
86:50 - the right frame the Torso not being
86:53 - animated makes all of this look a bit
86:54 - weird but that we're going to fix in
86:56 - just a bit first of all though I want to
86:59 - get the run and the jump animation first
87:02 - of all for running I want to check if we
87:05 - are on the floor and we are moving other
87:08 - words we have direction do X also I want
87:12 - to check and not
87:14 - ducking if all of that is the case I
87:17 - want to get this state and set it to run
87:21 - with that we can
87:24 - we can duck and we can run so that is
87:29 - working really
87:31 - well the last thing that we have to work
87:33 - on is the jumping because right now this
87:35 - looks a bit
87:37 - weird fortunately that is just another
87:39 - if statement if we are not on the floor
87:43 - then the state should be jump let's try
87:47 - this one and if I jump we're getting the
87:50 - jumping frame so with that we have the
87:53 - Lex
87:55 - covered that is working really well
87:57 - let's fall off a cliff and that's also
87:59 - working really good very nice that is
88:03 - actually all we need for the lag
88:05 - animation so we can minimize the
88:07 - function and never think about it again
88:10 - next up for the Torso there's one very
88:13 - easy thing that we can already do that
88:15 - is updated position if the player is
88:18 - ducking all we need for that is to get
88:20 - the Torso and then update the position
88:24 - in fact we only care about position do y
88:26 - because the X position should never
88:28 - change and for this y position we want
88:32 - to get the Crosshair y offset that we
88:35 - have said earlier and I realized the
88:37 - name here might not be perfect let's
88:40 - just call it y offset although with that
88:43 - we have to reopen the crossair script
88:46 - because this line wouldn't work anymore
88:48 - simply want to get y offet now we can
88:52 - close this script and then we work
88:54 - inside of the player
88:56 - Graphics like we have done with the
88:57 - crossair I want to get on ready
89:01 - VAR
89:02 - Yore offset which we get from get
89:08 - parent and then
89:11 - ycore
89:12 - offset after we have that position doy
89:16 - is going to be the Y
89:19 - offset if ducking is the case and if it
89:22 - is not the case else it's going to be
89:25 - zero with that let's try all of this
89:29 - again I can duck and the Torso doesn't
89:33 - update and I think I know why inside of
89:36 - the player when we are calling animate
89:39 - we are only calling update laxs not
89:41 - update torso for that we can duplicate
89:44 - this line and now we want to update the
89:48 - Torso for which we need other arguments
89:51 - though first of all for update torso and
89:55 - let me actually copy the
89:57 - parameters for the direction I want to
90:00 - get AIM Direction not the direction
90:03 - itself direction is for moving aim
90:05 - direction is well for aiming ducking can
90:09 - stay the same and current gun doesn't
90:11 - exist at the moment and we're going to
90:13 - work on this in just a bit for now I
90:15 - going to set this to zero to just ignore
90:17 - it and now we should have ducking in the
90:21 - player that is working much better that
90:25 - means we can now start with the proper
90:28 - animation so inside of player Graphics
90:31 - in the animation player and let me
90:34 - disable the animation for the legs
90:37 - because that's going to get annoying for
90:39 - the Torso we have an animation player
90:42 - with a huge amount of animations now you
90:44 - could manage all of this writing code it
90:47 - would be possible but well really
90:49 - annoying to work with instead what you
90:52 - would rather use is an in buil Gau node
90:55 - that is called an animation
90:59 - three this part essentially controls an
91:02 - animation player in fact when you look
91:04 - at the inspector there we have an
91:07 - animation player and for all purposes we
91:09 - want to direct our animation player in
91:11 - there so now via this animation tree we
91:15 - can select one animation from the
91:17 - animation player we just have to figure
91:19 - out how and for that we can set a tree
91:22 - route and and there are a few things
91:25 - that you can do in our case we want to
91:27 - create an animation State
91:30 - machine if you click on that you get
91:34 - something like
91:36 - this looks a bit strange but let me
91:40 - explain basically what this thing is
91:42 - doing it tries to figure out the state
91:44 - of the
91:45 - player so in our case we have three
91:48 - different states if the player is
91:50 - holding the AK-47 the shotgun or the
91:53 - rocket
91:54 - which means from the starting position
91:57 - we can add a node so if you right click
91:59 - you can add an animation so we can check
92:03 - any of the animations from the animation
92:05 - player but this is not actually what we
92:07 - want to do instead we want to create a
92:10 - blend space
92:13 - 2D and this we can rename to
92:17 - AK also I want to move it a bit further
92:19 - to the right something like this and
92:22 - then I want to connect the start point
92:23 - point to the AK for which you want to
92:26 - select this symbol thingy then select
92:29 - start to
92:32 - AK this means that we are transitioning
92:34 - from start to AK by default and then
92:38 - inside of this node we can select an
92:40 - animation for this transition you can
92:43 - set this to immediate sync or at end
92:46 - we're going to work on this in just a
92:48 - second for now we are simply going
92:50 - immediately to the AK animation that
92:53 - means we want to get back to the general
92:55 - selection thingy or this mouse thing and
92:57 - then click on the pencil and then we are
93:01 - getting something like this this is a
93:03 - blend space 2D and this we can also
93:06 - extend by clicking on this symbol so
93:09 - what is happening here in the most basic
93:12 - sense the way you want to think about it
93:14 - is that we are getting this Crosshair in
93:16 - the middle that thing we can control via
93:19 - code but you can also move it with the
93:21 - mouse so if I move it around then we we
93:23 - are getting a point and we're going to
93:26 - update it later on Via the aim direction
93:29 - for example if the player is aiming to
93:30 - the right then we're going to set this
93:32 - point all the way to the right and what
93:35 - Gau allows you to do is to check if this
93:38 - Crosshair is close to a specific point
93:40 - that we are going to create and for that
93:43 - let me move it out of the way and then
93:44 - select this pencil which is called
93:47 - create points and then if I left click I
93:50 - can add the actual animation that I want
93:52 - to play which in my case is going to be
93:55 - AK right and then we're getting a point
93:58 - and once this crossair gets close to
94:01 - this point then we are playing this
94:03 - animation now for that to work we have
94:05 - to create multiple animations so at the
94:08 - bottom I want to left click again and
94:10 - then add another animation and you might
94:13 - be tempted here to add AK
94:17 - down but that would be incorrect because
94:19 - if you look on the left side there we
94:22 - have the y coordinate
94:24 - which is -1 and one so usually in gdau
94:28 - the coordinate system starts in the top
94:31 - left meaning if you want to go down you
94:33 - have to increase y but for this
94:36 - particular system the coordinate looks
94:38 - like this where the origin point is in
94:40 - the bottom left so if you want to go
94:43 - down you have to decrease
94:45 - y I have no idea why the coordinate
94:48 - system changes between these two
94:50 - different systems but it is what it is
94:52 - it can get really confusing
94:54 - now to get around that you could simply
94:56 - invert these numbers or alternatively
94:59 - you can simply add AK up at the bottom
95:03 - which doesn't feel right but it is what
95:05 - it is now you can see here this point is
95:08 - not actually at the bottom which is
95:10 - going to be a problem I'll fix that in
95:12 - just a bit first of all though I want to
95:14 - add one more point so we are getting a
95:16 - triangle for which we need three points
95:19 - the point I want to add for this one is
95:21 - AK down and then we have a triangle but
95:26 - I messed up two points this point at the
95:28 - top should be at the top border and this
95:31 - point at the bottom should be at the
95:32 - bottom border and if you try to drag
95:35 - these points you can't really do it
95:37 - theough is simply giving you the menu to
95:39 - move these points you want to select
95:41 - this move Point symbol and then you can
95:43 - direct the points like so in fact I
95:46 - would genuinely recommend to have this
95:48 - thing selected because if you have it
95:50 - selected and you right click then it can
95:53 - still add animations for example for
95:55 - this side I want to add AK left and then
95:58 - we get the final well not the final
96:00 - point but we get the first four points
96:03 - and Via that system we can move the
96:05 - Crosshair for example if the Crosshair
96:07 - is somewhere down here then gdo is going
96:11 - to play this animation if however the
96:14 - crossair gets to this point then we're
96:16 - going to play this animation which is
96:19 - the best way to manage loads of
96:20 - animations like we have for the player
96:23 - and for all of that if you have the
96:25 - animation tree selected once you have
96:28 - one of these blend space tods you're
96:30 - getting a parameter and in there you
96:32 - have AK and the blend position let me
96:35 - open AK
96:37 - again the blend position at the moment
96:39 - is 0.9 and roughly zero that is because
96:42 - our Crosshair is pretty much on the
96:44 - right side in the middle but if I change
96:47 - this position to let's say
96:49 - 0.5 and
96:51 - zero then I can get out and to Crosser
96:54 - has updated sometimes there's a bit of a
96:57 - delay but you get the idea so this blend
97:00 - position we want to update in the code
97:04 - for which we want to look at this script
97:06 - and let me go out of the main
97:08 - view I want to get in code the animation
97:11 - tree and then via indexing get the
97:16 - parameter in there I have AK and in
97:19 - there we have the
97:22 - blend score
97:25 - position and that value is going to be
97:28 - the direction that we are getting from
97:30 - the parameter for both of those we want
97:32 - to have a vector two with that system
97:36 - inside of the animation three the blend
97:39 - space we are controlling this Crosshair
97:42 - with our aim Direction now there's just
97:44 - one more thing that I do want to do when
97:46 - you look at blend at the moment this is
97:49 - continuous but that's not what we want
97:51 - we want to have this second Point select
97:53 - Ed that is because if you have this
97:56 - point selected gdo is trying to find
97:58 - continuous points inside of this
98:00 - animation but those don't exist on this
98:02 - point there's no animation instead we
98:05 - want to jump to the next point that is
98:07 - available which you get via this thing
98:10 - if I now Run the
98:12 - game we're getting an error that
98:14 - parameter AK blend and blend position
98:17 - doesn't accept a value of Vector 2 so
98:20 - what happened and well I simply made a
98:22 - typo this should
98:25 - parameters an easy way of getting that
98:27 - is if you have the animation tree and AK
98:30 - you can simply right click on blend
98:32 - position and then copy the property path
98:34 - with that you are getting the proper
98:38 - path next
98:40 - attempt the game doesn't crash anymore
98:43 - and now we're getting the right
98:45 - animation this is looking really good
98:48 - although we don't have all of the
98:50 - animations if the mouse cursor is in the
98:52 - top right of the player
98:54 - we don't have the right ones and the
98:56 - same for the other position so we have
98:59 - to add just a bit more that also happens
99:03 - inside of the animation tree in the
99:04 - blend space 2D we have to add four more
99:08 - points and this point is going to be
99:10 - your exercise add the remaining points
99:12 - to the blend space 2D in the animation
99:14 - tree there should be four more
99:16 - animations to add pause the video now
99:18 - and see how far you
99:21 - get back inside of G I want to maximize
99:25 - this thing again and then with the mouse
99:27 - cursor selected in the top right of this
99:31 - thing I want to add an animation for AK
99:34 - and remember the vertical axis is
99:36 - inverted meaning Up Is Down and Down is
99:38 - up or in our case we want to get AK down
99:42 - right and for the other side this should
99:45 - be AK down left on the bottom we want to
99:50 - get AK up left
99:53 - and
99:55 - AK up
99:57 - right there we go and this covers the
100:00 - entire Spectrum so if I now run all of
100:03 - this again the player should get a
100:07 - proper Sprite in every single Direction
100:10 - this works with the mouse or with the
100:13 - game pad perfectly fine so cool this is
100:17 - working really well that would cover one
100:20 - of the guns but now we have to fix
100:23 - figure out the other two or if we are
100:26 - looking at the code or the current gun
100:29 - we have to figure out which gun the
100:31 - player is actually holding right now we
100:33 - only have a placeholder zero in there on
100:36 - top of that the guns should be available
100:39 - globally that way the soldiers later on
100:41 - can also reuse the gun
100:44 - data and to make all of that work if I
100:48 - go back to the 2D screen and minimize
100:51 - all of the folders I want to add another
100:54 - folder which I am
100:57 - calling
100:59 - Global in that folder I am going to
101:02 - create a new
101:04 - script that I am also going to call
101:09 - Global click on Create and now in there
101:12 - we have another script this script
101:15 - should be available in every single
101:17 - scene which means under project project
101:20 - settings and autoload I want to autoload
101:23 - this script all the time for that I want
101:26 - to select the script in global and
101:28 - Global and then as a note name I want to
101:32 - call it Global as well now click on ADD
101:35 - and we have this script available
101:37 - everywhere which means if you're running
101:40 - the
101:41 - game you can look under remote in the
101:44 - scene Tre there we have Global available
101:47 - in every single scene that's a really
101:49 - good start and in there we want to
101:51 - create an enum
101:54 - that I have called
101:56 - guns and the guns we have are called AK
102:00 - shotgun and Rocket all in uppercase
102:04 - letters now you might not be entirely
102:06 - familiar with enams in Gau if that is
102:09 - the case definitely read the
102:10 - documentation on enums they are really
102:13 - useful but fundamentally they're also
102:15 - fairly simple basically via this system
102:18 - we are creating a bunch of constants
102:20 - called AK shotgun and rocket and we are
102:23 - assigning a value to them which by
102:26 - default is simply going to be an integer
102:28 - so the value Associated so the value
102:30 - associated with a is going to be zero
102:33 - the way you would access them let's do
102:35 - this in funcore ready you would simply
102:38 - want to print guns and then if you press
102:41 - the dot you get a preview of The
102:43 - Available values let's print AK once the
102:47 - scene is ready and if I run the game
102:50 - we're getting the output of zero because
102:53 - that is the value associated with a K by
102:56 - this system it's really easy to see when
102:59 - we have the guns what guns we have
103:01 - available for example for the player all
103:05 - the way at the top under gun I want to
103:09 - create a variable called current uncore
103:12 - gun and this value we're getting from
103:16 - Global and in there we have the guns if
103:20 - you now press dot again you're getting
103:22 - the available gun GS and the current gun
103:24 - at the start should be
103:26 - AK that way when we are animating the
103:29 - player I can pass through the current
103:32 - gun and also while we are here we want
103:35 - to give the player the ability to toggle
103:37 - through different guns for which we will
103:39 - need input one more time I want to add
103:44 - another section called switch and check
103:49 - if input is action rest and the action
103:53 - we are looking for is called switch I
103:57 - have to find this one in the input map
104:00 - for now let's make sure it's working I
104:02 - want to print switch now we can run all
104:05 - of this and I think in the game we have
104:07 - the middle Mouse button for switch and
104:09 - on the game pad it
104:13 - is one of the shoulder buttons yeah the
104:17 - top left shoulder button gets you
104:20 - switch that means the input is working
104:24 - now we have to figure out how to get the
104:26 - next value inside of the enum so at the
104:29 - moment we are on AK and if we pressing
104:32 - switch we want to get shotgun for all of
104:35 - that we always want to get Global and
104:39 - then the guns and I suppose while we are
104:42 - here let's print the result that we are
104:45 - getting if I now run all of this simply
104:48 - with global
104:49 - guns I am getting the dictionary with
104:52 - the the appropriate values so ak0
104:55 - shotgun 1 and Rocket 2 and I can also
104:58 - access the values via the string so for
105:01 - example what we could be doing I want to
105:04 - get only the keys on this dictionary at
105:06 - the moment and don't forget to call it
105:09 - if I now run this again and I switch I
105:12 - am only getting the key names and on
105:16 - this I can perform indexing so for
105:18 - example if I want to have the first
105:21 - value I can get a okay that works just
105:24 - fine all of that I want to store in a
105:27 - local variable bar let's call it
105:31 - selected
105:33 - gun and for all of that we want to
105:37 - pick what we have just created now I
105:40 - don't always want to pick the first
105:43 - index instead I want to get the current
105:46 - value so Global guns AK a the value zero
105:50 - and then increment it by one and and if
105:53 - we exceed the length of the number of
105:55 - guns then I want to go back to zero now
105:58 - to fix the indexing part we simply want
106:00 - to get the integer of our current gun
106:04 - that way we are converting the enum to
106:06 - an integer which Gau is happy with so
106:09 - let me print this selected gun and run
106:12 - all of
106:13 - this we are getting AK and the integer
106:17 - part isn't strictly necessary you can
106:20 - remove it because remember we are simp
106:22 - simply declaring a const with a value so
106:25 - this part would also work but sometimes
106:27 - the good debugger is complaining about
106:29 - it I think for now he is okay we are
106:33 - simply not using the current gun
106:34 - argument but that's fine so for now I
106:37 - can simply add plus one to our current
106:40 - gun if I now run all of this again and I
106:43 - press the middle Mouse button we're
106:45 - getting shotgun
106:46 - shotgun and well this only works once
106:50 - that is because our current gun always
106:52 - starts at zero and we are never changing
106:54 - this value to fix that we actually want
106:58 - to update our current gun right away
107:03 - which is also what we want to
107:05 - print let's try this again and now we
107:08 - getting shotgun and an error that we are
107:12 - having string and in in operator plus so
107:16 - effectively what we are trying to do
107:17 - here on the first operation we are
107:19 - returning one of the keys which is
107:21 - something like AK shotgun or rocket and
107:24 - then once we have done this once we are
107:26 - trying to add the value one to it which
107:29 - obviously doesn't work what we actually
107:31 - want to do is to use the selected key to
107:34 - pick a value from the actual Global guns
107:38 - dictionary so in other words I'm going
107:40 - to use all of this in
107:43 - indexing and then get my Global do
107:49 - guns now this part should be mostly
107:52 - working I can press it once we get one
107:54 - two and then a crash because index 3 is
107:57 - not inside of this dictionary we have
108:00 - simply exceeded the length of it to
108:02 - account for that when we are getting the
108:04 - current gun I want to put this in
108:07 - parenthesis and then use modulus with
108:11 - length of
108:14 - global do
108:17 - guns and that
108:20 - way I can press the middle Mouse button
108:22 - and we hitting 01 2 forever this part is
108:26 - now working pretty
108:28 - good and I guess this line does get a
108:30 - bit more complex so maybe go through it
108:33 - in your own
108:34 - time but fundamentally we're getting the
108:37 - global guns dictionary and from that we
108:40 - want to use indexing to pick one item
108:43 - for that we're getting the global guns
108:44 - keys and pick one of the items depending
108:48 - on the current gun index that's all
108:50 - that's happening in here and that is
108:52 - also the value that we are passing
108:55 - through inside of animate the current
108:58 - gun is what we are passing through to
109:00 - play a graphics and update torso so now
109:02 - we can work in there and in here we can
109:06 - work inside of the animation tree more
109:09 - specifically we want to create two more
109:12 - blend spaces
109:14 - 2D the first one is going to be a blend
109:18 - space 2D for the shot gun
109:23 - this one is going to look very similar
109:25 - compared to the AK or in other words if
109:28 - I click on the pen symbol once again we
109:30 - are inside of this blend
109:33 - space let me expand it and then with
109:36 - this Arrow selected I can for example
109:39 - add on the right side the animation or
109:43 - shotgun or SG and short and right the
109:46 - same thing for the left side shotgun
109:50 - left then at the top I want to add
109:53 - animation for shotgun down and at the
109:56 - bottom animation shotgun up that would
110:01 - once again be the four main sides then
110:03 - we can do the corners in the bottom
110:05 - right we have shotgun up right on the
110:09 - bottom left we have shotgun up
110:13 - left in the top left we have shotgun
110:17 - down left and then in the top right
110:20 - shotgun up down right and I messed quite
110:24 - a few things up so let's fix that part
110:26 - really quick this part can be slightly
110:30 - fidgety but basically you always want to
110:32 - have either the corners or the
110:35 - edges but that is basically it so with
110:39 - that we can at the top go back to root
110:42 - and then we are in the overview and for
110:45 - example at this point it could remove
110:48 - this forward arrow and then instead go
110:50 - from start to shotgun
110:53 - if I now Run the game the animation for
110:56 - the player should be for the shotgun and
110:59 - something went wrong the player is only
111:01 - looking up so let's
111:03 - investigate inside of the animation tree
111:06 - at the moment I can't select anything
111:07 - because we are getting the
111:09 - path so what is happening here is that I
111:12 - have to select the arrow this can be
111:14 - really fidgety sometimes so make sure
111:15 - that you have selected the right tool
111:18 - anyway now I can go to shotgun and the
111:20 - main issue is that we are selecting a
111:22 - Contin use path but we have to get
111:24 - discrete points so with that this should
111:28 - work try and it's still not
111:32 - working so next attempt I think I know
111:34 - the issue now inside of the animation
111:37 - tree we are only updating the blend
111:39 - position for AK but if you look at the
111:43 - animation three inside of parameters we
111:46 - now have AK and shotgun so for the
111:49 - shotgun blend position we have to update
111:51 - a separate property path or in other
111:55 - words we basically want to update the
111:57 - animation tree for the AK position and
112:00 - for the shotgun position and then update
112:03 - the direction in the same way next
112:05 - attempt let's see if this one is working
112:07 - and there we go this is looking much
112:10 - better now we have the gun animation and
112:13 - everything else also works just
112:16 - fine that brings us to the next issue
112:19 - that we want to be able to switch
112:21 - between the shotgun and the AK also the
112:24 - AK by default should be the starting
112:26 - animation so it should be looking like
112:29 - this however if the player switches a
112:33 - gun we want to go from AK to shotgun or
112:36 - in other words we want to have another
112:38 - transition from the AK to the shotgun
112:41 - but this by itself is not going to work
112:43 - if we now go back to the 2D b space we
112:47 - are always going to get the shotgun
112:49 - because we are starting at the well
112:51 - starting point then we're going to the
112:53 - AK and then immediately we are going to
112:56 - the shotgun that is not something we
112:58 - want to do so with the transition Noe
113:01 - selected so click on this green thing if
113:04 - you look at the inspector you can see
113:06 - switch and Advance under Advance you can
113:10 - set a mode there's Auto enabled and
113:12 - disabled but this we don't really want
113:14 - to touch and then you can set a
113:16 - condition and an
113:18 - expression so essentially how this is
113:20 - going to work we only want to go from AK
113:23 - to Shotgun If a certain condition is met
113:27 - and the condition that we are looking
113:28 - for if I go to the script inside of the
113:32 - player the condition we are looking for
113:35 - is that the current gun is equal to
113:38 - Global guns and shotgun for example then
113:40 - we are going to the shotgun so how can
113:43 - we check for that and well for that you
113:45 - can either set a condition or an
113:47 - expression and well expression is the
113:50 - one you actually want to use condition I
113:53 - find is really limited so I tend to
113:56 - avoid it and expressions are very very
113:58 - powerful you basically write some GD
114:00 - script in here and then if this value
114:02 - returns true you're automatically going
114:04 - from AK to
114:06 - shotgun although we do have to set a few
114:08 - things up for that I want to work inside
114:12 - of player graphics and then for the
114:14 - animation Tre I have to add a script we
114:18 - don't have to change the name because we
114:20 - only have a single animation Tree in set
114:22 - of player Graphics this is totally
114:26 - fine in there we have to create the
114:28 - variables that we want to check inside
114:30 - of this transition node we want to write
114:33 - an expression that is basically going to
114:35 - be selected uncore gun is equal to
114:40 - options
114:42 - dotshot gun or in other words we are
114:45 - comparing the player gun with the
114:48 - available guns but for that to work
114:50 - inside of the animation tree node we
114:54 - have to have these two variables
114:56 - available which means in there we have
114:58 - to have a variable for selected uncore
115:03 - gun and we have to have a variable for
115:06 - the options for the options we simply
115:09 - want to get Global and then guns that's
115:12 - all we need here we want to essentially
115:15 - copy this enam
115:17 - dictionary for the selected gun I
115:20 - suppose for the starting point we always
115:22 - want to start with global. guns and AK
115:27 - that though we are going to override for
115:30 - that inside of player animation and let
115:33 - me minimize the animation
115:34 - Tre I want to update I suppose we can do
115:38 - that all the way at the
115:40 - top the animation 3
115:44 - dot selected gun and this one should be
115:49 - the current gun that we are getting from
115:51 - the player that way inside of the game
115:54 - by default we have the AK selected but
115:57 - if I press the middle Mouse button we
115:59 - getting the shotgun and all the other
116:01 - animations still work just fine so
116:03 - that's a good sign although if I press
116:06 - the middle Mouse button multiple times
116:07 - nothing happens so we're not there
116:10 - yet but before we fix that I do want to
116:13 - talk about the animation tree just a bit
116:15 - more because this is really important to
116:18 - understand so this is a very simple
116:20 - animation tree we always have a starting
116:23 - position and by default we are going to
116:26 - the AK
116:28 - State and in there we have a bland space
116:31 - 2D that checks which kind of Animation
116:33 - we want to
116:34 - pick however from this point we can go
116:37 - forward to the shotgun if a certain
116:40 - condition is met condition we have
116:42 - outlined there after that inside of the
116:45 - shotgun we have another blend space 2D
116:47 - that selects the right animation inside
116:49 - of the shotgun State when you're getting
116:52 - started this kind of system can be
116:54 - incredibly confusing so I hope it's not
116:57 - too overwhelming if you play with it for
116:59 - a bit it should become fairly
117:01 - straightforward but it does need some
117:03 - time anyway at the moment the issue is
117:07 - that once we're get into the shotgun we
117:09 - can never go back for that I want to add
117:13 - another forward transition this one goes
117:15 - from the shotgun back to AK and for that
117:19 - we have to add another Advanced
117:21 - expression
117:22 - we want to get this selected uncore gun
117:26 - the one variable that we have created
117:29 - and also the one that we are overwriting
117:31 - and check if this is equal to options.
117:35 - AK if that is the case I can run the
117:38 - game again and now if I press the middle
117:41 - Mouse button we're getting to shotgun
117:43 - and if I press it again nothing happens
117:45 - because now we are trying to get to the
117:48 - rocket launcher that doesn't exist yet
117:50 - but if I press one more time we are back
117:52 - with the AK so this part is working just
117:55 - fine I can press again and we have the
117:58 - shotgun once more
118:00 - perfect and with that we can switch
118:03 - between the AK animations and the
118:04 - shotgun animation we simply have to set
118:07 - an advanced condition for any of these
118:10 - forward transitions alternatively you
118:13 - could also work with the mode that you
118:15 - don't Advance automatically and instead
118:18 - in code you forward to another then
118:22 - space
118:23 - 2D it's possible but I find it kind of
118:26 - tedious and having all of this
118:27 - automatically works much better so with
118:31 - that there is just one more state that
118:34 - we have to cover and that is for the
118:36 - rocket and this is going to be an
118:38 - exercise I want you guys to add the
118:40 - rocket launcher animations to the
118:42 - animation tree pause the video now and
118:44 - see how far you
118:47 - get back in the code I want to add
118:50 - another blend space 2D this one is going
118:52 - to be for the rocket could also be
118:55 - rocket launcher it doesn't really matter
118:58 - in there we want to add all of the
119:00 - rocket
119:01 - animations so at the top we want to get
119:04 - a rocket and this one is going to be for
119:07 - Rocket
119:08 - down then on the other end we want to
119:11 - get r o up there we go and let's move it
119:16 - down right away then on the right we
119:19 - want to have r o right
119:24 - and on the left we have our o
119:28 - left those are the four main points and
119:30 - for the corners in the top right I want
119:33 - to have rocket down
119:36 - right then we have rocket down left and
119:40 - top left there we go two more points we
119:45 - have r o
119:47 - up right there we go and finally we have
119:52 - r o up
119:54 - left and once again move the points in
119:57 - right position this covers all of the
120:00 - animation states that could be
120:02 - possible with that we can go back to
120:05 - Rocket and now we have to add the
120:07 - forward conditions and we are going to
120:10 - need quite a few so from the AK we can
120:12 - go to Rocket and from rocket we can go
120:14 - to AK and now we have an issue since
120:19 - these animations work automatically we
120:21 - have switching between them really fast
120:24 - and if you look at this inside of the
120:26 - game this is not working ideally let's
120:28 - remove one of them to have all of this a
120:30 - bit more
120:32 - straightforward I only want to go from
120:34 - AK to Rocket if a certain condition is
120:36 - true and that we're setting inside of
120:38 - the expression it's ultimately going to
120:41 - be fairly similar compared to what we
120:42 - have done with AK and shotgun I can
120:44 - literally copy all of this and paste it
120:47 - in there the only difference is that we
120:50 - want to check if the selected gun is
120:52 - equal to Rocket and once we have that we
120:56 - can do the other case that by default is
120:58 - going to be automatic but we only want
121:00 - to do it if we have selected gun equal
121:03 - to options.
121:05 - AK and then one more path from the
121:08 - rocket to the
121:10 - shotgun this one we can literally keep
121:13 - as it is and for the other path we want
121:15 - to advance to Rocket if selected gun is
121:18 - equal to options and rocket
121:22 - and that is all we need with that we
121:24 - have a fairly robust system for the
121:27 - animations now for that to work though
121:30 - inside of player Graphics we also need
121:33 - to
121:34 - update the blend position for rocket and
121:38 - for that I can duplicate this line one
121:41 - more time indented
121:45 - properly and I believe I called this one
121:48 - rocket once we have all of that I can
121:50 - run the game and we get the AK animation
121:54 - I can press the middle Mouse button
121:56 - we're getting the shotgun animation and
121:58 - if I press it one more time we are
122:01 - getting the rocket but nothing else is
122:03 - happening and usually when that happens
122:05 - inside of the rocket blend space 2D
122:08 - check that you're getting discrete
122:09 - points so let's try this one
122:14 - again and now this is working so this
122:17 - feels really good and with that we have
122:20 - the player
122:22 - animations now obviously nothing else is
122:25 - happening at the moment but that we can
122:27 - work on in just a
122:29 - bit for now I am pretty happy with
122:35 - that with the player covered we can
122:38 - start adding things to the level the two
122:41 - major objects that I want to add are the
122:43 - lights and the level
122:45 - transitions but for both we have
122:47 - somewhat of an issue for example for the
122:49 - lights we have six variants
122:52 - that are somewhat similar and on top of
122:55 - that every single one of them should
122:57 - have a unique Point light 2D with its
122:59 - own texture first one I want to have
123:02 - something that goes like this or the
123:05 - second one I want to have a more narrow
123:07 - one for the third one I want to have
123:09 - something that goes around it and so on
123:12 - now we could turn every single light
123:14 - into a separate scene and then add a bit
123:18 - of extra stuff that would be possible
123:21 - but also Al not really ideal we would
123:24 - just create six scenes with the same
123:25 - notes and slightly different textures it
123:28 - just doesn't feel right instead I want
123:31 - to have a single light scene that lets
123:32 - me select the look of the light in the
123:34 - inspector and gives me a preview in the
123:36 - editor that we can do quite easily by
123:38 - turning the scene into a tool that way
123:41 - the script will be executed in the
123:43 - editor and we can see the result right
123:45 - away which can help you enormously to
123:47 - create well tools inside of the editor
123:50 - that are more reusable and interactive
123:53 - that system we are going to use for the
123:55 - lights and for the transition Gates
123:57 - besides that we are also going to create
123:59 - the moving saw blades although those are
124:01 - going to work a bit differently they're
124:04 - also fairly simple and I didn't know
124:05 - exactly where to put them so we are just
124:07 - going to add them right here they are
124:09 - still kind of objects but also enemies
124:11 - so it was a bit awkward but doesn't
124:13 - really matter too much this part is easy
124:15 - don't worry too much about it instead
124:17 - let's get started by building some tools
124:20 - back in Gau at least for now we don't
124:23 - need entity player or player Graphics
124:27 - anymore instead I want to create a new
124:30 - scene with the paranode being a 2d scene
124:33 - that I'm going to rename right away to
124:36 - light I also want to save all of this
124:38 - under scenes I want to create a new
124:41 - folder called
124:43 - objects and in there we have light. TSN
124:46 - and now just to understand how a tool is
124:50 - going to work let me add a Sprite Tod to
124:54 - this light with the good
124:56 - logo not something we are going to use
124:59 - for the final game it's just a
125:00 - placeholder for now also this logo I
125:03 - want to scale down a bit to
125:06 - 0.25 then I can save it go to the
125:08 - station we can add the light doesn't
125:12 - matter where you put it inside of the
125:14 - scene tree but make sure it's somewhat
125:16 - visible to the player let's say here if
125:19 - I now Run the game
125:22 - we can see the good logo and it doesn't
125:24 - do anything that is the expected result
125:26 - at this point so let's add a script
125:29 - inide of objects and light that is
125:31 - totally fine and create let's say I want
125:35 - to make this good logo rotate for which
125:37 - I want to use the process function and
125:42 - then update the rotation degrees we can
125:45 - simply add this by some amount let's say
125:48 - 100 * Delta and if I now run the entire
125:53 - thing we're getting a rotation so that
125:56 - works just fine however this result you
125:59 - can only see inside of the game if I go
126:02 - to the station in the editor the goo
126:05 - logo is entirely stationary most of the
126:08 - time this is totally fine but for this
126:10 - particular case I do want to see the
126:12 - result in the editor right away how can
126:15 - I do that and well it's quite easy all
126:18 - you have to do in this script all the
126:21 - way at the top add at tool and that's
126:25 - literally it if I now save the entire
126:27 - thing and then reopen the
126:30 - scene we have the good logo rotating
126:34 - inside of the
126:36 - editor and that is working pretty well
126:40 - so simply by adding a single line we can
126:43 - build much more interactive stuff right
126:45 - inside of the editor which is something
126:48 - that we are going to use quite a bit but
126:51 - you do want to be careful here if you
126:53 - add too many of those the good do editor
126:55 - is going to become very slow so only add
126:58 - things that are actually necessary oh
127:00 - and by the way what you can also do with
127:02 - this system is add a hint with if engine
127:08 - do is editor hint that way we can tell
127:10 - if we are in the editor or not for
127:13 - example I could make the good logo only
127:15 - rotate inside of the editor but not in
127:18 - the actual
127:19 - game there you go now why you would want
127:22 - to do something like that I have no idea
127:25 - but it is possible that is basically all
127:28 - you need for the basics of tool inside
127:31 - of the light we still cannot see a
127:33 - preview inside of the light scene so
127:35 - very often when you're using a tool you
127:37 - want to close the scene and then reopen
127:40 - it then things are updating so with that
127:43 - we can start working on the actual light
127:46 - let me get rid of all of the stuff we
127:49 - have done so far but keep tool
127:52 - also inside of light I don't want to
127:54 - have this bright 2D anymore so this we
127:56 - can remove and then I want to reop the
128:00 - scene just to make sure we don't have
128:02 - any kind of residue for example right
128:04 - now you can see that this Gizmo that
128:07 - shows us the origin of the node 2D is
128:10 - slightly rotated it's not supposed to
128:12 - look like this and inside of the
128:14 - inspector you can see there's one change
128:16 - that we have a rotation which I do not
128:18 - want once you're adding tool whatever
128:21 - change you make inside of the editor
128:23 - will be permanent so it will also show
128:25 - up in the game which can add some weird
128:28 - Behavior now this system we are going to
128:31 - use along with a whole bunch of lights
128:35 - so if you look at the graphics folder
128:38 - there we have objects and inside of
128:41 - objects we have lights which I want to
128:44 - add to a Sprite
128:46 - 2D then we can drag it in there and
128:49 - there you can see the lights you have
128:50 - seen in the intro
128:52 - to only get one of them I want to go to
128:54 - animations and then H frames and in
128:56 - total we have six so now we can pick one
129:00 - of them besides that for every single
129:03 - light I want to add a point light D for
129:07 - which we are going to need a light
129:09 - texture that we have to add inside of
129:11 - the
129:12 - inspector in the lights folder you have
129:15 - a couple of them for example for the
129:17 - first light the one on frame zero I I
129:21 - want to use
129:23 - l0 and drag it into the point light 2D
129:27 - now this right now we cannot see because
129:29 - we don't have a background for that
129:31 - inside of light I want to add a color
129:35 - rectangle behind everything else and
129:38 - then change the color to something a bit
129:40 - darker if you now extend the entire
129:43 - thing you can tell what's going on also
129:47 - make sure to lock this rectangle so you
129:49 - don't select it accidentally now with
129:51 - that we can move the light into the
129:54 - right
129:55 - position something like this looks about
129:58 - right if I now hide the background you
130:01 - can't see the light anymore but if we go
130:04 - back to the station you can see we have
130:07 - the light which is the rotated for which
130:09 - you want to reload this station scene
130:12 - and it's still looking weird for that
130:15 - inside of the light node under transform
130:18 - you can see we have changed rotation in
130:19 - here as well and if you reset that now
130:22 - it's looking all right so with that we
130:25 - have a light now that would be a single
130:27 - light but in my case for the light scene
130:30 - I want to have multiple lights so for
130:32 - example for the second light I want to
130:34 - get
130:35 - frame two and then for the point light
130:38 - for this one I simply want to squash the
130:40 - entire thing on the horizontal axis
130:44 - something like this so if I save it now
130:46 - inside of station you can see the result
130:49 - roughly and this I need to do for All of
130:51 - the Lights since that is some menual
130:54 - labor if you open tutorial data there we
130:59 - have all of the light
131:00 - options so all we have in here let me
131:03 - make this one visible and hide
131:05 - everything else you can see we have the
131:07 - Sprite 2D along with the point light
131:10 - inside of a note 2D for the second light
131:13 - then we have the third light the fourth
131:15 - light and so on they always have the
131:17 - same setup we have a Sprite Tod and a
131:19 - point light and all of these options I
131:22 - want to copy so with options selected
131:25 - copy it and paste it into light then we
131:30 - don't need the original Point light
131:32 - spray Tod or color rectangle so those
131:35 - can all go and now we simply have the
131:38 - options left this still works just fine
131:42 - so I am quite happy so far and now the
131:45 - system that we are going to implement is
131:47 - inside of the light which is still a
131:49 - tool I want to have a drop-down menu in
131:52 - the
131:53 - inspector that is going to select a
131:55 - number between zero and five and
131:58 - depending on what we are selecting we
132:00 - are hiding all of these nodes bar one
132:02 - the one that we have
132:04 - selected and for that I want to work
132:07 - inside of the script for light and
132:10 - create another export variable the one I
132:13 - want to create now is called export enum
132:17 - this one allows us to set a couple of
132:19 - options inside of a drop on menu as an
132:22 - argument you want to have strings with
132:24 - all of the items for example in my case
132:27 - I want to have a string for zero 4 1 4 2
132:31 - 4 three 4 and finally five this we then
132:37 - have to store in a variable that I have
132:40 - called type with a default value let's
132:44 - go with zero if I now save the scene and
132:47 - select the light again inside of the
132:49 - inspector we have a type with the
132:52 - options we have just specified with that
132:55 - set up as soon as the user selects one
132:57 - of these items I want to hide all of
133:00 - these nodes and then reveal the one that
133:03 - we have selected and for that I want to
133:05 - use set get to achieve that I want to
133:08 - add a colon and then use set which wants
133:11 - to have one parameter that is going to
133:14 - be the value whenever we are updating
133:17 - this value we are calling this function
133:20 - and via the that we still want to
133:22 - overwrite the original value so we
133:25 - always have to add type is equal to
133:27 - value that way we are actually storing
133:29 - the new value but on top of that what we
133:32 - could be doing is simply print the value
133:35 - that we are getting with that I can
133:37 - close tutorial data we can save it
133:40 - doesn't really matter and if I now
133:42 - reopen the light on the parent note I
133:46 - can select different options and if you
133:49 - have output open you should be seeing
133:52 - the result right away inside of the
133:55 - editor for this we don't have to have
133:57 - the game running so with that we are
134:00 - getting the individual number and that
134:02 - we can use to hide all of the notes and
134:04 - then only reveal the one with the right
134:06 - number or in other words I want to have
134:09 - for child
134:11 - in the options and then I want to get
134:16 - the
134:17 - children and run child. height besides
134:21 - that I want to get the new child the one
134:25 - that we want to keep visible which I can
134:27 - get via the options once again except
134:30 - now I am using get child along with the
134:34 - type that we have selected although
134:37 - important at this point inside of export
134:39 - enom we have created strings but for get
134:42 - child we need an
134:44 - integer so the string we need to convert
134:49 - to an integer when once we have that we
134:52 - want to run child. show with that system
134:56 - we are hiding all of the notes and then
134:59 - we are showing only the one that was
135:00 - selected this would work in theory but
135:03 - in practice I think there are going to
135:05 - be some issues so once again let me
135:07 - reopen the light
135:09 - scene and if I now select one of the
135:12 - options oh it actually works we
135:15 - get only the one visible item that we
135:19 - actually want
135:21 - so in theory this is working but if you
135:23 - look in the bottom left on the output we
135:25 - are getting some weird stuff at
135:29 - sometimes we have an invalid called
135:30 - non-existent integer Constructor and
135:33 - that is something that is a bit annoying
135:34 - with tools that sometimes these things
135:38 - are loaded before the actual scene is
135:40 - ready which makes sense because we are
135:42 - running all of this in the editor so
135:43 - sometimes things can be a bit weird
135:46 - generally what I have found best is
135:49 - before you're making any changes in the
135:51 - Cod you want to check for two things
135:54 - number one the value that we are getting
135:57 - actually is a value or other words it's
135:59 - not null besides that you also want to
136:02 - check that there are children inside of
136:04 - the scene or in other words before we
136:07 - are doing anything I want to check if
136:11 - get children or child count is greater
136:15 - than zero meaning we have at the very
136:18 - least a single child and and the value
136:22 - is different from
136:25 - null only if that is the case do we want
136:28 - to do all of this with that if I go back
136:32 - to the scene and I select another option
136:37 - we should not be getting an output error
136:39 - anymore and if I go to the game this
136:41 - should also be working just fine
136:45 - perfect so with that we are getting the
136:48 - right option and we have some safeguard
136:51 - to make sure that the game doesn't crash
136:53 - I suppose we can also refine this just a
136:56 - bit because this child variable doesn't
136:58 - need to be there we can simply get
137:01 - options get child of the type then show
137:05 - the
137:06 - result very minor Improvement in
137:09 - practice this is not going to change a
137:11 - thing perfect oh and by the way when
137:14 - you're looking at the output we are
137:16 - always getting a zero that is because
137:19 - inside of global we are printing the gun
137:21 - option which I think is a bit confusing
137:24 - at this point so let's remove it
137:26 - entirely righty with that we can select
137:30 - the right kind of Light which is a good
137:33 - start but I want to add a bit more so
137:36 - for example when you're looking at one
137:37 - of these lights let's do it inside of
137:39 - the station you can see that we have a
137:42 - light texture although it's not terribly
137:45 - visible this thing I want to customize
137:47 - just a bit more by adding a custom color
137:50 - when you're going to the light and have
137:52 - the point light 2D selected there we can
137:55 - set the color and if you update this one
137:58 - let's go with a pure red color save all
138:01 - of this and then back in the station we
138:04 - have a red color this I want to update
138:07 - in real time in the editor or in other
138:10 - words with the parent note selected I
138:12 - want to below the type set the color of
138:15 - this light for which we can set another
138:17 - export variable I want to create an
138:20 - export color no Alpha for which we need
138:24 - a variable name let's call it color and
138:27 - then a default value which I have set to
138:31 - the color type and then we need a
138:34 - default value we can set this one simply
138:37 - to one and then we should be good to go
138:40 - I can now save the entire thing and back
138:42 - inside of the scene you can see we have
138:45 - a default color although by default this
138:47 - one is black at the moment and it should
138:50 - probably be white white so just to make
138:52 - sure we're getting the right value let's
138:54 - go with 1.0 1.0 1.0 and 1.0 that way I
138:58 - can reset the value and we're getting
139:00 - white by default now we have a color and
139:03 - every time this color value changes I
139:06 - want to update the color of the point
139:09 - light this part is going to be your
139:11 - exercise when the color value is updated
139:14 - change the color of the point like 2D
139:16 - also make sure that you're adding
139:18 - safeguards as well like I have done
139:20 - before pause the video now and see how
139:23 - far you
139:26 - get to get started I want to use the set
139:31 - method along with a value and
139:34 - fundamentally I want to update the color
139:37 - to the value that we are getting so we
139:40 - are actually updating this
139:42 - variable on top of that I want to get
139:45 - the currently selected child and then
139:47 - update the color or in other words I I
139:50 - want to get the
139:53 - options then use get child along with
139:57 - the integer of the type the value we are
140:02 - getting from this export enum that would
140:04 - give us for example this note setup
140:07 - where we have a parent node 2D then we
140:09 - have a Sprite 2D and then a point light
140:12 - and the point light is always child
140:14 - number one or well the child with the
140:17 - index one which means I can simply get
140:20 - the child with the index
140:23 - one and since this is a point L Tod I
140:26 - can update the color the value I want to
140:29 - set is the value that we are getting
140:33 - from the parameter that's basically all
140:35 - we need for the basic logic although
140:38 - before we are doing all of this I want
140:40 - to add the safeguards once again which
140:42 - means I want to check if get child count
140:45 - is greater than
140:47 - zero and value is is different from null
140:53 - only if that is the case do I want to do
140:55 - all of this but other than that now this
140:58 - should be working I suppose we should
141:00 - reload the scene which you want to do
141:02 - very regularly when you're working with
141:04 - tools and I guess now just to see what
141:06 - we are getting I want to add a color
141:08 - rectangle as a background once again
141:11 - working with lights and good
141:12 - occasionally can be a bit frustrating
141:15 - because you cannot see them by default
141:16 - in the editor so there we go by default
141:21 - we have a red
141:23 - light but if I change the color to
141:27 - something else this updates in real time
141:30 - I can also change the color to something
141:32 - bluish or something greenish and this is
141:36 - looking really good perfect we can also
141:39 - try out off this with a different light
141:42 - and it does work although the issue here
141:46 - that you could refine later is when
141:48 - you're changing the light this color
141:50 - isn't reapplied oh and also for this
141:53 - light we have hidden the actual point
141:55 - light
141:56 - Tod just to make sure I didn't do this
141:58 - more often no I think it's just for this
142:00 - one
142:01 - light Okay cool so this is working and
142:04 - just to talk about it again so one issue
142:08 - that we have right now is that we can
142:11 - change the light and the type separately
142:14 - for example if I go to one we're getting
142:16 - one light but if there I changing the
142:18 - color let's go with something really
142:20 - visible this dark purpley color if I now
142:23 - change to another light we keep the
142:27 - value we had before although this we
142:29 - could change by simply selecting the
142:31 - color once again and then we getting the
142:33 - updated value I suppose this is a bug
142:35 - minor enough that you can work on it on
142:37 - your own in my case I want to add some
142:40 - other stuff first of all most
142:44 - importantly I want to
142:46 - set another export enum that that is
142:51 - going to be an export underscore
142:55 - range with a start and an end value
142:58 - let's go from 0 to 10 then once again we
143:02 - can create a variable with the strength
143:04 - of the light and the value I want to
143:07 - store for this one is going to be 1.0 by
143:10 - default the 0 Z here is important
143:12 - because I do want to create a floating
143:14 - point value to get a greater range of
143:18 - values in there I want to set the value
143:22 - once again or in other words I want to
143:25 - update the strength to the value after
143:29 - that like we have done before on this
143:32 - line and let me extend it so when we set
143:35 - the color we have gotten always the
143:37 - first child of whatever type we had
143:39 - selected this I want to do again for the
143:42 - export range for the strength of the
143:44 - light except now we don't want to get
143:47 - the color we want to get the energy
143:50 - because when you look at any of these
143:52 - notes the point light 2D besides color
143:55 - we have energy with a default value of
143:57 - 0.8 I think I've said this one earlier
144:01 - and once again this we only want to do
144:04 - if there are children inside of the
144:07 - scene and if the value is different from
144:10 - null with that we should be able to set
144:13 - the strength of this thing as well and I
144:15 - think at this point you get the idea of
144:16 - all of this so back inside of the
144:19 - light I want to get a different one and
144:22 - there you can see we can update the
144:24 - strength of the entire thing works
144:26 - pretty well and this is a really nice
144:29 - effect if I hide the color rectangle and
144:32 - save the thing and go back to the
144:34 - station there we can actually set the
144:36 - values so in there I can update all of
144:39 - this then we are getting some pretty
144:42 - decent
144:43 - values although if I reset the values we
144:48 - are getting what we have set in here
144:51 - so the way you want to think about it
144:53 - when you're setting the values for a
144:55 - tool inside of the inspector in the
144:57 - actual scene you are setting the start
144:59 - values for any of the instances those
145:02 - values you can still update like I'm
145:05 - doing here or here you get the idea so
145:09 - you only really want to update any of
145:11 - the instance you are creating from the
145:13 - original scene and I guess let's go with
145:16 - some slightly better
145:18 - color more
145:22 - right guess we can go with a very slight
145:25 - yellow
145:27 - color and then reduce the strength quite
145:29 - a
145:31 - bit I think something like this would
145:33 - look all right and if we try all of this
145:36 - in the game it also works just fine
145:39 - perfect at this point also inside of
145:42 - debug we don't need visible Collision
145:45 - shapes anymore and with that we have
145:48 - made quite a bit of progress that we
145:50 - have created a tool that can be much
145:52 - more reusable inside of the game and let
145:56 - me reset the default values so this is
145:58 - looking just a bit better besides this
146:01 - light texture I also want to have
146:03 - another light texture around the entire
146:05 - thing so that we have a bit more light
146:07 - in general when the player is close to a
146:09 - well light for that back inside of the
146:12 - light I want to add another Point light
146:16 - B and this we can add while we are doing
146:19 - anything else
146:21 - and call it main light for this main
146:25 - light we are now going to need a light
146:27 - texture which you can find under lights
146:29 - and
146:30 - main.png this I want to drag into the
146:33 - texture and now we cannot really see
146:36 - this inside of the scene but if you add
146:39 - the color rectangle and expand this
146:41 - thing a bit you can roughly tell what's
146:43 - going
146:44 - on I guess if I hide this
146:48 - thing and then save the entire scene
146:51 - back inside of station now we can see a
146:53 - bit better that we have a light radius
146:56 - around this light now this I also want
146:59 - to customize via the inspector or in
147:02 - other words I can minimize all of this
147:05 - and then add another export variable
147:07 - which once again is going to be an
147:09 - export range one with a value from 0 to
147:14 - 20 and the variable you want to create
147:16 - is called
147:18 - radius with a default value of 1.0 after
147:22 - which we can use value and I think at
147:24 - this point you have seen this often
147:26 - enough we want to add the safe
147:29 - guard and then update the actual radius
147:32 - by setting it to the value that we're
147:34 - getting from the parameter after that I
147:37 - want to get the main light Target the
147:41 - texture scale and set this to the
147:46 - value that we are
147:48 - getting and with that
147:51 - if I save the scene and go to the
147:53 - station with the light selected I have a
147:56 - radius and this radius I can use to
147:59 - change the size of the light which I
148:03 - think is working really well nearly done
148:06 - there's just one more thing that I would
148:07 - like to add and this is going to be
148:10 - another
148:13 - export range with a value from 0 to 200
148:18 - the variable I want to create is called
148:20 - called flicker which is going to get a
148:23 - default value of
148:25 - 100.0 so we have a floating point value
148:28 - once again
148:30 - essentially this light shouldn't be
148:32 - static it should be flickering just to
148:34 - make it feel a bit more worn down for
148:37 - that we don't actually need to use set
148:40 - again instead we want to use inside of
148:43 - process oh and I realized I didn't
148:44 - mention I added an underscore so good do
148:47 - doesn't complain about the parameter
148:50 - what we want to do now is make the light
148:52 - flicker or in other words generate a
148:56 - random value and then update the energy
148:59 - of the point light 2D so it looks like
149:02 - it's slowly turning on and off at random
149:05 - intervals the way I have approached that
149:08 - first of all I have created a noise
149:11 - texture which we can do by creating a
149:15 - fast noise light do new what this is
149:19 - going to do if I go back to the editor
149:21 - and simply add a Sprite 2D without any
149:25 - texture if you now go to texture there
149:28 - we can create a noise texture 2D which
149:30 - is a bit
149:32 - large if you click on this one again
149:35 - there we have a noise and we can create
149:36 - a fast noise light this is what a fast
149:39 - noise light looks like it's more or less
149:41 - a cloud what we want to do is pick one
149:44 - row of this texture and then simply look
149:47 - at the values so do we get white values
149:49 - or dark values or white values again and
149:52 - so on that value is then going to be
149:55 - between zero and one one for pure white
149:58 - color and black for pure black color
150:01 - along with all of the Shades of Gray in
150:03 - between since we then start from the
150:05 - left side and go further to the right we
150:07 - are essentially getting random values
150:09 - that slowly change over time which can
150:12 - be a really nice effect and that is what
150:15 - we want to do so with that I can get rid
150:17 - of the Sprite to be and instead work
150:20 - inside of the process function first of
150:23 - all I want to update a
150:25 - value which doesn't exist at the moment
150:28 - for that I want to create another
150:29 - variable value with a default value of
150:33 - 0.0 and this should always be a floating
150:36 - point
150:37 - value after that to this value I want to
150:41 - add the flicker multiplied with
150:46 - Delta the flicker we just created and
150:49 - Delta we're getting from the parameter
150:51 - to make sure things are frame rate
150:53 - independent after that we want to Target
150:56 - our currently active light or in other
150:59 - words our visible light at the moment
151:02 - which currently is light zero for that I
151:06 - want to create another variable
151:08 - activecore
151:10 - light I suppose visible light might be a
151:12 - bit better here but you can name this
151:14 - whatever you want this needs to be some
151:17 - kind of Point light 2D and we we have to
151:20 - sign it when the scene is ready for that
151:23 - I want to use
151:24 - funcore ready then a four child in
151:30 - options and get
151:34 - children in which I can check if child
151:37 - is visible if that is the case the
151:41 - active
151:43 - light is going to be child. get child
151:47 - one I hope this part is fairly
151:49 - straightforward forward we are simply
151:50 - looping through all of the children and
151:52 - then setting the visible light to the
151:54 - active light once we have that inside of
151:57 - the process function I can check if we
152:00 - have an active light and if that is the
152:03 - case I want to get the active light and
152:06 - update the
152:08 - energy and on that I want to get the
152:10 - noise texture we have just created up
152:13 - here and then use the function get noise
152:18 - 1D on which we want to have a value if I
152:22 - now run this
152:24 - scene nothing is
152:26 - happening and that is because oh this
152:29 - should be underscore process not just
152:33 - process let's try this
152:35 - again and now we are getting something
152:40 - so this is looking all right although a
152:43 - bit weird to understand a bit better
152:45 - what's going on let's print a value that
152:48 - we are setting so I want to print noise
152:51 - get noise 1D value and
152:54 - then you can see that we are usually
152:57 - getting a value around zero sometimes a
153:00 - bit below sometimes a bit above this we
153:02 - want to modify because these values are
153:05 - generally too low the formula I found on
153:08 - the internet that worked best is + one
153:11 - divided by
153:13 - 4.0 and then to the entire value I want
153:16 - to add 0.5
153:21 - there isn't really a specific math
153:22 - behind it this just looked good so if I
153:25 - now run this
153:26 - again this looks much nicer with that we
153:30 - don't have to print the get noise 1D
153:33 - anymore and instead we have a nice
153:36 - flicker for the light which by the way
153:38 - is also going to work inside of the
153:41 - station so in there you can see the
153:44 - light Flicker and if we update the value
153:46 - let's say to something lower the flicker
153:48 - gets much slower
153:50 - and if it's 200 it becomes much more
153:52 - noticeable we can also disable it
153:54 - entirely so play around with this as
153:57 - much as you like and that would be a
154:01 - tool light that is incredibly powerful
154:04 - so now inside of the editor you can
154:07 - simply duplicate the light move it
154:10 - around and then change the type that we
154:12 - have let's say to something like this
154:15 - you can update the
154:16 - color then the strength you can update
154:20 - the radius you can make smaller for this
154:21 - one I suppose and we could work with the
154:23 - flicker let's disable it for this one
154:26 - and that's the whole idea with that
154:29 - system instead of having five scenes one
154:31 - for each light you can simply update the
154:34 - light right in the editor which makes
154:36 - everything just much more organized now
154:38 - in terms of organization inside of the
154:41 - level I want to add a couple of Lights
154:43 - to the background so in there I want to
154:46 - have a note
154:47 - 2D with BG
154:50 - lights those are always going to be
154:52 - behind the player besides that if you
154:55 - want to have a light in front of the
154:56 - player under FG I want to have FG lights
155:01 - now we can save all of that and back in
155:04 - the station let's say I want to have
155:07 - this first light in front of the player
155:10 - FG lights and this light should be
155:13 - behind the player it should be in BG
155:16 - light if I now run the entire thing
155:20 - we have the light in front of the player
155:23 - and we have the light behind the player
155:26 - so quite happy with that for the actual
155:29 - game I have placed a whole lot more
155:31 - lights I will repeat that process at the
155:33 - end of this section what I have also
155:35 - done to make the lights look much better
155:38 - inside of the level I have added
155:41 - straight to the level another light but
155:44 - this is not a point light but a
155:46 - directional light if you at this one and
155:49 - save the entire thing if you now look at
155:51 - the station everything is much brighter
155:55 - because via this directional light we
155:57 - are adding a whole bunch of extra
156:00 - light if you change the color for this
156:02 - one you could make the entire thing feel
156:06 - much more different depending on what
156:07 - color you have
156:10 - selected although this is not exactly
156:12 - what I want because I want to make all
156:14 - of this much darker and for that you can
156:17 - work with the blend mode at the moment
156:19 - we are simply adding the color but if
156:21 - you change this to subtract then we are
156:24 - removing the color we have selected here
156:26 - so right now we have an orange brownish
156:28 - color and these are values that are
156:30 - removed from the colors in the actual
156:32 - scene meaning at the moment we are
156:35 - removing lots of red colors so the
156:36 - entire thing looks dark and blue if you
156:40 - change this to let's say a brighter
156:42 - color the thing get darker and if you go
156:45 - darker the thing's brighter if it's pure
156:47 - black the end result is going to look
156:49 - like the fault and in my case I want to
156:51 - make it just a bit
156:54 - darker and then work with the color this
156:56 - doesn't look exactly good I guess we can
157:00 - have a fairly neutral color and then
157:01 - make all of this much darker in general
157:04 - something like
157:05 - this once again play around with this
157:08 - for an actual game in my case I'm going
157:11 - to be a bit quicker so it doesn't take
157:13 - too long and now you can see that the
157:15 - game itself is quite dark for most of
157:18 - the time but once we get to a light we
157:20 - still have the Flicker and the game
157:22 - brightens up this also applies to the
157:24 - player itself and this is looking pretty
157:29 - good so with that we have the lights for
157:32 - our game later on we will customize the
157:35 - directional light just a bit more but I
157:36 - think for now this is fine now besides
157:39 - the light we don't need this part
157:41 - anymore actually I also want to create a
157:43 - transition
157:45 - gaug which is going to be another note
157:48 - where the parent scene will be an area
157:51 - to be which I want to rename right away
157:54 - to position gate as soon as the player
157:57 - is entering this area then we want to
158:00 - stop the player movement fade the screen
158:02 - to Black and then load another scene
158:05 - that scene is then going to be another
158:07 - level all of this we want to save right
158:09 - away I placed all of that inside of
158:12 - objects it might not be perfect but for
158:14 - a small project like this I suppose it's
158:16 - fine first of all in there for the
158:19 - transition gate we will have to add one
158:21 - more note which is a collision shape 2D
158:25 - for the gate I want to have a rectangle
158:27 - shape to be that I want to make taller
158:31 - and wider just to test how things are
158:34 - looking inside of the station I want to
158:37 - add the transition gate then we can tell
158:40 - how large it is compared to the player
158:42 - and this is much too big so this needs
158:45 - to be quite a bit smaller something like
158:49 - this
158:51 - maybe that looks more reasonable I guess
158:54 - we can make it just a bit smaller so
158:56 - shorter and narrower and that looks
159:00 - pretty good on this transition gate I
159:02 - want to do two things number one when
159:05 - the player is colliding with it it
159:06 - should emit a
159:08 - signal although for that to work we
159:10 - first of all want to work with the
159:12 - collisions that the gate can only see
159:14 - the player which means it should not be
159:17 - on the terrain layer but it should be on
159:19 - the transition
159:21 - layer and then it can only see the
159:24 - player layer that way if a bullet hits a
159:27 - door we don't transition to another
159:29 - level that would be kind of weird next
159:31 - up inside of Noe we want to check if a
159:34 - body has entered although to connect the
159:37 - signal the transition gate first of all
159:39 - will need a script which we can Call
159:41 - Transition gate. GD that's totally fine
159:44 - and now in the transition gate I want to
159:47 - check if a body has entered that I want
159:49 - to connect to transition gate on body
159:51 - entered for now let's simply
159:54 - print
159:56 - transition and let's try the entire game
160:00 - if I move a bit to the left we're
160:01 - getting
160:02 - transition that's looking good the
160:05 - actual transition we're going to cover
160:07 - in just a bit first of all though I want
160:10 - to
160:11 - convert this transition gate to a tool
160:14 - as well so that inside of the inspector
160:17 - when we are placing the transition gate
160:19 - we can also select the target scene for
160:23 - that I want to add tool all the way at
160:26 - the beginning and then export and
160:32 - enum for which we will need the names of
160:34 - the scenes we have station then we have
160:38 - sky and finally we have
160:43 - underground with the default level being
160:47 - station other than that I also want to
160:50 - create a
160:53 - levels dictionary the issue we have at
160:56 - the moment is that via this export enum
160:59 - we are simply selecting a string either
161:01 - station sky or underground this we need
161:04 - to connect to inside of scenes we have
161:10 - all of the levels and inside of these
161:12 - levels we have sky station and
161:15 - underground I suppose also test but this
161:17 - I'm going to ignore I I want to connect
161:20 - the name that we're getting from export
161:22 - enam to the actual
161:24 - scene and for that once the game is
161:27 - actually ready so Funk underscore ready
161:32 - then I want to check if we are not in
161:33 - the editor meaning if not engine. is
161:38 - editor
161:39 - hint that means we are in the game and
161:42 - then I want to update this
161:44 - dictionary to have key value pairs where
161:48 - for example we we have levels with
161:52 - station getting a path to the station
161:55 - scene let me add a bit more space so all
161:57 - of this is visible there we go now we
162:00 - have one entry inside of the dictionary
162:02 - besides that I want to get levels again
162:06 - create a sky entry and then get the sky
162:09 - scene in there as well finally one more
162:12 - entry for the
162:15 - underground and this is going to be the
162:18 - underground scene
162:20 - if I have transition gate selected I can
162:22 - select the target level and Via this
162:25 - target level we are selecting a Target
162:28 - scene that we are then able to
162:30 - transition to once the player entered
162:32 - this area 2D and that we can then use to
162:36 - transition to another
162:38 - scene in practice that would mean we are
162:41 - calling get three and then change scene
162:45 - to file now gdo is going to give us all
162:48 - of the available scenes
162:49 - but that's not what we actually want
162:52 - instead we want to go to levels and then
162:55 - select the current level and that should
162:58 - be it at least in a very basic sense if
163:01 - I now start the game and go a bit to the
163:03 - left at some point we are getting to the
163:05 - sky level now since that one doesn't
163:08 - have a player at the moment we don't
163:10 - really get a proper outcome and also we
163:12 - are getting some debugger arrows but
163:15 - that is something we can work on also
163:17 - one more minor thing that we can add is
163:18 - an _ to body because we are not going to
163:21 - need it with that let's open this guy
163:25 - scene and let's have a look in there we
163:28 - have another level to that I first of
163:32 - all want to add the player so to the
163:34 - entities Noe I want to add the player
163:37 - and then place the player in the
163:38 - starting position right next to the door
163:41 - here on top of that I also want to add
163:43 - the transition gate to go back to the
163:45 - station and this should be on this area
163:48 - here that being said though in this
163:51 - station as well we have the transition
163:53 - Gates just randomly in the scene tree
163:56 - which I just don't really like to fix
163:59 - that inside of level I want to add
164:02 - another note Tod which is going to be
164:05 - for the transitions or I guess we could
164:08 - call it transition Gates doesn't really
164:11 - matter what you call it this I now want
164:12 - to save and if I go back to station the
164:16 - transition gate
164:19 - this one should be inside of transition
164:21 - Gates that way we can minimize it and
164:24 - the entire thing looks much cleaner
164:27 - after that inside of the sky we also
164:30 - have transition Gates and to that I want
164:33 - to add a single transition gate which
164:37 - should bring us back to the station this
164:39 - we have to reposition to get to the door
164:43 - so pick the transition gate and place it
164:46 - roughly Here and Now now if I move a bit
164:50 - to the left we are ending up in the sky
164:53 - level if I go to the door we are in the
164:56 - station again so we can transition
164:59 - between the levels it doesn't work
165:01 - terribly well yet but it's a start first
165:04 - of all though this transition is way too
165:07 - abrupt it shouldn't happen this fast
165:09 - instead I want to fade out to Black then
165:12 - change the scene and then fade out back
165:14 - to the level for that I want to create a
165:18 - new scene which as apparent is going to
165:20 - get a canvas
165:23 - layer that I am going to rename right
165:26 - away to
165:28 - transition layer via this transition
165:31 - layer we are going to ignore the camera
165:34 - and the only note that we are going to
165:36 - add to this thing is a color rectangle
165:39 - that is going to span the entire window
165:42 - and will always be completely black
165:46 - after we have that I want to save the
165:48 - scene and I want to save it inside of
165:52 - global because we want to have this
165:54 - thing available at all times so save it
165:57 - in there and then go to project project
166:00 - settings autoload we already have Global
166:02 - in there but now I also want to get
166:05 - Global and transition layer the note
166:08 - name transition layer is totally fine
166:10 - then click on ADD and now the way you
166:13 - have to think about this system by
166:14 - default this area is going to be
166:17 - invisible but then once the player steps
166:19 - into the transition gate area we going
166:22 - to fade it to Black once we reach full
166:24 - black we're going to switch the level
166:26 - and then we are gradually fading out the
166:28 - black color one more time that way we
166:30 - have a nice transition for that first of
166:33 - all though when the player is entering
166:35 - the transition gate area get my
166:38 - transition layer and then call method
166:41 - that doesn't exist yet but I want to
166:43 - call change scene which needs to get one
166:46 - argument levels and
166:49 - for that to work inside of the
166:51 - transition layer scene I want to add
166:53 - another script called transition layer
166:56 - inside of global that's totally fine in
166:58 - here I want to have the function change
167:01 - underscore scene the one parameter that
167:04 - we need is called Target I suppose for
167:06 - now just to test the things are working
167:08 - I want to print what we are getting
167:10 - although now if I run the entire thing
167:12 - we cannot see anything because by
167:14 - default everything is black and since
167:17 - this transition layer is always visible
167:20 - we always have a black thing on top of
167:22 - everything else so not
167:24 - amazing to fix that when we are getting
167:27 - started inside of the transition layer
167:29 - script I want to get the ready function
167:32 - Target the color rectangle and change
167:36 - the alpha value via
167:38 - modulate the way to do that is by
167:41 - assigning a color value which is going
167:44 - to get zero for the color and zero for
167:47 - the alpha value that way I can run all
167:49 - of this one more time and we can see the
167:52 - level once again if I now go to the left
167:55 - we can see the right scene so inside of
167:58 - output this is the proper output that's
168:01 - a good start now I want to use a tween
168:03 - to fade to black load a scene and then
168:06 - go back to make the level visible first
168:08 - of all for that I will need a tween in
168:11 - general create TW I want to Tween a
168:17 - property of the the color rectangle the
168:21 - property I want to Target is modulate
168:25 - the final value let me expand the code
168:28 - field the final value is going to be
168:30 - color where the color itself is going to
168:32 - be zero although this part doesn't
168:34 - really matter the important bit is for
168:36 - the alpha value I want to have one
168:39 - whereas in the original we had a value
168:40 - of zero finally we will need a duration
168:44 - I went with
168:45 - 0.5 but this you could work with it's
168:47 - fairly subjective after we have that we
168:50 - can duplicate this line because twins
168:54 - always run in series which means we are
168:56 - first doing this tween and after this
168:58 - one's done we are doing this
169:00 - one which means we know on this thing we
169:03 - want to set modulate back to a color
169:06 - value of zero over a certain duration of
169:09 - time let's stick with
169:11 - 0.5 that means if I now run all of this
169:14 - and I get to the gate we have a Fade to
169:17 - Black animation that works multiple
169:19 - times so that's a good
169:22 - sign but obviously we have to actually
169:24 - load the scene and for that we can add
169:27 - another thing twe and tween
169:31 - callback which is a function that is
169:33 - going to be called once the tween has
169:35 - finished it wants to have a single
169:37 - argument which is the function that we
169:38 - want to call my case open scene but is
169:42 - not going to complain that this function
169:43 - doesn't exist so let's create it
169:45 - opencore C for now with without any
169:49 - argument to test things I want to print
169:53 - open scene with that let's try all of
169:57 - this and we are getting open scene when
170:01 - the screen is entirely black a really
170:03 - important thing to understand about
170:05 - twins is that they always run in
170:06 - sequence meaning we are doing this line
170:08 - first then we are doing this one and
170:11 - finally we are doing this one meaning
170:14 - this function is always going to run
170:16 - after we have faded this green to Black
170:18 - which is exactly what we want but now we
170:20 - have an issue we have to pass the target
170:23 - into the open scene function for which
170:26 - we can add one more nice good do feature
170:28 - we want to create a callable bya this
170:31 - functionality we can always assign an
170:33 - argument to a function for that to work
170:36 - we will first of all need two arguments
170:39 - the object that this callable should be
170:41 - part of in our case this will be self
170:44 - and then we will need the string name of
170:46 - the function that we want to call open
170:48 - open underscore
170:51 - scene and this by itself wouldn't do
170:53 - anything we can still run the game just
170:55 - as before with the same
170:58 - result however what we can do now is add
171:02 - the bind method and Via that we can bind
171:06 - any argument to this function and then
171:08 - that argument would be passed into open
171:10 - scene I want to pass the Target that we
171:13 - are getting from the parameter from
171:15 - change scene into the bind method as an
171:17 - argument and open scene we'll capture
171:20 - that via the parameter I suppose we
171:22 - could call this one the scene that we
171:24 - want to open once we have that we
171:27 - actually want to get the tree now and
171:30 - then change scene to file with the scene
171:33 - that we are getting I suppose the best
171:35 - name for this one would be the scene
171:37 - path finally then if I now run all of
171:39 - this again I can get to the right place
171:42 - and now this is working much
171:46 - nicer so let's try it
171:49 - again and there we go now there's one
171:52 - more issue that we have to deal with the
171:54 - player during the transition can keep on
171:56 - moving which feels really weird to fix
171:59 - that we have to reopen the player scene
172:02 - and let me minimize
172:04 - everything there we go so for the player
172:08 - movement inside of process we have can
172:11 - move and while there's a scene
172:13 - transition this value should be false
172:16 - for that to work we have to get access
172:19 - to the player from inside of the
172:21 - transition layer and that you can do in
172:24 - a couple of different ways I find the
172:26 - best way to do it is to place the player
172:28 - scene inside of a group let's call this
172:32 - one player then save the scene and now
172:35 - inside of the transition layer script I
172:38 - want to get before we are creating the
172:41 - tween get three don't forget to call
172:44 - this one and then get
172:47 - first note in group the group we want to
172:50 - Target is player since there's only ever
172:53 - going to be a single note inside of this
172:55 - group we are always going to get the
172:56 - player
172:57 - character and on this player we want to
173:00 - call block uncore movement a method that
173:04 - doesn't exist at the moment so inside of
173:06 - player we want to add all the way at the
173:09 - bottom bunk lock uncore movement all we
173:14 - want to do in here really is can move
173:17 - should be BS and on top of that if we
173:20 - have any kind of
173:22 - velocity it should be set to Vector to
173:25 - dot zero that way if the player is
173:28 - currently moving we are stopping all of
173:30 - that let's try all of that and now if I
173:33 - get to a transition
173:34 - gate we are at the very least stopping
173:38 - the
173:39 - movement also if we are jumping this is
173:42 - still working just fine the last
173:44 - annoying thing is that the player legs
173:46 - keep on moving when we're walking into
173:48 - to the gate to fix that I want to get
173:53 - the player
173:55 - graphics and in there we have the legs
174:00 - which are an animated Sprite so if we
174:03 - are looking at player Graphics open the
174:05 - scene we have the LA which is an
174:07 - animated Sprite so on this note we can
174:10 - simply call stop and then the animation
174:13 - should stop let's try all of that I can
174:16 - now run into the transition gate
174:18 - and the player stops animating or well
174:21 - the lags stop animating but you get the
174:22 - idea so with that we have transition
174:26 - Gates that means I can now close
174:29 - transition layer and transition gate
174:31 - that's all we needed in here player
174:34 - Graphics we also don't need and I guess
174:35 - we should keep the player Open Sky
174:37 - though we don't need for now that covers
174:40 - the second major part of this section
174:43 - with that we have transition Gates that
174:45 - we can move around and we can change the
174:49 - target I suppose I should show this
174:51 - would also work with underground or at
174:53 - least I hope it would if I now go to
174:56 - this part we're getting to the
174:57 - underground which doesn't have a player
174:59 - at the moment so the result is going to
175:01 - be a bit weird but that I'm going to fix
175:03 - in just a bit first of all though I want
175:06 - to add one more thing the sword that is
175:09 - going to move around the platforms for
175:11 - example for these two platforms I want
175:15 - to have a sword that moves in a path
175:17 - around them something like
175:21 - this and this path should be really
175:24 - flexible ideally what I would like is
175:26 - that I can set the path straight inside
175:30 - of the station scene and then the saw is
175:32 - going to follow it but let's go through
175:34 - it step by step first of all we have to
175:37 - create a new scene the parent note is
175:40 - going to be an area 2D that I will
175:46 - rename right away to saw which I want to
175:49 - save not in global but in scenes and
175:53 - objects after that we can add an
175:56 - animated Sprite
175:59 - 2D and for the graphics I want to load
176:03 - the saw animation although I guess the
176:06 - way this is going to work under
176:07 - animation I want to add new spreite
176:09 - frames click on that again and now click
176:12 - on this grid symbol with that we can go
176:15 - to Graphics objects and and saw
176:19 - animation and tell good do that we have
176:21 - four horizontal frames but only one
176:24 - vertical one and then you can select the
176:27 - individual images click on add four
176:29 - frames and we get the animation if you
176:32 - zoom in a bit you can also Auto playay
176:34 - all of this and make sure you play it as
176:37 - well with that we getting the saw
176:39 - animation a bit slow right now let's say
176:42 - 10 for this one and then this is looking
176:45 - all right as always play around to see
176:47 - what works best for you besides that I
176:50 - want to have a collision shaped Tod
176:53 - which should be a circle shape and the
176:56 - default one here actually works really
176:58 - well I suppose I could make it a bit
177:00 - smaller also for the area to the parent
177:02 - node in
177:04 - collisions I want the sord to be on the
177:06 - projectile layer and it can only see the
177:09 - player after we have that I want to give
177:12 - the saw a
177:14 - script inside of objects saw. GD is
177:17 - totally fine
177:19 - and then inside of note under signals I
177:23 - want to add body entered and connected
177:25 - to the script if this function triggers
177:28 - we know that the player was hit so let's
177:31 - print player hit and so good do doesn't
177:34 - complain and underscore to the body
177:36 - parameter after that inside of station
177:40 - we have to add the source somewhere and
177:42 - to keep things organized inside of
177:45 - main or well inside of level and then
177:48 - inside of main I want to add another
177:51 - node 2D which is going to be for the
177:55 - objects I can save this return to
177:58 - station and now to objects I want to add
178:01 - the S and by default it spawns in
178:03 - position Zer and zero so hold alt and
178:06 - then move it to the right position I
178:09 - suppose we can move it right down here
178:11 - and then also move the player in this
178:13 - general
178:15 - area that way I don't have to move
178:18 - around so much while
178:20 - testing let's try to run the entire
178:22 - thing and then we're getting a sword
178:25 - that's animating and if the player
178:26 - collides we're getting player hit that's
178:28 - working pretty good now I want to move
178:30 - the saw and for that I want to add a
178:35 - path Tod the way the system works in
178:38 - good is that this path Tod is expecting
178:41 - a child path follow Tod on this path
178:44 - follow Tod we have progress the progress
178:48 - it's referring to is the progress on
178:50 - this path to D so on there you can add
178:52 - something like this and then close the
178:54 - path we are getting a path that path
178:57 - follow Tod can follow and then inside of
179:00 - the script you would write a function to
179:02 - increase the progress and update the
179:05 - position of the entire node this however
179:08 - we can't really do because we want to
179:09 - have multiple Source or in other words
179:12 - inside of the station we might get this
179:15 - one path to but but if you want to have
179:19 - a second
179:20 - one we couldn't just copy it because the
179:23 - path is always the same for every single
179:25 - Noe so that doesn't really work for
179:28 - us let me delete the second note and
179:32 - then return to the s in there for now I
179:35 - want to remove the path follow Tod and
179:37 - on this path Tod I am going to delete
179:40 - the path I have just created the easiest
179:43 - way of doing that is under curve you are
179:46 - resetting the value that way there is
179:48 - nothing inside of this thing at the
179:50 - moment in fact I just realized we don't
179:52 - want to have a path Tod in there at all
179:55 - we should only have the saw area to the
179:58 - parent node animated Sprite and
180:00 - collision shape because inside of the
180:03 - station I want to add a path straight to
180:05 - the saw although for that on that
180:08 - transform I want to reset the value that
180:11 - is usually a good idea to avoid some
180:14 - errors so right now the saw is in the
180:17 - orig point of the scene and after we
180:20 - have that I want to add another child
180:23 - which is going to be the path to D that
180:25 - we want this s to follow and then I want
180:29 - to go to the place where I want the path
180:31 - to be and draw the points for this path
180:35 - like so and then close the path now we
180:37 - have a path associated with this scene
180:40 - and that means we can work inside of s
180:43 - and first of all let's see what we
180:45 - actually get if I run fun
180:48 - underscore ready and print get
180:54 - CH I can run the entire thing and we can
180:58 - see that in the output we're getting an
181:01 - animated Sprite Tod a collision shape
181:03 - Tod and a path Tod and all of this is
181:06 - inside of a single list meaning good do
181:09 - doesn't really care if you have a node
181:12 - inside of the scene tree or if you add
181:14 - another Noe to the instance of the scene
181:17 - in another seen tree which for our
181:19 - purposes can be really nice because that
181:22 - system we can use for the saw and let me
181:25 - extend all of this I want to create
181:28 - first of all two more variables the
181:30 - first one I have called path and this
181:32 - one needs to be a path to D next up
181:36 - another variable is going to be a
181:39 - pathore hollow the only data type
181:42 - allowed for this variable is going to be
181:44 - a path follow 2D and then when the scene
181:48 - is ready I want to assign the path that
181:51 - we have created inside of this station
181:54 - this one here to this variable which we
181:58 - can do quite easily I want to get the
182:00 - path and then get the children of this
182:03 - node and since this path to D is always
182:07 - going to be the final child we can
182:09 - simply add indexing and negative one
182:12 - next up we need to have a path follow 2D
182:15 - node which we are going to store inside
182:17 - of this variable
182:18 - which means I want to have my path
182:19 - follow variable and then assign a path
182:23 - follow to the new node which we also
182:26 - have to add as a child to the path in
182:29 - other words I want to get the path and
182:31 - then add a child which is going to be
182:35 - path
182:35 - follow the thing we just
182:38 - created and then I hope good stops
182:40 - complaining this should be all right
182:42 - just to test all of this if I now run
182:45 - the scene the game doesn't crash and I I
182:47 - can go to remote and in there we already
182:50 - have the saw open and we have a path to
182:53 - D and a path follow to d as a child this
182:56 - is the setup we actually need now we
182:59 - just have to make sure that this path
183:01 - follow 2D is updating or well
183:03 - progressing and then that the entire
183:06 - node is following that path follow node
183:09 - for all of that we will need another
183:13 - function that is going to be underscore
183:16 - process basically I want to get my path
183:19 - follow variable and add the value to
183:24 - progress for now this can be something
183:26 - fairly crude let's say 100 time Delta
183:29 - and next up I want to update the
183:31 - position of the entire scene to the
183:34 - position of this path follow which means
183:37 - I want to get path follow and position
183:40 - with that I can run the game and we're
183:44 - getting the saw in the right place
183:46 - that's looking pretty good we also get
183:48 - player hit so all of this works really
183:50 - well if you want to be really fancy you
183:52 - could also make all of this a tool that
183:55 - way you'd get a live preview of the saw
183:57 - movement although I wouldn't really
183:59 - recommend it because if you make
184:01 - everything a tool eventually the
184:03 - performance in G do is going to crash
184:04 - pretty hard so I am not going to do it
184:07 - and instead I want to specify three
184:10 - things for the source I want to have an
184:14 - export VAR speed I want to have an
184:18 - export VAR offset and an export VAR for
184:23 - boort that way we can control the speed
184:26 - of this thing we can add an offset when
184:28 - it's starting and we can move it forward
184:30 - or backwards creating these free
184:33 - variables and using them inside of the
184:35 - logic is going to be an exercise for you
184:38 - this should be fairly straightforward so
184:40 - add speed offset and a forward mechanic
184:42 - to the saw pause the video now and see
184:44 - how far you get
184:49 - first of all for the speed and while we
184:51 - are doing this I'm going to comment out
184:54 - offset and forward speed is the easiest
184:56 - one I simply want to have some kind of
185:00 - value let's go with 100 by default this
185:04 - speed we then need to use inside of the
185:07 - process function and add speed in there
185:10 - then I can run all of this we're getting
185:12 - the same result but now for the saw I
185:14 - can set the speed to let's say something
185:16 - really large that we can can see a
185:18 - difference 400
185:22 - and it is moving much faster next up I
185:26 - guess the easier part is forward this is
185:29 - simply going to be a Boolean value which
185:32 - I want to set to True by default once we
185:35 - have that inside of process I want to
185:38 - have VAR Direction which is going to be
185:41 - one if forward and if it is not the case
185:45 - else it's going to be negative 1 that
185:47 - value I then want to multiply with the
185:51 - progress addition so multipli it with
185:55 - Direction and then inside of the editor
185:58 - I can set a tick mark for forward or not
186:01 - and if it's disabled then the saw should
186:04 - be going the other
186:05 - way yeah that looks good so I'm going to
186:08 - keep it at forward and the default speed
186:10 - but once again choose whatever you like
186:13 - finally I want to have an offset which
186:16 - by default is going to to get a value of
186:19 - zero which can be an integer and then
186:22 - when the scene is ready I want to apply
186:24 - this offset to the progress of path
186:27 - follow we can simply drag it from there
186:31 - and then set the progress to the offset
186:35 - and to make sure we can see all of this
186:37 - well I'm going to set the speed to
186:39 - something super low let's say
186:41 - five that way when I start the game you
186:45 - can see the saw is in the top left but
186:48 - if I change this value to 100 and run
186:52 - all of this
186:53 - again then the saw is much further to
186:56 - the
186:57 - right perfect that's all we
187:00 - needed and with that we have finish the
187:04 - saw now later on the function on hitting
187:07 - the player is going to be much more
187:09 - extensive but that functionality only
187:11 - really makes sense once we have all of
187:13 - the enemies which is going to be the
187:14 - next part I'll see you there before we
187:17 - finish
187:18 - here is an updated version of all of the
187:20 - levels so inside of station sky and
187:24 - underground I have now added a few more
187:26 - things but nothing lifechanging most
187:29 - importantly for the underground I have
187:31 - added the player and the transition gate
187:34 - along with a bunch of Lights I also
187:37 - updated the directional light for the
187:38 - entire scene but that's not that much
187:41 - same for the sky in there I have now a
187:44 - transition gate to go back to the
187:46 - underground to go back to the station
187:48 - and we have an overall scene light
187:50 - nothing too fancy so now if we are
187:53 - running out of this we can go to the
187:55 - underground do some things in here and
187:57 - come back and explore the rest of the
188:00 - level along with a bunch of other
188:05 - things feels much more like a real game
188:07 - by now oh also you might have already
188:10 - spotted inside of project project
188:13 - settings under window I have increased
188:16 - the window size or the you put to be a
188:18 - bit more specific to be 1920 by 1080 for
188:21 - an actual game we will need a challenge
188:24 - and for a challenge we will need some
188:26 - enemies which is what this part will be
188:30 - about there are fundamentally three
188:32 - kinds of enemies a drone soldiers and
188:35 - some kind of monstery thing I suppose on
188:39 - top of that we also have the sword that
188:40 - we already added now for this part I am
188:44 - going to go in two stages number one
188:47 - we're going to add the basic enemies
188:49 - although for now they're only going to
188:51 - move but not shoot that's going to be
188:54 - the second part because for shooting we
188:56 - will need bullets which I want to
188:58 - implement in a way that we have one
189:00 - bullet class that we can reuse for the
189:03 - player for the soldiers and for the
189:05 - monster the Drone Works slightly
189:07 - differently it simply explodes once it
189:09 - collides with anything and for that here
189:11 - we are back in Gau and let me add a bit
189:14 - more space to the editor and I suppose
189:17 - all so we only need this station we
189:20 - don't need sky or underground we also
189:22 - don't need the player right now instead
189:24 - I want to create a new scene actually I
189:27 - don't I want to create a new inherited
189:30 - scene the parent node should be inside
189:34 - of entities the entity. TSN this is what
189:38 - I want to open in there with the Paran
189:41 - note selected I want to create an
189:44 - animated Sprite to which I want to add
189:46 - Sprite frames and then for the default
189:48 - animation that's the only one we need
189:51 - click on the grid again and now we want
189:53 - to go to Graphics there we have the
189:56 - entities and the Drone once again we
190:00 - have four horizontal frames and only a
190:03 - single vertical one then select the four
190:07 - frames in order and add all of them for
190:10 - the frame rate I guess we can go to 12
190:14 - and then play the animation that looks
190:16 - about right it's really nothing fancy
190:19 - next up we will have to set a collision
190:22 - shape which for this one I went with the
190:27 - round one something like this could be
190:29 - refined a bit but I think it's
190:32 - fine also I want to rename entity to
190:35 - drone and then save the entire thing
190:38 - inside of the entity's
190:40 - folder you could make another subfolder
190:42 - for enemies in there I don't think it's
190:44 - really
190:45 - necessary so next up inside of the
190:47 - station under entities I want to add the
190:52 - Drone and then place things in such a
190:55 - way that we can see them right away so I
190:57 - want to move the Drone let's say up here
191:00 - and the player can also go up there so
191:02 - we can see things
191:04 - immediately let's try all of this and
191:08 - there we go we have a drone doesn't do
191:10 - anything at the moment but that's
191:11 - totally fine next up I want to add two
191:15 - area to these the first one is going to
191:19 - be the player
191:22 - detection area and the other area is
191:26 - going to be the
191:28 - Collision detection area as soon as the
191:32 - player enters this area the Drone will
191:34 - become active and always move towards
191:36 - the player Collision detection area is
191:39 - going to be a detection area and once we
191:41 - hitting that the Drone is going to
191:43 - explode I wanted to make this just a
191:46 - little bit larger than the Collision
191:47 - shape itself there isn't really a
191:49 - specific reason for it it just felt
191:51 - better for the player detection area I
191:53 - want to add a collision shape B with a
192:00 - circle
192:01 - shape and then make this thing
192:03 - reasonably
192:04 - large for a collision detection area I
192:07 - want to do something fairly similar so
192:09 - Collision shape 2D along with a circle
192:13 - shape and then something just a bit
192:15 - larger
192:17 - then the actual Collision shape itself
192:20 - with that let's have a look at this
192:22 - station and that feels just about right
192:25 - I guess we can move the player a bit
192:27 - further to the side next up then for the
192:30 - Drone I want to add a script which means
192:33 - we need entities and drone. GD that
192:35 - looks all right and now we have a script
192:38 - for the Drone for which I want to create
192:41 - three variables first of all the first
192:43 - one is variable active which is going to
192:46 - be a Boolean value that's false by
192:49 - default next up VAR speed some kind of
192:53 - integer value of 100 finally I want to
192:57 - have access to the player right away
192:59 - which we can access via on ready VAR ler
193:04 - is going to be get uncore 3 and get
193:08 - first note in group
193:12 - layer I think all of this is reasonably
193:15 - straightforward we are checking if the
193:16 - Drone is active so should it move
193:18 - towards the player this speed it should
193:21 - be moving at and then the player itself
193:24 - now this we can refine just a bit
193:28 - because the speed should be set globally
193:31 - and that we can do inside of global for
193:34 - example in there you could create const
193:37 - enemy
193:39 - parameters which will be a dictionary
193:42 - with a key for the Drone in there we can
193:45 - have another dictionary with this speed
193:47 - for example and let's go with
193:51 - 110 just to have something slightly
193:54 - different after we have that for the
193:56 - Drone for the
193:59 - speed instead of 100 for the speed I
194:02 - want to get Global do enemy
194:06 - parameters then the Drone and finally
194:10 - the speed that's a slightly better
194:13 - system because now inside of global we
194:16 - can store all of the enemy Behavior
194:18 - parameters you could even add the player
194:21 - parameters in here as
194:22 - well although that would add a lot more
194:26 - you simply have to find the right
194:27 - balance for your own game and
194:29 - fundamentally I want to call the process
194:32 - function and check if the Drone is
194:36 - active and if that is the case I want to
194:39 - move towards the player for which we are
194:41 - going to need a
194:43 - direction the math for this one is
194:45 - fairly simple we always need the end
194:47 - position and the start position and
194:49 - normalize that thing very simple Vector
194:51 - math or in other words we want to get
194:54 - ler do position minus the position of
194:58 - the Drone itself so just position and
195:00 - then
195:02 - normalized that will give us a direction
195:05 - that we can use to update the velocity
195:07 - because remember the Drone is simply a
195:09 - character body so velocity will be
195:11 - Direction times
195:14 - speed and finally we can move and slide
195:19 - and then we should be good to go the one
195:21 - thing that we have to do is to set
195:22 - active to true because by default it's
195:25 - false for that we will need the player
195:27 - detection area we can go to the signals
195:31 - and check for body entered and
195:34 - connect although for this part I think
195:37 - we need to be a bit more careful because
195:40 - the player detection area at the moment
195:42 - Spector under Collision we can only see
195:45 - terrain so so this should be on the
195:50 - layer I guess projectiles is fine and
195:53 - for the mask we only want to be able to
195:55 - see the player and for the Drone for the
195:58 - Collision shape for the Collision layer
196:00 - and mass system I want the Drone to be
196:03 - on layer three for the enemies and the
196:06 - Drone can see the terrain and it can see
196:09 - the player I guess why we here what a
196:12 - collision detection area this one should
196:15 - also be on projectiles and for the
196:17 - detection I want terrain ler and I guess
196:21 - upper enemies along with the
196:26 - projectiles our game is getting just a
196:28 - bit more complex and the Collision mask
196:30 - and layer system does reflect that so
196:34 - let's test if things are working I want
196:36 - to check if the player is entering and
196:38 - if that's the case print let's say
196:41 - player entering or rather player
196:44 - detected let's try to run this the game
196:47 - and now if I move left we should get
196:50 - player detected and we do this also
196:52 - works multiple times
196:53 - perfect that's great because all we want
196:56 - to do inside of this signal is set
196:58 - active to
197:01 - through and if that is the case the
197:03 - Drone should be following us
197:06 - and that is looking pretty
197:10 - good now obviously once the Drone
197:13 - collides with us we're getting some
197:14 - weird Behavior but that's okay
197:17 - because for that case we want to trigger
197:19 - the Collision detection area or in other
197:21 - words on the note we want to get if a
197:25 - body has
197:26 - entered and then do a thing for now to
197:29 - get started I simply want to Q fre the
197:32 - Drone so it should disappear let's try
197:36 - and the Drone has disappeared right away
197:39 - so this Collision area has collided with
197:41 - a body to check what's going on let's
197:44 - print the body that it has collided with
197:49 - let's run out of this again and we are
197:51 - getting a collision with the Drone
197:53 - itself so this Collision detection area
197:56 - is colliding with the
197:57 - Drone I guess one way around that in the
198:01 - Collision mask is we could take out the
198:05 - enemies now we shouldn't see a print
198:07 - statement anymore and we don't now with
198:10 - that system though we do not get
198:12 - collisions with the enemies so not ideal
198:16 - let's reactivate it and then we only
198:19 - want to Q fre if the body is different
198:24 - from self so we're not colliding with
198:26 - the own body let's try this one and
198:30 - there we go we have the Drone again and
198:32 - the Drone can collide with the player
198:34 - and it could also collide with other
198:36 - objects and still
198:38 - disappear I guess what we can also
198:41 - try that it can collide with the terrain
198:44 - and there disappears so once that
198:47 - happens I want to have an explosion Also
198:50 - let's check the debugger because that's
198:52 - always an annoying part we are not using
198:54 - Delta or the body in on player detection
198:57 - area body entered for that we can simply
199:00 - add a couple of underscores and that
199:03 - should fix
199:05 - everything yep that looks good perfect
199:08 - next up I want to create the actual
199:11 - explosion and the way that system is
199:13 - going to work once the Drone is
199:15 - colliding with anything it's supposed to
199:17 - send a signal and this signal we are
199:19 - capturing inside of the level this in
199:22 - turn is then going to create another
199:24 - scene with an explosion and that's
199:26 - basically just an animation for that
199:28 - though first of all inside of the Drone
199:30 - I want to create a signal let's call it
199:34 - detonate for which we're going to need a
199:36 - position which should be a vector two
199:40 - and as soon as we are colliding with
199:43 - anything we are destroying the Drone and
199:46 - we are are emitting the detonate signal
199:49 - detonate do emit with the global
199:54 - position of the Drone and this we should
199:56 - do before we are running Q3 just to make
199:58 - sure that we are emitting detonate
200:00 - before we are destroying the
200:02 - scene next up we have to capture this
200:05 - signal which needs to happen inside the
200:08 - level scene which at the moment doesn't
200:10 - work because we do not have a script in
200:13 - fact the station doesn't have a script
200:15 - either so so we can create an entirely
200:18 - new script for the level which I want to
200:20 - store in the level's folder that's fine
200:22 - so create inside of the ready function I
200:27 - want to Loop through all of the children
200:29 - inside of entities which means for
200:32 - entity in main. entities. getet
200:37 - children in there I want to check if an
200:40 - entity has the signal detonate which is
200:42 - only the case for drone remember inside
200:45 - of entities we have at the moment the
200:47 - player and the Drone and later on we
200:50 - will have other entities in there as
200:51 - well to check if a scene has a signal
200:55 - all you need is the scene itself and
200:58 - then has signal super easy the signal we
201:02 - are looking for is called detonate also
201:05 - make sure that you are adding if in
201:07 - there as well if that is the case I want
201:11 - to get the entity and connect a signal
201:15 - the signal is detonate itself and the
201:18 - function that we want to run is called
201:20 - create explosion this one doesn't exist
201:24 - at the moment so let me add a bit more
201:27 - space and then function create
201:31 - explosion which is going to need a
201:34 - position for now though just to make
201:35 - sure this is working let's print
201:39 - explosion along with the position that
201:42 - we are getting and this should be
201:44 - working already so if I run the ENT enre
201:46 - thing and the player collides with the
201:48 - Drone the Drone disappears we get
201:50 - explosion and a
201:52 - position I just assume this is going to
201:54 - be the right one but it seems broadly
201:57 - reasonable that means next up we can
201:59 - create a never scene for the explosion
202:03 - this is going to be super simple I just
202:05 - want to have an animated Sprite that I
202:08 - will rename to
202:10 - explosion I want to save all of this as
202:13 - well and I suppose under scenes we can
202:17 - create a new folder that I have called
202:21 - projectiles not perfect for an explosion
202:23 - but the bullets are going to be in there
202:24 - as well and it broadly fits okay save it
202:28 - in there and now we have an explosion or
202:31 - well we have an animated Sprite called
202:32 - explosion to get the actual explosion we
202:35 - want to add some Sprite frames and then
202:39 - once again use the grit symbol and under
202:42 - guns and
202:44 - projectiles we have an explosion in fact
202:46 - we have a couple of explosions the one I
202:49 - care about is
202:50 - bomb.png and once again we only have a
202:53 - single vertical frame but we have a
202:56 - bunch of horizontal ones eight in
202:59 - total then in sequence I want to go from
203:02 - left to right and select all of them and
203:04 - add the frames now we have a default
203:06 - animation let's have a look how this one
203:08 - looks we need a higher frame rate
203:12 - 20 maybe a bit too large 15 I suppose
203:15 - still a bit High let's go with 10 and
203:19 - yeah that fits nicer and this should
203:21 - also autop playay that's a really good
203:23 - start so next up inside of the
203:27 - level I want to preload the explosion
203:31 - all the way at the top constant
203:33 - explosion uncore scene which is going to
203:38 - be
203:40 - preload with the
203:43 - explosion. TSN that gives us the scene
203:46 - we have just created and when we are
203:48 - calling create explosion we want to
203:51 - create one instance of that which means
203:54 - VAR explosion will be the explosion
203:58 - scene do
204:00 - instantiate that is giving us a note
204:02 - that we now want to add to the scene Tre
204:05 - of level and I don't think we have a
204:08 - good place to put it so under main I
204:11 - want to add another note called project
204:15 - tiles
204:17 - once again not the perfect name but
204:19 - close enough to this note I want to add
204:22 - the explosion animation which means
204:25 - projectiles in main. ADD child with the
204:30 - explosion finally we have to update the
204:33 - position of the explosion which means
204:36 - explosion. position is getting the
204:39 - position from the
204:41 - parameter with that we have a pretty
204:43 - good start if I now collide with the
204:46 - Drone
204:46 - we are getting an animation but the
204:48 - animation keeps on looping so not
204:51 - amazing for that inside of the explosion
204:54 - scene first of all make sure that this
204:57 - looping symbol is not activated that way
205:01 - I can try all of this one more time and
205:04 - now we only get a single animation but
205:07 - we keep on having some other stuff at
205:09 - the end not amazing to fix this last
205:11 - part I want to add a script to explosion
205:14 - we can keep explosion as a name that's
205:17 - fine but I do not want ready or process
205:21 - in there instead I simply want to check
205:24 - when the explosion animation has
205:26 - finished for which inside of the notes
205:30 - we have a signal animation finished this
205:32 - I want to connect to the explosion and
205:35 - then we can do something once the
205:37 - animation is done for now we simply want
205:40 - to run
205:41 - Q3 which is generally a good idea
205:44 - because if you didn't destroy the scene
205:46 - after the explosion is done we would
205:48 - keep on adding more stuff to the
205:49 - projectiles these scenes wouldn't do
205:51 - anything and they wouldn't be visible
205:53 - but they would still be there and take
205:55 - up some processing time eventually this
205:58 - would cause a performance issue so
206:00 - something to keep in mind but now let's
206:02 - try all of this and the explosion
206:04 - disappears and also under remote Station
206:08 - Main and projectiles there's no child
206:11 - perfect now later on for the explosion
206:14 - and for the Drone we are going to add
206:17 - just a bit more but I think for now this
206:19 - is totally fine also to keep things just
206:21 - a bit cleaner I want to close a bunch of
206:25 - scripts light. GD we don't need player
206:28 - Graphics we don't need the saw we don't
206:31 - need the transition Gates the layer the
206:33 - tutorial data or the capsu shaped Tod
206:36 - these are the only scripts that we will
206:37 - need for now you can keep everything
206:39 - open if you have a bit more space I
206:42 - suppose while we add it we can also for
206:44 - now close the Drone scene and the the
206:46 - explosion and then finally move the
206:49 - Drone to another place so we can work on
206:52 - the next enemy let's move the Drone here
206:55 - and next up I want to create a soldier
206:58 - which once again is going to be a new
207:00 - inherited scene and the parent scene
207:04 - will be entities and entity I can rename
207:08 - this one right away to Soldier and then
207:11 - save all of this under entities soldier.
207:14 - TSN now the soldier animation is going
207:17 - to get quite a bit more
207:18 - complex So to avoid us having to do too
207:22 - much manual labor inside of the tutorial
207:26 - data scene we have one final entry the
207:29 - soldier animation which contains an
207:31 - animation player and a Sprite 2D so
207:34 - let's make this part
207:36 - visible we basically have a simple
207:40 - Sprite 2D which contains a whole bunch
207:42 - of frames for the soldier 24 in total
207:46 - and Via an animation player we are
207:49 - selecting different parts for example
207:51 - there's the def animation we have a run
207:55 - animation and things like a shoot down
207:58 - animation once again nothing too
208:00 - complicated but a bit tedious to
208:03 - implement so copy the animation player
208:05 - and the sprd and paste them into the
208:07 - soldier scene besides that we will need
208:10 - a collision shape which just like for
208:13 - the player is going to be a capsule
208:15 - which which fits roughly around the body
208:20 - of the
208:21 - soldier also you want to make sure that
208:23 - the floor
208:24 - aligns that looks good
208:27 - perfect with that we don't need tutorial
208:30 - data at all anymore and I want to save
208:32 - the soldier as well for this Soldier I
208:35 - want to add a script called soldier. GD
208:39 - and then create to make all of this work
208:42 - I want to create a few variables first
208:44 - of all VAR X underscore Direction by
208:48 - default is going to be one and this
208:50 - needs to be an integer at all times next
208:53 - up VAR speed is going to be a value we
208:57 - are going to get from Global and enemy
209:00 - parameters in there I want to have a EV
209:04 - value pair for soldier that contains the
209:07 - speed of the soldier although at the
209:09 - moment this doesn't exist so goo
209:12 - complains but that we can fix quite
209:14 - easily I want to copy this line for the
209:16 - Drone and change it to
209:19 - Soldier for the soldier speed I went
209:22 - with 50 after that good should be happy
209:25 - again perfect that means next up I want
209:28 - to create a speedcore
209:31 - modifier by default this one is going to
209:33 - be one and once again it always needs to
209:36 - be an integer next up I want to know if
209:40 - the soldja is attacking or not so VAR
209:42 - attack Boolean value that is false by
209:45 - default
209:46 - finally I want to get the player so on
209:49 - ready VAR player is going to be get
209:53 - uncore Tre and then get first note in
209:58 - group layer that covers a whole lot of
210:02 - setup to use all of this once again I
210:05 - want to have the underscore
210:08 - proess
210:10 - function and then update velocity dox
210:15 - the soers are only going to move left
210:17 - and right they don't actually have
210:20 - gravity because of that we can use the X
210:24 - Direction and multiply it with the speed
210:28 - and I also want to use the speed
210:31 - modifier by the way for the speed
210:33 - modifier later on once the soldier is
210:35 - attacking this values become zero so the
210:38 - soldier stops moving although that part
210:40 - isn't too important for now for now I
210:42 - want to move the soldier which I'm doing
210:44 - by calling move and slide
210:46 - that should do something in the code to
210:50 - test all of this I want under entities
210:54 - at the
210:57 - soldier and just to make sure we can see
210:59 - what's going on I want to move the
211:00 - soldier next to the
211:04 - player and then run the entire
211:07 - thing and this Soldier is
211:10 - moving he can even push the player so
211:12 - that's a decent
211:14 - start although not not great yet there
211:17 - are a few things that we have to add
211:19 - most importantly something that I always
211:20 - forget under collisions we have to
211:23 - update the Collision layer and the
211:24 - Collision mask the soldier should be on
211:27 - layer three for the enemies and the
211:30 - soldier can see the terrain the player
211:34 - and the projectiles on layer five next
211:38 - up we have to cover two major things
211:41 - number one we want to check for Cliffs
211:47 - and
211:48 - walls if the soldier hits either of them
211:51 - X direction should be reversed so we are
211:54 - going back and forth besides that I want
211:57 - to animate things I suppose for now we
212:00 - can check for Cliffs and walls and for
212:03 - that I want to add a few more things so
212:06 - the way you want to think about all of
212:08 - this the soldier can move left and right
212:12 - and we might have a cliff or we might
212:15 - have a wall somewhere on the side how do
212:18 - we check for both of those and the way I
212:20 - approach this is number one water Cliff
212:23 - we are going to have two rikas that go
212:26 - down right and down left as soon as they
212:29 - are colliding with some kind of floor we
212:31 - are good to go but as soon as there's no
212:34 - Collision anymore then the soldier is
212:36 - going to turn around besides that for
212:38 - the wall I want to set a collision shape
212:40 - around the soldier and as soon as this
212:43 - thing collides with any kind of object
212:45 - then the soldier once again is going to
212:47 - turn around for all of this let's start
212:51 - with an area 2B that I have called wall
212:55 - check
212:56 - area for which we are going to need a
212:59 - collision shape in my case I went with a
213:02 - rectangular shape that covers the entire
213:05 - height of the soldier and a bit more
213:08 - than the width of the original Collision
213:10 - shape for this wall check area in terms
213:13 - of collisions
213:16 - we do not want to be on any layer but we
213:18 - want to be able to see the terrain and
213:21 - if this thing collides with anything so
213:23 - we have body entered then we want to do
213:26 - something and that something is going to
213:28 - be X Direction multiply equal -1 that
213:34 - part we can test right away inside of
213:37 - station I want to move the soldier let's
213:41 - say down here and the player as well
213:45 - just to make sure we get and see what's
213:46 - going on if I now try all of this we get
213:50 - the soldier moving back and
213:53 - forth that looks pretty good the bin
213:56 - here doesn't look ideal but I think it's
213:59 - good enough next up for the soldier I
214:01 - want to check for a cliff and for that
214:04 - I'm going to add a note
214:06 - Tod and rename it to floor
214:11 - race because inside of this note we are
214:13 - going to do some Ray casting
214:16 - two times actually so Ray casting is
214:19 - just an arrow that checks for collisions
214:21 - I want to have one facing to the bottom
214:23 - right and another facing the bottom left
214:25 - the first SP should have a Target
214:27 - position of 20 and 20 and Target the
214:31 - terrain that's all we need in terms of
214:34 - naming this should be the right floor
214:36 - Ray cast then I can duplicate all of
214:39 - this and rename it to the left side the
214:42 - only change we have to make is that X
214:44 - should be -20 and there we go now we are
214:47 - checking for two points to the bottom
214:49 - right and the bottom left of the
214:52 - soldier now for rast we don't really use
214:55 - signals for some reason instead what you
214:58 - would rather do is I want to do this in
215:01 - another function check
215:04 - underscore lift without any
215:08 - parameters to check if a raycast is
215:11 - colliding with anything all you need is
215:14 - the raycast itself so so let's go with
215:16 - floor race right and then get
215:20 - collider this will return the object we
215:22 - are colliding with and if nothing is
215:24 - being returned then we don't have a
215:25 - collision also this should be check
215:29 - Cliff for proper spelling I want to
215:31 - check if
215:34 - xcore
215:35 - direction is greater than zero and
215:40 - not low race right get
215:43 - collider which means the soldier is
215:45 - moving to to the right and we have no
215:47 - Collision on the floor to the right if
215:50 - that's the case X direction should
215:54 - be1 the same thing we want to do for the
215:57 - other side I can duplicate all of this
215:59 - and check if x direction is below zero
216:03 - and we have floor Rays left get collider
216:07 - if that is the case X direction should
216:09 - be one once we have
216:11 - that we can call check if and then we
216:16 - should be good to go although to test
216:18 - all of this I want to move this Soldier
216:22 - back up here along with the
216:25 - player and then the soldier should turn
216:29 - around and he does perfect next up then
216:32 - I want to add the animation logic
216:34 - because right now all of this looks a
216:36 - bit weird I want to create a function
216:41 - animate and at least for now I only want
216:44 - to do two things number one
216:46 - I want to get this Sprite 2D and then
216:50 - flip
216:51 - H if we are going to the left because by
216:54 - default this Sprite is going to the
216:57 - right that makes this part really easy I
216:59 - simply want to check if x direction is
217:03 - below zero also I want to call
217:06 - animate and then we can place the
217:10 - soldier on this little
217:12 - platform and make a move left and right
217:15 - this is working really good perfect next
217:19 - up I want to get the animation player
217:23 - and set the current animation to
217:27 - run so if you look at the soldier there
217:30 - we have animation player and we have a
217:33 - run animation in there I suppose we also
217:35 - have an idle animation that we could
217:37 - include in here as well I want to check
217:39 - run but only if we have an X
217:44 - direction if that not the case
217:48 - else the animation should be
217:52 - idle next attempt and now this should be
217:56 - animated which looks a lot better that
217:59 - is some pretty decent progress next up I
218:03 - want the soldier to look out for the
218:05 - player so if the player gets close
218:07 - enough the soldier should start shooting
218:10 - which at the moment simply means that
218:12 - inside of the animation player we want
218:15 - to play the right shooting
218:17 - animation or in other words if the
218:19 - player is to the right of the soldier it
218:21 - should be shoot right if the player is
218:23 - above the soldier it should be shoot up
218:25 - and so on for that inside of soldier. GD
218:30 - I first of all want to add a function
218:33 - called
218:34 - check layer
218:37 - distance this function is going to check
218:40 - if the player is close enough which I
218:44 - want to Define as is closer than 120
218:47 - pixels if that is the case attack should
218:50 - be
218:51 - true and the solder should stop and for
218:55 - now let's add pass in here so gdo stops
218:59 - complaining besides that once the
219:02 - soldier is attacking I also want to
219:05 - update the
219:07 - animations which means after we are
219:10 - flipping the Sprite I want to have an
219:13 - attack animation
219:17 - logic these two parts are going to be
219:19 - your
219:20 - exercise all you have to do is number
219:23 - one check if the soldier is close to the
219:25 - player and if that is the case make the
219:27 - soldier play the correct attack
219:29 - animation pause the video now and see
219:31 - how far you
219:35 - get first of all I want to check the
219:39 - player distance for that I want to check
219:42 - if position do distance two the argument
219:47 - in there is going to be player
219:49 - Doos if the resulting value is
219:53 - below 120 then I want to set a tack to
219:58 - through and to make sure that the
220:00 - soldier is stopping I want to set the
220:02 - speed modifier to
220:05 - zero if that is not the case
220:08 - else we basically want to do the inverse
220:11 - so a tack is going to be false Ander
220:15 - speed speed modifier will be one don't
220:17 - forget to call this one let's do it
220:20 - right before animate I want to check the
220:23 - player
220:25 - distance and then place the soldier
220:29 - roughly here I
220:31 - guess and right now I think the player
220:33 - is close enough so there we go the
220:35 - soldier has stopped and if I go far
220:38 - enough away the soldier does move again
220:41 - but come back and eventually
220:44 - stops well so that's looking good that
220:47 - covers the check player
220:49 - distance next up I want to expand the
220:52 - animate logic if the soldier is
220:57 - attacking then I want to do something
220:59 - else now to get started I want to know
221:02 - what side the player is on relative to
221:05 - the soldier let's say by default the
221:07 - player is to the right that we can
221:10 - already use because I want to get once
221:12 - again the animation player and set the
221:16 - current
221:17 - animation this value should be shoot
221:21 - then
221:22 - underscore and plus the side which at
221:26 - the moment is only ever going to be
221:28 - right after we have that we want to make
221:30 - sure that the function ends there we do
221:33 - not want to call the last line because
221:35 - that would set the animation back to run
221:37 - or
221:38 - idle we get that I simply want to call
221:42 - return and ideally also spell it
221:44 - correctly there we go with that we
221:47 - should already have something so now the
221:50 - soldier is shooting at the
221:52 - player this though only works in One
221:55 - Direction so not amazing yet for that I
221:59 - need to know the positional difference
222:02 - between the soldier and the player which
222:04 - I stored in another variable VAR
222:08 - difference once again we simply want to
222:11 - get the end position so player
222:15 - dot
222:17 - position and from that we're going to
222:19 - subtract the current position or well
222:21 - the start position which is the soldier
222:24 - position itself all of that we want to
222:28 - normalize and then we have a difference
222:30 - so with that in a vector we know if the
222:33 - play is to the left or to the right of
222:35 - the soldier or above or below this we
222:38 - can already use for example Sprite Tod
222:41 - do flip
222:43 - H is going to be
222:45 - the difference dox being smaller than
222:49 - zero that should already cover left and
222:52 - right so now the sold is attacking us
222:54 - and this works left and right next up I
222:58 - want to check if difference
223:01 - doy is smaller than
223:07 - 0.5 and the absolute value of difference
223:12 - dox is smaller than 0
223:16 - or if that is the case the side is going
223:20 - to be up let's try all of this and then
223:24 - I will explain so the soldier can shoot
223:28 - to the right he can shoot up and he can
223:30 - shoot left and also by the way we can
223:32 - jump on the soldier which I think is
223:34 - pretty funny we have the soldier and
223:37 - then we have the player and let's say
223:39 - right now the player is above the
223:41 - soldier that means difference. Y is
223:44 - going to be smaller than 0.5 or in other
223:46 - words if the difference Vector pointing
223:49 - to the player needs to be pointing up
223:52 - and to get to 0.5 we need to be roughly
223:56 - in this cone the second part absolute
224:00 - difference of X is smaller than 0.4 is
224:03 - simply covering basically this side and
224:05 - this side in fact we can duplicate all
224:09 - of this and simply check if difference.
224:12 - Y is greater than 0 .5 and the absolute
224:17 - difference of X being smaller than 0.4
224:19 - can stay the same if that is the case
224:22 - the side should be
224:24 - down and to test all of this let's move
224:27 - this Soldier up by a bit since there's
224:29 - no gravity that's not really a
224:32 - problem and now the soldier is shooting
224:35 - down so that part is working pretty good
224:38 - now I've moved the soldier up just a bit
224:39 - too high so we can't still check up but
224:42 - I think this is going to work although
224:45 - let's move the soldier back down here
224:47 - then everything looks a lot more normal
224:50 - this covers all of the basics of the
224:52 - soldier that means now we can start
224:55 - working on the basic bullet shooting
224:57 - mechanic or rather I want to create a
225:00 - function called trigger uncore a attack
225:05 - for which we basically want to emit a
225:07 - shoot signal so shoot do emit with a
225:12 - position a direction and then the gun
225:15 - that we want to use which we can already
225:17 - do actually for that we have Global dot
225:22 - guns and then AK position and Direction
225:25 - though don't exist right now but that we
225:29 - can work on first of all to get the
225:31 - position and the way you want to think
225:33 - about
225:34 - that imagine that this is once again the
225:37 - soldier and the player is somewhere up
225:40 - here because of that we know the soldier
225:43 - wants to shoot in this direction
225:45 - so that would be our Direction on top of
225:48 - that when we are emitting shoot the
225:50 - position is going to be used for the
225:52 - starting position of the bullet which
225:54 - should be roughly
225:56 - here the position for this one is going
225:58 - to be the center of the soldier plus
226:01 - some kind of distance multiplied by the
226:03 - direction or in other words we want to
226:05 - get the current position of the
226:07 - soldier and then add the direction
226:10 - multiplied by
226:13 - 20 on top of that I want to get a
226:15 - variable Direction which is once again
226:19 - going to be the target position I.E the
226:21 - player.
226:23 - position minus the current
226:26 - position and all of this we want to
226:29 - normalize that way gdo is mostly going
226:32 - to stop complaining the issue now is
226:34 - that shoot. admit does not
226:37 - exist and you could create this signal
226:40 - inside of the soldier so all you would
226:43 - have to do in there is signal
226:45 - shoot which would be possible but also
226:48 - not ideal because I want to have this
226:52 - signal inside of the soldier and inside
226:56 - of the
226:57 - player and later on these two classes
227:00 - should also share a few more things so
227:03 - ideally I want to create the signal
227:06 - inside of the entity which at the moment
227:09 - doesn't have a script and as a reminder
227:11 - entity is the parent class for Soldier
227:13 - and player it's been a while since I
227:16 - talked about that so I want to give
227:18 - entity a script which is then going to
227:22 - contain the signal shoot with a position
227:26 - a direction and a let's call it bullet
227:30 - type however we now have another issue
227:34 - and that is that entity has a script but
227:38 - also inside of soldier and a player we
227:40 - have a script as well and this script is
227:43 - going to overwrite the script inside of
227:45 - the entity meaning this wouldn't really
227:47 - do anything to get around that I want to
227:50 - add a
227:53 - class name and rename this entire thing
227:56 - to
227:58 - entity what this allows us to do is
228:01 - inside of the soldier and the player or
228:04 - to be a bit more specific in their
228:06 - respective scripts instead of extending
228:08 - a character body Tod I want to extend
228:11 - the entity and then we're getting an
228:13 - error right away that me shoot already
228:15 - exists in the parent class which is
228:17 - exactly what I want we can now remove
228:20 - this and we can use this signal from the
228:25 - parent class the same thing I want to do
228:28 - inside of the player script I want to
228:30 - extend
228:32 - entity bya that system we can add quite
228:34 - a few things to The Entity script and
228:37 - reuse them inside of the child
228:39 - scripts which is super handy to create
228:42 - some inheritance systems with the in
228:45 - place we can once again work inside of
228:47 - level. GD there we are already
228:50 - connecting the detonate signal besides
228:54 - that and let's do it before I kind of
228:57 - want to do something very similar so let
228:59 - me copy those two lines I want to check
229:02 - if an entity has a signal shoot and if
229:05 - that is the case I want to connect the
229:07 - shoot signal to create underscore
229:11 - bullet which is a function that doesn't
229:13 - exist at the moment and once again I
229:16 - want to create it before create
229:18 - explosion although the order doesn't
229:20 - really matter FK create underscore
229:24 - explosion for which we will need a
229:26 - position a direction and a bullet
229:30 - underscore type for now let's simply
229:33 - print all three of them I want to have a
229:37 - position I want to have a direction and
229:40 - I want to get the bullet
229:43 - pipe just to make sure are
229:46 - working oh and this should be create
229:50 - bullet let's try all of this so now the
229:55 - soldier can shoot but nothing is
229:58 - happening and that is because inside of
230:01 - the soldier this trigger attack is never
230:05 - called which we have to do inside of the
230:08 - animation player because if I zoom in
230:12 - just a bit we want to create a it when
230:15 - we are on this animation
230:17 - frame which means in my case after 0.1
230:20 - seconds I want to add a all method track
230:25 - to the parent character body Tod scene
230:28 - then I want to add a key on this time
230:31 - and call trigger attack the same thing I
230:34 - want to do for the other sides as well
230:35 - so shoot right should also get a call
230:38 - method track that connects to the
230:40 - soldier then we can add a key that is
230:44 - calling trigger attack and finally shoot
230:47 - up I mean shoot down same thing call
230:51 - method track and the soldier then we
230:55 - want to have insert key with trigger
230:59 - attack if we now try all of this again
231:02 - we're getting trigger attack and the
231:05 - information so with that we know where
231:07 - the bullet should spawn which direction
231:09 - the bullet should go in and what kind of
231:11 - bullet we have that looks really good so
231:14 - this system we also want to apply to the
231:16 - player although first of all inside of
231:19 - the debugger we are getting two issues
231:21 - that Delta and body are not used which
231:25 - we can fix quite easily by adding
231:27 - underscores and then good do should be
231:30 - happy
231:31 - again there we go everything still works
231:33 - just fine so we can continue to the
231:38 - player for which we once again want to
231:43 - look at get input we haven't covered
231:46 - this in a while but in there we're
231:48 - getting all of the player
231:50 - input the one thing we now have to add
231:53 - is let's call it shoot all we need is to
231:57 - check if
231:59 - input is action just
232:03 - rest the action we are looking for is
232:05 - called Shoot if that is the case we do
232:09 - want to do quite a few things so I'm
232:11 - going to add a function shoot gun
232:15 - and then keep all of the logic in there
232:17 - all the way at the bottom function shoot
232:21 - uncore gun now fundamentally all that we
232:24 - want to do in here is get the shoot
232:26 - signal and emit it with a position a
232:32 - direction and then the current gun this
232:36 - we already have from this switch part
232:41 - also I can minimize the input function
232:44 - so we have have a bit more space for
232:46 - every single bullet we have to figure
232:47 - out a position and a direction on top of
232:51 - that if you look at the timers we have a
232:55 - coyote timer a jump buffer and a Dash
232:57 - cool down on top of that I want to add
233:00 - three more timers one for the AK one for
233:03 - the shotgun and one for the rocket
233:05 - launcher they should all have different
233:07 - reload times and this we also want to
233:09 - account for inside of this
233:12 - function I suppose let's go for it one
233:14 - by one
233:15 - first of all I will need another timer
233:18 - let's call it AK reload I can duplicate
233:23 - this because this one is going to be
233:24 - called shotgun reload and finally I want
233:28 - to have rocket reload for all three of
233:32 - those I want to set one short to true
233:35 - that part is really important and then
233:38 - we have to set a wait time and I think
233:40 - this one is best handled inside of the X
233:44 - export group for the gun I want to
233:46 - create an
233:48 - export
233:50 - range variable that goes from 0.2 to
233:56 - 2.0 this one I'm going to call akore
234:00 - cooldown with a default value of the
234:04 - float 0.5 I can duplicate this two times
234:07 - because besides AK we have the shotgun
234:11 - and the rocket cool down for the shotgun
234:13 - I went with 1.2 for the rocket
234:18 - 1.5 if I now comment out the issues we
234:22 - have down here and add pass in there I
234:24 - can save the entire thing and then under
234:27 - gun we're getting a cool down shotgun
234:30 - cool down and Rocket cool down although
234:32 - these values at the moment don't do
234:34 - anything for that inside of ready we
234:36 - need to add a few more things the way
234:39 - you want to approach this you want to
234:40 - get the AK reload and then update the
234:44 - wait time to the AK cool down after that
234:49 - I want to do the same thing for the
234:51 - shotgun so wait time and shotgun cool
234:55 - down finally rocket reload do wait time
235:01 - is going to be rocket cool down way of
235:04 - that we have a couple of timers that we
235:08 - can control from the parent node and
235:10 - that we want to use inside of this shoot
235:13 - gun function and once again I want to
235:15 - get a position and a
235:18 - direction that can only trigger when the
235:21 - timer is not active
235:23 - anymore although first of all I want to
235:25 - get the position in general which is
235:28 - always going to stay the same I want to
235:30 - get the current position of the
235:33 - player and to that I want to add the aim
235:37 - Direction multiplied with the
235:41 - crossair distance that's the same thing
235:44 - we have done for the soldier so we start
235:46 - from the center of the player and then
235:47 - we go a bit outwards in the direction
235:49 - that the player is shooting in although
235:52 - we do need an offset if the player is
235:54 - ducking so I want to update
235:56 - position it should be position itself if
235:59 - the player is not ducking if that is not
236:02 - the case else it should be position
236:06 - plus vect door
236:09 - to with X being zero and Y being the Y
236:13 - of
236:14 - set with that I can get this signal back
236:19 - we have a position and the direction is
236:22 - simply going to be the aim direction to
236:25 - test all of this for now back in the
236:28 - game under station I want to move the
236:31 - player a bit further away from the
236:33 - soldier so we're not getting interfered
236:35 - let's put the player down here and I
236:39 - guess just to be sure the soldier could
236:40 - be all the way over there if I now run
236:44 - all of this and shooting is left
236:46 - clicking on the mouse we are getting
236:49 - different directions and positions and
236:52 - if I switch the gun we are also getting
236:54 - a different gun that's 0 one or two the
236:57 - last value we are getting perfect that
237:00 - means in the most basic sense this part
237:02 - is working that being said though we do
237:06 - have to extend it because we have to
237:08 - include the timers if the current gun is
237:11 - equal to
237:13 - glob Bill do guns do AK and not now I
237:21 - want to get the timers let me simply
237:23 - drag them
237:24 - in inside of the player we have the AK
237:28 - reload timer I only want to emit the
237:31 - signal if there is no time left for this
237:36 - timer if that's the case I want to emit
237:39 - the signal and then get the timer once
237:42 - again let me copy it and then start it
237:47 - with that system I can run the game
237:49 - again and now I can click really fast on
237:51 - the mouse but we are only getting the
237:53 - shoot
237:55 - signal I think twice a second yep the
237:59 - cool down is 0.5
238:01 - seconds next up I can copy the F
238:03 - statement because I want to check if the
238:06 - current gun
238:08 - is rocket and for that I will need to
238:12 - check the rocket
238:15 - reload inside of that if statement I
238:18 - want to emit the same signal but now I
238:22 - want to start the rocket reload timer
238:27 - after that I can copy all of this one
238:29 - more time now we want to check for the
238:32 - shot gun which has its own reload timer
238:37 - shotgun reload we want to emit the same
238:41 - signal but restart the shotgun timer now
238:44 - for the shotgun there are going to be
238:46 - two extra bits number one is going to be
238:50 - a whole bunch of particles I suppose we
238:53 - can do that part right away besides that
238:56 - there should be a shotgun jump if the
238:59 - player is in the air and shoots down
239:02 - with the shotgun then we should get a
239:05 - small extra jump let's start with the
239:08 - particles for that I want to give the
239:12 - player a GPU particles 2D node on which
239:17 - we first of all have to add a process
239:20 - material which needs to be a new
239:22 - particle process material and let me
239:25 - actually work in the 2D space then we
239:27 - can see things a bit better so now we
239:29 - can see that we have a particle process
239:31 - material and this one emits a couple of
239:34 - particles doesn't look good at the
239:37 - moment to make all of this look better
239:39 - first of all I want to add a sprite
239:41 - animation and I already have it open
239:44 - under Graphics guns projectiles we have
239:47 - explosion
239:48 - 2.png this is a very simple explosion
239:52 - animation which I don't want to have as
239:54 - a Sprite I do want to have it though
239:57 - inside of the texture which is going to
240:00 - look a bit weird so at the moment gdau
240:03 - is simply displaying the entire texture
240:06 - which I do not want I want to animate
240:08 - over this thing and for that we have to
240:11 - go to material and then create
240:14 - a canvas item material which doesn't do
240:17 - anything at the moment but in there we
240:19 - can set particles animation and then
240:22 - Define H frames and V frames in this
240:25 - thing you can tell we have 1 2 3 4 5 6
240:30 - 7 H frames so seven and this is looking
240:34 - much better although not perfect yet to
240:38 - actually get the animation you want to
240:40 - look at display and animation and then
240:43 - set a minimum speed and a maximum speed
240:45 - or a curve if I set a minimum speed and
240:49 - make this a bit larger then we are
240:51 - getting something so this might be a bit
240:57 - large so there we get something much
241:00 - more
241:02 - appropriate although once again this
241:04 - needs to be refined first of all under
241:07 - accelerations we have gravity and I want
241:09 - to set the gravity to zero instead I
241:12 - want to go to spawn
241:14 - and then set the spawn
241:16 - velocity or more specifically I want to
241:19 - set the initial velocity which I have
241:21 - set to 200 for the minimum value and for
241:25 - the maximum value I went with
241:28 - 280 which already looks a lot better oh
241:32 - and also you want to set the spread to
241:34 - 45 which I think gives you a nice range
241:38 - for the
241:39 - particles and that is mostly actually
241:41 - what we need for this particle system
241:44 - next up inside of time I want to
241:47 - activate one shot that way we are
241:49 - emitting all of the particles at once
241:52 - now for the lifetime of the particle I
241:54 - want to go with
241:55 - 0.3 and for the explosiveness I have set
241:58 - this to
242:00 - 0.5 that way if I run out of this again
242:04 - we are getting something we can refine
242:06 - this in just a bit but for now we have
242:09 - something that looks at the very least
242:10 - somewhat okay with that inside of the
242:15 - player script as soon as the player is
242:18 - shooting the shotgun I want to display
242:20 - these
242:21 - particles and they also have to go in
242:23 - the right direction I want to get the
242:26 - GPU particles 2D and then set the
242:29 - position the starting position should be
242:32 - the Crosshair dot
242:36 - position next up I have to set the
242:38 - direction so inside of GPU particles if
242:42 - you look at the velocity we can set a
242:44 - direction this value we can access via
242:47 - the GPU particles let me copy it dot
242:51 - process
242:53 - material and then set the direction to
242:58 - the aim Direction finally the last thing
243:01 - that we need is the GPU particles and
243:04 - then emitting should be
243:07 - true with that I can run the game switch
243:11 - to the shotgun and shoot and we are
243:15 - getting something that's not looking too
243:18 - terrible so I think we can only shoot
243:20 - after 1.5 seconds but this overall looks
243:23 - all right I'm quite happy with that as
243:26 - always you can refine these things a lot
243:28 - but for a tutorial I think this is good
243:30 - enough so besides that I want to work on
243:34 - a shotgun jump which basically means if
243:37 - we are shooting with the shotgun and the
243:39 - aim direction is down or in other words
243:41 - if aim direction do Y is equal to
243:46 - 1 you can also add end velocity doy is
243:52 - greater or equal to zero that way we're
243:56 - not going up which sometimes can look a
243:58 - bit weird but I'm not sure if this is
244:00 - really necessary it very much depends on
244:03 - what kind of field you want to have in
244:04 - the game if that is the case I want to
244:07 - set a variable called gun jump to true
244:11 - this gun jump doesn't exist so gdo is
244:13 - going going to complain under the jump
244:15 - export group I want to create VAR gun
244:19 - uncore jump which is going to be a
244:22 - Boolean value that's false by default I
244:25 - suppose we can move this right under
244:27 - jump once we have that we can look at
244:31 - apply movement and then right after jump
244:35 - I want to have the gun jump for which we
244:39 - want to check if gun
244:41 - jump and then set the velocity doy to
244:47 - negative gun uncore jump uncore strength
244:52 - I think I call this one for the jump
244:55 - strength we have that I want to copy
244:58 - this because now we also want to have a
245:01 - gun jump strength which should be a bit
245:03 - weaker let's go with 180 this one looked
245:07 - all right while I was testing things
245:09 - besides that we also have to set gun
245:12 - jump to ball
245:14 - and I want to set faster fall to faults
245:18 - as well let's try out of that now and
245:21 - with the shotgun selected I can shoot
245:24 - down and jump up if I fall we can do the
245:27 - same thing and why I that system I can
245:30 - jump and then get a bit of an extra
245:37 - jump if I try this with any other gun
245:41 - nothing is going to happen also with the
245:43 - shotgun gun if I shoot in another
245:45 - direction we do not get an extra jump so
245:48 - cool this part is also working that
245:51 - means we can minimize apply movement and
245:55 - we have covered shoot gun although this
245:57 - bit of white space was annoying cool
245:59 - that covers the player that means next
246:02 - up we can work on the monster the final
246:06 - enemy for which I want to create another
246:09 - new inherited scene with the parent
246:12 - being entity
246:14 - let's rename this right away to monster
246:17 - and I want to save it under entities
246:20 - there we go now we have a monster after
246:23 - that I want to add a Sprite
246:26 - 2D and then under graphics and entities
246:30 - we have attack.png which I want to drag
246:33 - into the texture and there you can see
246:36 - we have the
246:37 - monster obviously this is an animation
246:40 - so I want to add animation H frames to
246:43 - five also while we are here we should
246:46 - set a collision shape which I have set
246:49 - to a rectangle shape and expand all of
246:53 - this just a bit make it a bit wider and
246:56 - then I can drag the Sprite
246:58 - Tod roughly in this
247:01 - area I think that looks all right not
247:04 - perfect but good enough for our purposes
247:07 - before I forget inside of the monster
247:10 - under collisions this monster should be
247:13 - on on the enemy layer and it can see not
247:16 - the terrain it should actually only see
247:19 - projectiles so layer five later on I
247:23 - want this thing to always be on the
247:24 - right side of the window it shouldn't
247:26 - collide with any
247:28 - terrain you'll see in a second what I
247:30 - mean now besides that for the animations
247:33 - I want to add an animation layer which
247:37 - is going to get three animations so a
247:40 - new animation that I have called idle
247:43 - that's the simplest one I simply want to
247:45 - add a track for the property and then
247:48 - the Sprite
247:50 - 2D specifically the
247:53 - frame and the key for this one is going
247:56 - to be zero and that's it that's all we
248:00 - need for idle then I want to duplicate
248:03 - this animation to get a tack let's zoom
248:07 - in just a bit and I want to go through
248:10 - the attack
248:11 - animation for that I can have this
248:14 - bright Dy selected I want to go from
248:17 - zero to one then at two I want to get
248:22 - the second key then number three and
248:25 - four and five with that we are
248:29 - getting a very basic
248:32 - animation on top of that I want to go
248:35 - back to the idle state which means I can
248:38 - add another key with the value three and
248:42 - then on on second
248:45 - 0.7 at a final
248:48 - key with the frame zero that way I can
248:51 - play this thing in Loop and we are
248:54 - getting an attack animation that looks
248:56 - pretty all right so if you're following
248:59 - along the frames for all of this are
249:01 - going to be 0 1 2 3 and
249:06 - four after which we have a short break
249:09 - and then we go to three and zero later
249:13 - on we are also going to have a death
249:15 - animation but that's not too important
249:17 - for now next up I want to add two timers
249:21 - so add a timer note I want to have an
249:26 - pack timer and I want to have a move
249:30 - timer both of these timers should be one
249:33 - shot and auto start that's pretty
249:36 - important and to use them we have to
249:39 - give the monster a script and you might
249:41 - be confused at this point because
249:43 - because well we already have a script
249:46 - that's the one we're getting from
249:47 - entities and that's not the one that we
249:49 - want to use so on this monster I'm going
249:52 - to remove this script currently attached
249:54 - and then add a new one we can call this
249:57 - one monster that's totally fine and
250:00 - importantly we want to inherit from
250:02 - entity like we have done before for the
250:04 - player and the soldier once we have that
250:07 - we can connect the attack timer and the
250:11 - move timer
250:13 - via very simple
250:15 - signals that's a good setup and I
250:18 - suppose before we continue let's test
250:21 - all of this for that I don't need the
250:25 - station the soldier or the player and
250:28 - instead I want to open the sky scene the
250:32 - monster should only be inside of this
250:34 - scene and it should live inside of
250:37 - entities so in there I want to add the
250:40 - monster and then place it in a position
250:42 - where we can see it right away I guess
250:44 - we can do it here and then move the
250:46 - player up there as well if I now run
250:49 - only this
250:52 - scene we can see the monster and that
250:55 - looks all right we also get collisions
250:58 - so cool good start next up we have to
251:01 - add some movement and the system I want
251:03 - to have if this is the window we always
251:08 - have the player roughly in the center
251:10 - the monster should be on the right side
251:13 - of the
251:14 - window meaning the right border of the
251:17 - monster is never visible which I guess
251:19 - generally is a good idea because if you
251:21 - look at it the right side simply doesn't
251:24 - have anything to get all of that first
251:27 - of all we will need on ready VAR layer
251:32 - with get uncore 3 and
251:36 - get first note in group layer this we
251:41 - can already use to set the white
251:42 - position of the monster which I want to
251:45 - do inside of
251:46 - funcore
251:48 - process all I want to do in here is
251:51 - position doy is player.
251:56 - position. if I now run dis skuy
252:00 - scene the monster is always in the same
252:04 - white position so that is working pretty
252:07 - well and later on I want to have
252:10 - something like this where the monster is
252:12 - always on the right side
252:13 - and then it's going to attack us and
252:16 - also move along the
252:19 - xais now for that we have a bit of a
252:22 - problem because ultimately I want to set
252:25 - the exposition of the monster or rather
252:28 - position dot X do something like ler
252:33 - doos
252:35 - dox and then plus let's say 50 pixels if
252:39 - I now run dis Sky scene we're getting
252:42 - the monster
252:44 - that is to the right of the player that
252:47 - is a reasonable start but I want the
252:49 - monster to be on the right border and
252:52 - for that I have to figure out the camera
252:55 - size or in other words if you look at
252:58 - the scene I want to get this camera
253:01 - bounding box from that I can tell how
253:05 - far away the monster needs to be from
253:06 - the
253:08 - player and to get that back inside of
253:10 - the script I want to get
253:14 - on ready V player camera which we are
253:19 - going to get via player. getor cam which
253:23 - does not exist at the moment for that
253:26 - inside of the player I want to create a
253:30 - function getor camera no need for
253:33 - parameters all we want to do in here is
253:35 - to return the camera 2D note I suppose
253:41 - alternatively inside of the monster you
253:44 - could have also simply gotten the camera
253:45 - in here more directly but a system like
253:48 - this allows you inside of the player to
253:50 - add some extra logic if you have to so
253:53 - if you have a fancy camera setup this
253:55 - might be better next up I want to get
253:58 - the camera size which has to happen on
254:01 - ready as well bar camore size and then
254:05 - we want to get the
254:07 - player camera along with get viewport
254:13 - rectangle this is going to give us a
254:15 - position and a rectangle of the camera
254:18 - on which we only care about the size and
254:22 - on this we only care about the
254:24 - horizontal dimension on top of that this
254:27 - value we want to divide by the player
254:31 - camera once again because the player has
254:34 - a zoom level in our case Zoom dox so the
254:39 - way you want to think about all of this
254:42 - if you have a camera for that let's open
254:44 - the
254:46 - layer inside of a camera
254:49 - 2D you are getting some kind of
254:52 - rectangle that has a position but this
254:55 - position is affected by the zoom level
254:58 - so if you want to have the accurate size
254:59 - of a camera rectangle you need to do
255:02 - something like this where you get the
255:03 - size and divide it by the zoom level
255:06 - once you have that we can add the cam
255:09 - size divided by two to the player X
255:12 - position
255:13 - and now I can run this Sky
255:17 - scene and we're getting the monster on
255:20 - the right side of the window although we
255:23 - might want to subtract a very small
255:25 - amount from that for example to this
255:27 - value you could add
255:30 - -20 and then if you try all of this
255:33 - again this looks a bit better let's go
255:36 - with
255:39 - ne10 and yeah this looks all right cool
255:43 - so with that we have a very crude
255:45 - position but this isn't ideal yet
255:48 - because well the monster is always in
255:51 - the static position which gets to look a
255:53 - bit weird quite
255:55 - fast this we have to update quite a bit
255:59 - and first of all inside of process I
256:02 - want to refine things just a bit first
256:05 - of all I want to keep the exposition in
256:08 - a separate
256:09 - variable so we can simply get all of
256:13 - this positionx we can get rid of for now
256:17 - first of all I want to limit the X
256:20 - position via a Max function where we are
256:23 - getting limits do
256:26 - X and then a minimum function with
256:31 - limits do y and the actual Exposition so
256:36 - this is going to look a bit weird most
256:38 - importantly because we don't have limits
256:41 - yet that we can create all the way at
256:43 - the top export VAR
256:47 - limits which is going to be a vector to
256:51 - integer the way I want to use this one
256:54 - inside of the monster scene the way I
256:57 - want to use it is for a minimum and a
257:00 - maximum position so X and Y doesn't
257:03 - really apply here but when you are
257:06 - looking at this line we are picking the
257:10 - larger of two values and if this value
257:13 - is zero then we can never go below that
257:16 - value same with minimum if our limits Y
257:19 - is 100 then we can never go beyond that
257:22 - value overall combining these two allows
257:25 - us to clam something within a certain
257:28 - range and then to use it inside of the
257:31 - sky scene you basically want to look via
257:35 - the ruler how far the monster can go
257:38 - let's say the monster can only go up to
257:40 - this point I suppose 50 pi pixels works
257:44 - with that for the monster we can set the
257:46 - x position to 50 and the maximum
257:49 - position for now to 200 that's the basic
257:53 - idea although for that to work inside of
257:55 - the monster we have to actually use this
257:58 - x position I want to create another
258:01 - variable first of all for y and then at
258:04 - the end set the position to
258:09 - Vector 2 X and Y if I now run all of
258:14 - this the monster is not moving at all
258:19 - which I think is because of this line
258:21 - most likely because the limits are too
258:23 - narrow let's set the maximum one to
258:27 - [Music]
258:28 - 1,000 and then at the very least we
258:32 - should be going in one direction that
258:34 - looks much better so now at some point
258:37 - the monster is going to stop right at
258:39 - the
258:39 - end and if I go to the left
258:43 - it should also stop and here somewhere
258:46 - although we might need a larger value
258:49 - let's try
258:51 - 200 next
258:55 - attempt I can now go to the left and at
258:58 - some point the monster
258:59 - disappears so that part is also working
259:03 - that way once the player enters the
259:05 - scene we can't see this monster
259:08 - immediately and I suppose the maximum
259:10 - value should be just a bit larger 1,100
259:13 - 100 next up the monster at the moment is
259:16 - always in the same wi position as the
259:18 - player which isn't ideal to make this a
259:22 - bit more interactive I want to add three
259:26 - more variables bar Yore
259:30 - range which is going to be a vector two
259:35 - with some kind of range let's go with 50
259:38 - and
259:39 - 50 besides that I want to have VAR Yore
259:45 - offset which needs to be some kind of
259:47 - floating point value and finally I want
259:50 - to have VAR Direction actually this one
259:54 - we don't need you're going to see in a
259:56 - second why we only need y range and Y
260:00 - offset essentially when we are setting
260:03 - the Y position of the monster I want to
260:06 - be on the same position for y as the
260:08 - player but then potentially add a y of
260:12 - set which we are getting whenever on
260:16 - move timer timeout times out in there I
260:19 - want to create a
260:22 - wi and let me hide everything else so we
260:26 - have a bit more space so as always I
260:29 - want to create a tween and then tween a
260:34 - proper key the object we want to work on
260:37 - is self and the property path will be
260:41 - yore
260:43 - offset after that we want to get a
260:46 - random value from inside of the
260:50 - range which means we will need a random
260:52 - number generator that we don't have at
260:54 - the moment for that at the
260:57 - top and let me comment out this line so
261:00 - goo stops complaining I want to have a
261:03 - VAR random number generator which we can
261:06 - create via a random number generator do
261:09 - new that's all we need now I can
261:12 - uncommon this line and use
261:15 - rng. randf
261:18 - range for which I will need a minimum
261:20 - value and the maximum value the minimum
261:23 - value will be y range
261:25 - dox and the maximum value will be y
261:29 - range.
261:30 - y finally we will need a time or
261:34 - duration let's go with 0.6 this should
261:37 - already do something if I now Run the
261:40 - game
261:43 - we're getting some movement after 1
261:45 - second and that's about it to run all of
261:50 - this again I want to get a tween and a
261:53 - tween call back for which we simply want
261:56 - to get the move timer and start the
262:01 - entire thing make sure not to call it if
262:04 - I now run out of this
262:07 - again we're getting a movement and this
262:10 - movement keeps on running
262:13 - so now we have a monster that updates
262:18 - its y position although we always stick
262:21 - somewhat close to the player that is
262:23 - because we are only adding a fairly
262:25 - small offset that always adds a value to
262:29 - the player wi position that way the
262:31 - monster can never get too far away from
262:32 - the player that covers the movement next
262:36 - up I want to work on the attack timer
262:39 - timeout if this timer triggers I want to
262:42 - get the animation player and set the
262:45 - current animation to a attack let's try
262:49 - this one
262:52 - and we are getting the attack animation
262:56 - I want to get the attack timer once
262:59 - again and set a random weight time to
263:02 - make the attacks feel a bit more organic
263:05 - for that RNG once again Rand F range
263:09 - with a value of 0.5 for the minimum and
263:13 - 2.0 for the maximum also this should be
263:16 - Rand F range finally once we're done
263:19 - with all of this I want to get the
263:22 - attack timer once again and start it all
263:24 - over again so with that we should have
263:28 - more organic attacks although I think
263:30 - something is
263:31 - missing if you look at the monster this
263:34 - doesn't look right we always have the
263:36 - same attack
263:38 - interval that is
263:40 - because if we look at at the monster
263:43 - animation
263:46 - player we only ever have the attack
263:48 - animation and this one is
263:51 - looping and since we simply go to this
263:54 - one it never stops and well we get the
263:57 - same outcome so what we want to do after
264:00 - this animation is done we want to go
264:03 - back to the idle state for that I want
264:06 - to create a number function let's do it
264:08 - below the move timer signals bunk return
264:12 - to
264:14 - idle all we want to do in there is get
264:17 - the current animation and set it to
264:20 - idle then save the scene and inside of
264:24 - the attack animation add another track
264:26 - or call method go to Monster and then at
264:31 - the end of this animation well return to
264:34 - Idol and now select the sky scene and
264:37 - run the entire
264:39 - thing we should get only attacks in
264:44 - certain
264:45 - intervals and that feels much more
264:48 - organic so now we don't attack
264:50 - constantly
264:52 - anymore that means we can minimize
264:54 - return to Idol and we also covered the
264:57 - attack time at timeout next up then we
265:01 - have to add the logic to actually shoot
265:02 - bullets the basic idea for the monster
265:05 - if I go back to the scene is that we
265:09 - going to define a couple of points in
265:11 - front of the monster and as soon as the
265:13 - monster is attacking we are shooting
265:15 - bullets from these points for that first
265:18 - of all inside of the monster I want to
265:22 - add another node which can be a node
265:26 - 2D that I have
265:28 - called bullet
265:31 - options in there I am going to add a
265:34 - couple of children the first one is
265:36 - another note 2D called zero in which we
265:41 - are going to add a marker 2D node which
265:45 - I want to move to another position let's
265:47 - move it right in front of the monster
265:50 - maybe a bit closer so in a bit we are
265:54 - going to add a few more children and
265:56 - then select them at random if we are
265:58 - selecting this first one we are looking
266:00 - at this marker and shoot a bullet from
266:03 - this point besides that I can duplicate
266:05 - all of this and then move the marker
266:09 - let's say here duplicate it and move it
266:12 - down there or in other words if we
266:14 - select this child we are shooting a
266:17 - bullet from these two
266:19 - markers I guess we can add a third one
266:21 - just to make it look a bit prettier so
266:24 - we have one in the middle as
266:27 - well finally we can duplicate all of
266:29 - this one more time because now I want to
266:32 - have and let me hide the other
266:35 - children I want to have a marker up
266:38 - there I want to have a marker down here
266:41 - the next marker should be roughly here
266:44 - which I want to duplicate and then have
266:46 - another one down here I hope all of that
266:48 - still makes sense we basically have a
266:51 - couple of children that contain a bunch
266:53 - of markers and those would be our bullet
266:55 - starting positions back in the script I
266:58 - want to create I suppose we can do it a
267:02 - both return to Idol bunk riger uncore
267:07 - attack for which first of all we want to
267:10 - pick one of the bullet option starting
267:13 - positions which I have called optionor
267:17 - index all we need in here is the random
267:19 - number generator and then Rand I range
267:23 - we want to create integers within a
267:25 - certain range the starting point is
267:28 - always going to be zero and the final
267:30 - value will be the bullet options. get
267:35 - child
267:37 - count minus one let me add a bit more
267:41 - space and with that we're getting a
267:43 - random number to pick one of the
267:45 - starting
267:46 - positions via that we can get this
267:50 - selected let's simply call it
267:53 - selected for that I want to get the
267:55 - bullet options and then get
267:59 - child with the option index after that I
268:05 - simply want to get for marker in
268:08 - selected. getch
268:12 - and finally I can call shoot. emit with
268:16 - the position Direction and The Gun type
268:21 - the position is super easy we simply
268:23 - want to have
268:25 - marker. Global
268:27 - position for the direction the bullets
268:30 - should always go Vector 2. left finally
268:35 - for the gun type I want to get globals
268:39 - do guns. AK and I believe I called This
268:43 - Global there we go so with that we are
268:47 - emitting a signal for every single
268:49 - position when we are calling trigger
268:51 - attack although for that we have to
268:55 - figure out when to call trigger attack
268:57 - which once again happens inside of the
269:00 - attack
269:02 - animation we already have a call method
269:05 - track and I want to call trigger attack
269:08 - when we get to this point so in there at
269:11 - a another key with trigger attack which
269:14 - doesn't exist because I didn't save the
269:17 - script save it and then it should show
269:19 - up inside of the animation player so
269:22 - void trigger attack and there we go with
269:26 - that if I now run the sky scene the
269:31 - monster can attack and we're getting a
269:33 - bunch of positions that looks really
269:36 - good so with that we have trigger attack
269:39 - and that means we have a whole bunch of
269:42 - entities that can shoot bullets so next
269:45 - up we can work on the actual bullets so
269:48 - at this point we have all of the
269:49 - entities and every single one of them
269:51 - has a signal to shoot a bullet we can
269:54 - actually create a bullet class that
269:55 - takes care of all of the logic and for
269:58 - that back on Gau I want to create a new
270:01 - scene for which I want to use an area 2D
270:06 - which is going to need a
270:09 - Sprite and a collision AP at least for
270:13 - now and so that we have something I want
270:15 - to go to guns and projectiles there we
270:18 - have default.png which I want to drag
270:21 - into this Sprite B and then we can see a
270:28 - very small bullet while we are here we
270:30 - can also add the shape I think a capsule
270:33 - shape would work
270:35 - best something like this and under
270:39 - transform we have to rotate the shape by
270:42 - ° to something like this also before we
270:45 - continue I have realized that the
270:47 - debugger is unhappy with us because of
270:51 - Delta not being used so there should be
270:53 - an underscore also I want to rename area
270:56 - Tod
270:58 - bullet and then we can save all of this
271:01 - under projectiles and
271:03 - bullet and now if I run the entire thing
271:08 - everything is working all right perfect
271:11 - so now we have we have a bullet and this
271:13 - bullet is going to need a script we can
271:16 - keep the default name that's totally
271:17 - fine and in here fundamentally we simply
271:21 - want to move the bullet in the direction
271:24 - but I think we should go step by step
271:26 - first of
271:27 - all when any of the entities is shooting
271:31 - a bullet we are emitting the shoot
271:33 - signal that we are capturing inside of
271:36 - the level which means when we are
271:39 - creating a bullet I want to actually
271:41 - create a bullet
271:42 - and for that first of all like we have
271:44 - done for the explosion I want to create
271:46 - a const bullet
271:49 - scene which needs to be a scene so we
271:52 - want to preload the
271:55 - bullet do TSN once we have that when we
271:59 - are running create bullet I want to
272:01 - create a bullet from the bullet scene
272:06 - via
272:07 - instantiate after we have that I want to
272:10 - get the projectiles and add a child like
272:12 - we have done for the explosion let me
272:14 - copy it and instead add the
272:17 - bullet that should already work if I now
272:20 - Run the
272:21 - game I can shoot and nothing
272:27 - happens although I think if you look at
272:32 - remote under station and Main
272:37 - projectiles we have a whole bunch of
272:39 - bullets the issue is in inside of the
272:42 - game we are not updating the position of
272:44 - the bullet so they are always in the top
272:46 - left to fix that I simply want to get
272:49 - the bullet and update the position to
272:52 - the position that we are getting from
272:54 - the
272:55 - parameters if I now try all of this I
272:58 - can shoot and we are getting a bullet
273:02 - looking good also if
273:05 - I go and find this
273:10 - Soldier he can also shoot a bullet
273:12 - although there we have a bit of an issue
273:14 - that the soldier turns around once he
273:17 - collides with a bullet so not amazing
273:20 - that we can fix right away because at
273:21 - the moment the bullets are inside of
273:24 - terrain they should instead be on
273:27 - projectiles and can see the terrain the
273:30 - player and the enemies also when we are
273:34 - creating a bullet I want to pass in the
273:36 - position Direction and gun type that we
273:39 - are getting from the level in other
273:41 - words
273:42 - these three arguments need to get into
273:44 - the bullet and the best way of doing
273:47 - that I find was by running a setup
273:49 - method with position Direction and The
273:52 - Bullet type for that to work inside of
273:56 - the bullet we will need Funk setup with
273:59 - position Direction and The Bullet type
274:02 - first of all in there we want to update
274:04 - the position of this note and set it to
274:07 - the
274:08 - position next up for the direction
274:12 - inside of this class VAR Direction I
274:15 - want to have a vector two and the
274:18 - direction we are getting from setup is
274:19 - going to overwrite that value or in
274:21 - other words
274:23 - direction is going to be here the bullet
274:26 - type we don't need for now so let me at
274:29 - an underscore and after that I want to
274:31 - have Funk underscore process in which we
274:35 - are going to move the area to D by
274:38 - updating the position and all we have to
274:41 - do is plus equal direction times some
274:44 - kind of speed which doesn't exist at the
274:47 - moment so let's go with 100 instead we
274:50 - fix that part in just a second if I now
274:53 - run all of this I can shoot and we're
274:56 - getting an error that setup doesn't
274:58 - exist inside of the position and that's
275:00 - easy to fix this should be bullet. setup
275:02 - not bullet. position. setup next attempt
275:07 - and now the bullets are moving but
275:10 - they're moving way too fast
275:12 - that is because inside of the bullet we
275:14 - are not adding
275:17 - Delta so next attempt and now the
275:21 - bullets work but they're also working
275:24 - very very slowly and you can also tell
275:26 - that if we are shooting diagonally
275:28 - they're moving much
275:29 - faster that is because the direction was
275:32 - not normalized very easy to fix we when
275:35 - we getting the direction want to get the
275:38 - normalized
275:39 - direction so that should give us a
275:42 - constant speed and it does perfect
275:46 - besides that I want to change up the
275:48 - images depending on what gun we have so
275:51 - if we have an AK or the default then we
275:54 - want to have default.png the one we
275:56 - already have but if we're shooting a
275:58 - rocket I want to have large dot PNG and
276:01 - if we're using a shotgun there shouldn't
276:03 - be any visible bullet because we already
276:05 - have the particle effect I want to check
276:08 - if the type of the gun the one we have
276:11 - added an underscore to just a second
276:14 - ago if that one is in global. guns. AK
276:21 - or global. guns let me copy it do rocket
276:27 - if that is the case I want to update
276:29 - this bright 2D do
276:33 - texture and assign it a new texture now
276:36 - for that inside of global I want to set
276:40 - a General gun data dictionary
276:42 - so we don't have to set everything
276:43 - manually this gun data dictionary you
276:46 - can find inside of tutorial data in
276:48 - there we have gun data and this is what
276:51 - I want to use if you simply uncommented
276:53 - you are going to get an error because we
276:55 - do not have guns inside of this script
276:58 - but if you copy it into Global then it
277:01 - should be working because now we have
277:03 - the enum
277:04 - guns and all we are doing in here is for
277:07 - each of the guns for example for AK we
277:10 - have damage speed and a texture that we
277:13 - are preloading which means I can save
277:15 - the script and go back to Bullet in
277:18 - there I want to get Global gun data the
277:22 - current type of the gun and then get the
277:26 - texture besides that I can also create a
277:29 - speed and a damage for this bullet
277:32 - although for that first of all I want to
277:34 - create two more
277:36 - variables speed and bar damage
277:41 - speed needs to be some kind of integer
277:44 - and the same for damage after that for
277:47 - the speed I want to have Global gun data
277:50 - type and speed while for the damage I'm
277:54 - going to do the same thing except for
277:56 - the damage if you look at global. GD
277:59 - there we always have damage and speed
278:02 - except for the shotgun that means if I
278:05 - now run all of this if I shoot the AK we
278:08 - have a small bullet if I shoot the
278:10 - rocket we have a larger bullet although
278:13 - the speed we are not using yet because
278:15 - inside of process we always have 100
278:18 - this should be speed next attempt and
278:21 - now this feels much better also if I use
278:26 - the rocket this thing moves
278:28 - slower very good also what I want to do
278:31 - in
278:32 - here if we're shooting a rocket the
278:34 - bullet needs to be explosive which I
278:37 - want to store inside of another variable
278:40 - which is going to get a Boolean value
278:42 - that by default is false and then we
278:45 - want to set explosive to the gun type
278:50 - being equal to global. guns do rocket if
278:57 - we have a rocket this value will be true
278:59 - if we have an AK it will be false and
279:02 - just to make sure we are implementing
279:03 - all of this I want to check if this
279:05 - bullet is colliding with any so with the
279:08 - area Tod selected I want to check if we
279:11 - have body
279:12 - entered if that is the case I want to
279:16 - get detonate and emit the signal along
279:20 - with a position now this detonate signal
279:23 - doesn't exist so at the top I want to
279:25 - have a signal called detonate with a
279:28 - position that needs to be a vector two
279:31 - the same thing that we have done inside
279:33 - of the Drone in fact you could create a
279:36 - parent class for the Drone and the
279:39 - bullet
279:41 - because those two share quite a few
279:44 - things but that might be a bit of an
279:46 - overkill for such a simple game but for
279:48 - a more complex one it would make sense
279:51 - anyway now inside of the bullet we have
279:54 - detonate which we want to emit along
279:57 - with a position which should be the
279:59 - current position of the node and after
280:02 - we have done that I want to run Q3 the
280:05 - only thing we now have to do is inside
280:07 - of the level when we are creating a
280:09 - bullet we have to connect the signal or
280:12 - in other words if the
280:15 - bullet type is equal to global.
280:20 - guns. Rocket then we want to get the
280:24 - bullet and connect this signal we have
280:27 - already done this before so I want to
280:30 - get the detonate signal and connect it
280:33 - to create explosion although make sure
280:36 - not to call it we only want to pass in
280:38 - the function if I now try all of this in
280:42 - the game I can select the rocket
280:44 - launcher and shoot at things this is
280:46 - working and if I go up I think to the
280:50 - right we have the
280:51 - Drone let me try to hit
280:55 - it and this also works we are getting
280:58 - the same explosion
281:01 - perfect besides that the debugger is
281:04 - unhappy with me because we are not using
281:07 - the body on body
281:09 - entered we are going to to do that later
281:12 - but for now I want to keep the debugger
281:14 - happy so with that we have two of the
281:18 - bullets besides that I want to check for
281:21 - the shotgun which is inside of else in
281:24 - other words the type is not in AK or
281:27 - rocket it can only be the shotgun if
281:30 - that is the case I want to basically
281:33 - disable the bullet entirely or in other
281:35 - words I want to get rid of the Collision
281:37 - shape 2D or at the very least set it to
281:40 - disabled
281:43 - and I want to hide this bright 2D let's
281:48 - try that part if I now select the
281:51 - shotgun we are only getting the
281:54 - particles cool that's working nearly
281:57 - done there are just two more things that
281:59 - I want to do number one inside of the
282:02 - bullet I do want to add a timer which I
282:06 - have called kill timer the basic idea is
282:10 - that if the bullet exists for too long
282:12 - we want to destroy it that way if for
282:15 - example we are in the sky level and the
282:18 - player shoots up the bullet might go on
282:20 - forever and never stops existing or in
282:23 - other words at the moment bullets only
282:25 - disappear once they collide with
282:27 - anything in the terrain but if that
282:29 - doesn't happen they might never
282:32 - disappear so to work on that I simply
282:34 - want to add a timer that every bullet
282:36 - disappears after 10 seconds just to be
282:39 - sure which means I want to connect a
282:44 - signal and once this timer runs out then
282:47 - I want to call
282:49 - Q3 after that inside of the timer I want
282:52 - to set auto start and one shot to
282:54 - through and for the wait time let's go
282:56 - with 10 seconds that should already work
282:59 - besides that I want to add a point light
283:03 - and for now let me simply hide it so if
283:06 - I am running the game and I shoot a
283:08 - bullet the bullet might be a bit hard to
283:10 - see and adding a light to it might make
283:13 - it more visible although this part you
283:15 - don't have to do for dis bullet I want
283:18 - to go to lights and then use
283:21 - main.png drag it into the texture and
283:24 - this is going to be way too
283:26 - large so we want to set the texture
283:28 - scale to something much more reasonable
283:32 - let's say
283:33 - 0.1 actually
283:36 - 0.05 obviously play around with this and
283:39 - the strength could also be a bit lower
283:41 - or if I now try this one and I shoot a
283:45 - bullet they are much more visible
283:47 - although at this point if I shoot with
283:49 - the
283:50 - shotgun there is going to be a very Fain
283:54 - light effect
283:57 - somewhere which means when we are
283:59 - shooting with a shotgun I also want to
284:01 - hide the light or in other words I want
284:03 - to get the point light Tod and hide it
284:06 - with that we can shoot a bullet also if
284:11 - I go to the sky scene and run this one
284:15 - this enemy should also be shooting
284:16 - bullets and that is looking pretty
284:18 - good they also disappear once they
284:20 - collide with the player we are making
284:23 - progress cool that means next up I want
284:27 - to implement the actual hit mechanic
284:30 - which is simply going to be a function
284:32 - inside of entity in there I want to
284:35 - create function
284:37 - hit along with the damage for now if
284:41 - that is the case I want to print the
284:43 - note itself and then the amount of
284:46 - damage that we should be receiving this
284:49 - function I want to call as soon as a
284:51 - bullet is colliding with this body in
284:53 - other words when the bullet or this area
284:57 - Tod is colliding with a body then we
284:59 - want to call hit on this body although
285:02 - that we only want to do if it exists
285:07 - inside of this body if that is the case
285:10 - Body Dot
285:11 - it along with the damage of the bullet
285:15 - now to test all of this I want to reopen
285:17 - this station scene and then move the
285:20 - opponent somewhere down here after that
285:23 - we can try the scene and shoot at the
285:27 - enemy and we're getting Soldier or
285:29 - player along with the
285:31 - damage that's already working pretty
285:34 - well once we have that there are three
285:36 - things that we need to do number one is
285:39 - actual health so that all of the
285:41 - entities have some amount of health and
285:42 - that amount of Health gets reduced
285:44 - whenever we get hit by a bullet and if
285:47 - the health reaches zero then we die
285:50 - besides that I want to create a hit
285:53 - Shader so that the entity flashes in
285:56 - white once we get hit and finally I want
285:59 - to have an invol
286:01 - timer so that after every single hit we
286:04 - are invulnerable for a very short amount
286:06 - of time so if we get hit five times at
286:08 - once we don't die immediately that would
286:10 - be a a bit annoying I suppose the health
286:13 - part is the easiest bit because for that
286:16 - inside of entity we simply have to
286:18 - create a variable called Health which
286:21 - always is going to be an integer and
286:24 - let's say a default value of a 100 after
286:27 - that inside of the hit function I want
286:29 - to reduce Health by the amount of damage
286:32 - that we are getting so Health minus
286:33 - equal damage once we have that after the
286:36 - health goes below or equal to zero we
286:38 - want to call the function which we can
286:41 - set once again via a set
286:43 - function which always wants the value
286:46 - that we are receiving and then we want
286:48 - to overwrite the health value with the
286:52 - value we are getting besides that I can
286:54 - check if health is smaller than or equal
286:58 - to zero if that is the case I want to
287:01 - trigger death which doesn't exist at the
287:04 - moment so Funk
287:07 - trigger death but now let's simply print
287:11 - F so we have something and for testing
287:14 - purposes after any entity got hit I want
287:16 - to print the health
287:19 - amount let's try all of that I can now
287:22 - shoot at the soldier and let me do it
287:26 - like this so we only get one output if
287:28 - you look at the output we are getting
287:30 - Health being reduced and at some point
287:32 - we getting death and zero we don't have
287:34 - the actual logic but the important part
287:36 - is in place and also we don't need the
287:39 - print statement anymore
287:41 - instead inside of the entity under
287:45 - timers I want to create one more timer
287:49 - that I have called the invol timer which
287:52 - is going to get a one shot and a
287:54 - duration of
287:56 - 0.4 so the issue at the moment is that
287:59 - this health is going to get reduced as
288:01 - soon as the player is hit or as soon as
288:03 - any entity is hit and this works fine
288:06 - however if we are going to the station
288:09 - and the player for example C with a saw
288:12 - which should also trigger the hit method
288:14 - and if we don't add an invol timer the
288:16 - saw is going to hit the player on every
288:18 - single frame of the game which means the
288:20 - player is guaranteed to be dead within
288:22 - like 10 frames and to avoid that we want
288:25 - to use the invol timer and to use it we
288:27 - don't even need a signal all we have to
288:30 - do is check if
288:33 - not invol
288:35 - timer.
288:36 - time
288:39 - left only if that is the case
288:41 - do we want to update the health and
288:43 - whenever we do update it we once again
288:46 - want to get the inval timer and then
288:49 - start it and to actually test it we have
288:52 - to look at the saw again so let me open
288:55 - saw we already checking if a body has
288:59 - entered the saw this we now want to use
289:03 - all we have to do is get the body and
289:05 - then call hit with some amount of damage
289:09 - let's say 10 for this one
289:12 - and just to be extra sure I still want
289:14 - to check if it is in the body and only
289:19 - then do I want to call the
289:21 - method and with that let's go to the
289:24 - station and move the player into the
289:27 - right spot so in here oh and also once
289:32 - any entity gets hit I want to print the
289:37 - damage let's try out of this now and and
289:42 - player should get hit and there we go so
289:45 - now the player only gets hit once but if
289:48 - we didn't do that and simply printed
289:50 - something let's say damage when there's
289:54 - contact if I now run all of this we are
289:58 - getting hit oh still only once oh and I
290:02 - realize why because inside of gdau for
290:05 - on body entered this only triggers once
290:08 - when the body is entering the shape
290:10 - which which I guess is another nice
290:11 - Safeguard so we didn't really have to
290:14 - worry about a timer but it's generally a
290:16 - good idea with that we have the invol
290:19 - timer and we have a start for the health
290:22 - next up I want to work on a hit Shader
290:25 - that way once an entity gets hit it
290:27 - flashes white for a short amount of time
290:29 - and for that first of all we have to
290:31 - create the Shader which we have to do in
290:35 - one of the entity scenes let's do it for
290:38 - the monster inside of sprite 2D
290:41 - I want to go to material and then create
290:44 - a new Shader material and for that we
290:46 - don't need the animation player inside
290:49 - of this material I want to create a new
290:52 - Shader and I want to use a visual Shader
290:56 - although for the name I do not want to
290:58 - call this monster. tress instead I want
291:02 - to call this Shader flash because we are
291:04 - going to reuse it also I want to save it
291:08 - not in entities instead I want to create
291:11 - a new folder called
291:13 - shaders in there we have the flash
291:16 - Shader and now I can create
291:19 - it in there we have let me reorganize
291:23 - all of this a bit fundamentally we only
291:26 - want to update the color for which we
291:28 - can create a color
291:31 - parameter that I want to rename simply
291:33 - to
291:35 - color and I think for this one we can
291:37 - also set a default value of white this I
291:41 - want to connect to the color and then we
291:42 - are already getting a silhouette this we
291:45 - want to be able to mix with the original
291:47 - color of the texture which means besides
291:50 - that I want to get the original texture
291:54 - which I can get via the texture this
291:57 - will contain the original color
291:59 - information and to read it I will need a
292:02 - texture
292:04 - 2D and let me zoom out a bit actually
292:07 - let me full screen all of this
292:14 - I want to place the texture into the
292:16 - sampl 2D Port then G is going to
292:19 - complain that this should be a sampler
292:21 - Port there we go now gdo is happy and by
292:25 - default we are already getting the UV so
292:27 - this we don't have to worry about as an
292:29 - output we are now getting a vector 4
292:31 - that we want to mix with this color and
292:35 - for that we can use a mix function and
292:37 - make sure you're getting Vector four we
292:39 - want to get the first value and then the
292:42 - second value and the output is going to
292:45 - be our actual color that should already
292:47 - give us some of the original color back
292:50 - because right now the weight is at 0.5
292:54 - so we are getting 50% of this color and
292:57 - 50% of the new color to control this
293:00 - weight I want to add a float
293:04 - parameter and connect it to the
293:07 - weight also I want to rename the float
293:10 - parameter to
293:12 - progress and set a hint range we want to
293:16 - go from 0 to 1 that finishes the Shader
293:19 - I can now go to Shader parameters and
293:22 - set the Shader progress along with the
293:25 - color so if you want to have some really
293:27 - freaky color go with that I'm going to
293:29 - stick with white and by default the
293:32 - progress should be zero this Shader we
293:34 - now want to apply to all of the textures
293:36 - of every single entity which means for
293:40 - the player I want to go to player
293:43 - graphics and in there we have LAX and
293:46 - torso which should both get the Shader
293:49 - material and then we can quick load the
293:52 - Shader we have just created same for the
293:55 - Torso material I want to create a new
293:58 - Shader material and then quickload the
294:02 - flash Shader by default this doesn't do
294:05 - anything but that we're going to work on
294:07 - in just a bit next up I want to work on
294:10 - the soldier because in there we simply
294:14 - have a Sprite 2D which once again is
294:16 - going to get a Shader and then in there
294:19 - I want to quickload the flash Shader
294:22 - finally we have the Drone and for the
294:25 - Drone we have an animated Sprite 2D
294:28 - which can also get a shade of material
294:31 - once again quickload and
294:34 - Flash cool with that every single entity
294:38 - texture can be
294:40 - flashed and let me clean up all of the
294:43 - scenes just a bit we don't need this guy
294:47 - and we don't need the bullet now inside
294:50 - of the hit function I want to call
294:52 - something like flash with the notes that
294:55 - can be
294:57 - flashed this is a function that doesn't
294:59 - exist at the moment so Funk flash along
295:02 - with the nodes and for now I simply want
295:04 - to print the notes that we are getting
295:07 - and let me talk through this by notes I
295:09 - am talking about all all of the nodes
295:11 - that have the flash Shader and this I
295:14 - want to get from inside of the hit
295:16 - function so in there I also want to get
295:19 - the nodes that means inside of the
295:22 - bullet when we are calling
295:24 - hit we have to somehow get all of the
295:27 - nodes how can we do that and well I
295:30 - basically want to get the body and then
295:33 - get the Sprites the way this system is
295:36 - going to work for example for the player
295:39 - I can minimize everything else and then
295:42 - at the bottom Funk getor
295:45 - Sprites no need for parameters for this
295:48 - one I simply want to return an array
295:52 - with the nodes that have the Shader for
295:55 - the player this would be player Graphics
296:01 - Lex and then we have player graphics and
296:05 - foro those are being returned by get
296:08 - Sprites so when we are are inside of the
296:11 - bullet calling this function we are
296:14 - getting all of the nodes inside of an
296:15 - array and then inside of entity when we
296:19 - are calling this function we are getting
296:21 - the notes that we are passing into this
296:24 - flash function and in there we are
296:26 - printing them the same thing I want to
296:28 - do for the saw so in there we have the
296:31 - damage besides that I want to get body.
296:36 - getet
296:38 - uncore Sprites get Sprites is not the
296:41 - perfect name but I think it captures the
296:43 - essence reasonably well so with that I
296:47 - can run all of this and now if the play
296:49 - gets H by a saw we are getting the
296:52 - Sprites that have the Shader that's
296:55 - really all we
296:56 - need once we have that we can work with
296:59 - the Shader inside of the entity I want
297:02 - to create a tween to control the
297:04 - parameters of the Shader which means I
297:07 - will need VAR tween and create TW once
297:12 - more after that on this tween I want to
297:15 - call a tween method I find when updating
297:20 - a Shader using tween method works best
297:23 - the way it works is that we have to pass
297:24 - a function into this twen method as an
297:27 - argument let's create it first of all I
297:30 - want to create a function set flash
297:34 - value which always needs to have a value
297:37 - that in our case should be a float for
297:40 - testing purposes for now I simply want
297:42 - to print that value after that inside of
297:45 - this tween method I want to get set
297:49 - flash
297:50 - value without calling it The tween
297:53 - itself is going to call it I don't want
297:56 - to do this manually after that we have
297:59 - to do the usual stuff for the tween we
298:02 - need a start value we need a final value
298:06 - in my case 0.0 and 1.0 and then a
298:09 - duration
298:11 - but now let's go with one second if I
298:14 - now run all of this you should be able
298:17 - to
298:18 - see the values going from
298:22 - 0.0 all the way to 1 over duration of 1
298:27 - second that is what we have gotten from
298:29 - this function so basically we are simply
298:31 - calling it over and over again until we
298:35 - reach that point to this function I now
298:37 - want to add all of the nodes which I can
298:40 - do via bind and then pass through all of
298:43 - the noes to capture them I have to add
298:47 - another parameter for the notes I can
298:50 - simply go through all of the notes via
298:52 - for Loop for note in noes and then
298:56 - actually update the value so I want to
298:58 - get note material and then set
299:03 - Shader
299:06 - parameter the parameter I want to update
299:08 - is called progress
299:10 - and the value I want to give it is
299:12 - called
299:14 - value that should actually be it if I
299:17 - now run all of this the player should
299:20 - flash up once we get hit and he doesn't
299:23 - I think that's because we need an
299:24 - uppercase P for
299:27 - Progress next
299:30 - attempt and now this is working the
299:34 - player very slowly becomes white to make
299:37 - this a bit more Snappy I want to set the
299:39 - duration to to
299:40 - 0.1 and then set the transition for
299:45 - which I want to
299:46 - use Queen and trans
299:50 - quadratic next attempt and now the
299:54 - player should flash up much faster and
299:56 - there we go this
299:58 - works after this twin is finished as
300:01 - well I can duplicate the entire line and
300:04 - then go from 1.0 to
300:06 - 0.0 over a duration of 0.4
300:11 - with
300:12 - that the player should only flash up for
300:15 - a short amount of time and there we go
300:17 - this looks pretty good so that covers
300:19 - the Shader for the player and I do
300:22 - realize that all of this was probably
300:24 - somewhat
300:25 - confusing so let me go over it again a
300:28 - bit more
300:29 - slowly inside of every single entity for
300:32 - example for the
300:34 - player we have some kind of sprite that
300:37 - contains all of the graphics inside of
300:39 - the player this means lags and torso I
300:43 - have given all of these Sprites a Shader
300:45 - The Flash Shader and this Shader can be
300:47 - updated by the color or by progress so
300:51 - if you toggle progress and set it to one
300:54 - then you're setting the texture to White
300:56 - and that's all that's happening in there
300:57 - after that for every single Sprite we
301:01 - are going to create for example the
301:03 - player a get Sprites function that
301:06 - simply returns all of the nodes that
301:08 - have the Shader and and as soon as
301:11 - anything hits that body for example a
301:13 - saw is hitting the player then we are
301:15 - calling body do hit with the amount of
301:17 - damage and with the
301:19 - Sprites that means then inside of
301:22 - entity we are calling the hit function
301:25 - and Via that we are calling
301:28 - flash which in turn is going to create a
301:31 - tween that itself is calling a method in
301:34 - our case set flash value and passes in
301:36 - all of the nodes along with a value
301:39 - which we are catching add parameters
301:41 - value and noes and finally after that we
301:45 - are looping through all of the notes and
301:47 - then updating the Shader that's
301:49 - basically all that's happening in here
301:51 - the ultimate logic is fairly simple but
301:53 - we are passing through a whole bunch of
301:55 - steps which might make all of this more
301:58 - complicated also what you always want to
302:00 - be aware of when you're working with a
302:02 - tween you want to be really specific
302:05 - with your data type so make sure you are
302:07 - basically always using floats if used
302:10 - integers in here like simply a zero then
302:13 - there is a pretty good chance that gdo
302:15 - is going to pass in an integer which
302:18 - wouldn't really work for our Shader now
302:20 - all of this I really want you guys to
302:23 - practice which means for the Shader
302:25 - Logic for the soldier the Drone and the
302:27 - monster you should implement the logic
302:30 - yourself most of the work I have already
302:32 - done but you will still have to
302:34 - implement a few more parts so pause the
302:36 - video now and try to finish up the
302:38 - Shader
302:43 - all righty I suppose just to see what's
302:45 - happening if I go to the station
302:49 - scene and then move the player over to
302:52 - the
302:53 - soldier if I now run the entire game and
302:57 - shoot at the soldier we're getting an
302:59 - error that get Sprites doesn't exist in
303:02 - the character body 2D soldier that makes
303:05 - sense because inside of body hit the
303:07 - soldier doesn't have get Sprites
303:10 - that is easy to fix so for this
303:13 - Soldier I need to add another
303:17 - function get uncore Sprites all this one
303:21 - needs to do let me open up the soldier
303:24 - scene the only thing that we want to do
303:26 - is to return the Sprite
303:28 - 2D or at the very least the node with
303:31 - the Shader so this I want to return and
303:34 - since we are going to Loop over it I
303:37 - want to return it inside of an array and
303:40 - that should fix the soldier if I now
303:42 - shoot at the soldier he also flashes for
303:45 - a bit next up then we can work on the
303:49 - Drone which as a reminder if I open the
303:52 - Drone scene autographics has an animated
303:55 - Sprite and this we want to return via
303:58 - getor
304:00 - Sprites return the array with animated
304:04 - Sprite
304:05 - 2D finally we have the monster
304:11 - which has simply a Sprite Tod which
304:13 - means we can copy the thing we have done
304:15 - for the soldier and simply return Sprite
304:18 - Tod let's do it all the way at the
304:21 - bottom function get Sprites return
304:23 - Sprite
304:24 - Tod that should be it if I now run all
304:28 - of this I guess we should try the
304:31 - soldier still works then we can go up
304:35 - and shoot at the Drone just have to make
304:38 - sure I'm hitting it
304:40 - and this one doesn't work yet also if I
304:44 - go to the sky scene it does work for the
304:49 - monster so this part is okay all right
304:53 - with that we are nearly done I just have
304:55 - to make sure that inside of the station
304:59 - we can shoot at the Drone and let me put
305:02 - it roughly on the same level as the
305:04 - player so it's a bit easier to
305:07 - test if I shoot at the Drone
305:10 - nothing happens and just to test things
305:13 - inside of on body entered for the bullet
305:16 - I want to check first of all if print
305:20 - drone hit is the case and if then hit
305:23 - isn't body for that I can print hit I
305:26 - think that's the issue if I now shoot at
305:29 - a bullet we are getting drone hit this
305:33 - part does work but the actual hit inside
305:36 - of the body does not that means there's
305:40 - no hit in the body of the
305:42 - Drone and if you open the scene you can
305:44 - tell why the Drone inherits from
305:46 - character body to D while it should
305:48 - inherit from
305:49 - entity if we now try all of this
305:53 - again there we go now the Drone is
305:55 - flashing perfect awesome with that we
305:59 - have the basic Shader for all of the
306:02 - entities that is some pretty good
306:06 - progress there's one more thing I do
306:08 - want to do before we come to death and
306:10 - that is set a proper amount of Health
306:12 - for all of the entities at the moment we
306:15 - are always going with 100 but if you
306:18 - look at Global I would rather set some
306:21 - kind of enemy parameter for health for
306:23 - example for the drones I want to have a
306:26 - health of
306:28 - 20 and for the soldier I want to have a
306:32 - health of let's say 60 besides that I
306:35 - want to have one more entry which would
306:37 - be the monster
306:40 - this one doesn't need speed I suppose
306:42 - 200 is pretty good with this one and
306:45 - then when we are inside of the Drone for
306:49 - example we can call Funk uncore ready
306:54 - and update Health to be the value that
306:58 - we are getting from globals so enemy
307:02 - parameters drone and health and
307:05 - obviously this should be Global this
307:07 - line I can now copy because next up I
307:10 - want to work inside of the soldier in
307:14 - which we can do the same I want to have
307:16 - Funk uncore ready and update the health
307:19 - in there except now I want to have this
307:21 - Soldier finally we have the monster on
307:25 - which we can do the same thing bunk
307:27 - uncore
307:29 - ready and then we are
307:31 - setting Health to the Monster Health I
307:34 - suppose after that inside of entity we
307:37 - can keep 100 for the player
307:40 - and just to test if this is working I
307:42 - want inside of bullet when we are
307:45 - hitting
307:47 - anything
307:49 - Sprint body. Health let's try this and
307:53 - for the drones I think we should get 10
307:55 - or
307:57 - 20 so this is working pretty well with
308:01 - that in place we can start working on
308:03 - the death logic so for example for the
308:05 - Drone if Health gets to zero this thing
308:08 - should explode
308:10 - whereas for the enemy soldier we want to
308:12 - play the death animation and for the
308:15 - monster we want to play something a bit
308:18 - larger so let's go step by step Oh and
308:20 - before we start with that inside of
308:22 - entity we are already checking via the
308:25 - health if this value is below zero and
308:28 - then we are calling trigger death this
308:31 - at the moment doesn't do anything oh
308:33 - well it prints something but I want it
308:35 - to do nothing because this function I
308:38 - want to overr right for example in the
308:42 - Drone I want to have trigger de as well
308:46 - and this trigger def is now going to
308:48 - override this trigger def although you
308:50 - could call it via super and in there we
308:54 - have trigger def once again but that we
308:56 - don't want to do since trigger death and
308:58 - entity doesn't do anything inside of the
309:00 - Drone if the Drone dies we want to emit
309:04 - the detonate signal so detonate
309:07 - emit with the the global position of
309:11 - this node and besides that we want to Q
309:14 - fre the entire thing that should be it
309:17 - and the Drone dies in a single hit so I
309:19 - can shoot and the Drone disappears next
309:22 - up we can work on the soldier which once
309:25 - again is going to need a trigger death
309:28 - function in which we first of all want
309:31 - to set the speed underscore modifier to
309:36 - zero and then we want to set the anim a
309:40 - player do
309:42 - current
309:44 - animation to death or in other words if
309:49 - I close the Drone scene and open the
309:52 - soldier one inside of the animation
309:56 - player earlier we created a death
309:59 - animation this we want to play as soon
310:01 - as the soldier dies and that should
310:04 - actually be it at least for this part so
310:06 - inside of the station I want to move the
310:09 - player over there let's try all of this
310:12 - now and I can shoot at Soldier and
310:17 - eventually we should get the death
310:18 - animation and we
310:21 - don't so let's check if this function is
310:24 - being called in the first place print
310:27 - death so at some point we should be
310:30 - getting death and we do that means this
310:34 - function does run and I think we do play
310:36 - the animation but then be because of
310:40 - animate we are switching straight back
310:42 - to the regular shooting animation so
310:45 - what I want to do instead is under
310:47 - process only do all of
310:50 - this if
310:52 - health is greater than
310:56 - zero if that is not the case we want to
310:59 - play the death animation once and then
311:01 - we are good to go so if I now shoot at
311:04 - the soldier there we go we're getting
311:06 - the death
311:07 - animation and this almost works the one
311:11 - issue we have now is that the Collision
311:13 - shape for the soldier is still there
311:15 - also we can do this which is arguably
311:18 - pretty funny anyway what we want to do
311:22 - after the soldier has died we want to
311:26 - get the Collision shape
311:29 - 2D and set disabled to true although
311:34 - this usually gives you some weird
311:36 - behavior and gdo is going to complain
311:38 - let me
311:40 - try and there we are getting a debugger
311:43 - issue that we have to update physics
311:46 - inside of call
311:48 - deferred that's not a problem we simply
311:51 - have to create another function called
311:55 - disable collisions although the name
311:58 - doesn't really matter all we want to do
312:00 - in here is disable the
312:03 - collisions and then use called the third
312:08 - and the name of the function that we
312:09 - want to call my case disable
312:13 - collisions that way we can do all of
312:16 - this
312:16 - [Music]
312:18 - again and now we are not getting
312:22 - collisions anymore perfect that looks
312:25 - all right so finally we can come to the
312:29 - monster or first of all I want to close
312:31 - the soldier scene once again I want to
312:35 - create a function I suppose we can do it
312:37 - right below trigger attack
312:39 - function
312:41 - trigger death I want to start by
312:44 - disabling all of the timers move timer.
312:48 - stop and a attack timer. stop besides
312:54 - that I want to get the animation player
312:58 - and set the current animation to death I
313:02 - don't think this one exists at the
313:04 - moment inside of the animation player we
313:07 - have to create another
313:10 - animation so a new animation called def
313:14 - for which we first of all want to set a
313:16 - property track for the Sprite
313:19 - 2D and the value I am looking for is
313:24 - modulate basically over 1
313:28 - second I want to start from a key that
313:32 - is all white and then at the
313:35 - end the value should have the same color
313:39 - still white but then the alpha value
313:41 - should go to zero all this is going to
313:44 - do it's well fading out the monster
313:47 - while this is happening I want to
313:48 - display lots of
313:50 - explosions for which I want to add a
313:53 - call method track that connects to the
313:57 - monster and in there I want to call lots
313:59 - of explosions for that though inside of
314:02 - the script we will need to add just a
314:04 - bit more first of all I want to create a
314:08 - signal
314:11 - detonate like we have done for the Drone
314:14 - and for the bullet in there we have the
314:16 - position and then when we are playing
314:19 - the death animation I want to call a
314:21 - function explode over and over again
314:24 - which is then going to give us a random
314:26 - X and Y position inside of this Sprite
314:30 - so fundamentally we simply want to get
314:32 - detonate and emit it with a vector
314:37 - to for
314:40 - randomx and random uncore
314:43 - y these two values do not exist at the
314:46 - moment to create them I want to have VAR
314:49 - random X and VAR random y for both of
314:53 - them I want to get the RNG or the random
314:56 - number
314:58 - generator along with Rand I range for
315:02 - which will need a start and an end point
315:05 - in my case I went with global position
315:09 - x - 20 and Global
315:13 - positionx + 20 the same thing we can do
315:18 - for y except now I want to replace x
315:21 - with Y that is going to give us random
315:24 - positions around the center of the
315:27 - monster next up inside of the animation
315:31 - player for the death animation I want to
315:33 - call this
315:34 - explosion or in other words I want to
315:37 - create a key with the explode function
315:42 - and this I want to insert multiple times
315:45 - so throughout this function simply add
315:49 - explode wherever you think it's
315:51 - appropriate explode here
315:55 - explode there and we can do this a
315:58 - couple more
316:00 - times bya this system you are getting a
316:02 - ton of control although setting it up is
316:05 - arguably a bit tedious
316:09 - let's say something like that and then
316:12 - we should have a nice
316:14 - animation once the monster
316:17 - disappears all of this let's try the sky
316:21 - and then play the
316:26 - scene and we are getting already a
316:31 - semi-transparent monster so this is not
316:34 - ideal but the explosions do work
316:38 - multiple times actually
316:41 - which I guess is also kind of funny but
316:44 - not the intended experience first of all
316:46 - for the animation player when we are
316:48 - playing the death animation the default
316:52 - value should be zero so make sure you
316:54 - are starting
316:56 - here on top of that when this thing is
316:59 - done I want to play another function
317:02 - which is simply
317:05 - Q3 that way we're getting rid of the
317:07 - entire thing
317:09 - now make sure that the timeline is at
317:11 - the beginning so the monster is visible
317:14 - and then inside of
317:16 - Sky I want
317:18 - to defeat the monster and the rocket
317:23 - launcher is best for that although it's
317:26 - going to take a bit there we go now
317:28 - disappears and now the monster should be
317:33 - gone and perfect this is working quite
317:37 - well that is leaving us only with the
317:40 - player and for this one I didn't really
317:42 - know what to do for trigger death
317:44 - because we don't really have a reset
317:46 - state so for this one Funk trigger
317:51 - death I simply want to end the game but
317:54 - which we have to get the tree and then
317:57 - call quit now to test that if I run the
318:01 - game I think this Soldier is going to
318:03 - shoot at us and after a couple of hits
318:05 - the game is going to
318:07 - end not amazing but good enough for our
318:10 - purposes although while I'm testing
318:12 - things I want to disable this function
318:15 - or well comment it out so the game
318:17 - doesn't end randomly we are nearly done
318:21 - there's just one more thing that we have
318:22 - to cover and that is inside of the
318:25 - bullet we do get the bullet if the
318:27 - player is using the AK or the rocket but
318:31 - if we using the shotgun none of that
318:33 - happens so this one right now doesn't do
318:35 - any damage in fact if I go to the
318:39 - shotgun and an enemy nothing
318:42 - happens for that first of all I want to
318:44 - get all of the enemies but this we can't
318:47 - really do at the
318:50 - moment for that though inside of all of
318:53 - the enemies so for example inside of the
318:56 - monster we can assign them to another
319:00 - group which is called
319:03 - enemies this I want to do for the
319:05 - monster I want to do it for the soldier
319:07 - so Soldier selected and manage group
319:12 - enemies finally the same thing for the
319:15 - Drone in there I want to have enemies as
319:19 - the group with that we can return to the
319:23 - bullet and VAR enemies is simply going
319:26 - to be get uncore 3 and get notes in
319:32 - group
319:34 - enemies in fact this we can use right
319:36 - away in a for Loop for enemy in get tree
319:40 - and
319:41 - enemies and then we can get bar enemy
319:46 - uncore position which is going to be
319:49 - enemy and POS in there we want to get
319:53 - two things fundamentally number one is
319:55 - the bullet angle number two is going to
319:59 - be the enemy
320:02 - angle and finally I want to check if
320:05 - position so the position that we are
320:08 - getting from this setup
320:09 - method is distance to enemy do
320:16 - position below
320:18 - 100 or well if you look at Global there
320:22 - we have gun data and shotgun range which
320:26 - should be a
320:27 - 100 if we are inside of this
320:30 - range Global gun
320:35 - data
320:37 - shotgun and
320:40 - range if we are close
320:43 - enough and the absolute value of the
320:48 - bullet angle minus the enemy
320:54 - angle is let's say below
320:57 - 90° if that is the case we want to call
321:00 - the hit function on the enemy so enemy
321:04 - do hit first of all though we have to
321:07 - get the bullet angle and the enemy angle
321:10 - both of which are fairly simple to get
321:12 - for the bullet angle we simply want to
321:14 - get bullet angle dot angle which is
321:19 - going to return a value in radians which
321:22 - I do not like to use so red 2 de then
321:26 - for the enemy angle I want to do the
321:29 - same thing radian 2 de and in there we
321:32 - want to get the target Vector so enemy.
321:36 - position and subtract the current
321:38 - position or our start point and from
321:41 - that we want to get the angle oh and I
321:44 - made a mistake this bullet angle should
321:47 - be the direction of the bullet next up
321:50 - inside of this thing G is complaining
321:54 - that we cannot get shotgun from the gun
321:57 - data let's have a look inside of
322:01 - global we have gun data and guns.
322:06 - shotgun so this shouldn't be sh shotgun
322:09 - this should be global. guns.
322:13 - shotgun and now G is happy again so with
322:16 - that we know that an enemy is close
322:20 - enough to the player and on top of that
322:23 - the enemy angle is within the same angle
322:26 - that the bullet is going in or at the
322:28 - very least it's in the same quadrant if
322:31 - that is the case I want to call enemy.
322:33 - hit with global do gun
322:38 - data in there we want to once again get
322:42 - global. guns.
322:45 - shotgun from which we can take the
322:47 - damage and finally we want to get enemy
322:50 - and get underscore
322:53 - Sprites that should be all if I now Run
322:57 - the game and select the
322:59 - shotgun I can shoot but we are getting
323:02 - an error this should be enemy. position
323:05 - not
323:06 - PA next attempt
323:10 - if I now
323:12 - shoot I made the same mistake in here
323:15 - again this should be enemy dot position
323:18 - so final attempt I have a good feeling
323:20 - now and we can hit the enemy and the
323:23 - enemy dies so this is a really good sign
323:27 - that means we now have the shotgun logic
323:29 - as well and that covers the entirety of
323:32 - the bullet logic at this point we only
323:35 - have to add some minor things like
323:37 - managing data between scenes and the
323:39 - player Health indicator along with a few
323:42 - more minor things like sound all of
323:44 - those we're going to add in the next
323:45 - part at this point the majority of the
323:48 - game is basically done and we pretty
323:50 - much just have to finish up some smaller
323:52 - bits the two most important parts are
323:55 - the player Health indicator and the
323:57 - enemy persistence across levels so that
324:01 - if we are defeating a soldier in one
324:02 - level switch to another scene and then
324:04 - come back the soldier is still defeated
324:07 - other than that I want to add some sound
324:09 - and then refine the levels just a bit
324:12 - more but those parts are going to be
324:14 - fairly minor let's Jump Right In Here we
324:17 - are in gdo and I want to start by giving
324:19 - the player a health indicator for that I
324:23 - am going to create a new scene for which
324:25 - the root note is going to be a Sprite 2D
324:29 - that I'm going to rename to health
324:32 - circle this I want to save inside of
324:36 - scenes entities and
324:39 - player along with the other player
324:41 - scenes and I guess while we are here I
324:43 - also want to open the player
324:46 - scene and then attach the health circle
324:50 - to
324:51 - it oh and by the way I closed all of the
324:54 - other scenes so things are a bit more
324:57 - organized for the health circle the
325:00 - basic logic is going to be that we have
325:02 - a circle around the player something
325:04 - like this and if the circle is full we
325:07 - are at 100% Health but if the play gets
325:11 - it we want to reduce this value which
325:14 - should also be animated and all of that
325:17 - we are going to do via a Shader for
325:21 - which inside of the health
325:24 - circle I want to assign some kind of
325:27 - texture you could either use the good
325:29 - texture and place it in there or
325:32 - alternatively you could remove it and
325:34 - then add a noise texture and set a width
325:37 - and a height on it we are going to
325:39 - display everything via a Shader anyway
325:41 - so I'm going to use the gdo
325:43 - logo in there I want to go to material
325:47 - and then create a new Shader material in
325:51 - which I want to create a new Shader and
325:55 - I guess just for some variety I'm going
325:57 - to use a code based Shader the name can
326:00 - stay as it is and then create and by the
326:02 - way you could also use a visual Shader
326:04 - for all of this we are not going to
326:07 - write anything too complicated
326:09 - so let me rearrange all of this so this
326:12 - becomes a bit more
326:14 - visible what the Shader I want to first
326:18 - of all Define a couple of values all of
326:21 - which are going to be uniform so we can
326:23 - influence them inside of the inspector I
326:26 - want to have uniform Vector to Center
326:31 - which is going to get a value of Vector
326:33 - 2 with 0.5 and
326:36 - 0.5 don't forget to semicolon
326:39 - next up I want to have a uniform float
326:42 - radius for which I want to have a hint
326:45 - range from 0 to 1 although without the
326:48 - step size and the default value is going
326:51 - to be
326:52 - 0.3 besides that I want to have a
326:55 - uniform load WID which is also going to
326:59 - be hint uncore range with a value from
327:04 - 0.0 to
327:06 - 1.0 by Def default it's going to be 0.2
327:10 - besides that for now I want to create
327:12 - one more which is a uniform Vector 3 for
327:15 - the color which is going to get a source
327:18 - color
327:19 - hint with a default value of vector 3
327:24 - 1.0 so pure white simply by having all
327:28 - of these values inside of Shader
327:31 - parameters we can set a whole bunch of
327:33 - stuff the only Shader that we want to
327:36 - create is a void fr
327:38 - Shader without any parameters or
327:41 - arguments and in there I want to first
327:44 - of all create a circle or in other words
327:46 - I want to set the alpha values for which
327:49 - first of all I want to measure the
327:51 - distance between the center and the
327:53 - current pixel remember once again for a
327:55 - Shader we are separating the entire
327:58 - Sprite into very small units and then we
328:00 - are processing every single unit
328:02 - simultaneously so when we getting the
328:05 - distance from the center this point we
328:08 - can get some kind of circle the way this
328:11 - is going to work and let me call this
328:12 - one the Outer Circle I simply want to
328:16 - get the distance between the center and
328:19 - the current UV position this I can now
328:22 - use for the color Alpha value so I want
328:25 - to assign the Outer Circle that way it's
328:30 - a bit hard to see but the center is not
328:33 - visible at all and the further out we go
328:37 - the more visible all of the this becomes
328:39 - all of this we can make much more
328:41 - visible by
328:44 - adding a
328:46 - step which is going to give us a cutof
328:48 - point for which I want to use the
328:51 - radius with that we are getting a proper
328:54 - Circle that we can also influence via
328:57 - the radius so this changes the size of
329:00 - the entire thing besides that I want to
329:03 - create another float for the Inner
329:05 - Circle that we're going to cut away that
329:08 - way we can still see the player for
329:10 - which we are still going to use the step
329:12 - function along with the distance from
329:14 - the center to the current UV although
329:18 - for this one we want to get the
329:20 - radius minus the width don't forget the
329:25 - semicolon and then this should be
329:28 - working so this is basically just a
329:30 - smaller Circle compared to the Outer
329:32 - Circle and effectively we want to cut
329:35 - out the inner circle from the Outer
329:37 - Circle which we can do by getting the
329:40 - Outer Circle minus the Inner Circle and
329:43 - if I now save we are getting a cutout in
329:46 - the
329:47 - middle and for that we can set the WID
329:50 - so if I make this smaller we have a
329:52 - smaller WID I think 0.2 is a bit too
329:55 - much let's say
329:57 - 0.01 bit too small let's go with
330:02 - 0.05 and then if I reset the value okay
330:05 - this one is a bit too fake but you can
330:07 - experiment with that let's go with
330:09 - 0.03 I think that looks okay and for all
330:12 - of this we should check the player as
330:14 - well so I think that generally looks
330:18 - okay oh and by the way while we are here
330:20 - before we continue we can update color.
330:23 - RGB right away by setting it to the
330:26 - color that part's super easy with that
330:28 - we are getting whatever color we are
330:30 - specifying inside of the Shader
330:33 - parameters I'm going to go with some
330:35 - kind of red at least for now besides
330:39 - that one more easy thing that we can do
330:42 - is I want to get uniform float Alpha
330:46 - which is going to get a hint range
330:49 - between zero and one without a step size
330:52 - with a default value of
330:54 - 1.0 this value we want to use to toggle
330:58 - the visibility of the health circle
331:01 - which we do by simply multiplying it
331:03 - with the alpha value whatever we are
331:05 - getting in there will be multiplied with
331:07 - Alpha
331:08 - that way inside of the parameters we can
331:12 - make this thing visible or invisible or
331:14 - anything in between also you can update
331:18 - the center to place this thing basically
331:20 - wherever you want so I think for the
331:24 - player we might have to move it just a
331:26 - bit down although I think this actually
331:28 - looks
331:31 - okay cool so this covers the easy part
331:36 - now we have to cut away parts of it so
331:38 - we only want to get the full circle if
331:40 - the player has 100% Health but how can
331:44 - we cut away a part like this so this
331:47 - part for example I don't want but
331:51 - generally I simply want to toggle the
331:53 - progress of the circle for that first of
331:56 - all we will need one more
331:58 - uniform that needs to be a float which I
332:01 - called
332:04 - progress once again we can go with hint
332:06 - range from 0 to 1 with a default value
332:10 - of
332:11 - 1.0 after that to cut out parts of this
332:15 - we will need some very basic
332:16 - trigonometry or in other words before we
332:20 - are updating Alpha value of the color I
332:24 - want to get a float for the cutout for
332:29 - which I'm going to use
332:30 - Aon and in there I want to add UV dox
332:35 - and UV
332:36 - doy and and to see what this is doing
332:39 - let me comment out color. a and instead
332:42 - get color. a and set it to the cutout
332:46 - okay this is doing something to make all
332:50 - of this a bit more visible let's use
332:53 - this step function with
332:56 - 0.5 I think it's going to be more
332:59 - visible actually what we can do is use
333:02 - progress
333:04 - instead so now what I can do via
333:07 - progress is toggle this thing and get
333:10 - some kind of cutout what Aon is giving
333:13 - us is the angle between the origin point
333:16 - so this point up here and any of the
333:18 - pixels if this angle is large enough or
333:21 - bigger than the progress then we are
333:24 - going to get a visible pixel if not the
333:26 - pixel will be invisible the first issue
333:29 - we have with this one is that we are
333:31 - starting from the top left this is not
333:33 - correct we want to start from the center
333:36 - so inside of Aon and let me expand this
333:40 - I want to minus center. X forx and minus
333:46 - Center doy for y if I now save all of
333:50 - this this is already looking a lot
333:53 - better so now if I change the
333:56 - progress we are getting a small part of
333:59 - the progress to cover a greater range I
334:03 - want to multiply the progress with 2 *
334:07 - pi or tow which should already do quite
334:10 - a bit if I try this one again so now
334:13 - instead of
334:14 - progress we can go from zero and then at
334:20 - 0.5 the circle
334:22 - disappears not a terrible start but also
334:26 - not great yet basically at the moment we
334:28 - are covering half a circle and to finish
334:30 - the circle we simply have to add pi to
334:33 - it which we have to add to a ton there I
334:37 - simply want to add pi and then we are
334:40 - getting the entire
334:42 - circle and we can cover the whole thing
334:47 - I am fully aware I am going over this a
334:49 - bit faster simply for time sake later
334:52 - this year I am going to make a proper
334:54 - tutorial on
334:55 - shaders so I hope this wasn't too
334:58 - overwhelming if you are entirely lost
335:00 - check out an introduction to
335:02 - trigonometry we are not doing anything
335:04 - complicated in
335:05 - here anyway once we have that
335:08 - we simply want to multiply the cutout
335:10 - with our current Alpha value so we want
335:13 - to get the Outer Circle minus the Inner
335:14 - Circle time Alpha times the
335:18 - cutout and with that right now it's not
335:21 - doing anything but if I change the
335:24 - progress to any other value we are
335:27 - subtracting
335:28 - values so right now zero is the full
335:31 - amount and if I go to one this value
335:35 - decreases which isn't ideal I want one
335:38 - to be the full amount and then the
335:40 - further down we go the less of a circle
335:42 - we have to get that part I simply want
335:46 - to put the
335:48 - progress into parentheses and then do
335:51 - one minus progress that way we are
335:54 - inverting this value so with that I have
335:57 - to progress and
336:00 - I can select what amount of Health I
336:03 - want perfect so with that inside of the
336:07 - level we can see the player has a circle
336:10 - around it although in the foreground we
336:14 - have some random stuff that I want to
336:17 - remove because this looks a bit
336:20 - bad now one issue I have before we
336:22 - continue is that the health circle is
336:26 - affected by the directional light for
336:29 - which we kind of have a problem so
336:32 - usually if you have some kind of sprite
336:35 - that you don't want to be affected
336:38 - by light you can simply go to visibility
336:41 - and light M and change it there
336:44 - unfortunately this doesn't do anything
336:46 - for a directional light I can save it we
336:49 - are still getting the same result now
336:51 - you could do some fancy stuff and render
336:53 - the entire thing on another layer but
336:55 - that's a bit too complex instead I want
336:58 - to add a point light as a child to the
337:01 - health circle and then under graphics
337:05 - and lights we have have the main light
337:08 - which I want to add to it simply by
337:10 - having that we are lighting up the
337:12 - player a lot which doesn't look
337:14 - good but what we can do now inside of
337:18 - Point light 2D under range we have an
337:22 - item call mask and this one determines
337:25 - what is affected by the Light so with
337:27 - this one selected and the health circle
337:29 - being on light Mask 2 if I now go to the
337:33 - station the light only affects the
337:35 - player health circle so inside of the
337:39 - level this is not affected by the
337:42 - directional light of the background
337:43 - anymore that means now we can animate
337:46 - the entire thing I want to add a script
337:48 - to it and then we don't need any of this
337:51 - for now first of all though I want to
337:54 - get on ready VAR layer which we can get
337:58 - via getor Tre and get first note in
338:02 - group layer besides that I do want to
338:06 - have the ready
338:08 - function and get the current
338:11 - material and set the Shader
338:15 - perameter Alpha to
338:19 - 0.0 that way when the game runs normally
338:23 - we shouldn't see the health indicator
338:24 - and that looks all right but once we get
338:26 - hit it should become visible for which I
338:29 - want to use an update function which is
338:32 - going to get a value as the parameter
338:35 - although before we work in here let's
338:37 - for now now simply print the value to
338:39 - make sure this is working so how do we
338:41 - call this
338:42 - update well we want to do it if the
338:45 - health changes which we are tracking
338:48 - inside of entity this part to be
338:50 - specific in there we can check if the
338:55 - current class is in group and the group
339:00 - that we want to check is layer if that
339:03 - is the case we want to get the health
339:06 - circle somehow
339:08 - and I think the best way of doing that
339:09 - is to put the health circle inside of a
339:12 - group let's call it health
339:17 - cir that way we can track it anywhere
339:20 - inside of gdau so now get uncore three
339:24 - and get first note in group health
339:28 - circle once we have that I simply want
339:30 - to call the update method with the
339:33 - value could also be the health it
339:36 - doesn't really matter
339:38 - once we have that I can run the project
339:41 - and if the soldier shoots at us we're
339:44 - getting the health that looks good that
339:46 - means now we can work inside of the
339:49 - health circle first of all I want to
339:52 - create a
339:54 - tween which we do in the usual way
339:56 - create tween after which I want to Tween
340:00 - the
340:01 - property the object I want to Target is
340:04 - self and the property path is the
340:08 - material that we want to work with and
340:10 - in there we have the Shader uncore
340:16 - parameter which has an alpha value by
340:19 - that we are making the entire health
340:22 - circle visible so I want to set the
340:23 - alpha value to
340:25 - 1.0 over a period of 0.1
340:30 - seconds let's try that and if we get hit
340:34 - we getting the circle cool
340:37 - then we can duplicate all of this next
340:39 - up I want to update the progress of the
340:43 - Shader for the value I want to get the
340:46 - value from the parameter and divide it
340:48 - by
340:50 - 100.0 or whatever the maximum health of
340:52 - the player is for the duration I want to
340:55 - go with 0.2 seconds if I now run all of
340:59 - this we are reducing the player health
341:04 - circle and this works just fine if we go
341:07 - below zero nothing happens anymore that
341:09 - also works finally I want to make the
341:12 - health circle invisible again for which
341:15 - we can duplicate the first line where we
341:17 - are setting the alpha value and then go
341:19 - back to
341:20 - 0.0 over a duration of 0.4
341:24 - seconds now if the player gets
341:26 - hit we are getting a very quick update
341:30 - to the health which works pretty well
341:33 - that should also work with the Drone so
341:36 - I want to move the
341:38 - player next to the
341:42 - Drone and
341:46 - then and nothing happens so that we have
341:50 - to refine I guess while we are here we
341:52 - can also test if the player is affected
341:56 - by the saw so in there we should get
341:59 - some damage and we do so this part is
342:01 - working that means we have to check
342:03 - what's happening in the Drone and then
342:07 - let's have a look at the script the
342:08 - issue is quite simple on collision
342:10 - detection area body entered we want to
342:13 - call body. hit with some amount of
342:16 - damage I think inside of global I don't
342:20 - specify a damage for a drone I don't I
342:23 - guess we can add it in here
342:26 - damage and let's go with 15 that way we
342:30 - can get Global enemy parameters I want
342:34 - to get the Drone and I want to get
342:37 - damage next up we will need body. getet
342:42 - Sprites so with that we can try the
342:45 - entire thing again and move the player
342:49 - next to the Drone so now we are getting
342:53 - our health updated perfect and I guess
342:57 - we shouldn't have to test this but if I
343:00 - get hit by the monster the health also
343:03 - updates perfect besides that the
343:05 - debugger is being annoying and now we
343:08 - have the issue that we are narrowing a
343:10 - conversion which happens inside of these
343:13 - random
343:14 - values and it's usually not an issue so
343:17 - we can safely ignore these warnings and
343:19 - in our case we don't really care about
343:21 - the precise values here if this really
343:24 - annoys you what you can do is add at
343:27 - warning ignore and then we are looking
343:30 - for narrow ring conversion and this you
343:34 - want to place before the line that it
343:36 - applies to to run the code we are not
343:39 - getting a debugger warning anymore and
343:42 - this can be really nice because the
343:44 - debugger tends to be very annoying at
343:46 - times anyway with that we have a health
343:49 - circle for the player that means we can
343:53 - close these scenes I guess we can keep
343:55 - the player open but next up I want to
343:58 - keep persistence between the scenes
344:01 - let's move the Drone out of the way down
344:05 - here and then I want to get this Soldier
344:09 - and start the
344:11 - game if I now kill this Soldier and move
344:16 - outside of the
344:17 - [Music]
344:19 - scene and I can come back and the
344:22 - soldier is back alive this shouldn't be
344:24 - the case so how can we make sure that
344:27 - this Soldier stays dead after we are
344:29 - coming back and before we get to that I
344:31 - realized inside of the debugger we're
344:33 - getting two more issues that we are
344:35 - still getting debugger narrowing
344:37 - conversion the issue is that this
344:39 - warning ignore only applies to the next
344:42 - line which means we have to do it here
344:46 - and here so now if I go to the sky scene
344:53 - it shouldn't come up
344:54 - anymore and it doesn't that's much
344:58 - better to keep data persistent between
345:00 - scenes we have to store the data
345:03 - globally or in our case we already have
345:07 - a global script in which I want to
345:09 - create another variable let's call this
345:11 - one the enemy data which for now is
345:15 - going to be an empty
345:17 - dictionary I guess a cleaner way of
345:19 - doing this would be to create a
345:21 - dictionary like this after that inside
345:24 - of the level every time we are leaving
345:27 - the level which we can do via function
345:30 - exit tree this is being run whenever we
345:33 - are exiting a scene so for example I can
345:36 - print exit scene Run the game and then I
345:41 - can simply move to the sky
345:44 - scene and we get exit scene that's all
345:48 - that's happening in here if that is the
345:50 - case I want to create an array let's
345:52 - call it current
345:55 - enemy data which is simply going to be
345:59 - an array once we have that I want to go
346:02 - through all of the entities inside of
346:05 - the entity node which means for entity
346:10 - in
346:11 - Main and
346:13 - entities and then I want to get the
346:16 - children after that I want to get the
346:20 - current enemy data and a penda value
346:23 - there should be a list with the entity
346:27 - dot position The Entity dot velocity and
346:33 - finally The
346:35 - Entity Dot health and just to show what
346:38 - we are getting let's print the current
346:41 - enemy data run all of
346:44 - this and then I can go to another scene
346:49 - so now inside of the output we have an
346:53 - array with a couple of nested arrays
346:56 - which contain the position the velocity
346:58 - and the health of all of the enemies
347:01 - these values we want to store globally
347:03 - or in other words I want to get global
347:07 - do enemy data which is the dictionary we
347:11 - have just created I want to create a key
347:13 - value pair the key is going to be the
347:15 - name of the scene which we can get via
347:18 - get three
347:21 - and the current scene.
347:25 - name the associated value is going to be
347:28 - our current enemy data so that way every
347:31 - time we are leaving the scene we are
347:33 - storing all of the enemy information and
347:35 - that information we can use as soon as
347:38 - we are loading the level which happens
347:41 - inside of already we want to check first
347:45 - of all I suppose we can get the current
347:47 - scene name which we once again get in
347:51 - the same way that we have done down here
347:54 - and then we can check if the scene
347:57 - name is in global do enemy data if that
348:03 - is the case we can go by index so that
348:07 - the first item we have stored in there
348:09 - is going to be the first item in this
348:11 - new scene now for that we have to make
348:13 - some minor updates I want to go for I in
348:17 - main. entities.
348:20 - getchild count and then the VAR entity
348:25 - is going to
348:27 - be Main and entities doget uncore
348:32 - child with I with that setup we can
348:36 - still get all of the
348:38 - entities and now I want to call a setup
348:41 - method on all of them for which I can
348:43 - get the loable do enemy data and then
348:48 - select the current scene name which
348:51 - contains all of the data points which I
348:53 - can select via indexing so I now for
348:56 - that to work inside of each entity we
348:59 - will need a setup method that we don't
349:01 - have at the moment all the way at the
349:03 - bottom I want to have Funk set up also
349:07 - this thing needs to have a parameter for
349:08 - the data now in there I simply want to
349:11 - do if self. is
349:14 - in
349:16 - group and enemies I believe I called it
349:20 - then I want to get the position and set
349:23 - it to data zero next up I want to update
349:28 - the velocity to
349:30 - data
349:32 - one and finally I want to update the
349:35 - health two data to this should already
349:39 - do something so if I shoot at the enemy
349:43 - real quick and then leave the
349:46 - scene and come
349:49 - back then we are getting the soldier
349:52 - dying but well we can still see the
349:55 - dying animation effectively what's
349:57 - happening now is we have stored the data
349:59 - globally and once we're loading this
350:01 - particular Soldier inside of the soldier
350:04 - scene we are calling trigger death so we
350:06 - are playing the death animation and then
350:08 - the soldier is dead which isn't ideal I
350:12 - just want to display the dead soldier
350:14 - the animation shouldn't be there or in
350:17 - other words I basically want to do
350:20 - everything inside of this setup method
350:22 - plus a few more things which we can do
350:25 - inside of the soldier by creating
350:27 - another setup method Funk setup with the
350:31 - data importantly here we still want to
350:34 - do the original setup which which we can
350:37 - do via super do setup into which we are
350:42 - going to pass the data just to test
350:44 - things I want to print Soldier set up so
350:49 - once again I want to kill this Soldier
350:53 - then go in and out and we get Soldier
350:57 - setup but the soldier is still dead
351:00 - that's a good sign which means now since
351:04 - the soldier is dead I want to set this
351:06 - speed modifier to Zer right away get the
351:11 - animation player and stop whatever we
351:14 - are doing and instead get this
351:18 - bright and set the frame to 22 which is
351:23 - the dead animation frame I can once
351:25 - again defeat the soldier and then leave
351:29 - the
351:30 - scene and come back now the soldier
351:34 - keeps on being dead which is pretty much
351:37 - all we need now unfortunately I did
351:40 - realize a bug in the system so it's not
351:44 - perfect basically when we have a drone
351:47 - or the monster those scenes are being
351:50 - destroyed once they are running out of
351:52 - Health which means when we are leaving
351:55 - the level and we are creating the
351:58 - dictionary this entity does not exist
352:01 - anymore inside of get children which
352:03 - would break this entire system now
352:05 - unfortunately I don't have time anymore
352:07 - to fix it and deadlines can be rough so
352:10 - sorry about that but basically what you
352:12 - want to do instead of queuing free the
352:14 - Drone and the monster you want to store
352:16 - them in some kind of dictionary so you
352:17 - can still access them that way this
352:19 - system will become much more reliable
352:22 - but anyway with that we are nearly done
352:26 - there are just some minor things that I
352:28 - want to do first of all for each level
352:31 - so we are still inside of the level I
352:34 - want to set a camera limit or so we have
352:37 - the debugger being annoying again
352:39 - current enemy
352:40 - data was used but never assigned a value
352:43 - that's okay I guess once again we can
352:46 - get warning ignore and then I think this
352:50 - one is called unassigned variable now we
352:53 - can minimize this function and instead I
352:56 - want to create an export variable which
353:00 - I have called camera uncore limit and
353:04 - this is simply going to be a vector for
353:07 - integer so we can only store integers in
353:09 - there if I now store all of this and go
353:12 - back to the 2D scene with the station
353:14 - selected in the inspector we are getting
353:18 - four values which are going to be the
353:20 - left side the top side the bottom and
353:23 - the right of the camera the way we are
353:25 - going to implement this once everything
353:27 - is ready I want to get the camera or the
353:30 - player cam doesn't really matter what we
353:32 - call it which always needs to be a
353:36 - camera
353:37 - 2D and the value we assign is from get
353:40 - three get first note in
353:43 - group layer and finally we still have
353:47 - the get Cam method that way we have the
353:49 - camera and then before we are setting up
353:53 - all of the entities I want to set up the
353:56 - camera the way this is going to work
353:58 - basically I want to have camera. limit
354:01 - left which is going to be camera. X or
354:06 - or limit Pop I want to have camera. y or
354:11 - camera do right I need camera do that
354:17 - and finally for camera do Bottom I want
354:21 - to have camera. W with that if I don't
354:25 - do anything and Run the game again we
354:28 - are getting some really weird Behavior
354:31 - actually first of all we're getting an
354:32 - error because this should be camera
354:34 - limit not camera that me fix it for all
354:37 - of
354:38 - [Music]
354:40 - them and now try
354:42 - again so now the camera doesn't work
354:46 - because we have set a limit of zero for
354:48 - every single side which means we can't
354:50 - really get away from the origin point so
354:54 - to fix that we want to check the
354:55 - different sides for example the left
354:57 - side of the level would be
354:59 - -32 so I can set this to 32 and I
355:04 - already measured all of this the top
355:06 - side is negative
355:08 - 128 the right side is
355:11 - 1290 and the bottom is
355:14 - 640 that way if I run all of this again
355:19 - the player cannot see outside of the
355:23 - level anymore and I think if we go down
355:26 - here we can see it best so if I go all
355:28 - the way to the left at some point the
355:30 - camera stops and that way we cannot see
355:32 - the background
355:34 - anymore the same with the bottom I think
355:37 - down
355:37 - [Music]
355:39 - here there is another part and if we go
355:42 - to the underground this doesn't work
355:45 - anymore to fix those two parts really
355:48 - quick inside of the
355:49 - underground for the values I want to
355:52 - have 48 -200
355:57 - 680 and
355:59 - 400 finally I want to update this sky in
356:03 - there the values are going to be
356:10 - 1606
356:11 - 1,66 and
356:15 - 480 and that should be pretty much it I
356:18 - suppose just to try one let's try the
356:20 - underground I haven't really used that
356:22 - scene in there we cannot go further to
356:25 - the left with the camera and at some
356:27 - point in the bottom it also stops so
356:30 - that's a pretty good sign next up one
356:33 - thing that is a bit annoying inside of
356:35 - the sky is that that we can see the
356:38 - background for that I want to add in the
356:42 - background another
356:44 - node which is called parallx background
356:49 - the way this works is we have to add
356:51 - another node a parallx layer and this
356:54 - one can get a Sprite and by adding
356:57 - multiple parallx layers you can create a
357:01 - staggered effect which looks really nice
357:04 - for example inside of of Graphics there
357:07 - we have sky where we have a plain
357:10 - background and then two kinds of clouds
357:12 - I think nen 2 should be further in the
357:15 - background so this is what I'm starting
357:16 - with and in there we're getting a
357:18 - background that I want to arrange
357:20 - something like this then I can duplicate
357:22 - the Sprite and move the entire thing a
357:25 - bit further to the right this I want to
357:26 - do one more time because that way we are
357:32 - covering higher
357:34 - WID something like this also all of this
357:38 - should be moved just a bit further down
357:40 - so the player cannot see the
357:43 - bottom I guess this would be this point
357:46 - after that I can duplicate the entire
357:48 - layer and then change the Sprite with
357:52 - another texture in there I always want
357:55 - to have nin one if I now run the entire
358:00 - thing we get a much nicer looking
358:03 - background although at the moment it's
358:05 - entirely static
358:06 - this you can change inside of parallex
358:08 - layer under motion by changing the scale
358:12 - for example for the first parallx layer
358:14 - I went with
358:15 - 0.9 and for the second one I went with
358:19 - 0.8 now I can try all of this and we
358:22 - should be getting just a bit of movement
358:24 - which I think looks really good although
358:27 - we are going to need just one more layer
358:29 - so I want to duplicate the first one and
358:32 - remove the Sprites so we only have a
358:35 - single one which should get nen free
358:38 - which is a plain
358:40 - background let's move it here so you can
358:42 - see what's going on this thing we want
358:44 - to stretch out to cover the entire area
358:48 - something like this and now if I run
358:52 - this this is looking significantly
358:57 - better perfect I should have done this
359:00 - ages ago better late than never I
359:02 - suppose that means now we simply have to
359:04 - add the sounds and then we are good to
359:07 - go most importantly we want to have the
359:09 - bullet sounds which I want to store
359:12 - inside of global in there we have the
359:18 - constant bullet sounds which is going to
359:22 - be a dictionary where we have the guns
359:26 - and then AK the associated value is
359:29 - going to be reload and then I want to
359:33 - load AK shoot. wav next up I want to
359:37 - have guns. shot gun which is going to
359:41 - get
359:43 - preload with the
359:46 - shotgun shoot.
359:48 - wav finally guns.
359:52 - rocket
359:54 - reload and rocket. shoot oh and I forgot
359:59 - this entire part could be your exercise
360:01 - as well I don't think this part should
360:03 - be much of a challenge but try to add
360:05 - all of the sound files yourself pause
360:08 - the video now and see how far you
360:13 - get all right now we have the bullet
360:15 - sounds and those we want to play
360:17 - whenever we are creating a bullet for
360:21 - that we have to open the bullet scene
360:24 - and add another note audio stream player
360:28 - 2D I guess the name we can leave as it
360:31 - is and to this thing we have to assign a
360:33 - stream which I want to do inside of the
360:36 - setup method I want to get the audio
360:38 - stream player and then assign this is
360:41 - stream which we are getting from Global
360:44 - and I call this one the bullet
360:48 - sounds for the key we are going to need
360:51 - the current type of gun the value is
360:54 - then going to be the stream and after we
360:56 - have that I can get the audio stream
360:59 - player 2D and play the entire thing and
361:03 - just to test things inside of this
361:05 - station
361:07 - I want to move the player a bit over
361:10 - here so we have things a bit more
361:12 - isolated I can now shoot and we're
361:15 - getting a sound same for the shot and
361:18 - same for the rocket perfect next up I
361:22 - want to work inside of the entities for
361:26 - which I want to open the entity scene
361:29 - and then add another audio stream player
361:32 - 2D this is going to be the hit sound for
361:35 - which we always keep the same audio file
361:38 - so inside of audio we have all of the
361:40 - audio files in there we have hit. OG and
361:44 - this we want to play as soon as an
361:46 - entity is hit since we already have a
361:48 - hit function this is fairly
361:49 - straightforward I simply want to get the
361:52 - audio stream player 2D and play the
361:56 - sound let's try this one and if I shoot
362:00 - in this
362:01 - [Music]
362:02 - direction we are getting a sound righty
362:06 - next up inside of the player whenever
362:10 - the player is Dashing I also want to
362:12 - play a sound and to keep things a bit
362:14 - more organized which is going to be
362:16 - another audio stream player 2D that I
362:18 - want to call Dash
362:20 - sound which is going to get the dash.
362:23 - wav sound when we are applying the
362:27 - movement under
362:30 - dash if we can Dash I want to play the
362:33 - dash sound so Dash sound dot a and I
362:38 - realized for the original Dash there was
362:40 - a particle effect which I do want to add
362:44 - all of that happened inside of the
362:46 - player graphics and there I want to
362:49 - create another
362:50 - note GPU particles
362:54 - 2D I suppose we can rename those to dash
362:58 - particles for that to work we have to
363:00 - add a process material particle process
363:03 - material then once again we getting the
363:06 - basic particles although those I want to
363:09 - set to time and one shot right away the
363:12 - lifetime of the particles is going to be
363:15 - 0.6 and the explosiveness is also going
363:18 - to be
363:20 - 0.6 after that inside of display I want
363:23 - to work with the
363:25 - scale the scale minimum should be two
363:28 - and the scale maximum should be 20 so
363:31 - Adit to true and we are getting much
363:34 - larger particles to make sure that they
363:37 - don't always spawn in the same position
363:39 - and spawn position and a mission shape
363:41 - as box the only value I want to change
363:44 - after that is for y we're getting 16 and
363:47 - next up for the velocity I want to set a
363:51 - spread of 10 an initial velocity of 110
363:56 - and initial maximum velocity of 160 bit
364:01 - hard to see but those are the full terms
364:04 - let's see what we get now but we might
364:05 - might be in the wrong direction although
364:07 - this is definitely getting better now in
364:10 - the code we want to work inside of the
364:13 - player Graphics script and create a
364:16 - function
364:18 - Dore
364:20 - particles for which we are going to need
364:22 - one parameter Direction I want to get
364:25 - the dash particles Target the process
364:28 - material and set a direction like we
364:32 - have done for the shotgun the value we
364:34 - want for this one is the direction from
364:35 - the
364:36 - parameter and after we have that I want
364:39 - to get the dash particles and restart it
364:43 - now restarting is quite important
364:45 - because it's more reliable when you are
364:47 - emitting particles so when you are
364:49 - setting emitting to through you do get
364:54 - particles but if you dash fast enough
364:56 - you might get new particles before the
364:58 - old ones have disappeared and if that
365:00 - happens with emitting being true you do
365:02 - not get new particles but with restart
365:05 - you you do so this is generally a bit
365:08 - better at least for this specific
365:10 - purpose after we have that we can work
365:13 - in player. GD we are still inside of
365:16 - Dash and if that is the case I want to
365:20 - get
365:23 - layer
365:25 - graphics and then call dashore
365:29 - particles along with the current
365:31 - movement Direction which I think should
365:34 - be working already so now if we're
365:36 - moving we getting sound and
365:40 - particle also at this point what's
365:42 - really nice is that we can make the
365:45 - player flash very easily we already have
365:48 - Flash and all we need is the get Sprites
365:52 - method which I think adds
365:56 - something you could refine all of this
365:58 - quite a bit but for that you have to
366:01 - play around with the process material
366:03 - quite a bit which you can very safely do
366:05 - in your own time I think you got the
366:07 - basics there are two more things that we
366:09 - need the explosion sound and the
366:12 - background music let's start with the
366:14 - explosion sound I suppose this one we
366:17 - can store also inside of
366:20 - global I simply want to have a constant
366:23 - explosion underscore
366:25 - sound which is going to be preload and
366:30 - explosion medium.
366:33 - wav this we now want to play whenever we
366:36 - have an
366:37 - explosion which means inside of the
366:40 - explosion scene I need to add another
366:43 - note which would be an audio stream
366:46 - player to be oh in fact we could
366:50 - actually add the explosion medium right
366:52 - inside of the stream that actually is
366:54 - much easier so inside of global we don't
366:57 - need this constant at all inside of
366:59 - explosion as soon as this scene is ready
367:03 - we want to get the audio stream player
367:05 - here and play the
367:07 - sound with that I can shoot a
367:14 - rocket and we getting the sound that's
367:18 - pretty much it so finally we can work on
367:21 - the background music which should play
367:23 - constantly or rather on a global level
367:26 - and I think the easiest way of doing
367:28 - that is to create another scene which is
367:32 - just going to be a basic note doesn't
367:35 - even to be 2D and I call this one BG
367:39 - music which is going to get an audio
367:42 - stream player and make sure that this
367:44 - one is not 2D this is going to get a
367:47 - music. MP3 file now I think by default
367:50 - this one is quite loud so let me reduce
367:52 - the volume and then
367:54 - [Music]
367:58 - try I suppose we can set it to-3 but
368:02 - play around with whatever feels good
368:04 - this one I also want to set to
368:07 - autoplay and on top of that with
368:10 - musicmp3 selected you want to go to
368:13 - import and then enable loop after which
368:16 - we have to repport the thing and now the
368:18 - file is looping which for background
368:21 - music is really important after we have
368:23 - that I can save the entire scene inside
368:27 - of global and background music is
368:30 - totally fine after we have that inside
368:33 - of project and project settings Auto to
368:35 - load I want to go to Global and then
368:38 - bgus music.
368:40 - TSN with that if I run the
368:42 - [Music]
368:47 - game we are getting the background music
368:51 - and that finishes the entire
368:53 - project now there are some minor bugs
368:56 - most importantly about keeping the
368:58 - entities across different levels so you
369:00 - would have to do a bit more work to make
369:02 - this project work really good but I
369:04 - think if you have gotten to this point
369:06 - you have made a ton of progress so I
369:08 - hope all of this was useful and I'll see
369:10 - you around