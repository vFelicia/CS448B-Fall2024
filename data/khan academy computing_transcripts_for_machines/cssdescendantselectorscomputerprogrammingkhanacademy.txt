[Voiceover] Let's move on from doughnuts to carrots, one of the healthiest foods in the world, plus the favorite food of rabbits. Did you know that carrots aren't just orange? They were actually originally purple, and some of them still are today. We have this short webpage here with a list of carrot colors and a sentence about their purple origins. We've used classes to style the color names to the appropriate color. I like how the styles look in a list, but I'm not sure I like how the purple style looks in the text. I think I'd rather not use a background color, and go for a more subtle coloring there. How could I tell the browser to style the purple text here differently than the purple text here? Well they have the same class names so we can't use class unless we introduce a new class name. They also have the same tag name. They're both strongs. So we can't use the element plus class name selector that we just learned. Is there anything else different about them? Well one thing is that this strong is inside an li, whereas this strong is inside a p. So the difference is their parent tags, the tags that are above them. We can use this information to make a CSS rule using what's called a descendant selector, a way of selecting elements based on their position in the document. For example, to select only the purple strong inside the paragraph, we'll write p and then a space, the space is really important, and then the class name, .purple, and now we'll add our properties that will give us the more subtle coloring. Background color transparent, override what it was before, okay, nice. So we've affected this purple text without also affecting this purple text. Now any time we use the purple class inside a paragraph like this, it will get those styles applied after. We can use that space to dig deep into our document. Let's say we want to apply a styling just to strong tags that are in li's. We start with a parent tag, li, and then the space, and then strong. Maybe we'll give them a different line height to space them out more. Nice. We could even add a ul in front of the li if we wanted to make sure it didn't apply to strongs inside an ol li. You see, to use descendant selectors, we need to think hard about the structure of our document and what tags are inside other tags. If you're indenting nicely, then that should be easy to do because your indentation will reflect the hierarchy of tags. See we have this ul, and indented inside that we have an li, and inside that we have the strong. If you're not indenting nicely, well fix that up now because it will make it much easier for you to understand the structure of your page and to come up with CSS selectors based on that structure. You can use that space between any kinds of selectors, like finding a particular tag type under an element that has a certain ID, or finding a particular ID under elements with a particular class name, any combination that you need to use. The thing to remember is that if the structure of your page changes, then your old CSS rules might not apply. So think carefully when you use them and how future proof your CSS will be. You could always use classes if you want to be less dependent on the structure of your page. Let's look back at the rules I created and think through them. This first rule styles all the purple class elements inside paragraphs a certain way. If I add a new paragraph with purple class elements in the future, would I want them to get that property? Yes, because I think that those properties will always look the best in a paragraph. Do I need a more specific rule? Maybe if these paragraphs are always inside some element with class name article, I could add that to the rule, but for now, this is the most specific I can be. The second rule gives all the strong elements inside list items a certain line height. Do I always want strong items inside li's to have that increased line height? Hmm, maybe not. This rule might be too generic. Since I'm not sure, I will add a class to this ul and then change this one so it's ul.spacey, which makes it much more specific. In the future, as my webpage grows, I might make the rule more or less specific. Stick this tool in your evergrowing CSS toolbox and practice it so you can use it when it makes sense.