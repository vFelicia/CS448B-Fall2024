Hello everyone. I'm Pamela and I teach programming for Khan Academy. I'm going to give you a little tour of our programming editor and hope it gets you excited to contribute to it. So here is an example program in our JavaScript environment. On the lefthand side, we have our editor, which is the Ace editor. And on the righthand side we have the output, which is the output of a JavaScript plus PRocessing.js program. And PRoocessing.js is this library that can be used to make drawings, animations, and games, and really makes learning JavaScript quite fun. Alright, so what do we have in this editor? One thing we have is a color picker. So I can click around and see, real time, what the effect of changing the color is. Alright, I like that one. We also have a number scrubber. And that's great because you don't have to be an expert at numbers. We just have to be okay with scrubbing a scrubber and seeing what happened. We also have errors. So these are based of jsunit and we see Oh Noes guy pop up and tell us where the error is. And then we can fix it. And those errors are a really important part of the editing experience on Khan Academy and we do put a lot of effort into improving that experience, making the messages clearer, making Oh Noes guy less annoying, all of that stuff. We also have autocomplete. And this helps people who are not so good at spelling, which is, as it turns out, most people. And we also have this inline documentation. So we can see how to use a function if we forgot. Optional radius, great. Now we have a rect as well. And yeah, those are a lot of the features we have in this JavaScript editor here. Now we use that editor when we're teaching our JavaScript courses. And in those courses, we teach all the fundamentals of programming, plus how to make cool things with PRocessing.js. Now instead of videos, we have something called talk throughs. A talk through uses the editor and plays back audio synched back to the things that I've typed in this editor. So the neat thing is that you're actually watching this happen in the editor itself and at any point, you can pause and you can change the code that the teacher just wrote for yourself, and see what changes. And that's really cool. It makes it a lot more interactive. After talk throughs, we typically have challenges, which are stepbystep guided exercises to give you practice with using the concept you just learned. And this is the same editor, but it is combined with an automated grader. The automated grader is based off another open source library that we wrote. And it looks at the abstract syntaxtry of your code and compares it to known good trees. And it has notions of patterns and wild cards and stuff like that. So when we look at that, we can decide whether to pass you or whether to give you a little helpful message. So let's see, I should go to the next step. And I'll just put in some random numbers. Alright, so this time we got a helpful message to remind us that we really should make this rectangle wider and that would be the third number. Great. I did it. Yay. So those are our challenges and we've got quite a few of those. Now we also have a realtime environment for making web pages. So here on the lefthand side instead of JavaScript, we're seeing HTML and CSS. We have a lot of the same features from before, things like image pickers to let them customize what images they're using. We've got a linting system to let them know when something isn't quite right with their HTML. We've also got warnings you're missing our doctype. And we also have a color picker for CSS. Finally, we have an SQL environment. This is using SQLite and we compiled it to JavaScript so we could do it in the browser. And once again, pretty cool, we can write our sequel on the lefthand side, see our results on the righthand side. We can get errors, syntax errors. These ones tend to not be as helpful. We haven't been able to put as much effort into them yet. But they'll point you in the general direction. So those are the three environments we have the JavaScript with PRocessing.js, the web page environment, and the SQL environment. All of these environments are inside the liveeditor repo on GitHub. This repo has instructions for running, building, testing, and a long part here about how you can help, with a little guidance through our long list of issues to help you pick which of these issues might be the best for you to start working on. We have a lot of issues and we do not have a lot, or really any engineering resources to help on these issues right now. So we would love to have some of you come on and start contributing and you can literally improve the programming learning experience for millions of students, which I think is pretty awesome. I hope to see you in our repo soon.