[Voiceover] Now, we're going to talk about a concept called specificity. How specific are CSS rules are? Because I get tongue tied a lot and I mispronounce specific as Pacific, I decided to make a webpage about the Pacific Ocean. Also, it's my favorite ocean. This webpage here has a heading and a few paragraphs including this short little paragraph at the top. It uses three different types of selectors in the CSS to style these paragraphs. The first rules selects all the paragraphs in a page and changes their font family to sansserif. The second rule, selects all the paragraphs of the class name infoparagraph and changes their color to blue, which affects all but that first little paragraph. The final rule selects only the single paragraph with the ID mainparagraph, it sets the fontweight to bold. Now, if we look at the main informational paragraph we see it's had all three properties applied to it. It's sansserif, blue and bold. The browser applied them all because the selector's in every rule selected for that paragraph. What if we made it so that all three of the rules set the color of paragraphs, how would the browser decide which color to make this paragraph? Let's try it and see. I will add a color orange to the p rule and then a color green to mainparagraph. Now, that main paragraph is green, why is that? How did the browser decide green? It was given three rules that all included that paragraph and they all specified a color property but it seems it only applied the green property. Well, this is where specificity matters. Some rules are considered more specific than other rules in CSS. Generally, an ID is more specific and a class is more specific than an element. That is why mainparagraph won. That's a simple rule you can remember if you're comparing simple selectors but the browser actually follows more complex logic than that. The browser actually calculates what's called a specificity score for each rule and compares the specificity scores to decide. Sometimes what can happen is that two rules could be equally specific, like if we had two rules with class names. Let's see what happens. I'm gonna add another rule in here to select based on the important class which is attach the main paragraph and a strong tag below. I'll start off by making it set a background color, so you can see what it selects. I'll say backgroundcolor yellow and now you can see they both have a back color yellow because there's no other equally specific rule applying a background color, so that wins. However, what if I also put a background color property in this infoparagraph rule and I make that orange, see what happens. Ahha, the strong tag is still yellow but that main paragraph has a background color of orange. How did the browser decide which to pick, of these two equally specific selectors? Here's the rule, in the case that two selectors are equally specific, the last one wins. So if I want that important selector to win, I can cut and paste it below. Tada, it's yellow. That seems kinda scary for do just based on ordering of the rules. If you're applying a style and it's not taking effect because of that, instead of reordering, you could also make the rule more specific by adding more to it to up its specificity score. If I wanted to make sure that infoparagraph always won, I could add p in front of it and now it's more specific. Just by a little bit but enough so that it wins a specificity game with the important selector. Specificity will become more and more important as you write more complex CSS. Keeping in mind, even though it is a little tricky but just keeping in mind, and whenever you're staring at your webpage and wondering, "Hey, browser, "why aren't you applying my properties?" Think carefully about the specificity and ordering of your rules, and that will help you out a lot.