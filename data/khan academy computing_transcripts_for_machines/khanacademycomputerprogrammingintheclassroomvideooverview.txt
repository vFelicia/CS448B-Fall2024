Voiceover First of all thank you for watching this video. We're really excited about CS on Khan Academy and we're happy that there's other people excited too. Even though computer science isn't a part of the core curriculum in U.S. K through 12 education or really anywhere in the world we still think that it's an incredibly important subject to learn. Because when students learn to program, they learn how to think logically, how to break down problems into steps and how to learn from their mistakes. These are skills that they can use outside of programming too. It can also be a great outlet for creativity. Once students know the basics of programming, they can start to include their own ideas and feel like they have the power to invent new things, and they don't need money or time to buy supplies, all they need is their computer and their brain. Personally, I get a surge of adrenaline every time I realize an idea into reality via a program. And every student deserves to feel that. Plus, the statistics show that there'll be a massive number of jobs in computing in the future, more than any other STEM field. So, by teaching them these skills now, they'll be much more likely to go into that field. We wanna get them pumped and prepared. So that's why we have an entire topic dedicated to computer science and programing on Khan Academy. And we look forward to working with teachers like you to figure out how to incorporate it into the classroom. One way is to actually teach it as a subject. If you're lucky enough to work at a school or a summer camp, where CS is a core topic, then you can use the Khan Academy CS curriculum the same way you could use any of the other topics on Khan Academy. We now have a full intro to programming curriculum that teaches JavaScript using the processing JS language. Which means that students learn both a JavaScript language and how to make fun drawings and animations at the same time. So, in this curriculum, go watch talk throughs, where we'll explain a concept and have code on one side and output on the other, and then they'll actually do interactive challenges themselves, which they'll get points for if they complete. And and throughout, they'll also have projects, which are more freeform and creative things, and these are great things that you could actually do pair programming with in the classroom, if you have that opportunity. So this this curriculum here is between 10 to 15 hours, depending on how much time you spend on the challenges and the projects, and will take them all the way through all the basics of JavaScript all the way up to ObjectOriented Design. As a programming teacher, you also have multiple ways of tracking your students activity. For example, you might check out their activity graph and find out what coding challenges they've completed or talk throughs they've watched. You might get the email every week that says you know, what your students have been up to that week. And you can also look at all the programs that your students have been making. You can also use Khan CS for independent study. Let's say you have advanced students, that you wanna keep engaged and they've already blazed through the curriculum that you've given them. Well, you could assign them to learn programming as an independent project. Maybe ask them to go through the programming tutorial, up to a particular point. And have 'em propose a project that ties into what else they're learning. For example, if the student is learning chemistry. They could learn programming, and then write a program to visualize a molecule, like this cool 3D one. Or if they're in math, and they're learning trigonometry they can write these visualizations to show what they've learned. And then, think about it, they could actually share these with the rest of their class, and say, hey, classmates, look at this thing I made to help us visualize what we've learned. And if I were their classmates, I would be really impressed. If I was the student, I'd be really, really proud. You can also use Khan CS for Applied Learning. We've a lot of great programs that demonstrate concepts from math and science, and they're highly interactive. Even if your students don't yet understand programming, you can play with these programs to give them a different understanding of a topic. And you can even tinker with a few of the variables. For example, if students are learning about pendulums, you can point them to this pendulum example, where you can actually play with the angle and the lane. You've seen, I've already had to tinkered with some of the variables. You can change the gravity to be on a completely different planet that, you know, most of us don't get the pleasure of getting to visit. You can change the mass. You can change the radius. So you can tinker both in the UI and in the variables over here for a lot of these simulation programs. And look, I'd managed to do what every school child wants to do when you're on the swingset, be able to swing all the way over. The Holy Grail. For another example, if you're learning the solar system, like in Astronomy, you could use this solar system simulation to see how it is that the planets move around the sun. And then you can just easily tweak the variables on the side. And say, you know, what happens if the Earth moves really, really fast and goes zoomy zoomy zoomy around the Sun. And what happens if the Earth is huge. So you can give students this program and have them tinker with the variables and get them actively engaged in it with thinking about, you know, how the solar system works. And maybe also it gets them thinking about programming and maybe they start to explore programming independently which is something that would be great for schools that don't actually get to teach it as a core topic. Eventually in the future what we're hoping is that you know, all kids will grow up learning how to program and every time they learn something in. You know a math or science or even an art topic, they'll think oh, that's really cool. I wonder if I can make this program to help me understand it even deeper. Right? And I think that's the power of programing is that I can actually connect all these pieces together and help us explore them in a more interactive way. So those are some ways that we thought of about how you can use the Khan CS program. But don't feel limited by them. The world is your programmatic oyster! If you come up with some other way of using it, let us know. We would absolutely love to hear it.