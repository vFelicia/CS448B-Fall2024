[Voiceover] We're back with our groceries table but we've expanded on it a bit. It now has a column for which aisle number we can find the item at the supermarket plus we've added a few more items. You can really see the power of SQL in the different ways that you can retrieve your data from your database. This is also where it can get a bit tricky. To start off simple, how would we retrieve all the rows from our table? To form any query we write select, and then which columns we're interested in, like the name, and then from and the table name that we're selecting from. We can see a list of the groceries on the right under that results section. What if we want all the column names? We can just replace name with star and that was also the query that got inserted when you clicked the table name which you might remember from the first talk through. This list is out of order, though. If we went from top to bottom at the store with this list we'd have to keep changing aisles. We'd rather have it ordered by aisle so that we can be more efficient at the store. To do that we can just add an order by clause to our query, specifying which column we want to order by. That's better, now we can get our ingredients faster. To be even more efficient, my brother and I like to shop together and split the store so that I shop in half the store, he shops in the other half and we meet at the checkout. There are twelve aisles at this grocery store so for my list I just want to know which items are in aisles 6 through 12. Any time we want to filter results out we can use a where clause for this and specify the column name and then what we want to compare it to. In this case I used a greater than operator but there's lots of different comparison operators depending on what it is you were trying to filter by. Great, so now I know exactly what items I'm going to get, I'm going to be really efficent and you've learned a few ways to use SQL to query. Stay tuned to find out even more ways you can select.