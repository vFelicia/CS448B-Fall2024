Welcome to my database. It has no data in it yet because I want to build it up with you. What sort of data should we store in our first table? Let's start with a grocery list, which you've probably used in real life. I'm pasting an example list which has three delicious items and how much we want to buy of each of them. Our first bit of sequel will be the command to make the table to store this list. Alright. CREATE TABLE in all caps and then the name of the table "groceries." And then ( ); We see an error pop up because the sequel interpreter expects to see the column names inside these parenthesis. What column should we have in order to describe each item on our list? Well first we need a name for the item, which I'll call "name" and we need to follow that with a data type. We have a few options. Let's go for TEXT. If we look on the right hand side, we can see our new table is listed with one column. But we also need to specify how many of each thing to buy, like our four bananas. So let's add and quantity column as well. And this will always have a whole number so let's use an integer for that data type. And now we can see that new column listed in our table. That looks pretty good if we're thinking about what data we have in this grocery list. But we're missing something that we need in databases. A unique identifier for each row. We almost always need unique IDs for each row in a database because we need a way to identify rows later when we're updating or deleting them and not be dependent on other columns because those could change. We typically specify this ID column first. So I'm moving my cursor before a name. I'll call this column "id," which that's standard. And then for the data type, I'll have to write this phrase, "INTEGER PRIMARY KEY" which signals to the database that it should treat this as the row identifier and that each row must have a unique value for this column. Okay. Now we have our groceries table with three columns in it. It's empty though so let's put some data in it. Write "INSERT INTO" and then the table name "groceries" then "VALUES" and then ( and here we start listing the column values in the order that we declared the columns. The first column was id so I'll put "1" since we haven't used that id yet. The second column is name so I'll write "bananas" and third column was quantity. So I'll write "4." Do you see how the schema update on the right? It now says that there's one row in the groceries table. So our instruction worked. Let's add the next two items and just doing the same thing. "INSERT INTO groceries" "VALUES (2, "Peanut Butter" and just one of those cause if I say too much and "INSERT INTO groceries VALUES" and id "3, Dark chocolate bars," have to be dark. Milk chocolate is not even chocolate. And we'll get two of those. Okay. So it says three rows but to really see that the database actually contains data you can click the table name on the right. This will insert a select statement in your code. And don't worry too much about this now because we'll get to it in the next video. If you want, you can pause the talk through and try clicking the table name yourself to see what happens. That's it, that's all we needed to create our first table and add data to it. It's pretty cool, huh? In the next section, we'll see how to get the data back out of the table in more interesting ways.