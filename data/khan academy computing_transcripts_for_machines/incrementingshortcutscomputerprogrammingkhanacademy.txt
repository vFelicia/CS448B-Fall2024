[Voiceover] Do you remember the steps of making an animation? Let's review them to see how this ball animation works. So, first, outside of our draw function we declare variables, whatever variables we wanna use in the animation. In this program, we declare four variables x, y, ballWidth, and ballHeight. Then inside our draw function we use those variables and change them in some way. In this program, we use the variables to draw an ellipse, passing a variable for every parameter. And since we are passing a variable for every parameter, that means, actually, that we can animate every aspect of this ellipse. And that's just what we're doing, look at that! So, how are we changing those numbers? That's what we're doing with these lines of code here. On this line we add one to x, which means that the ball moves one pixel to the right in every frame. On this line we subtract two from y, which means that our ball moves two pixels up in every frame. See that? Now, on these lines we're using some math operators that you may not have seen before. This star operator is how we multiply in JavaScript. And the slash operator is how we divide. So this expression here is taking the variable ballWidth and multiplying it by the fraction 99 over 100. Basically, it's making the width be 99% of what it was before. See? And we're doing the same thing on the next line, but with ballHeight. So, each time ballHeight becomes 99% of what is was before. That means, you know, just to show you the math, if ballHeight starts off at 200, then on the second frame it'll be 198 because that's 99% of 200. See? All right. So, we can see that this is the actual effect of our animation. Now, if you look at these four lines of code, you'll notice they all follow a similar pattern. We have a variable, then an equal sign, then that same variable again, then some math operator, and then some number. And you can see that in all four lines of code. This pattern is common in programming because we often take a variable and do some math operation to it and store the result in the same variable. Now, programmers, we don't like to do more work than necessary, so, you know, a long time ago programmers decided, hey, since we use this pattern so much, shouldn't there be an easier way to type it? So, they invented shortcuts. I'll show you. Instead of writing x equals x plus one, we can write x plus equals one and it'll do the same thing. Instead of this, y equals y minus two, we can write y minus equals two. Same thing. Here, we can replace this with times equal. And the same thing on the next line. And when we restart, we can see our animation is precisely the same. All we've done is use the shortcut to write the same expression in less code. There's also a divide equals shortcut if you want to divide instead. Hoo hoo, look at that! That's weird! All right, so now that you know the shortcuts, you can write less code for the same beautiful result. And that is what we programmers love.