[Instructor] I've set up this (indistinct) for us to play with, and it is rather boring indeed. It has no content, and this button does absolutely nothing when I click on it. Let's make the button interactive. When the user clicks on it, the text inside the button should change. The first step is to find the element that we want to listen to events on, and in this case, that's the button, and the button has an ID of clicker so we'll create a clickerButton variable, and use document.getElementById to get it and store it in that variable. The next step is to define a function that will be called once the click event happens. I'll call it onButtonClick, and I'll just put my empty function, and, of course, I need to put something inside of it, or it's not a very exciting function. So to change the button text, we can use the clickerButton variable and set the textContent of it, "Oh wow, you clicked me!" Yay, what a happy button. It's not much code, but we can make it more complicated later, once we get this working. All of our codes has done so far is define variables so still nothing happens when I click the button. The final step to bring it all together is to tell the browser that it should call the function we defined whenever the click event happens on the button that we found. We can do that by calling the add event listener on the button element, clickerButton.addEventListener, and we need to pass two arguments to this method. The first is the name of the event, click, and the second is the function that we wanna call when the click happens, onButtonClick. Now, pause this talkthrough and click the button. Did it work? I hope so. It worked for me. Let's talk more about how this function works because it is a bit tricky. We call this function the event listener function or the callback function, because that's the way we use it. We only want it to get called once the event happens. We usually don't want it to get called when the page loads. If we did want it to be called when the page loads, we'd have to add a line like this at the bottom. Notice the parenthesis after the functioning here. Remember, parentheses is how we call a function. If we leave them off, then we're not calling the function. We're just referring to it, and that's what we're doing when we pass it as an argument here. We're just telling the browser, "Hey, here's the function that you should call later, but not now." So make sure you do not put parentheses after the function name here because then you'll just be passing the return value of the function, not the function itself. If I did accidentally do that, I'd see the button text change on page load and not see any change after. To fix that, I just remove the parentheses that I accidentally added, and now my function only gets called on click. One other way that we could do this is to pass an anonymous function to this method here. An anonymous function is one that does not have a name, and that's just specified inline. I'll copy and paste the addEventListener line and show you the options side by side so you can see what I mean. I'll delete the function name here, and replace it with the function definition itself. Just pasting this in here. Okay, so these two lines of code are doing exactly the same thing. Well, almost exactly. They're both passing in a function with the same code inside. The difference is that the first one is passing in a named function that we defined above, and the second one is defining the anonymous function inline at the same time as passing it. Both techniques work. Many developers prefer named functions because the code is easier to read, and it can be a bit easier to debug, and then you can call the named functions yourself at other times or from other events, but it's up to you what to use. Just don't use both at once because then the browser will end up calling both functions when a click happens, and there's no point to calling this function both times. I'll go ahead and delete the anonymous function version since I prefer the first way. There's a lot that you can do now that you know how to add event listeners. You could add them to more parts of your page. You could listen to different events, which we'll talk about next, and you could modify the DOM in any of the ways that you learned earlier, and you don't just have to modify the element that was just interacted with. You could modify anything on the page. Try it out. Find out what you can do.