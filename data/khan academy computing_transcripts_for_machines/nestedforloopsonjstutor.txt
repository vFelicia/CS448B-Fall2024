[Narrator] This is a tool that will help us visualize exactly what the computer's doing. The line of code that's on, the memory it's storing and what it's out putting. So let's begin. The computer will start at the very beginning in the header of the outer for loop. The first thing it does, is initialize the variable I to one. We can see here, that it says in memory I is now equal to one. The next thing it does, is check that I is less than or equal to 10. Since one is less than 10, that's true and now the computer knows, it can enter this for loop body, here. So let's go next. Inside the for loop, it sees another for loop. This one has a very similar header. But this time it's going to set a different variable, J. So it sets J equal to one and we can see that the memory is updated. And it checks to make sure that J is less than or equal to 10, which it is. And that means it can continue into the body of this inner for loop. It goes into the body and sees this console.log statement. Now here I'm using console.log instead of print line, because it's a slightly different environment, but it does the same thing. So when it executes that, it'll multiply I times J. We can see I is one and J is one. So we're gonna get a very exciting, one, beautiful! All right now, it goes back to this inner for loop. Because it's not don't with it yet. The first thing it needs to do is execute this increment part, because that always happens at the end of a repetition. So once it does that, you can see that J is now two. So now it's going to check the condition to see if it's still true. Is J still less than or equal to 10. It is, so that means it can keep going into the body of this loop. And once again, it's going to display I times J. This time J is two and I is still one. So we're gonna see two, great. So, now it goes back once again to the inner for loop. It's going to change J to three, see that it's less than 10. Go into the loop. Execute that there. And this is how we're gonna get through the first multiples, all the way, you know, up to 10, ready? Up to nine. And the final execution, will be when J is 10. Once it's set J equal to 10 and gets to 11, it can no longer enter this loop. Because it says, is 11 less than or equal to 10? No, it is not. At that point, it knows that this loop is done, it's going to exit it and go back to the outer for loop, here. So now it goes back. And in this outer for loop, I is still only equal to one, and it hasn't executed this I plus plus, yet. It finally needs to do this now that it's done executing the inside instructions. So we should see, I become two, very good. Now it's two. And now we can see, oh, is two less than or equal to 10? Yes it is. And it's gonna go inside to that inner for loop. And execute that inner for loop. Now see that J resets to one. So that's really interesting, because it's starting all over again with this for loop. So now when it gets here, it's gonna do I times J, this times it's doing two times one. We're gonna see two. So this time, I is gonna be two, the whole time. And J is gonna go from one to 10. So we should see two times one and then we should see, two times two. And then we should see, two times three, and so on. So this'll keep going until it gets to J equals 10 and then it's going to go back up to that outer for loop, and I will become three and it'll keep going and keep going. So hopefully this gives you an idea for what is actually happening with the computer behind the scenes. If you want, you can try out this visualization yourself and go all the way through every execution of the code, all 342 steps.