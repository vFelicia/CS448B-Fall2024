With timestamps:

00:00 - gracie fuzz is working on a puzzle but
00:02 - she needs your help
00:04 - she's looking for a piece that will fit
00:06 - right here
00:08 - can you help her
00:09 - which of these puzzle pieces do you
00:11 - think will fit
00:12 - when solving a problem like this
00:14 - try breaking it down into a series of
00:16 - steps
00:17 - first think about the problem
00:19 - a puzzle piece is missing and we need to
00:21 - figure out which one it is
00:23 - then make a hypothesis
00:25 - based on the information in front of you
00:27 - and what you already know about puzzles
00:30 - choose the one you think will work best
00:32 - you likely know that for a puzzle piece
00:34 - to fit both the shape and color need to
00:37 - match the pieces around it
00:40 - this one appears to have the correct
00:42 - color but it's the wrong shape
00:45 - this one looks to have the right shape
00:47 - but it's the wrong color
00:49 - how about this one it seems to be the
00:51 - right shape and the right color
00:54 - then test it out
00:56 - place the puzzle piece and observe the
00:57 - results it's a perfect fit
01:00 - in programming when two things have the
01:02 - same value it's called equality
01:06 - this double equal sign is known as the
01:08 - equality operator
01:10 - it's kind of like your own personal
01:12 - detective who works double time to check
01:15 - whether the value of the thing on the
01:17 - left side of the double equal sign
01:19 - is the same as the value on the right
01:23 - once the operator does its check it will
01:25 - return a value of true or false
01:29 - if the values are equal
01:31 - then the result is true
01:33 - if the values are not equal
01:36 - then the result is false
01:38 - true and false are boolean values and a
01:42 - computer uses booleans to help make
01:44 - decisions about what to do next here's
01:46 - an example you might have seen in real
01:48 - life
01:49 - think about a computer program that
01:51 - controls whether or not you can unlock a
01:53 - smartphone
01:55 - the program would say something like
01:57 - if you enter the correct password
01:59 - then you can log in
02:02 - this is a conditional statement
02:04 - you can only log in
02:06 - if this condition is true
02:09 - so how does your device know if a
02:11 - password attempt is correct
02:14 - when you type in your password the
02:15 - program will compare it with your stored
02:18 - password using the trusted equality
02:21 - operator
02:23 - the operator will check to see if the
02:25 - two values are equal if the entered
02:27 - password and the stored password are not
02:30 - equal
02:31 - then the result is false and you can't
02:34 - log in but if the operator finds that
02:37 - the two values are equal then the result
02:40 - is true and then you go
02:43 - now you can see how equality booleans
02:46 - and conditions all work together to
02:48 - control how a program behaves and when
02:51 - certain things can happen
02:52 - let's look at how equality works in
02:54 - codable
02:56 - in order for our fuzz to reach the end
02:58 - of the maze it needs to be able to roll
03:00 - through this tunnel but the tunnel door
03:03 - is closed
03:04 - we are looking for the right key that
03:06 - will open the door
03:08 - let's try coding our fuzz to roll
03:10 - through the maze and pick up a key along
03:13 - the way
03:15 - uh-oh the key our fuzz collects must
03:18 - have a shape value and color value that
03:22 - are equal to the shape and color on the
03:25 - tunnel
03:26 - pink circle and orange diamond are not
03:29 - equal so the tunnel door stays closed
03:33 - let's try again
03:34 - this time we'll code our fuzz to collect
03:37 - the orange diamond key
03:40 - orange diamond is equal to orange
03:42 - diamond the tunnel door opens and our
03:45 - fuzz can roll through
03:47 - happy coding

Cleaned transcript:

gracie fuzz is working on a puzzle but she needs your help she's looking for a piece that will fit right here can you help her which of these puzzle pieces do you think will fit when solving a problem like this try breaking it down into a series of steps first think about the problem a puzzle piece is missing and we need to figure out which one it is then make a hypothesis based on the information in front of you and what you already know about puzzles choose the one you think will work best you likely know that for a puzzle piece to fit both the shape and color need to match the pieces around it this one appears to have the correct color but it's the wrong shape this one looks to have the right shape but it's the wrong color how about this one it seems to be the right shape and the right color then test it out place the puzzle piece and observe the results it's a perfect fit in programming when two things have the same value it's called equality this double equal sign is known as the equality operator it's kind of like your own personal detective who works double time to check whether the value of the thing on the left side of the double equal sign is the same as the value on the right once the operator does its check it will return a value of true or false if the values are equal then the result is true if the values are not equal then the result is false true and false are boolean values and a computer uses booleans to help make decisions about what to do next here's an example you might have seen in real life think about a computer program that controls whether or not you can unlock a smartphone the program would say something like if you enter the correct password then you can log in this is a conditional statement you can only log in if this condition is true so how does your device know if a password attempt is correct when you type in your password the program will compare it with your stored password using the trusted equality operator the operator will check to see if the two values are equal if the entered password and the stored password are not equal then the result is false and you can't log in but if the operator finds that the two values are equal then the result is true and then you go now you can see how equality booleans and conditions all work together to control how a program behaves and when certain things can happen let's look at how equality works in codable in order for our fuzz to reach the end of the maze it needs to be able to roll through this tunnel but the tunnel door is closed we are looking for the right key that will open the door let's try coding our fuzz to roll through the maze and pick up a key along the way uhoh the key our fuzz collects must have a shape value and color value that are equal to the shape and color on the tunnel pink circle and orange diamond are not equal so the tunnel door stays closed let's try again this time we'll code our fuzz to collect the orange diamond key orange diamond is equal to orange diamond the tunnel door opens and our fuzz can roll through happy coding
