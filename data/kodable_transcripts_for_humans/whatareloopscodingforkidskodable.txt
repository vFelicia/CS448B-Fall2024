With timestamps:

00:00 - let's go think about a task where you
00:06 - have to do the same thing multiple times
00:08 - let's say you have to clear the table
00:11 - after a family dinner you pick up a
00:14 - plate bring it to the sink wash it off
00:18 - and dry not too hard right but what if
00:22 - you have a big family and you need to do
00:25 - this for every family members dish maybe
00:28 - this means repeating the same task six
00:31 - times
00:32 - computers require very specific
00:34 - instructions to perform their tasks so
00:37 - if you wanted to tell your robot friend
00:39 - to do the dishes instead you couldn't
00:41 - just say clean all the dishes it's not
00:45 - specific enough if you want a computer
00:47 - to repeat the same action six times you
00:50 - would need to write six separate lines
00:52 - of code the same exact instructions over
00:55 - and over and over so annoying right
00:58 - fortunately there is a way to tell a
01:00 - computer to repeat an action without
01:03 - needing to repeat all the code this
01:06 - command is called a loop in programming
01:11 - loops are the third of the flow control
01:13 - structures and allow us to use just one
01:16 - command to repeat the same process
01:18 - multiple times and complete a task
01:22 - loop's are all about keeping your code
01:25 - dry dry means don't repeat yourself so
01:33 - what's the problem with repetition
01:34 - well typing out the same code over and
01:37 - over increases programming time also if
01:41 - you have to write the same thing again
01:42 - and again you're more likely to make a
01:45 - mistake somewhere
01:46 - make your code shorter with a loop now
01:50 - it's easier to debug and save you time
01:52 - so what does a loop look like in a
01:55 - program well in JavaScript loops look
01:58 - like this this code will loop six times
02:03 - but in potable this is what we use to
02:06 - program a loop this loop err will repeat
02:09 - two commands a certain number of times
02:11 - to achieve an outcome a block of code
02:15 - like this works the same as code like
02:18 - this in both your Fuzz will move right
02:21 - up right up but what do you notice about
02:27 - the two programs this first option is
02:31 - shorter and drier it will only take up
02:34 - one command bin in the game the second
02:38 - option is not try at all it uses four
02:41 - commands and repeats the same commands
02:43 - twice now it's your turn use as few
02:48 - commands as possible to get the fuzz
02:50 - through the maze start by looking at the
02:52 - maze for patterns here I want my fuzz to
02:56 - move right and then down right down
03:00 - right down right instead of dragging out
03:04 - all those repeating commands I can use
03:06 - the looper and set it to loop the
03:09 - commands down and right three times
03:15 - I went from needing six commands to only
03:18 - one when you think you figured out how
03:21 - to dry up your code like this test it
03:23 - out good luck if you liked this video
03:31 - let us know by giving it a thumbs up and
03:34 - be sure to subscribe if you want to see
03:36 - more happy coding

Cleaned transcript:

let's go think about a task where you have to do the same thing multiple times let's say you have to clear the table after a family dinner you pick up a plate bring it to the sink wash it off and dry not too hard right but what if you have a big family and you need to do this for every family members dish maybe this means repeating the same task six times computers require very specific instructions to perform their tasks so if you wanted to tell your robot friend to do the dishes instead you couldn't just say clean all the dishes it's not specific enough if you want a computer to repeat the same action six times you would need to write six separate lines of code the same exact instructions over and over and over so annoying right fortunately there is a way to tell a computer to repeat an action without needing to repeat all the code this command is called a loop in programming loops are the third of the flow control structures and allow us to use just one command to repeat the same process multiple times and complete a task loop's are all about keeping your code dry dry means don't repeat yourself so what's the problem with repetition well typing out the same code over and over increases programming time also if you have to write the same thing again and again you're more likely to make a mistake somewhere make your code shorter with a loop now it's easier to debug and save you time so what does a loop look like in a program well in JavaScript loops look like this this code will loop six times but in potable this is what we use to program a loop this loop err will repeat two commands a certain number of times to achieve an outcome a block of code like this works the same as code like this in both your Fuzz will move right up right up but what do you notice about the two programs this first option is shorter and drier it will only take up one command bin in the game the second option is not try at all it uses four commands and repeats the same commands twice now it's your turn use as few commands as possible to get the fuzz through the maze start by looking at the maze for patterns here I want my fuzz to move right and then down right down right down right instead of dragging out all those repeating commands I can use the looper and set it to loop the commands down and right three times I went from needing six commands to only one when you think you figured out how to dry up your code like this test it out good luck if you liked this video let us know by giving it a thumbs up and be sure to subscribe if you want to see more happy coding
