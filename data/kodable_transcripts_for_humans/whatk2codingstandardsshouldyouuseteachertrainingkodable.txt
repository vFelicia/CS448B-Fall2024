With timestamps:

00:07 - [Music]
00:14 - so to kick off this training we'll start
00:16 - by talking about k2 coding standards
00:19 - which standards exist where to find them
00:22 - um which ones we recommend and more and
00:25 - the reason we'll start here is because
00:27 - this is a big question we hear from a
00:29 - lot of teachers
00:30 - questions like
00:32 - what should i be teaching i want to
00:33 - teach coding in my early elementary
00:35 - classroom but what should i actually be
00:37 - covering
00:38 - what are my students capable of of
00:41 - learning what is developmentally
00:43 - appropriate for my
00:45 - age group my grade band and this big one
00:48 - like where do i start so we'll cover
00:50 - some k2 coding standards today that
00:53 - hopefully will help guide you on your
00:55 - journey
00:58 - um so to start computer science is a
01:01 - super interesting field i'm sure you
01:03 - know this if you're attending this
01:04 - webinar but it's it's relatively very
01:07 - new to elementary grades and i find that
01:11 - it can be tricky to teach and plan
01:14 - uh for this because many teachers
01:16 - approach
01:18 - computer science expecting it to be
01:21 - measurable and trackable in a similar
01:23 - way to other subjects they might teach
01:25 - like math or english and a big
01:27 - difference here is that there is not one
01:29 - nationally recognized set of computer
01:32 - science standards
01:33 - um out there so there's really no
01:37 - one right or wrong way to teach it and
01:41 - this can be
01:42 - like a blessing and a curse right no
01:44 - national standards or worldwide
01:46 - standards means potentially more freedom
01:49 - and flexibility for teachers but it can
01:51 - also translate into a lack of guidance
01:55 - or a lack of structure
01:57 - so i think it is helpful and important
01:59 - to have some guiding learning outcomes
02:02 - that when you ask yourself the question
02:05 - what should my k2 students really be
02:08 - learning in early elementary coding it's
02:11 - it's sort of these three things i've
02:12 - synthesized them from a bunch of
02:14 - different learning standards out there
02:16 - so the expectation would be that
02:18 - students will be able to
02:21 - understand coding concepts as they
02:22 - relate to their own lives so we might
02:26 - not expect our kindergartner to be able
02:28 - to perfectly define what a function is
02:31 - in code but they probably will be able
02:34 - to identify
02:36 - something similar to a function in their
02:38 - everyday life so they'll develop an
02:41 - understanding of the concepts they might
02:42 - not be able to define them exactly but
02:45 - they'll understand them in a theoretical
02:47 - way
02:48 - the second would be to develop a
02:51 - relationship
02:52 - their own relationship with technology
02:55 - your students are coming into a coding
02:57 - class with a vast array of past
03:00 - experiences with technology and there's
03:03 - not going to be one way that they
03:06 - interact with it so our expectation is
03:09 - that students will be able to develop
03:10 - their own relationship to technology to
03:12 - understand how to use it safely for them
03:16 - and finally we expect students to be
03:19 - able to grow their programming mindsets
03:21 - and habits basically foster
03:23 - computational thinking skills
03:25 - and uh
03:27 - i bring up these three main themes
03:29 - because i don't want you to get bogged
03:31 - down in the exact standards that your
03:33 - curriculum aligns with
03:35 - and these three learning outcomes are
03:38 - kind of the most important most agreed
03:40 - upon among coding organizations so as
03:42 - long as you're focused on these you're
03:44 - going to do great that said there are
03:47 - some standards
03:48 - that are more widely used for alignment
03:51 - and if your school or just you as a
03:53 - teacher
03:54 - wishes to have a strong emphasis on
03:57 - specific learning outcomes and standards
03:59 - i'll highlight
04:00 - some main ones now and hopefully that
04:02 - will be useful for you
04:07 - so
04:08 - in brief you guys know why standards
04:11 - matter
04:12 - but i really appreciate them because i
04:15 - feel like they are a good way to
04:17 - articulate what students should know
04:20 - before moving on to the next step of
04:22 - their learning so it's kind of that way
04:25 - to
04:26 - have some sort of a common vocabulary
04:30 - about what kids are learning be able to
04:31 - communicate them with fellow peers or
04:35 - parents or caregivers
04:37 - just kind of have that that background
04:39 - when you're talking about the learning
04:41 - outcomes so here i've just mentioned why
04:44 - standards matter at a high level they
04:46 - help set expectations of course
04:49 - they draw a line in the sand meaning
04:51 - that
04:53 - meaning that they
04:55 - establish kind of a baseline for what it
04:57 - means to master a subject and can be
05:00 - used to you know like i said communicate
05:02 - with other teachers and parents um
05:05 - in relation to that baseline
05:08 - and the most important one for me i feel
05:10 - like they facilitate greater
05:12 - collaboration and innovation you know if
05:14 - we have a bunch of teachers that agree
05:17 - on a set of computer science standards
05:19 - they might be able to
05:20 - develop learning materials or share
05:23 - resources
05:24 - that make it a lot easier for for the
05:26 - rest of us
05:28 - and here's a list of
05:30 - some standards that do exist for k2
05:33 - coding and we'll touch briefly on
05:35 - each one and i did see that
05:38 - patty in the chat mentioned that
05:40 - um they're using digital literacy
05:42 - standards from the uk
05:44 - these are um the standards that i'll go
05:46 - over today are usa
05:49 - based but if you reach out to us
05:51 - directly i am more than happy to
05:53 - collaborate with you on your specific
05:55 - standards the big takeaway here is that
05:58 - whatever your standards are
06:01 - um there are coding tools out there that
06:03 - will align with them and we're happy to
06:05 - help you find that
06:08 - so first up we'll cover csta the
06:11 - computer science teachers association
06:13 - and uh usc csta describes themselves on
06:17 - their website as a dedicated team
06:19 - teacher-led team i'm focused on creating
06:22 - a strong environment to support k-12
06:25 - educators so this ranges way past k2 all
06:29 - the way into 12th grade and these
06:32 - standards were released in 2017
06:35 - with the purpose of delineating like the
06:38 - core learning objectives
06:40 - uh to basically provide a foundation for
06:43 - computer science curriculum again like i
06:45 - mentioned on the k-12
06:47 - level
06:48 - and here's a list of some of the
06:51 - concepts that they emphasize in their
06:54 - in their standards
06:56 - and they also highlight different
06:58 - practices which include softer skills
07:01 - like collaboration and communication so
07:05 - as you can see csta is really
07:07 - emphasizing
07:09 - that k2 students can grasp some of these
07:13 - coding concepts computer systems data
07:15 - and analysis the impacts of
07:17 - of computing excuse me so that's how you
07:20 - can see how they organize their
07:22 - standards
07:25 - second there's iste it stands for the
07:27 - international society for technology in
07:30 - education
07:31 - and from their website they mentioned
07:33 - that they provide competencies for
07:35 - learning teaching and leading in the
07:38 - digital age with a hope of providing
07:41 - um like a comprehensive roadmap for
07:44 - effective technology use for schools
07:47 - worldwide
07:48 - and their standards are really
07:50 - interesting they're aligned to the un
07:52 - sustainable development goals
07:55 - um which set out like a comprehensive
07:58 - global vision to address like worldwide
08:01 - challenges of our time so isti grounds
08:05 - their
08:06 - uh their standards in real world
08:09 - problems and experiences and you can see
08:11 - that echoed in
08:13 - the way that they organize their
08:14 - standards they they're really about the
08:17 - human
08:18 - um really learner focused so they talk
08:20 - about different skills that a learner
08:22 - can develop to become
08:24 - all of these different labels an
08:26 - empowered learner a digital citizen i'm
08:28 - an innovative designer
08:30 - so they really believe that
08:33 - in order for students to be able to
08:35 - thrive in a constantly evolving
08:37 - technological landscape that there are
08:40 - certain computer science skills that
08:42 - will help them get there
08:46 - awesome and moving on to codable of
08:48 - course i'm going to mention it because
08:50 - this is the app that i'm most familiar
08:51 - with but in 2017 codable had a group of
08:55 - computer science experts who knew a lot
08:58 - about csta and a lot about iste and
09:00 - common core come together to create a
09:02 - new set of computer science standards
09:04 - that are aligned with all of these other
09:06 - ones sort of a merging of them all since
09:10 - again there's no one single agreed-upon
09:13 - set of standards so codable's mission in
09:15 - 2017 was to synthesize it all and
09:18 - highlight a mix of programming content
09:21 - knowledge plus
09:23 - social emotional learning and
09:24 - communication and other skills like that
09:27 - so i've listed um the different titles
09:30 - for the codable standards this is how we
09:32 - organize our learning outcomes and you
09:34 - can see that it's sort of a mix of csta
09:37 - and iste
09:38 - really highlighting computational
09:40 - thinking and programming concepts while
09:42 - also emphasizing you know pro the impact
09:45 - of programming and what it means for the
09:48 - learner
09:52 - and finally i do want to touch on the
09:54 - common core again this is usa-based um
09:58 - but i wanted to bring up these standards
10:00 - because they are so well known
10:02 - and there's not a computer science
10:05 - section of the standards yet uh so i
10:08 - hear from teachers sometimes that they
10:09 - are required to meet certain common core
10:12 - standards and that's the reason they
10:14 - give for why they don't want to or can't
10:18 - introduce computer science into their
10:19 - classroom because there's not a lot of
10:21 - time to
10:23 - teach towards the common core while also
10:26 - teaching like an extra or supplementary
10:29 - subject
10:30 - and while they do not have a computer
10:33 - science section of the common core
10:35 - there is a ton of overlap between common
10:38 - core math and english and different
10:41 - computer science concepts so
10:44 - for example the common core standards
10:46 - for math
10:47 - uh i believe for first grade and
10:50 - kindergarten there's a couple that touch
10:52 - on
10:53 - number sequence
10:54 - and that can be
10:56 - really easily connected to the coding
10:59 - concept of sequence like why sequence is
11:01 - important on
11:02 - a broader scale so
11:05 - coding in subjects like math and
11:06 - literacy they definitely complement each
11:08 - other and my recommendation would be to
11:11 - take
11:12 - you know five minutes to review the
11:14 - codable standards or csta and five
11:16 - minutes to look at the standards that
11:18 - you are required to follow for your
11:20 - educational setting
11:22 - and
11:23 - whether that be common core or something
11:25 - else set from your district look for
11:27 - areas of overlap when you're teaching
11:30 - computer science know that you are
11:32 - contributing to the
11:34 - development of knowledge that students
11:36 - will definitely find useful in other
11:38 - areas of school
11:40 - and life
11:43 - so as we wrap up this section of the
11:45 - webinar about standards i just have a
11:47 - couple
11:48 - few final considerations for you to keep
11:51 - in mind things that you likely already
11:53 - know but that's a good review when
11:55 - thinking specifically about computer
11:57 - science
11:59 - first
12:00 - standards are not one size fits all and
12:03 - we absolutely need to consider
12:05 - our students with different learning
12:07 - needs
12:08 - standards are good as a guide
12:10 - but it's why i would recommend not just
12:13 - focusing on one set of standards and
12:15 - making sure all of your lessons and all
12:17 - of your projects
12:19 - align with it perfectly it's going to
12:22 - evolve and change based on the
12:24 - individual needs of your students
12:27 - second you and your students are not
12:29 - failures if they or you don't meet
12:33 - certain standards i mean there are so
12:35 - many social emotional
12:37 - critical thinking skills that students
12:39 - are developing while coding that may be
12:42 - trickier to capture in the standards so
12:46 - just keep that in mind if you're hitting
12:48 - those three points that i mentioned
12:49 - before about like understanding a
12:51 - foundational
12:53 - baseline of computational thinking then
12:56 - you're doing great
12:59 - third computer science learning is
13:02 - still extremely new for elementary
13:05 - students in comparison to other subjects
13:08 - and the standards will
13:10 - evolve so we don't want to pigeonhole
13:13 - ourselves creating curriculum that
13:15 - perfectly aligns with csta as it exists
13:17 - today because it will change and evolve
13:20 - i mean technology as we know is changing
13:22 - and evolving so rapidly so just keep
13:25 - that in mind
13:26 - and finally the standards are not
13:28 - telling you what to do
13:30 - you can use your rich knowledge of
13:32 - education and best practices
13:36 - and what your unique students need to
13:37 - determine what evaluation tools to use
13:40 - you really get to decide what success
13:43 - looks like in your compsci classroom
13:45 - and that's a wonderful freedom
13:52 - [Music]

Cleaned transcript:

so to kick off this training we'll start by talking about k2 coding standards which standards exist where to find them um which ones we recommend and more and the reason we'll start here is because this is a big question we hear from a lot of teachers questions like what should i be teaching i want to teach coding in my early elementary classroom but what should i actually be covering what are my students capable of of learning what is developmentally appropriate for my age group my grade band and this big one like where do i start so we'll cover some k2 coding standards today that hopefully will help guide you on your journey um so to start computer science is a super interesting field i'm sure you know this if you're attending this webinar but it's it's relatively very new to elementary grades and i find that it can be tricky to teach and plan uh for this because many teachers approach computer science expecting it to be measurable and trackable in a similar way to other subjects they might teach like math or english and a big difference here is that there is not one nationally recognized set of computer science standards um out there so there's really no one right or wrong way to teach it and this can be like a blessing and a curse right no national standards or worldwide standards means potentially more freedom and flexibility for teachers but it can also translate into a lack of guidance or a lack of structure so i think it is helpful and important to have some guiding learning outcomes that when you ask yourself the question what should my k2 students really be learning in early elementary coding it's it's sort of these three things i've synthesized them from a bunch of different learning standards out there so the expectation would be that students will be able to understand coding concepts as they relate to their own lives so we might not expect our kindergartner to be able to perfectly define what a function is in code but they probably will be able to identify something similar to a function in their everyday life so they'll develop an understanding of the concepts they might not be able to define them exactly but they'll understand them in a theoretical way the second would be to develop a relationship their own relationship with technology your students are coming into a coding class with a vast array of past experiences with technology and there's not going to be one way that they interact with it so our expectation is that students will be able to develop their own relationship to technology to understand how to use it safely for them and finally we expect students to be able to grow their programming mindsets and habits basically foster computational thinking skills and uh i bring up these three main themes because i don't want you to get bogged down in the exact standards that your curriculum aligns with and these three learning outcomes are kind of the most important most agreed upon among coding organizations so as long as you're focused on these you're going to do great that said there are some standards that are more widely used for alignment and if your school or just you as a teacher wishes to have a strong emphasis on specific learning outcomes and standards i'll highlight some main ones now and hopefully that will be useful for you so in brief you guys know why standards matter but i really appreciate them because i feel like they are a good way to articulate what students should know before moving on to the next step of their learning so it's kind of that way to have some sort of a common vocabulary about what kids are learning be able to communicate them with fellow peers or parents or caregivers just kind of have that that background when you're talking about the learning outcomes so here i've just mentioned why standards matter at a high level they help set expectations of course they draw a line in the sand meaning that meaning that they establish kind of a baseline for what it means to master a subject and can be used to you know like i said communicate with other teachers and parents um in relation to that baseline and the most important one for me i feel like they facilitate greater collaboration and innovation you know if we have a bunch of teachers that agree on a set of computer science standards they might be able to develop learning materials or share resources that make it a lot easier for for the rest of us and here's a list of some standards that do exist for k2 coding and we'll touch briefly on each one and i did see that patty in the chat mentioned that um they're using digital literacy standards from the uk these are um the standards that i'll go over today are usa based but if you reach out to us directly i am more than happy to collaborate with you on your specific standards the big takeaway here is that whatever your standards are um there are coding tools out there that will align with them and we're happy to help you find that so first up we'll cover csta the computer science teachers association and uh usc csta describes themselves on their website as a dedicated team teacherled team i'm focused on creating a strong environment to support k12 educators so this ranges way past k2 all the way into 12th grade and these standards were released in 2017 with the purpose of delineating like the core learning objectives uh to basically provide a foundation for computer science curriculum again like i mentioned on the k12 level and here's a list of some of the concepts that they emphasize in their in their standards and they also highlight different practices which include softer skills like collaboration and communication so as you can see csta is really emphasizing that k2 students can grasp some of these coding concepts computer systems data and analysis the impacts of of computing excuse me so that's how you can see how they organize their standards second there's iste it stands for the international society for technology in education and from their website they mentioned that they provide competencies for learning teaching and leading in the digital age with a hope of providing um like a comprehensive roadmap for effective technology use for schools worldwide and their standards are really interesting they're aligned to the un sustainable development goals um which set out like a comprehensive global vision to address like worldwide challenges of our time so isti grounds their uh their standards in real world problems and experiences and you can see that echoed in the way that they organize their standards they they're really about the human um really learner focused so they talk about different skills that a learner can develop to become all of these different labels an empowered learner a digital citizen i'm an innovative designer so they really believe that in order for students to be able to thrive in a constantly evolving technological landscape that there are certain computer science skills that will help them get there awesome and moving on to codable of course i'm going to mention it because this is the app that i'm most familiar with but in 2017 codable had a group of computer science experts who knew a lot about csta and a lot about iste and common core come together to create a new set of computer science standards that are aligned with all of these other ones sort of a merging of them all since again there's no one single agreedupon set of standards so codable's mission in 2017 was to synthesize it all and highlight a mix of programming content knowledge plus social emotional learning and communication and other skills like that so i've listed um the different titles for the codable standards this is how we organize our learning outcomes and you can see that it's sort of a mix of csta and iste really highlighting computational thinking and programming concepts while also emphasizing you know pro the impact of programming and what it means for the learner and finally i do want to touch on the common core again this is usabased um but i wanted to bring up these standards because they are so well known and there's not a computer science section of the standards yet uh so i hear from teachers sometimes that they are required to meet certain common core standards and that's the reason they give for why they don't want to or can't introduce computer science into their classroom because there's not a lot of time to teach towards the common core while also teaching like an extra or supplementary subject and while they do not have a computer science section of the common core there is a ton of overlap between common core math and english and different computer science concepts so for example the common core standards for math uh i believe for first grade and kindergarten there's a couple that touch on number sequence and that can be really easily connected to the coding concept of sequence like why sequence is important on a broader scale so coding in subjects like math and literacy they definitely complement each other and my recommendation would be to take you know five minutes to review the codable standards or csta and five minutes to look at the standards that you are required to follow for your educational setting and whether that be common core or something else set from your district look for areas of overlap when you're teaching computer science know that you are contributing to the development of knowledge that students will definitely find useful in other areas of school and life so as we wrap up this section of the webinar about standards i just have a couple few final considerations for you to keep in mind things that you likely already know but that's a good review when thinking specifically about computer science first standards are not one size fits all and we absolutely need to consider our students with different learning needs standards are good as a guide but it's why i would recommend not just focusing on one set of standards and making sure all of your lessons and all of your projects align with it perfectly it's going to evolve and change based on the individual needs of your students second you and your students are not failures if they or you don't meet certain standards i mean there are so many social emotional critical thinking skills that students are developing while coding that may be trickier to capture in the standards so just keep that in mind if you're hitting those three points that i mentioned before about like understanding a foundational baseline of computational thinking then you're doing great third computer science learning is still extremely new for elementary students in comparison to other subjects and the standards will evolve so we don't want to pigeonhole ourselves creating curriculum that perfectly aligns with csta as it exists today because it will change and evolve i mean technology as we know is changing and evolving so rapidly so just keep that in mind and finally the standards are not telling you what to do you can use your rich knowledge of education and best practices and what your unique students need to determine what evaluation tools to use you really get to decide what success looks like in your compsci classroom and that's a wonderful freedom
