00:01 - many of you have requested a video about
00:03 - aws eks or elastic kubernetes service
00:08 - so that's what we'll be covering in this
00:10 - video
00:11 - we'll go through what is eks how to use
00:15 - it and the actual demo
00:17 - of creating a kubernetes cluster with
00:19 - eks
00:20 - the easy way for a quick overview aws is
00:23 - one of the most popular
00:24 - cloud platforms which has a tons of
00:27 - services for different use cases
00:30 - and eks elastic kubernetes service is
00:33 - just
00:33 - one of those many services so what is
00:36 - eks
00:38 - it is a managed kubernetes cluster
00:41 - meaning
00:41 - aws will manage the master nodes for you
00:45 - it will create the masternodes install
00:48 - all the necessary applications on them
00:50 - like
00:50 - container runtime kubernetes master
00:53 - processes
00:54 - it will take care of scaling it when
00:56 - needed doing backups on that
00:58 - etc so if you have a small team of
01:01 - people then usually it's a good idea to
01:03 - let the platform
01:05 - do this maintenance for you so you can
01:07 - focus on deploying
01:08 - your applications in kubernetes without
01:11 - worrying about whether masternodes are
01:13 - properly backed up
01:15 - etc this means you only create and worry
01:18 - about the worker nodes
01:20 - so let's see how you can use eks
01:23 - suppose you and your team have a small
01:26 - project which you want to run
01:27 - in kubernetes and you want to do that
01:29 - with eks
01:31 - in order to create the cluster with eks
01:34 - they're following
01:34 - steps involved before you even create a
01:38 - cluster you need to do some
01:39 - setup or preparation first of all
01:42 - obviously you need to create an aws
01:44 - account there is a free tier for one
01:47 - year when you're
01:48 - a new user so you can take advantage of
01:51 - that
01:52 - then you have to create or have a vpc
01:54 - it's basically your virtual
01:56 - private space in aws basically a space
02:00 - where you do your own stuff it doesn't
02:02 - interfere with other aws users
02:06 - in the cloud that's basically what vpc
02:08 - is then you have to create
02:10 - an iam role with security group these
02:13 - two
02:13 - terms in my opinion are too obscure so
02:16 - here's a human translation for you
02:19 - you have to create an aws user with a
02:22 - list of permissions
02:24 - permissions to create and do stuff with
02:27 - eks service
02:28 - once you have these things set up now
02:30 - you can go and create the
02:32 - control plane of the cluster meaning the
02:35 - masternodes
02:36 - you create the cluster with the aws role
02:39 - or this iam
02:40 - role which obviously has to have a
02:42 - permission to create and configure the
02:44 - eks cluster
02:46 - here just choose some basic information
02:48 - like name of the cluster which
02:49 - kubernetes version you want
02:51 - which region your cluster should run in
02:54 - and so on
02:54 - you set some security for your cluster
02:57 - and note that you can do this setup
02:59 - or creating the cluster process you can
03:02 - do that either using
03:03 - aws ui or management console
03:06 - or aws command line the next step once
03:10 - you have the control plane once
03:11 - aws creates all these master nodes you
03:14 - have to create
03:15 - worker nodes and connect that to cluster
03:18 - on aws these worker nodes will be some
03:20 - ec2
03:21 - instances with certain cpu ram and
03:24 - storage resources
03:25 - so how do we create worker nodes and add
03:28 - them to the cluster
03:29 - we create them as node group or group of
03:32 - nodes
03:33 - and not a separate ec2 instances when
03:36 - you create a node group you choose the
03:38 - cluster it will attach to or join to
03:41 - you define also security group for that
03:43 - you select the instance type
03:45 - of ec2 instances so basically you choose
03:48 - which resources your
03:49 - ec2 instances should have and with node
03:52 - group you also have
03:53 - auto scaling which is pretty cool
03:55 - because based on your needs
03:57 - or based on the cluster needs depending
03:59 - on how much
04:00 - load the cluster has new
04:03 - worker nodes will automatically be added
04:05 - or removed in the cluster
04:07 - so for that you define maximum and
04:09 - minimum number of nodes
04:11 - so maximum number of nodes it should
04:13 - scale up to
04:14 - and minimum number of nodes it should
04:16 - scale down to
04:18 - and you have some other configuration as
04:20 - well and once you
04:22 - create the node group as well so you
04:23 - have your worker nodes connected to the
04:25 - cluster
04:26 - finally you will connect to the cluster
04:29 - from your local machine right because
04:30 - you want to
04:31 - deploy your applications from your
04:34 - laptop or
04:35 - local computer using cubectl
04:38 - which is kubernetes command line tool so
04:41 - in this step you basically
04:42 - configured cube ctl to talk to the
04:44 - remote cluster
04:46 - now at this point as i have listed all
04:49 - the stuff that you have to do
04:51 - in order to create a cluster you may be
04:53 - thinking
04:54 - that's a lot of effort for just creating
04:57 - a simple
04:58 - kubernetes cluster maybe you're not very
05:00 - good at
05:01 - aws you're just starting off and you
05:03 - don't want to learn all these services
05:05 - you already have kubernetes to learn you
05:07 - just want to create a cluster
05:09 - and start deploying your containers
05:11 - inside as fast as possible
05:14 - and you're right i think it's relatively
05:16 - complex
05:17 - compared to other managed kubernetes
05:19 - services like
05:20 - linux kubernetes engine or digital
05:23 - kubernetes service but aws is of course
05:26 - very powerful and that increases the
05:29 - complexity
05:30 - and also it's one of the most popular
05:32 - providers
05:33 - so for example at work or in your
05:36 - projects you might have to
05:37 - use it but the good news is there is a
05:40 - way
05:41 - to simplify this process of creating a
05:44 - cluster on aws
05:45 - much faster and more efficiently without
05:48 - having to do
05:49 - all of these one by one manually and you
05:52 - can do that
05:53 - with a command line tool called eks
05:56 - control
05:57 - it is not an aws tool it is from
05:59 - webworks actually and has a lot of
06:01 - contributors
06:02 - from community now i'm a huge fan of
06:04 - understanding the concepts of how a
06:06 - technology works
06:08 - its architecture and what's going on
06:10 - behind the scenes
06:11 - but if there are tools that make working
06:13 - with this technology much easier
06:15 - then i like to use them usually these
06:18 - are tools that are created by community
06:20 - or people that know this technology
06:22 - better than me or who are specialized in
06:25 - that
06:25 - so it makes sense to use that knowledge
06:27 - why reinvent the wheel
06:29 - so in the demo we will create kubernetes
06:31 - cluster using
06:33 - eks control tool so basically the
06:36 - advantage of
06:37 - eks control tool is that instead of
06:40 - going through
06:41 - all of these steps that i mentioned in
06:44 - creating these services
06:45 - and configuring all this stuff one by
06:47 - one manually
06:49 - either on management console or from the
06:52 - command line
06:52 - instead you just execute one single eks
06:56 - control command that basically does all
06:59 - of that in the background for you
07:01 - and you don't have to configure anything
07:02 - because it uses
07:04 - all these default values of course if
07:06 - you want to customize some stuff like
07:08 - set the cluster name or fixate
07:10 - kubernetes version
07:12 - or define which note types you want in
07:15 - your note group you can override all
07:17 - these
07:17 - different values using parameters but
07:20 - you still have just one comment
07:22 - so with that let's jump into the demo
07:24 - and see
07:25 - eks in action so the first step is to
07:29 - install eks control
07:30 - so that we can create a cluster using
07:33 - that tool
07:34 - and as i mentioned it's from weave works
07:37 - so we're gonna first install the
07:40 - weaveworks
07:41 - homebrew tab
07:50 - and now we can install
07:54 - the eks control
08:08 - and as you see it's also installing some
08:10 - of the dependencies
08:12 - like here this is the cube ctl aws im
08:15 - authenticator
08:17 - and some other dependencies
08:21 - and now we can actually check that it
08:24 - was successfully
08:25 - installed by executing just the version
08:28 - command and here we have the version
08:32 - as a next step we'll create a cluster
08:35 - using the eks
08:37 - control here you see in the amazon eks
08:41 - i have no clusters it's empty so we're
08:43 - gonna go and create one
08:45 - important to note here that eks control
08:48 - command
08:49 - has to connect and authenticate with aws
08:52 - in order to create the cluster
08:54 - this means before you can execute this
08:56 - command
08:57 - you have to have your aws user
08:59 - credentials
09:00 - locally in the path like this i put a
09:03 - link in the description
09:04 - how to do that and how to configure that
09:07 - so you can go
09:08 - and set it up first and command for that
09:10 - is eks
09:11 - control create cluster
09:15 - and this command would actually be
09:16 - enough this will create a cluster with
09:18 - all the defaults
09:20 - but you can override all multiple values
09:22 - using parameters so we are gonna do that
09:24 - just to demonstrate
09:25 - so first of all i'm gonna overwrite the
09:27 - name
09:29 - we're gonna call it test cluster let's
09:31 - also
09:32 - set a version of kubernetes
09:37 - we can also um define a region usually
09:40 - it's the one that's nearest to you
09:42 - so i'm going to choose eucentral one
09:45 - that's
09:46 - my nearest zone or region and these are
09:49 - basically
09:50 - the cluster information in addition to
09:52 - that we also want to create
09:54 - worker nodes right and the worker nodes
09:56 - are created
09:57 - in a group as i mentioned so we are
09:59 - going to add some
10:00 - parameters for that node group as well
10:03 - so we're going to give it a name first
10:05 - of all
10:05 - let's call it linux nodes
10:12 - and we can also define
10:15 - type of worker nodes or basically
10:18 - types of ec2 instances because they will
10:21 - become worker nodes
10:23 - when creating ec2 instance you usually
10:26 - have this type
10:27 - to select so you have different types
10:29 - depending on
10:30 - how much resources this virtual server
10:32 - has
10:33 - so it starts with the lowest resources
10:36 - and you have type with
10:37 - much more resources this is just a
10:40 - demonstration so i'm going to go with
10:42 - t2 micro this is one of the smallest
10:46 - and i'm gonna set the type here
10:52 - and the last thing that we are gonna
10:54 - define
10:55 - is number of worker nodes that i want
10:58 - in that note group to connect to the
11:00 - cluster so
11:02 - we'll set it to two it should be enough
11:04 - and i'm gonna execute it and here you
11:06 - see
11:07 - a lot of stuff start to happen it's
11:09 - building a cluster first of all
11:11 - it's created all the subnets and vpc and
11:14 - all this stuff
11:15 - in the background i don't have to worry
11:17 - about all this stuff and if i go back
11:22 - to my cluster overview
11:26 - soon enough i should see a cluster
11:28 - appearing here
11:30 - so this will actually take uh quite some
11:33 - time
11:34 - because aws eks cluster creation
11:37 - takes relatively longer so we're gonna
11:39 - wait until the cluster is ready so one
11:41 - thing to note here
11:42 - is that this command gets executed
11:46 - with the aws user credentials that have
11:49 - stored locally
11:50 - so basically that user will be able
11:53 - to later access the cluster make changes
11:56 - to that etc so maybe to note
11:58 - so that you know which user to execute
12:01 - this
12:01 - command with now as you see eks control
12:04 - is great for creating a cluster on eks
12:08 - but if you will be managing several
12:10 - clusters or
12:11 - just prefer a graphical user experience
12:13 - to a command line tool
12:15 - numata our sponsor who made this video
12:17 - possible
12:18 - provides a web console for simplified
12:21 - provisioning
12:22 - of eks also after you provision a
12:25 - kubernetes cluster on eks
12:28 - the maintenance and management part
12:30 - begins you need to provide proper
12:32 - backups and restore
12:34 - optimize resources and so on nurmata eks
12:37 - manager
12:38 - solves these day two kubernetes
12:40 - operations pain points
12:41 - by providing a simplified management
12:44 - across
12:45 - all your eks workloads and clusters
12:48 - nirmata made a special offer for my
12:50 - followers
12:51 - the first 30 signups get three months
12:54 - free check out in the video description
12:56 - for more info
12:58 - so let's get back to our cluster so the
13:01 - cluster was created
13:02 - and here you see now the node group is
13:04 - getting created with those
13:06 - two nodes that we defined here so if i
13:09 - go back again
13:11 - and i refresh this see cluster active
13:14 - and there's some data that we already
13:16 - see here so now the ec2
13:18 - instances are creating so when they're
13:21 - ready we should see them here
13:22 - and this part will also take some time
13:25 - so the node
13:26 - group was also created as you see here
13:29 - it has two nodes in that and it should
13:31 - be connected with the cluster
13:33 - already so if i go back let's refresh
13:36 - this
13:37 - you see we have two ec2 instances
13:39 - running
13:40 - another thing that you can also see here
13:43 - is that cube config
13:44 - this is basically a file that is
13:46 - generated whenever you create this
13:48 - cluster
13:49 - so basically this is a file that is
13:51 - information
13:52 - about the cluster so that cubectl on
13:55 - your local machine can connect to that
13:57 - remote cluster
13:58 - so it will include the endpoint of the
14:01 - cluster the certificate
14:02 - and some other details and here you see
14:04 - it has been saved in this
14:06 - location and now when i execute cubectl
14:10 - i can actually use that config
14:12 - to connect to the cluster so here you
14:15 - see
14:16 - cube ctl command should work with config
14:19 - so basically the config is already set
14:21 - we don't have to
14:22 - pass it as a parameter so if i do cube
14:24 - ctl get
14:25 - notes i get my worker nodes listed here
14:30 - so they're both ready and here's the
14:31 - kubernetes version that we set
14:33 - so basically we have a cluster we're
14:35 - connected to that with using cubectl
14:38 - and we can actually start deploying
14:41 - applications inside
14:42 - doing queries in the cluster and so on
14:45 - so as you saw just right now using the
14:48 - eks
14:49 - control tool makes it super easy to
14:52 - create
14:53 - and deploy kubernetes cluster on aws eks
14:56 - where you don't have any effort of
14:58 - creating all these components by
15:00 - yourself
15:00 - it's all done automatically in the
15:02 - background and if i'm done with a
15:04 - cluster
15:05 - for example if it's a test cluster i can
15:07 - pretty easily
15:09 - delete the cluster and all the resources
15:11 - that were created here
15:12 - the easy2 instances the note group
15:16 - and all this stuff it will be all
15:18 - cleaned up in the background
15:20 - using the tool so i'm going to do
15:24 - eks control delete cluster and we just
15:27 - need a cluster name
15:29 - we call it test cluster and if i execute
15:32 - this
15:36 - this also took a while and here you see
15:38 - all cluster resources were deleted
15:40 - so if i go back here and reload this
15:45 - i should see deleting status
15:48 - as well as for my ec2 instances
15:52 - so everything is terminating deleting
15:53 - you don't have to
15:55 - interfere and do anything manually which
15:57 - is good
15:58 - but as i said this process takes some
16:01 - time
16:02 - so to recap we went through what eks
16:04 - services on aws
16:07 - two different ways of creating a cluster
16:10 - or kubernetes cluster
16:11 - with the elastic currently service and
16:13 - you also saw
16:14 - a demo of how to actually create the
16:17 - cluster using the second
16:18 - the easier way using eks control
16:22 - tool with that thank you for watching
16:24 - and see you in the next video