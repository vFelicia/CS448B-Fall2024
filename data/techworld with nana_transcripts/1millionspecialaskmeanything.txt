00:00 - we did it we hit 1 million subscribers
00:03 - on Tech Nana channel so I wanted to
00:05 - create this special video to celebrate
00:08 - with you guys and thank all of you
00:10 - because of course we couldn't have
00:11 - reached this Milestone without you I
00:14 - want to shout out the very first
00:15 - subscribers of techr banana you guys
00:17 - were the first ones to watch our videos
00:19 - and appreciate them I appreciate your
00:21 - support over the years and I believe
00:24 - that we are just getting started here we
00:26 - are more motivated than ever to keep on
00:28 - creating awesome and useful content for
00:31 - you so in this video I want to give you
00:33 - some interesting insights into our
00:35 - journey from 0 to 1 million subscribers
00:38 - then I will answer your questions that
00:40 - you guys have submitted over the past
00:42 - week I have selected the most asked
00:44 - questions and will answer them for you
00:47 - and last but not least and this is the
00:49 - most important part of this video to
00:52 - show our gratitude of making Tech proana
00:55 - into such a large amazing and supportive
00:58 - Community I have prepared a special
01:00 - giveaway with really cool stuff for our
01:03 - community members and not only one but
01:06 - five of you guys will get this giveaway
01:08 - so I will give you the details about
01:10 - what the giveaway is and how to
01:11 - participate exactly at the end of this
01:14 - video so make sure to stay till the end
01:16 - it took us 115 videos to reach this
01:19 - Milestone and what a journey this has
01:22 - been when we started this channel I
01:23 - could not imagine that techro withana
01:25 - would become the biggest cloud and
01:27 - devops channel on YouTube I wasn't even
01:29 - sure I would be creating videos for the
01:32 - channel this long I actually didn't even
01:34 - start out with the goal to make this
01:36 - into this professional channel that Tech
01:38 - Rana has turned into it wasn't a big
01:41 - plan to become an educator of cloud and
01:44 - devops topics it was actually originally
01:46 - meant as a short-term site project just
01:49 - to document my knowledge of kubernetes
01:51 - in a video format and also when we
01:54 - started off we had no knowledge in
01:56 - recording video editing no professional
01:58 - equipment Bad audio and as you can see
02:01 - the quality was pretty horrible still
02:03 - people loved it because of information
02:05 - in the videos and the value that we were
02:07 - delivering now some of you may be
02:10 - wondering now when I say Wii who am I
02:12 - referring to who is this Wii and how
02:14 - many people are in Wii it's actually me
02:16 - and my co-founder Nicole who was a react
02:18 - developer back then we started this
02:20 - channel together and have been creating
02:22 - YouTube videos ourselves ever since
02:25 - without any professional video editors
02:27 - so we kind of learned the content
02:29 - creation skills as we moved along fast
02:32 - forward to now we are not only a YouTube
02:35 - channel but the entire online
02:37 - educational platform that we built
02:39 - behind the channel so we created
02:40 - complete boot camps and educational
02:43 - courses where we educate thousands of
02:45 - people to become devops and Cloud
02:47 - Engineers or even get into it and
02:49 - accelerate their career with devop
02:51 - skills and then we built a small team of
02:54 - Highly capable amazing Engineers who do
02:57 - everything to support our students and
02:59 - make their Learning Journey a success
03:02 - now here's the most impressive part of
03:04 - this for us not only individual
03:06 - Engineers are learning in our courses
03:08 - and boot camps but some of the largest
03:10 - companies and organizations in the world
03:12 - have been training their Engineers with
03:14 - our programs we have universities
03:17 - Ministries military and government
03:18 - organizations around the world even
03:20 - space companies who use our programs
03:23 - it's crazy to think how credible techr
03:26 - nanab brand has become that established
03:28 - large companies with the best engineers
03:31 - and resources are using our trainings to
03:34 - educate their engineers and also pretty
03:37 - crazy in how many Industries and
03:39 - projects kubernetes and devops is needed
03:42 - another interesting thing is I said it
03:44 - took us5 videos to reach 1 million
03:47 - subscribers and four years which is very
03:50 - few videos for such a large Channel it
03:53 - usually takes thousands of videos over a
03:55 - decade with multiple subscribe or smash
03:58 - the like button CT to to reach this size
04:00 - but you guys know I'm more lowkey and
04:02 - try to keep it authentic and focus on
04:04 - giving the information and value and
04:06 - still we achieved such a huge growth I
04:09 - believe because of the focus on value
04:12 - talking about value and useful
04:13 - information let's get straight to
04:15 - answering your questions and what you
04:17 - wanted to know the first one is very
04:19 - interesting and relevant for many people
04:22 - I am 46 years old wanting to change
04:25 - career into it am I considered old to
04:27 - get hired in tech industry as a new
04:30 - here's the thing would it have been
04:32 - better if you got into it at the age of
04:34 - 16 or 26 yes absolutely will it still
04:38 - pay off if you start it now also yes but
04:41 - to make sure this is not just a cliche
04:43 - motivational answer let's break this
04:45 - down into logical answer and actually
04:47 - calculate it with ears first you need to
04:49 - be self-aware and ask yourself do you
04:51 - enjoy learning are you curious and open
04:54 - to learning new things so basically
04:56 - check your Readiness second ask yourself
04:59 - do do you think you will be using the
05:01 - skills you acquire in whatever it field
05:03 - you get into for at least 5 years for
05:06 - example let's say you get into it learn
05:08 - and work in the field for 10 years and
05:11 - at the age of 56 you decide to start a
05:13 - tech company and use your skills for
05:15 - several more years for that or you learn
05:18 - Cloud engineering and you stay and grow
05:20 - within that field for next 10 years if
05:23 - you plan on using those skills for at
05:25 - least 6 to 7 years it already pays off
05:28 - to start in te plus if you like learning
05:31 - new things figuring out stuff you will
05:34 - actually enjoy every single one of those
05:36 - ears there is no lack of growth and
05:38 - learning opportunities any it field now
05:41 - how much time will you need on average
05:43 - to learn the skills and start
05:45 - productively working as an engineer in
05:47 - any it field if you are motivated you
05:50 - will need around 2 to 3 years to build
05:52 - good foundation and become a skilled
05:54 - engineer this is the phase where you can
05:56 - start really enjoying using your skills
05:59 - where you can use your knowledge more
06:01 - effortlessly while also extending your
06:03 - skills and experience now if time is an
06:06 - important element and you want to avoid
06:08 - any time wasters and detours and just
06:11 - follow a straightforward laid out path
06:13 - so you can get there much faster and
06:15 - easier well I have to mention this
06:17 - because that's literally why I created
06:20 - the it beginners course and DeVos boot
06:22 - camp for people who wanted to get into
06:25 - the field with proper guidance and
06:27 - support them all the way through this
06:29 - journey because that's exactly the pain
06:31 - Point most people have so it was a
06:34 - no-brainer for me I just created
06:35 - solution for that problem exactly
06:37 - because I knew how challenging it was
06:39 - for me personally both starting in
06:41 - software engineering back then and then
06:43 - starting in devops and Cloud so my
06:46 - advice is think of this as a long-term
06:49 - game start learning now use our courses
06:52 - to get to this super enjoyable phase of
06:54 - building the foundation knowledge that
06:57 - you can effortlessly deploy at work and
07:00 - this whole journey will already have
07:02 - paid off this next question was by far
07:05 - the most asked one which is how to get
07:08 - into devops in
07:10 - 2024 where and how to start devops with
07:13 - zero knowledge which tools do I need to
07:15 - learn and it is a complex questions but
07:18 - I will try to simplify this here if you
07:20 - want to get into devops in 2024 I have
07:23 - two answers short answer with a simple
07:26 - guide and a bit longer answer with more
07:28 - element and more complex guide the short
07:31 - answer is if you already have some IT
07:33 - background like test engineer software
07:35 - developer Cloud engineer or even Junior
07:38 - devops engineer you enroll in our devop
07:41 - boot camp directly it takes around 6
07:43 - months to complete it fully by working
07:45 - through all the Hands-On projects so
07:48 - before end of 2024 you will be a
07:51 - certified devops engineer and I will
07:53 - confidently say you won't need any other
07:55 - resources other than this boot camp to
07:58 - get into devops or find your first job
08:00 - in that role now if you have no it
08:03 - background or your IT background is from
08:05 - systems Administration side or network
08:07 - engineering for example it's going to be
08:09 - more challenging to dive into devops
08:12 - directly because you are going to be
08:14 - lacking some Foundation prerequisite
08:17 - knowledge specifically in the area of
08:20 - software development life cycle in that
08:22 - case you simply enroll in our it
08:24 - beginners course to learn those
08:26 - prerequisites and then you will have
08:28 - enough knowledge to enroll in the devops
08:31 - boot camp and start learning devops
08:33 - tools and Technologies now this will
08:36 - probably take you around 8 months in
08:38 - total but you will have an equivalent
08:40 - knowledge of a midlevel devops engineer
08:43 - before the end of this year whichever
08:46 - path you have to take you get support
08:48 - from us all the way through every day
08:51 - including weekends so you will not be
08:53 - learning alone you will have all the
08:55 - guidance you need from us now the long
08:57 - answer and the longer path is you watch
09:00 - this video where I explained devops road
09:03 - map and I will link it in the video
09:04 - description as well and then you watch
09:06 - the video called what is devops on our
09:09 - Channel with these two videos you will
09:11 - know exactly what skills you need and
09:13 - which ones you are missing from this you
09:16 - can put together a learning plan to
09:18 - follow the road map that I described in
09:20 - the video in exactly the defined order
09:23 - because it's counterproductive to learn
09:25 - everything at once or learn Tools in
09:27 - random order because often you may need
09:29 - pre- knowledge of one tool before you
09:32 - learn another one so for each concept or
09:34 - technology you learn them one at a time
09:38 - and this is very important you need to
09:40 - learn things handson theory is great but
09:43 - it's nowhere as efficient as Hands-On
09:45 - practice find projects online to build
09:48 - endtoend processes like complete cicd
09:50 - pipeline or complete kubernetes cluster
09:53 - or if you do my tutorials on Docker and
09:56 - kubernetes I already have Hands-On demo
09:58 - projects that I use to teach those
10:00 - Technologies so you can find tutorials
10:02 - like that that integrate realistic
10:05 - Hands-On projects in the technology and
10:08 - as I said this is more complex because
10:10 - it requires you to research those
10:12 - resources put them in order identify how
10:14 - much of each technology you need to
10:16 - learn like how much is enough to move on
10:18 - to the next technology and this is
10:20 - probably the most challenging part the
10:23 - Integrations learning how to integrate
10:25 - various tools with each other to build
10:28 - complete processes
10:29 - this whole process will require a lot of
10:31 - self-discipline and consistency and
10:33 - honestly I personally use this longer
10:36 - challenging path myself to build my
10:38 - expertise because I couldn't find any
10:40 - properly structured guide and it was
10:42 - frustrating and overwhelming very often
10:44 - and I could have saved myself a lot of
10:46 - time that's why I didn't want to create
10:47 - individual courses where you don't learn
10:50 - those Integrations and complete use
10:52 - cases instead I wanted to design a
10:54 - complete boot camp where I could cover
10:57 - everything in exactly the right order
11:00 - and when I created this devop SP Camp it
11:01 - was actually the first one in the world
11:05 - with exactly this kind of structure and
11:07 - Clarity but either way get started with
11:10 - high level understand the big picture
11:12 - then learn the concepts and once you
11:15 - have that then move on to the individual
11:17 - Technologies you will see how it goes if
11:19 - it gets overwhelming and too much of
11:21 - course you always have an option to use
11:23 - our Devil's boot camp and it beginners
11:26 - course third question also a very common
11:29 - one will AI replace devops Engineers or
11:33 - how do you see AI impacting the devops
11:36 - or SRE field in the future do you
11:38 - suggest focusing more on Hands-On skill
11:40 - sets because of ai's potential impact on
11:43 - the IT job market doing things that AI
11:45 - can't do now here's one interesting
11:47 - thing about devops specifically compared
11:50 - to programming for example devops
11:52 - involves a lot of architecting skills
11:55 - you need to think like a systems
11:56 - architect you need to make multiple
11:59 - decisions in your head based on many
12:01 - tools and Concepts you know about in
12:04 - order to design and Implement efficient
12:06 - devops processes using that same
12:09 - knowledge you can detect the issues or
12:11 - optimization opportunities in the
12:13 - existing systems like something can be
12:15 - automated can be made faster more
12:17 - efficient and even though we talk a lot
12:19 - about devops and Cloud Technologies a
12:22 - lot of personal and cultural elements
12:24 - are involved in this as well like how do
12:27 - you involve different engineering roles
12:28 - to support you in building those devop
12:31 - processes how do you play intermediary
12:33 - between different engineering roles so
12:35 - they work together to share
12:37 - responsibilities on parts of devops
12:39 - processes this becomes even more
12:41 - important in devops when you take this
12:44 - huge topic of security from security and
12:47 - compliance engineers and try to spread
12:49 - that knowledge throughout the
12:51 - development and operations and maybe
12:54 - some other teams as well at least 80% of
12:58 - these tasks will be very challenging to
13:00 - do with AI right now and the rest of the
13:03 - 20% that you can do with AI like create
13:06 - automation scripts and configurations
13:08 - give you a pipeline code suggests
13:10 - different optimizations and so on you
13:13 - still will have to validate those
13:14 - scripts and configurations and
13:16 - suggestions so you may use AI to help
13:19 - you with many tasks just like use
13:21 - automation tools like terraform to help
13:23 - you automate some tasks but you still
13:26 - have to be highly involved in the whole
13:29 - process yourself you can fully delegate
13:32 - that in programming that percentage is
13:35 - much higher you can delegate probably up
13:37 - to 50% of work to AI like suggestions to
13:41 - write better code to refactor the code
13:43 - to write automation tests um write an
13:46 - algorithm based on natural language
13:48 - input things that are currently harder
13:50 - to delegate are the product knowledge
13:52 - the more contextual knowledge of your
13:54 - application the decisions and changes on
13:57 - the software archit texture level uh
14:00 - knowledge of feature requirements and
14:01 - this kind of stuff so these things still
14:04 - remain predominantly within the software
14:06 - developer skill set I have gotten this
14:09 - question many times how do you manage to
14:11 - learn and teach so many tools how are
14:13 - you able to remember all the
14:15 - Technologies which are unique to one
14:17 - another there is one powerful strategy
14:20 - for this which I call Concepts before
14:22 - tools basically decoupling underlying
14:25 - Concepts from the features of the tool
14:28 - now how is this strategy helpful in
14:31 - devops and Cloud for example there are
14:33 - hundreds of tools but only a handful of
14:35 - Concepts if you learn the tools you will
14:38 - learn bits and pieces of those Concepts
14:40 - but you will have many holes in that
14:41 - knowledge so if you have to switch to
14:44 - another tool it will be very challenging
14:46 - because your knowledge is tied to the
14:49 - tool and its features and you will be
14:51 - focusing on the features of the new
14:53 - tools as well and it's much harder to
14:55 - navigate on this level the way I
14:57 - approach this is if I'm learning a
15:00 - completely new tool I extract the
15:03 - concepts from a tool to understand why
15:06 - this 900s devops tool was even created
15:09 - what issues does it solve after
15:12 - understanding the concepts and use cases
15:14 - then I start learning the tool Itself by
15:16 - asking the questions like how does this
15:19 - tool implement this specific use case
15:21 - how does it solve this issues how does
15:23 - the tool work and finally I learned how
15:27 - to actually use the tool like the syntax
15:29 - configuration options various features
15:31 - Etc so before I even get to the syntax I
15:34 - already know all the strength and
15:35 - weaknesses and the why is behind the
15:37 - tool and of course I use the same
15:39 - approach and sequence when I teach
15:41 - different tools now here's a really
15:44 - interesting thing and this was actually
15:46 - big advantage that starting YouTube
15:48 - channel gave me as a practitioner I had
15:51 - to implement things fast often with
15:53 - tight deadlines and often didn't have
15:55 - enough time to really dig deeper into
15:57 - the concepts and the wise to understand
16:00 - the best practices or zoom out to
16:02 - understand a big picture of what I was
16:05 - implementing because you can create a
16:07 - fully functional cic pipeline that
16:10 - deploys to a fully functional communes
16:12 - cluster on a fully functional Cloud
16:14 - infrastructure and everything will be
16:16 - working but it may have many
16:18 - inefficiencies and holes and security
16:21 - issues so just because you got all those
16:24 - systems to work doesn't mean that you
16:26 - understand how everything works or why
16:29 - you have done certain things and
16:30 - configurations like that deep deep
16:32 - understanding of things are often
16:34 - missing even with practitioners so when
16:37 - I started creating tutorials I realized
16:39 - that I needed to understand the wise
16:42 - behind the tools and every single
16:44 - feature and configuration of those tools
16:46 - and the best practices to be able to
16:48 - teach the complete picture of not only
16:51 - what you are doing but why you are doing
16:53 - it on the other side the Practical
16:56 - knowledge and experience that I had was
16:57 - extremely important but for the reason
17:00 - that you may not expect the
17:02 - troubleshooting experience the no happy
17:04 - path of things not working the issues
17:07 - the mistakes and
17:08 - misconfigurations getting stuck and
17:10 - figuring out how to work around the
17:12 - blockers the limitations of different
17:15 - tools basically things that are not
17:17 - covered in the official documentations
17:18 - or tutorials so you can't really learn
17:21 - them from Theory you have to learn them
17:23 - the hard way so that means when I decide
17:26 - that I want to learn a new tool to the
17:28 - level that I can teach it to others I
17:32 - need to go through both of these
17:33 - experiences to get the full spectrum of
17:36 - knowledge and the last question I wanted
17:38 - to address here is a bit more specific
17:41 - but very interesting
17:42 - one I am a junior Cloud developer who
17:45 - has just landed her first tech job in a
17:48 - very large organization I want to move
17:50 - into devop space and am finding it hard
17:52 - to gain trust for my team lead I work
17:55 - completely remotely from my team how can
17:58 - I build trust in this space and how can
18:00 - I find ways to demonstrate that I have
18:03 - potential and am willing to learn how
18:05 - can I be brave and ask for guidance
18:07 - without feeling like I'm lacking if the
18:09 - lead hesitates first of all thanks for
18:12 - such wonderfully formulated question I
18:14 - know that there are many Junior
18:15 - Engineers who have this challenge as
18:17 - well so here is my direct answer to that
18:20 - show them your work to prove that you
18:22 - can do it for example go and analyze the
18:25 - release pipeline in your team from start
18:27 - to finish
18:28 - find something that you can optimize or
18:30 - improve there are thousands of things
18:33 - only in that pipeline that can be made
18:34 - better you know devops is all about
18:37 - Automation and efficiency less manual
18:39 - work so find something to make faster
18:42 - more efficient to automate a manual
18:44 - process and suggest that Improvement to
18:46 - your team lead go for loow hanging fruit
18:49 - optimizations something that has
18:51 - immediate value and won't be that hard
18:54 - for a junior engineer to do this is not
18:57 - easy to do I understand understand that
18:58 - you will need to do some research and
19:00 - learning for that on your own but you
19:03 - only need to do enough research to
19:06 - understand what can be done better
19:08 - because you can figure out how to
19:09 - actually do it once you start working on
19:11 - the task so once you have identified
19:13 - such Improvement task propose it to your
19:16 - team lead and ask if you can start
19:18 - working on it right away and use that
19:21 - specific task to actually learn how to
19:23 - do it this will create a track record
19:25 - with your team and supervisor that you
19:28 - are capable to bring value proactively
19:31 - so when you propose the next task you
19:33 - will get a yes or easily now very very
19:37 - important you may be thinking but what
19:39 - if I have no idea how to make that
19:41 - optimization what if I propose something
19:43 - but I can't figure it out that may
19:46 - create a lot of pressure and doubt and
19:49 - it's okay to feel self-conscious and
19:51 - insecure you are still in experience so
19:54 - it's normal but don't let it stop you
19:56 - from doing tasks that you may have no
19:59 - idea how to do at the beginning because
20:01 - you will learn and you will figure it
20:03 - out my favorite quote from Marie forio
20:06 - is everything is figure out and even if
20:09 - you don't figure it out there's no
20:11 - punishment for being proactive and
20:12 - trying something and you will have
20:15 - undoubtedly have learned a lot in the
20:18 - process anyways this may be a very
20:21 - uncomfortable way of learning things but
20:23 - a very efficient one now again if you
20:26 - want to have a faster more comfortable
20:28 - way of learning devops production grade
20:31 - practices best practices security best
20:33 - practices included and then go back to
20:36 - your team and use that knowledge to
20:38 - identify issues and know already from
20:40 - the start how to fix them what to
20:42 - implement where and why in which order
20:45 - and maybe even educate your team on some
20:47 - of the improvements then of course you
20:50 - can learn all that in our Devil's boot
20:52 - camp and later in depops boot camp as
20:54 - well and then you can go and do exactly
20:58 - what I suggested with less anxiety so
21:00 - you can save yourself some stress
21:02 - because I understand how nerve-wracking
21:04 - this kind of work can be when you are
21:07 - trying to prove your skills as a junior
21:09 - engineer at work while trying to learn
21:12 - those skills at the same time I've been
21:14 - there done that I understand how it is
21:17 - and now the best and most important part
21:20 - of this video the giveaway is a token of
21:23 - our appreciation to all of you for being
21:26 - part of our journey and part of techin
21:28 - Nana Community we want to give out five
21:31 - spots in our devops boot camp for
21:33 - completely free including the support
21:36 - the handouts the digital certification
21:39 - exercises everything that it includes
21:41 - and this way I want to empower five of
21:43 - you to level up your career this year
21:46 - and become a certified devops
21:48 - practitioner note that if you've already
21:50 - bought devops boot camp and are going
21:53 - through this right now absolutely no
21:55 - worries you can still participate and if
21:57 - you win
21:58 - you will get the whole amount back
22:00 - because we don't want to limit anyone
22:02 - from participating here but that's not
22:04 - all in that giveaway we will include the
22:07 - exclusive techr Nana swag as well it's
22:10 - exclusive because they aren't available
22:13 - anywhere for purchase we basically
22:15 - created them for ourselves our friends
22:16 - and family or personal meetups and we
22:19 - want to share them with you as well as a
22:21 - really unique way to celebrate this
22:23 - special occasion with you and I will
22:26 - personally handw write a note for each
22:28 - winner to express my appreciation and
22:31 - gratitude and give you some motivation
22:33 - to dive in the devil's boot camp and get
22:35 - the most out of it how do you
22:37 - participate it's pretty easy we don't
22:40 - want to over complicate things here I'll
22:42 - leave all the details in the video
22:43 - description please check it out follow
22:46 - the steps and I can't wait to announce
22:48 - the winners in exactly 10 days and to
22:51 - get this gift to all five of you and if
22:54 - you made it this far thank you for
22:57 - watching and see you in the next video