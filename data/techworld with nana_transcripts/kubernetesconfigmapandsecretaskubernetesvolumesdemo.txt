00:00 - in this video I will show you how to
00:01 - create config map and secret volumes and
00:04 - how to use them in pots I'm gonna give
00:06 - you some real-life use cases and show
00:09 - you the syntax of using volumes in a pod
00:11 - configuration think of applications that
00:14 - take configuration files as parameter
00:17 - when they start like Prometheus
00:20 - elasticsearch mosquito message broker
00:23 - nginx or your own JavaScript or Java
00:26 - application that has properties files or
00:29 - applications that need a configuration
00:31 - file with sensitive data like if you
00:34 - have an application with ten external
00:36 - services that it communicates with which
00:39 - are all secured so you have a passwords
00:42 - properties file with all these
00:44 - credentials or maybe an application
00:47 - needs a client certificate file to
00:50 - communicate with an internal secured
00:52 - service now how do you configure that or
00:55 - pass these files to the kubernetes pots
00:57 - and these are actually scenarios that I
01:00 - have used very often when setting up
01:03 - kubernetes clusters because many
01:05 - services that you deploy in kubernetes
01:07 - will have configuration files so it's
01:11 - important to know these concepts if you
01:13 - have seen my other video about
01:15 - kubernetes main components including
01:18 - config map and secret you know they are
01:20 - used for external configuration of
01:22 - individual values like this and you can
01:27 - check out that video right here so this
01:30 - is a MongoDB config map that has one key
01:34 - value pair which is database host and
01:36 - then you have secret for MongoDB as well
01:40 - with username and password key value
01:42 - pairs now note these are individual
01:45 - values and the way we use that in the
01:48 - pod configuration was like this so this
01:52 - is a container where Express would
01:55 - start and the Express can
01:57 - reference these values this individual
01:59 - key value pairs like this so this
02:03 - individual values are used as values for
02:06 - the environmental variables that
02:09 - configure Express application in
02:12 - this case
02:13 - so you have the environmental variable
02:15 - and we take the value of that from the
02:18 - secret referencing the name of the
02:20 - secret and the key inside the secret in
02:24 - the same way we use the config map so
02:28 - this is one specific use case of config
02:31 - maps and secrets however these are
02:33 - individual values and not files that
02:36 - application in the pod container can
02:38 - read
02:40 - so with config map in secret you can
02:42 - create individual key value pairs but
02:45 - you can also create files that can be
02:47 - mounted into the pod and then into the
02:49 - container so that application in that
02:52 - container can access it and you can do
02:55 - that like this so we have the same
02:57 - config component and instead of defining
03:01 - here key value pairs we define the name
03:04 - of that file
03:06 - this is gonna be mosquito conf and these
03:09 - are gonna be the contents of that file
03:12 - know this pipe syntax right here so this
03:16 - is whatever is gonna be inside that file
03:19 - in the same way we can create secret
03:22 - files like this so we have the same
03:24 - secret kind and this is gonna be the
03:28 - file name we're just gonna call it
03:30 - secret that file could be passwords file
03:32 - whatever and this is gonna be a value or
03:36 - secret the contents of that file base64
03:40 - encoded because this is how you set the
03:42 - value in the secret component and
03:45 - another use case as I mentioned is
03:48 - sometimes you need client certificates
03:50 - for your services
03:51 - so that they can communicate with other
03:53 - secured services and this way you can
03:55 - create a single component where let's
03:58 - say you define a CA certificate or
04:00 - client certificate file and here just
04:04 - paste in the base64 encoded contents of
04:07 - that certificate file so I'm gonna show
04:10 - you all these now in practice and for
04:12 - this demo I'm gonna use mosquito which
04:15 - is a message broker and mosquito like
04:18 - many other services has a configuration
04:21 - file where you can configure different
04:22 - stuff like what ports to open whether to
04:26 - secure it or not mosquito-y also takes a
04:29 - passwords file where you can configure
04:31 - all the authentication or you can also
04:34 - override the certificate files of
04:36 - mosquito and so we're gonna create a
04:40 - config file and a secret file for
04:42 - mosquito port right so we're gonna use
04:46 - these two files and mount them into
04:49 - mosquito pod but to see that first let's
04:53 - actually
04:53 - mosquito without any volumes so no files
04:57 - mounted inside it it's just a default
05:00 - mosquito container that starts without
05:02 - any persistent so I'm gonna head over to
05:04 - mini cube I have a mini cube cluster set
05:08 - up if you want to know how to set up
05:10 - mini cube cluster I have a separate
05:11 - video about that so you can check that
05:13 - out so if all the configuration files
05:15 - already prepared for me here so that I
05:17 - can use them and you can access all
05:20 - these configuration files in the git
05:21 - repository that I will link in the
05:23 - description keep ztl apply mosquito
05:28 - without volumes and I'm gonna have my
05:33 - pot and now let's actually enter the
05:38 - container or get the terminal and let's
05:50 - see its filesystem so I'm gonna LS and
05:53 - here I see a mosquito a pre-configured
05:55 - mosquito directory let's actually go
05:58 - inside and see what it's there and there
06:01 - is a config folder data and lock folder
06:04 - so this is all by default so this is
06:06 - already configured in the image I'm
06:08 - using an eclipse mosquito image this is
06:11 - already pre configured there and if I go
06:13 - into the config directory I see a
06:15 - mosquito dot conf file and default this
06:20 - comes with just commented out contents
06:24 - of its attributes and description so
06:27 - basically there is just description of
06:30 - bunch of defaults here nothing is really
06:33 - set so now we saw the default structure
06:37 - let's actually go out and I'm gonna
06:40 - delete that using the same file so and
06:53 - now we just saw how the default
06:56 - configuration in mosquito looks like and
06:58 - we're gonna now overwrite that mosquito
07:01 - file using the config map by mounting it
07:05 - into the container
07:08 - I'm going to clear that and one thing to
07:13 - note here is that obviously before you
07:15 - can use or reference config method
07:18 - secrets inside your a pod you have to
07:22 - create them so they have to be in the
07:24 - cluster when the pod starts
07:27 - otherwise you will get errors that the
07:30 - config map or secrets component can be
07:33 - found so let's actually go ahead and
07:35 - create this two and secret and we can
07:49 - actually check these are components like
07:53 - this get secret and keep city I'll get
07:59 - config map will give you mosquito config
08:03 - file and I have another one in the
08:05 - cluster okay so now we have those two
08:09 - files ready or resources ready in the
08:12 - cluster now we have to go back and
08:14 - create a mosquito deployment that uses
08:18 - these two files right so this is a
08:22 - mosquito deployment which is exactly the
08:24 - same as this one here the same image the
08:28 - same configuration same port so what
08:32 - we're going to do here is add volumes to
08:35 - this configuration and the way to do
08:38 - that is using volumes attribute at the
08:42 - containers level so remember this is a
08:45 - specification of the pod and inside the
08:48 - pod specification we define volumes and
08:51 - here we list all the volumes that we
08:56 - want to mount into that pod and we just
09:00 - give it names like let's call this
09:02 - mosquito config and this is the type of
09:10 - volume that you want to mount into that
09:13 - part if you want to see the complete
09:16 - overview of volumes and different types
09:19 - of them you can check out my other
09:20 - video where explained the volume
09:22 - components so here we're mounting config
09:25 - for limb type so I'm gonna write config
09:28 - map and the name of that config map is
09:33 - this one right here and that's it we
09:37 - mounted fathered this config map created
09:40 - into the pod and now let's do the same
09:43 - for the secret let's call it mosquitos
09:47 - secret and the attribute for secret this
09:54 - is again the volume type secret and the
09:57 - attribute is secret name and this is the
10:03 - name and this is basically just some
10:05 - random secret file that we are creating
10:07 - just for the demonstration okay so now I
10:10 - have both volume types mounted into the
10:13 - pot the next step is that now you have
10:16 - to mount those volumes inside the
10:19 - container because the application is
10:21 - actually running inside the container so
10:23 - if we want the application to use that
10:26 - we have to mount whatever's available
10:28 - here inside the container and the way to
10:31 - do that is inside each individual
10:34 - container so you may have a list of
10:36 - containers here so you have to do that
10:38 - for each individual container so we have
10:41 - just one here and inside that I'm gonna
10:44 - create volume mounts attribute with
10:49 - camelcase
10:50 - like this and here again I'm gonna list
10:54 - all the volumes that I want to mount
10:56 - from pot to container now obviously you
11:00 - can't mount into the container anything
11:02 - that you don't have available inside the
11:04 - pot so here I'm gonna against a name and
11:08 - this name here is gonna be the name that
11:12 - we defined here so it's gonna be you
11:16 - know call and the second attribute is
11:19 - mount path in the beginning I showed you
11:23 - the file system or mosquito container
11:26 - and we saw there was a mosquito
11:28 - directory with config in it so mount
11:32 - path references the path
11:34 - file system inside the container where
11:37 - we want this file to end up so we saw
11:42 - that mosquito conf is inside the /
11:45 - mosquito / config and we want to
11:49 - overwrite that so that's gonna be the
11:51 - mount path and we're gonna do the same
11:54 - for the secret so I'm gonna copy that so
12:01 - this is the name and mount path mosquito
12:07 - and let's actually create a secret
12:10 - folder inside which doesn't exist yet
12:13 - and then this file the secret dot file
12:17 - is going to be available inside that
12:19 - directory in the container and that's it
12:23 - you can also add additional attributes
12:24 - here for example one very common case is
12:28 - that for example when you're mounting a
12:30 - client certificate which is maybe used
12:33 - in many different applications you may
12:37 - want to add a read-only attribute to
12:39 - that which makes sense because you don't
12:41 - want the applications to modify those
12:44 - certificate files they're just there for
12:47 - reading so you can add read-only true
12:51 - attribute to that same could be done for
12:54 - configuration files that are not meant
12:56 - to be changed by the application so
12:58 - let's add that attribute there and this
13:01 - is it so we're done mounting the
13:04 - configuration file created using config
13:07 - map component and the secret file which
13:10 - we just created random one inside the
13:12 - pod and inside the container application
13:15 - and obviously the path value depends on
13:19 - the application for example if you have
13:20 - elasticsearch it has a default config
13:23 - location it's I believe slash ATC slash
13:27 - elasticsearch so the config location
13:29 - will be different for nginx it's etc'
13:32 - nginx etc same with secret for example
13:36 - if you have your own application that
13:37 - expects passwords file at a specific
13:40 - location then you want to mount that
13:42 - secret in to that specific location so
13:45 - that the application can find it this
13:48 - con
13:48 - cept here of first mounting the volumes
13:50 - in the pot and then mounting into the
13:52 - container basically is useful if you
13:55 - have multiple containers you can decide
13:57 - which container gets access to which
14:01 - volumes that pot has available so you
14:04 - can actually decide to give one
14:06 - container one volume access to one
14:09 - storage or not give the container access
14:11 - to a certain storage okay so the
14:14 - mosquito deployment file is ready so
14:16 - let's actually create that so I'm gonna
14:18 - head back to the mini cube and supply
14:22 - mosquito
14:29 - so let's actually get in the container
14:32 - again so exact so Bash is not available
14:48 - so we're gonna go with Sh and here let's
14:53 - go inside the mosquito again and first
14:58 - we'll see the secret directory that
15:00 - wasn't here before
15:01 - let's go inside and here we have the
15:05 - secret dot file that we created with
15:07 - basics different coded content and let's
15:09 - see what's in there and there is a plain
15:13 - text contents of that file which says
15:16 - super secret nobody should see ok and
15:20 - now let's go back to mosquito and config
15:25 - folder and here previously was this
15:30 - default configuration file that we
15:31 - overrode if I display that these are the
15:36 - contents of the new configuration file
15:38 - that we mounted that mosquito now uses
15:42 - so to summarize what we saw in this
15:44 - video is config map and secret
15:47 - components in kubernetes are used both
15:51 - to create individual key pair values
15:53 - that you can use as values of
15:55 - environments of variables for example in
15:57 - your pods configuration or you can
16:00 - create files from them
16:02 - that you can then pass in as a
16:05 - configuration file to your application
16:07 - which as I mentioned is a use case that
16:10 - actually happens very frequently because
16:12 - a lot of services take some kind of
16:15 - external configuration file or multiple
16:17 - configuration files and the second point
16:20 - is the config map and secret are volume
16:23 - types which people don't realize right
16:25 - at the beginning because they don't look
16:27 - like the typical volumes created with
16:29 - volume persistent volume component but
16:32 - there are local volume types and
16:35 - communities so that's it for this video
16:37 - I'm gonna create more content on how to
16:40 - use individual volume types like local
16:43 - volumes and remote volumes or cloud
16:45 - storage volumes for different use cases
16:48 - so stay tuned for that thank you for
16:50 - watching and see you in the next video