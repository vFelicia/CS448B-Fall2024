hello everyone welcome back to our channel here we share beginner friendly coding tutorials on scratch roblox minecraft web programming and many more and today we're going to finish our sneak game so in the last video we were creating the foundations of our game we defined the functions which are codes that can be referenced and used anywhere in the program which allows us to make to move this name in the game so for today what we're going to do is we're going to create the game loop which controls the flow of the game so let's get started so we'll continue from where we left off in the last video and remember we talked about the game loop so we'll start by adding the loop itself okay in my line 79. so a loop is a block of code that repeats itself until the condition inside of it becomes false so in this case we'll make a while loop that never ends or as we also call it an infinite loop so wow true okay so the reason we're creating an infinite loop is because we want the game to run until the window is closed and also the first instruction will code in the loop is the update function so wn.update which redraws what needs to be redrawn so that the game is always up to date okay and then the first thing we need to do is also check if the snake has died so for that we'll check if the head of the snake is in a coordinate that is beyond the walls of the window or near the scoreboard so if it is then we need to code in what's necessary for it to restart the game so first we'll stop the game for one second using sleep then we'll also move the head to the middle and make it stop moving okay so now we're going to check its coordinate first okay so we'll say if head dot explore okay so if head dot x core bigger than 340 or head dot x core smaller than minus 340 or head dot y core now we're doing up and down okay bigger than 310 or head dot y core the y coordinate smaller than minus negative 40 then we will do time dot sleeve one second and then move the head of the snake again the head dot go to zero zero and then head dot direction goes to stop all right okay then to destroy the snake body parts we'll move all of them to a point in the window where they will be invisible from the player so let's say like the coordinates 1000 okay and we can also use a for loop to go through all of the segments to move them to this point so uh x and y coordinates would be a thousand and a thousand each okay so we're going to say four segments in segments segment dot go to one thousand one thousand okay so after moving them all then we can use the instruction clear so python can take care of them so say segments dot clear okay make sure that we also reset the score okay so we'll say score is equal to zero and then we also want to go ahead and um reset the delay okay so we're going to go ahead and say delay equal to 0.1 okay so finally we also need to reset the values of the score in our scoreboard remember we made that earlier so we need to say pen dot clear and then pen dot write score okay align equals center and then the font okay now to check if the head has eaten the food or not we can use the distance function okay we're going to create that to measure the distance between the head of the snake and the food so if the distance is less than 20 then we can say that the head has eaten the food the head of the snake but if that distance is less than 20 then we can say that what we'll do is we're going to move the food to a random spot in the game map okay so to do that we need to use the random integer instruction from the random library that we imported to generate a random number that falls into the boundaries of the game then we will use the go to to move the food there so we'll say if head dot distance from food is smaller than 20 then we move the food to a random spot so x equals to random that random integer from minus 330 to 330 and y again random dot ran in and anywhere from minus 330 to 290 and then we'll move the food there so food dot go to x and y okay so after eating the food we'll also make sure that the snake grows longer so to do so we'll make another body part similar to the head of the snake you can also define the color as a different one if you'd like to so do the same steps as the head and then append this variable to the list of segments okay the same thing we're gonna go ahead and say new dot new underscore segment equals to turtle.turtle okay same thing new segment speed zero new segment dot shape square okay so the colors i'm choosing a different one i'm choosing white so new segment.color white and then move the segment to append it all right so new segment dot pen up segment dot append new segment new body part okay all right now then we can also shorten the delay which will make the snake move slightly faster to increase the difficulty all right so then we also want to increase the score by any amount that we want so let's say in my case here i'm going to increase the score by 10. okay so i'm going to now shorten delay shorten the delay to make the snake move faster so delay minus equals to let's say 0.001 okay just a slight increase and then also increase the score so score plus equals 10. okay now of course i also want to constantly check if my score that i just obtained is higher than the original high score that i have if it is then we'll replace it with the score that we just got okay so if scored bigger than high score then high score is now equal to the score we just got okay now remember we also need to clear the scoreboard so we need to write pen clear before penrite so that it does not write on top of our previous message okay all right so pen dot clear and then write the new message so pen dot right all right so the next step is just to move all the segments in order so that they follow the head so we will use a for loop to move from the last segment to the second to the first segment since the first segment must move to where the head is all right so the range will also be from the length of the list minus one to one in descending order okay so we'll go ahead and put in our loop right here so for segment sorry let's do for index in range length segments minus one okay and then stop at zero and descending order so 1 okay then we're gonna go ahead and say okay x equals two okay now for this part okay the x and y variables will store the x and y coordinates of the next segment in line then the indexed segment will move to that position in order until it's done okay so here that's why i did my x equals two okay so x equals to segment index minus 1 dot x core okay and then y equal to segments index minus one dot y core okay and then we're gonna move them so segments index dot go to x and y okay all right so now that all the segments has moved we just need to move the segment before the head which only exists if there's at least one element in the list of segments all right so we need to make sure that we have the condition if the length of segments is bigger than zero then we'll say okay x equals to head dot x chord and y equals to head dot y core okay and then segments index 0 dot go to x y okay and then we also need to finally call the function move to move the head to the next position all right so we'll go ahead and say move all right so now finally we'll check the last death condition and it is when the head of the snake runs into the body so for that we'll use another for loop to check it's all uh to check all of the segments and if any of these segments has a distance to the head of less than 20 then that means that they are touching each other then we will need to kill the snake just as before all right so we're gonna go ahead and make a for loop so four segments in segments okay if segment dot distance from the head is smaller than 20 then we are going to go ahead and say okay time dot sleep one second and then move the snake back into the middle the head dot go to zero zero okay and then head dot direction equals to stop all right now we also want to make sure we hide all the body parts of the snake okay and we only want to have the head of the snake left so for that we're gonna need to go ahead and say okay for segments in segments okay segment same place we go to a place where we can't uh see so that's a thousand and a thousand for x and y coordinates okay and then we also want to clear the segment list so segment dot clear and then reset the score so score equals to zero and reset the delay delay equals to 0.1 and then we want to update the score display so pen dot clear all right and we're going to get the code to reset the scoreboard from here all right that we did earlier right here okay so now that we have added the um scoreboard the final step is we're going to add a sleeve before um closing the game loop so we simulate the delay uh the speed of the snake and then the last instruction will be to add a window.main loop outside of the game loop to control the window operation right so we're going to go ahead and do that we'll go ahead and say time dot sleep delay and then window dot mean loop and just like that our program is done now it's time for us to test out the finish game so that we can make sure all directions are working all right so run module and then right here is our game okay so that's the food that's the snakehead okay so i'm gonna click w to make sure that this thing can move right so there you go i just screw a new um part of my body okay now it's getting um longer okay now i'm gonna try to see if i crash will the game reset okay all right so i just crashed and now my the head of the snake is moved into the middle of the screen again and my high score is updated to be 30. all right so that's all for today um hope you liked the video and don't forget to like and subscribe if you do all right and in the meantime you can check out our other videos while you're waiting for the next video okay bye