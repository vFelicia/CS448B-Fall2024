hello everybody welcome back to another video here we share beginnerfriendly coding tutorials on scratch roblox minecraft web programming and many more today we're going to make a tictactoe game using python in this project i'll teach you how to make a tictactoe game using python and yeah let's get started so let's begin by starting a new project in python item from here the first thing we're going to do is import tk enter so on the first line we should write from write dk enter and we'll say import and here we import everything that we have so we will put a star next we also want to import the message box from tk enter so here again from tk enter import message box next let's create our tdk enter here we can declare our own variable called pk and we'll make it based on the capital t lowercase k and a little and close up the bracket this is python way of making our own tk enter object and now we can set our new title for the game so we can go into our variable tk and do the dot title and here we can set it to new title now let's change the name for the tk enter that we have created for ourselves so let's go into tk and we'll access the title method and here we set the game to tick tac toe next let's add in our squares for a tictactoe game we have 9 squares in total for a 3x3 box for each square we use a button to represent the square so that when we uh click on the square we know that the button has been clicked and then we can kind of see if that square has been taken so here we'll declare buttons and we'll start it equals the string var this will allow us to detect if there's any changes next let's start our first button which will be our top left button we'll name this button one and button one is going to be declares a button here we're going to put it in our tk object next we can set the text to an empty string so i'll just put a spacebar this is how we know that we haven't touched it yet now i can give it a font here i'm going to give it a font called um times new roman fonts 20 and bold and then i can set the background color which i would say is gray and then i can set another front round color and i'll set this to black next for the font size i will use heights of 10 and the weft of 20 and we'll assign the button a command the command will take in lambda sorry recommend we're taking lambda and we'll call the function called button click button click would take in an input which will uh pass in the button that we have and we can declare uh this button like this and now let's set the button grid so we can do that by doing button one dot grid here we want to put in the location where we want this button for the first button we want to put it in row equals one and columns equal zero this will be the top left position so be the first row and the first column and here we write sticky equals s plus m plus e plus w and this will allow us to fill this uh the whole board with our squares and here s n e w stands for south north east and west and this just means that this will expand as far as it can so now let's go ahead and finish our other nine buttons and now let's go ahead and finish our other eight buttons the declaration will be the same so we can go ahead and copy and paste this and the only thing with the change is the name for the button the parameter uh in the function call and then with the change uh the button one to button two of course and update the position so let's do that real quick so we change this to button 2 the font size text everything else could stay the same and here where it says button click we want to pass in the parameter button 2 instead of button 1 and now let's change button two dot grid here will be in the same row but the column would now be one and let's do button three so again i have copy and paste the code i broke for button one i'm going to change this button three and then go change this argument to button three and now i'm changing button three dot grid and again it will be in row one but you'll be at the last column so here we'll put column equals two and again we can copy this uh basic layout for all of the other buttons so here i'm gonna quickly make all the buttons so i'm gonna make button four custom button four set button four dot grid and here since um tic tac toe can only have three by three so uh we have actually fill up the first row so here i'm gonna say row equals two and column school one this would be the middle most left square now for button five it will again be in the second row but it will be in the middle column so here for button five dot grid our row should be two and column should be one and button six again is going to be in row two and uh we should put the column to b2 as well and again don't forget to change the arguments that we have put in inside of our buffing click and now for button seven we're once again going back down to the third row now so here button seven dot grid should have row number three and column number of zero and now button eight here we change button age button dot click and button a dot grid will be in row three column one and finally our last button which is our bottom right button nine here we're going to change the arguments to button nine and button on dot grid will be at row three and column two now let's save this so now let's define the function that we made called button click so let's go ahead and go underneath our title and we can write defined button click and here we know that it pass in the button so we can say buttons and we can use the semicolon to see to say that we're defining this button here so in button.click we want to see whether the user is on circle or on an x and to do this we'll actually set a new variable and this variable is going to be global and we'll call it and we call it b click and b click will tell us rather to put a circle or an x so over here on b click let's just define it as true in the beginning and now let's check if the square has already been clipped on and um if it hasn't we can see which one to put in rather circle or an x so the first thing we should check is if the buttons and we'll check the text property and we'll check the text property by putting in text here we're trying to check if this equals equals to a space which we have originally defined it as and if it is now we can check if b click is true or false so now we can say and b click is equals equals to true in this case um since we have set b click to true um this would be the first player so i usually play circle first so here i can say buttons and we can change the text now and we can set it equal to the string x we can change the string circle since we are starting circle first next we should flip b click so next time we call this b click will be false and then we can put in an x so here we can set b click and we set it equals to false now we should have an else if statements so we can put el if this is an else if now we can check if the buttons um click is still empty but b click is false so here let's check the text here and we make sure that it is equal to an empty string and now if b click is equal equals to false now we will instead put in an x so here we will change the buttons at text and we set it equal to x and now again we have to flip b click so at the end we should say b click equals true and after each time we click a button we also want to make sure that user have not won the game yet or we should check if the user has won the game so here we're going to have a function called winner and when you're taking buttons and it would tell us if we have won the game so to win in the game of tictactoe we need three in a row or three in a column or three in the diagonal so in this case we should check for all three cases so here let's define our winner function and we know that it would take in buttons here let's check if the user using the o has won the game so here we say if and let's check the first row and see if they have completed the first row so here we can say button one which is our top left button and we accept the text again and we see if it's equal to circle and then we can say equals equals o and the button 2 also has to equal o and button three also has equal o in order for the user using o to have one using the first row so here we can say button one dot text is equal to equal to o and button two and we access the text property and we'll check if it's also equal to o and lastly we also check button 3 and we see the text and if he is equal to o again that means that the user has one another way they can win is using the second row or the third row so let's do that as well in this case we'll use or since the user doesn't necessarily have to use all of three of these three and only one condition will win them again so here let's check for the second rule so the second row consists of button four five and six so here we check button four and button five and again we're just looking at the text and see if this equals two o and now we can check button six and change text and see if it equals o and then another way they can win this if they have three in a row on the third row so here we have another or and now we'll check for the bottom row here we will have button seven button eight and button nine so here i have button seven equals zero zero button eight and let's check if it's equal to o and lastly button nine so basically the or statement allows us to check for any of these winning conditions and if either or any one of these conditions are true that means the user is one another way the user can win is by having three in the column so let's try to do that as well for columns we know that one four and seven two five eight and three six and nine will be um will all be the same if the user is one so here let's go and check button one four and seven so let's see if button one is equals equals to o and button four is equals equals to o and button seven and again we're always going to be checking the text anyways equals o or here we check the second column which consists of two five and eight so we see button two and we checked if is equal to o and now we check this button five and see if the text is equals equals to o and lastly we'll check button eight and see if the text is equals equals to l and now let's check for the last column which will consist of button three button six and button nine so here button three will check if the text is equals equals to o and if button 6 see if the text is equals equals to 0 and button 9 check the text and see if it's equals equals zero and finally there are two other ways to win that would be the diagonal so the diagonal you can do two ways either you can go one five and nine which is from top left to the bottom right or you can go from the top right to the bottom left and here um let's do the first top left to the bottom right so the top left will be button one so here we'll check if button one is equals equals to o and then we can check with button five which was our middle button this also equals to o and then we can check the bottom right which is our button nine we'll check if it's equals equals to 0 and lastly let's check the last diagonal which is top right to bottom left in this case it'll be button 3 button 5 and button 7. so here we check button three save this equals equals to o and plus five and see if this equals equals to o and lastly button seven and see if the equals two o and now we close off our if statements so the n make sure that all three conditions has to be true in order for it to be true while the order allows any of these conditions to be true if you allow the whole thing to be true so let's type here so after this if statements we will follow up in a semicolon to define this following line is going to be inside of this if and when the user is 1 that means we've entered this if loop and now we should display the message and we'll do that using the message box that we have imported so we can type message box and we can say dot show info and now here we can write player o wins just like that now we can do an elsif statement and this alphys house if statements will consist the same thing as everything in here so what we can actually do is just copy and paste this and instead of o's we'll be checking for x's so here i'm going to change all of these o's into x because the pattern is going to be the same we're going to be checking for the first row and then we'll check for the second row and then the third and then we'll move on to the columns so we can check first column here and again the only difference is we're checking for x's instead of o's and then we check the second column and now the third column and then we can check the top left bottom right diagonal and then finally we can check the top right to bottom left diagonal and here again we can use the message box to display the result so we can do message box dot show info and here we can say player x wins and that will define that would be the all for our winner function so the last thing we should do is actually make this on the loop so at the very bottom here after all of our declarations and our grids and button decorations we're going to write tk which is our dk inter object and we say dot name loop and we'll pass an empty parameters and this will start running the game so now uh this will actually be our tic tac and this will actually be our tic tac toe game so that's all for today i hope you guys enjoyed don't forget to subscribe and like our videos also check out our other two videos here while you wait for our next video thank you and bye bye