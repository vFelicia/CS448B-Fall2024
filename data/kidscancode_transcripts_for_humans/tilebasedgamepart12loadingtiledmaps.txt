With timestamps:

00:00 - okay welcome back to a game development
00:02 - with PI game this is part 12 of the
00:04 - tile-based top-down shooter game and in
00:07 - this video we're going to get back to
00:10 - writing code and we're going to learn
00:11 - how to load the maps that we've created
00:15 - with tiled into our game in our last
00:19 - video we learned how to use the tiled
00:20 - map editor to make a map for our game
00:24 - and I went ahead and made this little
00:27 - map where I have a little house and laid
00:31 - out all the decorations and things
00:33 - hopefully you were able to play around
00:35 - with it and make some make a map for
00:37 - yourself or if not then you can click on
00:39 - the link below and download this map and
00:42 - use it yourself so we want to load this
00:46 - map into our game and use it as our game
00:50 - map so what we're going to need to do is
00:54 - we're gonna need to install a new Python
00:58 - library so if I open up terminal you
01:01 - should be able to do this whether you're
01:04 - on Mac or PC same way you installed PI
01:06 - game so I'm gonna say pip install PI TM
01:10 - X and that's all it takes
01:14 - now this library called PI TM X is
01:17 - installed and it's a Python library that
01:20 - knows how to read tiled map files okay
01:25 - so if we look at what our map file was
01:29 - that we saved I saved it in our Maps
01:35 - folder called level 1 ok this is what a
01:39 - tiled map file looks like it's not
01:43 - really intended to be human readable but
01:46 - it does have all the information in
01:48 - there about what tile goes where and
01:49 - what they all look like you know where
01:51 - they're located how big the tiles are
01:54 - width and height are 64 that kind of
01:56 - thing has a lot of information in it
01:58 - well PI TM X will read this and
02:02 - understand what it all means and use it
02:04 - to create our map so we don't have to
02:08 - read that so what we're going to do is
02:10 - we're going to go over to our
02:14 - Tom Knapp program right where we wrote a
02:17 - map class that loaded our text mouth
02:20 - file well we're gonna make another one
02:22 - we're gonna make I'm gonna leave that
02:24 - there so that we have it just in case we
02:26 - ever want to go back to our text map
02:28 - okay and I'm gonna make a new class
02:30 - called a tiled map okay
02:33 - and what a tiled map does is it's going
02:35 - to load whatever file name we specify
02:40 - which is going to be a TMX file and the
02:44 - command to load that file is PI T MX dot
02:48 - load underscore PI game the reason they
02:51 - have this load underscore PI game
02:54 - command is that PI TM X is just for
02:57 - reading tiled maps so you may not be
03:00 - using PI game you could still use PI TM
03:03 - x to do things and then there's one
03:06 - option that we need to set called pixel
03:09 - alpha to make sure that we get the
03:11 - transparency that goes with our with our
03:15 - tiles in our table now and then I'm
03:18 - gonna set a couple of properties here
03:20 - that are gonna be useful to know the
03:21 - total width of the map is going to be
03:25 - the width x TM tile with okay this width
03:34 - variable is how many tiles across the
03:37 - map is which we set to 50 and then the
03:40 - tile width is how many pixels wide each
03:41 - tile is which is 64 so 50 times 64
03:45 - that's how big my total map is and the
03:48 - same thing with the height TM height and
03:52 - TM taught tile height and then I'm just
03:58 - gonna store I'm gonna make a variable
03:59 - called TM x data that's just gonna hold
04:02 - all of this stuff so that we can refer
04:03 - to it okay and that's gonna be the init
04:07 - that will load our map and then I'm also
04:12 - gonna make a function called render and
04:15 - that's going to just take a surface and
04:18 - it's going a PI game surface and it's
04:21 - going to draw all the tiles of our map
04:23 - onto it
04:26 - and so if you remember I closed it so if
04:29 - you remember from the level one every
04:34 - layer of the map is named here right we
04:37 - have the ground layer and if I scroll
04:38 - down a bit you'll see the walls layer
04:41 - the items layer all the things that were
04:43 - there in my tiled map and each one is a
04:47 - list of what tiles are where in that map
04:50 - and each tile has its own ID which is
04:53 - some unique number that tiled assigned
04:55 - to each map tile you know each one is
05:00 - given it is given its own unique number
05:02 - well we can go through and read that and
05:05 - the term for that is a GID global
05:09 - identifier and so if we put here self
05:14 - dot TMX data get tile tile image by GID
05:22 - that's the command that you use to get
05:26 - it to find the image that goes with a
05:27 - certain tile right so when we get to
05:29 - here and we want to do tile number 98
05:33 - then there's some image that Maps you
05:36 - know that represents taonaya 98 and we
05:38 - want to get that image that maps tiny
05:39 - tile 98 that's what this is that's what
05:42 - this command does but this is a really
05:44 - long get tiled image by GID is a really
05:50 - long command so I'm just a liasing that
05:52 - command to ti4 tile image that way we
05:56 - don't have to type that whole long
05:58 - command multiple times so we need to go
06:01 - through the layers in our map so for
06:04 - each layer in self dot TMX data visible
06:09 - layers
06:10 - alright so tiled is going to have
06:13 - certain number of layers that are set to
06:15 - visible right because over here on our
06:16 - map that's what these check boxes are if
06:19 - I were to uncheck you know say the
06:22 - ground for example it should be a bad
06:23 - idea but if I did the ground is now set
06:25 - to visible so if I save this my game
06:28 - when it loads this map won't display the
06:31 - ground all right so you can have some
06:34 - layers be set to not visible if you
06:36 - don't want to use them for some
06:38 - particular reason
06:39 - so we're gonna go through each of the
06:40 - visible layers in our map and if that
06:44 - layer is a tile layer tiled the tiled
06:52 - tile layer and what we mean by that is
06:58 - again in tiled you can have multiple
07:00 - kinds of layers right when I click on
07:03 - new layer there's actually three
07:05 - different kinds of layers that you can
07:06 - create we've only worked with the tile
07:09 - layer so far we're going to talk a
07:11 - little layer later about what we can use
07:13 - these other types of layers for but we
07:15 - only care about these tile layers which
07:17 - are these grids where you can put tile
07:20 - images so I want to go through each of
07:23 - the layers in the map and if it's a tile
07:26 - layer then I need to get at the X the Y
07:31 - and the ID of each tile in that layer
07:39 - okay so we get the X the Y and the GID
07:42 - and then we're gonna say the the actual
07:47 - tile is equal to TI all right which is
07:51 - that get tile image by GID
07:53 - command if it's a tile then we're going
08:00 - to draw it on the surface so if your
08:03 - stub lit the tile and then the location
08:07 - we're going to blit it is at x times
08:18 - whatever our tile height is and Y times
08:22 - oops
08:24 - x times tau with sorry Y times
08:32 - - okay so we've lit our tile at whatever
08:37 - location it's supposed to be at okay so
08:40 - that's our that's our loop to go through
08:43 - and here I'll go ahead and put this on
08:47 - the next line just so you can see
08:50 - everything okay
08:51 - so so now I've in this render command
08:57 - I've gone through the tile data and I've
09:01 - found for each layer I've looked at
09:03 - every single tile and drawn it on the
09:05 - screen and we're going through the
09:06 - layers in the order that they're listed
09:08 - in the file so the ground will be first
09:10 - it's going to draw all the ground tiles
09:12 - then it's going to go to the next layer
09:14 - up and draw all the tiles for them which
09:16 - was the walls and so on so that's render
09:20 - and I need one more function in here to
09:25 - make this work okay and this is going to
09:28 - be make map and this this command is
09:34 - what I'm gonna run when I load the file
09:36 - I'm going to load the file and say make
09:37 - map wood and what make map is gonna do
09:39 - is it's gonna create a surface and I'm
09:42 - just going to call it the temp surface
09:43 - right now it's going to create a surface
09:45 - to draw the map onto okay and it's
09:55 - however big the tile map is and then I'm
10:01 - just gonna say self dot render onto that
10:05 - temp surface and then I'm going to
10:08 - return that temp surface
10:13 - so now I have my teller so I have my
10:18 - child map class all set
10:20 - it can load the file and it can make the
10:24 - map by rendering all the tiles in the
10:28 - proper locations onto some surface that
10:31 - it's gonna give back okay so that's our
10:34 - tiled map class so now we can go over to
10:38 - our main here and we're gonna go down
10:42 - here where we load all of our data right
10:44 - and we've made a map folder now so I'm
10:48 - going to duplicate this line and I'm
10:52 - going to call this the I'm going to call
10:54 - this the map folder and that's going to
10:57 - just be named that's the folder named
10:59 - Maps right because that's where we're
11:02 - saving our TMX files and then now self
11:07 - dot map is got not going to be to make a
11:11 - map it's going to be to make a tiled map
11:14 - okay and this tiled map is going to load
11:18 - that TMX file from the map folder it's
11:25 - going to load that TMX file which is
11:27 - called level 1 TM X ok so now I've
11:33 - loaded my map and then I'm going to make
11:38 - a surface for it the map image is just
11:42 - going to be self dot map dot make map
11:48 - alright so I do make map which is what
11:51 - we just got through writing it's going
11:52 - to go through and do this which runs
11:54 - through and does all the rendering and
11:58 - then I'm also going to make sure I have
12:02 - the map wrecked
12:08 - so I'll be able to locate it on the
12:10 - screen for where to draw it so that's
12:13 - all I need now I have a big image file
12:16 - that just shows the entire map that I
12:19 - drew so now we can go down to the draw
12:22 - section of our game and change oh by the
12:26 - way yeah and so we can go down to the
12:29 - map the draw section of our game and
12:31 - here we go I'm going to I'm not going to
12:35 - bother filling the background because we
12:37 - don't need to I'm just going to on the
12:42 - screen blit the map so I'm going to blit
12:45 - the map image and then the location I
12:50 - want to draw it is going to need to be
12:53 - shifted by the camera just the same as
12:55 - the other things that we've done right
12:57 - but here's the thing we have this camera
13:00 - dot apply command and that takes a
13:02 - sprite and moves the sprite or shifts
13:06 - the sprites rectangle to where it needs
13:08 - to be well this map is not a sprite it's
13:11 - a it only has a rectangle so we need to
13:14 - go over to our camera and we need to add
13:18 - another function here and what this
13:22 - function is going to do is instead of
13:25 - taking a sprite I'm gonna call this
13:27 - apply rect
13:28 - instead of taking a sprite it's going to
13:31 - just take it a rectangle and given that
13:33 - rectangle it's going to return that
13:36 - rectangle moved by whatever the camera
13:41 - offset is okay so now we have two
13:45 - options for using our camera we can
13:47 - apply the offset to a sprite or we can
13:50 - apply the offset to a rectangle so now
13:54 - over here I can save self-taught camera
13:56 - apply rect to the map right okay so I
14:05 - apply my offset to the map rect that
14:09 - went that line is a bit wide because I
14:11 - made my font size a little bigger
14:13 - because then people are asking me to
14:15 - make my font size a little bigger so
14:16 - they could see so all we need to do to
14:18 - draw the map is
14:20 - this okay and then we also need to just
14:23 - make sure here in our new this is where
14:27 - we were creating all of the sprites for
14:30 - things so one issue we're gonna have is
14:33 - we need to comment out this loop right
14:36 - because we don't have a map to go
14:40 - through with all of the ones and M's and
14:42 - peas and so forth but that means we
14:43 - don't have the P location so we don't
14:45 - have the spawn point for the player
14:47 - so just temporarily I'm just gonna spawn
14:51 - the player I'm gonna just spawn the
15:00 - player up in the upper right hand corner
15:03 - let's just say five comma five just so
15:06 - that it will spawn the player somewhere
15:07 - because we're gonna we're going to
15:09 - change around the way that works but for
15:10 - right now we'll do that so that we can
15:13 - see if this is working okay so when I
15:18 - run it this is what I see so there's my
15:20 - player there is my map and if I walk
15:23 - around the map will scroll excellent and
15:30 - just like with everything else when I
15:32 - get down to the edge it stops scrolling
15:34 - I do go off the edge because there's no
15:36 - obstacle there so that's something we
15:39 - will add soon but I can run around on my
15:45 - map everywhere and it's all being drawn
15:47 - properly and that's great but what about
15:53 - the walls right obviously I don't have
15:56 - any obstacles anymore so I am free to
16:01 - run around anywhere I want
16:06 - well now that we have the map loading in
16:09 - the next video what we're going to do is
16:11 - we're going to talk about how we use the
16:13 - object layer to indicate on our map
16:16 - where we want obstacles and other things
16:20 - like the player spawn point and things
16:22 - like that in our game to be where we
16:26 - want them to be on the map and so we're
16:28 - going to do that in the next video so
16:30 - this video we will wrap up here
16:33 - hopefully you have your map loading and
16:36 - working again you can download this map
16:39 - from the link below in the description
16:42 - if you want to use this one otherwise
16:45 - feel free to go ahead and draw your own
16:47 - it's all going to work the same no
16:49 - matter how you decide to draw it and I
16:52 - will see you in the next video please go
16:55 - ahead and hit that like button and
16:57 - subscribe and the next video will be
17:00 - along very soon bye
17:10 - you

Cleaned transcript:

okay welcome back to a game development with PI game this is part 12 of the tilebased topdown shooter game and in this video we're going to get back to writing code and we're going to learn how to load the maps that we've created with tiled into our game in our last video we learned how to use the tiled map editor to make a map for our game and I went ahead and made this little map where I have a little house and laid out all the decorations and things hopefully you were able to play around with it and make some make a map for yourself or if not then you can click on the link below and download this map and use it yourself so we want to load this map into our game and use it as our game map so what we're going to need to do is we're gonna need to install a new Python library so if I open up terminal you should be able to do this whether you're on Mac or PC same way you installed PI game so I'm gonna say pip install PI TM X and that's all it takes now this library called PI TM X is installed and it's a Python library that knows how to read tiled map files okay so if we look at what our map file was that we saved I saved it in our Maps folder called level 1 ok this is what a tiled map file looks like it's not really intended to be human readable but it does have all the information in there about what tile goes where and what they all look like you know where they're located how big the tiles are width and height are 64 that kind of thing has a lot of information in it well PI TM X will read this and understand what it all means and use it to create our map so we don't have to read that so what we're going to do is we're going to go over to our Tom Knapp program right where we wrote a map class that loaded our text mouth file well we're gonna make another one we're gonna make I'm gonna leave that there so that we have it just in case we ever want to go back to our text map okay and I'm gonna make a new class called a tiled map okay and what a tiled map does is it's going to load whatever file name we specify which is going to be a TMX file and the command to load that file is PI T MX dot load underscore PI game the reason they have this load underscore PI game command is that PI TM X is just for reading tiled maps so you may not be using PI game you could still use PI TM x to do things and then there's one option that we need to set called pixel alpha to make sure that we get the transparency that goes with our with our tiles in our table now and then I'm gonna set a couple of properties here that are gonna be useful to know the total width of the map is going to be the width x TM tile with okay this width variable is how many tiles across the map is which we set to 50 and then the tile width is how many pixels wide each tile is which is 64 so 50 times 64 that's how big my total map is and the same thing with the height TM height and TM taught tile height and then I'm just gonna store I'm gonna make a variable called TM x data that's just gonna hold all of this stuff so that we can refer to it okay and that's gonna be the init that will load our map and then I'm also gonna make a function called render and that's going to just take a surface and it's going a PI game surface and it's going to draw all the tiles of our map onto it and so if you remember I closed it so if you remember from the level one every layer of the map is named here right we have the ground layer and if I scroll down a bit you'll see the walls layer the items layer all the things that were there in my tiled map and each one is a list of what tiles are where in that map and each tile has its own ID which is some unique number that tiled assigned to each map tile you know each one is given it is given its own unique number well we can go through and read that and the term for that is a GID global identifier and so if we put here self dot TMX data get tile tile image by GID that's the command that you use to get it to find the image that goes with a certain tile right so when we get to here and we want to do tile number 98 then there's some image that Maps you know that represents taonaya 98 and we want to get that image that maps tiny tile 98 that's what this is that's what this command does but this is a really long get tiled image by GID is a really long command so I'm just a liasing that command to ti4 tile image that way we don't have to type that whole long command multiple times so we need to go through the layers in our map so for each layer in self dot TMX data visible layers alright so tiled is going to have certain number of layers that are set to visible right because over here on our map that's what these check boxes are if I were to uncheck you know say the ground for example it should be a bad idea but if I did the ground is now set to visible so if I save this my game when it loads this map won't display the ground all right so you can have some layers be set to not visible if you don't want to use them for some particular reason so we're gonna go through each of the visible layers in our map and if that layer is a tile layer tiled the tiled tile layer and what we mean by that is again in tiled you can have multiple kinds of layers right when I click on new layer there's actually three different kinds of layers that you can create we've only worked with the tile layer so far we're going to talk a little layer later about what we can use these other types of layers for but we only care about these tile layers which are these grids where you can put tile images so I want to go through each of the layers in the map and if it's a tile layer then I need to get at the X the Y and the ID of each tile in that layer okay so we get the X the Y and the GID and then we're gonna say the the actual tile is equal to TI all right which is that get tile image by GID command if it's a tile then we're going to draw it on the surface so if your stub lit the tile and then the location we're going to blit it is at x times whatever our tile height is and Y times oops x times tau with sorry Y times okay so we've lit our tile at whatever location it's supposed to be at okay so that's our that's our loop to go through and here I'll go ahead and put this on the next line just so you can see everything okay so so now I've in this render command I've gone through the tile data and I've found for each layer I've looked at every single tile and drawn it on the screen and we're going through the layers in the order that they're listed in the file so the ground will be first it's going to draw all the ground tiles then it's going to go to the next layer up and draw all the tiles for them which was the walls and so on so that's render and I need one more function in here to make this work okay and this is going to be make map and this this command is what I'm gonna run when I load the file I'm going to load the file and say make map wood and what make map is gonna do is it's gonna create a surface and I'm just going to call it the temp surface right now it's going to create a surface to draw the map onto okay and it's however big the tile map is and then I'm just gonna say self dot render onto that temp surface and then I'm going to return that temp surface so now I have my teller so I have my child map class all set it can load the file and it can make the map by rendering all the tiles in the proper locations onto some surface that it's gonna give back okay so that's our tiled map class so now we can go over to our main here and we're gonna go down here where we load all of our data right and we've made a map folder now so I'm going to duplicate this line and I'm going to call this the I'm going to call this the map folder and that's going to just be named that's the folder named Maps right because that's where we're saving our TMX files and then now self dot map is got not going to be to make a map it's going to be to make a tiled map okay and this tiled map is going to load that TMX file from the map folder it's going to load that TMX file which is called level 1 TM X ok so now I've loaded my map and then I'm going to make a surface for it the map image is just going to be self dot map dot make map alright so I do make map which is what we just got through writing it's going to go through and do this which runs through and does all the rendering and then I'm also going to make sure I have the map wrecked so I'll be able to locate it on the screen for where to draw it so that's all I need now I have a big image file that just shows the entire map that I drew so now we can go down to the draw section of our game and change oh by the way yeah and so we can go down to the map the draw section of our game and here we go I'm going to I'm not going to bother filling the background because we don't need to I'm just going to on the screen blit the map so I'm going to blit the map image and then the location I want to draw it is going to need to be shifted by the camera just the same as the other things that we've done right but here's the thing we have this camera dot apply command and that takes a sprite and moves the sprite or shifts the sprites rectangle to where it needs to be well this map is not a sprite it's a it only has a rectangle so we need to go over to our camera and we need to add another function here and what this function is going to do is instead of taking a sprite I'm gonna call this apply rect instead of taking a sprite it's going to just take it a rectangle and given that rectangle it's going to return that rectangle moved by whatever the camera offset is okay so now we have two options for using our camera we can apply the offset to a sprite or we can apply the offset to a rectangle so now over here I can save selftaught camera apply rect to the map right okay so I apply my offset to the map rect that went that line is a bit wide because I made my font size a little bigger because then people are asking me to make my font size a little bigger so they could see so all we need to do to draw the map is this okay and then we also need to just make sure here in our new this is where we were creating all of the sprites for things so one issue we're gonna have is we need to comment out this loop right because we don't have a map to go through with all of the ones and M's and peas and so forth but that means we don't have the P location so we don't have the spawn point for the player so just temporarily I'm just gonna spawn the player I'm gonna just spawn the player up in the upper right hand corner let's just say five comma five just so that it will spawn the player somewhere because we're gonna we're going to change around the way that works but for right now we'll do that so that we can see if this is working okay so when I run it this is what I see so there's my player there is my map and if I walk around the map will scroll excellent and just like with everything else when I get down to the edge it stops scrolling I do go off the edge because there's no obstacle there so that's something we will add soon but I can run around on my map everywhere and it's all being drawn properly and that's great but what about the walls right obviously I don't have any obstacles anymore so I am free to run around anywhere I want well now that we have the map loading in the next video what we're going to do is we're going to talk about how we use the object layer to indicate on our map where we want obstacles and other things like the player spawn point and things like that in our game to be where we want them to be on the map and so we're going to do that in the next video so this video we will wrap up here hopefully you have your map loading and working again you can download this map from the link below in the description if you want to use this one otherwise feel free to go ahead and draw your own it's all going to work the same no matter how you decide to draw it and I will see you in the next video please go ahead and hit that like button and subscribe and the next video will be along very soon bye you
