With timestamps:

00:00 - in this tutorial I'll be demonstrating
00:02 - how to set up navigation using tile maps
00:06 - now often people get confused when
00:09 - setting up navigation especially when
00:11 - they're using non orthogonal tiles like
00:14 - the isometric ones you see here
00:16 - or hex shape tiles for example but
00:19 - whatever tile shape you're using there
00:21 - are a few simple rules you need to
00:23 - follow to make sure your navigation
00:25 - works well now one thing I won't be
00:28 - covering in this video is the code
00:31 - required to move your character through
00:33 - the map for that part I've partnered up
00:36 - with Nathan at GD Quest I'll link to his
00:39 - video at the end and in the comments
00:41 - below and you can go there to learn how
00:44 - to use the navigation once you have it
00:46 - set up to begin you can download the
00:49 - starter project from the link below it
00:52 - contains the art assets we'll be using
00:53 - for our tiles unzip the file and then
00:56 - import the project in the project
00:58 - manager navigation 2d works by using
01:00 - navigation polygons here I've drawn a
01:03 - big navigation polygon just by itself as
01:07 - long as I click inside the polygon the
01:10 - navigation 2d will be able to find a
01:12 - path to that position now when you have
01:16 - a tile map you're not going to be
01:18 - drawing one big polygon instead you're
01:21 - going to have a polygon assigned to each
01:23 - tile and then at runtime
01:25 - the tile map node will combine all of
01:28 - those individual polygons into one large
01:32 - one that covers your whole map here's
01:34 - our setup for our navigation scene I
01:37 - have a navigation 2d node with a tile
01:40 - map as a child of it the sprite and the
01:43 - line 2d are going to be for the
01:44 - character that moves around and again
01:46 - you can go over to Nathan's video to see
01:49 - how the code works to make the movement
01:51 - we're going to stick to the tom app for
01:54 - this one now to make the tile set that
01:58 - goes in your Tom app you can use the new
02:02 - editor in good√∂ 3.1 which lets you chop
02:07 - up your image file into the tiles and
02:10 - assign polygons and all that kind of
02:12 - thing however I'm not going to
02:13 - use this I'm going to use the
02:16 - old-fashioned to create a scene and
02:18 - export it as a tile set and I'll explain
02:20 - why as we get a little further into this
02:22 - demo so let's drag our isometric tile
02:25 - out here to create a sprite and I'm
02:29 - going to make sure to set its position
02:30 - at zero zero because I want to be able
02:33 - to keep this thing centered so here's
02:39 - our isometric tile and unlike a square
02:42 - tile you're gonna want to make sure that
02:44 - your spacing is correct for example if I
02:48 - were to duplicate this and you saw a
02:50 - second tile when they're in the tile map
02:53 - we don't want these laid out in a grid
02:54 - and all spaced out we want them to
02:57 - overlap a certain amount so that the
03:02 - tile behind is covered by the tile in
03:05 - front all right they're gonna line up
03:06 - like that or over on this side and so
03:09 - that means that our polygons are going
03:12 - to have be affected by that too but
03:14 - let's start by getting our tile map
03:15 - working so I'm gonna choose convert to
03:17 - tile set I'm going to call this
03:20 - isometric tile set te R est re s stands
03:25 - for text resource in Godot so it's a
03:28 - resource file stored in a text format
03:30 - hit save we go over to our isometric
03:33 - example and we're going to load that
03:35 - into our tile set property of our
03:37 - timeout I'm just gonna load here
03:39 - isometric Taos there's my tile now
03:42 - obviously I can't just start laying them
03:44 - out because my tile map has to be
03:47 - configured properly so you click on the
03:49 - cell and expand it and we're gonna need
03:52 - to make a couple changes over here first
03:54 - we're going to change the mode to
03:56 - isometric and then for the cell size I
04:01 - need the size of this top piece of my
04:05 - tile the this parallelogram up here
04:08 - which in the case of my tiles here is
04:12 - 120 wide and 70 tall and now when I put
04:19 - my tiles out here they line up as I
04:22 - would expect so here's a quick map I
04:24 - drew out that'll give us a good test
04:27 - to see that our navigation is working
04:28 - that it finds a path around and for
04:31 - example these little islands here in the
04:32 - middle should be unreachable because
04:34 - there's no path to them so now we need
04:36 - to create our navigation polygons on our
04:38 - tile and this is really the reason for
04:41 - this entire tutorial is I very often
04:43 - encounter users on the QA forums or on
04:47 - the discord who are trying to do
04:50 - navigation in tile maps especially in
04:54 - non-square time apps and can't figure
04:58 - out why their navigation doesn't work
04:59 - and it's because you have to create the
05:01 - polygons in a specific way to make sure
05:04 - that they are processed correctly so
05:06 - let's go over to our tile here so this
05:10 - is where we want to make our navigation
05:12 - polygon that covers the top of the tile
05:15 - so it's gonna need to be 120 wide and 70
05:19 - tall and so over here on my tile I'm
05:23 - going to add a navigation polygon
05:26 - instance and I'm going to just click on
05:29 - the screen and it's gonna ask me if I
05:30 - want to create a new polygon for this
05:33 - and I do and I'm not gonna worry about
05:35 - the points at the moment I'm just gonna
05:37 - draw four of them so there's a
05:39 - navigation polygon and I need these to
05:43 - be aligned exactly and since we've
05:46 - turned on grid snapping which I've set
05:49 - to one pixel then each one of these
05:52 - points is I'm gonna make sure that they
05:54 - are at whole-number pixels as I move
05:58 - them around and that's going to be
06:00 - really important and the other thing is
06:03 - I need to get these aligned exactly now
06:06 - if this whole height here is 70 how can
06:11 - I tell that I've lined them up right
06:13 - well one thing you can do is use the
06:15 - ruler over here I'm going to take the
06:18 - the entire sprite and I'm going to shift
06:20 - it down so that it's centered on the
06:23 - x-axis make it a little easier to for us
06:26 - to do the lining up now we want to use
06:29 - the ruler so one thing you can do is you
06:32 - can zoom in really far and you can pull
06:34 - these things up and put them at exactly
06:37 - 35 right that's half of
06:40 - if you can see over here here's 34 and
06:44 - 36 you can even move over like this put
06:47 - it right next to the ruler if you're
06:49 - concerned about getting it lined up just
06:50 - right but we want that at 35 just half
06:52 - of 70 and then down here we want this
06:55 - one on the x-axis and then we want it at
06:59 - 60 pixels again right there lined up at
07:03 - 60 same on this side we want this to go
07:07 - over to the 60 line and finally clicked
07:11 - away from the polygon we want this last
07:13 - one to be down at minus 35 which if we
07:18 - zoom over here you can see I am at 35
07:25 - now I know that my polygon ish is sized
07:29 - exactly right and this is really
07:33 - important because when you have two
07:38 - tiles let's duplicate this for a second
07:40 - just to look at it when you have two
07:42 - tiles and they're the tiles are aligned
07:46 - like this if the two polygons don't
07:50 - align exactly and by exactly I mean
07:52 - whole number amounts if you don't have
07:55 - snap-on and your pixel or your position
07:59 - of your vertex here is at you know
08:01 - negative thirty five point three to one
08:04 - then they're not going to align exactly
08:06 - right if they don't align exactly right
08:08 - the tile map will not be able to blend
08:12 - these into one large polygon and you'll
08:14 - find that you can move around on this
08:16 - tile but you can't cross over into this
08:18 - tile you click over here you get no
08:20 - movement
08:23 - so let's convert this to tile set again
08:26 - this time it has polygons on it make
08:29 - sure you have the merge with existing
08:31 - over here set to OFF that way when you
08:35 - save it or it'll overwrite the tile set
08:37 - you did before instead of trying to
08:38 - merge them together which can sometimes
08:41 - cause issues when you're changing
08:43 - individual tiles I mean save over right
08:47 - now if we go over to our isometric
08:50 - example here everything should be good
08:52 - let's hit run and let's see what happens
08:55 - there we go you can see it's finding the
08:58 - path around winding around between if I
09:01 - click on the little island there's no
09:03 - path to there so it doesn't it's not
09:04 - able to move and everything is working
09:08 - as expected now I'm just gonna show you
09:12 - real quick what would happen if you
09:14 - didn't do this right like let's say that
09:17 - this was this one was off just even one
09:20 - pixel all right so now this polygon is
09:23 - not gonna line up with an adjacent one
09:25 - now I'm clicking nothing happens it's
09:28 - the only time I move is when I'm in the
09:30 - same clicking in the same tile so if you
09:34 - have this problem it could very well be
09:37 - because of your navigation polygons not
09:41 - aligning now in Godot 3.1 you can use
09:45 - the tile set editor to edit your tiles
09:48 - it looks like this you have the
09:51 - individual tiles and you can click on
09:55 - edit here and change around their
09:57 - various polygons the problem with this
10:00 - when trying to do precise measurements
10:02 - like we needed to do for the isometric
10:05 - tile is as you can see there's no rulers
10:07 - so while you can turn on grid snapping
10:10 - and configure it to one pixel and all
10:13 - that it's really hard to measure it out
10:15 - if you know you exactly need you know
10:17 - something to be sixty pixels wide or
10:20 - something like that because of that I
10:21 - found it easier for this particular
10:23 - project to use the scene export to tile
10:26 - set method instead of using the new
10:28 - editor hopefully over time this editor
10:30 - will improve and give us some more
10:32 - functionality where it makes it easier
10:34 - to do
10:35 - those kinds of precise polygons drawing
10:37 - so now that we've looked at isometric
10:39 - tiles let's briefly move over and take a
10:42 - look at hexagon shape tiles so here are
10:45 - a couple of hex tiles ones gonna be our
10:49 - clear space and one has an obstacle in
10:51 - it so we'll add a nav poly to this tile
10:54 - so we can walk through it and we won't
10:56 - add 1 to this tile so it'll be an
10:57 - obstacle that we can't walk through
10:58 - first let's go over and set up the tile
11:01 - map node so here we have the same exact
11:05 - scene set up as we did for the isometric
11:08 - demo the only difference is going to be
11:10 - how we configure the tile map the code
11:12 - will be the same everything else will be
11:14 - the same so for the tile map there isn't
11:17 - a mode for hex but that's ok we're gonna
11:21 - stick with square and we're gonna enable
11:23 - 1/2 offset in the x-axis that's going to
11:28 - make alternating rows offset from each
11:30 - other sort of in a brick pattern like a
11:33 - brick wall I don't know if you can see
11:35 - this on the video the orange the pale
11:37 - orange grid lines don't show up too well
11:40 - so hopefully you can see that but you'll
11:43 - see it when we start laying them out and
11:46 - then we'll go ahead and load the hex
11:48 - tiles just so we can see what they look
11:50 - like so obviously this isn't the right
11:53 - layout right so we need to set the size
11:56 - now the size of these hexes is 120 wide
12:02 - by 140 tall but if I put that in there
12:07 - 120 by 140 then we're gonna get the
12:12 - horizontal spacing fine but then the
12:15 - vertical spacing is gonna be too far
12:16 - apart right there to spread out because
12:19 - each individual square doesn't overlap
12:21 - any so we need this height to be smaller
12:24 - if you look at the tile this distance
12:27 - here from the top to this corner right
12:30 - here is 35 pixels so we would if we took
12:34 - away 35 pixels this would shift up that
12:36 - far so 140 minus 35 we're gonna put this
12:40 - to 105 now you can see they moved up and
12:43 - they meet but there is some lines that
12:47 - you can see between
12:48 - the tiles and that's because these tiles
12:51 - have some if you zoom in have some
12:54 - aliasing going on here on the edges so
12:58 - what we can actually do is set this to
13:01 - 104 it actually shifted up one more
13:04 - pixel and that's gonna blend those lines
13:06 - together so that when we run it this is
13:09 - gonna be very hard to see right
13:11 - obviously when you zoom in we can see it
13:12 - a little bit but looks a little nicer so
13:15 - now we can you know draw our tiles they
13:20 - blend together just fine we can have our
13:22 - obstacles you know we make a big area to
13:25 - run around in just paint this up and
13:31 - then we'll put some obstacles that we
13:36 - have to kind of avoid and walk around
13:40 - and when we run it you'll see this looks
13:45 - nice and smooth so now we just need to
13:51 - make those navigation polygons and so
13:54 - this is going to be the same situation
13:55 - as with the isometric tile which is that
13:59 - we need these points to be aligned with
14:04 - the corner so we started with this one
14:08 - right here being at zero in the y-axis
14:12 - and these over here are at 35 just like
14:18 - we counted before so this line comes
14:22 - down to 35 the width over here is 120
14:28 - and then I did the same thing here where
14:32 - I moved it up one pixel so instead of
14:34 - being at 35 up from the bottom it's 36
14:39 - up from the bottom so that the height
14:41 - will be 104 and that's going to make
14:43 - these again aligned exactly the same way
14:48 - the tiles are aligned and the polygons
14:50 - will be blended together just fine so if
14:54 - we go over here and run the hex example
14:57 - with that tile set we get the same kind
15:00 - of
15:01 - that we would get in any other kind of
15:06 - tileset so hopefully this helps you out
15:14 - when you're making your own navigation
15:15 - on your tile sets and prevents you from
15:19 - having any of those frustrating issues
15:20 - of not being able to figure out why
15:22 - things won't move and that's for the
15:24 - code for calculating the path through
15:26 - the navigation tile set I will direct
15:31 - you over to Nathan's video at GD quest
15:33 - and you can see how that's done as well
15:35 - thanks for watching and I'll see you in
15:38 - future videos

Cleaned transcript:

in this tutorial I'll be demonstrating how to set up navigation using tile maps now often people get confused when setting up navigation especially when they're using non orthogonal tiles like the isometric ones you see here or hex shape tiles for example but whatever tile shape you're using there are a few simple rules you need to follow to make sure your navigation works well now one thing I won't be covering in this video is the code required to move your character through the map for that part I've partnered up with Nathan at GD Quest I'll link to his video at the end and in the comments below and you can go there to learn how to use the navigation once you have it set up to begin you can download the starter project from the link below it contains the art assets we'll be using for our tiles unzip the file and then import the project in the project manager navigation 2d works by using navigation polygons here I've drawn a big navigation polygon just by itself as long as I click inside the polygon the navigation 2d will be able to find a path to that position now when you have a tile map you're not going to be drawing one big polygon instead you're going to have a polygon assigned to each tile and then at runtime the tile map node will combine all of those individual polygons into one large one that covers your whole map here's our setup for our navigation scene I have a navigation 2d node with a tile map as a child of it the sprite and the line 2d are going to be for the character that moves around and again you can go over to Nathan's video to see how the code works to make the movement we're going to stick to the tom app for this one now to make the tile set that goes in your Tom app you can use the new editor in good√∂ 3.1 which lets you chop up your image file into the tiles and assign polygons and all that kind of thing however I'm not going to use this I'm going to use the oldfashioned to create a scene and export it as a tile set and I'll explain why as we get a little further into this demo so let's drag our isometric tile out here to create a sprite and I'm going to make sure to set its position at zero zero because I want to be able to keep this thing centered so here's our isometric tile and unlike a square tile you're gonna want to make sure that your spacing is correct for example if I were to duplicate this and you saw a second tile when they're in the tile map we don't want these laid out in a grid and all spaced out we want them to overlap a certain amount so that the tile behind is covered by the tile in front all right they're gonna line up like that or over on this side and so that means that our polygons are going to have be affected by that too but let's start by getting our tile map working so I'm gonna choose convert to tile set I'm going to call this isometric tile set te R est re s stands for text resource in Godot so it's a resource file stored in a text format hit save we go over to our isometric example and we're going to load that into our tile set property of our timeout I'm just gonna load here isometric Taos there's my tile now obviously I can't just start laying them out because my tile map has to be configured properly so you click on the cell and expand it and we're gonna need to make a couple changes over here first we're going to change the mode to isometric and then for the cell size I need the size of this top piece of my tile the this parallelogram up here which in the case of my tiles here is 120 wide and 70 tall and now when I put my tiles out here they line up as I would expect so here's a quick map I drew out that'll give us a good test to see that our navigation is working that it finds a path around and for example these little islands here in the middle should be unreachable because there's no path to them so now we need to create our navigation polygons on our tile and this is really the reason for this entire tutorial is I very often encounter users on the QA forums or on the discord who are trying to do navigation in tile maps especially in nonsquare time apps and can't figure out why their navigation doesn't work and it's because you have to create the polygons in a specific way to make sure that they are processed correctly so let's go over to our tile here so this is where we want to make our navigation polygon that covers the top of the tile so it's gonna need to be 120 wide and 70 tall and so over here on my tile I'm going to add a navigation polygon instance and I'm going to just click on the screen and it's gonna ask me if I want to create a new polygon for this and I do and I'm not gonna worry about the points at the moment I'm just gonna draw four of them so there's a navigation polygon and I need these to be aligned exactly and since we've turned on grid snapping which I've set to one pixel then each one of these points is I'm gonna make sure that they are at wholenumber pixels as I move them around and that's going to be really important and the other thing is I need to get these aligned exactly now if this whole height here is 70 how can I tell that I've lined them up right well one thing you can do is use the ruler over here I'm going to take the the entire sprite and I'm going to shift it down so that it's centered on the xaxis make it a little easier to for us to do the lining up now we want to use the ruler so one thing you can do is you can zoom in really far and you can pull these things up and put them at exactly 35 right that's half of if you can see over here here's 34 and 36 you can even move over like this put it right next to the ruler if you're concerned about getting it lined up just right but we want that at 35 just half of 70 and then down here we want this one on the xaxis and then we want it at 60 pixels again right there lined up at 60 same on this side we want this to go over to the 60 line and finally clicked away from the polygon we want this last one to be down at minus 35 which if we zoom over here you can see I am at 35 now I know that my polygon ish is sized exactly right and this is really important because when you have two tiles let's duplicate this for a second just to look at it when you have two tiles and they're the tiles are aligned like this if the two polygons don't align exactly and by exactly I mean whole number amounts if you don't have snapon and your pixel or your position of your vertex here is at you know negative thirty five point three to one then they're not going to align exactly right if they don't align exactly right the tile map will not be able to blend these into one large polygon and you'll find that you can move around on this tile but you can't cross over into this tile you click over here you get no movement so let's convert this to tile set again this time it has polygons on it make sure you have the merge with existing over here set to OFF that way when you save it or it'll overwrite the tile set you did before instead of trying to merge them together which can sometimes cause issues when you're changing individual tiles I mean save over right now if we go over to our isometric example here everything should be good let's hit run and let's see what happens there we go you can see it's finding the path around winding around between if I click on the little island there's no path to there so it doesn't it's not able to move and everything is working as expected now I'm just gonna show you real quick what would happen if you didn't do this right like let's say that this was this one was off just even one pixel all right so now this polygon is not gonna line up with an adjacent one now I'm clicking nothing happens it's the only time I move is when I'm in the same clicking in the same tile so if you have this problem it could very well be because of your navigation polygons not aligning now in Godot 3.1 you can use the tile set editor to edit your tiles it looks like this you have the individual tiles and you can click on edit here and change around their various polygons the problem with this when trying to do precise measurements like we needed to do for the isometric tile is as you can see there's no rulers so while you can turn on grid snapping and configure it to one pixel and all that it's really hard to measure it out if you know you exactly need you know something to be sixty pixels wide or something like that because of that I found it easier for this particular project to use the scene export to tile set method instead of using the new editor hopefully over time this editor will improve and give us some more functionality where it makes it easier to do those kinds of precise polygons drawing so now that we've looked at isometric tiles let's briefly move over and take a look at hexagon shape tiles so here are a couple of hex tiles ones gonna be our clear space and one has an obstacle in it so we'll add a nav poly to this tile so we can walk through it and we won't add 1 to this tile so it'll be an obstacle that we can't walk through first let's go over and set up the tile map node so here we have the same exact scene set up as we did for the isometric demo the only difference is going to be how we configure the tile map the code will be the same everything else will be the same so for the tile map there isn't a mode for hex but that's ok we're gonna stick with square and we're gonna enable 1/2 offset in the xaxis that's going to make alternating rows offset from each other sort of in a brick pattern like a brick wall I don't know if you can see this on the video the orange the pale orange grid lines don't show up too well so hopefully you can see that but you'll see it when we start laying them out and then we'll go ahead and load the hex tiles just so we can see what they look like so obviously this isn't the right layout right so we need to set the size now the size of these hexes is 120 wide by 140 tall but if I put that in there 120 by 140 then we're gonna get the horizontal spacing fine but then the vertical spacing is gonna be too far apart right there to spread out because each individual square doesn't overlap any so we need this height to be smaller if you look at the tile this distance here from the top to this corner right here is 35 pixels so we would if we took away 35 pixels this would shift up that far so 140 minus 35 we're gonna put this to 105 now you can see they moved up and they meet but there is some lines that you can see between the tiles and that's because these tiles have some if you zoom in have some aliasing going on here on the edges so what we can actually do is set this to 104 it actually shifted up one more pixel and that's gonna blend those lines together so that when we run it this is gonna be very hard to see right obviously when you zoom in we can see it a little bit but looks a little nicer so now we can you know draw our tiles they blend together just fine we can have our obstacles you know we make a big area to run around in just paint this up and then we'll put some obstacles that we have to kind of avoid and walk around and when we run it you'll see this looks nice and smooth so now we just need to make those navigation polygons and so this is going to be the same situation as with the isometric tile which is that we need these points to be aligned with the corner so we started with this one right here being at zero in the yaxis and these over here are at 35 just like we counted before so this line comes down to 35 the width over here is 120 and then I did the same thing here where I moved it up one pixel so instead of being at 35 up from the bottom it's 36 up from the bottom so that the height will be 104 and that's going to make these again aligned exactly the same way the tiles are aligned and the polygons will be blended together just fine so if we go over here and run the hex example with that tile set we get the same kind of that we would get in any other kind of tileset so hopefully this helps you out when you're making your own navigation on your tile sets and prevents you from having any of those frustrating issues of not being able to figure out why things won't move and that's for the code for calculating the path through the navigation tile set I will direct you over to Nathan's video at GD quest and you can see how that's done as well thanks for watching and I'll see you in future videos
