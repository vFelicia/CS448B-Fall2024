With timestamps:

00:00 - look at that this is part five of space
00:03 - rocks where we make a full and complete
00:05 - game in the Godot game engine and this
00:08 - part we're going to make our bullets
00:09 - collide with the asteroids and make them
00:11 - break up into smaller asteroids just
00:14 - like they're supposed to all right let's
00:15 - get started all right we're ready to
00:19 - start making the bullets destroy the
00:21 - asteroids and to get ready to go what
00:24 - I've done is I've added an asteroid
00:25 - container which is just a basic node to
00:28 - the main scene here
00:30 - I find it to a variable and when I spawn
00:34 - the media to the asteroid that's where
00:35 - I'm putting them as children that's
00:38 - going to help us later when we want to
00:40 - tell if we have destroyed all the
00:43 - asteroids and the players ready to move
00:45 - on to the next level or whatever okay so
00:48 - let's start with the player bullet the
00:52 - player bullet is an area 2d that means
00:55 - over here in the signal it has it can
00:59 - detect one other areas enter and exit it
01:01 - and it can detect when other bodies
01:03 - enter and exit it we're going to say
01:06 - body enter the body enter signal we're
01:09 - just going to connect that to the player
01:10 - bullet script and so when this signal
01:13 - fires off it gives you the body that it
01:18 - detected and we want four to start with
01:22 - we want to just delete that that body
01:25 - but really we only want to delete that
01:27 - body if it's an asteroid so over on our
01:31 - asteroid script what we can do is when
01:34 - the asteroid first is created we can add
01:38 - two group and we'll just call those
01:41 - asteroids groups are just like tags you
01:45 - can assign two objects to track them
01:46 - right so now every asteroid object will
01:50 - have this asteroids tag on it and in the
01:53 - player bullet here when we detect a body
01:56 - entering we can find out if it's one of
01:59 - those groups so if body get groups have
02:06 - asteroids
02:09 - okay so it could have asteroids and it's
02:14 - list of groups then we are going to do
02:18 - two things we're going to q3 meaning
02:24 - we're going to delete the bullets that
02:26 - hit that and right now I'm just going to
02:29 - print body get name just so we can see
02:35 - what is happening so it's like it run
02:39 - here now and I fire the bullet the other
02:42 - bullet disappeared and it's printing out
02:45 - the name of that asteroid
02:46 - right I mean there's a different one
02:48 - there's a different one all right these
02:50 - are the automatically assigned names
02:52 - that Godot gave them when they were
02:55 - instanced that's fine you can see it's
02:57 - definitely detecting it and the bullet
02:59 - was deleted so we want that that
03:03 - asteroid to explode and that might mean
03:06 - a number of different things so we're
03:09 - going to say body dot explode and then
03:11 - we're going to define that over in the
03:14 - asteroid itself that that's right to do
03:17 - whatever explode is defined to do all
03:20 - right so in explode or in the asteroid
03:23 - script we could define our function
03:25 - explode and just say Q free on this and
03:33 - that would work fine we could just do
03:34 - that and it would be destroyed okay
03:40 - that's all good but not really what we
03:44 - want for asteroids right we want to
03:46 - spawn smaller one whenever we hit them
03:49 - with a bullet we need to change up a few
03:52 - things
03:52 - one of the things we need to change here
03:54 - is this init function when we first
03:57 - instance an asteroid it might not
04:01 - necessarily be a full-sized one that we
04:06 - want to that we want to make right and
04:09 - so we're passing the size and we're
04:11 - testing the position we're also going to
04:15 - pass the velocity because if we're
04:17 - taking a big one and it's been hit we're
04:19 - going to want to tell the news
04:22 - the break off of it what direction to go
04:26 - in and let's be to going so so I'm going
04:28 - to change this function a little bit to
04:30 - say it's the initial size the initial
04:35 - position and the initial velocity to
04:39 - keep the names consistent okay and so we
04:43 - have our now we didn't make that
04:47 - variable so I'm going to I'm going to
04:48 - declare a size variable up here makes
04:52 - things easier to track and we're going
04:55 - to set size equal to in its size and
04:59 - then for the velocity we have two
05:05 - choices either it's a new large size
05:09 - after its ponding at the beginning of
05:10 - the level in which case we want be
05:13 - random velocity or it's a new one that
05:18 - we're telling it what velocity we want
05:20 - so we have two possibilities there and
05:25 - this is what we want to do if we're
05:28 - picking a random one so I'm going to
05:30 - take this code and move it down into the
05:34 - in it as well and we're going to stay if
05:37 - the init velocity length is greater than
05:44 - zero and we're just going to use that
05:47 - and itself if it means if we positive
05:51 - velocity we'll use it otherwise we give
05:55 - it a zero velocity we're going to use
05:57 - this and then just like we've been doing
06:02 - we randomized the patient speed figure
06:05 - out what texture sets shape and all of
06:10 - that okay now we need to make some
06:12 - changes in our main script so this code
06:16 - right here instances and asteroid and
06:18 - initializes it right and adds it to the
06:20 - container but we're going to want to do
06:22 - that when we spawn smaller ones to off
06:24 - of the explosions so I'm going to define
06:27 - a function called spawn asteroid and
06:31 - this function expects us to tell it what
06:35 - size position
06:36 - and velocity we want it to have this I'm
06:42 - going to put in here and we're going to
06:48 - just say a dot in it using the size
06:53 - position and velocity and then our
06:57 - initial ones that we spawn at the
06:58 - beginning of the game we just say spawn
07:04 - asteroid big one spawn position and this
07:12 - on the next line and the speed we want
07:14 - to put reviews is just zero zero that
07:18 - way we'll randomized okay and so that'll
07:21 - do the same thing alright spawn them at
07:25 - the random spots and randomize the
07:29 - velocity now we need to figure out what
07:34 - to do when the bullet hits and we want
07:35 - to spawn two smaller lists
07:38 - so in our asteroid when we hit the
07:41 - explode function here we're going to
07:44 - emit signal we call that signal explode
07:49 - and we're going to pass out to the main
07:54 - function the main scene is what's going
07:57 - to catch this get to the signal so we're
08:00 - going to tell it what size we were when
08:01 - we exploded what position we were at
08:05 - when we exploded and what speed we were
08:07 - going when we exploded and so we'll just
08:11 - define that signal up here at the top
08:13 - signal explode so now whenever our
08:20 - that's right is exploded it's going to
08:22 - send out this signal and in main when we
08:25 - spawn an asteroid we can connect that
08:27 - signal using connect
08:35 - and what we want to connect is we
08:37 - explode signal we want to connect it to
08:42 - a function locally and we'll call it
08:47 - explode asteroid and then we just need
08:53 - to define that function and since we're
09:02 - going to be passing in size position and
09:05 - velocity we need to expect those to be
09:07 - coming and now we need to figure out
09:11 - what our new sizes are going to be right
09:14 - if it was a large asteroid we wanted to
09:18 - split into two medium ones it was medium
09:20 - we split into two small ones and so on
09:23 - so I'm going to just declare that in a
09:28 - dictionary up here and it's called the
09:31 - break pattern right what pattern are the
09:33 - apps words going to break up into okay
09:35 - if they're big they're going to go to
09:38 - medium if they are medium quotes never
09:47 - cooperate with me we're going to break
09:52 - up into small if we are small we're
09:56 - going to break up into tiny and if we
10:00 - are tiny there's nothing left so we're
10:05 - going to have null there so there's
10:06 - nothing to come out too tiny that's the
10:08 - end of the chain so when we explode we
10:13 - just need to check what size we're going
10:15 - to so the new size we're going to use is
10:19 - break break pattern whatever size we
10:25 - currently are and so now we'll know what
10:27 - size we want to be if new size so if
10:31 - there wasn't if it wasn't tiny so that
10:33 - we got null then we want to we want to
10:37 - spawn two new ones
10:43 - when we spawned these two new ones we
10:45 - don't want to spawn them at the same
10:46 - position if we do then they'll be
10:48 - overlapping
10:49 - and we have our asteroids are set to be
10:52 - kinematic body 2ds and they're supposed
10:55 - to collide off of each other
10:56 - treat each other as solid bodies and if
10:59 - two solid bodies are overlapping or
11:02 - inside of each other then the collision
11:04 - resolution is going to be broken and we
11:08 - will get asteroids flying off at crazy
11:12 - speeds and weird things like that so we
11:16 - want to make sure we spawn them next to
11:18 - each other and we want to spawn them
11:20 - with different velocities going in.i
11:22 - dealing in opposite directions right
11:24 - like they exploded outwards from the
11:27 - destruction of the big one and so the
11:31 - nicest way that I think we can do that
11:34 - is when the bullet hits and it tells the
11:38 - body to explode we're going to pass in
11:41 - the velocity that the bullet was going
11:45 - and actually I don't care about the
11:47 - velocity I really care about the
11:48 - direction so I'm going to normalize it
11:50 - so that way I know what direction I was
11:54 - hit from and I can make the new ones fly
11:58 - out in a perpendicular direction from
12:00 - that okay so that means when we explode
12:03 - we're passing in the velocity so on the
12:07 - asteroid going to explode we're going to
12:09 - get whatever the thing that hit us was
12:15 - doing right so we'll call it the hit
12:18 - velocity and we will pass that in as
12:24 - well when we extended the signal so here
12:28 - we're going to get on main we're going
12:31 - to get to hit velocity as well so if we
12:36 - are responding to new ones then I'm
12:39 - going to have an offset of negative one
12:43 - or one this is going to make them do the
12:45 - opposite directions right I'll multiply
12:47 - the velocity by these numbers or the
12:49 - position by these numbers and that way
12:51 - they will be opposite so the new new
12:56 - position we want for our
12:57 - our asteroid is whatever position the
13:02 - parent one was plus the hit Bell tangent
13:08 - and what that does is it gives you a
13:11 - perpendicular vector okay I'm going to
13:15 - clamp that to a length of 25 and so it
13:20 - moves 25 pixels away from that center
13:22 - spot x offset which is going to be plus
13:28 - 1 or minus 1 right so they'll be shifted
13:31 - in opposite directions so they'll each
13:32 - spawn across from the across from each
13:39 - other and then the new velocity we want
13:42 - to use is whatever velocity we were
13:44 - going so so if the big asteroid was
13:47 - moving to the right to smaller when the
13:49 - fly off of it will move to the right as
13:51 - well but they're also going to have a
13:54 - tangent to the hit velocity times offset
13:59 - so that they will fly in opposite
14:01 - directions all right and then we just
14:04 - want to spawn asteroid using the new
14:07 - size the new position and the new
14:12 - velocity and that should look great
14:18 - so let's try it out here we go there's
14:24 - two smaller ones flying off very good
14:28 - now if I hit a bunch of them you might
14:32 - see I can get it to happen right you're
14:37 - going to have a lot of you have a lot of
14:40 - little abstracts flying around and
14:43 - occasionally some of the collisions are
14:46 - going to lead to some of these any ones
14:50 - moving extremely fast faster than we are
14:54 - there we go
14:55 - all right faster than we want them to
14:58 - and so what we do to fix that is we
15:03 - should just set a we're just going to
15:06 - set a maximum speed on the asteroid
15:09 - here l equals l dot clamped 300 all
15:17 - right that way we don't have anything
15:20 - bigger than that and value rid of that
15:25 - pose okay so now what we can do is let's
15:28 - say we always find one because we're on
15:30 - level one then we can set process to
15:34 - true on our main and in the process
15:40 - function we can just say that gift
15:44 - asteroid container get child count is
15:51 - equal to zero that means we've destroyed
15:53 - all the asteroids right so we can spawn
15:58 - some more we just do this again I'm just
16:08 - going to do this again for now and we'll
16:12 - make it fancier later when we start
16:15 - having levels and things but that way if
16:17 - we you know just have one asteroid on
16:20 - the first level and as we clear the
16:25 - screen and that asteroid container is
16:28 - empty
16:40 - we will onto new ones right okay so will
16:47 - pretty that up later as well and the
16:53 - last thing we can do here to pretty up
16:54 - our main scene and we're going to add a
16:57 - sprite put the top here and just call
17:02 - this the background and the texture
17:06 - we're going to use is this star filled
17:12 - PNG and you don't want it to be centered
17:17 - and we needed to be stretched a little
17:20 - bit to fit our game window so I'm going
17:25 - to scale this up about a little bit more
17:31 - 30% there we go so we just have a nice
17:36 - nexor lookin background for our game
17:41 - here
17:48 - thanks for watching and I'll see you in
17:50 - the next video
17:58 - you

Cleaned transcript:

look at that this is part five of space rocks where we make a full and complete game in the Godot game engine and this part we're going to make our bullets collide with the asteroids and make them break up into smaller asteroids just like they're supposed to all right let's get started all right we're ready to start making the bullets destroy the asteroids and to get ready to go what I've done is I've added an asteroid container which is just a basic node to the main scene here I find it to a variable and when I spawn the media to the asteroid that's where I'm putting them as children that's going to help us later when we want to tell if we have destroyed all the asteroids and the players ready to move on to the next level or whatever okay so let's start with the player bullet the player bullet is an area 2d that means over here in the signal it has it can detect one other areas enter and exit it and it can detect when other bodies enter and exit it we're going to say body enter the body enter signal we're just going to connect that to the player bullet script and so when this signal fires off it gives you the body that it detected and we want four to start with we want to just delete that that body but really we only want to delete that body if it's an asteroid so over on our asteroid script what we can do is when the asteroid first is created we can add two group and we'll just call those asteroids groups are just like tags you can assign two objects to track them right so now every asteroid object will have this asteroids tag on it and in the player bullet here when we detect a body entering we can find out if it's one of those groups so if body get groups have asteroids okay so it could have asteroids and it's list of groups then we are going to do two things we're going to q3 meaning we're going to delete the bullets that hit that and right now I'm just going to print body get name just so we can see what is happening so it's like it run here now and I fire the bullet the other bullet disappeared and it's printing out the name of that asteroid right I mean there's a different one there's a different one all right these are the automatically assigned names that Godot gave them when they were instanced that's fine you can see it's definitely detecting it and the bullet was deleted so we want that that asteroid to explode and that might mean a number of different things so we're going to say body dot explode and then we're going to define that over in the asteroid itself that that's right to do whatever explode is defined to do all right so in explode or in the asteroid script we could define our function explode and just say Q free on this and that would work fine we could just do that and it would be destroyed okay that's all good but not really what we want for asteroids right we want to spawn smaller one whenever we hit them with a bullet we need to change up a few things one of the things we need to change here is this init function when we first instance an asteroid it might not necessarily be a fullsized one that we want to that we want to make right and so we're passing the size and we're testing the position we're also going to pass the velocity because if we're taking a big one and it's been hit we're going to want to tell the news the break off of it what direction to go in and let's be to going so so I'm going to change this function a little bit to say it's the initial size the initial position and the initial velocity to keep the names consistent okay and so we have our now we didn't make that variable so I'm going to I'm going to declare a size variable up here makes things easier to track and we're going to set size equal to in its size and then for the velocity we have two choices either it's a new large size after its ponding at the beginning of the level in which case we want be random velocity or it's a new one that we're telling it what velocity we want so we have two possibilities there and this is what we want to do if we're picking a random one so I'm going to take this code and move it down into the in it as well and we're going to stay if the init velocity length is greater than zero and we're just going to use that and itself if it means if we positive velocity we'll use it otherwise we give it a zero velocity we're going to use this and then just like we've been doing we randomized the patient speed figure out what texture sets shape and all of that okay now we need to make some changes in our main script so this code right here instances and asteroid and initializes it right and adds it to the container but we're going to want to do that when we spawn smaller ones to off of the explosions so I'm going to define a function called spawn asteroid and this function expects us to tell it what size position and velocity we want it to have this I'm going to put in here and we're going to just say a dot in it using the size position and velocity and then our initial ones that we spawn at the beginning of the game we just say spawn asteroid big one spawn position and this on the next line and the speed we want to put reviews is just zero zero that way we'll randomized okay and so that'll do the same thing alright spawn them at the random spots and randomize the velocity now we need to figure out what to do when the bullet hits and we want to spawn two smaller lists so in our asteroid when we hit the explode function here we're going to emit signal we call that signal explode and we're going to pass out to the main function the main scene is what's going to catch this get to the signal so we're going to tell it what size we were when we exploded what position we were at when we exploded and what speed we were going when we exploded and so we'll just define that signal up here at the top signal explode so now whenever our that's right is exploded it's going to send out this signal and in main when we spawn an asteroid we can connect that signal using connect and what we want to connect is we explode signal we want to connect it to a function locally and we'll call it explode asteroid and then we just need to define that function and since we're going to be passing in size position and velocity we need to expect those to be coming and now we need to figure out what our new sizes are going to be right if it was a large asteroid we wanted to split into two medium ones it was medium we split into two small ones and so on so I'm going to just declare that in a dictionary up here and it's called the break pattern right what pattern are the apps words going to break up into okay if they're big they're going to go to medium if they are medium quotes never cooperate with me we're going to break up into small if we are small we're going to break up into tiny and if we are tiny there's nothing left so we're going to have null there so there's nothing to come out too tiny that's the end of the chain so when we explode we just need to check what size we're going to so the new size we're going to use is break break pattern whatever size we currently are and so now we'll know what size we want to be if new size so if there wasn't if it wasn't tiny so that we got null then we want to we want to spawn two new ones when we spawned these two new ones we don't want to spawn them at the same position if we do then they'll be overlapping and we have our asteroids are set to be kinematic body 2ds and they're supposed to collide off of each other treat each other as solid bodies and if two solid bodies are overlapping or inside of each other then the collision resolution is going to be broken and we will get asteroids flying off at crazy speeds and weird things like that so we want to make sure we spawn them next to each other and we want to spawn them with different velocities going in.i dealing in opposite directions right like they exploded outwards from the destruction of the big one and so the nicest way that I think we can do that is when the bullet hits and it tells the body to explode we're going to pass in the velocity that the bullet was going and actually I don't care about the velocity I really care about the direction so I'm going to normalize it so that way I know what direction I was hit from and I can make the new ones fly out in a perpendicular direction from that okay so that means when we explode we're passing in the velocity so on the asteroid going to explode we're going to get whatever the thing that hit us was doing right so we'll call it the hit velocity and we will pass that in as well when we extended the signal so here we're going to get on main we're going to get to hit velocity as well so if we are responding to new ones then I'm going to have an offset of negative one or one this is going to make them do the opposite directions right I'll multiply the velocity by these numbers or the position by these numbers and that way they will be opposite so the new new position we want for our our asteroid is whatever position the parent one was plus the hit Bell tangent and what that does is it gives you a perpendicular vector okay I'm going to clamp that to a length of 25 and so it moves 25 pixels away from that center spot x offset which is going to be plus 1 or minus 1 right so they'll be shifted in opposite directions so they'll each spawn across from the across from each other and then the new velocity we want to use is whatever velocity we were going so so if the big asteroid was moving to the right to smaller when the fly off of it will move to the right as well but they're also going to have a tangent to the hit velocity times offset so that they will fly in opposite directions all right and then we just want to spawn asteroid using the new size the new position and the new velocity and that should look great so let's try it out here we go there's two smaller ones flying off very good now if I hit a bunch of them you might see I can get it to happen right you're going to have a lot of you have a lot of little abstracts flying around and occasionally some of the collisions are going to lead to some of these any ones moving extremely fast faster than we are there we go all right faster than we want them to and so what we do to fix that is we should just set a we're just going to set a maximum speed on the asteroid here l equals l dot clamped 300 all right that way we don't have anything bigger than that and value rid of that pose okay so now what we can do is let's say we always find one because we're on level one then we can set process to true on our main and in the process function we can just say that gift asteroid container get child count is equal to zero that means we've destroyed all the asteroids right so we can spawn some more we just do this again I'm just going to do this again for now and we'll make it fancier later when we start having levels and things but that way if we you know just have one asteroid on the first level and as we clear the screen and that asteroid container is empty we will onto new ones right okay so will pretty that up later as well and the last thing we can do here to pretty up our main scene and we're going to add a sprite put the top here and just call this the background and the texture we're going to use is this star filled PNG and you don't want it to be centered and we needed to be stretched a little bit to fit our game window so I'm going to scale this up about a little bit more 30% there we go so we just have a nice nexor lookin background for our game here thanks for watching and I'll see you in the next video you
