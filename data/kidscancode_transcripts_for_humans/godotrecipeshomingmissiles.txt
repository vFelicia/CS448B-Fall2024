With timestamps:

00:00 - welcome back to another good old recipe
00:02 - and this video will be talking about how
00:04 - to make homing missiles that will chase
00:06 - your player wherever they may go
00:08 - all right let's get started so here's
00:12 - how we're gonna start we're gonna soon
00:13 - you've got some sort of character that
00:14 - you can control I'm gonna use this
00:16 - airplane and that you have some kind of
00:20 - enemy that can fire projectiles so in
00:23 - this setup I've got some turrets that
00:25 - can fire projectiles they're instancing
00:28 - them and aiming at a target and these
00:31 - are what I would call dumb projectiles
00:33 - they just travel in a straight line and
00:36 - expire after a certain amount of time
00:39 - and if you need help setting up these
00:43 - things you can see some of my other
00:45 - tutorials for this one we'll be focusing
00:47 - on taking these dumb projectiles and
00:49 - turning them into homing missiles that
00:51 - will chase me no matter what direction I
00:53 - go in so here's our missile or bullet
00:57 - we're using this sprite which is from
00:58 - Kenny's top-down tower defense Art
01:02 - Attack which I'll link to in the
01:03 - comments below and this is an area 2d
01:06 - with our sprite of course which is taken
01:09 - from the art pack a collision shape 2d
01:12 - and a timer called life time which will
01:17 - let us expire this this bullet after a
01:20 - certain amount of time and let's look at
01:22 - the script real quick again this is the
01:23 - dumb script so we have a speed variable
01:27 - which controls how fast this goes we
01:30 - have a start function which we call when
01:32 - we instance it which just gives us a
01:34 - transform so we can set its position and
01:37 - rotation and have it travel in the
01:39 - direction it's pointing and then our
01:42 - physics process is going to update the
01:45 - velocity based on the acceleration which
01:49 - in our case is going to be zero right
01:51 - now so it's constant and updates the
01:54 - position and then I've connected the
01:57 - body entered signal so that if it hits a
02:01 - any kind of body like the player it will
02:04 - delete itself and if it
02:06 - we've also connected the lifetimes
02:08 - timeout which will delete the missile
02:10 - when the time runs out
02:13 - how do we turn this into a heat-seeking
02:15 - missile well it really boils down to the
02:17 - acceleration we're gonna want to use our
02:19 - acceleration and remember the definition
02:21 - of acceleration is a change in velocity
02:24 - so by altering our acceleration we can
02:28 - change the direction and speed of our
02:31 - projectile and we don't want that to
02:35 - necessarily be instantaneous which is
02:37 - gonna look a little artificial so we're
02:39 - gonna apply a variable to this i'm going
02:41 - to call this the steer force and that's
02:44 - gonna be how quickly this projectile can
02:48 - turn right the higher this number the
02:51 - more quickly it can make a turn so if
02:53 - you want a missile that has to make a
02:55 - big wide turn to come around you or if
02:57 - you want it to turn really sharply you
03:00 - can adjust that property and then we're
03:02 - also going to add a target which if you
03:09 - leave it null this will continue to be a
03:11 - dumb bullet but if we pass in a target
03:14 - which our turrets are going to do we can
03:17 - add that assigned target so we know we
03:23 - have something to chase so let's look at
03:27 - a diagram to see how this is going to
03:28 - work here's my projectile and the blue
03:33 - vector here is its current velocity it's
03:36 - currently heading in that direction but
03:38 - the target is over here so the
03:40 - projectile wants to go straight towards
03:42 - the target which is this red vector and
03:47 - the difference between those desired
03:50 - minus current gives us this green arrow
03:52 - this is how much we want our velocity to
03:55 - change and so if we change our velocity
03:57 - by that much in one frame this missile
04:01 - would look like it instantaneously
04:02 - turned but we don't want to do that we
04:05 - want to limit the length of this green
04:08 - vector how much the current velocity can
04:12 - bend towards the desired velocity and
04:15 - that's what our steer force variable
04:18 - that we set did the longer the higher
04:20 - that value the longer this
04:23 - vector can be so the quicker the current
04:25 - velocity can change to the desired
04:27 - velocity and so we can make a function
04:30 - for that call this seek so first let's
04:34 - set this steer
04:36 - we'll just call how much we're going to
04:38 - turn to zero so that by default we're
04:43 - not turning now if we have a target then
04:46 - we're going to set that to whatever
04:48 - acceleration we need to pull our
04:52 - velocity towards our desired velocity
04:53 - limited by the given steer force so
04:57 - let's calculate what the desired is the
04:59 - desired velocity is the targets position
05:03 - - our position gives us that vector and
05:08 - we want to normalize that I'll zoom in
05:13 - the code here so we want to normalize
05:15 - that times the speed because we want
05:19 - that to be so that's our desired is our
05:21 - maximum speed towards the target that's
05:23 - what we want and then we'll see how
05:25 - close we can get to that by calculating
05:28 - the steer force which is desired -
05:31 - velocity just like in the diagram we
05:33 - looked at a moment ago and we'll
05:35 - normalize that and we'll multiply it by
05:39 - the steer force again which limited its
05:46 - length and then we're going to return
05:47 - that value so note that if we didn't
05:50 - have a target we're returning a steer
05:53 - force of zero so we'll continue to be a
05:56 - dumb bullet that moves in a straight
05:58 - line if we don't have a target assigned
06:01 - this is nice because then you can reuse
06:04 - this code for multiple projectiles in
06:06 - your game and just give it a target if
06:08 - you wanted to have one and then in our
06:10 - physics process we just need to apply
06:12 - that acceleration so we're gonna say
06:15 - acceleration plus equals whatever gets
06:18 - returned from seek and that's pretty
06:23 - much it let's take a look at what the
06:25 - result looks like flying towards our
06:28 - turrets right now
06:31 - now you see them bending to come towards
06:35 - me that is all it takes and just for fun
06:42 - here it is with a little more Flair
06:44 - where I've taken the missiles and added
06:46 - some particle smoke and a little
06:49 - explosion animation when they impact me
06:53 - or when they run out they'll explode
07:00 - alright so I hope this was helpful to
07:03 - you and your own projects please feel
07:06 - free to leave your questions and
07:08 - comments in the comment section below
07:10 - and I will see you in a future video
07:14 - this tutorial is part of my nugudo
07:17 - recipes website the goal is to collect
07:19 - all the best tips and lessons to help
07:21 - make you a better at Godot developer if
07:23 - you like this video I hope you'll go and
07:25 - check out the site and make sure to hit
07:26 - subscribe so you'll be notified whenever
07:28 - I release new videos thanks for watching

Cleaned transcript:

welcome back to another good old recipe and this video will be talking about how to make homing missiles that will chase your player wherever they may go all right let's get started so here's how we're gonna start we're gonna soon you've got some sort of character that you can control I'm gonna use this airplane and that you have some kind of enemy that can fire projectiles so in this setup I've got some turrets that can fire projectiles they're instancing them and aiming at a target and these are what I would call dumb projectiles they just travel in a straight line and expire after a certain amount of time and if you need help setting up these things you can see some of my other tutorials for this one we'll be focusing on taking these dumb projectiles and turning them into homing missiles that will chase me no matter what direction I go in so here's our missile or bullet we're using this sprite which is from Kenny's topdown tower defense Art Attack which I'll link to in the comments below and this is an area 2d with our sprite of course which is taken from the art pack a collision shape 2d and a timer called life time which will let us expire this this bullet after a certain amount of time and let's look at the script real quick again this is the dumb script so we have a speed variable which controls how fast this goes we have a start function which we call when we instance it which just gives us a transform so we can set its position and rotation and have it travel in the direction it's pointing and then our physics process is going to update the velocity based on the acceleration which in our case is going to be zero right now so it's constant and updates the position and then I've connected the body entered signal so that if it hits a any kind of body like the player it will delete itself and if it we've also connected the lifetimes timeout which will delete the missile when the time runs out how do we turn this into a heatseeking missile well it really boils down to the acceleration we're gonna want to use our acceleration and remember the definition of acceleration is a change in velocity so by altering our acceleration we can change the direction and speed of our projectile and we don't want that to necessarily be instantaneous which is gonna look a little artificial so we're gonna apply a variable to this i'm going to call this the steer force and that's gonna be how quickly this projectile can turn right the higher this number the more quickly it can make a turn so if you want a missile that has to make a big wide turn to come around you or if you want it to turn really sharply you can adjust that property and then we're also going to add a target which if you leave it null this will continue to be a dumb bullet but if we pass in a target which our turrets are going to do we can add that assigned target so we know we have something to chase so let's look at a diagram to see how this is going to work here's my projectile and the blue vector here is its current velocity it's currently heading in that direction but the target is over here so the projectile wants to go straight towards the target which is this red vector and the difference between those desired minus current gives us this green arrow this is how much we want our velocity to change and so if we change our velocity by that much in one frame this missile would look like it instantaneously turned but we don't want to do that we want to limit the length of this green vector how much the current velocity can bend towards the desired velocity and that's what our steer force variable that we set did the longer the higher that value the longer this vector can be so the quicker the current velocity can change to the desired velocity and so we can make a function for that call this seek so first let's set this steer we'll just call how much we're going to turn to zero so that by default we're not turning now if we have a target then we're going to set that to whatever acceleration we need to pull our velocity towards our desired velocity limited by the given steer force so let's calculate what the desired is the desired velocity is the targets position our position gives us that vector and we want to normalize that I'll zoom in the code here so we want to normalize that times the speed because we want that to be so that's our desired is our maximum speed towards the target that's what we want and then we'll see how close we can get to that by calculating the steer force which is desired velocity just like in the diagram we looked at a moment ago and we'll normalize that and we'll multiply it by the steer force again which limited its length and then we're going to return that value so note that if we didn't have a target we're returning a steer force of zero so we'll continue to be a dumb bullet that moves in a straight line if we don't have a target assigned this is nice because then you can reuse this code for multiple projectiles in your game and just give it a target if you wanted to have one and then in our physics process we just need to apply that acceleration so we're gonna say acceleration plus equals whatever gets returned from seek and that's pretty much it let's take a look at what the result looks like flying towards our turrets right now now you see them bending to come towards me that is all it takes and just for fun here it is with a little more Flair where I've taken the missiles and added some particle smoke and a little explosion animation when they impact me or when they run out they'll explode alright so I hope this was helpful to you and your own projects please feel free to leave your questions and comments in the comment section below and I will see you in a future video this tutorial is part of my nugudo recipes website the goal is to collect all the best tips and lessons to help make you a better at Godot developer if you like this video I hope you'll go and check out the site and make sure to hit subscribe so you'll be notified whenever I release new videos thanks for watching
