With timestamps:

00:00 - welcome back this is part 10 of space
00:03 - rocks the video game engine tutorial
00:05 - where we're making a full asteroid style
00:07 - game if my voice is a little rough I
00:10 - apologize I was out for a while with a
00:12 - cold that's why the gap before this
00:14 - video but now I'm back to it and in this
00:17 - installment we're going to add some
00:19 - enemies to the game so that the player
00:21 - has a little bit more of a challenge
00:22 - okay let's get started so for this
00:26 - installment I've decided to start adding
00:28 - an enemy a little flying saucer bad guy
00:32 - that's going to spawn every once in a
00:33 - while and kind of move across the screen
00:36 - shooting at the player and I'm going to
00:39 - use the flying saucer yeah looks like
00:44 - salsa art we have here so let's start it
00:47 - let's make a scene for that
00:49 - I'm going to make a new scene this one
00:53 - I'm going to start it with an area 2d
00:56 - and we're going to do that because we
00:59 - just want to be able to know if a bullet
01:01 - or the player enters this enters this
01:05 - area so we note that it got hit all
01:08 - right and we're going to add a few nodes
01:09 - under here we're going to add a sprite
01:11 - we're going to add a collision 2d and
01:15 - we're going to add an animation player
01:20 - and I'll show you why we're doing that
01:22 - in a minute but first of all let's
01:25 - rename these I'm going to call this
01:27 - sprite this is the collision and and I'm
01:32 - going to name the animation player just
01:36 - an M for short so we can put the sprite
01:39 - I'm going to use the green one there you
01:44 - go I think it's a little bit on the
01:47 - large side so I'm going to scale it down
01:50 - just a little bit for the collision
01:54 - we're going to use a going to use a
01:57 - circle shape
01:57 - we'll make a circle shape and just make
02:02 - that the size of the texture okay let's
02:07 - save this in our scenes enemy good
02:12 - now the reason I added this animation
02:14 - player note is I want to have this
02:17 - inside the collision for a second I want
02:19 - to have this flying saucer look like
02:21 - it's spinning so I'm going to use the
02:23 - animation player to give it a spin
02:25 - because we want to basically take the
02:27 - sprite
02:29 - rotation parameter and have it steadily
02:32 - change so what we need to do is we need
02:35 - to make a new animation we'll just tall
02:39 - call this rotate and now we get a little
02:44 - timing track here all right the default
02:48 - length is one second and it steps by 0.1
02:52 - 0.1 so play the animation right it just
02:56 - goes from there to there well at the
02:59 - beginning of the track we want our
03:02 - sprites rotation or the sprites rotation
03:06 - is what we're going to alter so if we go
03:08 - over here to sprite and rotation we see
03:11 - a little key and we can click that to
03:13 - add a new keyframe for the transform
03:17 - slash rot property and that's going to
03:21 - be set at zero I then move the play back
03:27 - to halfway along the track so I'm going
03:29 - to have one point five seconds I'm going
03:32 - to change this to 180 degrees and I'm
03:36 - going to click keyframe again so now
03:39 - it's rotating from side step along it
03:44 - smoothly interpolates between those two
03:46 - alright and back here at 1 we want to go
03:50 - to 360 which is a full rotation all
03:55 - right so now as we eat and of course
03:58 - I've got to add it as a keyframe got to
04:01 - click the key there we go so now we've
04:04 - got a full rotation if we hit play right
04:08 - so we'll click this and make it a loop
04:10 - this button now if I hit play there
04:16 - we've got a spinning
04:19 - spaceship and what we can also do is on
04:24 - an animation here we can alter the speed
04:27 - like maybe I'll slow it down a little
04:30 - half the speed you know maybe maybe 0.6
04:40 - there we go so now that'll just continue
04:44 - to rotate constantly playing back this
04:48 - animation alright now we want to make
04:51 - this this guy fly around the screen and
04:54 - I've thought about a few different ways
04:56 - of doing that right we could go over
04:58 - here and we could just have a timer and
05:00 - we instance it every once in a while and
05:03 - spawn it off the screen somewhere and
05:05 - have it move you know across the screen
05:07 - and exit on the opposite direction or
05:10 - something like that but that's kind of
05:12 - boring I like to have them kind of fly
05:14 - around in various paths so for now and
05:20 - I'm not sure if I'm going to permanently
05:22 - do it this way but this is the way I've
05:23 - come up with for now what I'm going to
05:25 - do is I'm going to make a new scene and
05:27 - the route of this is just going to be a
05:29 - node and this is going to be called
05:33 - enemy path let's save this and all we're
05:39 - going to make in this enemy pav's scene
05:42 - is some path 2d nodes that will describe
05:47 - some paths that this that this spaceship
05:51 - can follow and if you're unfamiliar with
05:53 - the path 2d I did do a little video on
05:58 - it which I'll link to below on how you
06:02 - use the path follow which is what we're
06:04 - going to do once we have the path drawn
06:06 - so I'm going to skip the drawing the
06:07 - path apart so I'll be right back with
06:10 - some redrawn paths ok we're back and I
06:15 - have I've added three different paths to
06:18 - the nodes to this scene the first one
06:22 - which is going to start over on the left
06:24 - and just sort of move through move
06:28 - directly across the screen I have this
06:30 - Center 1 which kind of is just going to
06:32 - start up the top and
06:33 - around and then I have the third one
06:36 - which is going to come in and do a big
06:40 - loop through the center of the screen
06:41 - before it goes off the opposite side and
06:44 - so these three paths are going to be
06:48 - just randomly so we're going to randomly
06:50 - select one when we spawn an enemy and
06:52 - just have it follow so if you're not
06:55 - familiar with path 2d it's very easy to
06:57 - work with you know you just use these
06:59 - little control buttons up here to create
07:01 - to create the points of your curve and
07:05 - then also grab the handles to control
07:08 - the path right you can drag these around
07:11 - and change things around and I'm okay
07:16 - with these you know later it'll be
07:17 - easier for us to adjust these and
07:19 - replace them with different paths move
07:21 - them out change them around however we
07:23 - want because the codes just going to
07:26 - load these load this scene we're just
07:28 - going to instance the scene and pick one
07:30 - of these nodes out of it all right so
07:33 - what's on our enemy we're just going to
07:35 - add an instance of that of that enemy
07:39 - path node so that we will be able to
07:41 - exit all right so now let's make a
07:45 - script on the enemy so I've gone ahead
07:46 - and made one here and so we're going to
07:51 - get a reference to to that enemy path
07:59 - node so we can use it and then there's a
08:05 - few other variables we're going to need
08:07 - we're going to need to choose which path
08:09 - out of those children we're going to
08:11 - we're going to follow we're going to
08:14 - need to make a path follow 2d node and
08:16 - we are going to need to create a remote
08:20 - node which I will we'll get into in a
08:23 - second and we're going to set our speed
08:25 - help stops we want our little Flying
08:27 - Saucer to travel so in the ready let's
08:31 - set process to true let's randomize and
08:38 - so the first step is we need to pick
08:40 - that random path well if we do pass get
08:45 - children that gets the full list of that
08:48 - gives us an array holding all those
08:51 - children and so we want to select one of
08:53 - them and when we want to select is just
08:55 - a random number mod to get child count
09:02 - and then we will have a random path now
09:09 - we need to create that path Solow to
09:11 - denote that's the one that that's the
09:16 - one that's going to actually trace the
09:19 - path along that and so we add that and
09:23 - we need to add that as a child to the
09:24 - path now we've got our path followed to
09:30 - D now we need to create our remote node
09:33 - and that's just going to be a node to D
09:38 - it's going to be a child of follow and
09:46 - the reason for that is when you use the
09:48 - path fellow to denote the child any
09:53 - child of this path follow to D is what
09:56 - will follow the path which is what will
10:00 - have its coordinates set to the
10:02 - coordinates along the path so it needs
10:04 - to be a child so we're going to this is
10:06 - just going to be a placeholder node to D
10:08 - that's going to follow the path and then
10:10 - we're going to set our enemy's position
10:13 - to match it okay so that's it so now
10:16 - we've created all the nodes we need and
10:19 - actually you can see if we run this if
10:23 - we look at the remote inspector you'll
10:28 - see we've hopefully selected Path number
10:30 - two we made our path follow and then
10:33 - there's our node to D as a child of it
10:37 - now we just need to do the movement so
10:40 - in our process we're going to take the
10:44 - follow and set the offset to whatever
10:49 - the offset currently is plus our speed
10:54 - times Delta
10:56 - and that's going to make this node 2d
10:59 - move so we just need to set the position
11:03 - of our main node our area 2d to whatever
11:09 - the remotes global position is and that
11:15 - should do it so let's give it a try
11:20 - there we go
11:21 - looks like we're following the one that
11:23 - just half done the one that started at
11:26 - the bottom and went up here but we are
11:29 - looping by default when you create a
11:32 - path all of 2d you get a you get a loop
11:37 - meaning when it when the offset reaches
11:39 - the maximum it goes right back to the
11:43 - start
11:44 - I'm just trying it a couple of times do
11:46 - see us do another path here we go I
11:49 - think this is the one that's going to go
11:51 - up and around that's good
11:54 - so we don't want it to we don't want it
11:57 - to loop so if we go over here we can say
12:00 - follow that set loop to false because
12:06 - we're going to want to be spawned the
12:09 - Flying Saucer when it reaches the edge
12:11 - but you also might have noticed that
12:13 - when we run it our flying saucer isn't
12:16 - spinning right our animation isn't
12:17 - playing how come that is the case right
12:20 - here when you look at it in the
12:22 - inspector right animation is set to play
12:26 - it's active how come well there's an
12:31 - option right here autoplay on load you
12:35 - need to set that if you don't set that
12:38 - then in your script you have to go here
12:40 - and tell the animation to play in the
12:43 - ready okay there we go now we have our
12:48 - nice little spinning flying saucer
12:53 - I like it and now what we want to do is
12:56 - just do a cue free when we leave the
12:59 - screen so we're going to use a
13:00 - visibility notifier for that visibility
13:05 - notifier 2d well I'm just going to name
13:08 - this visible
13:10 - and we're going to use its exit screen
13:14 - signal we just connect it so when it
13:18 - exits the screen we're going to do three
13:23 - and that is it now we have our enemy
13:27 - movement and does what we want when it
13:30 - spawns and we've got a few paths we can
13:33 - go in and add some more paths if we get
13:35 - bored with these we can you know we can
13:38 - add a little bit make the pass we can
13:41 - make that wobbly so it looks like a more
13:44 - of a wobbly path when it follows all
13:47 - that kind of thing we could randomize
13:49 - the speed a little bit so it looks like
13:50 - it's not always exactly the same alright
13:55 - so in the next installment we will add
13:59 - these to our main we'll start spawning
14:01 - them over here based on a timer and we
14:04 - will start having them shoot at the
14:06 - player all right thanks for watching
14:08 - I'll see you next time
14:17 - you

Cleaned transcript:

welcome back this is part 10 of space rocks the video game engine tutorial where we're making a full asteroid style game if my voice is a little rough I apologize I was out for a while with a cold that's why the gap before this video but now I'm back to it and in this installment we're going to add some enemies to the game so that the player has a little bit more of a challenge okay let's get started so for this installment I've decided to start adding an enemy a little flying saucer bad guy that's going to spawn every once in a while and kind of move across the screen shooting at the player and I'm going to use the flying saucer yeah looks like salsa art we have here so let's start it let's make a scene for that I'm going to make a new scene this one I'm going to start it with an area 2d and we're going to do that because we just want to be able to know if a bullet or the player enters this enters this area so we note that it got hit all right and we're going to add a few nodes under here we're going to add a sprite we're going to add a collision 2d and we're going to add an animation player and I'll show you why we're doing that in a minute but first of all let's rename these I'm going to call this sprite this is the collision and and I'm going to name the animation player just an M for short so we can put the sprite I'm going to use the green one there you go I think it's a little bit on the large side so I'm going to scale it down just a little bit for the collision we're going to use a going to use a circle shape we'll make a circle shape and just make that the size of the texture okay let's save this in our scenes enemy good now the reason I added this animation player note is I want to have this inside the collision for a second I want to have this flying saucer look like it's spinning so I'm going to use the animation player to give it a spin because we want to basically take the sprite rotation parameter and have it steadily change so what we need to do is we need to make a new animation we'll just tall call this rotate and now we get a little timing track here all right the default length is one second and it steps by 0.1 0.1 so play the animation right it just goes from there to there well at the beginning of the track we want our sprites rotation or the sprites rotation is what we're going to alter so if we go over here to sprite and rotation we see a little key and we can click that to add a new keyframe for the transform slash rot property and that's going to be set at zero I then move the play back to halfway along the track so I'm going to have one point five seconds I'm going to change this to 180 degrees and I'm going to click keyframe again so now it's rotating from side step along it smoothly interpolates between those two alright and back here at 1 we want to go to 360 which is a full rotation all right so now as we eat and of course I've got to add it as a keyframe got to click the key there we go so now we've got a full rotation if we hit play right so we'll click this and make it a loop this button now if I hit play there we've got a spinning spaceship and what we can also do is on an animation here we can alter the speed like maybe I'll slow it down a little half the speed you know maybe maybe 0.6 there we go so now that'll just continue to rotate constantly playing back this animation alright now we want to make this this guy fly around the screen and I've thought about a few different ways of doing that right we could go over here and we could just have a timer and we instance it every once in a while and spawn it off the screen somewhere and have it move you know across the screen and exit on the opposite direction or something like that but that's kind of boring I like to have them kind of fly around in various paths so for now and I'm not sure if I'm going to permanently do it this way but this is the way I've come up with for now what I'm going to do is I'm going to make a new scene and the route of this is just going to be a node and this is going to be called enemy path let's save this and all we're going to make in this enemy pav's scene is some path 2d nodes that will describe some paths that this that this spaceship can follow and if you're unfamiliar with the path 2d I did do a little video on it which I'll link to below on how you use the path follow which is what we're going to do once we have the path drawn so I'm going to skip the drawing the path apart so I'll be right back with some redrawn paths ok we're back and I have I've added three different paths to the nodes to this scene the first one which is going to start over on the left and just sort of move through move directly across the screen I have this Center 1 which kind of is just going to start up the top and around and then I have the third one which is going to come in and do a big loop through the center of the screen before it goes off the opposite side and so these three paths are going to be just randomly so we're going to randomly select one when we spawn an enemy and just have it follow so if you're not familiar with path 2d it's very easy to work with you know you just use these little control buttons up here to create to create the points of your curve and then also grab the handles to control the path right you can drag these around and change things around and I'm okay with these you know later it'll be easier for us to adjust these and replace them with different paths move them out change them around however we want because the codes just going to load these load this scene we're just going to instance the scene and pick one of these nodes out of it all right so what's on our enemy we're just going to add an instance of that of that enemy path node so that we will be able to exit all right so now let's make a script on the enemy so I've gone ahead and made one here and so we're going to get a reference to to that enemy path node so we can use it and then there's a few other variables we're going to need we're going to need to choose which path out of those children we're going to we're going to follow we're going to need to make a path follow 2d node and we are going to need to create a remote node which I will we'll get into in a second and we're going to set our speed help stops we want our little Flying Saucer to travel so in the ready let's set process to true let's randomize and so the first step is we need to pick that random path well if we do pass get children that gets the full list of that gives us an array holding all those children and so we want to select one of them and when we want to select is just a random number mod to get child count and then we will have a random path now we need to create that path Solow to denote that's the one that that's the one that's going to actually trace the path along that and so we add that and we need to add that as a child to the path now we've got our path followed to D now we need to create our remote node and that's just going to be a node to D it's going to be a child of follow and the reason for that is when you use the path fellow to denote the child any child of this path follow to D is what will follow the path which is what will have its coordinates set to the coordinates along the path so it needs to be a child so we're going to this is just going to be a placeholder node to D that's going to follow the path and then we're going to set our enemy's position to match it okay so that's it so now we've created all the nodes we need and actually you can see if we run this if we look at the remote inspector you'll see we've hopefully selected Path number two we made our path follow and then there's our node to D as a child of it now we just need to do the movement so in our process we're going to take the follow and set the offset to whatever the offset currently is plus our speed times Delta and that's going to make this node 2d move so we just need to set the position of our main node our area 2d to whatever the remotes global position is and that should do it so let's give it a try there we go looks like we're following the one that just half done the one that started at the bottom and went up here but we are looping by default when you create a path all of 2d you get a you get a loop meaning when it when the offset reaches the maximum it goes right back to the start I'm just trying it a couple of times do see us do another path here we go I think this is the one that's going to go up and around that's good so we don't want it to we don't want it to loop so if we go over here we can say follow that set loop to false because we're going to want to be spawned the Flying Saucer when it reaches the edge but you also might have noticed that when we run it our flying saucer isn't spinning right our animation isn't playing how come that is the case right here when you look at it in the inspector right animation is set to play it's active how come well there's an option right here autoplay on load you need to set that if you don't set that then in your script you have to go here and tell the animation to play in the ready okay there we go now we have our nice little spinning flying saucer I like it and now what we want to do is just do a cue free when we leave the screen so we're going to use a visibility notifier for that visibility notifier 2d well I'm just going to name this visible and we're going to use its exit screen signal we just connect it so when it exits the screen we're going to do three and that is it now we have our enemy movement and does what we want when it spawns and we've got a few paths we can go in and add some more paths if we get bored with these we can you know we can add a little bit make the pass we can make that wobbly so it looks like a more of a wobbly path when it follows all that kind of thing we could randomize the speed a little bit so it looks like it's not always exactly the same alright so in the next installment we will add these to our main we'll start spawning them over here based on a timer and we will start having them shoot at the player all right thanks for watching I'll see you next time you
