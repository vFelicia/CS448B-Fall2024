With timestamps:

00:00 - welcome back to know your nodes this is
00:02 - a series of Godot game engine videos
00:04 - where we take a single node type from
00:07 - the engine and show how it's used maybe
00:09 - it's a node that you've never come
00:11 - across before or maybe it's one you were
00:13 - just wondering what the best way to use
00:15 - it is but hopefully after this you'll
00:17 - have a new tool that you can use in
00:19 - making your own games this time we'll be
00:21 - talking about the path follow 2d node so
00:25 - our focus is going to be on this path
00:27 - follow 2d node but we do need to know
00:29 - about a couple of other nodes in order
00:31 - to make it work because as you can see
00:33 - from the description the very brief
00:35 - description point sampler for a path 2d
00:38 - so down here at the longer description
00:40 - you see that the path solitude e needs
00:44 - to have a path 2d parent that's going to
00:47 - define what path it's going to follow
00:49 - and if we click on path 2d a path to
00:52 - denote is a very very simple node all it
00:54 - does is contain a curve 2d and what the
00:59 - curve 2d well a curve 2d is a V a curve
01:02 - in 2d space and you may not may or may
01:05 - not be familiar with the term Bezier
01:07 - curve but really it's just a way of
01:09 - defining a two-dimensional path in space
01:12 - and you can do it in a lot of different
01:16 - ways but there's a really easy way to do
01:17 - it in the editor and that's what we're
01:19 - going to do so if we go over here I've
01:21 - got an empty scene and I'm just going to
01:23 - add a path 2d as the route and and when
01:28 - you do that when you add a path 2d
01:30 - you'll see you get some new editor
01:31 - buttons up here these are going to help
01:35 - you edit your path so see this one right
01:38 - here that has the little green plus on
01:40 - it
01:40 - this lets you add points in space so if
01:43 - you click on points in empty space you
01:46 - will add points and if I do that right
01:48 - now you'll see everywhere I click
01:51 - creating another point and it is
01:54 - connecting them so now I have a path
01:56 - going from here to here and you can
02:01 - delete points right I didn't want this
02:04 - one in between there I could delete that
02:06 - if you want to grab this button right
02:09 - here you can adjust where they are so
02:11 - you can move them around
02:13 - you can insert ones in between and so on
02:17 - and then the other thing you can do is
02:20 - with this button right here this lets
02:21 - you do the control points and the
02:24 - control points or how you control how
02:26 - curvy the path is so if I grab one of
02:30 - these one of the points you can see I
02:33 - pull this control node I can change how
02:35 - it curves between the two points right
02:38 - and you can have these coming out of
02:40 - each of the points in whatever method
02:47 - you choose and you can basically sculpt
02:50 - your path this way and have it go curve
02:53 - around the way you want it to curve
02:55 - around right and until you have the path
02:58 - the way you want it and you know it can
03:01 - be time-consuming to to set these up and
03:04 - get them perfectly the way you want them
03:05 - so I've gone ahead and created a path
03:09 - right here that's a loop basically a
03:11 - figure eight it starts up here in the
03:12 - upper left hand corner and it just loops
03:15 - around in a figure eight pattern back to
03:18 - the end now we have our path we want to
03:23 - follow we can add our path follow node
03:25 - so we're going to add a node that's
03:27 - follow to D alright and we want that to
03:29 - be a child of the path and I'm just
03:32 - going to name this follow and so you
03:38 - know the path to D doesn't have really
03:39 - any properties to worry about it just
03:42 - has it just holds this curve the path
03:45 - follow does have a lot of properties
03:47 - that we're going to experiment around
03:48 - with and the main one is this offset
03:54 - offset is how you control where along
03:57 - the curve you want to move and now we
04:02 - need something to move if we look back
04:04 - over at our documentation for the path
04:08 - follow it says it's useful for making
04:13 - other nodes follow a path for that the
04:16 - nodes must be descendants of this node
04:18 - when setting the offset the descendants
04:21 - will move accordingly so we need to put
04:25 - something underneath this
04:26 - as follows it is going to be the thing
04:29 - that will follow the path and so for
04:31 - that we're going to add a sprite grab
04:36 - sprite real quick and I'm going to use
04:37 - this little spaceship texture throw that
04:40 - in there and just real quickly I'm going
04:44 - to scale it down a little bit because
04:46 - it's kind of large and okay now if we
04:52 - look back at our path follow property
04:53 - one of the options here is rotate on or
04:57 - off and that controls if I set up so to
05:00 - read rotation back to zero that controls
05:02 - whether the node as it follows the path
05:05 - will rotate to follow the path right do
05:08 - you want to remain want it to remain
05:09 - always facing the same direction or do
05:12 - you want it to look like it is you know
05:14 - a car driving along the path and it
05:16 - rotates to follow so we're going to put
05:19 - that on and then oh by the way since our
05:23 - sprite started out pointing sideways I
05:25 - do need to rotate this minus 90 degrees
05:30 - that's just because of the default
05:32 - sprite orientation it's drawn pointing
05:34 - up but zero degrees is pointing to the
05:36 - right in our 2d space all right so we're
05:41 - on our path follow we're going to rotate
05:43 - I want the spaceship to look like
05:44 - following the path and loop whether you
05:49 - want to when you reach the end back to
05:53 - the beginning or not is this a one-way
05:54 - path you know with a start and an end or
05:56 - is it a loop well ours is a loop so I'm
05:58 - going to turn that on and now this
06:01 - offset so this offset is going to
06:03 - control however long your path is you
06:06 - can go along the offset so for example
06:08 - if I put 100 I'm going to be 100 units
06:11 - along the path all right I could go a
06:15 - thousand its way over here and you see
06:18 - how the sprite is rotating to match the
06:21 - direction of the path so you can use the
06:24 - offset to set this you can also use the
06:26 - unit offset the unit offset just Maps
06:29 - the length of the path to a difference
06:35 - between zero and one right so zero point
06:37 - five would be halfway along the path
06:39 - wherever
06:40 - that is right so you can use either of
06:42 - those depending on how you want to
06:45 - measure your distance so now let's look
06:49 - at how we might do this in code so I've
06:51 - added a brief script here
06:53 - it just takes our follow node and in the
06:56 - process function
06:58 - I set the offset to whatever the current
07:02 - offset is plus some number times Delta
07:06 - and that's all you need to do now our
07:09 - spaceship is going to fly along the path
07:12 - and remember because we've set it to
07:15 - loop then when the loop and when the
07:18 - offset reaches the maximum it gets set
07:20 - right back to zero again and goes
07:22 - through again so so our ship will just
07:26 - continue to fly around the path as it
07:29 - goes it's a really simple example of how
07:33 - to use the path follow 2d one more thing
07:37 - that I'll do that I thought was a little
07:38 - son was I've gone back into the script
07:40 - now and I've changed it a little bit and
07:42 - we're not going to use the set offset
07:44 - anymore to steadily change it instead
07:47 - we're going to use a tween so I've added
07:49 - a new tween and I'm going to set the
07:53 - tween to interpolate the property on the
07:56 - follow node of unit offset and I want
08:00 - that to go from 0 to 1 which of course
08:03 - goes from the start to the end I wanted
08:06 - to take 6 seconds and I'm going to use
08:08 - linear which was going to look like what
08:11 - we did before right it's going to go at
08:13 - a steady speed and I'm going to set
08:15 - repeat to true so that between will keep
08:17 - going over and over again and that's
08:19 - going to look similar to what we had
08:20 - before again we're going to take exactly
08:24 - 6 seconds to get all the way around the
08:26 - loop but what this lets you do is do
08:31 - things like using a different tween
08:34 - function like for example sine is going
08:37 - to make it so that the ship looks Eller
08:40 - 8 out of its start area and be going
08:42 - faster around the track and then slow
08:45 - back down again at the end if you have a
08:47 - start point you want it to go from and
08:50 - you can get a lot of really interesting
08:53 - effect
08:53 - by changing around which clean function
08:57 - you use and and how you set it up
09:01 - alright I hope this was helpful if
09:03 - you've never used the path to D or the
09:05 - path followed to D nodes before maybe
09:08 - you can see some applications on how to
09:09 - use them in your projects maybe you're
09:12 - making a tower defense game this would
09:14 - be a great way to have your mobs come in
09:17 - and follow a certain path through the
09:19 - environment you can control that path
09:23 - programmatically as well you don't have
09:25 - to draw the path using the editor
09:28 - there's ways to do it with wood code as
09:31 - well and gives you a lot of flexibility
09:34 - of how you can control how things move
09:36 - through the environment thanks for
09:38 - watching and I'll see you next time
09:48 - you

Cleaned transcript:

welcome back to know your nodes this is a series of Godot game engine videos where we take a single node type from the engine and show how it's used maybe it's a node that you've never come across before or maybe it's one you were just wondering what the best way to use it is but hopefully after this you'll have a new tool that you can use in making your own games this time we'll be talking about the path follow 2d node so our focus is going to be on this path follow 2d node but we do need to know about a couple of other nodes in order to make it work because as you can see from the description the very brief description point sampler for a path 2d so down here at the longer description you see that the path solitude e needs to have a path 2d parent that's going to define what path it's going to follow and if we click on path 2d a path to denote is a very very simple node all it does is contain a curve 2d and what the curve 2d well a curve 2d is a V a curve in 2d space and you may not may or may not be familiar with the term Bezier curve but really it's just a way of defining a twodimensional path in space and you can do it in a lot of different ways but there's a really easy way to do it in the editor and that's what we're going to do so if we go over here I've got an empty scene and I'm just going to add a path 2d as the route and and when you do that when you add a path 2d you'll see you get some new editor buttons up here these are going to help you edit your path so see this one right here that has the little green plus on it this lets you add points in space so if you click on points in empty space you will add points and if I do that right now you'll see everywhere I click creating another point and it is connecting them so now I have a path going from here to here and you can delete points right I didn't want this one in between there I could delete that if you want to grab this button right here you can adjust where they are so you can move them around you can insert ones in between and so on and then the other thing you can do is with this button right here this lets you do the control points and the control points or how you control how curvy the path is so if I grab one of these one of the points you can see I pull this control node I can change how it curves between the two points right and you can have these coming out of each of the points in whatever method you choose and you can basically sculpt your path this way and have it go curve around the way you want it to curve around right and until you have the path the way you want it and you know it can be timeconsuming to to set these up and get them perfectly the way you want them so I've gone ahead and created a path right here that's a loop basically a figure eight it starts up here in the upper left hand corner and it just loops around in a figure eight pattern back to the end now we have our path we want to follow we can add our path follow node so we're going to add a node that's follow to D alright and we want that to be a child of the path and I'm just going to name this follow and so you know the path to D doesn't have really any properties to worry about it just has it just holds this curve the path follow does have a lot of properties that we're going to experiment around with and the main one is this offset offset is how you control where along the curve you want to move and now we need something to move if we look back over at our documentation for the path follow it says it's useful for making other nodes follow a path for that the nodes must be descendants of this node when setting the offset the descendants will move accordingly so we need to put something underneath this as follows it is going to be the thing that will follow the path and so for that we're going to add a sprite grab sprite real quick and I'm going to use this little spaceship texture throw that in there and just real quickly I'm going to scale it down a little bit because it's kind of large and okay now if we look back at our path follow property one of the options here is rotate on or off and that controls if I set up so to read rotation back to zero that controls whether the node as it follows the path will rotate to follow the path right do you want to remain want it to remain always facing the same direction or do you want it to look like it is you know a car driving along the path and it rotates to follow so we're going to put that on and then oh by the way since our sprite started out pointing sideways I do need to rotate this minus 90 degrees that's just because of the default sprite orientation it's drawn pointing up but zero degrees is pointing to the right in our 2d space all right so we're on our path follow we're going to rotate I want the spaceship to look like following the path and loop whether you want to when you reach the end back to the beginning or not is this a oneway path you know with a start and an end or is it a loop well ours is a loop so I'm going to turn that on and now this offset so this offset is going to control however long your path is you can go along the offset so for example if I put 100 I'm going to be 100 units along the path all right I could go a thousand its way over here and you see how the sprite is rotating to match the direction of the path so you can use the offset to set this you can also use the unit offset the unit offset just Maps the length of the path to a difference between zero and one right so zero point five would be halfway along the path wherever that is right so you can use either of those depending on how you want to measure your distance so now let's look at how we might do this in code so I've added a brief script here it just takes our follow node and in the process function I set the offset to whatever the current offset is plus some number times Delta and that's all you need to do now our spaceship is going to fly along the path and remember because we've set it to loop then when the loop and when the offset reaches the maximum it gets set right back to zero again and goes through again so so our ship will just continue to fly around the path as it goes it's a really simple example of how to use the path follow 2d one more thing that I'll do that I thought was a little son was I've gone back into the script now and I've changed it a little bit and we're not going to use the set offset anymore to steadily change it instead we're going to use a tween so I've added a new tween and I'm going to set the tween to interpolate the property on the follow node of unit offset and I want that to go from 0 to 1 which of course goes from the start to the end I wanted to take 6 seconds and I'm going to use linear which was going to look like what we did before right it's going to go at a steady speed and I'm going to set repeat to true so that between will keep going over and over again and that's going to look similar to what we had before again we're going to take exactly 6 seconds to get all the way around the loop but what this lets you do is do things like using a different tween function like for example sine is going to make it so that the ship looks Eller 8 out of its start area and be going faster around the track and then slow back down again at the end if you have a start point you want it to go from and you can get a lot of really interesting effect by changing around which clean function you use and and how you set it up alright I hope this was helpful if you've never used the path to D or the path followed to D nodes before maybe you can see some applications on how to use them in your projects maybe you're making a tower defense game this would be a great way to have your mobs come in and follow a certain path through the environment you can control that path programmatically as well you don't have to draw the path using the editor there's ways to do it with wood code as well and gives you a lot of flexibility of how you can control how things move through the environment thanks for watching and I'll see you next time you
