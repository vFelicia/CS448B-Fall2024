With timestamps:

00:00 - hello and welcome to another Godot game
00:02 - engine tutorial in this video I'm going
00:04 - to show you how to use a shader to
00:06 - create animated tiles in a tile map if
00:08 - you're new to Godot be aware this isn't
00:11 - a beginner video I recommend you start
00:13 - with my Godot 101 tutorials first
00:15 - alright let's get started so our goal
00:17 - for this tutorial is to create an
00:19 - animated tile in our tile map kind of
00:24 - like this example right here now in a
00:26 - earlier video I showed how to do this
00:29 - using the animation player and you can
00:32 - click the link below if you want to see
00:34 - how that works but for this tutorial
00:36 - we're instead going to use a shader to
00:40 - accomplish the same effect now if you've
00:42 - never worked with shaders before they
00:44 - can be a little bit intimidating this
00:46 - video is not a shader tutorial but I
00:49 - will include some links below to some
00:51 - places you can go to learn about the
00:52 - basics of shaders and how they work so
00:55 - that you can get started and understand
00:57 - some of the background for this tutorial
00:59 - so we're going to start with our tile
01:01 - set I've just taken all of my art right
01:03 - here which you can get in the link below
01:05 - and I've just dragged all these p.m. G's
01:07 - into the scene so that I have all of my
01:12 - sprites and so that would be all you
01:15 - needed to do if you wanted to have a
01:18 - basic tile map but now we want to do
01:22 - some animation so I'm going to grab one
01:23 - of these and I'm going to drag it out
01:26 - here it doesn't matter which texture we
01:27 - use because we're going to replace this
01:29 - with animation but I just need one to
01:31 - two placeholder for it and I'm going to
01:33 - call this water shader so this tile will
01:39 - be named water shader and this is the
01:41 - one that we're going to have in our tile
01:43 - set that will be automatically animated
01:46 - to add a shader to this we need to
01:48 - scroll down to the material property and
01:51 - we're going to say new canvas item
01:54 - material press the forward arrow to go
01:57 - into canvas item material and make a new
02:01 - canvas item shader shading mode can
02:06 - remain normal and then when we click
02:08 - here we will open up our
02:12 - shader text editor where we can start
02:14 - typing our shader code we're going to
02:16 - start by defining our textures that we
02:20 - want to use now each of these animations
02:24 - there are 3 water tile animations has 5
02:27 - frames so we're going to want to be able
02:29 - to specify those 5 textures in our
02:34 - shader code and we're going to start by
02:36 - defining our textures textures have to
02:41 - be uniformed and I'll explain what that
02:42 - is in a second we'll call this frame 1
02:45 - and then we're going to do this we're
02:49 - going to do this 5 times because we have
02:51 - 5 frames to do so we'll just call them
02:55 - frame 1 Frame 2 3 & 3 3 & 4 & 5 & 5 & by
03:00 - calling these variables uniform what
03:04 - this does is over here in our sprite if
03:10 - we go to our canvas item material we can
03:13 - now see frame 1 through 5 exposed in the
03:17 - inspector and we can drop our tiled in
03:20 - there which is what I'm going to do I'm
03:21 - going to drop the 5 frames into the 5
03:24 - slots for those textures and now back to
03:34 - the code if all we wanted was one of
03:39 - those textures so let's let's zoom in on
03:40 - this so we can see it as we add the code
03:42 - if we just said color equals we're going
03:52 - to get frame 1 every pixel of the image
03:56 - is being changed to every pixel of frame
04:00 - 1 all right change that to frame 2
04:02 - you're going to see frame 2 and so
04:06 - that's what we want to do but we want to
04:08 - cycle this over time so we can use the
04:11 - built in time for that so we're going to
04:13 - make a float called time and set it
04:17 - equal to the time now the time that's
04:21 - returned every time the shader runs it's
04:23 - going to be in seconds so
04:24 - it might be three point eight one five
04:28 - or it might be zero point four eight -
04:31 - all right it's going to have some sort
04:32 - of fractional and whole number part for
04:36 - the purposes of cycling around I only
04:38 - care about the fractional parts we're
04:39 - going to save tracked time and that's
04:43 - going to take the fractional portion of
04:45 - the time the time after the decimal the
04:47 - part after the decimal point and based
04:50 - on what time we're on we're going to set
04:53 - what pixel with the pixel we want so
04:56 - we're going to call this color and then
05:00 - we're going to set the color equal to at
05:02 - the end whatever color comes out to be
05:09 - okay right now to know so we have our
05:13 - time and so now we can say something
05:17 - like if time let's just say we were
05:19 - doing two frames for the moment if time
05:22 - is less than 0.5 then I want to set
05:27 - color equal to frame one all right there
05:39 - you can see we're doing that right so
05:41 - only so half of a second it's showing
05:44 - frame one the other half it's not now we
05:47 - have five frames so dividing up the
05:50 - second into five frames we're going to
05:51 - means we're going to do this in
05:52 - increments of 0.2 so we want each one to
05:58 - show for that fraction of the second so
06:01 - we need to have an else and we're also
06:06 - going and then we're going to basically
06:08 - chain these together and say if it's
06:10 - less than 0.4 we're gonna do frame two
06:12 - and so on so I went ahead and skip
06:14 - through the typing of that so if our
06:17 - time is less than point two or using
06:19 - frame one point four frame two point six
06:24 - frame three and point eight is frame
06:25 - four otherwise we frame five and now you
06:28 - can see we're getting a smooth
06:30 - transition transition from frame zero
06:33 - I'm sorry from frame 1 to frame 5 and
06:35 - then outputting it at the end
06:38 - and the one other thing that we could
06:39 - add here would be to be able to control
06:43 - the speed so we're going to make a
06:47 - uniform flow speed and we're going to
06:52 - make any uniform so that we can change
06:53 - it in the inspector if we want to change
06:55 - it and we're just going to make that we
06:58 - use that here to multiply by the time
07:01 - and that way we can go into our shader
07:08 - here and if I put point five I'm going
07:10 - to slow down and if I put two it's going
07:14 - to speed up and so it'll be easy for you
07:16 - to control what speed you want your tile
07:21 - to animate at and now all you have to do
07:24 - is save it as a tile set go over to your
07:27 - tile map choose the water shader and
07:29 - anywhere you put it you're going to see
07:31 - that animated tile
07:33 - I've also duplicated it and made the
07:36 - other two animations if you want to see
07:39 - the difference and so you can arrange
07:41 - those how you like and remember when
07:45 - you're doing the when you're doing the
07:47 - shader when you get to the material you
07:51 - can save by hitting the little Save
07:53 - button here save this material so that
07:55 - you can load it on to other tiles you
07:57 - don't have to recreate any of the code
08:00 - and everything like that you can reuse
08:02 - the canvas item material you can also
08:07 - save the actual shader code and load
08:12 - that whenever you want on any other
08:14 - object just make sure you remember to
08:17 - [Music]
08:19 - make unique if you're going to make it
08:21 - different for different tiles or else
08:23 - changes you make on one tile will take
08:26 - effect on other tiles as well all right
08:30 - please post your questions below if you
08:32 - have any comments I'd love to hear them
08:35 - in the description below I've put a link
08:37 - to the project so you can download this
08:39 - and look at the code yourself as well
08:41 - good luck in your shader experimentation
08:44 - and I'll see you in the next video
08:54 - you

Cleaned transcript:

hello and welcome to another Godot game engine tutorial in this video I'm going to show you how to use a shader to create animated tiles in a tile map if you're new to Godot be aware this isn't a beginner video I recommend you start with my Godot 101 tutorials first alright let's get started so our goal for this tutorial is to create an animated tile in our tile map kind of like this example right here now in a earlier video I showed how to do this using the animation player and you can click the link below if you want to see how that works but for this tutorial we're instead going to use a shader to accomplish the same effect now if you've never worked with shaders before they can be a little bit intimidating this video is not a shader tutorial but I will include some links below to some places you can go to learn about the basics of shaders and how they work so that you can get started and understand some of the background for this tutorial so we're going to start with our tile set I've just taken all of my art right here which you can get in the link below and I've just dragged all these p.m. G's into the scene so that I have all of my sprites and so that would be all you needed to do if you wanted to have a basic tile map but now we want to do some animation so I'm going to grab one of these and I'm going to drag it out here it doesn't matter which texture we use because we're going to replace this with animation but I just need one to two placeholder for it and I'm going to call this water shader so this tile will be named water shader and this is the one that we're going to have in our tile set that will be automatically animated to add a shader to this we need to scroll down to the material property and we're going to say new canvas item material press the forward arrow to go into canvas item material and make a new canvas item shader shading mode can remain normal and then when we click here we will open up our shader text editor where we can start typing our shader code we're going to start by defining our textures that we want to use now each of these animations there are 3 water tile animations has 5 frames so we're going to want to be able to specify those 5 textures in our shader code and we're going to start by defining our textures textures have to be uniformed and I'll explain what that is in a second we'll call this frame 1 and then we're going to do this we're going to do this 5 times because we have 5 frames to do so we'll just call them frame 1 Frame 2 3 & 3 3 & 4 & 5 & 5 & by calling these variables uniform what this does is over here in our sprite if we go to our canvas item material we can now see frame 1 through 5 exposed in the inspector and we can drop our tiled in there which is what I'm going to do I'm going to drop the 5 frames into the 5 slots for those textures and now back to the code if all we wanted was one of those textures so let's let's zoom in on this so we can see it as we add the code if we just said color equals we're going to get frame 1 every pixel of the image is being changed to every pixel of frame 1 all right change that to frame 2 you're going to see frame 2 and so that's what we want to do but we want to cycle this over time so we can use the built in time for that so we're going to make a float called time and set it equal to the time now the time that's returned every time the shader runs it's going to be in seconds so it might be three point eight one five or it might be zero point four eight all right it's going to have some sort of fractional and whole number part for the purposes of cycling around I only care about the fractional parts we're going to save tracked time and that's going to take the fractional portion of the time the time after the decimal the part after the decimal point and based on what time we're on we're going to set what pixel with the pixel we want so we're going to call this color and then we're going to set the color equal to at the end whatever color comes out to be okay right now to know so we have our time and so now we can say something like if time let's just say we were doing two frames for the moment if time is less than 0.5 then I want to set color equal to frame one all right there you can see we're doing that right so only so half of a second it's showing frame one the other half it's not now we have five frames so dividing up the second into five frames we're going to means we're going to do this in increments of 0.2 so we want each one to show for that fraction of the second so we need to have an else and we're also going and then we're going to basically chain these together and say if it's less than 0.4 we're gonna do frame two and so on so I went ahead and skip through the typing of that so if our time is less than point two or using frame one point four frame two point six frame three and point eight is frame four otherwise we frame five and now you can see we're getting a smooth transition transition from frame zero I'm sorry from frame 1 to frame 5 and then outputting it at the end and the one other thing that we could add here would be to be able to control the speed so we're going to make a uniform flow speed and we're going to make any uniform so that we can change it in the inspector if we want to change it and we're just going to make that we use that here to multiply by the time and that way we can go into our shader here and if I put point five I'm going to slow down and if I put two it's going to speed up and so it'll be easy for you to control what speed you want your tile to animate at and now all you have to do is save it as a tile set go over to your tile map choose the water shader and anywhere you put it you're going to see that animated tile I've also duplicated it and made the other two animations if you want to see the difference and so you can arrange those how you like and remember when you're doing the when you're doing the shader when you get to the material you can save by hitting the little Save button here save this material so that you can load it on to other tiles you don't have to recreate any of the code and everything like that you can reuse the canvas item material you can also save the actual shader code and load that whenever you want on any other object just make sure you remember to make unique if you're going to make it different for different tiles or else changes you make on one tile will take effect on other tiles as well all right please post your questions below if you have any comments I'd love to hear them in the description below I've put a link to the project so you can download this and look at the code yourself as well good luck in your shader experimentation and I'll see you in the next video you
