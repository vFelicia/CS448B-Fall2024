With timestamps:

00:00 - welcome to another Godot recipes video
00:02 - this time around we're going to talk
00:04 - about how to use a character body to
00:06 - interact with a rigid body
00:09 - one of the most common physics related
00:10 - questions that comes up in Godot is when
00:13 - you have a character body like my little
00:16 - green Cube here and these red squares
00:19 - are rigid bodies and if all you do is
00:23 - add your character body and your rigid
00:26 - bodies and you're trying to push them
00:27 - you'll see nothing happens you can't
00:29 - push them and it doesn't matter what you
00:31 - set their Mass to they won't move this
00:34 - is the default Behavior the
00:38 - rigid bodies which are controlled by the
00:40 - physics engine are not detecting any
00:42 - collision with the character body which
00:46 - is being moved in code
00:48 - to solve this we have two options
00:51 - in the project settings I've created
00:53 - three physics layers one for the world
00:55 - one for the player and one for items
00:57 - such as the Box
00:59 - and then I've placed each object in
01:01 - those layers so the player node is in
01:04 - Layer Two
01:06 - and the box is in
01:09 - layer three
01:11 - and that's the default Behavior if we
01:15 - ran it right now nothing will have
01:16 - changed but let's go into the player
01:19 - mask and remove three so now when the
01:23 - player moves it will not detect
01:25 - collisions with the rigid bodies so it's
01:27 - just going to plow right through them
01:29 - but the rigid body is going to still try
01:32 - and separate because the rigid body can
01:35 - see layer 2 which the player is on so
01:38 - it's going to want to keep its Collision
01:39 - box separated so let's try that and see
01:42 - what that looks like
01:44 - so now you can see I'm pushing them
01:46 - however there are some problems if I
01:49 - keep pushing against it I it will clip
01:51 - through the wall
01:53 - and you are not able to jump on top of
01:55 - them because you'll push them right
01:56 - through
01:57 - the ground Collision
02:00 - those of you who are familiar with good
02:02 - O3 will recognize this as the default
02:04 - Behavior which was called infinite
02:06 - inertia in that
02:09 - version of movement slide and so for
02:12 - some games this will be this will be
02:14 - just fine you can shove the boxes they
02:17 - fall over and you're not concerned with
02:19 - wall glitches and such but if you want
02:21 - something a little more robust where
02:24 - things do not glitch out when you
02:27 - push into the box then we need to try
02:29 - option number two okay for this option
02:32 - we're going to put the mask back so
02:34 - we're back to the way we started the
02:36 - character body won't push the rigid body
02:38 - and this time we're going to add some
02:40 - code into our
02:41 - player so when the character body hits a
02:43 - rigid body it's going to apply an
02:45 - Impulse or a push to the rigid body
02:49 - so in our player code
02:51 - we're going to add a variable here to
02:53 - control how strong that force is
02:56 - and then in our physics process after a
02:59 - move and slide
03:01 - we're going to get the slide Collision
03:03 - and if the thing we collided with was a
03:06 - rigid body then we're going to apply an
03:08 - Impulse in the opposite direction from
03:12 - the Collision normal which will mean
03:13 - into the rigid body
03:16 - using that push Force
03:18 - so now when we run
03:21 - we'll see we can push but now if I push
03:23 - against the wall I can't push it through
03:26 - the wall and if I jump on top of it I
03:29 - also can't glitch it through the ground
03:31 - but I can push them
03:34 - and they'll slide up hills and so on
03:36 - now how strongly you want to set that
03:39 - push force is going to depend on a few
03:43 - factors how fast your character moves
03:45 - how massive the boxes are as you can see
03:48 - here the boxes I've given them a mass of
03:50 - one
03:51 - if the boxes have a really high mass
03:53 - you're going to need a stronger push
03:54 - Force
03:56 - and so it's something you're going to
03:58 - have to adjust based on your particular
04:00 - game this will work just as well in 3D
04:03 - as it does in the 2D example here and
04:06 - some other things you might want to try
04:07 - for your game if you're experimenting
04:10 - with this is to perhaps move use the
04:13 - velocity of your player as a factor in
04:17 - the push Force you can scale it up or
04:18 - down based on how fast your character is
04:20 - moving things like that
04:23 - you can find this in many other good old
04:24 - recipes tutorials examples and tips at
04:27 - good or recipes.com don't forget to like
04:29 - And subscribe on YouTube to get the
04:31 - latest video tutorials and if you'd like
04:33 - to help support these efforts please
04:34 - consider clicking the patreon link
04:36 - thanks

Cleaned transcript:

welcome to another Godot recipes video this time around we're going to talk about how to use a character body to interact with a rigid body one of the most common physics related questions that comes up in Godot is when you have a character body like my little green Cube here and these red squares are rigid bodies and if all you do is add your character body and your rigid bodies and you're trying to push them you'll see nothing happens you can't push them and it doesn't matter what you set their Mass to they won't move this is the default Behavior the rigid bodies which are controlled by the physics engine are not detecting any collision with the character body which is being moved in code to solve this we have two options in the project settings I've created three physics layers one for the world one for the player and one for items such as the Box and then I've placed each object in those layers so the player node is in Layer Two and the box is in layer three and that's the default Behavior if we ran it right now nothing will have changed but let's go into the player mask and remove three so now when the player moves it will not detect collisions with the rigid bodies so it's just going to plow right through them but the rigid body is going to still try and separate because the rigid body can see layer 2 which the player is on so it's going to want to keep its Collision box separated so let's try that and see what that looks like so now you can see I'm pushing them however there are some problems if I keep pushing against it I it will clip through the wall and you are not able to jump on top of them because you'll push them right through the ground Collision those of you who are familiar with good O3 will recognize this as the default Behavior which was called infinite inertia in that version of movement slide and so for some games this will be this will be just fine you can shove the boxes they fall over and you're not concerned with wall glitches and such but if you want something a little more robust where things do not glitch out when you push into the box then we need to try option number two okay for this option we're going to put the mask back so we're back to the way we started the character body won't push the rigid body and this time we're going to add some code into our player so when the character body hits a rigid body it's going to apply an Impulse or a push to the rigid body so in our player code we're going to add a variable here to control how strong that force is and then in our physics process after a move and slide we're going to get the slide Collision and if the thing we collided with was a rigid body then we're going to apply an Impulse in the opposite direction from the Collision normal which will mean into the rigid body using that push Force so now when we run we'll see we can push but now if I push against the wall I can't push it through the wall and if I jump on top of it I also can't glitch it through the ground but I can push them and they'll slide up hills and so on now how strongly you want to set that push force is going to depend on a few factors how fast your character moves how massive the boxes are as you can see here the boxes I've given them a mass of one if the boxes have a really high mass you're going to need a stronger push Force and so it's something you're going to have to adjust based on your particular game this will work just as well in 3D as it does in the 2D example here and some other things you might want to try for your game if you're experimenting with this is to perhaps move use the velocity of your player as a factor in the push Force you can scale it up or down based on how fast your character is moving things like that you can find this in many other good old recipes tutorials examples and tips at good or recipes.com don't forget to like And subscribe on YouTube to get the latest video tutorials and if you'd like to help support these efforts please consider clicking the patreon link thanks
