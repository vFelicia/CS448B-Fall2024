With timestamps:

00:00 - welcome back to part five of the intro
00:03 - to 3d series for Godot in the previous
00:06 - parts we've added objects to our scene
00:09 - we've created a character that can walk
00:11 - around and this time we're going to make
00:13 - a couple small improvements to that
00:14 - project one we're going to make it so
00:16 - that our character can't walk off edges
00:19 - so we can't fall to our doom and the
00:22 - other is we're going to improve the way
00:23 - that the mouse handling happens as we're
00:26 - using the mouse to control our character
00:27 - we're going to learn how to capture and
00:30 - release the mouse in our application
00:32 - alright let's get started so right now
00:35 - we turn when we move the mouse left and
00:37 - right but the problem with that is we
00:41 - keep moving the mouse to the right it
00:43 - eventually goes out of the window and
00:45 - hits the edge of the screen and we don't
00:48 - want that we want the mouse when you're
00:50 - using the mouse to control the character
00:52 - to be captured which means it belongs to
00:56 - the window and will stay inside the
00:58 - window so let's do that first so I'm
01:02 - gonna go to the main scene script and
01:04 - I'm going to add in the ready so we want
01:07 - this to happen when we run we're gonna
01:11 - call set mouse mode and then here you
01:15 - see what the modes are we want to set it
01:18 - to captured and that will do what we
01:21 - want to do the problem is that once the
01:24 - mouse is captured the mouse pointer
01:26 - disappears and you can't move out of the
01:29 - window which means you can't click the X
01:31 - you can't click on another window right
01:34 - you're trapped in that window so we need
01:36 - a way to also get it out and so we'll do
01:39 - that we'll prep we'll use the Escape key
01:41 - for that so we're gonna capture inputs
01:44 - here and if event use action pressed
01:50 - we're gonna use UI cancel that's the
01:54 - escape key if they press the US or the
01:57 - UI cancel then we can do the opposite
02:00 - and release the mouse set mouse mode and
02:03 - we're gonna set it to visible okay so
02:09 - that's
02:10 - a start alright let's try that out so
02:13 - now my mouse is trapped in the window I
02:16 - can't I can remove around like normal
02:19 - and if I want to get my mouse out I
02:21 - press escape and now I have the mouse
02:23 - back but we have two problems one is now
02:27 - that my mouse is no longer captured by
02:28 - the window I want to be able to move
02:31 - around in my in the rest of my computer
02:34 - screen without the character actually
02:37 - turning so I want to ignore Mouse
02:38 - movement when I'm not captured I also
02:41 - need a way to capture it again right so
02:43 - now I've hit escape I've gone off to do
02:45 - something else now I want to play some
02:46 - more I want to be able to click here on
02:49 - the window and capture the mouse again
02:51 - let's jump over to our character script
02:54 - and down here in the input is where we
02:58 - in the unhandled input is where we're
02:59 - detecting the mouse motion right and so
03:02 - we move we rotate whenever we detect
03:04 - Mouse motion so let's add that we only
03:06 - want to move if we're captured so we're
03:09 - gonna check get Mouse mode and if that's
03:14 - equal to Mouse captured Mouse mode
03:19 - captured and so you can see the whole
03:22 - line so if we detect Mouse motion and
03:24 - the mouse is captured then we'll turn
03:27 - now to get our mouse capture State back
03:31 - when we're not captured is we're gonna
03:33 - need to do something when we click on
03:36 - the window so we're going to do that
03:37 - back over in the main and now if we we
03:40 - already have an event for mouse click
03:44 - and that's shoot so we'll just keep
03:49 - using that one so if we click the mouse
03:51 - if the get mouse mode is equal to input
03:59 - Mouse mode visible so if we're not
04:05 - captured then we're gonna set mode to
04:08 - captured so let's just grab this and put
04:10 - that down there as well
04:12 - so now if we click will capture the
04:15 - mouse again so let's try that so now I'm
04:19 - captured I hit escape now I'm out and
04:22 - see now that I'm out
04:24 - nothing's happening when I move the
04:25 - mouse and then when I click to recap I
04:27 - should recapture and I do but notice
04:31 - that we're also it shot one bullet when
04:33 - I clicked so I want that click to not
04:36 - trigger shooting a bullet so to do that
04:40 - we just need to also put here that when
04:43 - we have detected that shoot action and
04:46 - we were not captured and we change to
04:49 - captured mode we're going to use set
04:53 - input as handled and that will tell the
04:57 - scene tree that this input is done don't
05:00 - pass it on and it won't reach the player
05:02 - that time so let's try this one more
05:05 - time so now I hit escape to get out I
05:09 - click to get back and now I'm in and any
05:13 - more clicks I do will shoot now the
05:17 - other thing I want to do is I want to
05:18 - prevent my character from running off
05:21 - the edge of a cliff alright so if I run
05:23 - off the edge he falls and that was
05:27 - that's bad if you're out here you know
05:28 - walking along a ledge that's over
05:30 - nothing and I want it to stop if I reach
05:33 - the edge so here we are at our player
05:35 - scene and we're going to add a ray cast
05:38 - node and a ray cast node projects
05:41 - downwards by default you can see it cast
05:44 - to 0 negative 1 y 0 Z that means that
05:49 - means it's pointing downwards and if we
05:51 - go over here we can sort of see it sort
05:53 - of hidden by the y axis actually let's
05:56 - just do the right view right now it's
05:59 - projecting down from the center of the
06:01 - player so I want to move it over so it's
06:04 - projecting down from the front of the
06:06 - player so now you can see it projecting
06:09 - down here right the right view is a good
06:11 - way to just look at it perpendicularly
06:13 - so it's projecting down from the front
06:15 - of the player so if I walk along as long
06:18 - as I'm standing on a block this Ray cast
06:20 - is going to be hitting something but as
06:22 - I walk along and I reach a Ledge then
06:25 - when I get near the edge the raycast is
06:28 - going to be projecting down and not
06:29 - hitting hitting anything so that's how
06:31 - I'm gonna know that I've reached an edge
06:33 - when the raycast stops colliding
06:36 - so we're gonna do that in the code but
06:38 - first an important tip if you look at
06:42 - the raycast when you first add a ray
06:44 - cast or a cast to D enabled is turned
06:47 - off by default so make sure you turn
06:48 - that on or you will be scratching your
06:51 - head and wondering why this Ray cast is
06:52 - not working and we're fine on collision
06:55 - masks by the way because since we set
06:57 - the first layer to environment that's
06:59 - the default one and that's the one we
07:01 - want the raycast checking with so we're
07:04 - good to go there so here's our character
07:06 - script and right now we have this we
07:09 - move forward as long as we're holding
07:12 - that forward input and now we want to do
07:16 - that now only as long as the raycast is
07:18 - colliding so let's add and raycast
07:24 - is colliding so let's see what happens
07:30 - when we run this so I'm gonna walk up to
07:34 - the edge oh and see I can't go any
07:36 - further
07:37 - I can't walk off the edge but there's a
07:40 - problem
07:40 - let's try jumping when we jump up in the
07:43 - air we can't jump forward because as
07:47 - soon as we're up in the air the raycast
07:49 - isn't touching anything anymore so our
07:51 - speed is getting set to zero so that is
07:55 - not optimal so we're part of the way
07:58 - there but we need to fix the jumping now
08:00 - okay so we need to do this a little
08:02 - differently so instead what we're gonna
08:05 - do is when we press the move forward if
08:08 - we're on the floor and the raycast is
08:14 - not colliding so if we're on the floor
08:19 - and the raycast is not colliding that's
08:20 - when we want to stop that's when we want
08:22 - to do nothing otherwise we want to do
08:26 - this now some of you might be wondering
08:29 - why I wrote it this way just hang on a
08:31 - second I'm going to change this around
08:33 - but I have a reason but let's think
08:35 - about this we're setting our velocity to
08:37 - zero and when we press move forward
08:39 - we're only adding to it when we're when
08:44 - this condition is not true so if we're
08:45 - on the floor and the raycast is not
08:48 - colliding we're going to stop which is
08:50 - that means we've walked up to an edge so
08:52 - let's try it so walking to an edge works
08:57 - like it did before but I can still jump
09:00 - forward which is what we want so let's
09:06 - talk about that if statement so looking
09:10 - at this if you're probably a little
09:12 - unsatisfied with it it feels weird to
09:14 - have a condition that does nothing and
09:16 - then every other condition you do
09:19 - something and so how can we simplify
09:21 - this we can simplify this with a little
09:23 - bit of boolean algebra so let's look at
09:25 - a quick example so this is essentially
09:28 - what our if statement is we have if a do
09:32 - nothing else do something well this is
09:35 - equivalent to saying if not a do
09:39 - something right so we want to just take
09:42 - our current condition and negate it so
09:47 - we could write that right we could put
09:51 - naught and then put all of this in
09:55 - parenthesis and get rid of the else and
10:00 - this is going to work but this is a
10:03 - little bit hard to read too because you
10:05 - have to you you kind of have to think
10:07 - about what's going on inside the
10:09 - parentheses and then negate it it'd be
10:11 - nice if we could simplify this some more
10:14 - too and we can using something called de
10:17 - Morgan's law now de Morgan's law says
10:20 - this if you have not and then two
10:23 - conditions and and condition in
10:25 - parentheses you can distribute that not
10:28 - like this it's not a or not B so you
10:32 - basically change the an to an or and
10:34 - distribute the not to both of them so we
10:36 - can do that with our condition as well
10:39 - we can change this we get rid of the
10:41 - parenthesis we make that it a not and we
10:45 - make this a nots but since it's already
10:47 - a not that means we're gonna change it
10:49 - to true and then this becomes an or so
10:53 - if not is on floor or raycast is
10:56 - colliding we want to move forward
10:59 - so hopefully that little example of
11:01 - boolean algebra helps you
11:04 - later on and figuring out how to
11:07 - construct your different conditions
11:09 - especially when you have a bunch of
11:12 - combinations of conditions that start to
11:13 - get complicated with parentheses and
11:15 - things like that look up de Morgan's law
11:18 - I'll put a link to it in the description
11:20 - below so you can look at there's some
11:22 - other rules as well that come in handy
11:24 - for simplifying conditions that'll do it
11:28 - for this video I'll see you next time
11:29 - when we talk about other ways that you
11:32 - can build your 3d environments using
11:34 - something called constructed solid
11:36 - geometry thanks for watching and I'll
11:40 - see you then
11:47 - you

Cleaned transcript:

welcome back to part five of the intro to 3d series for Godot in the previous parts we've added objects to our scene we've created a character that can walk around and this time we're going to make a couple small improvements to that project one we're going to make it so that our character can't walk off edges so we can't fall to our doom and the other is we're going to improve the way that the mouse handling happens as we're using the mouse to control our character we're going to learn how to capture and release the mouse in our application alright let's get started so right now we turn when we move the mouse left and right but the problem with that is we keep moving the mouse to the right it eventually goes out of the window and hits the edge of the screen and we don't want that we want the mouse when you're using the mouse to control the character to be captured which means it belongs to the window and will stay inside the window so let's do that first so I'm gonna go to the main scene script and I'm going to add in the ready so we want this to happen when we run we're gonna call set mouse mode and then here you see what the modes are we want to set it to captured and that will do what we want to do the problem is that once the mouse is captured the mouse pointer disappears and you can't move out of the window which means you can't click the X you can't click on another window right you're trapped in that window so we need a way to also get it out and so we'll do that we'll prep we'll use the Escape key for that so we're gonna capture inputs here and if event use action pressed we're gonna use UI cancel that's the escape key if they press the US or the UI cancel then we can do the opposite and release the mouse set mouse mode and we're gonna set it to visible okay so that's a start alright let's try that out so now my mouse is trapped in the window I can't I can remove around like normal and if I want to get my mouse out I press escape and now I have the mouse back but we have two problems one is now that my mouse is no longer captured by the window I want to be able to move around in my in the rest of my computer screen without the character actually turning so I want to ignore Mouse movement when I'm not captured I also need a way to capture it again right so now I've hit escape I've gone off to do something else now I want to play some more I want to be able to click here on the window and capture the mouse again let's jump over to our character script and down here in the input is where we in the unhandled input is where we're detecting the mouse motion right and so we move we rotate whenever we detect Mouse motion so let's add that we only want to move if we're captured so we're gonna check get Mouse mode and if that's equal to Mouse captured Mouse mode captured and so you can see the whole line so if we detect Mouse motion and the mouse is captured then we'll turn now to get our mouse capture State back when we're not captured is we're gonna need to do something when we click on the window so we're going to do that back over in the main and now if we we already have an event for mouse click and that's shoot so we'll just keep using that one so if we click the mouse if the get mouse mode is equal to input Mouse mode visible so if we're not captured then we're gonna set mode to captured so let's just grab this and put that down there as well so now if we click will capture the mouse again so let's try that so now I'm captured I hit escape now I'm out and see now that I'm out nothing's happening when I move the mouse and then when I click to recap I should recapture and I do but notice that we're also it shot one bullet when I clicked so I want that click to not trigger shooting a bullet so to do that we just need to also put here that when we have detected that shoot action and we were not captured and we change to captured mode we're going to use set input as handled and that will tell the scene tree that this input is done don't pass it on and it won't reach the player that time so let's try this one more time so now I hit escape to get out I click to get back and now I'm in and any more clicks I do will shoot now the other thing I want to do is I want to prevent my character from running off the edge of a cliff alright so if I run off the edge he falls and that was that's bad if you're out here you know walking along a ledge that's over nothing and I want it to stop if I reach the edge so here we are at our player scene and we're going to add a ray cast node and a ray cast node projects downwards by default you can see it cast to 0 negative 1 y 0 Z that means that means it's pointing downwards and if we go over here we can sort of see it sort of hidden by the y axis actually let's just do the right view right now it's projecting down from the center of the player so I want to move it over so it's projecting down from the front of the player so now you can see it projecting down here right the right view is a good way to just look at it perpendicularly so it's projecting down from the front of the player so if I walk along as long as I'm standing on a block this Ray cast is going to be hitting something but as I walk along and I reach a Ledge then when I get near the edge the raycast is going to be projecting down and not hitting hitting anything so that's how I'm gonna know that I've reached an edge when the raycast stops colliding so we're gonna do that in the code but first an important tip if you look at the raycast when you first add a ray cast or a cast to D enabled is turned off by default so make sure you turn that on or you will be scratching your head and wondering why this Ray cast is not working and we're fine on collision masks by the way because since we set the first layer to environment that's the default one and that's the one we want the raycast checking with so we're good to go there so here's our character script and right now we have this we move forward as long as we're holding that forward input and now we want to do that now only as long as the raycast is colliding so let's add and raycast is colliding so let's see what happens when we run this so I'm gonna walk up to the edge oh and see I can't go any further I can't walk off the edge but there's a problem let's try jumping when we jump up in the air we can't jump forward because as soon as we're up in the air the raycast isn't touching anything anymore so our speed is getting set to zero so that is not optimal so we're part of the way there but we need to fix the jumping now okay so we need to do this a little differently so instead what we're gonna do is when we press the move forward if we're on the floor and the raycast is not colliding so if we're on the floor and the raycast is not colliding that's when we want to stop that's when we want to do nothing otherwise we want to do this now some of you might be wondering why I wrote it this way just hang on a second I'm going to change this around but I have a reason but let's think about this we're setting our velocity to zero and when we press move forward we're only adding to it when we're when this condition is not true so if we're on the floor and the raycast is not colliding we're going to stop which is that means we've walked up to an edge so let's try it so walking to an edge works like it did before but I can still jump forward which is what we want so let's talk about that if statement so looking at this if you're probably a little unsatisfied with it it feels weird to have a condition that does nothing and then every other condition you do something and so how can we simplify this we can simplify this with a little bit of boolean algebra so let's look at a quick example so this is essentially what our if statement is we have if a do nothing else do something well this is equivalent to saying if not a do something right so we want to just take our current condition and negate it so we could write that right we could put naught and then put all of this in parenthesis and get rid of the else and this is going to work but this is a little bit hard to read too because you have to you you kind of have to think about what's going on inside the parentheses and then negate it it'd be nice if we could simplify this some more too and we can using something called de Morgan's law now de Morgan's law says this if you have not and then two conditions and and condition in parentheses you can distribute that not like this it's not a or not B so you basically change the an to an or and distribute the not to both of them so we can do that with our condition as well we can change this we get rid of the parenthesis we make that it a not and we make this a nots but since it's already a not that means we're gonna change it to true and then this becomes an or so if not is on floor or raycast is colliding we want to move forward so hopefully that little example of boolean algebra helps you later on and figuring out how to construct your different conditions especially when you have a bunch of combinations of conditions that start to get complicated with parentheses and things like that look up de Morgan's law I'll put a link to it in the description below so you can look at there's some other rules as well that come in handy for simplifying conditions that'll do it for this video I'll see you next time when we talk about other ways that you can build your 3d environments using something called constructed solid geometry thanks for watching and I'll see you then you
