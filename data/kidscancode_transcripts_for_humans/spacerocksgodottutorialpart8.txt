With timestamps:

00:00 - welcome to part eight of space rocks the
00:02 - Godot engine game tutorial where we're
00:04 - making a full asteroid style game this
00:07 - time we're gonna do a little more work
00:08 - on the HUD adding a pop up message for
00:11 - announcing level transitions and things
00:13 - like that and we're also going to script
00:15 - a simple pause function okay let's get
00:18 - started okay to start off I've done a
00:21 - little cleanup and reorganize the code a
00:24 - little bit from last time when we added
00:26 - the HUD and what I'm doing is I'm I'm
00:29 - getting rid of in main this show HUD
00:33 - shield function so I'm going to get rid
00:35 - of that and I'm also getting rid of the
00:38 - individual components of the HUD and I'm
00:41 - just turning this into a HUD dot update
00:45 - function so that the main doesn't have
00:47 - to know anything about how the HUD is
00:49 - organized or anything it just is gonna
00:51 - tell it to plan to update and pass it
00:54 - the player object with all of its you
00:56 - know shield level and all that kind of
00:58 - stuff and so that way I can on the
01:02 - script for the HUD is where I've moved
01:05 - all this stuff so in the HUDs update
01:07 - function I update the shield which is
01:10 - the code we had before about picking the
01:12 - level and setting the the length of the
01:14 - bar in the color and setting the score
01:19 - on the score label so everything still
01:22 - works exactly the same
01:24 - it still looks fine we just are a little
01:28 - bit more organized now you see
01:31 - everything works the same
01:36 - and I just want to give a quick shout
01:38 - out to after YouTube in the comments on
01:41 - the previous video he made this
01:43 - suggestion and I think it's a really
01:45 - good one and it's gonna make it a lot
01:47 - more flexible down the road as we add
01:50 - more features to the head alright so
01:53 - let's move on
01:53 - all right on this HUD we are going to
01:56 - add another label and this label is
01:59 - going to be called message and what this
02:04 - is gonna be for is any announcements we
02:06 - need to make like level transitions
02:09 - GAMEOVER anything like that so what
02:11 - we've done is just set the font the
02:13 - message the same as we did on the score
02:15 - and we've set the align to make it fill
02:19 - the whole screen so that however big a
02:21 - chunk of text we send to it it's just
02:23 - going to always be centered at the
02:25 - middle so we just set the anchors to the
02:29 - beginnings and ends and the margins to
02:32 - zero and that will be that and then in
02:36 - the code we're just going to set this to
02:38 - show and hide different messages a
02:40 - message timer here and I'm going to set
02:44 - the wait time to 3 seconds it's going to
02:47 - be a one-shot so it just stops when it
02:50 - reaches the end and it's not going to
02:52 - auto start and we're gonna take its time
02:56 - out method and connect that and when the
03:01 - message timer times out we're just gonna
03:07 - say get node message and we're gonna
03:13 - hide it and for starting a message we're
03:19 - just going to have a function called
03:22 - show message and you pass in you pass in
03:26 - some text and what that's going to do is
03:30 - [Music]
03:33 - on the message node we're going to set
03:39 - the text to whatever that was we're
03:44 - going to make sure we show it
03:49 - and we're going to start the message
03:52 - timer okay so in our main in our ready
04:05 - we're going to call a new function
04:07 - called begin again next level and every
04:11 - time we want to start a new level this
04:12 - is what we're going to do and what this
04:17 - function is going to do is it's going to
04:20 - increment the level so we're going to
04:22 - move that up here and then we're also
04:26 - going to issue a message so that's HUD
04:31 - show message and the message we're gonna
04:35 - say is just wave whatever level we're on
04:39 - so we're just going to do % global level
04:45 - and then on that next wave we are going
04:51 - to move this stuff up to because we want
04:57 - to spawn the new asteroids and in the
05:03 - process when we're detected we have no
05:05 - more asteroids left we will begin next
05:09 - level and now we get this nice message
05:13 - when we run the program we're on level 1
05:17 - and if I fast forward here
05:29 - now you see we get wave too so this is a
05:33 - really nice way to do message pop-ups
05:37 - and things that you want to display on
05:39 - top of your your game screen just using
05:43 - the the basic Godot GUI nodes so the
05:48 - other thing we want to do is in this
05:51 - video is we're going to add a pause
05:52 - function so in our global we're going to
05:57 - make a variable called pause it's going
06:00 - to keep track of our pause state and in
06:03 - the HUD we're going to process input and
06:05 - I've already added here the pause toggle
06:10 - input event which I've set in the input
06:13 - map to be the P key and that's just
06:16 - going to toggle that boolean variable
06:18 - from false to true and so now we want
06:22 - the game to pause but we also want to be
06:24 - able to see on the screen that we're
06:26 - paused so we're going to add a node for
06:28 - that so we're gonna add a panel node
06:32 - this is going to be the pause pop-up and
06:36 - then inside of that we're going to put a
06:39 - label and that's going to just hold the
06:42 - pause the text that we're gonna show on
06:44 - the screen and the reason we're using
06:48 - this label is if we make it fullscreen
06:54 - as you can see it has a dark background
06:59 - so if we take the opacity and we crank
07:01 - that down a bit it'll give us a nice
07:04 - gray dimming effect and then the pause
07:07 - text we're gonna Center on the screen so
07:10 - I've gone ahead and done all the font
07:12 - setting and centering it and everything
07:15 - just so you can see what it looks like
07:17 - so just by hiding and showing this pause
07:20 - pop-up is how we'll be able to show the
07:24 - state of the game how do we actually
07:26 - pause game play well there's a command
07:29 - called git Tree and what this does is it
07:33 - gets the root of the game for exam
07:36 - when our main scene is running the root
07:40 - of the tree is is the parent domain and
07:42 - so we want to use the method in that
07:44 - called set pause and what we want to set
07:48 - it to is global dot paused so we want to
07:52 - set that to true or false and if you've
07:55 - noticed on any of your nodes that you
07:56 - click on down at the bottom under the
08:01 - node object is a property called pause
08:05 - mode and it can be set to inherit stop
08:09 - or process by default all the modes are
08:12 - going to be set to inherit and but this
08:14 - lets you choose what you want
08:15 - each node to do when pausing it's set to
08:19 - true and your options are that you can
08:22 - have it stopped or you can have it
08:23 - process stop means it should freeze like
08:26 - you would expect pause to do to a moving
08:28 - character or something process means
08:30 - keep going ignore the fact that we're
08:32 - paused which is how you would let
08:34 - certain animations or things keep
08:36 - happening while you're paused so if we
08:38 - leave everything on inherit what inherit
08:41 - means is do whatever your parent is set
08:43 - to do so if we go over to our main node
08:46 - and in the main we set it to stop then
08:50 - everything underneath it is going to
08:52 - stop as well
08:53 - when we set pause so now we can go back
08:57 - to our script here and we've set paused
08:59 - and now we can also set we can also get
09:03 - node and we'll get the pause pop-up and
09:08 - we're going to set hidden we're going to
09:13 - set hidden to the opposite of whatever
09:18 - global dot paused is because positives
09:23 - true we want to set hidden to be false
09:25 - and now if we run this we're gonna see a
09:27 - problem or actually we're going to see
09:29 - two problems actually
09:31 - so I've hit the pause button and now you
09:33 - can see that it's gotten dim and the
09:36 - pause message is showing but wave one
09:40 - was still under there and that makes it
09:42 - really hard to read so we need to hide
09:43 - any message that's showing while we're
09:46 - paused the other problem is
09:49 - I can't unpause it I'm pressing P and it
09:51 - won't resume and that's because our HUD
09:56 - is inheriting from Maine and it's
09:59 - stopping well if it's stopping it's not
10:01 - processing input so we're not able to
10:04 - unpause so we need to do two things here
10:06 - we need to take the HUD and set it to
10:09 - process all right we don't want the HUD
10:12 - to stop processing input the other thing
10:15 - we want to do is we want to get the
10:17 - message node and we want to set it to
10:19 - hidden when we're paused and now you
10:22 - might expect if you do something like
10:24 - this that you're on the right track but
10:26 - watch what happens now so I'm going to
10:29 - pause it we've won disappears and now
10:34 - I've specifically waited for 3 seconds
10:37 - to go by and when I unpause it wave one
10:40 - comes back and it is never going to go
10:43 - away right that's not what we want
10:46 - because what happened was we paused the
10:50 - game but our message timer kept ticking
10:53 - so we need that to stop when the game is
10:57 - paused
10:57 - that way when we if we pause it while a
11:01 - message is up when we resume the
11:04 - remaining amount of time we'll be there
11:06 - and it'll disappear when it's supposed
11:09 - to
11:17 - you

Cleaned transcript:

welcome to part eight of space rocks the Godot engine game tutorial where we're making a full asteroid style game this time we're gonna do a little more work on the HUD adding a pop up message for announcing level transitions and things like that and we're also going to script a simple pause function okay let's get started okay to start off I've done a little cleanup and reorganize the code a little bit from last time when we added the HUD and what I'm doing is I'm I'm getting rid of in main this show HUD shield function so I'm going to get rid of that and I'm also getting rid of the individual components of the HUD and I'm just turning this into a HUD dot update function so that the main doesn't have to know anything about how the HUD is organized or anything it just is gonna tell it to plan to update and pass it the player object with all of its you know shield level and all that kind of stuff and so that way I can on the script for the HUD is where I've moved all this stuff so in the HUDs update function I update the shield which is the code we had before about picking the level and setting the the length of the bar in the color and setting the score on the score label so everything still works exactly the same it still looks fine we just are a little bit more organized now you see everything works the same and I just want to give a quick shout out to after YouTube in the comments on the previous video he made this suggestion and I think it's a really good one and it's gonna make it a lot more flexible down the road as we add more features to the head alright so let's move on all right on this HUD we are going to add another label and this label is going to be called message and what this is gonna be for is any announcements we need to make like level transitions GAMEOVER anything like that so what we've done is just set the font the message the same as we did on the score and we've set the align to make it fill the whole screen so that however big a chunk of text we send to it it's just going to always be centered at the middle so we just set the anchors to the beginnings and ends and the margins to zero and that will be that and then in the code we're just going to set this to show and hide different messages a message timer here and I'm going to set the wait time to 3 seconds it's going to be a oneshot so it just stops when it reaches the end and it's not going to auto start and we're gonna take its time out method and connect that and when the message timer times out we're just gonna say get node message and we're gonna hide it and for starting a message we're just going to have a function called show message and you pass in you pass in some text and what that's going to do is on the message node we're going to set the text to whatever that was we're going to make sure we show it and we're going to start the message timer okay so in our main in our ready we're going to call a new function called begin again next level and every time we want to start a new level this is what we're going to do and what this function is going to do is it's going to increment the level so we're going to move that up here and then we're also going to issue a message so that's HUD show message and the message we're gonna say is just wave whatever level we're on so we're just going to do % global level and then on that next wave we are going to move this stuff up to because we want to spawn the new asteroids and in the process when we're detected we have no more asteroids left we will begin next level and now we get this nice message when we run the program we're on level 1 and if I fast forward here now you see we get wave too so this is a really nice way to do message popups and things that you want to display on top of your your game screen just using the the basic Godot GUI nodes so the other thing we want to do is in this video is we're going to add a pause function so in our global we're going to make a variable called pause it's going to keep track of our pause state and in the HUD we're going to process input and I've already added here the pause toggle input event which I've set in the input map to be the P key and that's just going to toggle that boolean variable from false to true and so now we want the game to pause but we also want to be able to see on the screen that we're paused so we're going to add a node for that so we're gonna add a panel node this is going to be the pause popup and then inside of that we're going to put a label and that's going to just hold the pause the text that we're gonna show on the screen and the reason we're using this label is if we make it fullscreen as you can see it has a dark background so if we take the opacity and we crank that down a bit it'll give us a nice gray dimming effect and then the pause text we're gonna Center on the screen so I've gone ahead and done all the font setting and centering it and everything just so you can see what it looks like so just by hiding and showing this pause popup is how we'll be able to show the state of the game how do we actually pause game play well there's a command called git Tree and what this does is it gets the root of the game for exam when our main scene is running the root of the tree is is the parent domain and so we want to use the method in that called set pause and what we want to set it to is global dot paused so we want to set that to true or false and if you've noticed on any of your nodes that you click on down at the bottom under the node object is a property called pause mode and it can be set to inherit stop or process by default all the modes are going to be set to inherit and but this lets you choose what you want each node to do when pausing it's set to true and your options are that you can have it stopped or you can have it process stop means it should freeze like you would expect pause to do to a moving character or something process means keep going ignore the fact that we're paused which is how you would let certain animations or things keep happening while you're paused so if we leave everything on inherit what inherit means is do whatever your parent is set to do so if we go over to our main node and in the main we set it to stop then everything underneath it is going to stop as well when we set pause so now we can go back to our script here and we've set paused and now we can also set we can also get node and we'll get the pause popup and we're going to set hidden we're going to set hidden to the opposite of whatever global dot paused is because positives true we want to set hidden to be false and now if we run this we're gonna see a problem or actually we're going to see two problems actually so I've hit the pause button and now you can see that it's gotten dim and the pause message is showing but wave one was still under there and that makes it really hard to read so we need to hide any message that's showing while we're paused the other problem is I can't unpause it I'm pressing P and it won't resume and that's because our HUD is inheriting from Maine and it's stopping well if it's stopping it's not processing input so we're not able to unpause so we need to do two things here we need to take the HUD and set it to process all right we don't want the HUD to stop processing input the other thing we want to do is we want to get the message node and we want to set it to hidden when we're paused and now you might expect if you do something like this that you're on the right track but watch what happens now so I'm going to pause it we've won disappears and now I've specifically waited for 3 seconds to go by and when I unpause it wave one comes back and it is never going to go away right that's not what we want because what happened was we paused the game but our message timer kept ticking so we need that to stop when the game is paused that way when we if we pause it while a message is up when we resume the remaining amount of time we'll be there and it'll disappear when it's supposed to you
