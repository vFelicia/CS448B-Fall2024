With timestamps:

00:00 - welcome back this is part 21 of our
00:02 - top-down zombie shooter game and in this
00:06 - video we're going to finish up with that
00:09 - shotgun item we added last time and
00:11 - we're going to create a new visual
00:13 - effect for when the player gets damaged
00:16 - so in the last video we added a shotgun
00:19 - item for the player to upgrade to but we
00:22 - need a way to pick it up so what we're
00:25 - gonna do is have gone over here and I've
00:26 - made the players start out with the
00:28 - pistol that's gonna be the lowest weapon
00:32 - that you start with and then in the
00:33 - settings I've added an item here to the
00:37 - item images for the shotgun we're gonna
00:40 - use this image and then in the effects
00:43 - sounds I'm going to have a gun pickup
00:47 - sound that'll play when we pick up that
00:49 - item and the last piece of that puzzle
00:52 - is over here in our map I've added an
00:56 - object here just like the health pickup
00:59 - that we added over here named health
01:01 - I've added a pickup here named or an
01:03 - object called shotgun that's going to be
01:05 - the shotgun pickup alright so now we
01:09 - just need to tell the game what to do
01:13 - with that item when it sees it so in the
01:17 - in the new when we load the map right
01:22 - now we're looking for health objects but
01:24 - we're also going to look for shotgun
01:28 - objects okay and it'll create an item of
01:32 - that type so that's all we need to do
01:34 - for that and so if we run the game we we
01:38 - will see the shotgun item they're
01:40 - bouncing on the screen where it's
01:42 - supposed to be right so now we need to
01:44 - just tell the game what we want to
01:47 - happen when we run over that object to
01:50 - pick it up and for that we're gonna go
01:53 - down here to our item pickup code and we
01:58 - have an if statement here saying if it
02:01 - was a health object what to do so we
02:03 - just need to say what to do if it's the
02:06 - shotgun so if the hit type is shotgun
02:13 - we're just going to we're still going to
02:15 - delete the item so we want the item to
02:17 - disappear for the effects sounds we're
02:22 - going to play the gun pick up sound
02:27 - right and we're going to just change the
02:34 - players weapon to shotgun and that
02:40 - should be all we need to do for it that
02:43 - so I'm shooting the pistol now and if I
02:48 - go over here and pick up the shotgun we
02:50 - hear that little click and now I'm
02:52 - firing the shotgun all good now the only
02:57 - other thing I wanted to do about the
02:58 - shotgun real quick was if you notice
03:01 - when we fire it the bullets go out in
03:03 - this little perfect arc because they're
03:07 - all traveling the exact same speed and
03:10 - to make it look a little bit more like a
03:12 - you know blast
03:14 - I want to randomize just a little bit
03:16 - the speed of the bullets so I'm just
03:22 - going to do that in class bullet here
03:26 - where we set the velocity of the bullet
03:32 - I'm going to just multiply it by a
03:36 - random number and that random number I'm
03:38 - going to make it between 0.9 and 1.1 so
03:42 - basically we're going to use the same
03:45 - speed we've been using and anywhere
03:47 - between 90 and 110 percent of that so
03:50 - some of them will be a little fast or
03:52 - someone will be a little slower and so
03:55 - you can see what that looks like if I'm
03:57 - firing the pistol it's not gonna be very
04:00 - noticeable although some of the bullets
04:02 - will travel a little bit different speed
04:04 - but if I go pick up the shotgun I'll get
04:09 - that other way so now you can see
04:11 - there's much more of a spread because
04:13 - some of the bullets move a little bit
04:15 - faster than others you can see that well
04:19 - you can see it on your screen when you
04:21 - try it it just makes it much look much
04:24 - more like a random spray of
04:26 - bullets flying out of the shotgun okay
04:28 - undo our new effect we want to do so I
04:32 - want it to be apparent when the player
04:35 - gets hit I just think we want the player
04:37 - sprite to flash read briefly to show you
04:41 - got hit and so that means what we're
04:44 - going to do is we're going to add a flag
04:46 - to the player and so that flag will
04:54 - change to true when you get hit and win
04:57 - the little flashing animation has
04:58 - stopped it will change back to false so
05:02 - that way the this is how the game will
05:05 - know whether to draw it damaged or not
05:08 - and so how we're gonna going to
05:10 - accomplish that effect is we're gonna
05:13 - take we're just going to define a quick
05:17 - method here called hit and being hit
05:22 - just changes damaged equal to true and
05:25 - it's going to do something else which
05:27 - I'll get to in a second but what we want
05:30 - to do now is in the update when we're
05:31 - drawing the image right we calculated
05:34 - what rotated image the player needs to
05:37 - use and then we're going to say if
05:41 - they're damaged right so if the if
05:44 - damaged is true then we're gonna make a
05:48 - copy I'm gonna make I'm gonna make a
05:52 - copy of the image with the players image
05:54 - and then what I want to do is I want to
05:58 - shade it red I want to paint it paint
06:02 - red on top of it but I don't want to
06:03 - just be solid red what I want is I want
06:06 - a pulsing effect so it's a little bit
06:08 - red at first gets a little bit red or
06:11 - gets a little bit redder and then
06:13 - gradually turns red and that means we
06:17 - need some sort of sequence of alpha
06:22 - amounts that we're gonna paint the red
06:25 - on top of it remember the Alpha is how
06:27 - transparent a color is so if I paint on
06:31 - top of the player with a red pixel or
06:35 - what I'm sorry with a red color that has
06:37 - an alpha value of zero you
06:39 - don't see it at all it's fully
06:40 - transparent if I paint it with an alpha
06:43 - color is 255
06:44 - it'll be solid red and so I want it I
06:46 - want to sort of start at zero and ramp
06:50 - up to 255 right so it gets darker and
06:53 - darker and darker and and we can pick
06:56 - what the steps are for how quickly that
06:58 - happens but to do that we need some sort
07:00 - of sequence of numbers that the Alpha is
07:03 - going to change to and we could do that
07:05 - with a variable and we keep adding to
07:07 - the variable but I wanted to show you a
07:09 - new or another way to do it using using
07:16 - a really really handy Python library
07:19 - called itertools so I'll pop up a Python
07:24 - terminal here to show you so the
07:25 - itertools module is contains a lot of
07:29 - different functions for dealing with
07:32 - iterators and iterators are just
07:34 - anything that you want to iterate over
07:38 - iterate means do that do something one
07:41 - at a time
07:41 - so for example range 5 when we do for I
07:45 - and range 5 right range 5 is an iterator
07:47 - it produces the sequence of numbers from
07:50 - 0 to 4 and itertools has lots of cool
07:56 - things for for doing iterate for doing
08:00 - different kinds of iterators so for
08:01 - example I'm going to import itertools
08:04 - here and I'll show you one example which
08:08 - is the cycle so if we make a cycle and
08:14 - let's say I just wanted one two three
08:15 - four so I have a list and I want to
08:18 - cycle through it and what cycle does it
08:20 - creates an infinite it's going to
08:22 - infinite iterator that will cycle
08:24 - through that through that list so every
08:28 - time I say next C or the next item in
08:32 - the cycle I get the next one but when I
08:36 - get to four I go back to one so I can
08:39 - just sit there over and over and over
08:41 - again I could even do this you know a
08:49 - whole bunch of times it'll just say one
08:50 - two three four one two three four one
08:51 - two three four
08:52 - so that's all cool that's a that cycles
08:54 - a really useful one especially for
08:56 - animation and things like that
08:58 - but the one that I want to use for this
09:00 - is called chain
09:04 - okay and what chain does is it takes
09:07 - some sequence we'll just use that 1 2 3
09:10 - for example again okay it takes some
09:13 - seek sequence and it makes it into an
09:16 - iterator just like that so I can do the
09:18 - same thing and hit next to see and it'll
09:20 - keep showing the next one in the
09:22 - sequence however when I get to the last
09:24 - one it gives me back a stop iteration
09:30 - exception just to let you know you've
09:32 - reached the end of the chain and the
09:35 - power of itertools chain is that you can
09:42 - chain multiple lists together so if I
09:44 - had that list and then I also had
09:48 - another list like you know like that
09:53 - then let's go like this then what it's
10:00 - going to do is it's just going to chain
10:01 - those those together all right the two
10:04 - lists became one big long chain until I
10:06 - reached the end okay and this is how
10:10 - we're going to do our sequence of alpha
10:13 - values to ramp up from 0 to 255 to give
10:19 - us that shading effect so we're just
10:23 - going to make a list and then the by
10:26 - making it a chain we'll be able to know
10:29 - when it ends and when we reach the end
10:32 - that's how we need that's how we know
10:33 - we're done and we can stop and we can
10:36 - stop showing that effect we can set
10:38 - damage back to false ok and so we're
10:44 - gonna create that by going over to our
10:47 - settings oops wrong window going over to
10:51 - our settings and threes I'm going to do
10:53 - it this way is so that we can easily
10:55 - change the effect and do a different
10:57 - effect when we want so in the effects
10:59 - where's my effects section here we're
11:03 - going to say what our damage alpha
11:05 - effected
11:06 - I'm gonna call it damage alpha and I
11:09 - just want this to be a sequence of
11:13 - values from 0 to 255 and so I could do a
11:17 - little loop here and say for I in range
11:19 - and append it to a list right we've done
11:21 - that before when we wanted to make a
11:22 - list we did something like just to give
11:24 - you an example you know I could do from
11:29 - zero to two five five and use a step of
11:36 - say 25 all right that would that would
11:42 - do this before and we've done things
11:44 - like that before I'm sure you've seen
11:45 - this before going through a list and
11:47 - appending it or going through a sequence
11:49 - and appending it to a list but this is
11:52 - kind of wordy and takes a lot of space
11:56 - there's a shorter way to do it - a
12:00 - powerful thing that python has called a
12:03 - list comprehension and so I know I want
12:06 - to list at the end of this and what I
12:07 - want is I want to do for whatever I in
12:13 - range 0 to 5 5 to 25 and I just want the
12:19 - list to be X for each of those so I'm
12:26 - sorry X I for each of those so this will
12:29 - produce that list I'll show you in the
12:33 - example here so if I say I for I in
12:36 - range 10 I get back a list with each of
12:42 - those eyes from the loop right so it's
12:45 - just a shorthand way of saying the same
12:47 - thing okay and so this is gonna give me
12:49 - the values from 0 to 255 in steps of
12:53 - about 25 and we can adjust this to say
12:57 - how quickly or slowly we want the
12:59 - transition to happen okay so we have
13:03 - that damaged alpha and now on our sprite
13:05 - we want to go and use that turn that
13:08 - into a turn that into a chain so that we
13:14 - can measure actually as we go through it
13:17 - okay so
13:19 - what we're going to do is say when
13:21 - you're damaged our damaged alpha is
13:28 - going to equal a chain which we have to
13:31 - import of that sequence times two
13:35 - because I wanted to flash twice
13:37 - flash flash okay so we'll go up here and
13:41 - from itertools import chain okay so now
13:49 - I have the damaged alpha I want and I
13:51 - just need to fill the image with that
13:53 - color and actually take it back we don't
13:56 - need to do this this is an extra step we
13:58 - don't need so what we want to do is we
14:01 - want to try filling it with that color
14:04 - so we want to try a self dot image dot
14:07 - fill the color I want to use is red to
14:12 - 5500 and then the Alpha value is just
14:15 - going to be the next in the damage alpha
14:21 - all right now that might that will
14:24 - continue to be something until the cycle
14:26 - or sorry the chain runs out yeah skip
14:31 - that for a second so this will keep
14:33 - picking the next value but eventually
14:35 - this is going to return well I shouldn't
14:38 - say an error a it's going to return an
14:40 - exception right this stop iteration
14:42 - exception because the chain has run out
14:45 - so if that happens we know we're done so
14:49 - what we do if we get the exception is we
14:51 - just set damaged back to false okay and
14:56 - now we're no longer damaged we don't
14:58 - need to paint it anymore but the other
15:02 - thing I was going to add here is when
15:04 - you fill an image or you've lit an image
15:07 - high game has some special flags you can
15:11 - use and it's a way to adjust how the
15:16 - image is blended and you can see from
15:20 - the autosuggest here there's a lot of
15:21 - different ones RGB a multiply is the one
15:26 - that's going to produce the best effect
15:28 - that we want although I recommend you
15:30 - try the other ones you can see some of
15:32 - them will
15:33 - invert the colors and give you the you
15:35 - know the the reversed video and things
15:37 - like that but okay so this is our this
15:41 - is gonna be our damage effect if we're
15:43 - damaged then keep trying to fill with
15:45 - the greater and greater values of alpha
15:48 - which it's gonna go through twice so
15:51 - it's gonna get from light to dark and
15:53 - then from light to dark one more time
15:54 - right it's gonna do it twice and then if
15:56 - you when you finish that chain of things
15:58 - the damage effect is done so damage goes
16:01 - back to false okay so then we just need
16:04 - to go over here to our main and when the
16:06 - mob hits the player if there's a hit
16:09 - we're going to we're gonna tell the
16:15 - player to do its hit effect right
16:20 - parenthesis okay and let's see how that
16:24 - looks for us there you go so you can see
16:30 - see the red effect now another thing you
16:36 - can do is you can you can try different
16:39 - colors for example if you do two five
16:42 - five two five five white then you're
16:45 - gonna get the classic kind of just
16:49 - flashing effect all right where the
16:51 - player blinks in and out and just to
16:55 - make that a little bit more obvious if
16:57 - you're watching on the video let's let's
17:00 - have it cycle two more times okay we'll
17:03 - try a couple different ways of doing
17:05 - this you can see the effect difference
17:08 - alright so you see how it's blinking
17:11 - four is I think a little bit too many
17:13 - but maybe three would be good it's also
17:16 - gonna depend on how fast you do it right
17:19 - if we did steps of five then there's a
17:23 - lot more about alpha values to go
17:25 - through and it's not nearly gonna look
17:29 - as good because it's gonna be much more
17:31 - smooth right
17:33 - yeah it's pulsing through there
17:36 - obviously not what you want but for
17:38 - other things that can be a really cool
17:40 - effect
17:42 - if you increase that number up then
17:45 - you're going to have
17:46 - fewer steps along the way so you'll have
17:48 - a really quick blink which actually now
17:52 - that I see that I kind of like that too
17:55 - so we're blinking four times what we're
17:57 - doing it a lot faster all right I kind
18:00 - of like that now all right and now you
18:06 - know other than that if you wanted to
18:08 - get fancy you could go in here and use
18:09 - instead of a linear progression from
18:12 - zero to 255 you could use one of those
18:15 - tween functions we've talked about
18:17 - before to adjust how it ramps up from 0
18:20 - to 255 in this particular case where
18:25 - we're flashing the image really fast
18:28 - you're not really gonna see any
18:30 - difference in the linear versus the sine
18:33 - or any of those because it happens so
18:35 - fast but if you were to do that fade in
18:37 - fade out effect we saw you could get a
18:40 - really nice and different looking effect
18:42 - by using a different a different tween
18:44 - function here when you generate your
18:47 - sequence of of alphas all right so that
18:50 - will do it for this video if you want
18:54 - you could go and add the same effect to
18:56 - the mobs when you shoot them and have
18:59 - them flash they could blink who they
19:01 - could flash white or you could even have
19:03 - them flash green since we're using this
19:06 - nice goopy green color for their blood
19:09 - as always please go ahead and like and
19:13 - subscribe so that you'll get the next
19:15 - video and I will see you next time
19:18 - thanks everyone
19:27 - you

Cleaned transcript:

welcome back this is part 21 of our topdown zombie shooter game and in this video we're going to finish up with that shotgun item we added last time and we're going to create a new visual effect for when the player gets damaged so in the last video we added a shotgun item for the player to upgrade to but we need a way to pick it up so what we're gonna do is have gone over here and I've made the players start out with the pistol that's gonna be the lowest weapon that you start with and then in the settings I've added an item here to the item images for the shotgun we're gonna use this image and then in the effects sounds I'm going to have a gun pickup sound that'll play when we pick up that item and the last piece of that puzzle is over here in our map I've added an object here just like the health pickup that we added over here named health I've added a pickup here named or an object called shotgun that's going to be the shotgun pickup alright so now we just need to tell the game what to do with that item when it sees it so in the in the new when we load the map right now we're looking for health objects but we're also going to look for shotgun objects okay and it'll create an item of that type so that's all we need to do for that and so if we run the game we we will see the shotgun item they're bouncing on the screen where it's supposed to be right so now we need to just tell the game what we want to happen when we run over that object to pick it up and for that we're gonna go down here to our item pickup code and we have an if statement here saying if it was a health object what to do so we just need to say what to do if it's the shotgun so if the hit type is shotgun we're just going to we're still going to delete the item so we want the item to disappear for the effects sounds we're going to play the gun pick up sound right and we're going to just change the players weapon to shotgun and that should be all we need to do for it that so I'm shooting the pistol now and if I go over here and pick up the shotgun we hear that little click and now I'm firing the shotgun all good now the only other thing I wanted to do about the shotgun real quick was if you notice when we fire it the bullets go out in this little perfect arc because they're all traveling the exact same speed and to make it look a little bit more like a you know blast I want to randomize just a little bit the speed of the bullets so I'm just going to do that in class bullet here where we set the velocity of the bullet I'm going to just multiply it by a random number and that random number I'm going to make it between 0.9 and 1.1 so basically we're going to use the same speed we've been using and anywhere between 90 and 110 percent of that so some of them will be a little fast or someone will be a little slower and so you can see what that looks like if I'm firing the pistol it's not gonna be very noticeable although some of the bullets will travel a little bit different speed but if I go pick up the shotgun I'll get that other way so now you can see there's much more of a spread because some of the bullets move a little bit faster than others you can see that well you can see it on your screen when you try it it just makes it much look much more like a random spray of bullets flying out of the shotgun okay undo our new effect we want to do so I want it to be apparent when the player gets hit I just think we want the player sprite to flash read briefly to show you got hit and so that means what we're going to do is we're going to add a flag to the player and so that flag will change to true when you get hit and win the little flashing animation has stopped it will change back to false so that way the this is how the game will know whether to draw it damaged or not and so how we're gonna going to accomplish that effect is we're gonna take we're just going to define a quick method here called hit and being hit just changes damaged equal to true and it's going to do something else which I'll get to in a second but what we want to do now is in the update when we're drawing the image right we calculated what rotated image the player needs to use and then we're going to say if they're damaged right so if the if damaged is true then we're gonna make a copy I'm gonna make I'm gonna make a copy of the image with the players image and then what I want to do is I want to shade it red I want to paint it paint red on top of it but I don't want to just be solid red what I want is I want a pulsing effect so it's a little bit red at first gets a little bit red or gets a little bit redder and then gradually turns red and that means we need some sort of sequence of alpha amounts that we're gonna paint the red on top of it remember the Alpha is how transparent a color is so if I paint on top of the player with a red pixel or what I'm sorry with a red color that has an alpha value of zero you don't see it at all it's fully transparent if I paint it with an alpha color is 255 it'll be solid red and so I want it I want to sort of start at zero and ramp up to 255 right so it gets darker and darker and darker and and we can pick what the steps are for how quickly that happens but to do that we need some sort of sequence of numbers that the Alpha is going to change to and we could do that with a variable and we keep adding to the variable but I wanted to show you a new or another way to do it using using a really really handy Python library called itertools so I'll pop up a Python terminal here to show you so the itertools module is contains a lot of different functions for dealing with iterators and iterators are just anything that you want to iterate over iterate means do that do something one at a time so for example range 5 when we do for I and range 5 right range 5 is an iterator it produces the sequence of numbers from 0 to 4 and itertools has lots of cool things for for doing iterate for doing different kinds of iterators so for example I'm going to import itertools here and I'll show you one example which is the cycle so if we make a cycle and let's say I just wanted one two three four so I have a list and I want to cycle through it and what cycle does it creates an infinite it's going to infinite iterator that will cycle through that through that list so every time I say next C or the next item in the cycle I get the next one but when I get to four I go back to one so I can just sit there over and over and over again I could even do this you know a whole bunch of times it'll just say one two three four one two three four one two three four so that's all cool that's a that cycles a really useful one especially for animation and things like that but the one that I want to use for this is called chain okay and what chain does is it takes some sequence we'll just use that 1 2 3 for example again okay it takes some seek sequence and it makes it into an iterator just like that so I can do the same thing and hit next to see and it'll keep showing the next one in the sequence however when I get to the last one it gives me back a stop iteration exception just to let you know you've reached the end of the chain and the power of itertools chain is that you can chain multiple lists together so if I had that list and then I also had another list like you know like that then let's go like this then what it's going to do is it's just going to chain those those together all right the two lists became one big long chain until I reached the end okay and this is how we're going to do our sequence of alpha values to ramp up from 0 to 255 to give us that shading effect so we're just going to make a list and then the by making it a chain we'll be able to know when it ends and when we reach the end that's how we need that's how we know we're done and we can stop and we can stop showing that effect we can set damage back to false ok and so we're gonna create that by going over to our settings oops wrong window going over to our settings and threes I'm going to do it this way is so that we can easily change the effect and do a different effect when we want so in the effects where's my effects section here we're going to say what our damage alpha effected I'm gonna call it damage alpha and I just want this to be a sequence of values from 0 to 255 and so I could do a little loop here and say for I in range and append it to a list right we've done that before when we wanted to make a list we did something like just to give you an example you know I could do from zero to two five five and use a step of say 25 all right that would that would do this before and we've done things like that before I'm sure you've seen this before going through a list and appending it or going through a sequence and appending it to a list but this is kind of wordy and takes a lot of space there's a shorter way to do it a powerful thing that python has called a list comprehension and so I know I want to list at the end of this and what I want is I want to do for whatever I in range 0 to 5 5 to 25 and I just want the list to be X for each of those so I'm sorry X I for each of those so this will produce that list I'll show you in the example here so if I say I for I in range 10 I get back a list with each of those eyes from the loop right so it's just a shorthand way of saying the same thing okay and so this is gonna give me the values from 0 to 255 in steps of about 25 and we can adjust this to say how quickly or slowly we want the transition to happen okay so we have that damaged alpha and now on our sprite we want to go and use that turn that into a turn that into a chain so that we can measure actually as we go through it okay so what we're going to do is say when you're damaged our damaged alpha is going to equal a chain which we have to import of that sequence times two because I wanted to flash twice flash flash okay so we'll go up here and from itertools import chain okay so now I have the damaged alpha I want and I just need to fill the image with that color and actually take it back we don't need to do this this is an extra step we don't need so what we want to do is we want to try filling it with that color so we want to try a self dot image dot fill the color I want to use is red to 5500 and then the Alpha value is just going to be the next in the damage alpha all right now that might that will continue to be something until the cycle or sorry the chain runs out yeah skip that for a second so this will keep picking the next value but eventually this is going to return well I shouldn't say an error a it's going to return an exception right this stop iteration exception because the chain has run out so if that happens we know we're done so what we do if we get the exception is we just set damaged back to false okay and now we're no longer damaged we don't need to paint it anymore but the other thing I was going to add here is when you fill an image or you've lit an image high game has some special flags you can use and it's a way to adjust how the image is blended and you can see from the autosuggest here there's a lot of different ones RGB a multiply is the one that's going to produce the best effect that we want although I recommend you try the other ones you can see some of them will invert the colors and give you the you know the the reversed video and things like that but okay so this is our this is gonna be our damage effect if we're damaged then keep trying to fill with the greater and greater values of alpha which it's gonna go through twice so it's gonna get from light to dark and then from light to dark one more time right it's gonna do it twice and then if you when you finish that chain of things the damage effect is done so damage goes back to false okay so then we just need to go over here to our main and when the mob hits the player if there's a hit we're going to we're gonna tell the player to do its hit effect right parenthesis okay and let's see how that looks for us there you go so you can see see the red effect now another thing you can do is you can you can try different colors for example if you do two five five two five five white then you're gonna get the classic kind of just flashing effect all right where the player blinks in and out and just to make that a little bit more obvious if you're watching on the video let's let's have it cycle two more times okay we'll try a couple different ways of doing this you can see the effect difference alright so you see how it's blinking four is I think a little bit too many but maybe three would be good it's also gonna depend on how fast you do it right if we did steps of five then there's a lot more about alpha values to go through and it's not nearly gonna look as good because it's gonna be much more smooth right yeah it's pulsing through there obviously not what you want but for other things that can be a really cool effect if you increase that number up then you're going to have fewer steps along the way so you'll have a really quick blink which actually now that I see that I kind of like that too so we're blinking four times what we're doing it a lot faster all right I kind of like that now all right and now you know other than that if you wanted to get fancy you could go in here and use instead of a linear progression from zero to 255 you could use one of those tween functions we've talked about before to adjust how it ramps up from 0 to 255 in this particular case where we're flashing the image really fast you're not really gonna see any difference in the linear versus the sine or any of those because it happens so fast but if you were to do that fade in fade out effect we saw you could get a really nice and different looking effect by using a different a different tween function here when you generate your sequence of of alphas all right so that will do it for this video if you want you could go and add the same effect to the mobs when you shoot them and have them flash they could blink who they could flash white or you could even have them flash green since we're using this nice goopy green color for their blood as always please go ahead and like and subscribe so that you'll get the next video and I will see you next time thanks everyone you
