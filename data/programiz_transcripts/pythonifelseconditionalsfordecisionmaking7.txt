00:00 - what's up guys i'm puneet from
00:01 - programmers and welcome back to this
00:03 - series on python
00:04 - in the last video we learned about
00:06 - comparison operators
00:08 - these comparison operators evaluate to
00:10 - either true or
00:11 - false in this video we'll do something
00:14 - interesting
00:15 - we will learn to create programs that
00:17 - execute different code
00:18 - based on the comparison of two values if
00:21 - the comparison is true
00:22 - we will do one set of tasks and if the
00:24 - comparison is false
00:26 - we will do another set of tasks this is
00:28 - called decision making in programming
00:30 - now let's see how we can implement
00:32 - decision making in python
00:40 - in python we use the if statement to
00:43 - create programs that can make decisions
00:45 - let's start with its syntax so on my
00:47 - screen you can see the syntax of the if
00:49 - statement
00:50 - the if statement evaluates the test
00:52 - condition
00:54 - which is a boolean expression if the
00:56 - test condition is true the body of the
00:58 - if statement is executed
01:00 - otherwise it is kept from execution
01:03 - notice the spaces before the statement
01:05 - here
01:07 - this indentation is used to
01:08 - differentiate between the body of the if
01:10 - statement
01:11 - it doesn't matter how many spaces or
01:13 - tabs we use for indentation
01:15 - however we need to be consistent with it
01:18 - generally it's considered a good
01:19 - practice to use four spaces for
01:21 - indentation
01:23 - now that we know the syntax of the if
01:24 - statement let's try a working example
01:28 - suppose you're a university student and
01:30 - to pass the examination you need to
01:32 - score 50
01:32 - or more if you score 50 or more
01:36 - we will print you pass the examination
01:38 - let's see how we can implement this
01:40 - program
01:40 - so first i'll take the input from the
01:42 - user as score
01:45 - equals integer
01:49 - input enter your
01:52 - score then
01:56 - i'll say if score greater than
01:59 - equals 50 print
02:03 - you have
02:06 - passed your exams let me add another
02:09 - print statement
02:10 - i say print congratulations
02:15 - let me run this program and here in the
02:18 - score i'll enter something like 75
02:22 - as you can see you have passed your exam
02:25 - and congratulations are printed to the
02:26 - screen
02:27 - when your score is 75 as in this example
02:30 - our test conditions score greater than
02:32 - or equals 50
02:33 - is true and that is why these two
02:36 - statements are executed
02:40 - let me run this program again this time
02:43 - instead of 75 i'll enter something like
02:45 - 35
02:48 - so this time nothing is printed to the
02:50 - screen this is because
02:52 - since score is 35 35 greater than equals
02:55 - 50 is false and the body of the if
02:58 - statement is kept from execution
03:00 - our program is working correctly but
03:02 - it's not printing anything when the
03:04 - score is less than 50.
03:06 - we might want to print something like
03:08 - sorry you failed your exam during this
03:10 - case
03:10 - so i will add another if statement i'll
03:13 - say
03:16 - if score less than
03:20 - 50 print
03:24 - sorry you have failed your
03:28 - exam and we can see that
03:31 - when i press run and enter 35 then
03:34 - it says sorry you have failure exam
03:37 - this is because again this condition is
03:40 - false
03:41 - and this is skipped but this condition
03:43 - is true
03:44 - and this code is executed
03:51 - i have this code from our last section i
03:53 - have removed the code that takes the
03:54 - user input
03:55 - and instead i've hard coded the value of
03:58 - score so that we can focus on the logic
04:00 - of the if statement
04:02 - in this program we have used two if
04:04 - statements to perform
04:05 - two different tasks we know the student
04:08 - pass the exam
04:09 - if the score is greater than or equals
04:11 - 50. if the criteria is not met
04:14 - we know the student failed the exam in
04:16 - such cases
04:17 - instead of writing the second if
04:18 - statement with the condition
04:20 - we can use the else clause let's first
04:23 - look at the syntax
04:24 - of the if statement with the else clause
04:26 - on your screen
04:27 - you can see how it looks what happens
04:30 - here is
04:31 - that if our test condition is true these
04:33 - statements
04:34 - are executed and if it's false the
04:37 - statements inside the else clause
04:38 - are executed now getting back to
04:42 - our code to print whether the student
04:43 - passed or failed the exam
04:45 - in this program we know for sure that if
04:48 - the score is not greater than or equal
04:50 - to 50
04:51 - then the student is failing the exam so
04:54 - instead of writing the second if
04:56 - statement we can replace the second if
04:58 - with
04:59 - else so here i'll remove this if
05:02 - and i'll write else and a colon here let
05:05 - me read this code in plain english
05:07 - if score is greater than or equal to 50
05:10 - then print you have passed your exams
05:13 - and print congratulations
05:15 - else print sorry you have failed your
05:17 - exam
05:18 - the else clause catches everything
05:20 - that's not covered in the if's condition
05:23 - now when i run this code you can see
05:25 - that sorry you have failed your exam is
05:27 - printed
05:29 - before moving to the next section of the
05:31 - video i'd like to mention that the
05:32 - program is team has created an
05:34 - app that allows you to learn python from
05:36 - your phone the app contains
05:38 - bit size lessons that are easy to
05:39 - understand a built-in interpreter so
05:41 - that you can run python on your phone
05:43 - quizzes and many more features the app
05:46 - is available on both ios and android the
05:48 - links are in the video description below
05:53 - the if statement with the else clause
05:56 - allows us to make a choice from two
05:58 - different
05:58 - options but sometimes we need to make a
06:01 - choice from more than two options
06:03 - in those cases we can use the elif
06:05 - clause with the test condition
06:07 - let's see its syntax first the if
06:10 - statement
06:10 - checks the condition inside the if
06:12 - statement or the test condition
06:14 - 1 if it is true then this block of code
06:17 - is executed
06:18 - and statements 2 and statements 3 are
06:20 - skipped
06:21 - however if the first test condition is
06:24 - false the control of the program
06:26 - jumps to the second test condition if
06:28 - this test condition is true
06:30 - its body is executed and other
06:32 - statements are skipped
06:34 - if both test condition 1 and test
06:37 - condition 2
06:38 - are false finally the else body is
06:41 - executed
06:42 - if necessary we can add as many alif
06:45 - clauses as we want for our program to
06:47 - work
06:48 - and among all those alternatives only a
06:50 - single block of code is executed
06:53 - now we know how the alif clause works
06:55 - let's get back to our code to check
06:57 - whether the student passed a failed exam
06:59 - here this score variable stores the
07:02 - marks obtained by the student
07:04 - so it shouldn't be greater than 100 or a
07:06 - negative number
07:08 - if score is above 100 our test condition
07:10 - is true
07:11 - and you have passed our exam and
07:13 - congratulations is printed
07:15 - even though the score is invalid
07:16 - logically and if score is a negative
07:19 - number
07:20 - sorry you have failed your exam is
07:21 - printed because our test condition is
07:23 - false
07:24 - again score shouldn't be less than zero
07:27 - we need to fix this
07:28 - we can fix this by adding a condition to
07:31 - check if the score
07:32 - is valid or not at the beginning only
07:35 - then we will check if the student passed
07:36 - or failed the exam
07:38 - so in my code i'll make the changes
07:40 - let's try for 105
07:43 - and here i'll add a condition i'll say
07:45 - if
07:46 - score greater than 100 or
07:50 - score less than 0
07:53 - then print score is
07:57 - invalid and then i'll turn this if
08:00 - into an alif and now i have put that
08:03 - condition to check if the score is valid
08:05 - or not
08:07 - now if score is greater than 100 or
08:09 - score is less than zero
08:11 - then score is invalid should be printed
08:13 - to the screen
08:15 - as long as score is a valid number our
08:17 - program should work correctly
08:19 - now if you remember this r is a logical
08:22 - operator which we discussed in the last
08:24 - video
08:26 - this test condition is true if either
08:29 - this part or score greater than 100 is
08:31 - true or this part
08:33 - score less than 0 is true
08:38 - as you can see the syntax of the if
08:40 - statement is pretty simple
08:42 - the harder part is the logic behind the
08:44 - test conditions
08:45 - and you will get better at creating test
08:47 - conditions with practice
08:49 - also be sure to check our video on
08:51 - comparison and logical operators
08:52 - that are used to create these test
08:54 - conditions i posted the link in the
08:56 - description below
08:58 - we have covered a lot of material in
09:00 - this video it's time for you to practice
09:02 - what we learned
09:03 - here is one programming challenge for
09:05 - you to solve now can you create a
09:07 - program
09:08 - to check whether a number is positive or
09:10 - negative
09:11 - or zero to create this program create a
09:14 - variable named number
09:16 - and assign a float value to it based on
09:18 - the user input
09:20 - then using a if statement check if the
09:22 - number variable is positive
09:24 - or negative or zero if the number is
09:27 - positive
09:28 - print the number is positive if the
09:30 - number is negative
09:31 - print the number is negative and if the
09:34 - number is zero
09:35 - print the number is zero you will find
09:37 - the answer to this question in our
09:39 - github repository i posted the link in
09:41 - the description below
09:42 - since this video is already very long we
09:45 - will not explore
09:46 - nested effects in this video if you are
09:48 - interested you can find more information
09:50 - about the if statement in our website
09:52 - programmers.com
09:53 - along with numerous examples i posted
09:56 - the link in the description below
09:57 - before i end this video here's a recap
10:00 - of what we learned today
10:02 - the if statement is used to create
10:04 - programs that can make decisions
10:06 - the if statement evaluates a test
10:08 - condition if the test condition is true
10:11 - it executes the if body but if the test
10:14 - condition is false
10:15 - the if body is escaped from execution
10:18 - to specify the body of the if statement
10:21 - we use
10:21 - indentation in python the if statement
10:24 - can have an
10:25 - optional else clause the else clause is
10:28 - executed if the test condition is
10:30 - false if you need to make a choice from
10:32 - more than two alternatives
10:34 - you can add an optional alif clause with
10:36 - another test condition
10:38 - that's it for this video i hope you
10:40 - learned something if you're just
10:41 - watching the video without writing any
10:43 - code
10:43 - i highly encourage you to try the
10:45 - programs in this video
10:46 - on your own the only way you can be a
10:49 - good programmer is by trying
10:51 - by the way you can find all the programs
10:53 - from this video on github
10:54 - i posted the link in the description
10:56 - below feel free to copy the programs and
10:58 - edit them
10:59 - as you please and if you have any
11:01 - questions and feedback
11:03 - use the comment section below in the
11:05 - next video we will learn about
11:06 - loops to repeat a block of code and it's
11:08 - going to be pretty interesting
11:10 - join me in this video series and let's
11:12 - explore the exciting world of
11:14 - programming together
11:15 - if you like this video hit the like
11:17 - button now and also don't forget to
11:19 - subscribe to our channel and ring that
11:20 - bell icon
11:21 - so that you don't miss the next video
11:23 - thanks for watching and i'll see you in
11:25 - the next one
11:26 - happy programming