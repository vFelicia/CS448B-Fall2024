00:00 - what's up guys my name is soyuz and i'm
00:02 - a self-taught python programmer i've
00:03 - also been working as a python developer
00:05 - and a content editor at programmers did
00:06 - you know that we've been creating our
00:08 - recent biology trace videos for youtube
00:10 - just using python we received a lot of
00:12 - requests asking for a tutorial
00:13 - so in this video i'll demonstrate how
00:15 - you can create such videos in python
00:17 - using a package called bash address
00:19 - so let's get started
00:25 - before we get started with the video i
00:26 - want to mention that the batch address
00:27 - package we customize for our videos
00:29 - is 4 from dexplo slash part address
00:32 - we've also used the feature of bar
00:33 - images added by andrews
00:37 - let's start by setting up the
00:38 - environment in this video i'll be using
00:41 - pytam as my python ide
00:43 - feel free to use any other id or code
00:44 - editor of your choice
00:46 - so i'll first create a folder in my
00:48 - workspace
00:49 - i'll call it batch address so i'll say
00:51 - bar
00:53 - chart race and now i'll open this folder
00:56 - with pycharm
01:00 - then i'll open the terminal and create a
01:02 - new virtual environment
01:04 - virtual environments allow us to manage
01:06 - separate and isolated python
01:07 - environments
01:08 - for each of our python projects in order
01:10 - to create a virtual environment
01:12 - i'll first install the virtual nv module
01:13 - from pip
01:15 - i'll say pip install
01:18 - virtual env as i've already installed
01:22 - virtual nv
01:22 - the requirements so satisfied so now
01:25 - i'll create a new virtual environment
01:28 - i'll say virtual env and then the name
01:32 - of the virtual environment which is v e
01:33 - and v and i'll press enter now let me
01:36 - activate this virtual environment
01:38 - i'll say dot slash vnv slash scripts
01:42 - slash activate i'll press enter
01:46 - now that our virtual environment is
01:48 - activated let's install the barchar
01:50 - trace package from our program is github
01:52 - repository to install a package from
01:54 - github i'll say
01:56 - pip install git
01:59 - plus and then the link to our github
02:01 - repository
02:02 - this link will be in the description
02:03 - below you can just copy it
02:05 - at and then the branch name which is
02:07 - master i'll press enter
02:09 - this process may take some time
02:13 - and now if we do pip freeze
02:19 - we can see that the batteries package
02:22 - along with all of its dependencies are
02:23 - installed
02:24 - in order to work with the batteries
02:26 - package we also need to install
02:28 - ffmpeg ffmpeg is a command line based
02:32 - program for processing video and audio
02:34 - files
02:35 - to install ffmpeg go to the releases tab
02:37 - of the fmpx build repository
02:39 - and download the latest gpl release this
02:42 - link will also be in the video
02:43 - description
02:46 - now let's extract this folder to a c
02:48 - drive
02:50 - i'll create a new folder in my c drive
02:53 - and i'll name it ffmpeg
02:58 - and then i'll extract all of these
02:59 - folders to this folder
03:07 - by the way we also need to add the
03:09 - location of the bin folder
03:11 - to our environment path variable so i'll
03:12 - copy this link
03:14 - i'll go to my start menu i'll type env
03:17 - go to the environments variable tab i'll
03:19 - edit the path
03:21 - and i'll new add a new field and paste
03:23 - this link
03:24 - i'll press ok and we're finally done
03:31 - in this video we'll recreate the biochar
03:33 - based video of the top computer science
03:35 - schools
03:35 - so let's first get all the necessary
03:37 - data in the video description you'll
03:39 - find a link to download our data but
03:41 - feel free to use your own data if you
03:42 - want
03:43 - to create this video we'll need data in
03:45 - two formats the first
03:47 - is a csv file that contain all the
03:48 - information for our video
03:50 - let me open the csc file in google
03:52 - sheets so that we can better understand
03:53 - it
03:54 - format and contents as you can see
03:57 - we've got the date column as the index
03:59 - column that contains all the years and
04:01 - we've got separate columns for each of
04:03 - our 13 schools
04:04 - you might also have noticed that our
04:06 - data has some missing fields
04:08 - we'll deal with them later in our
04:09 - program the other data we need
04:12 - is a folder containing all the images
04:13 - for our columns
04:15 - here we've got the logos of size 216 by
04:18 - 2016
04:19 - for each of our schools notice that the
04:21 - image names must exactly match the
04:23 - column names from the csv file
04:26 - again if you're working with custom data
04:28 - make sure that your csv and image files
04:30 - are also in the same exact format
04:34 - now let's start coding our video first
04:36 - let's create a python file
04:38 - where we will write all of our code i
04:40 - already have this main.pi file
04:42 - created automatically by pycharm
04:45 - first i'll remove all of this code
04:50 - then i'll import the batch address
04:51 - library at bcr
04:53 - so i'll say import biochartres as bcr
04:58 - i will also import the pandas library to
05:00 - read the contents of the csc file and to
05:02 - use data frames
05:03 - so i'll see import pandas spd
05:07 - now i'll import the data from the
05:09 - data.csv file
05:11 - so i'll say df equals to pd
05:14 - dot read csv and pass in the file name
05:18 - which is data
05:19 - or csv i'll also specify the index
05:22 - column
05:23 - as date so i'll say date as i previously
05:27 - mentioned we
05:28 - have few empty fields for each of the
05:29 - columns so i'll use the fill and a
05:31 - method of the pandas data frame
05:33 - to fill this empty fields with a zero so
05:36 - i'll say
05:37 - df dot fill n a
05:41 - fill n a and i'll pass 0.0
05:44 - i'll also specify in place equals to
05:48 - true
05:49 - so that our original data frame is
05:51 - modified
05:53 - now it's time to use the batch address
05:55 - package inside this package there's a
05:57 - function
05:57 - called partner twist that creates the
05:59 - video this function
06:01 - can take a lot of arguments allowing us
06:03 - to fully customize our video
06:05 - let's first run the help command on this
06:07 - function to read its stock strings
06:09 - so i'll go to my python console tab in
06:10 - pyjama
06:12 - and then i'll import the batteries
06:16 - package as bcr so i'll say import bar
06:20 - chart race as bcr
06:24 - then i'll run the help command on this
06:25 - function so i'll say help
06:30 - bcr dot barge address i'll press enter
06:37 - and as you can see there's a long list
06:38 - of parameters
06:40 - you don't need to memorize all of them
06:42 - as you can just use the help command
06:43 - whenever you want
06:45 - let's use some of these parameters the
06:46 - first and the main parameter is the df
06:48 - parameter
06:49 - the df parameter allows us to specify a
06:52 - pandas data frame parameter
06:54 - that refers to our csv data so i'll come
06:56 - back to my codator
06:58 - now say bcr dot barchartrace
07:02 - and then i'll specify the df as of csv
07:05 - data which is df
07:07 - since the full video takes some time to
07:09 - render i'll use only the first five rows
07:11 - of our data for now
07:12 - so i'll use the slicing operator to get
07:14 - only the first five rows of our data
07:16 - the other parameter is the file name
07:18 - parameter
07:20 - file name refers to the name of the
07:21 - video that will be created
07:23 - you can also specify a path name if you
07:25 - want as you can see all of these formats
07:27 - are supported
07:28 - so i'll specify the file name as video
07:32 - dot mp4
07:36 - let's skip other parameters for now i'll
07:38 - use just one more parameter called image
07:40 - label folder
07:40 - to specify the location of our images so
07:43 - i'll say
07:44 - image label folder and i'll say bar
07:47 - image labels
07:50 - now i'll save this file and i'll run the
07:52 - code
07:56 - okay
08:01 - as you can see our video.mp4 file was
08:04 - created in our current working directory
08:07 - let's open this video file
08:12 - it doesn't look pretty at the moment but
08:13 - don't worry we'll get there
08:15 - currently the size of our figure is
08:16 - small it is about 6 by 3.5 inches
08:19 - so everything looks crammed up let's
08:21 - start by changing the size of our figure
08:24 - there's a fake keyword arcs parameter
08:26 - that can be used to change the figure
08:27 - properties
08:28 - the argument should be passed in a
08:30 - dictionary format it should have three
08:32 - keys
08:33 - the fixed size dpi and face color
08:37 - the fixed size key is used to specify
08:39 - the width and height of the figure in
08:40 - inches
08:42 - the dpi controls the resolution of the
08:44 - video that is the dots
08:45 - per inches finally the face color
08:47 - specifies the background
08:49 - of the color of our figure so i'll come
08:52 - back to my colorator and i'll specify
08:54 - the figure x as a dictionary and i'll
08:57 - pass
08:57 - the fixed size as
09:00 - 26 by 15 so i'll say 26 comma 15
09:05 - i'll also specify the dpi is about
09:08 - 120 and then i'll specify
09:11 - the face color oops i'll specify the
09:15 - face color
09:18 - as a custom color so i'll say
09:21 - f8 fa and ff
09:27 - now i'll save this file i'll run the
09:29 - code
09:34 - now i'll open this video file again as
09:37 - you can see
09:38 - now our video looks much more species
09:39 - than before
09:42 - you can also change the orientation and
09:43 - the sorting of the bars but for this
09:45 - video
09:46 - i'll use the default horizontal
09:47 - orientation and the default sorting
09:49 - which is in descending order currently
09:53 - all of our 13 bars are being displayed
09:55 - let's limit that to 10 using the n bars
09:57 - parameter so i'll say
09:59 - n bars equals to 10.
10:04 - the fixed max parameter is used to
10:06 - change the behavior of the x-axis
10:08 - if it is set to false the values in the
10:10 - x-axis will change with time
10:12 - as per the maximum data if it is set to
10:15 - true however
10:16 - the maximum axis value will remain
10:17 - constant for the duration of the
10:18 - animation
10:20 - let me change it to true and you'll see
10:21 - what i mean
10:23 - i'll specify the fixed max as true
10:27 - now i'll save this file and i'll run the
10:30 - code
10:32 - let me open this video file and as you
10:34 - can see the values in the x axis will
10:36 - remain constant for the entire video
10:39 - i want the values of the x axis to
10:41 - change as per the maximum value so for
10:43 - now i'll keep this as false
10:47 - let's look at some more parameters
10:53 - the steps per period parameter lets you
10:55 - decide the smoothness of the animation
10:57 - it is the number of steps to go from one
10:59 - time period to the next
11:00 - by default it is 10 let's change that to
11:02 - 45
11:03 - so i'll say steps per period as 45
11:08 - similarly the period length parameter
11:11 - lets you decide for how long to animate
11:12 - each row of our data
11:14 - the default value is 500 milliseconds
11:17 - let's change that to
11:18 - 1500
11:21 - so i'll say period length
11:25 - as 1500
11:29 - also there's a colors parameter we can
11:31 - use to provide a custom palette of
11:33 - colors for the bars
11:34 - so i'll say colors and i'll specify a
11:37 - list of colors
11:38 - then i'll save the file and run the code
11:47 - okay this video is done rendering so
11:48 - i'll open this video file
11:50 - and as you can see the animation looks
11:52 - much more smoother than before
11:53 - and our video lasts for a bit more
11:55 - longer also the custom colors that we
11:57 - specified have also been implemented
12:00 - let's now look at the title parameter
12:02 - the title parameter is used to set the
12:04 - title of the figure
12:05 - you have to provide a set of parameters
12:07 - in dictionary format
12:09 - so i'll say title equals to a dictionary
12:12 - and let's specify the label as
12:16 - top computer science
12:19 - schools 2000
12:24 - to 2020 then
12:27 - i'll also change the font size so i'll
12:29 - say font
12:30 - size as
12:33 - 52 i'll also change the font weight so i
12:37 - will say weight
12:40 - as bold and i will provide a custom
12:43 - padding
12:44 - so i say pad of about 40.
12:50 - also there is a period label parameter
12:52 - that is used to set a label
12:53 - at a specific location in the frame this
12:56 - parameter should also be passed in a
12:57 - dictionary format
12:59 - so i'll come back to my coder and i'll
13:00 - specify the period label
13:03 - as a dictionary and i'll pass the x
13:06 - value
13:07 - as 0.95 so i'll say 0.95
13:12 - 0.95
13:16 - i'll specify the y value as point 15
13:20 - so i'll say 0.15
13:23 - i'll also specify the horizontal
13:25 - alignment as ha
13:26 - as right so that it appears at the right
13:29 - side of the screen
13:31 - and the vertical alignment va as
13:34 - center i'll also change its font size
13:39 - to about 72 and i'll specify
13:43 - the font weight so i'll say weight as
13:46 - semi bolts as a semi bold
13:51 - since we've resized our figure the
13:53 - labels in our video look very small at
13:54 - the moment
13:55 - let's change that using the bar label
13:57 - font and the tick label font parameters
14:00 - bar label refers to the text associated
14:02 - with the bar and the tick label refers
14:04 - to the text associated with the x axis
14:06 - and the y axis
14:08 - so i'll come to my coder i'll specify
14:10 - the bar label font
14:12 - and i'll change the font size to 27
14:15 - and then i'll do the same for the tick
14:17 - label font so i'll say tick label
14:18 - font and i'll specify the size to 27 as
14:22 - well
14:23 - i also want to change the property of
14:25 - the bars for this i'll use the bar
14:27 - keyboard arcs parameter
14:28 - to change the opacity i'll say
14:32 - bar keyword arcs i'll specify it as a
14:34 - dictionary
14:35 - and i'll specify the alpha which is the
14:37 - opacity
14:38 - as about 0.99 then i'll also set the
14:42 - width of the edges
14:43 - to zero so i'll say lw and c0
14:46 - now i'll save this file and i'll run the
14:56 - code
14:58 - me open this video file and as you can
15:00 - see there's a title text at the top of
15:01 - the video
15:02 - there's also a period label at the right
15:04 - side also the bar level and the tick
15:06 - label fonts have been adjusted
15:09 - by the way we can even change the
15:10 - formatting of the labels
15:12 - let me show you what i mean since our
15:13 - csv file has up to two decimal places of
15:15 - data
15:16 - i want the bar level to also have up to
15:18 - two decimal place of data
15:20 - also at the moment the period level has
15:22 - this unnecessary decimal formatting that
15:24 - i want to remove
15:25 - we can do this using the bar text
15:27 - template and the period template
15:28 - parameters
15:29 - by text template helps us adjust the
15:31 - formatting of the bar labels
15:33 - i'll come to my code editor and i'll
15:34 - specify the bar text template
15:37 - as a string and say x colon point to f
15:41 - this specifies that the program should
15:43 - display up to two decimal places of
15:45 - values for the bar levels
15:47 - now i'll do the same for period labels
15:49 - so i'll say period
15:50 - template and i'll specify the same type
15:53 - of
15:54 - formatting so i'll say x colon this time
15:57 - i'll say it's point zero f
16:00 - this will remove the unsaid decimal
16:01 - place in the period level
16:03 - now i'll finally save the code and run
16:05 - this file
16:10 - i'll open our rendered video and as you
16:13 - can see the decimal formatting in the
16:14 - period level has been removed
16:16 - and our power labels now has up to two
16:18 - decimal place of data
16:19 - our video is finally ready by the way
16:23 - we've only used the essential parameters
16:24 - to create our video there are many other
16:26 - parameters that allow us to fully
16:28 - customize our video
16:29 - i encourage you to try them out on your
16:31 - own and if you feel more explorative
16:33 - you can go to the program's github
16:34 - repository and read the code to figure
16:36 - out how the batch address package has
16:38 - been implemented
16:39 - that's it for this video you can find
16:41 - all the links i mentioned in the video
16:43 - description
16:44 - and if you want more of these videos let
16:45 - us know in the comments below and so
16:47 - these are some topics that you want us
16:48 - to cover and if you like this video
16:51 - hit that like button subscribe to the
16:52 - channel and i'll see you in the next one
16:54 - happy programming
17:05 - you