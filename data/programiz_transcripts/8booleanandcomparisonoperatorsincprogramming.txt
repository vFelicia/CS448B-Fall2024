00:00 - hey guys i'm padma from programmies and
00:02 - welcome back to this series on c
00:03 - programming in this video we will learn
00:05 - about the boolean expression in c
00:07 - programming more specifically we will
00:09 - learn about the boolean type logical and
00:12 - comparator operator that are used to
00:14 - create decision making programs so let's
00:17 - get started
00:21 - just like integer and double boolean is
00:24 - a data type that can store only two
00:27 - values either true or false we use the
00:30 - bull keyword to create boolean type
00:32 - variables however to create a boolean
00:34 - type variable we must import the std
00:37 - bool header file first let's see an
00:40 - example here i have a basic c program
00:43 - now i'll first
00:45 - include
00:48 - include
00:51 - stdol.h
00:55 - just like stdio.h now let's create two
00:58 - boolean variables
01:00 - bull value
01:03 - 1
01:05 - equals
01:07 - true
01:08 - and another bull value
01:12 - bowl value 2 equals false
01:16 - now we'll print these variables we know
01:18 - that we use format specifiers to print
01:20 - variables in c however there is no
01:22 - format specifier for bold type variable
01:25 - so how do you print a boolean variable
01:28 - well we use the percent d just like
01:30 - printing integer values this is because
01:33 - in c programming boolean values are
01:35 - represented by integer data false is
01:37 - represented by 0 and true is represented
01:40 - by 1 or all the values except 0. now
01:43 - let's print these variables now i'll
01:45 - print this using printf statement using
01:47 - percent d format specifier
01:50 - value
01:51 - 1
01:55 - and i'll put some space here
01:58 - then i'll print another value 2
02:01 - using printf statement so here we'll use
02:04 - percent d format specifier
02:07 - and value 2
02:11 - and we'll
02:13 - we'll put some space here and i'll run
02:15 - this
02:17 - you can see 1 is printed for true and 0
02:20 - is printed for false one thing you
02:23 - should remember is that c is a case
02:25 - sensitive language and we cannot use
02:28 - true and false with capital t and
02:30 - capital f let me show you i'll replace
02:33 - this small t with capital t and i'll
02:36 - replace this small f with capital f and
02:39 - i'll run this
02:41 - as you can see i get an error this is
02:43 - because true with small t is different
02:46 - from true with capital t
02:48 - by the way if you are watching this
02:50 - there is a good chance you want to
02:51 - improve your skills in c programming
02:53 - lucky for you we have a mobile app that
02:55 - provides a well-structured c programming
02:57 - course with certification at the end and
02:59 - you can use the app alongside the video
03:02 - to practice on the built-in compiler our
03:04 - course is free so download now by
03:06 - scanning this qr code or click the link
03:08 - in the video description
03:13 - now that we know about the booleans
03:15 - let's learn about comparison and logical
03:17 - operators these operators are used to
03:20 - create boolean expressions that return
03:22 - boolean values let's start with
03:24 - comparison operator i'll first copy a
03:26 - list of all comparison operators in our
03:29 - text editor so that it's easier for us
03:31 - to use them now let's go through them
03:34 - one by one i'll start with greater than
03:36 - operator
03:39 - the greater than operator checks if the
03:41 - value is greater than another value
03:44 - let's see an example here i am using
03:46 - greater than operator to check if 12 is
03:49 - greater than 9 and assign the result to
03:52 - the value variable since 12 is greater
03:54 - than 9
03:55 - the output will be true so let's run
03:57 - this code
03:59 - as you can see i get 1 as output which
04:02 - represents true now let's change the
04:04 - value of 12 to 5.
04:07 - now i'll run this code again this time
04:10 - we get output 0 which represents false
04:13 - it's because
04:14 - 5 is not greater than 9 so the greater
04:17 - than operator results false
04:22 - similarly the less than operator checks
04:25 - if the value is less than another value
04:27 - here i'll simply change the greater than
04:29 - sign to less than sign the value 5 is
04:32 - less than 9 so the output will be true
04:35 - let's run this code as expected we get
04:38 - the output 1 which is true
04:41 - now let me change the value 5 to 9
04:45 - and i'll run this code again
04:47 - here i'll get 0 as output because 9 is
04:50 - not less than 9.
04:55 - the equal to operator compares two
04:58 - values and return true if the value are
05:01 - equal i'll use the same code and change
05:03 - the less than sign to equal to sign
05:06 - here 9 is equal to 9 so we should get
05:10 - true as output let's run this code as
05:13 - expected we get one as output now let me
05:17 - change this nine to six by just looking
05:20 - at this you can tell the output is going
05:22 - to be false let me run this code as
05:25 - expected we get 0 which means
05:28 - false in c programming
05:32 - similarly there is not equal to operator
05:35 - it does exactly the opposite of what
05:38 - equal to operator does it checks if two
05:41 - values are not equal here i'll change
05:43 - this equal to operator to not equal to
05:46 - here we are using not equal to operator
05:49 - between nine and six now let's run this
05:52 - code i get
05:54 - one as output because nine is not equal
05:57 - to six
05:59 - so result is true
06:04 - in c programming there are also some
06:06 - compound comparator operators like
06:08 - greater than equal to this operator
06:10 - gives true if a value is either greater
06:12 - than or equal to another value i'll use
06:15 - the same code and i'll change this value
06:17 - to 9 is greater than and equals to 6.
06:21 - now what do you think the output of this
06:23 - code will be
06:25 - i'll run this
06:26 - and yes you guessed it right the output
06:29 - is 1 because 9 is greater than 6 so the
06:33 - result is true
06:35 - similarly there is less than or equal to
06:38 - operator that does the exact opposite of
06:41 - greater than or equal to let's change
06:43 - the operator here now let's change the
06:45 - operator here
06:46 - i will run this code
06:49 - you can see i get 0 because 9 is neither
06:52 - less than or equal to 6.
06:55 - we can also use this comparator operator
06:57 - with floating point number so i'll
06:59 - change the value 9 to point three four
07:02 - and change this six to six point
07:05 - eight seven
07:06 - now we are checking if nine point three
07:08 - four is less than or equal to six point
07:11 - eight seven i'll run this code as you
07:13 - can see i get the output 0 that means
07:16 - the condition is false
07:21 - till now we have used comparison
07:23 - operators to compare two values however
07:26 - we can also use them to compare
07:28 - variables let's see an example i'll
07:31 - create two variables
07:33 - int num
07:35 - 1 equals 9
07:37 - and another variable int num 2 equals
07:43 - six
07:44 - now let's compare these two variables to
07:46 - compare that we'll create bull value
07:50 - bool value
07:52 - equals
07:54 - num1 is greater than
07:56 - num2
07:58 - here i'm checking num1 is greater than
08:02 - norm2
08:03 - now let's print this using print
08:05 - statement
08:07 - print f bracket inside quotation
08:10 - percent d comma
08:12 - value
08:16 - now i'll run this code
08:18 - we get output 1 because the value of
08:21 - num1 equals to 9
08:23 - is greater than value of num2 that is
08:26 - equals to 6.
08:28 - we can also use comparison operators
08:31 - with variables and value i'll remove
08:33 - this num2
08:37 - and i'll remove this num2 here as well
08:40 - and put here
08:42 - value 6 and i'll run this again
08:45 - as you can see code runs perfectly fine
08:48 - and we get the output as before
08:51 - these are the comparison operators that
08:53 - are used in c programming they all
08:55 - return a boolean value and the
08:57 - expression where they are used is called
08:59 - boolean expressions in our previous
09:01 - example
09:02 - the code num1 greater than 6 is a
09:05 - boolean expression boolean expression
09:07 - check particular condition and results
09:09 - either true or false and based on the
09:12 - result we can perform different actions
09:15 - okay guys we need your support to keep
09:17 - these types of content free for all user
09:19 - youtube really likes engagement on the
09:21 - video so leave a comment below press
09:23 - that like button and hit subscribe if
09:25 - you haven't already let's get the
09:27 - engagement score high up so that more
09:29 - people can discover and enjoy these
09:31 - courses
09:35 - now let's move to logical operators
09:38 - logical operators are used with boolean
09:40 - expression to perform logical operations
09:43 - c programming has three logical
09:45 - operators and they are and or and not
09:50 - let's copy them in our code editor and
09:52 - learn them one by one
09:55 - we use the two ampersand sign for the
09:57 - and operator let me show you an example
10:00 - i'll create two variables a's and height
10:02 - with value 18 and 6.3 so let's do that
10:06 - int
10:07 - is
10:08 - equals 18
10:10 - and
10:12 - double
10:13 - height equals 6.3
10:17 - now i'll create another variable bull
10:20 - result
10:22 - where i'll assign two boolean expression
10:24 - first to check if a is greater than or
10:27 - equal to 18 so
10:30 - equals to
10:31 - is is greater than or equals to 18
10:35 - and second to check if height is greater
10:38 - than 6 so
10:40 - height
10:42 - is greater than
10:44 - six
10:46 - and now i'll use and operator to join
10:49 - them
10:50 - so
10:54 - let me complete this program here i'll
10:56 - add print statement
10:58 - print printf bracket inside quotation
11:01 - percent d
11:03 - comma result
11:07 - here i have used n between two boolean
11:09 - expressions
11:10 - the operator returns true if both
11:12 - expression are true let me run this code
11:15 - here i get 1 as output because a is
11:18 - equals to 18
11:20 - so this boolean expression
11:22 - returns true and height is also greater
11:25 - than 6 so this boolean expression
11:28 - returns true as well hence we get the
11:30 - final result that is also true now let
11:33 - me change the value of 18 to 16
11:39 - so this expression is greater than
11:41 - equals to 18 becomes false
11:43 - now let me run this code
11:45 - as you can see we get output 0. this is
11:48 - because the and operator returns true
11:51 - only if both the expression are true
11:54 - however the value of a's is 16 so this
11:57 - expression is false hence we get the
12:00 - final result zero that is false in c
12:04 - programming
12:07 - now let's learn about logical r operator
12:10 - we use double pipe symbol as the r
12:12 - operator the r operator returns true if
12:15 - one of the boolean expression is true
12:17 - let me show you here i'll replace this
12:20 - and with r
12:23 - here this expression is false however
12:25 - this expression is true so the result
12:28 - will be true let me run this code as
12:31 - expected we get one as output
12:36 - unlike and and or the not operator is
12:40 - used with only one boolean expression we
12:43 - use the exclamation mark as the not
12:45 - operator the not operator simply reverse
12:48 - the result of boolean expression if the
12:50 - expression is true it returns false and
12:53 - if the expression is false it returns
12:55 - true let's see an example
12:57 - i'll use the same code as before here
13:00 - i'll remove this double variable
13:03 - and this expression height is greater
13:05 - than 6
13:07 - and i'll use not operator before this
13:10 - expression
13:12 - here this expression is false so the not
13:15 - operator reverses the value hence the
13:18 - final results become true let me run
13:20 - this code
13:21 - as expected we get one as output
13:24 - now let's change the greater than
13:26 - operator to less than or equal to
13:29 - operator here the boolean expression is
13:31 - true so the result will be false because
13:34 - of this not operator now let me run this
13:37 - code
13:38 - as you can see we get 0 as output
13:44 - boolean expression are very useful in
13:46 - decision making and loops they are used
13:48 - to check particular condition and based
13:51 - on the condition we can make some
13:53 - decision suppose you want to check if a
13:55 - person is eligible to vote then we can
13:58 - use boolean expression to check if the
13:59 - a's of the person is greater than 18 and
14:02 - depending upon the result of the boolean
14:04 - expression we can decide if the person
14:06 - can vote or not this is how we can
14:09 - create decision making programs using
14:11 - boolean expression in the next video
14:13 - we'll learn to create decision making
14:14 - programs so don't forget to subscribe to
14:17 - the channel if you don't want to miss
14:18 - that now that we are at the end of this
14:21 - video it's time for programming squeeze
14:23 - which of the following code returns
14:25 - false
14:27 - comment your answer below see you in the
14:29 - next video happy programming
14:35 - [Music]