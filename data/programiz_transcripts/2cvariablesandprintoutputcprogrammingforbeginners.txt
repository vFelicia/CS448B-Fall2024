00:00 - hey guys welcome back to this series on
00:02 - c programming in this video we will be
00:04 - learning about variables more
00:06 - specifically we will learn how to create
00:08 - variables and store data in them so that
00:10 - we can use them later in our program so
00:13 - let's get started
00:18 - in computer programming a variable is a
00:20 - name given to a memory location inside
00:23 - our computer where we can store data let
00:25 - me give you an example i will go to my
00:27 - compiler here you can see int is here
00:30 - the name of the variable is is and to
00:33 - create this variable we use this keyword
00:35 - in this end keyword is a data type which
00:38 - indicates that the a's variable can only
00:41 - store integer values in c programming
00:44 - every variable must have a type like
00:46 - this int we will learn about these data
00:48 - types in detail in next video and in
00:50 - this video we will continue using in to
00:53 - create our variables once we create a
00:55 - variable like this
00:56 - int is we can also store data into it
01:00 - like is equals to 25
01:03 - here we have first created a variable
01:05 - named is and then we have assigned an
01:07 - integer value
01:09 - 25 to this a's variable by the way we
01:12 - have to use this semicolon at the end to
01:15 - mark the end of this statement and it is
01:18 - also possible to create variable and
01:20 - assign value in a single line let me
01:22 - show you how so instead of writing these
01:24 - two lines of code we can just merge them
01:27 - and write a single line of code like
01:29 - this
01:30 - so i'll cut this out
01:33 - if you have watched the last video we
01:35 - have used a structure that every c
01:37 - program follows i'll get back to my
01:39 - compiler if you remember this is the
01:42 - basic structure of c program
01:44 - so now let's add a variable inside this
01:47 - main function
01:50 - int
01:51 - is equals to 25.
01:55 - if we run this code a variable is
01:57 - created but will not see any output and
02:00 - to get output in c programming we will
02:03 - use printf function
02:05 - before we print this variable let's
02:07 - first try to print a normal text then in
02:09 - the next step we will learn to print
02:11 - variables now to print a line of text we
02:14 - use the printf function
02:17 - print f
02:18 - drag it inside quotation
02:21 - c programming
02:26 - and we will always end this statement
02:28 - with a semicolon
02:30 - now let me run this code
02:32 - and we can see c programming is printed
02:35 - on the screen
02:37 - by the way our variable is is also
02:39 - created but we haven't seen it because
02:41 - we haven't printed it now let's print
02:43 - our variable
02:45 - i just want to print a variable so i'll
02:47 - cut this part that prints a line of text
02:50 - then i'll write
02:51 - print f bracket inside quotation
02:55 - percent d
02:57 - comma and the name of the variable in
02:59 - this case the name of the variable is is
03:02 - to print a variable in c programming we
03:05 - use something called format specifier
03:07 - here percent d
03:09 - is a format specifier
03:11 - now let's run this code
03:14 - as we can see 25 is printed as an output
03:19 - so what happens here is that here person
03:22 - d is replaced by the value of a is
03:24 - variable if we have to print other data
03:27 - like characters and decimals we use
03:29 - different specifier like percent c and
03:31 - percent f which we will discuss in the
03:34 - next video let me modify this program a
03:36 - bit
03:38 - here i'll write here
03:40 - is colon
03:42 - now let me run this code again
03:45 - now we can see this is colon is printed
03:48 - as it is and percent d is replaced with
03:51 - the value of is
03:56 - now that we know how to store data in
03:58 - variables let's see how we can change
04:00 - their values yes we can change the
04:02 - values of variable that's why it is
04:05 - called variable let me give you an
04:07 - example i'll go back to my previous
04:09 - example currently the is variable stores
04:12 - 25 now i'll assign a new value to this
04:15 - is variable is equals to 31
04:19 - and i'll print this
04:24 - new is
04:26 - semicolon
04:28 - percent d and comma and again is
04:32 - and end this with semicolon let's run
04:34 - this program
04:36 - as you can see initially the value of is
04:39 - was 25 then i change the value of is by
04:41 - assigning 31 now let me put this second
04:44 - line of code into a new line for that
04:47 - i'll use backslash n and i'll run this
04:50 - again
04:51 - and you can see the output
04:53 - it is more readable and more clearer so
04:56 - here this backslash n is a new line
04:59 - character simply speaking it is a inter
05:01 - key
05:02 - by the way if you are watching this
05:04 - there is a good chance you want to
05:05 - improve your skills in c programming
05:07 - lucky for you we have a mobile app that
05:09 - provides a well-structured c programming
05:12 - course with certification at the end and
05:14 - you can use the app alongside the video
05:16 - to practice on the built-in compiler our
05:19 - course is free so download now by
05:20 - scanning this qr code or click the link
05:23 - in the video description
05:29 - so far we saw that we can assign data
05:31 - directly to a variable however we can
05:34 - also assign a value of one variable to
05:36 - another let me show you an example in
05:39 - this example as you can see we have
05:41 - assigned value 33 to this first number
05:44 - variable and we have then printed this
05:46 - first number variable
05:48 - now i'll assign another variable second
05:51 - number
05:55 - and instead of assigning any data i'll
05:58 - assign here first number
06:03 - then i'll print this
06:06 - backslash n
06:08 - so that we can get a readable output
06:11 - second number
06:14 - equals to percent d
06:17 - and name of the variable that is second
06:19 - number
06:22 - now let's see what will happen i'll run
06:25 - this code
06:28 - and we can see first number and second
06:30 - number variable holds the same value 33
06:33 - let's see how this program works line by
06:36 - line first we have created this variable
06:38 - first number and assigned value 33 to it
06:41 - then we have printed this variable
06:44 - and then we assigned another variable
06:46 - second number and assign the value of
06:48 - the first number to it then we have
06:50 - printed the second number
06:55 - we can also declare multiple variables
06:57 - in a single line let me give you an
06:59 - example here i have created two
07:01 - variables variable 1 and variable 2 and
07:04 - i have separated them with a comma in a
07:07 - single line
07:08 - let me modify this program a bit
07:11 - i'll assign a value 25 to this variable
07:13 - too here the same two variables are
07:16 - created however the value of variable 2
07:18 - is now 25
07:20 - by the way in c programming if we do not
07:22 - assign a value to a variable its value
07:25 - cannot be determined in this program
07:27 - variable 1 will have some random
07:29 - unpredictable value however some
07:31 - compilers may store 0 in them
07:34 - ok guys we need your support to keep
07:36 - this type of content free for all users
07:39 - youtube really likes engagement on the
07:42 - video so leave a comment below press
07:44 - that like button and hit subscribe if
07:46 - you haven't already let's get the
07:48 - engagement score high up so that more
07:50 - people can discover and enjoy these
07:52 - courses
07:55 - at this point we have covered all the
07:57 - basics of variable before ending this
08:00 - video let's talk about how to choose a
08:02 - good variable name if you have noticed i
08:04 - have used descriptive variable names
08:06 - like as and first number we could have
08:09 - given variable names like a instead of
08:11 - a's and fn instead of first number
08:15 - it works just fine however it's hard to
08:18 - understand what a means just by looking
08:20 - at the code so when we use good
08:22 - descriptive variable names it becomes
08:25 - easier to understand the code and to
08:27 - make the variable name descriptive we
08:29 - may need to use names having more than
08:32 - one word in such cases we follow the
08:34 - camel case format while giving the names
08:36 - to the variable in camel case the first
08:39 - word will be of small later and the
08:41 - first letter of the second word will be
08:42 - of capital later like the example shown
08:45 - on the screen
08:46 - by the way there are some rules you need
08:48 - to know while creating a variable
08:50 - you cannot create variable names with
08:52 - space in between you cannot start
08:55 - variable names with numbers and you
08:57 - cannot use certain words as variable
09:00 - names you cannot use if as a variable
09:02 - name because if is a keyword these
09:05 - keywords are part of c programming
09:06 - syntax and have special meaning in c we
09:09 - will learn about these keywords as we
09:11 - progress through the course and now we
09:14 - are at the end of this video it's time
09:16 - for programming squeeze can you guess
09:18 - the output of this program
09:21 - comment your answer below and i'll see
09:23 - you in the next video happy programming
09:28 - [Music]