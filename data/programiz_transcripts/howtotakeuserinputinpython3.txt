00:00 - what's up guys i'm kuni from programmers
00:02 - and welcome back to this series on
00:04 - programming with python
00:05 - in this video we will learn to take
00:07 - input from the user
00:08 - and store it in a variable let's get
00:14 - started
00:18 - in the last video we learned to create
00:20 - variables so that we can store data
00:22 - and use them later in the program let me
00:24 - give you an example quickly
00:26 - so i'll go to my compiler and i'll say
00:27 - name equals
00:30 - felix and i can say print
00:33 - name now when i run the code as expected
00:37 - felix is printed to the screen now if
00:40 - you're a skeptic like me
00:41 - you must be thinking this is pretty
00:43 - useless right in the real world
00:45 - we will typically ask the user what the
00:47 - name is instead of putting it ourselves
00:50 - let's see how we can do that to take
00:52 - input from the user
00:53 - we use python's input function so i'll
00:56 - replace this felix
00:57 - by the input function and this time when
00:59 - i press
01:00 - run then python waits for me to input
01:02 - something
01:03 - here i'll type felix as before and when
01:06 - i press
01:07 - enter then i get felix back let's try to
01:10 - understand what's happening here
01:12 - when i pressed enter then whatever i had
01:14 - typed
01:15 - that is the string felix is stored in
01:17 - the variable name
01:19 - and on line 2 when i print name then
01:21 - that
01:22 - the value of that variable name which is
01:24 - felix is printed back
01:26 - this program to take input from the user
01:29 - is working correctly
01:30 - however we haven't provided any clue to
01:33 - the user
01:33 - on what to enter let's change that
01:37 - as we are trying to ask the user for
01:38 - their name inside the input function
01:41 - i will type enter name
01:44 - and when i press run then this time
01:47 - python gives me a hint on what to enter
01:49 - so i'll say felix as before and when i
01:52 - press enter
01:53 - then this string felix is stored in the
01:55 - name variable
01:56 - and when i print the name variable it
01:58 - gives me back felix again
02:00 - before moving to the next section of the
02:02 - video i'd like to mention that the
02:04 - program is team has created an app that
02:06 - allows you to learn python from your
02:07 - phone
02:08 - the app contains bit size lessons that
02:10 - are easy to understand
02:11 - a built-in interpreter so that you can
02:13 - run python on your phone
02:14 - quizzes and many more features the app
02:17 - is available on both ios and android
02:19 - the links are in the video description
02:21 - below now instead of a string
02:23 - let's try to take a numeric input from
02:26 - the user this time
02:27 - let me modify this program so i'll
02:29 - replace name by number
02:31 - and obviously replace the variable names
02:33 - as well
02:36 - and now when i press run then this time
02:39 - i'll enter
02:40 - number five as expected
02:43 - five is printed back to the screen
02:46 - it's that easy or is it well the input
02:50 - function takes the input in the string
02:52 - form
02:52 - when we enter 5 rather than the integer
02:55 - 5
02:56 - the string 5 is stored in the number
02:58 - variable
02:59 - we are getting 5 without quotations
03:01 - because the print function
03:03 - always hides the enclosing quotations
03:05 - when we print a string
03:06 - we can know for sure it's a string
03:08 - rather than a number
03:10 - by using the type function
03:13 - the type function returns the type of a
03:15 - variable
03:16 - inside the print function i'll wrap the
03:18 - number variable
03:20 - by the type function and this time when
03:23 - i press the run button
03:24 - then it says enter a number and when i
03:26 - press 5
03:27 - and press enter it says class str
03:32 - let's see what we get when we print the
03:34 - type of integers
03:35 - and floats i'll remove this code for now
03:38 - and i'll say
03:39 - number one equals five
03:43 - and here i'll say print type of number
03:45 - one
03:46 - let me create another variable number
03:48 - two and this time i'll say
03:50 - five five point five and i'll say print
03:54 - number two now when i press run
03:57 - then it says class int and class float
04:01 - here number one is an integer and number
04:04 - two is a floating point number
04:05 - that is why when i run the code you can
04:08 - see that we get class in
04:09 - first which is representation of the
04:11 - type of number one
04:13 - and we get class float second which
04:15 - represents the type of number two which
04:17 - is a floating point number
04:19 - let's get back to our original code of
04:21 - taking numeric input from the user
04:26 - we still haven't solved the problem of
04:28 - taking integer and float input from the
04:30 - user
04:30 - in fact it's not possible to take
04:33 - integer and float input using the input
04:35 - function
04:36 - however what we can do is convert the
04:38 - string to a number
04:39 - after we take the input in this code
04:42 - after i take input from the user
04:44 - i will add a line to convert the string
04:47 - to an integer
04:48 - so here i'll say number
04:51 - equals integer
04:54 - number and now when i press run then it
04:58 - says enter a number
04:59 - i'll enter something like 5 and it
05:01 - prints 5 but i have no
05:03 - way of knowing whether it is an integer
05:05 - or not so here
05:06 - i'll wrap this number by type
05:10 - and this time when i press run it says
05:12 - enter a number
05:13 - i enter 5 and it says class integer
05:17 - which verifies that number indeed is now
05:20 - an integer
05:21 - in our code instead of adding this extra
05:24 - line to convert the string to an integer
05:26 - you can also do something like this so
05:28 - i'll remove this code
05:30 - and i'll add wrap this input function by
05:33 - the in function
05:34 - in the first line itself now when i
05:36 - press run
05:37 - then as usual it says enter a number
05:39 - i'll enter 5
05:40 - and the class it verifies that indeed
05:43 - the number variable is now an integer
05:46 - here
05:47 - we're taking input from the user
05:49 - converting it to an integer and then
05:52 - storing it in the number variable
05:54 - all at once we can also convert strings
05:57 - to floats
05:58 - we use the float function for that let
06:01 - me change this code and instead of
06:03 - integer i'll use the float function so
06:05 - here i'll replace the in function
06:07 - by the float function and when i press
06:09 - run then i can enter something like
06:11 - 5.5 and it says class float
06:15 - which means this input was converted to
06:17 - a float
06:18 - and that floating point number was
06:20 - stored in the number variable
06:23 - when we pass values we have taken from
06:24 - the user to int and float functions
06:27 - python tries to convert the data to its
06:29 - corresponding integers and floats
06:31 - in our programs we have converted the
06:34 - string 5 to an integer
06:35 - and the string 5.5 to a float these are
06:38 - numeric strings
06:40 - numbers in string format that's the
06:42 - reason it's possible to convert these
06:44 - strings
06:45 - to integers and floats however python
06:48 - cannot convert every string to numbers
06:51 - let's find out what will happen if we
06:53 - try to convert a non-numeric string to a
06:55 - number
06:56 - so here i have the same code from before
06:59 - and this time i'll press run
07:01 - and when it says enter a number i'll
07:03 - enter a string like felix
07:05 - when i press run then python tells me
07:08 - that it could not convert string to
07:10 - float
07:12 - here python try to convert felix to a
07:14 - floating point number
07:16 - but obviously it couldn't which makes
07:17 - kind of sense there is no way for python
07:20 - to know what's the equivalent floating
07:22 - point number
07:22 - for this felix string before we end this
07:26 - video
07:26 - here is a recap of what we learned we
07:29 - use the input
07:30 - function to take input from the user we
07:32 - can make the input function more
07:34 - descriptive
07:35 - by passing a string to it the input
07:38 - function
07:38 - always takes the input in the string
07:40 - form but we can convert a string to an
07:43 - integer
07:44 - using the int function similarly we can
07:46 - convert a string
07:47 - to a float using the float function if
07:50 - we try to convert
07:52 - non-numeric strings to integers and
07:53 - floats we will get an error
07:56 - that's it for this video i hope you
07:57 - learned something if you're just
07:59 - watching the video without writing any
08:00 - code
08:01 - i highly encourage you to try the
08:03 - programs in this video on your own
08:05 - the only way you can be a good
08:06 - programmer is by trying by the way
08:08 - you can find all the programs from this
08:10 - video on github i posted the link in the
08:12 - description below
08:13 - feel free to copy the programs and edit
08:16 - them as you please
08:17 - and if you have any questions and
08:18 - feedback use the comment section below
08:21 - join me in this video series and let's
08:23 - explore the exciting world of
08:24 - programming together
08:25 - in the next video we will learn about
08:27 - python comments and
08:28 - why they are used if you like this video
08:31 - hit the like button now
08:32 - and also don't forget to subscribe to
08:34 - our channel and ring that bell icon so
08:36 - that you don't miss the next video
08:38 - thanks for watching and i'll see you in
08:39 - the next one happy programming