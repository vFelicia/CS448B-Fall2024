00:00 - what's up guys this is me padma from
00:01 - programming and welcome back to this
00:03 - series on c programming in the last
00:05 - video we'll learn to create a function
00:07 - this function which we define ourselves
00:10 - i called user defined function in c
00:13 - there is another type of function called
00:15 - standard library function the function
00:17 - definition of standard library function
00:20 - is already provided by c and we can
00:22 - directly use them in our program so
00:25 - let's get started
00:30 - before we learn about standard function
00:32 - let's see a simple example to print a
00:34 - text
00:35 - you can see this code in my code editor
00:38 - i'll run this program
00:40 - and you can see hello world is printed
00:43 - on the screen here printf is a standard
00:46 - library function that prints the text on
00:48 - the screen we haven't provided any
00:50 - definition for printf instead we are
00:53 - directly using it in our program in c
00:55 - programming a standard library function
00:58 - is a predefined function which is
01:00 - already defined inside a file and we can
01:03 - directly use them in our program in our
01:05 - case the definition of printf file is
01:07 - present inside the stdio.edge header
01:10 - file that's why we have included
01:13 - stdio.edge header file inside our
01:16 - program and once the file is included we
01:18 - are able to use the printf function
01:20 - inside our program and also the scanf
01:23 - function that we have used to take the
01:25 - input from the user is also a standard
01:28 - library function and it is also defined
01:30 - inside the stdio.h header file there are
01:33 - various header files available in c
01:35 - programming this file includes different
01:38 - standard library function that we can
01:40 - use directly in our program let's learn
01:42 - about some of the c library files and
01:44 - standard library function present in
01:46 - those files
01:50 - we'll start with the math file the
01:52 - math.h file provides us with various
01:55 - built-in function that helps us to
01:56 - perform mathematical operation easily
01:59 - for example the sqrt function computes
02:02 - the square root of a number all this
02:05 - math based standard library function are
02:07 - defined inside the math dot edge header
02:09 - file so to use them we import the math
02:12 - dot edge header file in our program
02:15 - let's now use this math based library
02:17 - function in our program i'll start with
02:19 - the square root function on your screen
02:21 - you can see the basic structure of a c
02:23 - program
02:24 - now first i'll import the math dot edge
02:28 - header file so
02:29 - i'll include
02:32 - math dot edge header file
02:35 - then i'll create an end variable
02:38 - say num
02:40 - and i'll assign value 25 to this
02:43 - i'll print the square root of this
02:45 - number so i'll write
02:47 - printf
02:48 - bracket inside quotation
02:50 - square
02:52 - root
02:54 - percent lf
02:57 - and
02:57 - comma
02:59 - s
03:00 - q r t
03:01 - inside parenthesis name of our variable
03:04 - num
03:07 - here the sqrt function returns the value
03:09 - in double so i have used percent lf to
03:12 - print the output now let me run this
03:15 - code
03:16 - as you can see we get 5 as output
03:20 - which is the square root of 25
03:23 - here we don't have to worry about the
03:25 - definition of sqrt function we can
03:28 - simply pass a number and get the square
03:30 - root of that number similarly we can use
03:33 - the cbit function to compute the cube
03:35 - root of a number let me show you i'll
03:38 - change the value of 25 to 27
03:42 - and i'll change this function sqrt to
03:45 - cbrt
03:47 - and then i'll change this text from
03:49 - square root
03:51 - to cube root
03:54 - so i'll run this
03:56 - as you can see i get 3 as output which
03:59 - is the cube root of 27
04:02 - now let me show you one more example
04:04 - this time i'll calculate the power of a
04:07 - number i'll use the same code from
04:09 - earlier and i'll remove these lines
04:13 - and i'll create two variables so end a
04:17 - and i'll assign value 5 to this in
04:19 - variable a
04:20 - and another variable b and i'll assign 2
04:24 - to this
04:26 - now i'll use pow function
04:29 - so inside the parenthesis i'll use two
04:31 - variables a and b
04:35 - here this pow function is the power
04:37 - function i'll assign this to a double
04:39 - variable result so double result
04:43 - is equals to pow function
04:46 - and finally i'll print this
04:49 - using printf statement
04:51 - so power
04:55 - percent
04:56 - lf
04:58 - comma
04:59 - result
05:02 - and i'll run this code here we get 25 as
05:06 - our output
05:07 - so what happens here is this first
05:10 - argument a of the power function is the
05:12 - base value and the second argument b is
05:15 - the power raised to the base
05:17 - so
05:18 - it gives
05:19 - 5 raised to the power 2 which is equals
05:22 - to 25
05:24 - now let me change this value of b from 2
05:27 - to 3 and i'll run this again
05:30 - and this time you can see we get
05:33 - 125 which is 5 raised to
05:37 - there are various functions defined
05:39 - inside the math dot edge here file you
05:41 - can learn about them on programmies.com
05:44 - website i'll put the link in the video
05:46 - description below
05:47 - by the way if you're watching this there
05:49 - is a good chance you want to improve
05:50 - your skills in c programming lucky for
05:53 - you we have a mobile app that provides a
05:55 - well-structured c programming course
05:57 - with certification at the end and you
05:59 - can use the app alongside the video to
06:01 - practice on the built-in compiler our
06:03 - course is free so download now by
06:05 - scanning this qr code or click the link
06:08 - in the video description
06:12 - now let's learn about different library
06:14 - function available inside the c type dot
06:17 - edge header file this file provides
06:19 - function to perform various operations
06:22 - on characters hence it is known as a
06:25 - character type header file let's see
06:27 - some example
06:29 - so you can see this basic structure of c
06:31 - program here first i'll import c type
06:34 - header file in our program
06:37 - so
06:38 - c type dot
06:40 - h header file
06:42 - now inside the main function i'll create
06:45 - a character variable
06:48 - say alpha and i'll assign a character e
06:51 - to this
06:53 - let's first use a function to convert
06:55 - this character to uppercase so i'll use
06:57 - a function
06:59 - to
07:00 - upper and inside the parenthesis i'll
07:04 - use alpha
07:05 - and i'll assign this to a care variable
07:08 - upper so
07:11 - care
07:12 - upper is equals to this function
07:15 - then i'll print this using printf
07:17 - statement so percent c
07:20 - comma
07:21 - upper
07:23 - i will run this code
07:25 - and you can see
07:26 - we get capital e as output now let's
07:30 - change this uppercase value to lowercase
07:33 - so after this print statement i'll write
07:36 - care
07:37 - lower
07:39 - and i'll assign function
07:42 - to lower
07:44 - inside parentheses i'll put here upper
07:47 - then i'll print this lower variable as
07:49 - well
07:50 - so
07:51 - percent c
07:53 - comma
07:55 - lower
07:57 - and then i'll run this code as you can
08:00 - see the capital e is now converted to
08:02 - lowercase e in our example to upper and
08:06 - to lower our standard library function
08:09 - that are used to convert character to
08:11 - uppercase and lowercase respectively
08:14 - okay guys we need your support to keep
08:16 - these types of content free for all
08:18 - users youtube really likes engagement on
08:21 - the video so leave a comment below press
08:22 - that like button hit subscribe if you
08:24 - haven't already let's get the engagement
08:26 - score high up so that more people can
08:28 - discover and enjoy these courses
08:33 - now that we know how to use library
08:35 - function in our program let's see why
08:38 - standard library function are so helpful
08:40 - as we saw earlier we can directly use
08:43 - library function in our program we don't
08:46 - have to worry about the function
08:47 - definition and we don't have to write
08:49 - the code ourselves this saves
08:52 - significant amount of time and since
08:54 - they are already tested they work
08:56 - completely fine without any error also
08:59 - they are built in inside the c program
09:02 - so they are optimized for better
09:03 - performance and developers are
09:05 - constantly improving to keep them up to
09:08 - date there are so many library function
09:10 - in c programming if you want to learn
09:12 - about them visit our text based tutorial
09:15 - i'll put the link in the video
09:16 - description below
09:20 - now to revise what we have learned in
09:22 - this video here is a programming task
09:24 - for you create a program that compute
09:26 - the result of a number raised to the
09:28 - power of the square root of a number so
09:32 - first take the input from user compute
09:34 - the square root of number using sqrt
09:37 - function compute the power of the number
09:39 - raised to the power of its square root
09:42 - and then print the result you can find
09:44 - the answer to this question in our
09:46 - github repository and also if you want
09:49 - to revise this concept all these program
09:51 - in this video are present in there the
09:53 - link is in the video description below
09:55 - now that we have reached the end of this
09:58 - video it's time for programming squeeze
10:00 - what is the correct way to include
10:02 - library function in our program
10:05 - comment your answer below see you in the
10:07 - next video happy programming
10:13 - [Music]
10:19 - you