00:00 - what's up guys i'm punished from
00:01 - programmers and welcome back to this
00:03 - series on python
00:04 - till now we learned about three
00:06 - different sequences lists
00:08 - tuples and strings these are compound
00:10 - data types
00:11 - that allow us to work with multiple
00:12 - items at once
00:14 - in this video we will learn about
00:15 - dictionaries which is also a compound
00:17 - data type
00:18 - however the items in a dictionary and
00:20 - how we access them
00:21 - is a bit different than other sequences
00:24 - like lists and tuples
00:25 - let's see what dictionaries are all
00:26 - about and how we can use them in python
00:37 - a dictionary is a collection of key
00:39 - value pairs it is similar to associative
00:41 - arrays in other programming languages to
00:43 - create a dictionary in python
00:45 - we need to put these key value pairs
00:47 - inside curly braces separated by commas
00:49 - like this
00:51 - this dictionary has two items separated
00:53 - by commas
00:54 - and each item is a key value pair
00:56 - separated by a column
00:58 - for the first item its key is name and
01:01 - its value
01:02 - is linus similarly for the second item
01:05 - its key is age and its value is 21.
01:09 - let me print this dictionary and run it
01:11 - so here i'll say print
01:13 - person 1 and when i press run then the
01:16 - same dictionary is printed
01:19 - there are a couple of things we need to
01:21 - remember when we create dictionaries
01:23 - first keys of a dictionary can be any
01:25 - immutable object
01:26 - like numbers strings and tuples however
01:30 - they cannot be objects that can be
01:31 - modified like lists
01:33 - second the keys must be unique for
01:35 - identification
01:37 - let me change the name key to 10 and
01:39 - this age key to a tuple and run it
01:41 - so here i'll say instead of name i'll
01:44 - say 10
01:45 - and i'll turn this age into a tuple
01:49 - and now when i press run then as
01:51 - expected
01:52 - this is a valid dictionary
01:55 - this works because both these keys 10
01:58 - and this tuple age are immutable objects
02:05 - dictionaries are optimized to get values
02:07 - when the key is known
02:08 - if you remember we use numbered indices
02:11 - like 0
02:12 - 1 and 2 to get elements from sequences
02:14 - like lists and tuples
02:16 - in the case of dictionaries these keys
02:18 - are used as indices
02:21 - i have this program from our last
02:22 - example suppose we want to get linus
02:24 - from this dictionary
02:26 - to get this i'll type square brackets
02:28 - after our dictionary name
02:29 - and inside i'll type the name of the key
02:32 - which is name
02:34 - and now when i press run i get linus
02:38 - similarly to get 21 we need to use age
02:41 - as a key
02:42 - so here instead of name if i type age
02:45 - and press
02:46 - run then this time i get 21
02:49 - now let's see what happens if you try to
02:51 - access a key that's
02:52 - not in the dictionary i'll change this
02:54 - age to hobbies
02:57 - and when i press run then python tells
02:59 - me
03:00 - that there's a key error because hobbies
03:02 - is not present
03:04 - in this dictionary person one
03:07 - sometimes instead of getting this error
03:10 - we may just want to know if the key
03:12 - exists or not
03:13 - and decide what to do based on it in
03:15 - that case we can use the dictionaries
03:17 - get method
03:18 - like this so here i can say person 1
03:21 - dot get and inside parenthesis
03:24 - i can say hobbies
03:28 - let me run this code this time
03:31 - instead of an error we get none this
03:34 - non-object means empty or no value
03:38 - this can be useful because i can use
03:40 - this in an if statement
03:41 - and run different codes based on it we
03:43 - can also pass a second argument to the
03:45 - get method
03:46 - if the key doesn't exist this default
03:48 - value is returned instead of none
03:51 - i'll provide a list as a default value
03:53 - so here i can say
03:55 - person1.gethobbies and inside let me
03:58 - pass a list
03:59 - saying dancing and
04:02 - fishing now when i press run
04:07 - now instead of none we get this list
04:10 - back
04:13 - before moving to the next section of the
04:14 - video i'd like to mention that the
04:16 - program is team has created an
04:18 - app that allows you to learn python from
04:20 - your phone the app contains bit size
04:22 - lessons that are easy to understand
04:24 - a built-in interpreter so that you can
04:25 - run python on your phone
04:27 - quizzes and many more features the app
04:30 - is available on both ios and android the
04:32 - links are in the video description below
04:35 - i have this person one dictionary we
04:37 - have been working on in my screen
04:40 - now let's change the name to dennis to
04:43 - do so
04:44 - we need to assign a new value to the key
04:46 - like this
04:47 - so here i'll say person 1
04:51 - name equals
04:55 - tennis i'll run it
04:59 - and we can see the value of the name key
05:01 - is now dennis
05:03 - if you try to assign a value to a key
05:05 - that doesn't exist yet
05:06 - it will add a new item to the dictionary
05:08 - let me show you
05:10 - so here i'll say person one
05:15 - hobbies equals
05:18 - dancing and fishing
05:22 - i'll press on and as you can see a new
05:25 - key
05:26 - hobbies has been added and its
05:27 - equivalent value dancing and phishing
05:29 - has also been added to this dictionary
05:34 - to remove an item from the dictionary we
05:36 - can use the dictionaries pop method
05:38 - let's see how we can remove this item
05:40 - from the dictionary
05:41 - to remove the item we need to pass the
05:43 - key of the item
05:45 - in the pop method like this so here i'll
05:48 - say
05:50 - person 1 dot pop
05:54 - name now when i press run then you can
05:57 - see
05:58 - that name linus has been removed from
06:00 - the dictionary
06:01 - this pop method also returns the value
06:04 - of the removed item so if i wrap this
06:06 - code
06:07 - inside a print function and press run
06:11 - then i get linus which was the removed
06:13 - item
06:14 - there are many of these dictionary
06:16 - methods readily available for us to use
06:18 - this makes working with dictionaries
06:20 - much easier you can find
06:22 - all the dictionary methods and how they
06:23 - work along with examples in our
06:25 - websiteprogrammers.com
06:26 - i'll include the link in the video
06:28 - description
06:31 - similar to sequences we can easily
06:33 - iterate through items of a dictionary
06:35 - by using a for loop and in each
06:37 - iteration of the loop we get a key of
06:38 - the dictionary
06:39 - let's see that in action i have the same
06:42 - dictionary we've been working with
06:44 - so here i'll say for key in
06:47 - person 1 and here i'll say print
06:50 - key now when i press run then as you can
06:54 - see
06:54 - name and age which are the keys of the
06:57 - dictionary are printed
07:00 - when we know these keys we can easily
07:02 - get the corresponding values as well
07:04 - let me add a line to print values of the
07:06 - dictionary in each iteration of the loop
07:08 - so in the next line i'll say print
07:11 - person 1 key
07:14 - now when i press run then as you can see
07:17 - name
07:18 - linus age 21 is printed which are the
07:21 - keys and the corresponding values in
07:22 - this dictionary
07:25 - starting from python 3.7 the order of
07:27 - items in a dictionary is preserved
07:30 - so when we iterate through a dictionary
07:31 - we get the keys in the order in which
07:33 - they are in the dictionary
07:37 - at this point we have pretty much
07:39 - covered the basics of python
07:40 - dictionaries
07:41 - before we end this video here's a task
07:43 - for you can you guess the output of this
07:45 - program
07:46 - i'll give you a couple of seconds to
07:47 - pause the video
07:49 - as always you'll find the answer to this
07:51 - question in our github repository
07:53 - i'll also include this link in the
07:54 - description below here's a recap of what
07:57 - we learnt in this video
07:58 - a dictionary is a compound data type
08:00 - that allows us to work with key value
08:02 - pairs
08:03 - we can easily access a value from a
08:04 - dictionary if its key is known
08:07 - to add or change items from a dictionary
08:09 - we can assign values to the keys
08:12 - we can remove items from a dictionary by
08:14 - using the pop method
08:16 - and finally we learn to iterate through
08:18 - keys of a dictionary using a for loop
08:21 - that's it for this video i hope you
08:23 - learned something if you're just
08:24 - watching the video without writing any
08:26 - code i highly encourage you to try the
08:27 - programs in this video on your own
08:29 - the only way you can be a good
08:30 - programmer is by trying by the way you
08:33 - can find all the programs from this
08:34 - video on github
08:35 - i provided the link in the description
08:37 - below feel free to copy the programs and
08:39 - edit them as you please
08:41 - and if you have any questions and
08:42 - feedback use the comment section below
08:44 - in the next video we will learn about
08:46 - another collection data type
08:48 - sets which is similar to sets in
08:50 - mathematics
08:51 - join me in this video series and let's
08:53 - explore the exciting world of
08:54 - programming together
08:55 - if you like this video hit the like
08:57 - button now and also don't forget to
08:59 - subscribe to our channel and ring that
09:00 - bell icon
09:01 - so that you don't miss the next video
09:03 - thanks for watching and i'll see you in
09:04 - the next one happy programming