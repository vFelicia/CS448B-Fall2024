thanks for tuning in at braies hello everyone and welcome to episode 11 in make a game a cool series on making a video game in unity So today we're going to be doing something really awesome uh it's something that some people hate and some people enjoy the most about game making and it's adding audio to our game so we're going to add a bunch of different sounds and a musical track and what is really really difficult when adding audio is making it sound not repetitive so I'm going to show you some cool tips and tricks on how to do that and also in the 2D assets pack available at brack.com uh there's now an audio section and so if we go in here I've gathered um some different sounds that we can use there is a coin pickup sound a game over one I made myself some relaxed music and then three wooden hits when our ball hits the um it's the ground so uh if we we will just take a quick list in here the coin pickup oops I need to set the repeat off here or we're going to get mad so there's the coin pickup sound if you heard it enough and the game over one game over pretty simple uh the relaxed music we had that ago and now some very simple wooden hits so uh and they are in in different strength and uh pitch up a bit and uh and yeah so now that we have these different sounds uh also a great way to uh a great place to get some free sounds is freesound.org if you go in here and search for something let's say relaxed music and uh and and hit search here then make sure to check the creative common zero on the right hand side and if you do that you are uh free to use the sound for whatever purpose you want to so you can also use it commercially so just make sure to press creative comments zero and uh and there's a lot of different sounds awesome so let's get started as always I've opened up unity and just before we go ahead and implement the sounds I've noticed that whenever our ball dies the score doesn't reset so to quickly fix this let's just go on the game master object the GM object that and then under the game master script in here if we double click that to open it up in mono develop um we will just make a quick change that will reset the score whenever the uh whenever the scene is loaded so up here we're just going to make a function start and inside of this we are going to write current score equals z so we will just reset it and now when we hit play and fold down the score will reset this will also reset the score if you change levels so to get some more control over that uh we're going to write a separate function in the future cool so now let's finally go ahead and implement the Audio I feel like I always just do something completely different than what I tell you the first like 3 minutes of the video but now we're here so um let's start with the coin let's start with the coin pickups uh sound so let's find our coin here and uh and uh let's go ahead and import the audio so inside of our 2D assets pack let's just import the entire folder drag it in there and all of the different audio clips will import they will relaxed music one uh will take a bit of time I have compressed the file to make it uh a bit smaller but it is still a a rather long music uh file so it is to be expected so under the audio now we can go ahead and select our coin pickup and we want this to be a um well it's it's completely up to you uh actually I think the coin pickup sound uh should not be 3D so let's just disable that and uh basically what it means is that um then it will just twodimensionally play uh other than playing uh where it factorizes how far you are from the object and uh at what speed you're traveling and and all that advanced audio stuff so let's just disable 3D audio and uh hit apply cool so now under our coin uh object we can go ahead and hit add component and then audio and and uh we can go ahead and um actually okay so this is where it gets a bit complicated because there are multiple ways of handling this uh the first of which is to attach uh the audio on the coin itself and then just delay the destruction of the coin till the audio has finished playing um and then you can just disable the mesh renderer at start so you won't see it but that's a little too complicated I think um the other way is to spawn in an object that will uh have the audio sit on it and the great thing about this method is we are already spawning in an object remember when we hit play and roll over our coin you can see the particles and uh they destroy after a a certain amount of seconds so why not just put an audio onto the particles system and uh make it play instantly so let's find the particles the coin effect here let's go down hit add component audio and then audio source and under the audio clip we can now select the coin pickup and uh then we just simply remember to check play on awake and let's maybe just p uh take down the volume a bit here so let's try and see how this sound and it sounds just perfect uh I'm going to bring the volume down just to Tad more because it is um really high pitch the sound and it could quickly get annoying so that's perfect and uh what we can do also is we can make a script to change the pitch so that it will uh vary uh but I'm going to show you how to do that with uh some of the other effects so you can do that on your own on the coin here if you want to uh we're just going to keep the video short and and now that I've said that I just know that this is going to be like half an hour but but okay we'll try uh so under the audio uh we also have the game over and the Three Wooden Heads let's start out with the game over and I'm going to show you something cool uh you can do so under our let's see that's the game master script uh where is it we handle the um it's on the ball Health there so double click ball health and we can see that if we get below this uh transform the position we just restart the level but basically we want to say game over first because game over sounds are awesome so let's create a separate function uh because we want to delay the sound or delay the the loading of the level so the sound has stopped playing and whenever you do that you need to be outside of the update function because you can't delay uh the update function it needs to run every frame so we're going to make a separate function called uh restart and uh let's be more specific restart level let's call it that and uh we don't need any parameters but let's open up some brackets and inside of this we're just going to write um audio doplay like that and then we're going to do and here you can input a string but we're just going to leave it empty and it will play the first audio clip uh at attached and then we're going to do another another thing and that's uh we're going to wait so we're going to do a yield wait 4 seconds like this and inside of here you can just write a number of seconds or you can do audio. length audio clip I think that is pretty sure it's audio clip. length uh no let's see here here it's one of these I I can't remember exactly which one um audio audio clip audio importer I'm pretty sure that is a length length in here hm this is weird length maybe they've removed it I'll just check up on that so um just give me a sec and I'll be back okay I'm back so the solution was pretty obvious instead of audio clip you go audio. clip. length so like that so it will simply weight the length of the audio clip and then we can do the loading so application do load level uh load level and then the level one and close it off so instead of uh loading the level up here we simply going to delete that and then say restart level so it will call that function instead and now when we hit save things should be working uh but we of course need to attach some audio to our ball so um let's just go in here and hit add component audio audio source and then let's find the audio uh game over let's not make it a 3D sound let's also make this 2D then find our ball again and select the audio clip game over oops so game over and let's not set it to play Awake on awake this time because we uh we set it to play through a script and uh everything else should be just fine so now when we hit play roll over our ball and fall down oh something is wrong here so I don't know it sounds like it waits with playing this the the clip until it starts loading the scene so that's weird let's just see game over there's no delay there um so let me just wow that's going to be a lot of pausing in this in this video uh I'll just quickly pause the video again and be back okay so I figured out what it is once again uh so basically this line right here says that if we get below a certain position it will uh call the restart level function and uh it does so but it does so if every frame that we are in uh that we are over this uh value so this audio doplay gets called every single uh frame and so when it does that it doesn't really have time to play it just starts over and starts over and starts silver uh so what we need to do is we need to make sure that this is only played once uh so what we can do is up here we can make a Boolean so we can do um has is restarting here and we can make this false by default and then uh we can do here uh we can say if is restarting is equal to false then we want to go ahead and call the function like this and then in here we simp simply said says uh is restarting equals true and then when we have loaded the level and it will probably do this automatically but you can go ahead and say is restarting is equals false but I'm pretty sure it will do that on its own uh and we can make this a private variable uh just so it won't get in our in our way in in spectro so now when we hit play we will finally see this working game over and it restarts beautiful and when we do it again game over great so a really evil voice saying game over uh yeah so now let's take care of the wooden hits and then at final um we'll do the music so the point with the hits here is that right now when you jump it says nothing and when you land it says nothing so I thought I wanted to put some sounds in here uh whether you both want it on the jumping and on the landing is up to you uh but let's go ahead and have a look at our uh ball control script um so what we can do is we can yeah so what we do is we just uh double click on our ball control here and uh let's simply uh edit this one so um cool so basically we have three different sounds we we have the hit one the hit two and the hit three three excuse me and the uh reason why we have three is because it gets really repetitive if you play the same sound over and over when it's something that needs to play as much as every time you jump and every time you land uh you don't want the same sound playing so here's uh what you do so first off we find the place where we Collide so that's the on collision stay and uh and again we have a problem here because the on Collis stay gets called every time we are on the ground so again we need to make a Boolean that will make sure uh we only play the audio once so let's go here and say um play ones we'll just call it that equals uh true just like that and then in the update function we say uh here when we uh Collide we say if uh play on is equal to true we will play the sound so in here we can do a debug.log just to quickly uh test this out so test and uh and and so it will play and then we want it to disable so we want to play once equals f uh but we also need to set this to True again so we will do that every time we jump so uh in here in our jump function we'll do play ones equals true and uh now we should see our code working we'll check our console first off we see one test we see another as soon as we jump okay so we can see there's a problem here it registers is the on Collis stay uh in here and that's not really something we want uh so what we can do is if we try and move it down past the rigid body that might be enough uh we might have to put in a little bit of a delay there just to get it off the ground uh let's see if we can if we can do that play now we need to put in a delay so uh again the easiest way to fix this is just to do a separate function called uh play uh On's true and in here and this is not really good code but I just wanted to get it out of the way because whenever it comes to audio it's a quite quite loose concept and if you just make it work it works basically so and that's what we're going to do now is we are going to make it work so let's copy that put it down under the play ones function and right before that we simply do a wait 4 seconds and then just something like 0.1 and now when we hit play we will see that we jump into the air and uh nothing appears great so everything is just working like it should um let's see okay we need to call the function of course so Play Once true equals uh no just call it here um the reason why I'm showing you all of this um these mistakes is because I could have easily done this a million times before uh I just practiced it and and have the all of the code written out before uh but a lot of people have told me not to do that because then you don't get to be a part of the problem solving process so that once you get to write your own scripts you don't know how to solve errors so that's the whole point of me not having all of this planned out uh so that's a really good excuse for being unprofessional let's move on uh so now when we go in here and hit play we will see hopefully we will see uh that the game has frozen okay so Unity is acting weird I can't move so let me just quickly restart Unity it does that from time to time let's play Here and Now when we hit jump it will say test again so we need to just delay this a little bit more let's do do 0 point uh we can do 0.4 let's try this out no it's still just Co it okay so that's really weird is there something wrong with the unol state let's just try to debug this debug. log um test two see when it gets called and now we're going to see a lot of them so I'm just going to collapse them here no this is working then there's something wrong with with our code so if Play Once is equal to True db. log test and set Play Once equal to false then we down here whenever we jump uh we get the play once and we enable it to true I don't see what's wrong with this we can try and increase the delay just a bit more oh okay I see what's wrong now so yeah in the wait 4 seconds statement we need to do yield wait 4 seconds and it doesn't even throw an error so okay now things should be finally working and we don't need to be delay it by that much yes and now it will great so now it's working so if I uncollapse this and just get rid of this stupid test function remove the debug.log and let's change this to 0.2 instead and now when we hit play and this is amazing it works great Okay cool so uh yeah what we can do now is we are going to play sounds but the problem with unity here is that we only want to have one source on each object and uh and if we look at the ball right now there's already a source and there's only room for one audio clip so what you do is instead of having multiple audio sources you simply change out the audio clip and then play it so we need some variables for the audio clips and we need a system to change them out so what we're going to do is first off in our uh game master script no our ball Health script here is we want to take this approach because if we change out the um the audio in the ball control and then die it will just play uh the uh hitwood sound uh for now and that's not really something we want so let's just make it change it back again to the game over sound so we're going to do VAR game over sound and we're going to make it of type audio clip and that's all we need so down here where it says is restarting equals true right below that or right below uh above the audio. playay we want to do audio. clip equals audio uh equals game over sound perfect so now it will set the clip to the game over sound and we need the game over sound uh not to be empty so let's just find it here under game over cool so that was basically it for that script and that's what we need to do every time we need to have multiple sounds on one object so in our ball control if we uh go in here and uh instead of our debug.log statement we want to play different sounds so let's just make some variables for the um for the different sounds so let's first off make play play one private and then uh we are going to do hit one of type audio clip hit two of type audio clip and hit three of type audio clip uh a clip AUD clip okay great so now that the spelling is in place we can go down under the on Collis State remove the debug.log and in here we want to make it random uh which of these it uh it is going to play so we're just going to first off do the audio. playay so that we have it there oops and close it off and right above that now we're going to do a random Dot range so uh we are going to say VAR make a new variable call this uh the hit and make it equal to random. range and we're going to go from Zer to four because I'm pretty sure you need to have one more than what you want so uh Z to four and uh yeah so close that off and then in here we're going to say if uh and this is where you could make a switch statement uh but we're going to get into them later so for now I'm just going to do a bunch of if if statements so if the H is equal to uh one I'm pretty sure this is going to return0 to three actually so if the hit is equal to zero then we want to do uh audio. clip equals hit 1 else if the hit is equal to one audio. clip equals hit 2 and then the last one just else oops else audio. clip equals hit 3 cool and then it's going to play the audio so now when we save this out and head back into Unity we of course get an error so let's see random do yeah we meant random. range like that cool so now when we hit play We Should see it changing uh whenever we had something so let's see and it doesn't change well yeah it does but it changes to nothing cool so uh we just need to apply the different hits so first of hit one hit two and hit three awesome let's jump hit three hit three hit three we are getting a lot of hit threes here that's a hit one and hit three and if it can get hit three and hit one it should also be able to get a a hit two so I yeah that was the hit two so it's completely random which of these it's it chooses cool so now that we have that in place we can simply go ahead and um and uh change the pit a bit because the cool thing uh and this is a pretty cool tip is that Unity can can also change the pitch of a clip so what we can do is if we want it to sound a little bit random we can pitch it up just a tad or pitch it down randomly so we can do audio. pitch and then we can do a random range equals random. range and uh if we take a look at the pitch property here it goes from one to three uh or negative3 so the default is one and it goes to three and3 and we don't want it to be that much at all but we do want it to be something like 0.9 comma 1.1 just SOL pit changes and it's uh going to make it sound pretty cool and yeah so and then in the Bal Health script if you don't want this to be affected by pitch again what you do is you simply say audio. pitch equals one so that will just stay the same awesome so now when we uh jump we can hear different hit Sounds playing at different pitch but you might notice that the sound sound uh the sound sounds pretty pretty far away and the reason for this is that our wooden hits are still 3D sounds and we are not oriented through our ball sounds doesn't get uh played back through our Ball but instead through our camera and if you want this or not is completely up to you right now our audio listener sits on the camera so everything that happens over here sounds pretty far away so what I would like to do is just try out and uh remove the audio listener from the camera and instead select the ball hit add component audio and then audio listener so that now everything we hear uh will be played back from the balls perspective and now we can hear the sound much more clear and it will still be affected by speed and other variables so uh that's pretty cool and now everything we have set up in our scene when we have stuff like fire or something uh we will hear it from our balls perspective awesome at last uh man this video is already 30 minutes so I'm just going to quickly go ahead and do the do the music so is anyone even watching at this point if you're watching at this point I guess you are either some kind of Hardcore fan or just really really into Unity so either way I love you and uh let's continue so uh under our audio we want to select the relaxed music and uh we want to disable 3D sound and hit apply so this is just going to load all over again and uh it takes a little while this is the largest file in our scene and audio files are can be uh can get really big so watch out with those long Clips at least compress them before use and now in our GM object let's handle through the game master let's just hit add component and then audio audio Source under the audio clip we're just going to change this to relaxed music and just hit play on awake and also Loop because I've made this uh loop pretty nicely let's turn down the volume a bit and now hit play we can hear some relaxing music play playing and uh you can play around with the volume to make it fit the rest of the sounds but that was basic basically it for this video I hope you enjoyed it and I'll see you in the next one