thanks for tuning in at brakus hello one and welcome to video number five in the how to program in C sharp course today we're going to be taking a look at how we did last week's challenge and also add on to that and make it more fun by using a random number generator I'm also going to show you a new piece of conditional logic called switch statements which I think you're going to find pretty cool so as always have opened up xamarin studio here and this is what I've written out we're going to be using this code throughout this video so if you want to you can just go ahead and copy it off the screen and write it yourself or you can go to forum practice calm where I've created a thread we have pasted the code here so you can simply copy that and your program should work so and the link is in the description and if I'm not too lazy maybe even as an annotation cool so let me just quickly walk you through this code but first let's just try and run the program so it asks me what is 16 times 4 and I'm going to write 64 because I know that and then it's going to say well done your answer is correct if I write let's say 2 to this question it's gonna say are you even trying I know I was not so yeah let me just walk you through this and so you can get an understanding of how this works so we start out by creating two integer variables I call num1 and num2 and we set them to do two different numbers they could be the same and then we use console.writeline to ask the user what is num1 times num2 and then a question mark then we collect the answer using a console dot readline which we then convert to an integer and store in an interview variable called answer then if the answer is actually equal to num 1 times num2 we're gonna write out that the answer is correct and if not we're going to write out that it was not and then of course we await some user input so our program doesn't just suddenly close cool so that's the basis of our program but right now it's not really fun is it because I mean every time you run it you get the same answer so let's try and randomize this using a cool class that is included with seats the csharp language called random so just like we have a class here called main class which we've made and inside of that we have a method that does all different kinds of stuff I mean this method does math problems just like we have this main class the csharp language has a class called random an inside of this class it has all kinds of different methods that does different things with random numbers such as generate a random integer between a min value and a max value which is just what we need so what we need to do is we need to reference this class we need to do what is called create an instance of the random class and that all sounds pretty complicated but it actually is not too harsh syntax wise so let's try and write out random and you can see that it shows us a public class called random then we're going to give this a name we're going to call this the number generator and we're going to set this to a new random and you're going to have to open and close the parentheses here and then the semicolon so that's the syntax for creating an instance of a class it's an instance of a class because we are treating this just like an object basically just like if we would spawn something in the game here we're just spawning sort I say a class can do different things and we are calling it a number generator so let me just show you what you can do with this if you don't quite understand what what this line does it's completely okay but you can actually do some pretty fun things with it no matter if you understand it or not so let's instead of write 16 here let's write number generator dot next this is the function that returns a nonnegative number that is of course random and that is an integer so if we just open and close the parentheses here we are going to assign a random number to the number 1 but let's say that we want this to be within reasonable boundaries because I mean we are not so good at multiplying numbers with let's say 10 decimals or 10 digits so let's instead make sure that this random number can only be between 1 and 10 so I'm going to start out by writing 1 and that's because this function main value is what is called inclusive that means that the first number you write is going to be included then I'm going to write comma and you can see that it asks for a max value and for this I'm going to write 11 and the reason why is that the max value is what is called exclusive which means that the value itself is not going to be included only the value right before so this is actually going to do 1 through 10 so I'm just going to copy this and replace the 4 with this and now we actually have a random number random number generator that will work and now our program should be a lot more exciting so let's try and hit play here and you can see that it asks what is 4 times 8 I'm going to do 8 16 and then 32 and you can see it sells well done your answer is correct cool so that's how you make sort of a a small game you can of course make this into a loop so it will just continue on infinitely and and then you are pretty good to go cool so what I wanted to show you now is I want to show you another piece of conditional logic called the switch statement so we've always ready looked at the if statement that compares things basically checks if a condition is met and if it is it does something then we also have the ability to say that we want to do something if it it's not or we can check for a whole new thing but what a switch statement does is it handles really well if there's a bunch of things that we want to check for in one variable so let's say that we have a number a random number generator that makes a number between 1 and 10 and depending on the number we want to do different stuff well we could write if one then do this else if two then do that else if 3 and then on and on and on or we could just use a switch statement which basically is easier to read and is much less syntax wise and that's the standard you could do a failsafe failsafe but really you should be using an if statement so we could use this to maybe let's say make different answers depending on a random factor so let's say that we answer wrong then we want to write different messages at random so it's not going to say are you even trying every time we do something wrong let's randomize this a bit and give multiple different responses so in order to do this we are going to make a new integer inside of this else statement so we're going to make an int and we're going to call this response oops responds index and we're going to set this to number generator dot next and let's just do let's do 3 responses so let's do run 1 through 4 which is going to be 3 and what we can then do is we can go ahead and make our switch statement so this is how it's going to look it's going to say switch right here and then just like and if we are going to open and close parentheses and inside of those we are going to put in with the response index so now we can do stuff depending on what the response index is equal to you can do the same with that say string values if this was a string you can do the same with the switch but for now we're going to be using an integer because it works well with the random number generator so switch response index and then we're going to open up and close some brackets just like the if statement and this is where it becomes just a bit just a tad different so we're going to write a case and then we're going to write the the value of the response index that we are going to then do something with so let's say the response index is sequel to run then we're going to do a colon and down here we can then write what happens if response index is equal to 1 so if it is we're just going to type in the are you even trying and then we're going to do a break it's very important that after every case you inside the insert the break keyword this is simply going to break out of the switch statement so we can continue with our code in some cases you're not going to do a break here but in this case you are we might get into what the break tag actually can do for us in another video so let's do some more cases I'm just going to write another one here I'm going to call this case and for this one let's do cancel that red line the answer was incorrect and then I'm going to break again and instead of writing case three here which we could do I'm going to write what is called a default case so that means that if none of the other cases are met we're just going to resort to the default this is kind of like the ELLs in an if statement so let's write default and then just a colon and we're going to write console dot write line and we can type you can do better than that and then we're again going to break out of the switch so that is basically all the code we need in order to give random responses back to the user and this is going to make all the different programs that you're going to write a bit more exciting of course this is not an effect that should be overused but when our program is as simple as this it's it's great to do and of course switch statements can be used for much more than just this so now we're actually ready to go ahead and hit play so when we hit play here I'm going to purposely type a wrong answer I'm going to type 2 and it says you can do better than that let's try with some more let's type 2 again here are you even trying let's see if we can get the last one you can do better than that maybe the answer was incorrect so that was basically it for today's video I'm just going to quickly go ahead and give you a challenge for the next one so if you feel like switch statements are kind of difficult still all I want you to do is create a switch statement pretty much like this one but in here that will give different responses when the answer was recked if you feel like you've completely mastered the switch statement already what I want you to do is compare the answer that the user inputted with the correct answer to then determine how close the user was at answering the question correctly and then give a response based on that again it's up to you what challenge you want to complete I hope you can figure it out and thanks for watching I'll see you in the next video