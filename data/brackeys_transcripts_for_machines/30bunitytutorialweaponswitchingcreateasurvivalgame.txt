hello one welcome to video number 30 Part B in our survival games series done by practice I'm the CEO Blackie's and in this one we're going to continue where we left off in the last video so basically what we did last was we made sure that all of this um all of this with the current weapon variable being adjusted using the scroll wheel and the input get button down we we took care of all of that so that is working and now we're going to move on to the part where we are going to enable and disable the weapons depending on that variable and we're also going to make sure that the animations will match the weapon we have equipped great so as always I've opened RB unity and so here we are and our script is attached to the melee object and if we just go ahead and open it up let's write some more code so under the function select weapon that's really just empty but we are calling it at the right time so we are calling it whenever we change something and I just want to go up to the top under the function awake and type select weapon zero so just right when we start out the game it will make sure that the first weapon is selected so that they so that one will be okay so now we are going to write the logic that will go through all of the channels of the melee objects or all of the weapons and it's going to check with the index with the current weapon and and see if if that's the weapon we want to have equipped it if it is it should it should enable it if not it should disable it okay so what we're going to do is we're going to use a new type of statement this is what is called a for statement and what it will do it will it will call a piece of code for every child attached to the mealy object and I'm not going to go into exactly how what all of these signs meet mean because we are going to be using many lists and arrays when I explain the inventory system and so we're going to go more in depth with it there but for now let's just type 4 and then start parentheses var i equals 0 semicolon I is less than transform that child count semicolon I plus plus and this is really just a bunch of symbols but just type after me for now and I will explain it what all of this means in another video ok so here we're going to activate the selected weapon so type if open our parentheses I is equal to index so whenever we go through this if the child count it has assigned is equal to the current weapon then we want it to be enabled so open up the bracket keys and then we could just type transform dot get child I that game object that said active true and this will indeed enable the object are you enable this object so it will enable the selected weapon object because it will find the child of the transform using the eye and it will then use the game object to set it active but we want to also check whether or not it's a weapon or what kind of weapon it is so that we can have different animations play but we're going to do that in just a sec for now let's just type LS so open up some brackets and inside of here we are going to type transform that get child I dot game object that said active should be false and so if the if the one that we are going through we are iterate iterating through is equal to the current weapon it will set it to active if it's not the one we're looking for it will disable it now we can go inside of our if statement and type out the logic checking if it's a fist weapon or if it's a a weapon we want to swing so type if transform dot get child I that name is equal to fists so I'm going to have a separate weapon which is just going to be an empty game object since we don't need anything to spawn into our hands they are already there and that it's going to be called fists and whether when every that's what we have equipped so when that's what we are have selected and what we are using we want the weapon on variable inside of our controller to be false so that the hit animations will play so that's what we're going to type now so if transform that get child ID name is equal to fist we want the animator which is the variable we set earlier dot set pool for boolean to be weapon on so if we want to access the weapon on variable , and we want it to be false so this is how you access different variables in a controller using mekin 'm so we have the animated controller let's actually just take a quick look at that so inside of our arms folder we have the arms controller and if we double click it we can have a look at how it looks so we have the different animation setup and you can see this in previous videos and basically we have the weapon is on parameter which allows us to define whether or not we want to swing or hit or punch something whenever we attack um and this is the parameter or the variable we are going to access and that's done using this quote so the animator that set boolean weapon on should be false else if it's not the if transform duck a child I that name is not equal to fists then we want to type the animator that set bull weapon on should be true because then it's a weapon and you can do this with any kind of weapon you have it could also be if it's a dagger then uh it is stacker it should be true else if it's sword then sword should be true and and so on you can you can keep on making these adjustments so that your animation will always stay uptodate with the weapon you're using ok cool so now if we save this out we should hopefully see this working and I will just leave making them open so that we can quickly see whether or not our weapon asan is changing so when we hit play now we get an error and that's because we need to assign the animator so you can see it's slowing down and that's because we have an error in our script so if we could just get unity to behave let's see looks like it's crashing I'll just quickly pause the video and return okay so I got unity back up and running and you can see that we got the error here unassigned reference exception the variable the animator of weapon switching to test has not been assigned so we just that just means that we need to assign the animator variable and all we have to do here is really just find it in our project pane and drag it on to the animator variable so I'm not in the project pane but under the arms so we just select our melee object and drag the arms on there and we'll it will automatically find the component attached and so now when we hit play and make sure we can see our making them controller here we can use the scroll wheel to scrub through the different weapons and right now we don't have the weapon asan turning on anywhere since we don't have the fist object traded yet so if I just quickly go ahead and for example drag the axe out of here so that we'll just have it disabled over there and instead make a new empty game object pushing controlshiftn or command shift then if you're on a Mac renaming this to fists drag again under the melee object changing the position and rotation to zero to make it centered on the melee object then we will also be able to now equip the fists weapon so when we hit play by default the fists will be on and we can scrub through that we are getting an area called weapon is on or weapon on does not exist that's because we need to type weapon is on so weapon is on there and weapon is on there and now when we hit play go and do the animator we can see that our hands are open whenever we don't have anything equip to them and when we then equip the weapon we can see them closing and that means that it will also play the correct swing and attack animations depending on whether or not it has an AH and weapon attached and if we want to say increase the maximum number of weapons so we can include our axe or we have to do is bump up the max weapons quickly do this in code also so it will be automatically included in the assets pack and then make one more of these if inputs so here we go four and A three and now we can have more weapons inside so that's really all you have to do to adjust how many weapons you can have I'm just going to quickly undo this and so don't really want it to be included but that was the general idea and let's just bump down that again so that's really cool and if we want to see this actually working in real time inside of the animator all we have to do is get rid of rid of the annoying mekin embarque by hitting apply real motion and now we can see the weapon is on is false we can see the idle playing and when I then scroll up we should be able to see whoops looks like I went too far back in history here so the weapon is on there we go and now it should be working so let's hit play again you can see the weapon is on is false the idle is playing when they go up select the weapon the idle with weapon is playing and the weapon is on and so it will shift back and through correctly so that was pretty much it for this tutorial guys I hope you enjoyed it and I'll see you in the next video