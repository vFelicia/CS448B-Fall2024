hello everyone in this large stream recording we are going to have a look at creating a falling word typing game and we're going to create something along these lines here as you see here if I hit play we see these words falling from the top of our screen and we have to type oops we have to type them out before they reach the end in order to win or else our game will punish us so that is kind of the base of the game it's just it's just plain typing and of course we generate random voids you can do plenty of stop stuff with this like yeah two more words you can have words explode into other words you can create cool effects when typing and destroying words you can make different kinds of punishments when you type the wrong letters or if the words reach the bottom of your screen there's so much stuff that you can do with this it's a really fun simple game and it's actually fairly hard to code also if you're wondering about the Hat if you're watching this when it's not December I'm sorry but it's currently December so that's why the Hat is there I wanted to bring it on and this game is inspired by many games of this type but especially this one that I really like called Z type so it it does basically the exact same thing but the cool thing is here that they've added some effect so every time you type a letter it shoots out its gun and that's just really fun so that's an example of where you can take this very easily they use pretty much the same backend code as what I've done here so just a proofofconcept to get your site started but that's an example of where you can take it from here and without further ado let's get into it so let's go file new project and here we're going to write let's call it something like word falling falling falling word typing game best description of all time and that will hit 2d and hit create project and unity is going to load up a fresh project for us so meanwhile we can have a look at some some questions in the chat here if we have anything pressing one that I do want to mention oh look it's working but one thing I do wanna mention is unfortunately I wasn't able to participate in this month's or this previous Durham DeRay I really wanted to but I was at Dreamhack so I was prevented from doing so but I definitely want to make a small game soon my oh I just I just really want to do some programming um not for a tutorial just for fun so hopefully I'll do something soon if I get the time but now our unity project has booted up so we are going to continue with D totaram first thing first I'm going to select my main camera and I'm going to change the background to kind of a dark color we can go do black we can do a dark green if we want it to be kind of matrix like it could be fun let's do that and let's save the scene right away here under main so that I can hit ctrl s without it popping up next we could go ahead and sketch out a canvas and a text element and kind of make that look great already however that's not really the base of our game what I ended up doing was actually creating 90% of the code in a nonvisible nonunity specific way and I think that works really well for this game because all we are really handling is words and words are very simple objects they are in essence just strings and when we need to display them all we need is a text element so it's really really simple to create this inside of unity so let's instead begin by kind of sketching out the structure of our program and then start showing it using unity so we'll go ahead and first of all create an empty object and we'll reset this inside of unity and we'll call it all word manager and this is where we'll add a component called word manager of type C sharp let's say create an ad and let's open it up in Visual Studio and the first thing that we want to add to this script well we can go ahead and delete the start and update methods but the first thing that we want to add is a list that will contain all of our words now we haven't gone ahead and created a word class you could go ahead and just use a string here but I actually want to define these words as classes so we can have each word be responsible for um different things such as removing letters checking how many letters are left and yeah just keeping track of how much of the word we've currently written so that's why I want to go ahead and create a separate class for this that will create in just a second and we'll just call this list words I'm also going to make it public so that we can see it in the inspector and so that we might be able to edit it through script later now we can save this and we can go into unity again and let's this time create a csharp script just inside the project panel because we don't want this to sit on any objects we just want this to be the word csharp script let's open this up in Visual Studio as well come on there we go and this here we don't want to derive from monobehaviour again we don't want this to be a component we just want this to be a class therefore we can also delete both the start and the update method and we'll also make sure to mark this class as system dot serializable so that all of our variables will show up inside of the unit inspector and the main variable that we want to create here is a public strength and this is current of course going to contain the word itself we'll also create a constructor so public word and a constructor is something that I haven't used that much in my tutorials basically what it is is a way to define what happens when our class is created so when we create a new word object our constructor allows us to set up initial variables and do kind of yeah set up stuff so one thing that we could do here is allow ourself to pass in a word so I'm gonna write underscore word so we don't confuse these two and then inside of our constructor we can set word equal to underscore word this way when we go inside of our word manager and if we in here were to just create say a start method we can now create a new word and call it words by setting it equal to a new word and then we can pass in a string say example there we go and we don't have to create the new word and then afterwards go word dot word equals example so it's just cleaner cool and for some reason this is not kind of recognizing that we've created a word script and I think all we need to do is restart Visual Studio and that should work once more let's try that so open studio here and we should see it recognizing the fact that word is a thing cool so now inside of our word manager we can add some more functionality the first thing that we want to do is add a new word to do that we'll create a start method and inside of our start method we'll just begin by adding a few words let's just start by creating three words of course we need a method in order to create these words so we'll create a public board add word and in here we'll create a new word in the way that I just showed it's a word word equals a new word and now we can feed it in a word such as again example however we don't want to feed it in a word that is predefined we want to use a random word and therefore we need to create a random word generator so inside of unity will again go to the project hit csharp script and create a word generator and let's double click this to open it up English is studio as well again oops don't do that again we want to delete both of our methods and inside of our word generator we basically want to have some kind of public static string called get random word so this is basically just a static method that will return a random word of our choosing and in order to get a random word we could of course have a look at creating our own words from scratch if you don't want it to be some from the English language or you could simply use a very very long list of words you could take words from a dictionary you could create your own huge text file with a bunch of words that you get a random one from and this is actually fairly easy loading data in from a text file in unity is actually not something that has to be incredibly hard but the absolute easiest way is simply defining a very very big array that we can get a random word from and I've actually done this so let's go ahead and write private static string let's mark it as an array and we'll call it all word list and the way that we create this word list is basically by opening and closing curly brackets we'll end with a semicolon and in here we can then write each word so word one word two and so on and this is the syntax and I've gone ahead and created a whole list of words using this syntax that I'm just gonna copy in from my secondary monitor here so you can see I have a bunch of words like sidewalk jump pretty wood and so on and you can add as many words as you want here or delete as many words as you want so I'm just gonna save this and I'm also going to show you where I got these words from because I'm not that creative and coming up with cool words to use I actually just went to Chrome and search for a random word generator and this site came up random lists comm slash random works and in here I could specify a quantity so a amount of words if we type in 50 here and whether or not I don't want duplicates I don't want that and then hit refresh you can see it gives me 50 words and if we now simply select all of these hit copy and paste them into some kind of text software so I have sublime here you can see it pastes them nicely one add one word per line so you could easily save this as a text file and load it into unity or format it in the same way that I've done here totally up to you again I will have these words available for you as part of the project on github if you want to download it so yeah but for now you can just use your own placeholder words cool so let me just see if everything is cool with the here awesome things are going according to plan I think except for the the Hat maybe that was kind of improved but that's alright and yes this is super hard coding but it works so that's alright so now when we want to get a random word all we want to do is just get a random element inside of this string away and the way to do that is by first getting a random index so the number associated with one of these elements will create an integer called random index and set it equal to random dot whoops random and now it doesn't autocomplete here but I'm sure that this is correct random dot range and we want to get a number between zero so the first index is zero that Sidewalk and then the length of our array so that's going to be word list dot length then we will take this random index and use it to find a word so our string random word will be equal to our word list and then we use the index random index cool and then we can simply return a random word so now inside of our word manager instead of just hard coding in a word here we can get a random word really easily all we need to do is write word generator word generator and for some reason again it isn't registering here but we have to do dot and then I think it's get random word yes dot get random word and open and close that so if we now save this closed down visual studio once again to get our autocomplete back here if one of you guys has to trigger other than just restarting Visual Studio for this that would be really nice it's been acting out today and now you should see that yeah this looks fine and instead of a word magnitude now recognizes that we can go where generator dot kid rate word so now we are adding some random words and we can actually just go ahead and maybe debug that like these to show them in our console so we're going to throw a debug deadlock with our word dot word if we save that go into unity and I think we can just go ahead and hit play here we should see three random words pop into the console awesome and inside of our word manager we still see an empty list and that's because we now need to take our word that we created and add it to our word list and that's to be easy all we need to do instead of actually let's keep the debug the block here but all we need to do is go words dot add I mean then feed it in our new word and now we should see that if we play the game inside of unity and wait for it to compile here three words get as it gets added to our array jassie floor and scarves awesome and you'll get of course three random words each time you play so that's it for adding words however we don't have any way of registering what we are typing and we have we don't have any way of kind of removing words so next let's create a public void called type letter and here will of course take in a letter so this is going to be of type char or character will call it later and we want to do some checking here so the first thing that we want to do is define an active word so in my demo I basically just went ahead and said the first word with the starting letter that you type will from here on out be the active word and all letters should type from there will only be checked against that word so you basically just select a word by typing the first letter in the word and that's what we'll do here let's go to the top and let's create kind of an active words so let's do private private bowl has active word and it's also do a private word which will store the active word then down here when we type the data we will check if has active word so if we already have an active word we can go ahead and check if the letter that we typed was the next letter in the sequence and if it is we want to remove a letter from the world so check if letter was next remove it from the word if it was not so if we or if we don't have an active word well then we want to check if the letter that we typed is the beginning letter in any of the words on screen so we want to loop through all of our words so for each word which we'll call word in our words list we want to check if the word and then we want to check if the first letter in the word we can of course the word dot word and then get the first character in the string and see if that is equal to letter and this will actually work but it's not pretty I think a better way of doing this is by going into our word here and simply creating a function that we'll call public char get next letter so this function will return a character which is the next letter in our word so we haven't removed any letters in a word this will always return the first letter so here we can simply return word and then in the beginning this is going to be 0 next it's going to be 1 then 2 then 3 so we need some kind of index specifying what letter we're currently looking at in our word or how many letters we have typed so far and we'll do that up here we'll create a private integer called type index and we'll default this to 0 so inside of our constructor we'll set type index equal to 0 then when we get the next letter we'll simply return word to the type index which will start off at 0 so now inside of our word manager we instead of doing if word that word to the 0th is equal to letter will simply do if word dot next letter is equal to letter and if it is well then we want to go ahead and select or mark this word as the active board so we'll set active word equal to this word we also said has active word to true because we now we have an active word and we also want to go go word dot type letter so we want to remove the first letter we want to type it out to do that we'll need to create another method so we'll do a public void called type letter and let's see here all we want to do here is really just increase the type index and then we want to remove the letter on screen but we'll do that later when displaying it all we need to do right now is just increase the type index and our system will understand that this letter has been typed let's save that let's go into a word manager and at the very bottom here we simply want to break out of our for each statement this will make sure that as soon as we find a letter and set it active we don't go ahead on and search for more letters start or more words starting with the same letter and also said those to active that will lead to some very weird behavior so we'll make sure to put break here and so it will exit out of our for each so if we actually find an active word all we need to do all we need to do is check if the letter was next so if word dot get oops if active word dot get next letter is equal to letter the same check that we do down here but now we check against the active word if this is the case well then we want to go ahead and type it so we can simply do active word oops active active word dot type letter and there we go and finally we can go to the bottom even check if we have an active words so if has active word and and active word dot word typed or is complete or something along these lines so if we've tied the type the entire word here well then we want to set has active word to false and then we want to remove this word from the lists of words that remove active word so we put this in here just to make sure that if we finish typing the word we mark it as non active and we remove it from the list we also all we need to do to do this is go and make F method for checking if the word has been typed through and that is actually a very simple thing to do all we need to do is go into our word create a public pool called word typed and here we'll create a boolean called word typed set it equal to and now here we need to make a check we want to check if type index is greater than or equal to whoops greater than or equal to word dot length so if our index starting at 0 has been increased enough times that it has that it is now equal to or greater than the length of the word all of our word has been typed and so word type will be true if not this will be false and then word type will to be false so if word typed we can go ahead and remove the word onscreen again we won't do this yet and then we can simply return all word typed variable so that we know instead of our word manager whether or not it was typed cold so I believe this should actually work now I don't think we'll get any errors hopefully yes awesome and if we hit play let's see what happens so we get crack rely and homely and if I have a look inside of my word manager here and type in crack nothing happens all right so this is interesting nothing currently happens let's see what we're doing right or wrong here so of course we aren't trip triggering our type letter now this function will totally work but we aren't setting this up to our keyboard so the next thing that we want to do is create a script that will actually call this type letter function and before that we do that I just want to have a quick look in the chat chat to see if everyone's following I know this is very programming intensive especially compared to some of the other live streams but I think it's it's pretty neat and it's always fun to try and take an another approach than the usual unity approach because this is not kind of how you would normally go about creating something in unity normally you start with game objects and components and you try and kind of work your way through without doing any scripting and then when you really need to script something you go and add a tiny script that does only what you need and not more but here we are actually coding kind of an entire structure for a program and then later we'll just be adding unity on top to kind of display everything so awesome to you guys who are drawing enjoying the Hat I hope you guys are feeling nice and are able to follow along looks like it that's awesome and so those of you who are asking if this will be on YouTube of course it will always is it will be up this Sunday cool so next up let's trigger this type letter function so that we can actually see this stuff working to do that we need to go into unity and we need to create another script on our word manager and this one will be called word input again csharp create an ADD let's double click it to open it up in Visual Studio and we want to read out the solution here cool and here we'll use a very very simple function that not a lot of people know about we'll use it inside the update and it's called input dot input string this basically as it says here returns the keyboard input entered this frame so basically if you just slam your hands on the keyboard this is going to show all of the characters that you typed that frame and the cool thing for us is that we can loop through these as individual characters to make sure that we get them all so that if you type multiple characters in one frame we will catch them all and insert Pokemon pun here so we basically just want to go and loop through them using a forage loop we want to look at each character which we'll call later in our input input string and for each one of these we want to access our word manager and type out a letter so for now we can maybe just do a debug deadlock to see that this is working and we'll just debug that lock out the letter on that we're looking at if we save this go into unity and play it will of course debug the lock are three words and then if I try and write test weensy it te s T so it's working awesome and if I just slam my hands on the keyboard whoa okay something happened I might have hit something that I shouldn't you can see that it gets all of the keys and I wasn't actually able to get multiple in a single frame or maybe I was and it just split them up but we do get all of them even if I press multiple keys simultaneously so that is pretty cool and I need to reopen all of the programs that I just minimized so now we can go and create a reference to our word manager we will create a woops caps dog is on a public word manager and we'll call it word manager and we'll just reference this through the inspector then in here we'll access our word manager and we'll go dot type letter and the letter that we want to type is the letter that we are looking at if we save that go in to unity and hit play we should now see that this function gets called and let's check if we select our word manager and I try and type out the word sambar we get a null reference and that's because I need to reference this boom there we go okay let's try this again and I try and type out the word awesome and it would be pretty awesome if it now works ah some boom it's removed from the list so if I type out the word correctly it gets removed from the list also if I type start typing mellow so I'll type an M and an E and then try typing you a bunch of times an A which is not in the word nothing happens until I type the ll and the O and W and now it gets removed from the list so you can type anything that you want but you can only proceed by typing the correct character and that's what we want you can of course add penalties if you don't type the correct stuff reduce your score or maybe add random words when you type the wrong thing but we now have a way of differentiating between the two super cool so the next thing that we want to do is probably allow ourselves to UM see the words on screen so let's go ahead and make these visible and this is kind of the unity part of this tutorial so we'll go inside of our hard can rightclick we'll go UI and we'll create a text element and by default the canvas here is going to be fitted to screen space I want to change this to world space to make our units more manageable and want to change the scale to point zero one five or something along these lines point zero one five on all the axes that looks pretty decent and I want to scale it up to fit most of our world screen here I'm also going to take our text element that we just created and center it by holding down alt and pressing in the center here I'm also going to scale it up on the font size to something like 24 I'm going to Center it both horizontally and vertically and change the color to a white now we can see it pretty clearly let's call this a test word and we can now see that we can easily move this around the screen and have it fall down if that's what we want it but a very nice thing that we could have on this object is a script that is kind of responsible for displaying or text let's create a separate script for this we'll call it our word display again that's the next C sharp hit create an ad and it's also rename object here to word and let's then drag it into our project to create a prefab out of it and remove it from our on scene so now if we double click on a word display we can go ahead and sketch this out so the first thing that we need at the top here is a actually we don't need to start an outtake here we might need update at some point but not start so let's create a public reference to our text element so public text however whenever we're dealing with text we need to be using the correct namespace so up here we'll import Unity engine dot UI because text is a UI element so we'll create a public text we call it text and then we'll create a public void that we'll call set word and this will take in a string which is going to be the word and all this will do is simply set text the text equal to the word passed in then if we save that and go into our word here this is where we actually set up our word but we also need a reference to a word display in order to be able to access our set word method so let's have our word manager kind of set this connection up whenever we add a new word we could simply you know create a reference to or we could instantiate a prefab our word prefab that we just created we could get the word display on script on that prefab and we can then feed it into our word so that a word always has a reference to a word display let's go ahead and do that let's create a public word display variable here called display actually let's make it private but then inside of our constructor we can we can also allow it to pass in a word display so word display and we'll call it underscore display and then down here we can go display equals underscore display just like we do with our word so we pass in a word as a string and our display component and then right after we can actually access it and go dot said word and we can simply feed it in our word so that should work now however we of course still need to set this up inside of a word generator or a word manager I should say so here now it's complaining that we're only feeding it in a string which is a word we also need to feed it or display excuse me so to do that we first need a way of spawning in our object and I actually want to do this in another script so let's go to our word manager that's it a component and let's now create a word spawner that's right I want you that we needed to create a lot of different scripts but I think this makes a lot more sense when we split it up in this way because otherwise we would just end up with a two kilometer long script and that's not something that is really desirable for anyone so let's open up our word spawner as soon as unity kind of recognizes that I'm doing things come on unity read out the solution that might be what it was waiting for it was so inside of our word spawn and now we can create a public void called spawn word and in fact we do not want this to be a void we want this to return a word display so that we can access it from in within a word generator so that we can access it from it within a word so that we can call a method on a word display I know this is crazy but it does work and it is actually a fairly decent way of going about it so now inside of our spawn word method we of course want to spawn in so we want to instantiate our word prefab to do that we need a reference to a word prefab so public game object word word prefab and we then instantiate our word prefab as well as get a reference to it to the object that we just instantiated we'll call this our word object we can then use get component on a word object word object get component to get a word display we can store word display inside of a word display variable called word display and finally we can return the word display there we go sub we've now created the object we've created a word prefab we've gotten the word display component from that prefab and we've returned it so that now inside of our world generator or word manager we can create a reference to a word spawner so public word spawner word spawner and here we can go word spawner dot spawn word and we can then retrieve the word display from that spawners of word display and we can feed it in here or we could just do very simply word word equals new word where we get a random word and we spawn in a word prefab as well as feeded the display on that prefab so now we're simply giving it two arguments which are basically functions doing a whole bunch of stuff but we are we aren't doing it inside of the script we're doing it in separate scripts which just looks really nice so we're feeding it a word and the display on a prefab so that's one way that you can kind of link an entire system of or game system to unity in order to display stuff if we now save this and save everything else we should actually I don't think get any errors and I think it was will work in some capacity so if we go and select our word manager we can drag in our word spawner boom to link those two up we can take a word prefab and drag that into a word spawner and now when we hit play it's not going to be pretty but something is going to work and we also get a null reference exception and that is because we haven't hooked up so inside of our word prefab we also need to feed this our text we could also just use K component for this which is probably better but we aren't kind of a tight time schedule here so we'll just link it up manually but now if we hit play we can see the two work the three boys are encouraging interrupt and cut and if I see here I have three words one is showing cut what is showing interrupts and the third one is showing encouraging yes see now that's encouraging because that means things are working we aren't currently seeing it on the screen there and that's because our words are currently not within our canvas we need to parent them to our canvas because everything inside or all UI elements need to be inside of a canvas in order to be drawn to do that all we need to do is get a reference to our canvas inside of a word spawner so we'll create a public transform and we'll call it our word canvas then when we spawn it we want to set the parent to our word canvas and that should actually be it so if we now hit play oh we need to reference this domain under our word manager we need to drag in our canvas as the word canvas and if we now hit play we should see yes there the three words are we have feel mark and verdict boom that's awesome and I can go ahead and write these words I can write feel and it will disappear from the list but it currently won't disappear from the screen and also they're currently spawning at the very center on top of each other they aren't falling there currently is lots of stuff to add but the hardest parts of this system is definitely over with now it's just about adding detail because that's really all that this is is kind of detail so the next thing that we can now do is hook it up so that when we are write a word we also remove it and so that when we write each letter that also gets removed to do that we just need to add a tiny bit more functionality to our word display so now we can set the word directly but we also want to be able to remove a letter and to do that we simply want to go text a text equals text text dot remove we want to go start at the first letter and only go one letter forward to only remove the first letter we can also set text dot color equal to colored red to show that whenever we are removing a letter on a text object this is what we currently have focused we can also add another method public void remove word for when we are completely done with the word to you that will simply call destroy game object and that should remove the entire word if we save this now and go inside of our word script we can see inside of our type letter function we want to remove a letter on the screen we've already put that here so we'll simply access our display and go dot remove letter and that should be it and inside of our word type we want to remove the word on the screen so here we'll go display don't remove word and that should also be it so now if we hit save and hit into unity and hit play everything that we need should be set up and we should actually see this working of course I will just separate these out real quick so we can see them and I'm gonna write D a F F Y and it disappears from a scene the same thing with three and the same thing with painstaking there we go so now we have actually synced up our code our actual gameplay code with these display elements and that was kind of the hardest part because now it's just a part about adding different spawn positions about configuring how they fall about adding point scores and all that stuff we can definitely go in and just add a tiny bit of that but first let me just check the chat here to see if everything everyone is doing good and just let me check if the signal on the broadcast is still up yeah okay cool I don't get any feedback when I'm programming that you guys are still here is there kind of just you know stop pretending that I'm the only one in the room and things get kind of weird when I realized there are 300 people in here so good to see that you guys are still here I just needed a reminder and yeah one guy in the chat is saying to use text mushroom I couldn't agree more if you want to create this game yourself don't use unities builtin text use text Metro I have an entire youtube video dedicated on the subject that you should definitely check out it renders text much crisper more performant gives you more layout and styling options it's just better in every single way and it's been adopted by unity so you can get it for free text mesh it's awesome I just didn't want to spend time with it here because I've shown it so many times already yeah awesome cool yeah look at we'll get going again so um I'm just gonna bring up my stuff here and yes the next thing that we want to add is some proper spawning to do that will go inside of our word spawner and maybe randomize the position of our words a bit and you can definitely do this using spawn points if you want you can do a roundrobin you can randomly select spawn points or we can just choose a random position through a random number generator I think we should actually do that I didn't do that for the demo but let's try and see if we can work it out I've which is always the worst decisions I make is when I try and add something live but let's do it so here we're going to get a random position so vector3 random position I've set it equal to a new vector3 here we'll want to feed it an x position and this is what we want to be random some some kind of random x and a y which we're going to set to something like seven tall and the random x position is going to be random dot range between I think something like two negative two point five and oops to 0.5 and positive two point five and I think that should be within make sure to make the F is there the FS to show that it's the I think that should be within the range of our screen of course that's going to depend on how wide your screen is and really when it comes to spawning I have so many tutorials on how to create timebased spawners wave systems all that stuff just search for brekkie x' spawn or wave spawner there's so much information there that you can check out but here we're just getting a random position and we now use this here so spawn it at the random position and at quaternion dot identity which means no rotation at all so now we can save that go into unity press the play button and we should see that our words spawn at random x positions right above the screen that's perfect now all we need to do is go and select the words so under word display there we can move them so in here we'll go void update and inside of an update will write transform translate in orbit moves not transform Direction to translate in order to move them a tiny bit each frame and we want to move them downward so zero on the x on negative something on the Y and here we'll give it some kind of fall speed multiplied with time to tell to time and then zero on the Z and then we'll specify fall speed up here so we'll create a public float fall speed and set it equal to let's try what have no idea and let's save that and go back into unity and hit play and maybe it works it does so analyze pretty whoops oh I selected a peril there now pretty perfect cool or parallel what's the word so now they are falling and we can actually give them random fall speeds as well if you want simply go to the top here create a start method that will randomize the fall speed just like we did with the xaxis there's so much stuff you can do guys I'll leave it up to you the last thing that we want is a to create a spawner the kind of works on a fixed timer and it would actually be really nice if words spawned faster and faster so to do that instead of spawning three words right at the beginning inside of word manager here we'll simply remove this start method and we'll create another yes you guessed it will create yet another component another script here that will call word timer again csharp he create an ADD let's double click it to open it up in Visual Studio and this is actually going to be really really really simple all we need is a word a public word manager so we need a reference to a word manager will then create a public float which we'll call our word delay and by default we can maybe set it equal to 1.5 and we'll also create a private float which will be the next word time so this will be the time after we start the game that we want to spawn the next word and by default we just want to spawn one right away so we'll set that to zero will then create a void update method and in here we want to check if time to time so if the amount of time elapsed since we started the game is greater than or equal to the next time that we wanted to spawn a word well then we can go ahead and spawn a words or word manager that add word as well as set our next word time equal to the current time plus o plus a word delay boom and we can then of course to make this or to make the delay decrease as time goes by so make word spawn at a faster and faster rate we can simply multiply this with some value that is this than one so multiply this with 0.99 and now if we save this and go into unity and make sure to set up this reference so here we need to drag in you need to drag in and I'll have a sip of tea here as I feel my throat keeping up with drag in our word manager we'll hit play and now ladies and gentlemen we will spawn one word at a time and they will fall and they will fall edie or they will spawn at a faster and faster rate awesome so now we actually have a game and I'm gonna see how far I can get here actually let me maximize this real quick just to make things look cooler not that this is the most beautiful game ever created but it works and you can see what you can do with it PI's love periodic PI's mute dangerous wish me luck guys and we can actually right now we don't have a score implemented but what we can do is I can pause the game right after woops I cannot do this while speaking right after I'm done to see what our current delay is that should indicate how long we were able to go numerous jazzy starts to get hot now heart not hot distinct Rin and site yeah that's it alright so I was able to go while speaking maybe not the best of performance is until the word delay of about point eight so there you go and you can see this decreasing for each word that gets spawned and of course we don't have a penalty right now when they reach the end of the screen all you would do here is simply give one of the or some of the words a box Collider and register it using a trigger or you could simply check their positions and see if they reach a certain point well and game over or penalties or whatever and make sure to select another active word there's so much stuff that you can do but that is everything that I wanted to show for this video awesome phew that was actually quite a complicated one because it had so many so many systems and I had to kind of keep track of all of them in my head while explaining why live streaming and yeah I think I overloaded at some point but I hope at least some of this was coherent to you guys and that it could help you a tiny bit I really hope so and also the hat really worked without it I wouldn't have been able to do it so like the tutorial and that's basically the game for now and we're going to switch over to a on chat format where you can ask all the questions that you want so I'm going to switch to the chat here and you can get a closer look at the Hat I know fancy and I basically had this for so many years I'm really surprised it still fits on my head I guess it was a bit too big when I got it so yeah guys ask questions I'm here to answer and no you did not come too late you can still get some Q&A and by the way I will of course I've loaded to YouTube don't worry and the project to github awesome so one thing that I will do before is answering questions is plug my patron so if you guys like these sort of live streams and videos and pretty much everything that we do there is an awesome way for you to support him it's called patreon.com I don't know if they want me to mention the com it's called patron and you can go to patreon.com/scishow and it's just a way for you to appreciate what we're doing and and kind of help us out and I can honestly say that preaching is currently a huge part of our income we are full time on this stuff and when I say we I mean Sophia and I and recently we have had a friend joining us as well which has been really awesome but we are living off of this stuff so patron is really necessary to keep going and yeah let me just quickly show you guys what patron is and the wooh infinite mode enabled there so basically all you need to do is go to patreon.com slash brad keys it is right here and you can go and press the big orange become a patron button I get I do offer a few rewards like mentioning you at the at the end of the video maybe even at the beginning of the video if you support more and and priority support and stuff like that and also you just become part of a very nice and friendly community so I hope you guys will go in and support I just wanted to to pluck it because it's been a little while and I recently redesigned it so now it is a lot yeah more modern and up to date with what we've been doing and also removes the goals because they were terrible and really outdated I I don't want to work by goals I want to do as much content as I possibly can for you guys and not be restricted and sit there and wait until we reach a certain goal I felt way to restrict it by that but yeah definitely check this out guys I think it's it's pretty cool also what do you guys think of the new logo and and practice thing and the colors I've I've done a redesign on on some of this stuff I hope you like it definitely give me feedback if you have something please be sweet about it but but you can give feedback so I think I just started Spotify there but now we can switch from infinite mode back into chat mode here so thanks to the awesome or to the people who are saying that the the logo looks looks good you guys are awesome and there you go so now the that was party files closed again I I don't think it's it's time to to listen to indie rock so um let's see oh also some people saying the old one was faded you're probably right but I wanted something new and I think this is more visible the old one just became a bit boring to me it's actually inspired by blast if you if you guys were at the Bass Pro Series in Denmark it's it was a csgo tournament in Denmark a little while back they had a really really cool logo I think and and kind of used this color scheme so I wanted to try something with that did I already use scriptable objects will you make a tutorial about it it seems like a very interesting way of coding so if you already did I haven't made a dedicated tutorial for scriptable objects definitely something that I want to do I have touched on it during the RPG tutorials though so that can serve as a pretty nice introduction but it is specifically to the RPG tutorial so I definitely want to do something standalone with those and in fact it's really good you mention it because I want to write that down so I'm gonna do that right up industry greetings greetings hi villian Steamworks and unity tutorial would be awesome I don't have any experience with programming for Steamworks actually I've heard that it can be a bit of a pain but has become easier over the last few years as with most stuff in unity but yeah before you pretty much had to be a C++ program in order to get it to work or at least get some it's this assistance but I think there are some nice Perkins for it now how did I learn programming I'm actually working on a video on how I got started with game development so stay tuned for that I'm really excited about that video greetings 12 you guys think readings from different places is already or you're always really cool to hear where you guys are from any limitation on setting up an authoritative server for a multiplayer game based on collisions or rigid bodies it's very clunky at the moment no I'm sorry it's not something that I have too much experience with I you know the server guy who knows all the good server stuff and you know can recommend server things to you yeah yeah that's not me I'm the guy asking so yeah I wouldn't really wouldn't make any recommendations um let's see multiplayer solutions comparison would be great to so many new thing is hard to find good info that's true that's actually very true that could be interesting um what did i do at dreamhack I played video games and yeah checked out some of the new cool stuff and met up with people it was very fun can you show us how to create and load save games I do have a video on saving high scores using player prefs it's a very simple saving system probably not what you're talking about but I think people tend to generalize saving a bit too much really you need to look into stuff like player player prefs and maybe pick up an asset on the asset store if you wanna get more advanced or saving into xml or json format and then of course maybe check out some ways to keep that there is secure but it's really a there's really a lot of ways to go about it depending on your game also if you want to save it on the server it's and it's a different thing so yeah but I could definitely do more with serializing let's see will you ever make unreal tutorials I would love to do unreal tutorials at some point it's just about time and prioritization and so far I haven't I realized it too much because I think most of you guys are interested in universitarios but definitely let me know if you want to see someone real stuff can you make a video on sound design I have a video on creating simple audio in unity so kind of an introduction to unit this whole audio system but it isn't really focused on sound design it's more just a fan technical introduction this is how you do stuff I definitely would like to do more with sound at some point but also at the same time it doesn't seem that too many of you guys are interested in it I think it's something that most people just save to the very end of their project and then they kind of slap something on which is a shame because sound can be so very important is it possible to have a video in background of main menu yeah you can definitely display video in unity by using the video player component I think it's what it's called and it's become much better recently in the last video called how to create an options menu did you create panel and you put all the sprites in iam yes I did create a panel yes and I put stuff inside of the panel yes how many inches is your monitor this one is 24 and this one is 24 so 2 times 24 video untouched controls maybe at some point that could be really fun do you have plans on to tell us about Facebook or play games integration firebase or something similar not at the moment but if enough people request it you know the you know it I've said it so many times um are you planning to do a la piste system menu maybe at some point when will you put the game on github this Sunday also uploaded to YouTube actually maybe tonight I'll see if I have time in your last video settings menu in unity you make quality settings does this also scale images down yes as you saw some of the quality adjustments did definitely decrease the resolution on the images so yes and it also it scales textures and also UI elements and I didn't actually know it skilled you are elements but it does why don't you use serial serialize field actually do all the time but I do leave it out from tutorials once in a while and definitely the live streams because it's all about being quick and being kind of focusing on a certain subject and I don't want people to get distracted by words they don't know I want to teach your subject and try and get them to understand that and not get sidetracked because they don't know the word serialize field I would like to teach that separately so that's why I sometimes stray away from using more advanced programming ways that's also why I almost never use constructors or Gator sensitives in this video I wanted to or in this dive stream I wanted to make a point out of using a constructor and show you how cool and easy it is because of the way that we're programming but I often tend to the leave a lot of this stuff out can you create a firstperson control that's better than the standard asset one I don't like the standard assets one either creating first plane controllers is hard if you want a really really really good firstperson controller that you can use for pretty much any project I would actually recommend picking one up from the asset store personally I simply love your FPS ultimate FPS it's a great asset it's also expensive but maybe there's still sale today I think this is actually the last day of sale or maybe it was yesterday but I know it was on sale and it often it's definitely check that out will you teach us about multiplayer I would love to do some more multiplayer stuff um I can't do unity I want a personal helper I don't have $200 if I had really should give it I'm sorry I cannot help everyone I really try and help as many people as possible especially if the questions are fairly simple for me to answer if I just get dumped a project and need to open everything up and look around it it just takes too much time but I try and answer as many questions as possible I'm sorry there's plenty of help to get on the different forums and really just try things out and try not to start too complicated just do something that you know that you can achieve and then play around with it that's the best way to learn don't break your neck did you know and I'm so darn pissed about it don't mention doodle diary in my live stream guys I will shut it down no fortunately I was doing something really fun which was Dreamhack but I did not get to participate once again yeah but I will do something soon I think congratulations on participating your first doodleberry let's see will you do a tutorial about adds add some unity that's something that I could definitely do if I get enough requests for it I've done something with services before I've done analytics and that went pretty well I think there isn't a lot of information about it so that's definitely something that I'll put in the list what advice would you give a new give to a new program who wants to dive into the programming industry depends on what you define by new if you define by define it as I have programmed for a long time but I haven't had a job yet I have very little experience in in finding jobs and getting positions and all that since I've pretty much been freelance for my entire life so I wouldn't know too much about that I hear it's a lot about being really willing to take pretty much anything and then just showing what you're able to do even though your position might not fulfilling the requirements of your position and then some I hear that's the way to go but in terms of just learning programming and wanting to take a peek at the industry and what it's like just get started just start making stuff and that's also something that's gonna help you get a job having a good portfolio having something to show is very important even for programmers showing I made this I made this I I'm a I know these systems I feel comfortable using this stuff is something that just cannot be underrated so really just do it just do something make something and and start small how do you make Amal to play a card game like werewolf or mafia that's not something that I can answer in the live stream how can I say what's a script and what isn't I'm sorry I don't understand the question if you could rephrase it that would be awesome throwing the difficult questions now do you plan to make a video game or a video on mobile came up to my sessions not really right now but I would definitely like to do something on performance optimization in general and that should also apply to mobile that is what I would answer some some people want to see RTS stuff RTS stuff is super advanced but we could do something artist like let's see one guys linking to his student Gary game should we check it out should we check out the Ludum dare game I'm gonna open it up here I think we should a lot of you guys are talking about firebase should I know what firebase is beta mobile apps and grow your business I'm sorry I'm not aware of what this is at the time looks like something created by Google builds apps fast without managing infrastructure have I missed something okay I'm sorry I'll have to look into firebase sorry but let's play some little diary games let's see I'm going to switch over here put this over on the other screen switch into the main view and we are going to open up that to patient oh yeah pitch enter comes practice boom here unity game black storm Prague really like the central screen it's cool man every single day we even see things that inverse it can be good and of course it can be bad words opinions society it can transform you negativity will try and shape you into some hideous vessel of yourself this is really neat I really like this intro don't let that happen alright alright let's see where we're going here be yourself start okay so you can be squished pout and rules I should probably read the about with this game by myself or them there before you come up Oh check this out guys black thorn truck call rules rotate with the left and right arrow keys get the fifty signs of negative influence into the holes the more you have stuck to you the worse things get alright I'm ready for this and I'm definitely going to suck at this oh ok I see yeah ah what what's the difference between the the yellow ones and the not yellow ones I know this is hard and this is also really fun I really like the sticking on to mechanic and I really like the backstory oh I can use it to destroy the gooey things well that's awesome I really suck at this though there we go please this is surprisingly difficult this is super cool I really like the art direction in the simplicity oh no oh no this oh no this is bad guys I'm just gonna do this hope for everything oh Jesus okay yeah yeah I failed really really well done I love the menu I love the intro I love the art direction I don't have sound enable so I cannot comment on that if the game has sound I don't know the mechanics are super interesting only thing that I would change is maybe make it so that it takes longer for it to become difficult at least for me the it felt fairly well balanced and then holy [ __ ] I couldn't do a thing but that's probably because you're using some kind of exponential difficulty curve and you have to really be careful with those because they will get out of hand really quickly so but really really nice game and yeah I really like the art of it and and the introduction was with the story was really good maybe also more particle effects I love particles but really cool how would I feel if your future son daughter use JavaScript I think I'll just be really happy if they program can you make a tutorial on translucent material maybe at some point I don't do is too much shader writing but I definitely want to do something with shaders at some point from what country are most people that are watching you um I think most of you guys are from the US some people from Denmark England and a lot of people from India actually what is your next game tutorial series on the YouTube channel I haven't planned one yet particles yes particles are fun biscuit oh thanks from yes cat like coding has awesome tutorials on materials and shaders and other stuff as well definitely check him out I shoot a tutorial series that would be awesome yeah that would be really nice alright guys I think that's enough for questions and we also played a game and everything yeah I think this was a success and also we didn't get that many errors doing or doing the tutorials that's awesome look I'm gonna take off the hat yeah I know it's sad I'm already here it's it was really hot having that on it looks pretty fun okay I'm gonna put it back on until this tree is done otherwise I'd just get to subconscious so yeah the hats back on don't worry don't worry but we will still end the stream here so thank you guys for all the questions I hope you guys had fun I really did end up and that's industry by everyone riding what country they're from in the comments I really want to see that that could be super fun so yeah definitely right where you're from right now where are you based where you're watching this from and on that check out patreon.com slash breakfast if you want to support these streams and the content in general you guys are awesome couldn't do it without you and yeah thanks for watching guys and I'll see you in the next video bye thanks of the awesome patreon supporters who donated in November and a special thanks to German Amanda rue C infinity PPR and soft tune cybercrime meter team's Kirk Chaisson r5 James P Dan Evans Thomas Wally Superman the great John Beauregard cocoa brown Jason the Tito Alex Rockets key manulis James Rogers Robert pond Rob fair and Rasmus you guys Rock