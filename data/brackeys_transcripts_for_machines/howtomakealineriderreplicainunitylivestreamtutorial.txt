hello everyone welcome to this video on creating a line write a replica this is a live stream recording so if something messes up well that's not much I can do about it so this is what we're going to be doing today we're going to be making this game here where if we hit play we can draw out a level using our mouse and we can draw as many lines as we want and then we can hit enter or space and the player will play through it and you can see that I've even added some forces to these lines that's totally optional you can pretty much do anything you want with it and it's just something that's really really fun to play around with we can even make lines while the game is so say I'm playing so yeah really really fun thing and let's just jump right into it so let's start by creating a new project let's go to file new project and that's called is something like line Rin writer replica there we go and let's check out 2d and now I'm just going to put it in my projects folder go ahead and hit create project and unity is going to create all the necessary meta files in the background here while we wait and I'm just going to see if everything's working ah looks like it could you get start could could I get it stuck in a circle yeah definitely could there's many ways to mess this up that's how it is when you create a sandbox game and let's start by taking our main camera here and just changing the background color to a complete white as in the original and I'm also going to change the size of our orthographic camera here to eight just assume things out a little bit and yeah let's actually begin by just bringing our player into the scene so that's I have this player graphic here it's a PSD file again this will be on github when I upload the entire project after we're done um at least before or at least sometime tomorrow depends on when we are when we get done here but you can pretty much use anything you like you can even use the default sprites that come with the movie so let's just drag this into the project panel and I'm just going to go ahead and change the pixels per unit here to something 800 and change the mag size to something like 128 I think is going to be pretty good just so when we drag it in here it's not going to fit the entire screen let's also maybe take this guy and drag it up a bit just to place them in the corner of the left corner so that we have some space to work with and that's also a thing that you should really go ahead and create if you serious about making this game is some way to move around the camera so you can create levels that are bigger than what you can fit on a single screen and then when you play have the camera somehow follow the player but we can talk about ways of doing that later now let's get the basic things in place and that is of course a rigidbody let's add a rigidbody 2d and I don't think we really need to change anything here you might want to bump up the gravity scale and that kind of makes the game feel like it plays a lot faster because I'll put player Falls faster and so he the forces or he rides down slopes faster but I'm just going to leave it at 1 and I'm going to change the body type to static so that when we play he's not going to fall anywhere he's just going to sit there for now I'm also going to focus on him by hitting F in the scene view and add another component and this one is going to be our capsule Collider 2d this is also a fairly new nice addition to the 2d system the capsule Collider and I'm just going to go ahead and change this to horizontal and I think the axe x value is fine somewhere around here somewhere around 1 and I'm just going to bump down the Y a bit and I'm also going to kind of shift it down just to place it where his um let's see here just a place to kind of at the bottom here we don't want it to be affecting the stickman just the vehicle cool so now that we have him there and he has physics and everything we can go ahead and create something for him to ride on and um yeah people are asking what this is it is a guy on a sled I'm really sorry that it looks so bad I tried to create something that was kind of like the original but still I didn't want to be cover right slap so yeah this was all I could come up with pretty embarrassing all right so let's go ahead and do some scripting so the first thing that we need is some weight for us to create a line and change the points in that line and to do that let's go ahead and create an empty game object let's reset the transform and call this one line let's also add a component called the line renderer and we'll also add a edge Collider so this is responsible for graphics this is responsible for physics collisions then we can take our line renderer here and we can open the positions array and this defaults to positions 1 at 0 0 0 and 1 at 0 0 1 and because 1 is in the depth we can actually see the line so let's change that to zero and instead have it go like 1 5 d X and now we can see a ridiculously large line that is also purple so let's go ahead and bump down the width here to change the size of it and I'm just going to say to something like point zero eight and let's also add some other color and we could do that by first adding a material some people just go down here and try and change the color that's not going to work because we need a material to actually use that color to display to display the object on screen so let's go down here and right click or create and then materials and we can call this something like line Matt no need to complicate it further than that let's also select the line and drag the line Matt into the material slot now of course online matt is currently a standard shader I think it's a lot better if we change this to something like a sprite default and this will allow us to change the color through the color mode here so or through the gradient editor and that's all that also means that we could have the first part of it be black and then have it fade out but I'm just going to make the entire line black one thing that could be pretty cool to experiment with is having kind of the edges of it fade out and we could do that by having a very very narrow fade out here at the end I'm just going to fade it to white here so have this be black and then this be black as well and this then the sinks on the final part here be white but you can see the problem with this occurring and that is we can't have a fade out between on the two points so yeah it doesn't look too good I experimented with that but wasn't you happy with it so I'm just going to cut it off and we could also give it some corner vertices something like and actually we might need to have this be something like five here just to kind of smooth it in the end actually we might need to do more three five I think five could be pretty good but because it's so small and our line it has a very very low risk I don't think we're going to be yeah using this too much I'm just going to set both of them to five now and then we can always experiment with it later this will just smooth off the ends and round out the corners that's all we're doing inside it starting some actual extra vertices and this is going to cost you a little bit on performance so now that we have our line set up we need to control it through its script and we do that by adding a new component and we'll call it something like well we can just call the line let's double click this to open it up in visual studio and I'm just going to wait for wishes to do to load up here take a little sip of water and it's loading up on my secondary monitor so let me just drag it over cone so the first things that we're going to be needing um is references to of course the line renderer and the edge Collider so let's go ahead and create two public variables and so we can just drag them in in the inspector so we'll have the public line renderer and we'll call this something like fly and render um I will have the public edge Collider and it's an edge Collider 2d and we'll call that one edge cold or edge Collider if you will I'm just going to call it edge cold and um yes so now we can already go inside of unity if we save that and reference the two just to make sure that we don't forget there we go and next up we need on some kind of way to store the points so I would like to create either an array or much easier a list of all of the points that we're going to be using for a line and in order to use a list make sure to be using system dot collections dot generic this way we can go ahead and write lists here and we want the list of vector twos a list of twodimensional points and we'll call this one point remember the difference between a list and an array is that an array is great for storing X amount of items but only if you don't need to change the size of it if you need to change the size of an array you actually need to create a whole new array and set it equal to that so it's not resizable but it is more performant however if you do need to resize your list use a generic list this allows you to add things at the end remove things add index points it's super awesome but it is less performant so it's always a decision you have to do do I need to resize or do or not and we do so we're using a list then we need some kind of public void and the reason why I'm making this public is because I want it to be accessed from the script that is going to be creating these lines and we are going to call it something like update line and this is a method we'll call in the update loop whenever we are actually still working on the line as soon as it's finished we're not going to be using this script at all and so this function is not going to be called but each frame that we are currently drawing on the line we're going to be calling this update line method and that means that it allows us to do different points it allows us to or different things it allows us to insert new points and also to set up the line if it hasn't already been set up for example we need to check if points the sequel to no because if it is we need to go ahead and make sure that points equals a new list of vector Q so this way we instantiate our list and now we can go ahead and add elements to it so we'll create some kind of set point or add point method and we'll add that in a second and then we can just return out of the function then down here under this in case we have already said about points array and and this is not our first point we can go ahead and check check if the mouse has moved enough for us to insert new point and if it has insert point at mouse position and we'll go ahead and do that in just a sec first off let's create our set point method so let's go void set point and of course whenever we are setting a point we need to insert the position of the point and we'll do that as a vector two so this is going to take in a vector two called points and we'll make sure to also feed this into the update line because we could of course just get our mouse position here do we want to do that I don't actually think we do kind of debating on that now I think we want to feed it into the function it's it's cleaner this way so we'll pass a vaca to point on into this function as well and we'll pass that on to the set point method so that means that when we're creating the line and updating it we are giving it almost position calling it point and we're feeding it into the set point method so that down here we can again use our mouse position referred to as point and um in here we can then go and access our points array so we can go points dots add add a new point and we're just going to be adding the point vector to that we feed into the function which is going to be a mouse position all the time and then down here we can say line renderer dot and we need to say something like point non positions that's the name equals point dot count so we're going to um or we currently keep track of the points locally we have an array or a list up here of points and we add points onto that list but we need to also apply that to the line renderer and the way that we do that is first of all set the number of positions on our line when you run the number of points equal to the length of our points list then we also need to go and add the new point to that list so we go line renderer third set position and the position that we want to set here is add the index which is at the bottom of the list so the point that we just added we want that index and we want to insert that point so in our case that's going to be points dot count minus one because remember if we have indexes that goes zero one two three let's imagine on that we have a links on a list length of three so we have 1 or 0 1 2 and so the last index is going to be 2 which is 3 minus 1 yeah so that's why we take the length here or the count and subtract 1 and so we get the last index in the on list and we're also going to of course feed in now the points cool and this is a lot easier for the edge Collider actually for the edge Collider within the go edge call dot points and set it equal to points however that's one slight problem with this and that is edge collided up points is actually an array and it's kind of weird for me that it's an array when it needs to be resized at runtime I don't know why you need it shows to do do that I'm sure they had a good reason but we do therefore need to convert our points list here into an array before we could feed it in and the way we do that is by using points dot to array boom and we're done is that is it's just a single function call really really to do so now we should be setting points and we should be able to update our line but we still don't check or we currently only insert a single point and that is at the very beginning when we set up a line we still need to check if the mouse is moved enough for us to insert new points and if it has do it and that's what we're going to be doing now so in order to do that we need some way of checking the distance between the previously inserted point and the current point or the current mouse position and the way we do that is by using an if statement and we're going to check if and we're going to get the last point in the array or in the list and we do that by using points dot and this is very nice currently we don't have access to a function called last which simply just gets us the last point in the arm in the list so what we need to do is I actually go in here and access using points count minus 1 and we can totally do that that's legitimate and it should get us what we need the problem with this or I mean it's just not very clean instead we could go up here and say using system dot link and this simply allows us to convert this piece of messy code into points dot slash there we go and it gets us the same thing so that's a really nice thing to to use if you need to do this sort of calculation a lot and of course we need to check the distance between so we will say something like vector to distance between points last and the current point and if that is armed let me see if I grab the syntax right looks like it if that is greater than and then some value I'm just going to space my points out with about 0.1 you can turn this into its load up here if you want it to be configurable in the inspector I'm just going to hard code it in here and if it is meaning if the distance between our last point and our current point is greater than 1 we'll go ahead and insert so we'll see say set point and feeding the point if not nothing is going to happen the point here that we're trying to update with it's just going to be ignored so really really cool we could also maybe rename this one to Mouse position I think that's a little clearer because currently it's not a point it's only a point when we insert it down here so here it's just our mouse position it's it's better this way it's cleaner and by the way the way that I did a quick renaming of all the variables at the same time this way you can control our are so hold down control and press R twice and this allows us to refracture the variable and you can see just how nice that is just hit enter when you're done cool so um I'll leave that's all we needed to add to the script one final thing and this is something that's also a bit weird with the edge Collider and that is we can't actually have an edge Collider with only one point it needs to have at least two points it makes sense because you cannot create a line from a single point but it will go into an error so what we'll do instead on that instead of just inserting it down here it will check if points dot count is greater than 1 and if it is we'll go ahead and do this so we need to make sure that we have at least two points before we try and create some kind of collision so let's say that and hit into unity and of course you know in part of this is that we can't actually see this in action because we need a script to control it so let's take a line and create a prefab out of it and it's deleted from our scene let's then also maybe save our scene great called something like main level I think is going to be good let's also create another empty again reset the transform and this is going to be on line creator and or our draw manager or whatever you want to do I'm going to call it the line creator and I'm also going to create a script called line creator and this is what group is going to take actual input from the player and then create these lines procedurally as we go so this is going to be controlling and spawning in lines as we go all right so let me just have a look in the chat here if everything is looking good today to be everything looks good that's awesome yeah cool let's do it okay so the line design creator here what do we need first off we need some way of getting input from the player and of course whenever we want to check for input we do it in the update method so we check every single frame we want to check if we press the mouse button and we do that by using input don't get mouse button down and the mouse button that we want is zero meaning the left mouse button it's the first one so we index it with zero one is the middle and two is the right so I'm just going to be using zero here if we actually get this mouse button down we want to instantiate a new line so let's go up here and let's create a reference of type game object to our line prefab and let's call this one line prefab then down here if we actually press the button will go and instantiate on line prefab and the precision really doesn't matter so we can just go ahead and ignore that I will however store this in a variable of type game object and we can call this something like line tio for game object then we can use this game object to get the line script sitting on the object so we'll go up here and create a line and we'll call this something like active line then down here we can set active line equal to line go guards get component of type line and that's all we need to do so if we now head into unity we should be able to now our access our line prefab and we'll just drag that in there and not much is going to happen because we are only actually creating the line and setting our active line equal to it but we're not setting any points yet so if we hit play and we start drawing here you can see that we spawn in the line and we keep doing that every time you click but you can see they aren't really following the position of our mouse so two unchanged that and let me just see here yep to change that what we do is we go in and call the functions that we just created more specifically we go in and say active line dot and then update line and what we want to feed it is our mouse position so let's go ahead and get a vector two with our mouse position and this is equal to arm input guard mouse position but remember Mouse position is in screen coordinates when pixel coordinates and we need to convert that to both coordinates we do that by saying camera main dot screen two world point and then inserting input dot mouse position there we go and then we can take our mouse position and feed it into the update line method so that should actually make sure that when we draw a line here whoops and of course we need a reference somewhere what's going on oh of course we're doing this before we actually have an active line so we're getting null reference exceptions so what we need to do is only do this if active line is not equal to no then we can go ahead and access it and change or call the update line method and also we can just put this in here as well we'll have another if statement saying if input dot get mouse button up off again zero index zero the first mouse button which is left mouse click will go in here and set active line equal to no so we'll just go ahead and make sure that this is no longer going to be cold when you release the mouse button and that should actually be most of it I think now when we clear hit play and try and draw voila it's working oh my god this is awesome and we can of course try this out if we go and select a player and change his body type to dynamic he's going to fall down and you can see him interacting with the physics here we can actually even draw on top of him and create some weird behavior here probably shouldn't do that but you can see that we can now draw anything that we would like and you can definitely very easily turn this into some kind of artistic application you can see I'm kind of doing that already it's a smiley really creepy one alright that's bad yep not the best of artists but it's actually working and all of these lines are as we can see if we go and hit play here all these lines have both line renderers with all these points but edge colliders as well as you can see represented with the green line here so that's really really nice so the next thing is of course having some kind of goodies on mechanism for our players so that he will actually be able to interact without us having to go through the editor and change the body type so we need to do is access the rigidbody and change the body type to dynamic or through script and we'll do that by add a new script and we'll call this one let's just call it player well doubleclick it to open it up in visual studio and in here we can first of all create a reference to rigidbody so we need a public rigidbody 2d and we'll call it RB then in the update method will check for input and we'll check if input dot get buttondown and the button that we want to check for is currently called jump it's the space button and it's called jump by default I'm just going to call this one something like start and then we can go and change the default value or the default name and um if we get the bun down start we want to go ahead and say our B dot body type equals rigid body type 2d dot and then dynamic cool that should actually be all of course we still need to go into the input manager and actually change it or it's not going to register and we also need to reference our rigidbody2d there so let's go and say edit project settings input under our axes will now sound find the jump and actually it's this one because this one is for the control and we don't really care about that right now and we'll change the name here to play oops so I can slow that cool so now we should be able to hit play draw oh oh start did I call it start I meant to write play here whatever start or play same thing save that and hopefully now gives us no errors oh it's so neat that it actually complains when we run the game and not only when it's used that's it's amazing I would have been a start on that for way too long so we can draw a line hit space and boom our character is standing on the line okay I think it's boring to to get him moving a bit more what we need to do is change the physics map so currently by default on any kind of physics object in unity will the light just flashed on the arm friction is going to be turned up fairly high and we don't want this for this game of course because on snow and ice the friction is of course low which is what enables you to write fast with your sled that's why we go split writing in the winter and not on grass so let's go in here in the project panel that's right click and hit create and then select the physics material 2d make sure it's 2 T and we'll make this the line phys map and we'll set the friction to zero you can add a bit of bounciness and you can definitely play around with this so you can create separate lines with separate physics materials some with more friction some with bouncing X let's I mean endless possibilities you can create trampolines and have them fly around but we'll have a look at that in second but for now we'll just go under our line here and we'll take the lines this Matt and drag that under the physics material on the edge Collider now when we hit play we should already see that all player actually slides and that's a lot more exciting cool and let me just show you what that looks like if we change the bounciness on this we can change it to something like seven let's see what that looks like wait I mean this is not really playable but it's it's a lot of fun so you can see how you can play around with this some reason that wasn't registering but that's just probably because I drew on some of it so I'll just let the bounciness back to zero and the final thing that I did in the demo I mean we're pretty much done with what I originally set out to do was add kind of a force surface platform surface affected to the thing component and the cool thing about this component is that it will kind of drive your player forward because right now if we go ahead and make a arm a flat line here our player is just going to fall down and not much is going to happen he is going to move a little bit probably but then comes install and that's not really exciting of course you want some lines to be like that but the original game also has these red lines which boost the player on and that's what we can do really easily so let's select our line here and let's let's actually create multiple versions of the line we'll have this one be line on the score normal we'll have this one be line on the score bouncy and I'm just going to go in here and duplicate the line v mat and make this the line system an underscore bouncy not bounce bounce G and bump up the bouncing is to something like 0.7 and have this one be the standard or normal and this way we can go into a line bouncy here and select the bouncy one now we can also go and duplicate this one more time I'm just going to duplicate the normal and have this one be our first cone and on our boost here we'll go ahead and add a new component and we can go under physics 2d and you can see all of the fun stuff that you can do with this you can add area vectors and all this stuff I'm just going to go ahead and add the surface effect of 2d I'm just going to set this to everything and also make sure that on the edge Collider you click used by effector this will kind of link these two components together then on the force we can add something like maybe 8 on the speed and we'll leave the speed variation and for scale as is now also some of the options down here to play around with so if we now go under our line creator and change a line prefab to boost we should be able to use this line so drawn here you can see just how much quicker this guy will ride along we can even write directly up speed health so just kind of makes it more fun if you're able to do that and it actually whoa okay so that's an arrow that you might run into in order to fix that let's select our player and let's make sure to go under dynamic and check off our continuous instead of the screen that's going to help you a little bit that means that when that we shouldn't get those kind of passing through collided problems you can see it's a lot more accurate now good thing that we noticed that I'd completely forgotten to do that so we now actually have all of the elements that was in the original game even a bouncy one we can also go ahead and add a separate line here called passed through pass through and all we could do for this one is simply disable the edge Collider and this just means that whenever we are let's take our line creator whenever we draw with this one it's going to have no effect whatsoever so you can see we can draw a bunch of lines here we can then switch out with the normal one here we can then switch out with the bouncy one for for this one and then we can switch out with the boost for the last one and you should now see that when we play it we pass through those this one is normal this one bounces and this one kind of boosters upwards so we already have a lot of stuff to play around with and all you need to do is insert a bit of code here to switch between them preferably some UI to do it as well so you don't have to remember a lot of shortcuts it's really really easy to do if you don't know how to hook up a UI with um standard gameplay functions you can always check out my crash course on the unity 4.3 GUI I believe that's what it was called I have a crash course on the unity GUI and how you can link up buttons with functions so that's probably the next natural step here you could also go ahead and program something for the camera that would allow you to follow the position of your player as soon as you are unleashing and also have a script that allows you to move around the camera when dragging or something like that maybe using the arrow keys would make it a lot better so that we can create much larger levels and if you want to go completely nuts you could even or create um flags for checkpoints or end in screens or whatever a way to restart the level would be really nice and maybe even a way to save and load levels but that's a completely other thing that would be something like storing and all of the different lines and all their points and then inserting them again at a later point it's a bit more complicated but it's a challenge that that I think a lot of you is are good enough to want to kind of take on so yeah I hope you enjoyed the tutorial part of this livestream I think will transition over to the Q&A part as at least as if everyone is cool with it yeah just looking in the chat here to see if everything's good it is cool so yeah I think we'll wrap up the tutorial pretty pretty quick one today but I think that's alright and we'll just get going with the Q&A just leaves us more time to keep that so let me switch over to my other layout here there we go hello guys I'm on the big screen and you guys lie in here that's wrong so ask away with anything that you would like I am here to answer your questions umm this game would be cool with multiplayer yeah that that could be really fun actually okay kind of an kind of a coop experience where you have to complete different things with one guy drawing and the other guy moving around that could actually be really really fun I think you could hook that up pretty easily using the Unity networking system so if one of you guys make that definitely posted on the forums and I would I would love to see it that could be really fun um let's see here can you add one video to how to make a quiz game which will teach us how to save unanswered questions slash list for later use arm I'm probably not going to be adding another video on the course because it's pretty much wrapped up in my opinion but it should be pretty easy to do you should look into player press and if you want some more sophisticated saving and loading you should look into some kind of data saving system like XML JSON something like that but just begin with player press it's the easiest and fastest to get running let's see any marketing tips especially about getting youtubers and streamers to feature your game yeah see that's the that's a difficult one when I originally created a game before before YouTube or anything like that my strategy was to do YouTube I mean this this channel was created with the sole purpose of of kind of being a way of me to create an audience to direct towards one of my games and it ended up being its standalone thing but it's definitely a kind of hard hard thing to do because marketing quickly requires the budget I think the first thing that you can probably do is design your game with our youtubers and streamers in mind make it attractive for them to play make it something that's very easy to pick up and maybe something that has a fun twist to it I mean Daniel SMD is a good example of a guy who's really really good at that and who's also done a lot of collaborative work with different youtubers who could then feature him when he released his games I believe he he made what the box I believe that was the name of the game what the Box am I correct here yeah and that's been a huge success for him as far as I can tell and it's been played a lot on YouTube so if you want to kind of see how to do it right check out what the box why'd you disable image upload on your forum because I'm afraid for my servers that's actually is a symbol answer and I have some issues with it arm when testing out you can see a friend is in the screen I was dancing or asking a lot of stupid questions so I'll kill you and also you will be banned so when you're putting out the next video for the running game tutorial I'm not sure what tutorial you're talking about we run again I fit the platform in one how I created an immune system run a game I don't I'm not sure have to specify I'm sorry yes he even people in the chat here know what the box so really really well done what game would I like to recreate next I have no idea I actually had a hard time coming up with this one today but when I did that just had so much fun so I had to do it but yeah let me know if you have some good ideas of what you want to see in a live stream of course make it something that could realistically be done within like an hour's time frame but yeah I'm very open to suggestions do you have any tips for new unity uses when it comes to practicing genetic features and scripting in csharp yeah I might have a few tips um first one is use the toriel's and don't be afraid to copy code that's probably the first thing if you can just get something working then that's amazing no matter how much of it you've copied no matter how little originality is in your original idea doesn't matter just try and get something working I promise you it's going to be harder than you think and then you're going to learn so much trying to do it and that that's the most important thing try and set realistic goals don't start with I'm going to make the next call duty start with something smaller like I'm going to make something where when I click the screen the box will turn red and you learn a lot of stuff by doing that you learn about materials renderers properties you learn about input there's a lot of stuff in that and variables and references and functions and all that stuff so start small and yes definitely just use as many resources as possible if it's available to you why not use it so yeah you can always learn the hard way at a later point and also copying people's code is amazing you have to read it and kind of adjust it to your own game and maybe even experiment with it in order to get it to do something a bit different and that's a perfect learning process when you don't feel totally familiar with the syntax or don't know the API and so you have to sit with the scripting reference for a long time what I did um a temporary Niagara could be fun um what's my favorite our unity feature that's a really good question I don't think with unity it comes down to one feature because I don't think that unity necessarily is leading in any kind of particular subject I mean graphics wise they're engines that are prettier and more advanced than unity programming wise and order what in terms of what you can do with performance that are there are custom engines that are quickly there are engines that can do more impressive specific stuff and stuff like that and unity only recently did stuff like a really move into version control and collaboration and unity cloud services is pretty impressive I must give them that but I don't think it's with unity that it's one particular thing I think my favorite unity feature is the first of all how quick I can work in unity and also just the easy of use it it's just so quick to get something working in unity and that's because of the way that they've designed the editor and some of the choices they've made when it comes to scripting and and that whole component system it's just it's awesome so yeah that's probably the best the best part will I ever do a big and scary project like rule 18 does I think recently I've enjoyed a lot to do very small isolated projects and if I'm working on a series it's going to be a small one and the reason why is I think big scary projects often get very hard to maintain and most importantly you lose 95% of your audience after the first 10 videos and that's not something that I necessarily want to do because I feel like a lot of the stuff that I explained later on in the videos it's not because it's too hard for the other 95% to understand it's just that there's so much stuff in such a series when you create a big game that is not relevant to each and every person that is only specific to the game and it's not that it's hard or that it's particularly good to learn it's just something that you have to go through and that's not really something I want to focus on I've done on courses that are really long that's me teaches you how to create a game from scratch and then to completion pretty much and exporting make a game isn't a good example of that the 2d platformer course while maybe being ended a bit abruptly shows a lot of the game design process so I would like to focus on more smaller standalone subjects and I can see my black screen there but but then again I'll never say never I mean it's also there's also a lot of fun stuff about working on the logic project especially if I had the ability to to include you guys more as cool a team did so maybe fairly giving the components that are underused by other developers oh that's a good question that are underused by all the developers ah I don't know about that one I feel like unity really excels at their 2d physics stuff it's been so easy I mean I just found the the surface effector here a lot of this spring and buoyancy and all that physics stuff it's just so handy to have at your fingertips other than that I don't know favorite component the rigidbody just so much fun underused component don't have a good answer sorry do you have any videos on Perlin noise world generation if not is that something you'd like to do I'd love to do something with particular world generation especially using Perlin noise because it's available through the unity math deaf library by default and so be pretty relevant to just pick that up create a procedural terrain maybe even a procedural mesh if we don't want to use the default terrain system because that drives me crazy every time I look at it that could be really fun there are really good tutorials on that especially a written tutorial that I saw at one point but still yeah if it can be done enough one to two videos I would love to pick it up but it is for your advanced users and might be too no I would love to do it yeah when I get time let's see how can make it tutorial can you ever make a tutorial on how to make it to the platform or if I'm going to make a new video I'll probably not publish a new video on that for a long time I don't know if I'll ever publish a new video in that particular series I feel like I covered everything that I wanted to cover in that particular series however I do want to do more 2 e videos and I do want to create more there could be relevant for this series I would just grab it up and a standalone thing so I don't think I will necessarily continue the course on with another video let's see what game genre is the easiest to work on you guys are asking the hardest questions that's a very general general generic question and I'm having a hard time to say only a single genre I mean gameplay wise it's often easiest to get something rkd up and running pretty quick and that's also been the theme of these videos I mean something with simple movement something where the core gameplay risks on very very simple mechanics might be something physics based just often the easiest thing to get up and running because physics just so quickly feels fun if you give a bit of control over some kind of physics object it gets it gets it gets fun really quickly but some harder stuff is the opposite where where your content creation is so important and you have to create a lot of levels and items and objects and characters and textures and more you have to do a lot of coding that only applies to certain products parts of your game stuff like RPG especially multiple and especially its massive but also stuff like RTS games is very very programming intensive so I would say easiest is probably something in the arcade genre but it's a generalization that's that's just how it is how do I get good inspirations for new game ideas that's a good question I actually do that by playing old games I feel like I'm not the best when it comes to game ideas often I'll rip off the game and kind of do a twist and I'll call it my own thing but I think that's how pretty much the entire game development industry works it's very rare to see a completely unique gameplay element that's never been done before and frankly you can never guarantee that your game on idea is unique of course if you're going to claim that it's an unique idea you need to do a lot of research but I never do that I just make something and if it's fun it's fun I mean the biggest games ever have all been rig offs of some games that have done the same thing before them but in a slightly different way or with less cute graphics or smaller marketing budget example Angry Birds probably one of the biggest mobile games ever and it's just the same thing as a million other Miniclip games before it so yeah how it is but I would say playing playing games is a good source of inspiration sometimes I'll just browse mini games looking for something that feels fun to do and maybe gives me some kind of inspiration let's see oh the okay we're asking for the best for the how to make a video game series story of course that's kind of in this Runner I see it um yeah I mean new video out probably Sunday I think I'll try to upload a video for that series once a week and then normally that Sunday and then Wednesday I try or Wednesday sorry someone pointed out that I pronounced it wrong I say Wednesday now yeah I'll upload that either Wednesday or Sunday and then the other day I would like to do a standalone video each week so you can be pretty sure to see asking at least one video a week in that series come worry about it it's a fun series by the way I don't think we'll go on much longer because I've pretty much curd covered all the essential things that I wanted to have in this series and again I don't want to create a very long one but we'll probably land around 10 videos or something like that what would you say is the best software for pixel 2d design it has to be free oh if it has to be free I don't know is good for pretty much anything good piece of software and it's free I use Photoshop so that's not free there are a lot of online tools if you just want to do easy pixels all right just search for pixel art all online and there are a bunch of whip in web services that help you do that you could use one of those I even created an editor extension for unity at some point that that allows you to create pixel art it's called pixel art toolkit it's available on the asset store for free it's not been maintained for a long time so I have no idea if it still works um but yeah the Chad is saying Pisco check out Pisco what is the weirdest game I have made I ever made I've made some weird games with friends it's always really fun to put your friends in games recently um we had a day here where we just thought let's make something together and most of my friends are not game developments of developers actually pretty much none of them are like real life friends um but still they think it's really fun to participate and we try and try and make something together we're basically put them in front of the green screen than do really ridiculous thing in sub time motion put them into the game and they could be the main characters of a platformer it was about my friend who lost the guitar and he wanted to find it and we had him do some voice acting as well really silly my other friend was the evil villain gave him ain't kind of bad like wings and had him case around yeah stupid things that's probably the answer probably not but it's the one that I can remember yeah I'm from I'm from Denmark when what did you study I did not go to university I fairly recently about a year ago finished up not a year ago little under a year ago finished up give nation which is pretty much like high school and I went to our high if you know it send the it's pretty central to the city and thanks for all the compliments guys you guys Rock um can I please make a quick tutorial with the crossword or scramble playing system maybe could be fun to do I've never played many of those games myself I don't really enjoy them too much mostly because I really really suck at quiz games I know I've made a quiz game tutorial but it's ridiculous how bad I am um but yeah I might consider it do slash will you do a Ludum little diary live streams so I haven't actually done a lot of diary live stream and that's for a few reasons the first one is I'm not a very experienced large streamer and so I get really exhausted when wind livestreaming I can pretty much only livestream like one and a half hour and I am tired of course it's doing a lot of diary livestream it's a different thing you don't have to interact this much with the camera and such because yeah you would have no time to do coding but I actively idea of streaming for such a long time it messes me up um yeah but again maybe some time right now I'm just enjoying doing a lot and rerecording some stuff where I want to and mixing it up into a standalone video that's normally what I do and you can check those out if you want you can just search for Ludum dare you on my youtube channel and there are some pretty tightly edited videos showing how I created my games please stop spamming guys please do a draw my life that's a really really good idea I don't know why I haven't done those yet probably because of my drawing skills oh no you guys saw them before I should do a draw my life where only draw in design writer replica which is made no promises but yeah a drama life could actually be really really fun I would love to do that can you make a tutorial and XML serialization perhaps or JSON something along those lines I would love to do something with saving and loading I think it's time I bring up my notes here to run write down some of these ideas because there's no way I'm going to remember all of them if I don't do this so let me just give me one second so saving loading XML JSON and of course maybe just unities to play a press will see and drama like cool will you ever make a small RPG game tutorial maybe maybe that's sometimes if you decide to make a new tutorial series can you make an RTS that's a very very big game to make so I don't think I'll be making an entire RTS might do points of it might do unit control or you can kind of control those guys around and have them spend different formations that could be pretty fun maybe do something with camera penny there are a lot of lot of possibilities you can hire an artist for drama life all that's cheating no don't want to do that can I do a tutorial on adding multiplayer to things fairly generic subject it really depends on the game what you need to do but maybe let's see I love RPG games who would be awesome to see tutorial on it yeah RPG games are really really fun to work on they are just so huge and they cry so much code Oh maybe part of it again we can maybe break it up into smaller segments I'll think of it think about it umm yes this is the end we went through the entire tutorial part and this is the Q&A and I think we'll also wrap this out fairly soon so final questions guys um I had a lot of fun I mean I always love doing these live streams you guys are just awesome to UM to hang around with and yeah so what's my favorite game Jesus with the hard question can you guys ask something because require a lot of thought I should prepare questions in advance my favorite game probably the game that I spend the most time playing its World of Warcraft and I have a certain love for the placing style we are then the characters everything is just fun so if I have to pick a single one it would probably be that then again counterstrike is really getting really fun played that way too much ah do you really have to choose will you keep this video boss or upload to youtube for us um it will be available just after we are finished as Avadh on Twitch but it they take it down after two weeks so make sure to also upload it to YouTube tomorrow afternoon don't worry about it you will have it as long as you want umm what class did I have in whoa and what's the forecast that is I played a lot of different classes tell it in ah they all gone hunterwarrior warlock but had pretty much all of them in Maxwell at some point again I played way too much guys way too much I don't play too much anymore one once in a while I pick it up played recently with a friend but that's always fun but I can't stand playing it alone I have to play friends um let's see train simulation would be great yeah maybe so Turo some specific components and some ideas on what to do with them yeah example line renderer can be used to draw trails to check and explain the variables of the component that could be a pretty fun thing to do actually kind of base an entire series off a component yeah I'll consider that I'll write it down video based on component I drew no 3d modeling if yes please make it tutorial I know a little bit of 3d modeling I'm very I'm a really really bad artist so what I can do with it it's very limited but I know many of the tools and I know my way around pointer and my hand some of the 3d modeling software that you probably don't know um so I know the whole slang I know the ways that things are done I'm just really really bad you think so I might be able to do with tutorials at blend at some point a tutorial on Blender at some point but it's not going to be right now I'm gonna write that down here small slender tutorial and that's going to have to be a small series a 3d racing game I would love to do that as well actually a cool guy called Theo is currently working on a realistic car for dev assets and when that gets done I will probably have a look at creating something with that that could be really fun it looks amazing currently the renders are beautiful he's still working on it but it's going to be really good also I haven't mentioned that at all if you guys like this livestream the reason why we are able to good is because of the patreon supporters patreon is a way for you to donate a monthly amount of your choosing and it's castable at any time and it's really awesome it what allows me to do this and if you want to support me and the videos and the live streams you can go to patreon.com/scishow she lies I'm it's hard for me to get in contact with all of you guys but I'm I write a lot with the patreon supporter so if you want to get kind of come friends or something it's a good place to reach me so patron comm / gratis and thanks to the people who are already supporting you guys Rock and also if you want to get cool free 3d models you can go to dev assets calm its play what you want you can choose any price whatsoever you can even download them for free and there's a desert environment that looks awesome that we just released I'm actually just going to go ahead and switch my screen over here so you can so you can see it here whoops there we go let's hear so if you go to dev access calm you can see here there is the new FPS environment and it looks just amazing it's created by a guy called Sam trust awesome guy and here's the video for it so you can get an idea of how that looks everything is just rendered in unity it's ready to use out of the box it comes with an example scene like over 30 or 40 models all PP are really high quality and it's yeah it's just awesome they're also modern weapons it wasted props pack and a variety of all these stuff so you can also check out the 2d mega pack which I created which seems to be very popular so has stuff like platformers topdown shooters tower defense gold miner stuff all kinds of sprites check it out so yeah services comm just wanted to give that I mentioned and yeah okay so I think that is it for now can we create 2d asset for deficits if you want to create some ass you can write to apply add brackish comm apply at brackish calm it's the email address I definitely want to bring some more 2d stuff on that since it seems to be pretty popular so currently it's almost only 3d stuff cool thank you so much guys I'm going to wrap up the stream now I had so much fun you guys Rock and yeah see you in the next video so thank you so much bye bye everyone thanks of the awesome people who donated in February and a special thanks to Derek huge jerk face we'll never find James Callaghan and Jason Nintendo if you want to become a picture in yourself you can do so a picture that comes that's brekkie thanks a lot guys