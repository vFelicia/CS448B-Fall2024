thanks for tuning in at braies hello everyone and welcome to video number five in make a game a cool little series on making a video game in unity so in this video we are going to add some shadowing to our game we're going to add some real time Shadows uh we're also going toh talk a bit about lights and how they work uh and then we're going to move on to making our ball uh die or at least uh react uh whenever he falls down uh from his platform so whenever the player fails and uh and Falls to Infinity we're going to we're going to stop that and and make him maybe respawn instead so uh basically uh let's start out by adding the lights here so as always I've opened up unity and uh we left off last time uh with a ball rolling uh around a little bit more exciting level but uh as you can see once we roll up here uh there's there are no more lights and the reason why we are still able to see what's going on up here is because of what is called ambient light and ambient light is also called fill light and it's basically um how bright and what color the light is whenever we don't have a light uh so it's it's basically the color of the Shadows and uh and what we can do to adjust this is we can go up to the edit hit render settings and then you should see a setting called ambient light and if we click this and drag it all the way down we can make everything but the lit up parts black this won't affect the Skybox of course and this is great for horror games but not really in a moody fun little game like ours so let's just leave this this at a gray color uh like it was before but you can go ahead and play around with this you can also tint it a bit blue if you would want the more uh you want the color from the sky reflecting it I might tint it just a tiny bit to the blue side there and uh maybe make it a bit darker so we can have some more lights in there without it getting too blown up but uh now that we have adjusted this let's go ahead and look at how our light is set up so currently we only have one light in scene and that is a point light emitting um and you might have noticed that if you we go to the right hand side here we can set it to have shadows though once we do Unity will um will will tell us that we need the pro version and so uh we if we just going to consider that we don't have the pro ver version so let's just disable this light and if we now want some shadows in there uh in unity 4.2 uh they added real time Shadows to directional lights in the free version so that's really great it helps your uh game look much better and it's it's really an awesome feature so let's go ahead and go to game object create other and now directional light so we can get some shadowing in there and uh if we have a look at our Sky Box it looks like our sun is coming uh from somewhat behind us uh so we can just go ahead and play around with this until you find it looking good and um I don't think this is too bad you don't want to come in straight from the camera and this is not going to be our only light source um but let's just maybe bump down the intensity to something like 0.3 or four let's try four yeah this is looking pretty great now uh and we can go ahead and add Shadows so go under the shadow type and hit hard shadows and uh the string is fine at one and the resolution is is fine as is but what we can see now is we have a shadow on our ball this is not that apparent because it doesn't have that many objects to cast The Shadow upon so what we can do is we can make our ground a little wider and this is where it comes in handy that we have made the ground a prefab because we can now we can simply take the scale of this set axis and change this to two and then just hit apply and it will change all the other ground objects too so now when we play our game here we can see that we have some nice shadowing coming from the ball and uh and this looks much better so great now that we have this in place whoops uh we can go ahead and add some more things to our game uh one quick note is that if you think this gets two blown up from one side you can duplicate the directional light and rotate it to the other side and then just bump down the intensity and this will make it look a little more realistic because now we have some light on the other side too but for now let's just not include that uh let's just let the ambient light take care of it okay so let's rename this light to Sun and there we go one thing you can do is if you want something to be in the top of the high key and you know you're not going to be using it in a script you can just make two spaces and it will uh go right up there uh but I like to makeing an uh to make an underscore instead and it will also just be in the top of the hierarchy so you can always find it this is great for things that is always uh there and isn't changed um so so that's that's a a Nifty little feature great so let's save our scene file save scene and let's delete our old light there we go okay so what we are going to be doing now is we want to make uh make it so that our ball will respawn whenever it uh Falls from one of the platforms and we're going to do this by selecting our ball hitting add component going to new script and whoops uh whoops I added script without renaming it let's just try that one more time selecting the ball hitting add component new script and let's call this ball health of type JavaScript and hit create an ad now we can go ahead and duplicate uh double click this to open it up in Mano develop let me just explain because there are several ways to do this first off we could have uh let's see if I can drag this there we go the first option is to use what is called a trigger collider so a trigger and what a trigger does is it wow that's it's extremely bad but basically what a trigger does is it it uh normally uses a box collider so if we have a box here and uh what it does it is detects whether or not something enters the trigger so if something should enter this it won't collide with it it will just go straight through so if our ball enters this trigger we can use a script uh checking that called on trigger enter on trigger iner and uh and what we can do with this script is that we can uh use this to call some code so if something enters the trigger and if what enters is equal to a player or the ball then we want something to happen so on trigger is equal to the ball then uh we want something to happen then we can uh make something happen down here in code so we can place some code in here this is what we want to happen right um but but this has some faults because if our balling ball is falling so fast that um that the trigger won't detect it and that sometimes happens uh then we have a problem because then our ball will fall to Infinity so what we're going to be doing instead is we are going to be using the position of our ball and uh that's done by using transform. position transform dot position and uh and what this will allow us to do is we'll we'll uh just check for the Y position of the bow which means the up and down value so the up and down and if we can just check that if that value is equal to and then we can say let's say uh minus 10 or less than so less than or equal to I'm sorry more than or equal to minus 10 then we want something to happen so instead of of using a trigger and get this complicated setup we will just check for the position of the ball and see if it's below what we want it to and we can use a variable for this so what we're going to do now is we're going to go to our ball health and we're going to delete this function start we're not going to use that and then we are going to make a variable called uh let's say Max fall distance and uh this is going to be equal to let's say minus 10 now in our function update let's make some space and in here we can type if and then uh this script is going to be sitting on our ball so all we need to do to access it is type transform and then we will get the position and rotation and all of that on the uh on the object the script is sitting on so we are just going to be using transform then do position and Dot y because we only want to check for the y axis and if this is more than or equal to Max F distance then we want something to happen and then let's just first off check if this is working and we do that by typing in debug.log and then opening up some parentheses and in here we can type test and close it out and what this will allow us to do is if we go back in our game we should see a variable down here no errors and uh what it will do is if we go to the console window it will show this text this test text it will show test in here whenever that is called so we can check if it's working by hitting play and you can see just when starting out we get a bunch of tests and uh we really only want this to be called whenever we get below that distance and the reason why is because this should be more than or less than or equal to so like that so if we are minus 10 units down or less uh or more then we should call this debug. log uh test and the reason why we use the less than is because this is in negative numbers and that's why it can be confusing sometimes if you don't get this right away it's completely understandable just save this and we can hit play and if we hit clear here we can see there are no tests and if we now roll our ball down and wait for it and there you go the test variable is called so now once we get below the 10 units it calls the test and uh basically here we would uh make our ball jump back to whatever checkpoint we had reached but since we don't we haven't made checkpoints yet what we going to do is we're simply going to replay the level so we're just going to make it load up the same level and we do this by uh using application. load level and load level uh all this needs is the name of the level so we are just going to type I think I called it level one let's just check in the project pane yeah I called it level one so whatever you called it will just copy paste that in there and close it up so if this is still unclear what we're doing is we are making a variable which is uh the max F distance and this is equal to minus 10 because we don't want it to get more than 10 units down and uh then we check if we get below that distance and if we do we will reload the level we are on so now let's save this and uh this is not going to work but let's try it anyway so let's hit play and make our ball fall down and what's going to happen now is well actually actually this worked and that's uh that might be because uh this is our first level if this isn't working and it's saying that you have to assign this uh level then uh what you can do is you can go to the edit uh I'm sorry the file then build settings and what you have to do is you have to add the scene into the build settings here so just hit add current and uh this this does work because we only have one scene in there but if we had multiple levels it would throw an error so simply we just have to make sure that all our levels are added and if you add more than one you can just drag them around to change the order in which they're played so just hit add current and uh yeah we can see it working so now we can try out our level we can see it's beautifully lit up all the way and let's say we don't make this jump oh that's unlucky well then we can just replay great so that was pretty much this video I hope you enjoyed it I know it was a lot of scripting and we also got some light in there and it's looking much better so uh thank you for watching and also uh I would really like to see what you guys are making so please go ahead and tweet to me at bracket.com let me just write that to you here so you can get it on writing so brais treat not.com so at braist treat on Twitter I mean so write to me at brai Street on Twitter uh I would like to see pictures or updates on whatever game you are making and uh you can also get some feedback and uh it's fun for me to see what you're you're using the tutorials for so please if you're making a game it uh doesn't have to be finished just right working progress or whatever um write to me on Twitter and um I'll check out your game so thank you again for watching and I'll see you in the next video