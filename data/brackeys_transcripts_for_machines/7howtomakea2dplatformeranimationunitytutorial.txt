thanks for tuning in at braies hello everyone and welcome to video number seven in the how to make a 2d platformer course today we're going to finally be adding some character animations uh by utilizing the scripts from the standard assets that's already sits on our player and setting up an animated controller that fits with that script so let's just di right into it today uh no long intros as always I've opened up Unity and you can see when we get in here and hit play that our character simply only flips and and doesn't really animate at all so if we select our player you can see that we have disabled the Sprite renderer this was our robot and actually we're just going to go ahead and remove this component completely then we also have a 2d animator which right now has a animator controller attached we're going to keep the animator and also enable it but we are not going to use this animator we are going to use our own separate one that will we will set up uh to work with the current way we have set up our graphics and with our Sprite sheet so the animator right now works uh if we double click this you can we can view it and it's under the sample assets 2D animations here's the animator controller and you can see how the different animations work together you can also see we have a different some a few different parameters uh that will that these animations will transition based on but what we are going to do is create a bit more of a simple animator that will really only have an idle a walk and a jump uh so that's what we're going to do and uh we're going to come uh we're going to create a completely new one but let's just keep this around for now should we need to um uh need this for reference cool so let's head back into the scene view here let's head back under the assets and let's right click hit create animator controller and let's call this player controller actually let's do player anim controler there we go okay so player anom controller and let's drag this on onto the uh players animator make sure you do this or it of course won't work um now the way the animations were set up before is they were simply changing the Sprite in the Sprite component but now what right now we don't have a Sprite renderer our Sprite renderer instead sits on a separate object called Graphics this really gives us more control but also uh need will Al we will also need to access this game object Sprite renderer whenever we switch out Sprites so in order to do this let's create our first animation we do this by opening the animation window and please don't mistake this with the animator they are two separate Windows now let's hit um uh the uh this empty space or you can just hit record and let's hit create new clip and let's call this player idle and let's do anim and hit save so now in here we actually can place down different key frames for all sorts of different values for our player so if we hit add curve you can see that we have all kinds of component information and parameters and values that we can tweak uh during this timeline and we are going to delve into another object called the graphics and then under this we are going to uh delve into the Sprite renderer and then add the one called Sprite so this will allow us to change out the Sprite as we move forward and you can see right now it's simply set two key frames for the same Sprite and that is all we want this uh animation here is just going to be 1 second long and it's not going to change anything it's simply going to have the idle Sprite attached so that we can transition to this and the player will just stand still you could of course have an a whole idle animation where he will maybe breathe in and out a bit or move or do a flip or something but for now to keep things simple and also because this is pixel out and it's it's difficult to do such fine movements we simply going to leave it as is then we're going to go ahead and create another animation so hit create new clip and let's call this player jump anim and this is going to be pretty much just as boring we're going to hit add curve go under the graphics under the Sprite renderer and add add the Sprite um parameter actually don't know what these are called uh let's just call them parameters for now and um instead of this Sprite here uh which is the idle Sprite we're going to insert our um jump Sprite and in order to do this we can simply select our graphic Graphics object in the hierarchy and go over to Sprite renderer and you will notice that the Sprite renderer Sprite setting has turned red and this is because it's currently being watched by the animator it's being recorded So what we can simply do is we can go in here and we can select the right one so we're going to select the jump one you can see astronaut jump double click that and now it's the astronaut jump but make sure that we switch it back over here also so maybe we can just delete this key frame and then copy the jump over so control C command C copy it over there and that's basically all we needed to do so now that we have this in place we can go ahead and create the only exciting animation we're going to be making today which is the walk or run animation um so let's just go ahead and do that so now let's stop recording and let's uh go into the project pane uh and instead of adding each separate Sprite and going through Unity has made a pretty cool very quick way to do these uh sorts of animations simply select the sequence by holding down shift clicking in the first bride holding down shift and then clicking at the last bride in the sequence and then simply drag into Unity this will simply create a new animation for us with those Sprites um in order so let's go ahead and save this as player uh let's do run let's just do walk and ANM and hit save and it will add in another uh another object here which has that um uh animation and it also has an animator and all that kind of stuff but we're just going to delete that and we're going to delete the um the uh automatically generated controller here also the astronaut Sprite Atlas unor Z just because we're not going to be needing that but the cool thing about this is that it automatically generated a player walk animation which we can use so now we simply all we need to do here um actually we we really don't need to do let's see oh yeah um the problem with this animation now when we go under the player and and play this animation uh we can just quickly do so maybe no actually yeah we can do so uh let's try and add it to the um animation controller here so double click the player animator uh anim controller and then you can see we have an idle a jump and a walk and uh if we go ahead and if you don't have these by the way all you need to do is right click hit create State empty and then select it and up here you can rename it let's say player shoot uh just for instance and then we can add a motion here so simply drag in the clip or instead of doing all that you can simply drag in the clip and it will aut automatically added for you cool so in once we're inside this animator controller we can make transitions between the different animations but right now I just want to check check out if the player walk animation will work my guess is that it won't because what we did when we created this is animate the Sprite renderer that sits on top of the player when really we need to animate the one under the graphics just with as with the two other animations but let's just have a go at it to see if it works in order to do this we need to make sure that this animation is the first one that will play and to do this we right click and hit set as default you can see that it's now orange which means that it will play by default so cool so we have an under the player we have an animator where we have the player anim controller um as the controller and inside of this we have three states where uh the default is the player walk animation let's see if this works don't think it will no indeed it doesn't it doesn't and uh yep it doesn't so uh let's instead go ahead and delete this player walk animation and create a a real one so let's go ahead ahead and select the player again select the animation you can see that we get a bunch of uh warnings here but that's because uh some of the um parameters aren't present yet we're going to add those in a sec let's go under the animation window here stop recording let's hit add curve uh no I'm sorry not add curve let's go ahead and create a new clip so we'll just do this by hand called player um walk anim hit save and uh let's see here if we duck this up here simply drag and drag and drop it to dock it and then select the sequence and drag it in here indeed we get key frames for that sequence but again it's changing the player Sprite and that's not what we want we want the graphic Sprite so let's R click and hit delete key oops not no remove property that's what it's called it's called property not parameter and let's hit add curve go into the graphics object go into the Sprite renderer go the Sprite and hit that and add that and now let's see if we delete this nope we don't want to do that let's just delete the last one maybe and let's see if if we drag this in nope okay so we're going to have to do this by hand so the first one here uh let's select the graphics object and let's select the uh astronaut Sprite Atlas _ Z then we're going to move forward let's do uh I don't know how fast we want this to go we can set the sample rate to 12 and that's a basis um anything between maybe um 6 or eight to 16 is a normal sample rate for uh these kinds of 2D games sample rate is just how fast it will update uh think of it as frames per second it's basically the same thing uh but not quite so now we move forward one sample and uh let's change this to astronoid Sprite Atlas uncore one again move forward one change it to underscore two move forward one and I'm just going to quickly do these it's a good thing we don't have too many that's got to be an easier way and I have yet to find it there we go so now we have actually a full walk cycle so if we talk this down here again so we can see it in action and hit play you can see that our character is indeed doing a walk animation so let's try that one more time here select the uh oops where did our there so let's play this and you can see that he's walking back and forth um we could do some adjustment for the arm to make it follow we could add an animations for that also or we could do plenty of stuff but when we assumed out this much and moving at the same time I don't think it's going to be too noticeable so that's a second priority let's just get this working first cool uh now we need to set up the uh the animated controller so right now you can see we have a bunch of different states uh oops it's added too many actually let's delete this one and let's make sure that we add a motion to this one so the player walk Anem here let's just make sure we drag one under there and let's set the player Idol to be the default now we're going to add some different parameters down here so hit uh plus and the first one we're going to add uh we definitely going to need one called speed which is going to default a zero we're also going to need another one called ground or maybe it's grounded I don't remember that's why we kept the controller here it's just ground so that will be whenever we stand on the ground let's go back in here do ground we also going to need a uh Boolean for uh called a Crouch and we not going to be crouching with this character but we it is included in the script so we can either just add the the parameter here or go remove it in the script but for the sake of these we are just going to add it as a parameter and also uh that will allow us to do crouching later should we choose to do so it's not going to be uh impacting performance it's it's really not a big deal it's just changing a variable and then last up we are going to have another float called V speed for vertical speed and this is again not something we're going to be using but this could be uh used to see if the character is falling and then maybe make give him some kind of a fall fall animation but that's not something we're going to go into uh not yet anyways cool so he starts out with the player Idol animation and then we uh maybe want him to transition transition to a uh walk whenever our speed is increased so right click on the player Idol animation and hit make Transition you can see you get this Arrow which we're then going to click on the player walk animation and then click on the uh line itself and it will turn blue because we have it selected and in the inspector we now have a bunch of different settings that we can tweak we want to go in here and instead of exit time which is us used for blending we are going to do uh if uh speed uh maybe I should just quickly explain this this is our conditions uh up here this adjust how the animation Blends from one to another this is not so relevant relevant when we're doing Sprites but it is in 3D animation when you want a smooth transition from a walk to a run or from an idle to a walk but here we're not doing smooth transitions because we are simply changing Sprites um and down here is the conditions Tab and what this will do is will allow us to uh create basically if statements that will check for values and if they are met it will do the transition so we're going to select the first condition which is going to be speed and we're going to say that that has to be greater than and let's just do 0.1 so if the speed uh is greater than 0.1 it will just transition to the walk animation and then we can say uh make transition and then go back to the play idle animation and here we can simple simply say that if speed is less than 0.1 uh we are going to transition back again to our Idol then the player jump animation uh we really want the player to be able to jump both from the idle or from the walk so instead of adding transitions from both of them we're going to use the any state node so this will allow us to transition no matter what state we're in to that animation so let's right click on that hit make Transition let's click click on the um on the um the arrow here and that's select can transition sself then we are going to hit uh under the condition select ground is um what is it uh if ground is equal to false we are going to be jumping you can see this is very similar to the way they've set it up under the 2D character uh controller um that is included in the standard assets and you can also see that they simply transition back to the idle so whenever we're not jumping we are just by default going to go back to the idle and then from there we can transition on so let's just do the same so let's go back into the player animation animator controller and let's in here uh make a transition from the player jump animation to the idle and let's in the condition say that if ground is equal to false and that is basically all we need so now we should be able to hit play and you can see that when we start walking the walking animation plays and when we jump the jumping Sprite Place whoops for some reason uh we are not transitioning back let's see what is going on here and this is another cool thing if we um go ahead and maybe dark the animator over here and drag it out uh by the inspector we and then hit play we can in real time see how the animations are played and how the parameters are affected so let's hit jump we can see that the ground value is turned on again but it's staying at the player jump animation and it's not really trying to play this transition this suggest that we've set that up incorrectly now let's select the transition go under conditions and indeed we need to change this to true so now let's hit play again and actually let's maximize this because I think we've we deserve to see this in full screen so we stand still and the idol animation is playing I shouldn't really call it an an animation but the idol Sprite is there and then when we start walking you can see him playing the walk animation and when we in the air he's just doing his jumpy thing so that was basically it for this video I hope you enjoyed it remember that you can always F follow me on Twitter at Braes treat or get to me at facebook.com/ Braes if you want to know more about what I'm doing and uh just follow the progress of the videos uh there's also sometimes cool tips and tricks or if you want to get involved in any way cool so that was it for uh today's video thanks for watching and I'll see you in the next one