in this video I'll show you a super cool trick on making a quick and easy level editor for Unity this trick was inspired by a live stream by cool 18 so credit goes to him for the idea basically what we'll do is create a low resolution image and use the color data from that image to populate our level that means that we can use any image editing software to paint pixels on top of our image and when we start the game unit will then replace each pixel with some kind of prefab that could be a ground tile a coin an enemy or even the player spawn point so without further Ado let's jump into it the assets I'm using here from the 2D mega pack you can get it from Dev assets.com as with everything else it's pay what you want that will be a link in the description I have a player a ground object and a coin and if we collide with the coin here we will pick it up if you want to learn how to set this stuff up check out my course on creating a 2d platformer so let's begin by right clicking in the Hier key creating an empty object let's reset the transform on this and let's call it level generator let's drag it to the top here so we can always see it let's let's hit add component and let's create a custom script called level generator as well it's going to be of type c and let's hit create an ad let's double click it to open it up in visual studio so first off we can delete the two using tags at the top and we can also delete the update method you can easily have the level generator create multiple different levels but in our case we'll focus on making a level from a single map so let's first off create a variable for this map it's going to be public so that we can access it in the inspector and it's going to be of type texture 2D this this will allow us to put an image into this slot let's just name it map meaning inside of our start method we want to generate a level based on the color data inside of our map so let's call a function called generate level let's make this function it's going to be of type void because we don't need it to return anything it's going to be called generate level and it's not going to take any arguments now in order to generate a level we need to load data from our map to do that we'll Loop through each individual pixel that makes up our texture and depending on the Val of the pixel will then spawn a corresponding tile so to Loop through our texture we'll create two for Loops the first one will Loop through the width of our textur so let's go four we'll create an integer variable called X and set it equal to zero we then want to keep looping as long as X is less than map. width and each time we Loop through we want to increase X by one then for each of the pixels on the xaxis we also want to Loop through all the pixels on the Y so we'll create another for Loop here where we create another integer called Y and set it equal to zero and we want to continue as long as Y is less than map. height and again after each iteration we'll add one onto our y variable so we are now looping through all of the pixels in our map you might think holy smokes that's a lot of iterations and yes if your texture is huge this is going to take some time but luckily the computer can handle operations like this super fast so for each pixel in our map we want to check if that pixel's color corresponds to a certain tile so let's call a method called generate tile and we want to feed it our X and Y coordinates then when we create this method generate tile we want to take in an integer X and an integer y the first thing that we want to do here is get the color of the pixel that we're looking at loc the unity has a function that makes this really easy all we need to do is call map. get pixel and input the X and Y coordinates now this is going to return a color and so we can store this in a variable of type color and let's call it pixel color and now we can start doing things based on the color of the pixel for example we can check if pixel color. Alpha is equal to Z that means that our pixel is totally transparent and in that case we want to just totally ignore it so we'll go ahead and return before we get to spawn any tiles and let's also leave a comment here saying that the pixel is transparent Let's ignore it if it's not transparent well then we want to check what tile we should spawn but before we do that let's just check if everything is working let's write debug.log and let's write out the pixel color so now we should see that when we start the game it's going to try and generate a level by looping through all of the pixels in our map for each pixel it's going to call the generate tile function which is then going to get the color data from that particular pixel and store it inside of pixel color if the pixel is transparent then we simply skip it and if it's not we write out a message to the console with its color Dash let's save this and head into unity and we now have an empty slot for our map so let's go ahead and create one for this you can use any image editing tool I'm going to be using Photoshop all we need to do is go ahead and create a new image we can call this level one I'm going to make it 64x 16 pixels let's hit okay let's zoom in on it I'm going to create a new layer I'm going to switch to the pencil tool by holding down this button and selecting pencil tool and then going to right click make sure the size is set to one pixel and the hardness to 100 and as the color I'm then going to select a total black now I can start painting out some ground elements I'm can use the Eraser if I mess up here so each one of these pixels are now going to represent one tile and I'm using a total black as the color for my crates make sure to disable whatever layer you have in the background so that everything else is transparent now in order to save this file let's go file save as let's navigate to our project now because I'm using Photoshop I can save it directly as a phot Photoshop file if you're using any other software I recommend saving as a PNG this unlike a JPEG will keep the transparent background so let's now save hit okay and when we now go into Unity we should see the level one texture we want to make sure that the filter mode here is set to point and our compression to none this way Unity won't blow out our texture in anyway let's also go under Advanced and it's very important here to remember to check read write enabled otherwise we won't be able to load color data from our texture and it'll throw us an eror let's then hit apply let's select our level generator let's drag in our level one texture let's also remove our ground and our coin from the scene and when we now hit play we can see in the console that for each Pixel It throws out a debug.log statement and you can see all of these have zero on the red zero on the green and zero on the blue which means that they are black and an alpha of one also note that I made 46 pixels and we now have 46 messages so now we need to tell Unity that whenever we get a black pixel we want to spawn a ground prefab normally when you want to associate two values like this you use a dictionary and that is definitely the fastest way to go about it but unfortunately Unity by default doesn't allow us to edit dictionaries inside of the inspector and so we would have to create some kind of editor script to allow us to do that or pick up an asset on the asset store like Odin or full inspector instead let's use a normal array where each item in the array is a class that we create storing both a color and a prefa let's right click in our project hit create C script and let's call this class color to prefab let's then double click it hit reload all let's remove the two namespaces at the top let's also make sure this doesn't derive from mono behavior and let's delete both our methods now in this class we want to have a public color let's call that color we also want a public game object which is going to be our prefab to make sure that this will draw in the inspector we want want to mark it at the top as system. serializable so now when we save this head into the level generator script and at the top create a new public color to prefab array where every element in our array is a color to prefab storing a color that maps to a specific prefab so we can call this array our color mappings when we then save this and hit into Unity we can see a color mappings array appear and if we now increase the size we can see an element here with first a color we want this to be totally black which it is already and we also want to bump up the alpha to 255 and we can then drag in our ground prefab now all we need to do is go to the bottom here and inside this function that is called for each pixel we also want to Loop through all of the elements in our color to prefab array so we'll go for each color to prefab and we'll call the element we we currently looking at a color mapping in our color mappings array so we'll Loop through each element in our color mappings array and check if the current element that we're looking at which is called color mapping do color is equal to so we'll use dot equals the pixel color and if it is well then it's a match and so we can instantiate the prefab so we'll call instantiate and the prefab that we want to instantiate is now our colum mapping do prefab and the position where we want to instantiate it is given by our coordinates up here and so we can go and create a vector 2 called position and set it equal to a new Vector 2 where we give it our X and Y pixel coordinates which are now real Unity coordinates and we then simply feeded our position we don't care about the rotation so we'll just go Quan do identity which means no rotation in other words a rotation of 0 0 0 and then just to clean everything up we can also parent it to this current object so the object that we want to specify as the parent is our transform so now if we save that and go into Unity double check that our color mapping is set up correctly between a toll black and our ground prefab and hit play voila we've got a map generated from a texture that we can very easily edit in order to change our level I don't know about you guys but I think that's super cool awesome and from here on it's super easy to add new elements to our array we simply increase the size choose a color for our coin we could go for a yellow color so let's give it 255 on our red and 255 on our green to make sure that we're using the exact same color we can even copy the hex code down here then drag in our coin prefab and inside of Photoshop or whatever else you're Now using let's create a new layer and we now set the red channel to 255 and the green channel to 2 55 as well and so we can paint in some coins it's good to reward your player with plenty of coins let's now save this and as soon as we now go into unity and hit play our level has updated and we can play through and get all of the coins we can even control where our players spawns using this same method if you had enemies in your game you could spawn those as well to spawn our player we simply go to our level generator add a third element for this one let's use say a a total blue color as the prefab let's drag in all player inside of Photoshop let's now change the color to Blue create a new layer and let's set the spawn point here then when we save this go into Unity delete our player and hit play voila all player spawns in the middle of our scene so I hope you will take this and apply it to any game that you are currently working on I find it's a great tool especially when doing ludum Dar games because it allows you to really quickly cram out new levels that's pretty much it for this video I hope you enjoyed it if you did make sure to subscribe so you don't miss a future one also if you want to grab the script for yourself you can do so at the breis F just go f. bra.com that will also be a link in the description I recently pushed an update to The Forum so it should now be faster and more stable and most importantly spam free so if you have any questions I really suggest posting them there all right thanks for watching and I will see you in the next video thanks to all the awesome patreon supporters who donated in May and a special thanks to Derek heemskirk faal marifi Stone gamer cmdr Firestone 38 Thomas vley James cound cyborg Mommy and Jason the Tito if you want to become a patron yourself you can do so at patreon.com Brees