you've probably had the feeling of a game being too easy while your friend was struggling or maybe the other way around this may even have led you to put the game down either because you were bored because of it being too easy or annoyed because of the high difficulty but why was the difficulty not right well in this video we're gonna find out but first this video is sponsored by Google for games each year the team shares their latest gaming announcements and this year was no exception Google has published more than 10 hours of content that covers everything from announcements to best practices and case studies that will help you successfully create launched and scale your game they also announced a new service called the game package registry for unity supporting all unity developers on version 2000 18.4 and later the registry gives developers a single point of access for all of Google's relevant api's right from within unity the registry launched with support for play billing library Android app bundles play asset delivery Play instant and the firebase unity SDK with more API support on the way google has a ton of tools ready to support game developers so I definitely recommend you go check it out now by using the link in the description now before we can find out how to balance difficulty we first have to understand what influence difficulty has on the game well in game design difficulty is part of a bigger concept called game progression which describes how the player and game evolved together over time the ultimate goal with good game progression is for the player to reach and stay in a state of flow but what is flow well flow is a state of hyper focus and engagement some people refer to this as being in the zone you tune out everything except the task at hand and operate at peak performance time flies and you lose your sense of self flow is also not exclusive for games it happens in many things in life all it requires is a challenge that meets three requirements number one you must be performing a challenging activity that requires skill number two the activity must provide clear goals and feedback and number three the outcome must be uncertain but it must be able to be influenced by your actions so to get a better understanding of flow we can visualize it with a flow graph this is a chart that maps play skill on the xaxis and challenge on the yaxis at the start of the game the player has little to no skill and understanding of the game mechanics as the player progresses however the player skill increases and with that an increase in challenge should follow if the challenge doesn't increase enough the player becomes bored and if it increases too quickly the player will get frustrated both cases result in the player getting disinterested in the game and leaving so the goal is to keep everything nicely balanced between these two scenarios but don't think of it like you have to constantly stay on the line think of it more like a channel that allows for some wiggle room because just hitting players with one increasingly difficult challenge after the other is exhausting instead we need to mix things up and give the player some breathing room between challenges and that's all fine and dandy but how can we adjust our difficulty so that we keep the player in the flow Channel and guide them back if they fall out well when talking about difficulty it is important to note that there is no fixed difficulty by that I mean that different players can have vastly different experiences at the same difficulty setting in other words difficulty is relative instead we will refer to difficulty as the perceived difficulty of the player meaning how the player experiences the difficulty level and perceived difficulty can actually be split up into four components the player power level which refers to the players artificial strengths such as stats weapons and abilities give the player extra health and they will stay alive longer give them better weaponry and they will do more damage the player skill level refers to the player's physical and mental strengths how good the player is at the game this contains stuff like game knowledge and raw skill knowing all this smoke spots and callouts in counterstrike might help you out a lot but in a direct gunfight the player with the better aim aka higher raw skill will probably win if you throw a new player into the last boss fight in a game they'll probably fail because of their lack of game knowledge even with endgame gear and abilities and justice with the player the enemy power level refers to the enemy's power whether being stats and weapons or the actual number of enemies this is a great way to quickly amp up the difficulty without much extra work on dev site but be careful though just buffing the stats of enemies or spawning more might be easy but not necessarily very engaging to the player and finally the enemy's skill level refers to the AIS intelligence their navigation skills decisionmaking skills and weaponry skills such as aimed precision fighting smarter enemies is often way more rewarding than just shooting the same guy twice as many times thankfully SD game designer we can control many of these variables but the players skill level is out of our hands at least the raw skill however how fast the player learns the mechanics of the game can actually be influenced by our game design but that's for another video so now we know that as a game designer we can control three of the variables in the difficult equation player power enemy power and enemy skill but how do we scale these variables well that completely depends on the game so let's look to some other games for examples in RPG games or similar genres the players power his stats and abilities naturally increase over time as he levels up and games new gear but sometimes the natural power gain is not enough and some players might get stuck at certain bosses or challenges a way to counteract this is by giving players the ability to replay sections to get more HP buy the items new weapons and abilities this way a player that's behind in skill is still able to catch up by getting more power be careful with this though not all players like to grind the same content over and over again a way to make the grind less obvious is to use procedural generation for example randomly generated dungeons and encounters or if you have the resources you can create entire side quests chains with original content another way of adjusting player power is with buffs and debuffs for example take a look at path of Exile which has an endgame system code the Atlas here players craft their own maps with modifiers these modifiers can increase the amount of enemies and loot dropped in the map but they can also give players debuffs such as longer cooldowns or no health regeneration this is a very cool system because it allows the players to challenge themselves without getting better it's also the player is choosing the challenge it's not the system randomly interfering with the players experience in terms of enemies scaling the power is the easiest and most common approach going back to the path of exile example from before when customizing your map enemies can also get modifiers such as more health extra damage higher crit chance and so on I want to point out that I don't think adjusting enemy power is a nogo this part is just as important as enemy skill and almost mandatory for many games imagine playing World of Warcraft without buffing enemy numbers it would look something like this yeah not very exciting enemy power is definitely needed just apply it with caution now enemies skill though is a bit more tricky how do we make the enemy appear smarter or dumber well in games such as Diablo 3 enemies can have traits which have a great impact on gameplay the amount of traits enemies can have increases with the difficulty at higher levels an enemy can have up to four traits adding cool new mechanics to each fight such as illusion clones you have to kill and frost orbs or arcane beams you have to avoid new mechanics like these will spice up the gameplay whilst making it harder for the player another example is the way a eye is handled in Starcraft 2 actions per a minute or a p.m. is a number showing how active a player is a player with a higher APM is often doing more stuff at the same time managing units assigning tasks for workers upgrading stuff and so on APM is even getting tracked in professional matches well a computers of course way faster than a human at performing actions in an RTS game because of this most RTS a eyes have a cap on APM to prevent it from completely destroying every human opponent APM in this case is a great way to scale the difficulty in games with a similar AI now this of course many more ways of scaling the different aspects of difficulty in your game we're just scratching the surface here the most important thing is that you think actively about difficulty when designing your game and I really encourage you to get creative with it but finding the right difficulty balance is one thing we still need to figure out how we allow the player to influence the difficulty should the player be able to just choose a difficulty or should the difficulty change on its own well static difficulty settings is the most basic and probably most common way of addressing the difficulty problem the game has two or more difficulty settings that the player can choose between depending on their skill and preference if the player wants to lean back and steamroll through the game they can choose a difficulty that's lower than their skill level and if the player wants a challenge they can choose a harder setting this leaves the choice up to the player which is fine for some games but what if you want every player to have roughly the same experience when talking about difficulty and what if the player is unsure about their own skill level well with dynamic difficulty adjustment or DDA you analyze the player's performance during gameplay and adjust accordingly now this is something that you can get really nerdy with your system could look at things like how much health did the player loose in the section how fast was the player or how precise was their aim the crash bandicoot games for example make use of DDA to slow down obstacles and give extra hit points according to the players number of deaths this however can be dangerous because we're negatively affecting the player for being good to counteract the difficult to increase we can introduce some sort of reward for getting faced with these hearty enemies DDA also requires a lot of work to develop and finetune you have to make sure the change is subtle if players start to realize that their performance has a great impact on the game's difficulty some might try to exploit the system instead you could also go for some sort of hybrid approach Resident Evil 4 for example employed a system called the difficulty scale this system would grade the players performance on a scale from one to ten this is like the difficulty would lock players to a specific grade but with a margin for example on Normal difficulty you start at scale for can move down to two if doing poorly or up to seven if doing well the grades between difficulties can overlap so a player doing well on easy can potentially play at the same difficulty scale that's one doing poorly on normal this is a great approach because we're still adjusting the difficulty based on the player's performance but the player is able to choose if they want the experience to be harder or easier overall that's pretty much all we have time for in this video now we've mostly been focusing on single player or coop games game difficulty in competitive multiplayer games are quite different in multiplayer games perceive difficulty is determined by things like matchmaking balancing and complexity of the mechanics so throw a comment down below if you want to see a video on that also if you want to take deeper into the theory of flow and difficulty will of course have some links to where you can learn more in the description also don't forget to check out all the video content from the Google for games developer summit with more information on key announcements and new learning material simply click the link in the description to get started on that thanks for watching and I'll see you in the next video thanks of the awesome patreon supporters who donated in February and a special thanks to face of Merrifield lost violence the forever Leela set Navi ninja tended to sanic dad to Sam Jacob Sanford Morgan 20 art no Kiyosaki Gregory Pierce Michael Karpov the mighty Zeus Owen Cooper Alton the fierce digit car and Rasmus you guys Rock