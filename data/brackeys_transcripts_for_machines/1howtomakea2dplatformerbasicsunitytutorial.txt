thanks for tuning in at brakus hello everyone and welcome to the first video in this how to make a 2d platformer course so in this video we're just gonna set up the basic character controller with a camera movement script we're not gonna actually be coding today we might look at some code and maybe edit it a bit but we're just gonna be using some really awesome assets to get this working of course later we're going to be programming we are going to be designing and we're going to be doing a lot of selves but when it comes to character controllers it's just a good idea together a working one in there just when starting out awesome so this series we're gonna code in csharp and basically it's gonna be for novice to intermediate users and then we will cover maybe some more advanced things later in this series but if this is your first ever experience with unity I recommend you go ahead and watch maybe the make a game course or the going to D course here and this is all available at brackish comm if you simply just scroll down or you scroll down you can see that I've changed a lot of things on the website to make it much more pretty and more functional so everything should be available there awesome so let's just get started with today's video so as always I've opened up unity and what I've done is I've created a new project and I've called this one 2d platformer tutorial I haven't imported any of the packages and I've set up the defaults for 2d in here I haven't done anything yet but what you might want to do is in the scene view switch over to 2d great so now we see everything in a two dimensional space with X & Y awesome so what we will do now is we'll download the new sample assets from unity so before if you rightclick on the project pane and hit import package you can see that we have all kinds of standard assets that we can import that unity has been premade for us so we don't have to do it ourselves but these are pretty outdated so what unity has done is they've made a new updated and and much better version of the sample assets and these are currently in beta by the time you watch this video they might already be in here somewhere but right now they're only available on the asset store so let's go to our browser and let's type in asset store that unity3d comm you can of course also find it on google and then we're gonna search for sample assets or you can also search for standard assets the reason why we're doing this in the browser it's the first one here is because it's really slow in unity which should be get better in unity 5 which should come this summer at least I hope so great and now when we we found it here let's click open in unity hit run program and it will open up in the asset store inside of unity it will just take a second to load here as you can see this pretty slow but there's a lot of cool assets great so once it's loaded up let's simply hit import you might need to download it first but then just hit download wait for it to download and then hit import it will decompress the package and now it will show us all of the what the package contains it has a bunch of things in it as you can see there's a whole lot of of different assets in here so let's just go ahead and select none and then just check the sample assets 2d folder and it will automatically include all of its subfolders and items and this is just all we're gonna import for now so let's hit import and it will start in putting these assets correctly this might take a little while depending on how fast your computer is if you already have some of it imported and all that while it's importing we can just close down our browser here so we don't have it running and now we can see it's done let's close down the asset store and we are ready to start importing us or we are ready to start using some of the as these assets in our scene so let's double click on the sample assets folder which should now have appeared in your project pane let's go in the 2d and now we can see a bunch of different folders containing cool assets let's now go under prefabs and the most valuable assets the 2d character controller should be here now we can just go ahead and let's actually rename this to player and this is just personal preference it's up to you and let's drag this into our hierarchy so now it should be in our scene we can see it here and let's just position it right above the xaxis here and about with a zero on the X here so let's just do cero point come let's do just this this is fine 1.6 and then with and see at Z at 0 awesome let's walk through what this character controller excel actually does so it has a bunch of different components first off its layer we want to set this to a custom layer I've already added a layer called player if you don't have it simply hit add layer and down here on the user layer 8 you can simply type in what you want then again select the player and select it from the dropdown list say yes to children so it will change all of its children also awesome then it has the transform it's which is position rotation and scale the sprite renderer which will handle actually showing our graphic and the sprite renderer has what is called a sorting layer and this is basically just if this is going to be on top or underneath other layers so we can use this to sort as to sort our graphics and simply what we want to do here so you're going to go in here and as you can see I've already added some of these layers just to show you what that you can rearrange them like this and these layers are arranged according to rendering order and that means that whatever is on top will be rendered behind because it will it will render it pretty much like a a painting that it first paints the background then the player and then the foul ground on top so we're just gonna do background player and then for ground now in our player we can simply select the player layer and then there's also an order in layer if you have multiple players but we're just going to leave that at zero then right now we have a bunch of animations for this but I don't really like the way they look actually let's let's go ahead and play this to see what this looks like right now and in order for us to play this we need something for our character to stand on so let's find the ground let's go into 2d sprites and then use this prototype type blue one this is pretty cool and let's simply just set the X to zero and then drag down the Y so it's almost resting let's do minus ten there and so we can we can stand on this but in order for us to actually collide with it we need to add a physics component so go to add component physics 2d and then box Collider 2d so now our player can actually interact with this in fistic space let's rename this to ground awesome so now when we play our character will fall to the ground and we can move from left to right let's just disable these gizmos here so go up here and hit kiss mouse and it will disable them so you can move from left to right and you can jump using space but you will notice that right now we can jump infinitely I just jumped a bunch of times and this is not really something we want so in order for us to fix this we are gonna just tweak some variables on the player so now select the player object let's disable the animator which handles all of the animation it stores the animator controller which shows how animations are tied together if you want to see this you can just double click it and you can see all of the different animations here and how they are connected that's something we are gonna go into later again this is just a quick overview one thing I do want to notice too want to say before we move on is that all of this is just placeholder art we are gonna do a bunch of custom stuff and I'm probably also gonna do some designs that you can use but the reason why we are currently using placeholder is first of all to just get our game set up but also I wanted you to have the opportunity to choose what you want to see in this course so if you have a good idea something you want me to see explain want to see me explain or or create please write it in the comments the details of this game is not planned out all I know so far is that it's gonna be a 2d platformer I would love to do some shooting but let me know if you want puzzle mechanics or a certain art style maybe 8bit maybe just normal normal sprites what kinds of animations do you want to see do you want to see special physics stuff all of that please write suggestions in the comments so I know where to go from it's depending on you cool so let's move on with our play here select him and then in the circle Collider which is gonna leave this as you can see he consists of both a box Collider and a circle Collider and to get the the right collision then he has a rigidbody 2d component and this is because there are basically two ways to make character controllers in unity the first one is to use a rigidbody component which unity has done here and the good thing about this is that it will easily interact with other game objects so it has good physics interaction in terms that you can push boxes around and add with a interact with other rigid bodies it doesn't give you quite as much control over how he the character behaves but I really like this type of movement the other is to code all of the movement from ground up simply using raise where your cast lines to see if he's standing on the ground you you calculate all movement yourself not just by adding forces and such so that's the second way and it's a bit more complicated and not really something we are gonna need so far awesome so you can of course tweak the rigidbody for your liking and now we get through the really cool stuff now we get to the platformer character 2d movement script and this is why we can change stuff like his speed his jump force the scratching speed whether or not he can be controlled in air I really like when 2d characters complete couldn't be controlled in air I know it's not realistic but I think that not being able to control in airs it can be really annoying especially when when a lot of jumping is so involved so I would leave that if I was you but again it's up to you and also this is where we are going to tweak where we're gonna fix the bug where you can currently infinitely jump the problem is that we have this this drop down here called what is ground and this is basically a set of layers that you can include or exclude when ever the player checks if he's standing on the ground so right now you can see we've made a layer four for our player coal player and that is also on the list and this is the essence of the problem because our player is not a ground but right now the script thinks he is so whenever he's just floating in air he's colliding with himself so that the script constantly thinks that well we are standing on the ground we can jump again this is an issue because we're actually just colliding with ourself so let's just drop down this menu and it's disabled the player in what is ground now when we hit play we should be able to only jump once you've hit he's hit the ground and and as you can see it works then we have the platform a 2d user control script this is where all of the input is handled because the the cool thing about this current controller is that unity have split it up into two scripts one for the actual movement and physics calculation and one for the actual input so that we can easily tweak how we want him to be controlled and how he behaves that's really awesome it makes the scripts easier to read and and all of that for now I'm gonna lead Lee leave the crouching in here though I'm not really sure it's something I want for the final game then at last we have the box Collider 2d which I also showed you before great now that we've tweaked tricked the sky let's hit apply and all of the settings will apply to our prefab and he's working just the way we want him to now we can go ahead and add a main camera that will actually follow our player so let's select the main camera let's rename this by deleting the space it's generally good practice to not have spaces in your naming I don't know why unity names main camera with the space by default but I like to delete that and of course also remember that unity is caps sensitive so you need a good system for when you need when you want to do capital letters and when you don't I mean for game objects I normally do each word with a capital letter but for many variables depending on the type I begin the first word without a capital letter again this is completely up to you just make sure you create a system and stick to it awesome so there are two ways of doing this first off we can simply drag the main camera under the player so now it's parented to the player and it will follow him wherever we go the solution works but it's not exactly great the reason why is we don't have much control over the camera we can't unparent it or make any cool effects with it and it's not really a smooth position also when we would want to maybe delete the player if he died our main camera would disappear too so those are all problems that can be easily solved by having a script simply setting the position of the camera to the position of the player and in here we can also do a bunch of smoothing and smart camerawork in order for it to yet to work better so what we don't want to do now is simply we want to go on a 2d then then script and we want to find the camera to the follow script let's select the main camera and drag it onto there awesome now let's set the target to player so drag the player on the target and let's see if this works our main camera now follows our player perfectly it looks much better but I think it's just a bit too smooth for my liking also if you notice right now when we play the game the camera slowly fades up so let's just make sure that the camera and the player are at the same Y position so let's just do set the player to 1.5 then copy this position and paste it under the cameras Y position awesome so now when we play it will already be at the exact position of the player of course he drops down a little bit but that way it just gonna ignore awesome so under the the camera 2d follow script you can see we have a bunch of settings the first one is dampening which is basically how smooth the movements of the camera is gonna be and I think that right now it's way too smooth because I would really like this game to be quite fastpaced and then it quickly gets annoying if your camera doesn't follow and if it if it's constantly moving and all that so what we're gonna do is we're gonna do something like 0.3 the lookahead factor is pretty cool so right now if we let's say walk a bit to the left you will notice that our camera doesn't focus on a player right right away it looks three units ahead and this works for both directions and it helps us look forward to see what is coming up ahead so it's great for to give the player a bit more insight in on the player direction he's walking but I think it's just a bit too much asses so let's bump this up to 1.5 then of course we have the return speed and the move threshold which you can adjust to make the the blending back a little a little better so why now we look and then it slowly fades back into our players position you can adjust those values to make that transition better if you don't like it I think it's pretty good as this so now that was pretty much the basics of this tutorial I'm glad with what we've gotten done here we've set up a basic scene with a character them that moves and a main camera that follows him again I can't stress this enough please leave some comments on what you would like to see I'm very open to feedback and I'm looking very much forward to seeing how this game will shape up cool so thanks for watching this video and I'll see you in the next one