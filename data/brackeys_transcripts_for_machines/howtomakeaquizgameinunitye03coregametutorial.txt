thanks for tuning in at brakus hello I want to welcome to the third video on making a quiz game in unity today we are going to be tying together some of our code with the actual interface in unity so to be displaying questions and maybe doing some animation stuff so that's going to be a lot of fun if you think that I sound a bit weird that's because I still am a little bit sick so as always that's why good so let's just jump into today's video so you can see here that I'm in unity and I haven't changed anything since the last time I was here and the first thing that I want to be doing is actually changing this question placeholder here so if we jump into our gamemanager script let's go ahead and make a reference to that and make sure that we change that while whenever we load in a new question so you can see here that I'm in visual studio and we have this a function here that gets a random question and we are just going to remove this debug block statement and I want to rename this into instead of get random questions so I wanted to say set current question I think that makes a bit more sense for what we're doing and inside of this what I want to do is this is where I want to access our current question dot fact oops fact and that is the actual text that we want to display and why do we want to put this well we want to put this into a private reference so I'm going to make a serialize field here private to make it show up in the inspector make it a private and then we'll do a text object and whenever we want to use a unity text from the new a GUI system or relatively new we need to include unity engine dot UI up here so that's part of the UI namespace so we have a private text and we'll simply call this the question text or the fact the fact text and we can just close that off and then down here we can say that fact text dot text needs to be equal to the current question fact and when we save this head back into unity find our game manager we should see a new field pop up here indeed we do and I'm just going to close off the questions array there and we can just take under the question panel and the question here we can simply drag that onto there and let's just instead of question that's called this fact just so we are using the same terminology throughout and let's join try and hit play here and you can see that now that states something that is very obviously very true so the next thing that we need to do is kind of make this interactive so we need some kind of win or lose statement and therefore we need to hook up these to true and false buttons so let's make a a couple of public methods that will do this for us so first off we'll make a whoops a public I need to move my keyboard closer here so I can actually hit the buttons there we go a public void and this is going to be the user select true and in here we will simply say that if and then if our current question dot is true well then we have selected the correct answer then we can write out debug the lock are correct else meaning if we have selected true and the current question is not true then we can write out that we were wrong so we can write out wrong here there we go and we will duplicate this piece of code down here and make this user select false and if you have multiple our answers if it's not just a true or false you can make this into a single method that has an integer stating what the user has selected or enum or whatever so you can use an argument instead of just copy pasting this method but whenever we just have boolean true or false this is going to be work just fine so use the Select false and we can see here that if current question that is not true then we want to write out that was correct so if we've selected false and it was false then we were correct and it was true then we were wrong perfect so now we can just save that head back into unity and now we can link these methods up with our actual buttons so if we go ahead and find our true button here for example we can start with that and find the actual button layer then on click here we have the possibility to add an event so we'll go ahead and hit plus on that will take our gamemanager and drag it in and the function that we want to access under our game manager is usage select true we can do the same with our false button so find the button layer add a new on click event drag in our game manager and here on the game manager we want to select usage select false good so now we can hit play here and I am super cool that is indeed true and you can see it says correct if we then choose false you can see it says wrong so that's perfect so the next thing that we need is some is both a way for this to be displayed on the UI but we also need a way to transition to the next question so let's begin with that so let's make a method that will transition to the next question but it will do so after a certain amount of seconds we need some kind of delay so that the user can see oh I was correct or was wrong and then it will transition so that we have kind of a little bit of time to understand what what went down good so in order to do this let's start by making some kind of serialize field and this is going to be a private float and it's going to store the delay so delay or maybe time between questions and we are going to set that to let's just say one second by default and we can always tweak this later then we are going to make a new enumerator and this is where we are going to be using system dark collections so we'll just make one let's say here in ienumerator and this one is going to be called transition to next question and what we are first going to do is I want to take this uh net answer questions that remove add I would kind of like to maybe move that down here but then again it's fine that we're just doing it with the random index but now I want to move it down here so that we are actually removing this whenever we have answered something I think that's a better way and instead of using remove add we are going to use remove and then instead of inserting an index we are going to insert the current question so it will remove by an element not by an index then what we can do is we can rate wait a certain amount of seconds so yield return new wait for seconds and if you've never worked with our numerators and maybe you're not so advanced in ccr programming just write after me here and ienumerator if we were to understand this very simply allows us to wait a certain amount of seconds inside of the method before something new happens and you do that by typing yield return new waitforseconds and then giving that the amount of seconds to wait and the amount of seconds that we want to rate wait is the time between questions there we go so just right after me you don't need to understand why this works it just does and then what we want to do is of course set a new current question so we're going to say actually instead of doing that lets just reload the entire scene so let's go ahead and go and find out and it yeah okay so when we need to reload the scene we need to also import scene management so using scene our unity engine dot scene management there we go and now we can access our scene manager down here and we can tell it to load a scene and the scene that we wanted to load is the current scene and we can get the index or the name of our currency by saying scene manager dot I'll get active scene there we go and then we need to either use a build index or a name we're just going to use the build index so we'll say dot build index so we will load the scene with the index of our current scene that is kind of the idea here now that means that we will just restart so that's going to work just fine and the only thing that we need to do now is make sure that we transition to the new question after having selected something so let's do that under the user selects true then we want to call that and whenever we are working with our enumerators we don't just call them like this we use start coroutine and then we specify the I enumerated routine and in this case we want to load in or start the transition to next question there we go and we need to do the same thing down here good so now that we've saved this we can head back into unity and we should see now then when we hit play and two plus two equals four that's true so I'm going to select true it says correct it waits one second and then it loads in the next question and that's perfect violets are red that's false and it says correct and it loads in the new question and you can see if our answer wrong to a question false wrong and it loads in and then okay so maybe it loaded in the same question here and let's find that because that's because we only have three questions and when it's done with all of the different questions on it simply loops again and that means that if we go under our debug here and look under our current question a note that wasn't what I wanted to see maybe we cannot inspect this actually we can't what I wanted to show you here is that the our unanswered questions array was reset and then it selected a new one in the unanswered questions array and that's why the same one appeared so you can see if I answer wrong here again it shows me a new one and that's simply because of the way we have it set up this is not a real issue if you have plenty of questions in the array but since I only have three this might happen at times so just make sure to make plenty of questions if this behavior really annoys you we can go in and tell it make some kind of if that story's some kind of temporary variable that stories the previous question that was loaded and what you can then do is simply check if that was equal to the same and if it is then load a new one but I don't think that that's really necessary here cool so this is actually working however our game itself is actually pretty lame because we're not really showing what's going on so let's instead of using these debug log statements do some actual animations so let's find our canvas here and let's add a component to this and that's actually it we'll add this automatically let's just instead go ahead and find our window and then animation and let's drag it down here let's go ahead and create a new animation clip create and let's make this um the mm let's make a folder for this first of all this is just going to be animation and undo that let's go ahead and make this clip and this is going to be our true answer so in case we've selected the true one what I want to do is I want to have this false button slide out of the picture so that we can see that it was the true one we selected and what I wanted to do is I wanted to reveal what the whether or not this was correct behind this button so in order to do this let's make two text objects one for the true and one for the force okay so let's go ahead and make two text objects and in order to do this let's just maybe copy the text from our question panel here and let's just scale this somewhat the same size as the buttons maybe I don't know quite how we want to scare this yet so they are like that and their anger points goes there okay so that's fine so what we can do is maybe scale this like that and that and put this in the middle there we go and what we can then do is maybe just temporarily disable the true button here and change the text here to maybe correct and we can scale this up a bit fifty is pretty cool we can maybe even make this a bold text and instead of doing that under there let's find the actual both bold font so let's find the road barrio Baro bold there we go that's the italic version there's the non italic one so it says correct there I actually think that bold this might be a bit too much let's do the medium one instead there we go so it tells you that that was correct or wrong whatever and everything else looks pretty nice here so let's just make this the arm and this is then the false answer because this will be shown if we click false the then the true button will slide out and it will be real whether or not this was correct or or wrong good so I will just keep that and then let's make sure that this stretches correctly oops find our false answer and drag in the anchor points there we go so now this will stretch correctly with the screen and that's perfect good now that we have that in place let's do the same with the a true button so let's now disable the false button and enable the true button you can see that it covers it up then we can take the false answer and duplicated and we can then move it over here now that we have hope move it over here and are they lining up indeed they are and we can now make this may be correct is fine the the text is fine but this is then the true answer and we also need to move the anchor point so this one goes all the way over there and this one goes over there and I could see that I just had messed this up a tiny bit there we go and we also want this to be at the back of this button so that they overlay so now you can see that when I enable the buttons it's fine if I then select let's say true and disable this it will show whether or not that was correct now we simply need to first of all link this to the animation and also have the script change this so let's first off head into visual studio and let's just make two references to this just like we did the fact text so let's do serialize field and this is the private text and we call this um true answer text will do that and another serialize field oops another serialize field and this is the private text false add to text perfect I'll save that then when we set the current question when we load all of this in what we want to do is we want to say that if our current question dot is true so if it is actually true then we want to set answer or true answer text dot text to correct and then we want to set false and to text text equal to false else meaning if the current question is not true then we want to set true answer text dot text equal to false or wrong I mean run is the correct terminology here and the false answer text dot text equal to correct so and it's fine that we are setting it in here because it's covered up by the buttons and so the user won't be able to see that and that's good because then we only have need to have this code in one place so now what we should see if we link up these texts here so the true answer to enter text and the false answer on the false answer text is that when we hit play and maybe disable these you can say that if we select true this is correct and if we select false this is wrong so that's perfect and you will see this come to life when we do the animations we're we're going to which we're going to do right now so let's select the canvas here go on the record and let's select our so this is when we select our true answer so that means that we will need to move over our false button and we do this by simply keyframing the position of the false button so what we can do is simply we can simply move this out there we go simply out there just outside the screen maybe just a bit further and you can see here that I'm not doing the actual movement I'm simply making us a single keyframe and that's because unity will blend between the animation States itself and therefore we only need to have these stationary States and it will do the fading on its own and that's going to look just fine then we'll also have another clip here and this is also going to go under animation and it's not going to say true answer this is going to say false answer and this is going to do the exact opposite it's going to take our true button and then move that out of the way something like that and now that we have these two States the true answer in the false answer and just for good or this sake we'll go ahead and create a separate state here which is the no answer state or unanswered state and we save this and then if we record this what I want to do is I want to simply keyframe whoops I want to keyframe the stationary positions are for false buttons and this might be a bit overkill you really might not need to do this since we are loading in the frame and stuff like that or reloading the scene but just for good honest sake we are going to set them there in the no answer state good so what we can then do is we can find a project panel here we can go on the animation and you can see that we have a canvas animation or animator here and we're just going to call this the let's say game animator and we can open this up so if we double click this it will open it up in the animator editor and what we need to do here is we want to set our no answer state to the default state so that's just right click and set as layer default state so right when we load in the game this is what it's going to be playing which is nothing and then we make a transition to the true answer and to the false answer and we go in here and we say that we don't want this to have exit time and we don't want this either to have exit time so this way it will transition as soon as it's triggered and not wait for this to play that wouldn't make any sense and then we give it some parameters so we go into parametres here and we add two triggers the first one is true and the second one is false and if we have true here we add a condition here so the condition is true then we transition to the true answer and the condition here is false then we can transfer to the or then we transition to the false answer so now you can see that if I had play here and select true it says correct if I do this again and whoops I didn't turn it off there if I do this again and maybe select false it says correct now because violets are not red cool that's how it works and now we simply need to reference this and triggered inside of our script and that is super easy all we need to do is go into our game manager and add a reference to our animator and we'll just call this one animator and just going to write private there because I like to do that and then under our user select true all we do is we say animator or with small letters now dot set trigger and we simply say true or I did that dot capital there we go and you can of course make this into a variable up there if you want to be able to change that but I'm just going to hardcoded in because I imagine you know how to do that and down here we're going to do the same but with false and now if we say that our game should actually be done so if we hit play here you can see it says I'm super cool we select true and we have an unassigned reference here so we need to drag in the animator then that sits on the canvas let's try that again hit play my lights are red that's false and it says correct I'm super cool that's true it says correct two plus two equals four let's try and add two wrong here's or false and that's wrong so there we go now we have provided the user with feedback on what he's doing and you can see there our error was there again but that's fine so we can now just play all of this all the time and that's perfect cool so the way that we are handling the looping of the questions here's maybe a bit symbol and you can definitely do other ways to do this you can also just make an in screen when the users answered all the questions it's always difficult to find out what to do when you don't have any more questions the similar solution is just make a lot of questions and I definitely recommend that you play around with stuff like a score calendar and a cool end screen make some kind of menu as well all that stuff you can take from other series on the channel and I definitely recommend that you experience or that you play around with this I think I will make one short video in this series to wrap it up where we will maybe build some kind of an icon and build this out so I can show you different ways of sharing the game but that is actually all I wanted to put in the game so I hope that you enjoyed this course and I will see you in the next and final video