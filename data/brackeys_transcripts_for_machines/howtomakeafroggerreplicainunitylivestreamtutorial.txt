so hello everyone welcome to this video this is a live stream recording where we're going to create the public arcade game Frogger so we'll create a replica that looks something like this and I'm just going to go ahead and play it here so we have some very simple Acadian movement controls I just bumped up the speed of the cars here to make it a bit more interesting but you can choose any speed you'd like and if you reach the end of the level our score will increase so very much like the regular off rocker in that way and if we get hit by a car our score will reset and it will say down here that we lost and you can create some kind of win an end state or you can also create a timer so that you don't have infinite time to make decisions about when you want to jump right now we can pretty much just stand in the middle here and wait for the perfect opportunity but that's that's not something maybe that you want in your game so you can go ahead and add whatever you want to this and it's very easy to customize we can change spawn delays we can change around the speed of our car we can change different we can have different types of cars with different sizes we can remove a divider here and then have this be one huge road that is a bit harder to pass we can do lots of stuff with this um but I just wanted to get the basic gameplay framework in here and towards the end we'll do a full Q&A of course as well so let's go ahead and get started so let's go file and then new project and I'm just going to go ahead and create a project called Frogger replica and I'm going to select 2d hit create project and just wait for unity to load everything up and meanwhile I'll just have a look in the chat here see if everything's good looks like it that's awesome and I can maybe also give some background on Frogger Frogger was originally created in 1981 and it is one of those classic oldschool arcade games before way before I was born on this game was very popular and it's since been recreated in a number of different versions something like jump frog or jumbo frog it's been created in cross the road on the crossing everything it's so many versions you probably know it under some name and it's just one of those things that work it's very simple and it's just a lot of fun so let's go ahead and start by importing a sprite here because we need we need a few gameplay elements so let's actually take our camera and just take the background here and make it maybe dark grey just to get rid of the blue color and I have a few sprite laying lying around on my computer here if you want to get the same sprites you can go to github there will be a link in the description on the video I will upload the project for now you can just use any kind of temporary sprite you can just use basic colors whatever I'm just going to be using these because they look a bit better and I'm just going to import all of them at the same time so you can see I've created a sprite called car this is just a basic car and actually I didn't create this I found this on the internet a divider which is just a white line a frog which is something I just do to get there in Photoshop it's simple frog and a road which is just a white canvas basically and then with a drop shadow so if we begin with a road here and drag that in you can see on make sure to Center it on the transform you'll see we now just have a white square that's because I wanted the ability to make or level whatever color that we decide to have it in I think I'm going to go with some kind of kind of faded red something like this and then do something interesting with the background as well I'm going to color pick that color and then darken it and desaturate it a tiny bit something like this I think that looks fine for now you can always play around with the colors on later and then what we'll do is we'll drop in a frog so we'll take a frog here and drag that in as well and we need to add a few components to this guide the first one is a circle Collider 2d let's focus in onion onion in the scene view here so we can make sure our colliders set up nicely I think we can decrease the radius just a tiny bit maybe down to something like point four it looks a bit better to me and then we can also add a rigidbody 2d and of course right now if we hit play he's just going to fold to the ground and that's of course not something we want so that's instead going here and choose kinematic and that means that he will only move if he is moved through script so we won't perform any kind of simulation on him when it comes to gravity and drag and all that stuff we will move him only manually and then we can go and add a new component and we'll call this one D fraud script and we are going to make this in csharp let's it create an ad and let's double click that to open it up in visual studio and meanwhile I'll take a sip of water cool and I can see it's opening on my secondary monitor here so I'll just have to drag it in come on there we go so I'm going to clean up the script a bit delete the two using text at the very top and also delete the start method and I don't like this comment so I'm just going to get rid of it but we do definitely want to keep the update method now what we want to do here is of course check for some input whenever you press in an arrow key we want to move in the given direction and we have four arrow keys which means that we will create four if statements this is a very very simple way to do movement because we only want him to move when the key is pressed and we don't want to do any kind of smoothing we just want him to snap one unit in the given direction and therefore we do it in this very simple way if you want smoother and more on should we say modern movement you would use input get access and then I are either horizontal and vertical and this will allow you to get a smooth movement and it would allow you to easily move in multiple directions here we only move in on in forward basically so to the right to the left and up and down so we'll just go ahead and create a series of if statements here and the first one will say if and then we'll say input dot get key down and the key that we want to check for is key code dot and then we can do right arrow and this means of course the right arrow button on your key on your keypad so if you on your keyboard Jesus Christ so if you press the right arrow key on this in this will return true and it will only do that right when you press it not if you hold it down and then we can go ahead and create some new lines here and we'll need of course a reference to our rigidbody because we want to move our frog using the rigidbody so that we can still have good collisions and check if we hit cars or if we reach the goal or whatever so let's go ahead and create a public rigidbody 2d and we'll call this one I'll be then down here we'll say that if we press the right arrow button we go our b dot move position and now mistake a lot of beginners make here say well we want to move our rigidbody one unit to the right so we go in here and write vector two dot right and this means basically that we will move zero on the or one on the X and zero on the Y which means one unit to the right but move position actually doesn't move our rigidbody by a vector it moves it to the specified position so here every time you press the right arrow button we would move to the position c 1 comma zero and that's not what we want we want to move from our given location in that direction so we actually need to add our current position on to this movement vector so we need to say that we want to move from our p dot position our composition plus and then one to the right and then we can take this if statement zoom we can duplicate it and we can write else if here if you want to be very correct about it and then we can change right zero two left arrow whoops mud left alt left arrow and make the to the right two vector to the left and we can again copy this one more time elseif and this is going to be the up arrow and it's going to be vector two dots up and finally else/if and this is going to be the down arrow and vector 2 dot down cool so now we will move in any given direction and our if we save this and head back into unity we should actually see it working right away of course we need to reference our rigidbody and this is a very important step then we can hit play and we should now be able to use our arrow keys to move around our croc so very cold of course one thing that we can currently do is move off the screen we can also exceed our top position and the bottom one so what I do is definitely recommend you whoops you clamped the movement of our frog but I don't think that's something we need to do right now that's something that you can have a look at doing if you want to actually give this to your friends cool so I'm just going to go ahead and save our scene and I'm going to call this something like Maine or level one whatever you want to call it and the next of course step here is to add some actual cars so let's take on the floor frog here and move him down on the Y by saying negative 4 to put him right here at the beginning of our road and then we can go ahead and bring in the first car and with this for this car actually let me just check the chat here because I'm rambling and I know it I'll be using add force now we're using rigid body does move position um let's see to do how do you fix if your sprites colliders are tilted shifted well if your sprites Collider is shifted you can simply go and select the frog here that's choose this is an example so if our collider started off like this what you would do is you would go in here and edit the offset on the x and y to position it correctly and you can also change the radius to choose the size you can even go into and say edit Collider and this group's actually this circle Collider is probably a bad example of this but you can go in here and stretch it around and sometimes it will allow you to move it but I don't think the circle Collider world but that will allow you to customize the collider in ways that aren't too easy using the handles so that's the way you can easily arm check the position of your collider compared to this sprite cool so let's continue so let's create our car here and it's add a new component and this is going to be a box Collider 2d and let's zoom in on this and make sure that he is totally snapped to our car and again i pressing edit collider here and now we can actually kind of move this in to fit our car perfectly I'm just going to move whoops I'm just going to take the car collide if you and actually make it a bit smaller than it needs to just because it's so annoying when you die and you feel like there was still air between you and whatever you hit just to make sure that doesn't happen we're going to give it a bit of leeway room there and that looks good then we can add a rigidbody to this one as well because it is going to be moving and we are going to be registering collisions so let's go and again change the dynamic type to kinematic so now or the body type to kinematic and let's add another component and this is going to be our car script let's add that that's double click it to open it up in visual studio and in here of course we need to move the car so let's begin by again removing our two using tags up there let's remove our final we'll remove the start method to make things easier also remove the comment here and we'll change this one to fixed update because we are going to be are moving around the car we might as well do it in sixth update instead of update fixed update is meant for physics update is meant for everything else good so now we can go in here and we can move our car and the easiest way to do this would probably again be getting a reference to a rigidbody and using move positions let's go up here and create a public rigidbody 2d let's call it RB and then down here we can go RB doesn't move position and remember before we took our current position which is RB dub position and then add it vector 2 dot right onto that and then we multiply with that with time dot fixed at a time to make sure that it will move at the same pace no matter what system you're running on so again fixed update is an update or it's a function that is run a certain enum a certain amount of times each arm second and that means that it's on a fixed timer and so it runs 50 times a second well then we want to multiply this with one 50th of a second and if it runs 100 times the second we want to multiply this with one hundredth of a second because then we will even out the arm position or the movement so that we won't move faster the faster fixedupdate runs and that's just a good practice it won't actually be noticeable for one player but if we then compares to another time you place the game or to another system it will be noticeable so yeah it's a good thing to do so now we should actually move our car to the right here so if we take our car and move him over and hit play we should see the car slowly whoops of course we need to also reference the rigidbody to easier to forget and hit play here we will see that he indeed moves to the right however we also want him to move to the left and we want to have this movement depend on whether or not we start over here over here of course we could go in and create multiple versions of the car one that moves to the right and one that moves to the left but that is really impractical what we want to do instead is simply have the car move forward so that if we go ahead and rotate our cars just going to rotate it here is not going to still move to the right but instead going to move forward in the given direction and this way we can simply spawn him face in a certain way and then he will move in that direction but that's not the way we're currently doing it because we are just adding 1 comma 0 onto a current position and that's not relative to our rotation at all instead what we do is use transform dot forward and this is a vector that is indeed relative to our our current rotation in fact we probably want to use transform that right because forward is in the z axis of M B's in the depth and we are working with 2d so our arm forward would in our case B right I believe yes okay sometimes you have to think about those axes and how they relate to the 2d and things it's a weird thing just know that we'll be using transform talk right the only problem is we could actually just go in here and write transform dot right instead of vector to the right the problem is transform that right is a vector three meaning that it both had both has the XY and Z and our beat the position and move position wants a vector 2 that means only x and y and so we need to convert this into a vector to where we just ignore the Z position so to do that we'll go up here and we'll create a new vector 2 and we'll call this one something like forward and we'll set it equal to a new vector to where the x coordinate is going to be transformed our right dot X and the y coordinate is going to be transformed right dot Y and now we've basically converted this or taking the first two coordinates and store them in a vector to call forward that we can then use here so if that is a bit weird I totally get it it is a bit of trickery but it should now work and mean that when we go in here and hit play I'll cow will now move in the direction it's facing and we can actually go ahead and wrote on the Z here and see that it will just keep moving even though we update its rotation in real time this actually allows you to create more advanced vehicle behavior than you would normally be able to and it's just something that's pretty fun to play around with you see I'm just changing the rotation here and we're actually driving around and this is actually the basis of creating a car controller in a 2d view is having it always drive forward and then simply changing the rotation depending on your input so that's something you can experiment around with if you want to cool so the final thing that we need to look at for our car is speed we of course want to have control over how fast our car should move so first off let's create a public float called speed and we'll set this equal to let's just set it to on one by default and then I will go in here and multiply forward with time that fixed at a time and then with speed as well so we'll just have one long multiplication chain here let's hit save and we should now see that we can control the speed of our car by simply bumping up the speed bearable we can also make it go in the opposite direction if we give it a negative speed and the cool thing about this is that we can now control speed through code to be some kind of random number so we're going here and make a float speed and we can just default that to one that's fine then in our start method we will set speed equal to a random numbers so whenever we want to get a random number between a minimum and a maximum infinity we use random range and then we specify first the minimum number in our case this could be something like eight and a maximum number which could be something like twelve and then we close it up and of course we could just hard code these in but I want to actually create some temporary variables also make sure to specify these as floats so we can get our floating point random numbers and not only 8 9 10 11 and that's it so let's go up here and create a public float minimum speed and we'll set that equal to 8 and a public float max speed and we'll set that to 12 and then we'll put min speed here and max speed there also makes the code a bit more readable so now in unity we should have two variables one for the minimum speed and one flood the maximum speed and we should now see that this car has a random one of those two and you can see in general that's actually pretty fast if we go ahead and set our minimum speed to 2 and our maximum speed to 6 we can see that we get a random number in between there's 2 which is generally a lot slower and of course the logic gap you make between these two numbers the more it's going to vary from one card to another awesome so that's pretty much all we needed to do for a card let's remove the rotation on this car and let's take him and drag him into the project panel to create a prefab out of him this way we can easily spawn him in in the different lanes as long but as soon as we decide to create a spawn script cool let me just check the chat here let's see yeah things are looking good see I know you don't need to do this in fixed update I just like to have as much movement code as possible inside a fixed update you can do it in update but I recommend whenever you do something with movement that doesn't have anything to do with registering input do it in fixed update it's just it's just good practice um cool yeah so let's go ahead and create a spawner so let's go and create a empty game object for this that's reset the transform and it's call this one something like spawner or maybe car spawn it and let's move it to the top let's also create a new component and we'll call this one car spawner and it's a create an ADD let's double click that in Visual Studio so there are different components to creating a spawner and I actually have a video series or a small one on creating a wave spawner that will break in pretty much at least most games it allows you to create different waves with different types of enemies and different timers and time between each enemy spawn in a wave and time between waves all that fancy stuff it even has States but that's too advanced for us here what we want is actually something really really simple we want on a fixed timer to choose a random lane and spawn the car and we only have one car we have maybe say four lanes and again we have a fixed amount of time between each spawn so to do that we'll go in here and again remove these two using text don't like looking at them let's also remove our two methods let's create a public float and this is going to be our time between spawns we can also call it spawn rate however our spawn rate and the time between each spawn are the inverse of each other so one divided by spawn rate would be equal to the time between spawns and the other way around we also call it something like spawn delay which I like to do so let's call it that and our spawn delay will default to something like point three and remember to put an F here because we're dealing with floats it's just good practice let's then go inside of our update method here let's create an update method and basically what we want to do there are two main approaches actually there are three ways to do this as with game development there are always multiple ways to do things the first one is using um time time so what you would do is you would create a private variable here and that means that we don't have to write anything and this would be a float and it would store the next time to spawn and this would default zero meaning right when we start the game or next time to spawn is going to be or it's going to be the next time to spawn and then we're going to spawn a car then basically what we do is we check if next time to spawn is greater than or equal to time time and time that time is simply in the amount of seconds is apt since we started the game so right when we start the game that's going to be zero it's going to be equal to next time to spawn we're going to spawn so we're good here and call some kind of spawn card function and then we could set next time to spawn equal to our current time plus our spawn delay so say our five seconds elapsed we spawn a car we are going to set our next time to spawn equal to five seconds please respond plus a spawn delay which is 0.3 so it goes it's going to wait until time that time is equal to five point three in which case next time the spawn is going to equal time to time and then we're going to spawn another kind it's going to keep going so we simply keep track of the next time in seconds to spawn a car when it reaches that we add a small time delay onto it and it keeps going like that that's a way nice way to create a loop in the update method and that's pretty easy to understand and easy to make and that pretty much works or and that works every time another way to do it is in the same way using the update method but instead using a countdown timer so we could go in here and create a float countdown timer and we could set this equal to I say three seconds let's just say that and I'm just going to give you an example here above the other code so what we would do here is we would say if countdown timer has gone below or is equal to zero then it's time to spawn a car and then we can go ahead and set countdown timer equal to our spawn delay so in this case we could set it equal to three seconds so every three seconds we would spawn a car and if it um if it has not yet reached zero it's not time to spawn a car well then we can go ahead and decrease the countdown timer so countdown timer equals time Delta time this means that every second our countdown timer will decrease by 1 and it will do this gradually over time by subtracting a small number every frame so that's another way of creating a little bit in the update method the last way is using coroutines what you see in unity is that I enumerator thing that's a bit more difficult because it's on fairly syntax heavy so it can be a bit harder to understand but it's also something that offers a great amount of control so that's something that you can look into if you want but for now we're just going to be going by this method here which works just fine so now we have a fixed time with that cause spawn car so now we just need to create a spawn car method and what we can do here is simply instantiate a car prefab and we need a reference to that so we go up to the top here and create a public game object called something like car or car prefab I'm just going to call it car and we instantiate that car and currently it's just going to instantiate at the center of our map if we don't specify any position or rotation it's just going to spawn right in the middle so that's what we're going to do here we're just going to spawn it without carrying our where and we'll take our car prefab and drag it into the slot and now we should see that when we hit play it spawns what happened did we forget a line of code here if time just next time to spawn is greater than or equal to time to time this point it's time to time plus spawn delay did I forget something guys I don't see an issue with this but maybe I'm just being blind um it's created then yeah this looks good to me I don't know what is causing this that's trying to play again um Oh for some reason it's just not spawning anymore only spawns hmm did I mess up my if statement it's greater than or equal to time that time oh yeah less than or equal to always with the comparison science thesis ah you guys probably just said they're screaming at your screams I know the feeling yeah I was too blind I did not see now you can see them spawning regularly cold okay much better you got me scared for a second but we figured it out together cool so one thing that I just remembered is we probably want to put a road here on a different sorting layers let's go and add a new sorting layer called this one were called backgrounds and we'll put it at the top so it's drawn first so and we'll select that for a road just to make sure that our car will always render on top of our road and we'll also take our frog here and put his Audion layer to negative one so that our car will always drive overall frog cool so now we should see the spawning in and everything is working that's awesome you can see them driving over the Frog now of course we need to vary where it spawns and the way we do that is using um spawn points so we go in here and we basically create an array of spawn points and we select a random one each time we want to spawn a car and the way we create these spawn points in unity is simply using empty game objects so let's go in here and let's create an empty game object will reset the transform we call this one spawn point and we'll set a label up here let's just do a red label that looks fine we can then set the position here on the white something like negative one and move him over here somewhere to let's say negative six on the X I think that's going to work fine duplicate it and we can move it up to r2 on the Y when then take these to spawn points move them over to six positive six so simply room remove the negative on the X there and we can take these two and simply move them down somewhere around there so the first one is going to be one on the Y and the second one is going to be negative 2 on the Y cool and we need to flip these two spawn points so they point in the opposite direction and we do that by simply going into our ve I believe and writing 180 awesome so now it points on the both point in the opposite direction so you can see how they split into different lanes will also go in here and just add a few dividers and this just make it easier for the player to see the lanes will have one at the serial mark here would duplicate that move one down to the negative 2 on the Y and duplicate that once again and move it up to now positive 2 on the Y and I can see that I've messed something up with the spawn points here so we need the arm the spawn point one here to go up to 3 on the Y and we need to spawn point 3 here to go down to negative 3 on the Y there we go so now we can see how each point spawn point is it in its own lane and it's pointing towards the center of our screen cool so what we can now do is store these spawn points in an array and array is of course just a list of variables in our case a list of game objects so we need to go in here and create a public and we could make this a game object array but since we are only going to be using their positional data meaning that position and their rotation we can store transforms instead and we'll create an array of these and we'll call them spawn points then in unity we can actually go in here and add them right away and one way you could go about this is increase the size of the array to four and add one spawn point at a time but and this is also something that I show my top 10 unity tips and tricks for unity series thing video there are only two of those so far is that you can go up here and lock the inspector you can shiftclick to select all the spawn points and you can drag those into the array and now voila they're all there so it's just a tiny bit easier especially if you have a lot of objects then it's a lifesaver cool so now we have all of our spawn points in this array what we can then do is go down here and select one at random to do that we go in and we first get a random number between zero and three remember every time we want to get a element in an array in our kite in our case we want to get a random spawn point um we simply access it using an index zero means the first element so the first one point one for the second two for the third and three for D fourth so we want to get a random number between zero and three in order to get a random spawn point and to do that restore we create an integer called the random index it will set it equal to random range between zero as the minimum and then the length of our array we could just hard code for here because we have four elements so we can get zero one two and three or we could input and this is a bit better to do spawn points dot length and now we simply get the length of our array and put it in here so we get a random index into our array and we get a random point from that away from from that array so we'll go here and say we want to store a transform spawn point and that's going to be equal to spawn points at the random at the random index there we go so we get a random number between zero and three and we insert that into a spawn points to get the actually point out of our array we call that spawn point and then down here we can instantiate a car at spawn point dot position and add spawn points odd dot rotation cold so now we should see that this just works so if we go here and hit play and yeah all of the cars are now spawning appropriately coal and they're moving in different directions and each Lane has a given direction that's awesome that's already like 90% of our game here now it's just about creating an end and a wind state which is fairly easy compared to everything else we've done so yeah just going to save the scene here and see if everything is working in the chat well you guys are writing essays in here today that's fun but it looks like things are working just fine people are saying something about the min speed looks fine cool alright awesome and yeah so let's go ahead and create a um C oh yeah one guy's mentioning that you could use invoke repeating for the cast on your script that's totally true invoke repeating is not the best thing to use but you could actually just go in here and right from the start method here void start instead of all of this junk you could go in here and write invoke repeating and then banca then a time until we start doing this and we'll just write zero and then a repeat rate and we could put this at um let's say three times a second that would definitely work as well so good call I totally forgot about you invoke repeating um yeah so let's go ahead and create an end state so let's say we get hit by one of these cars well what do we want to happen we probably want to reset some kind of score and we want to reset the level let's do that let's select the car let's go in here and add a new component and actually instead of having every car try and register if it's hit the player let's simply have the player register if it's hit a car it's better whenever you have this many entities inside the scene to uncheck for collision on only the player and not on every single car also you will notice right now that if we can they leave our game playing here our hierarchy will clutter with cars so it's a good idea to go in here and have the cars to be destroyed after a certain amount of seconds it's very easy to do the instantly look up destroying um destroyed game object after X amount of seconds it's it's super easy but I definitely recommend you add that so now we can find our frog open the Frog script and in here we'll simply create another method this is going to be a void on trigger enter 2d and you need to call it the exact same thing that's really important and we'll also get a information about what we just hit and information is going to be of type Collider 2d we call it Collider and we want to go in here and say if Collider tag is equal to car store what we if what we got hit by has the tag that equals car meaning we got hit by a car well then we want to restart the game so we can go in here and debug the lock we lost and we can also restart the game using Unity engine dot scene management and then down here we can now write seeing manager load scene and the scene we want to load is scene manager dot get active scene odd dot name code and all we need to do then is go and select our car prefab and add that text let's hit add tag let's create a new tag called car let's go to a car and set the tag to car so now when we hit play and get hit by a car nothing happens and the reason why is fairly simple the reason why is that we need to go to a frog and mark his Collider as a trigger now we should see it working and indeed it does so it says we lost and then it immediately restarts the level awesome and on the creating a winged state it's pretty much the same thing we simply create a Collider up here that when we reach it we want to win the game so let's take our main camera and just move it up a tiny bit so that we have a bit more to to see up here let's go ahead and create an empty object let's reset the transform and let's let's call this one our goal let's add a box Collider 2d and we should be able to see it here we can now take our object here and scale it up something like that and then we can move it up until it kind of sits right at the end of our road here right there cool and then on this goal we'll go ahead and create another custom component and this is fine that we check for our collision with the player on this object and not on the player itself because this is just a single object just like the players only a single object not a thousand different cars and we'll just call this one goal and in here we'll do something very very similar to what we just did we'll remove this collections up there instead we'll have a void on trigger enter 2d and we don't even need to check if it's the player that entered this trigger because that's the only thing he'll that go realistically enter but you can of course do a check if you want to and if you enter is we can go ahead and write debug the log U of U 1 of course we only want this this part of the level you have to do this multiple times to get a good score but we'll just write this here and then we want to go ahead and use unity engine scene management in order to restart our level here scene manager dot load scene and then seeing manager dot get active scene and then dot name there we go cool so let's say that and now a goal should actually be in place all we need to do is mark that as a trigger as well so now when we hit play and we jump towards oops I can see we also have to reconfigure our dividers here but John towards our goal you can see it says u1 and the level restarts that's awesome and we'll just select our dividers and set that ordering layer to something like negative 10 and this way we'll jump above them and not under them so that is kind of the based game the last thing is just adding a score I don't know if you guys want me to go ahead and add one or if which should just continue on to the QA you see okay so we've actually been been going for under an hour's so let's just go ahead and add a quick score and then we'll then we'll move on to the QA so in order to create a SKU object will go UI text and create the actual text of our score first make sure you're in 2d mode and hit foot if to focus on it I'll also switch to the 2d tools I'll kind of put this in the center of the screen I'll then move it up towards the top we can size it up here I'm holding down alt to scale on all axes at the same time so scaled from the center let's bump up the font size to something like 30 change the alignment to are aligned on the center and on the top I'll also change the color to white and change the text here to score and then some number actually I think it's cleaner if we just do the number and then make this even larger in font size something like that looks a lot better you can also make it italic or bold or both whatever you want to do with this I'm just going to make it normal and I definitely do recommend that you change the font I cannot stand the Arial font I don't know why it has to be default every time please change it to something else but I'm just going to stick with it because I don't want to go ahead and download another font one thing that would work great for this is the very simple Roboto font I use it in a lot of these small game projects because it's this clean and it's it's free to use so I recommend that Roboto if you want to get something easily that's better but yeah so we have our text here and it starts at zero we can call this one score and we can go ahead and add a script to this as well so we'll add this score script we'll double click this to open it up in Visual Studio and in here we'll write a public static integer containing our score and we'll default that to zero and remember static means that we can access this variable so of course current score yeah it's not allowed to be called the same as the class so we have to kind of improvise on that you can also yeah well we call this one current score um so static means that we can access this variable not using an instance a reference to an instance but just using the class itself the class type so this really at least easily allows us to change the score and it means that if we had multiple instances of our score script they would all share the same current score cool so now inside of our actually we can just in the start method we can change this we can set on our current UI text object equal to the score here let me see sorry from kind of doing this in an on stretch structured fashion so basically we want to change the text on our UI piece text here equal to our current score whatever that's equal to at the moment and and we do that by first including the UI namespace so we can use a UI tools we then create a public text in order to reference that text object and we'll call it score text and then at the start of our game we'll set score text dot text equal to and then our current score and we need to write to string here to convert it from a number into a string that our score text can years so we can actually get away with doing this only at the start because every time I score changes we also restart the level that means when we die we want our score to reset our level 2 or level restarts or when we win and our score goes up our level also restarts and this is also the primary reason why I'm using a static integer here is that it will persist even though your reload has seen and that's why it's good it won't persist if you close down your game but if you just reload the steam and the score script is still there this number will be saved so now we can go into our car into a frog script and in here whenever we lose we can set score dot current score and this is why it's so awesome to use the static variable we don't need to use anything like find object of type score in order to find that particular score and then go current score instead we can simply write the type score current score and we can set that equal to zero and the same thing in our goal here we can write our score current score plus equals 100 so every time we complete it will get 100 more points cold so this means that now we should be able to reference our text object hit play and if we complete our level we get a hundred more points and if we do it again oh that was close we get 200 points and we can keep doing this to rank up more points and as soon as we die it goes back to zero awesome yes so excited that worked I got a little confused at the end I think I've been talking too much good thing that we're doing a QA now I guess I won't have to talk at all can you guys do some talking we should like we should feature some other game developers on here so so I don't have to do all the talking myself awesome so yeah let's pretty much it for the game things that you should do no matter what is probably have some way of removing the cars so we don't Claudia our hierarchy and and really get performance issues after longer times if they play it lets it stay idle for some reason and restrict the player movement those two are probably the books lever currently have but other than that it's just about playing around with it adding more cars creating different levels playing around with the score playing around with movement all that stuff I definitely recommend that you just go nuts with it so yeah it works cool so that's pretty much all I had for the tutorial part of this video I think we'll go ahead and transition over to the Q&A part now so on ask away with your questions guys I'm going to go ahead and set my layout differently here transitioning into chat mode and again I will just say this because people always ask about this I will upload this entire live stream if you're just tuning in or miss something if something was too fast I will upload the entire live stream to YouTube tomorrow and I will also upload the entire project along with sprites and scripts to github tomorrow as well so don't worry you'll have access to it good so let's go ahead and have a look at the chat here I'm just bringing everything up here so let's see what's going on so add audio to the game I'm not going to be adding audio to the game right now because I think yeah people have been looking forward to the chat segment and so so have I but I will definitely have some video content on easily adding audio to your game because it's something that I chose not to include any how to make a video game course and it's something that frankly I've covered a little bit but it's not something that I've gone a lot into so I thought creating some kind of standalone video on how you can easily add audio elements to your game would be pretty good especially because unity not so long ago go really improve their audio features and most of what I've covered is using the old audio system I mean now they have a fullon mixer with cool VST effects we certain do stuff like reverb delay EQ and a bunch of other high pass low pass filters compression and then all the fancy stuff so that's really really nice so we can talk about audio in a standalone tutorial I'm suing for shoes so I'll make sure to think of something there let's see if you continue this you will become like Video Copilot for AE or DSG for scheming Fergie thanks man that I really appreciated not really a comment I'm just reading it out hearing the praise enjoying it I'm actually a huge fan of Video Copilot yeah I used to be a huge athletics nerd I did a lot of smaller projects love to do special effects both 3d stuff but also just like muscle flash stuff and particles and oh so much fun like creating clones of yourself all that junk I've done pretty much all of it and I mean andrew kramer's is a really funny guy can you make an ingame level editor tutorial series I haven't really thought about that it's really programming incentive but it could also be pretty damn fun it's actually not the hardest thing to do it only becomes hard when you start to talk about serializing your ingame editor things and then it becomes a bit more I mean it's totally doable it's not the hardest thing in the world but it's definitely not for a beginning audiences its intermediate to advanced oni but I'll consider it sounds like a good idea um let's see I working on a game beside youtube if you don't why and if you are on what I'm not currently working on a game on externally from YouTube I'm only working on this that I show on YouTube the primary reason for this is I simply don't have time I would love to work on some games I love creating games and I always look so much forward to Ludum dare rate which is coming up pretty soon but basically like two or three weeks it's going to be a lot of fun I'm definitely going to make a game for that and actually Sophie Sophie Bob will participate as well to try and create her first game in a game competition so that's going to be really fun but yeah the primary reason is just time constraint I'm putting so much effort into the YouTube videos and then also on creating these devices it's acid packs and we actually have something really cool coming up I should show you this I'm going to show you this look at what's coming to dev assets in just a moment guys I'm going to show you something really cool now everyone get hyped this is a this is going to be awesome it's going to be released Sunday 9th so that means in 1 2 3 4 5 days and it's going to be freaking awesome I'm just going to go ahead and find it here so I have all of my files here let's see it looks like this this is coming to dev assets get excited scifi weapons it's going to be awesome 32 different ones oh I'm looking forward to it but don't tell anyone yet it's only a little treat if you made it this far into the video let let me find the chat here again so yeah it's going to be awesome um so yeah I really just haven't had time to to look at to look at creating a game externally yet will you make it to tourism into storing data in player proofs but this time in a secure way I mean there are some very easy things you can do to make player prep secure but definitely the best way of storing data easily in unity is just picking up an asset storage solution or a solution from the asset store that does that works for you it's basically just about adding a layer of encryption and of course you can do it manually but I don't think I will take too much into that all right now so that's kind of just a tease for now but at some point I can tackle it there are some really good tutorials on on storing xml and json data and how you can encrypt data on youtube right now so i don't think there's much need for me to do one more advanced games in the future maybe now that the mysterious soontobereleased pack is coming to dev assets i'll probably do something with that that means probably an updated shooting video and also something on weapon switching which i'm i've been teasing for so long i know but it's coming that's a bit more advanced for money in the totally advanced i don't have anything planned right now but then again i only plan so far ahead but i definitely want to create some more advanced stuff i want to do a video on RTS camera movement I think that could be really interesting because a lot of people are asking for RTS content and while I don't think I want to go ahead and create a full video series on creating an RTS game because those are extremely complex I can tackle parts of them one part being a camera and then how you move that around let's see here trying to find something good make it a simple egg game no no no that's way too complex and it realized way too much on the content and all of the drops and characters and things it's it wouldn't really work for a a tutorial sorry are there some big difference between input gate key and input that gate button except for customization controls I'm not really no I mean get button is just a better thing because you can easily create alternate keys you can create smoothly input like with horizontal and vertical it's easier to set up for controllers and stuff like that gate key is pretty much just only for the keyboard I just prefer using gate key sometimes because you know it's going to work no matter your preferences under the input manager and that's why I've used it in a lot of tutorials but really if you're creating a serious game use gate button every time no excuse let's see by loving the reactions to DM to the cipher workings looks good see ya there pretty idea for a for the multiplayer care series definitely they would fit in nicely there especially because we already have that weird scifi scene going with the robot oh look who just passed by say hi please charlie guys but somehow they always manage to intrude on the videos it's very nice tutorial explaining that masoom yes I'm so excited about the navigation mesh coming to unity now I mean it's actually released now but I believe that this version of unity only features their low level API when it comes to updating our meshes in real time and stuff like that it still has a lot of improvements but I don't think the actual high level components are in there just yet I might be wrong correct me if I am but as soon as the components are there then I want to make a video because then it's easily accessible for everyone and I don't want to go ahead and and create a video on something that's updated just after and made thousand times easier but I'm so excited for the navigation mesh it's something that I'm just dying to make let's see no could you move your game on your own server um that's not something that I would squeeze into a video no I'm sorry I would recommend just picking up either unit or photon and have them hosted yeah it's not something that I'm going to go into first of all it's not something that I'm very good at it's something that I can do but it's I mean only at the point where I'm kind of learning as I do it all the time not to the point where I would feel comfortable teaching it so it's not something that you're going to see I'm sorry could you do a simple multiplet play game tutorials such as Paper Scissors rock just for beginners that could actually be pretty interesting I think the unit has come a long ways and said it wasn't to be exploited in the multiplayer FPS series um all that time ago so might have might want to do something for beginners but at the same time I'm just so happy not to do to play right now because multiply it just means issues that I mean I've never had to prepare that much for a video than I had to prepare for the multiplayer FPS course because something about creating multiplayer games just messes everything up it's just a whole nother abstraction layer on top of like syntax and logic normal coding logic you have this entire thing that's called networking and it's all it messes with my brain I'm so happy not to be messing with it right now I think I'm a lot more productive not having to do that I mean sometimes I spend days trying to figure out how to do something especially because unit was so buggy at the time hopefully much of the stuff that I was messing with has gotten fixed because some of that stuff was just not okay but yeah ha please can I stay away from mode to play guys I will probably do something at some point but not right now now right now right now I have some other things that I really really want to make let's see will I show C++ tutorials sometime in the future in the future maybe C++ is an awesome language um huge complex and sometimes hard to understand and at least hard to kind of feel comfortable in but I might do something at some point not right now though right now my focus is entirely unity and then I've seen a lot and a lot of requests on our blender so I wanted also to ask you guys do you guys want to see blender tutorials because I'm not a good 3d artist but at the same time so I but I can't do some basic stuff and I know my way around blender and I've used it for many years uh so I I mean I know how to use it I'm just not an artist so if you guys really want to see some blender videos I could do like a threepart blender series which could be pretty fun but also remember that I have a limited amount of time so it would mean that one of the videos I mean other two videos a week one of the videos would probably then be blender for three weeks so just let me know is that something you want the majority here is saying yes I see it's good to know because line is fun I mean it's always fun to do what's next in your tutorial series I don't know what series you're referring to if you're asking for what series I want to do next well it could be a blender that would be nice yeah blender basics would be the goal something like creating a barrel or creating create from all the way from understanding the interface modelling and then through texturing and then over to importing into unity that could be a pretty nice little thing that I think a lot of people have been asking about until then please check out on some of the tutorials by cg cookie they are they're great and also I frickin Andrew price this is name is awesome does really good blend tutorials and I also recently did a beginner if I'm not mistaking so yeah check that out but okay an overwhelming amount of people saying from a belter character no no no that's where my artistic skills probably started lagging a little bit but but yeah we can we can start with something basic that could be really fun I'll make sure to keep that in mind guys right now I'm just going to tell you about my current visual schedule and I have it over here to the right so that's why I'm looking over there tomorrow we're going to have the livestream air this Sunday scifi weapons get hype and when I say the 12th after that it's going to be about exporting your game in unity because we closed up the how to make a video game without showing how to export it so I wanted to create a standalone video on that that's what we'll do and then after that I don't have anything planned yet so that could be navigation mesh if the components out that could be on the beginning of a blended series I don't know about that yet maybe some RTS camera movement will figure something out but lots of great ideas to bouncing around today I think am i planning to attend Ari this month yes I am and it's going to be so awesome and so fee bob is going to attend as well and it's going to be just so much fun and I definitely plan on doing a postmortem or one of those behind the scenes videos that I've done before for diggin and for maniac Inc I had a lot of fun creating those videos and you guys seem to like them for some reason maniac Inc did didn't do nearly as well in terms of the video itself as diggin so maybe let me know why because they definitely wanna you know I don't want to decrease in quality but the game turned out pretty well it's actually I'm going to show you guys this thank you guys so thanks to all the guys who were who were voting it actually got into the top 100 let me show you here's the screen here so here's maniac Inc the previous game I created and as you can see here it got into number 25 on fun I'm really really happy about this one because it was something I was trying to emphasize with the game I mean it's not something that is by any means beautiful it has this very classic stick art feel so I really tried to maximize it for fun and I'm really glad that that paid off you guys gave it 46 and humor that's awesome I don't think that I have that I'm that funny apparently you guys kind of look the cool like the quirkiness of the humor in here I think creating the title screen really helped drive the story along or not the intro screen where I gave a bit of backstory I definitely think that was was worth it it was also something that I I created pretty quickly so I I was really in doubt if you guys guys would like it but it it seems like it did and we and we got 81 and on the overall so that's that's awesome guys thanks so much I completely forgot to mention that whoops check there we go let me bring up the chat here again we're very close do we know they're cool when I make a video about using game analytics or Unity identity analytics maybe at some point I mean you need analytics is extremely easy and game analytics is third play and I'm not totally sure if it's totally free game analytics just going to go with that I don't want to do something on a service that isn't totally free but sign up for free okay so yeah free analytics tool awesome and then they probably have some kind of subscription plan on top I'm just kidding I guess thing but yeah maybe at some point analytics where game is something really important and it's something that really can help you maximize the potential of your game after really so I will think about it will you make a farming game probably not right now maybe at some time and to the guys thing that they just showed up and missed a bunch of things this live stream will be available on YouTube just letting you know again tomorrow it will be up can you make the next live stream on making a piano tiles don't tap the white tile like game please it will above us on using game which uses music mouth think about it I don't know if I'm totally sure what it is you want but I'll think about it I'll have a look into some kind of music short games and we need to do more with audio I agree with that and I click a game that could be fun what do you like more programming or modeling I definitely like programming more not because I think it's more fun necessarily but just because I get more fun out of it because I'm better at it I'm sure if it was a a good artist I would enjoy modeling just as much but when I then get the opportunity to model because I do it so lil it's so fun I mean you can go nuts and pretty much create anything and ODS and this world of exploration and possibilities and everything I creates a seems to be so bad so I'm sure if I just touch something and it looked beautiful I would think it was the most fun thing in the world theoretically will you'll be able to make a game like The Witcher with unity theoretically yes that's all I'm going to say can you do a tutorial on a level manager or game manager a level manager / game manager is going to depend totally on the game that you are creating of course there's some things that you pretty much always want in a level / game manager which is a singleton pattern so you make sure that you always have at least one and only or that you always have one game manager and you're seeing lot more not death and stuff like reloading scenes and loading next scene and ending games and stuff like that but again already there it starts depend on the game you're making students not prob probably not something that I'll do right now where did your old intro go I love the pictures oh thank you very much it went kind of disappeared on I tried to speed up the pace of my videos a little bit and I thought the intro was just unnecessary cloudy also that picture of me is very old so um yeah just I wanted to try a new format I guess you YouTube is weird because things work but you still have to change them in order to stay relevant and yeah YouTube is also I wanted something fresh so I tried something something fresh what is the weird Oh in your name called it's called an e it's actually pronounced Espeon and it is a Danish letter so that's why you know no it's it's yeah it's what foreigners probably have the hardest time saying Siri having issues with physics in a 2d game I'm developing where's the plate best place to get help well if it's on a particular subject unity forum and practice from from the practice comm go there a lot of awesome guys answering questions all the time if it's not on a specific subject but just something you want to learn more about kool aid teen has some really nice unity 2d physics tutorials we've also done some live streams on using to the unity physics which were really fun line writer use 2d physics we did an Angry Birds replica which also used a lot of the physics system so you can check out some of those we also did something on I'm driving kind of a kind of balance game driving thingy in 2d as well and then unit is official tutorials are always great ok guys I think we will slowly wrap this up now so final questions and then we'll go ahead and close this because I also have to get something to eat and then start processing all this footage and uploading it so we can realistically get it ready for tomorrow but yeah I should team up with Picard yeah he does some pretty good stuff actually might might might contact him at some point is there significant performance difference between C and JavaScript and lots of projects between C yes but I just think you mean csharp then not a huge one no but it depends on what you're doing and what is the large project and actually I don't know the newest benchmarks because the unity has changed there the way that they can cause so much recently that I have no idea in the more it used to not be that great of a difference actually they're almost used to be no difference but right now it might be that csharp has the distinct advantage I I wouldn't be the one to answer the question so yeah I'm just gonna evade it saying whatever you whatever you like to use the most don't worry about performance because I don't know where the answer how do you find game ideas big scale games on big scale games I don't think I've ever had a I give a big scale game if you just mean like commercial games um not necessarily like Triple A games pretty much the same way that I find game game ideas for smaller games it's just about finding something that you like and messing around with it until you kind of get something that works for me I never get that playing this would be amazing the best game idea ever and then I work on it and then it's done and that's it for me it's a much more dirty process where I just start with something that feels fun something something that could be fun for the user and then I try and make a game around that and I explore the mechanics as I go so much more of an interactive process a much more of an exploration process because yeah I don't get that good ideas I guess you have a material UI package in that targets that in material you are screen which is a great thing to ensure us how to use that thing when we used it like changing scene it makes a very good wave and may I don't even remember that stuff anymore material the material UI package has actually now come out as in acid stored thing and good and it's now paid but it's also very nicely maintained and it's a very good package so if you want to easily create very goodlooking UI i really suggest picking that up but I don't I'm sorry I don't know exactly what you're referring to here so sorry about pixel shaders maybe at some point um could you do you have any games on the Apple App Store I actually do not know but I definitely want to have one at some point how do you promote your game as an indie game developer it's a really good question I think half of the promotion as an indie game developer is about creating a game that is easy to promote with that I mean creating a game that people want to share themselves playing I mean with the entire wave of you know YouTube gamers and people create people playing these games and sharing it and having fun with that um that's easy marketing and it's free marketing if you can get people to play your game and have fun with it and make fun videos from playing your game so I think targeting those kind of audiences make it makes the marketing itself a lot easier because if you don't have a big marketing budget you shouldn't go out spending it on Facebook ads or Google Ads or YouTube ads so anything like that you should much rather try and communicate to some of the smaller youtubers in the beginning maybe and you can always say include larger youtubers if your game grows that would maybe be interested in playing your game and sharing it and then also just if you create something that that's really different you can contact on news magazines and stuff like that and have them feature a game and yeah so it really depends on your situation but when one way to do is the marketing is just getting a nonsteam that that really helps you can cry the whole process a lot less than it used to but it is too like a good thing so sometimes and behold getting a game on Steam process can be a marketing thing in itself yeah awesome so now I think we are done awesome thanks for your question guys I had a blast making everything today I think it was a really fun tutorial to do and an awesome Q&A we got around a lot of different subjects now I'm totally exhausted for worried so I need some more water and then I need some actual food and yeah so thank you so much guys I hope you had fun and some of you guys are requesting another cat so it's good that I have the second one here and she was just sleeping so she's very tired and probably don't want to hang out so I'll put her down and we'll say thanks for it on today guys it was so awesome so thank you bye have a good one and I'll have this uploaded by tomorrow 5 thanks to us the awesome patreon supporters who donated in March and a special thanks to Derek Eames Kirk faithful Merrifield James Calhoun and Jason the Tito if you want to support the channel and become a patron yourself you can do so a patron account slash brackets thanks guys