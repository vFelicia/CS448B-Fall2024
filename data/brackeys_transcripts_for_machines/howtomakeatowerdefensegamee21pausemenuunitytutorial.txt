thanks for tuning in at braies hello everyone and welcome to this video on creating a tower defense game in unity today we're going to be creating a pause menu for our game not really much to say about that so let's just jump right into it so as you can see I'm here in unity and what I want to begin with is kind of sketching out the UI so let's find our overlay canvas and have a look at what we have in here we currently have our shop which sits at the bottom of our screen and the game over menu that we switch on and off as the game continues and I thought we should go ahead and create our pause menu in kind of the same style as the game over menu uses so what you could do is just duplicate the game over menu and modify to suit our needs or we could quickly recreate it let's do that because not everyone has watched the game over tutorial so let's just go right click UI and create a new panel and we basically just want to choose none for the source image so we can get rid of those roundings in the edges and this allows us to Simply choose a color and we can go ahead and choose the same color as the background image for our game over menu so let's actually just copy this entire image component and past it over here cool then what we want is are some buttons and we of course have some buttons inside of our game over menu and I'm actually just going to take one of these buttons copy it over here and just copy the main uh the menu button and just have a look at some of the settings so the image here we have again no Source image the color is completely white everything else is pretty much default values and we don't want this on click event and we can delete the canvas group so this is pretty much just a standard button and then if we look at the text you can see that we've put in menu here we have robotto Medium as the font the font size is at 40 and the color is kind of the same color as our background elements so you can just copy the hex here if you want to and all of the other settings so um now I've showed you uh those we can kind of continue here so let's move this to the center of our screen maybe a bit down and let's kind of widen it to fill up a bit more something like that looks pretty nice and let's go and write continue here instead so if we press this button of course the uh pause menu is going to disappear and we can continue with our game Let's also rename the game object itself to continue and everything else seems fine for now so let's now drag this to be a child of the panel that we created and let's rename our panel two pause menu now we can duplicate our continue button and what I basically want to do is create two buttons that are side by side here uh one for restarting and one for quitting and you could just do that like I did here but moving and positioning them uh individually but what I would rather do is uh whoops I went back a step too far there is create an empty object and we can kind of scale this to the side of our continue button and then move it down and this is going to just be a simple horizontal layout group so now we can take a few buttons say our first continue button here and the second one and you can see it scales it automatic for us however we need a bit of spacing so let's just bump our spacing up to say 8 pixels and I think that looks pretty great so we can call this one our two buttons and then we can call the first button retry and the second button we'll call this one menu and of course we need need to change the text elements as well so this one's going to say retry not retray and this one is going to say menu cool yeah so pretty simple UI but it does the job uh so what we can do further here is maybe just add a bit of contest uh context text up here which is probably just going to say PA so let's just create one big text element and again we can just copy our game over text from the game over menu here and let's have a look at some of the settings we have a font size of 85 the font itself is robotto medium I think we could easily change this to robotto bold and everything else is like this we have a bit of shadowing we can delete the canvas group and yeah that's it and then we can change the text here to um PST cool and what I want to do is kind of scale this in to be the same width of our buttons move it down until it kind of sits on top of them and let's maybe instead of having a fixed font size let's make this a best fit and that means that it will scale between these two sizes to fit uh this size as best as uh it possibly can and uh we can maybe widen this a tiny bit and you can see that it actually goes above 100 here so let's widen this to 130 and uh now we can take this a bit back there we go just to kind of make it the same WID as our buttons you could put a fixed font size in there or you could have it scal automatically let's also rename this object to P text and now I think if we just move these elements up a bit we're pretty much ready to make this an interactive menu so the first thing that we want to do is of course disable the menu itself this way we can enable it when we want to inside the game then we want to create a script and let's make this a script that sits on the game master because our game master is responsible for changing states in the game it's responsible for uh keeping track of important things as What wave we are on and what we should build so let's also have this pause our game and uh basically we're just going to create a script here called called pause menu let's do that so hit create an ad there and let's double click that to open it up in Visual Studio and that's just going to take a second to load here and it's going to pop up on my secondary monitor but I can quickly drag it over there we go um so what I want in here is basically a way for us to register if the user has pressed the Escape key I think the Escape key is going to be the only button that is going to tole actually we could add the p in there as well that's a very popular uh key for well pausing the game so let's create a update method and this can be used for checking for input so let's go if input. get key down and then we want to check for the key code. Escape key or and we use the two vertical bars here or in case we get the key down key code Dot and then we use P for pause awesome and in case this happens what we want to do is we want to call some kind of method called toggle where we will tole the pause menu either on or off depending on what it's already set to so we'll just invert its current state and we can delete the system. collections up here and we can go ahead and create this tarle method so at the moment we actually already have a bit of functionality for um kind of stopping our Mouse movement if you were uh remember when we implemented our camera controller here we made it so that if we pressed Escape we could disable that so right now I'm trying to move but it won't and then I hit escape again and we can move around once more so in order to kind of get rid of this code we got to go into the uh main camera under the camera controller and delete the variable called do movement and we also need to delete these two lines or these four lines uh that takes care of uh actually implementing that into the update Loop so now we can have this stuff only um kind of act in inside of our pause menu and uh not have two different things happen when we press Escape in this different places so basically what we want to do inside of the toggle here is we want to enable some kind of UI or disable it so we need a reference to that UI and in order to do that we'll just create a public game object up here called the UI and then down here we'll simply do ui. set active and we could either put true here if we want to enable it or false if we want to disable it and we just want to do the opposite so we want to flip it so we can get the current uh state of the UI by saying UI do um active self and this is going to be true if the uh game object is enabled and not true uh if it's disabled so we can just do the inverse of this by putting an exformation Mark here so in case it's enabled it's going to flip this to say false and then we're going to set it active false which means we're going to disable it so that's a pretty clever little piece of code but it's very efficient and uh totally easy to uh use I mean you save a lot of space by doing it this way instead of going if already enabled do this if not do that that I mean it essentially accomplishes the same thing and I don't think there's much difference performance wise but this is just a lot cleaner so then we can go and say um uh and now we actually want to have an if statement in here so we can go if ui. active self now that we' flipped it so in case we just enabled our pass menu what we want to do is go uh and um freeze time so U we of course don't want our game running while the pause menu is enabled and therefore we can simply go time. time scale and set that equal to zero and what you might have heard is that when you ever whenever you change the time scale meaning the uh speed at which the game is running and one is normal time zero is uh still not running at all and two is double time um you might have heard that you should change time. fix Delta time uh as well so time do fixed Delta time here you can see that's both a get and a set variable and you definitely should in case you're creating some uh slow motion movement or speeding up the game but when just setting time.time scale to zero it's a essentially freezing the uh fixed Delta time um behind the scen so it's actually not running the loop at all and therefore you don't need to change fixed Dela time so just in case some of you were wondering don't you have to do that you actually do not and in case um we haven't just enabled our pause menu in case we actually just disabled it we want to return to our normal time scale which is one so we want to just have the game back up and running as it would normally so we we should actually already see this happening and if we go into our UI scene here or our Unity scene here and find our game master we can now reference the UI element which is going to be our pass menu that we just created and let's hit play and let's try and freezing time and you can see the timer stops there's no enemy appearing everything else looks fine and we can hit escape again and the game continues and one nice thing is that you can see our hover animations are actually still working these are not Ed by the freeze time um and this is because this is just a simple recoloring and the way Unity does it is independent of uh the current time scale if you're using some more sophisticated animations using an animator that will be affected unless you change a parameter on that animator and I'm going to show you how to do that in just a moment so basically what we need to do now is kind of hook these buttons up to our pause menu in order to actually make them do do something and that's super easy all we do is go into a pause menu and create some public functions one for each button so we'll create a public void here called continue maybe or we could actually just have it called the toggle function that we already have made public so we'll do that and then we only need one for the menu and one for the retry so let's create a public void retry and in here we want to reload the current scene and so we need to go up here and get Unity engine do scene management and remember this is how this is something that we need to access whenever we need to load a new scene or reload an already existing scene and then we go down here and go scene manager do get uh or. load scene and the scene that we want to load is the currently active scene so we just want to reload whatever we are already on and we do that by going scene manager. getet active scene and we kind actually just pass in the scene that this U returns we need to go Dot and then build index cool so that is the build index of the scene we're currently at which we are pausing into the load scene and it's just going to restart one thing that we also need to make sure is that we unfreeze time because when reloading a scene Unity doesn't actually change time. time uh scale back to whatever it was in the beginning so we actually need to manually go in here and say time. time scale equals 1 or we could just hit toggle which we I think we're going to do and then we just need another a third method here for uh the menu and we haven't implemented any kind of menu yet so for now we'll just throw a debug.log statement saying something like go to menu much in the same way that we did U with our game over screen cool so that's pretty much all of the programming that we needed to do in this lesson so we can just close down visual studio and we we can find our uh PA menu object over here we can find our continue button and we can add an on click event so let's just hit the plus sign there drag in our game master where our script is sitting find our script and find the correct method which is our tarle now we need to go into our two buttons first off the retry add an onclick event drag in the game master find the script and let's select retry and the same thing for our menu add onclick event drag and script or object find script and let's select the menu function so now they are hooked up and we'll call those methods and now when we hit play hit Escape continue go it goes back as it should cool retry it's going to restart the level as you can see it did that so if I can uh let this go up a bit and go over here and hit retry you can see it totally re uh restarts the level and the menu it should say go to menu so that's perfect so now we have a fully working pause menu and all I really want to do for the rest of of the tutorial since we have a bit of time left is just add a bit more sophisticated animation so basically what I want to add is just whenever the PA menu is opened I want it to kind of fade in I think it's nice that it just disappears as soon as you want it to but when it comes to animating UI elements onto the screen I like to have a tiny bit of Animation there and I'm just going to go with a standard but you can do some fancy UI things and uh also whenever we hover over the buttons I think this is a really really boring animation so instead let's create something where our um where our buttons actually pop out a little bit so in order to do this all we really need to do is find our pass menu and we need to add an uh some animation to this and we do that by going to our animation tab or window and hitting create and this is going to create an animator an anim animator and an animation so the name of our animation here is going to be just pause menu because we only have one animation so you can see it's created an animator called pause menu and an animation and really what we want to do is just kind of go forward uh a little bit of time and then we want to animate the opacity of our entire PA menu so let's just disable the animation window let's enable this so we can see what we're doing let's hit add component and add a canvas renderer oh I'm sorry a canvas group and this allows us of course to animate the alpha channel of this entire object so now we can go hit record again and we can go uh forward a few frames and change the alpha to zero and now of course it animates from totally visible to Invisible so we just need to flip the audio of these key frames so let's just go like this and you can see now that we have a nice fading in animation actually I kind of messed that up so in the beginning here it should be zero and then it should be one there we go so let's see yeah much better and of course this is currently looping so let's just find our pause menu animation not the controller and disable Loop time so now it won't Loop and um by default these kind of animators are set to play the animation right off the bat so as soon as the game object is enabled this pause menu animation is going to play so we really don't need to add any more code whatsoever it's just going to play as soon as we open it up so let's try that out and um okay so something weird is happening here and what is that well you can actually see that if we hit Escape here you can see that things are changing and the animator is actually um updated it says clip count one here and if we have a look at the animator in here you can see that it is animating it's just stuck at the very beginning and that's because we froze time remember time is Frozen and so this clip here stops at the very beginning and when we disable it of course it's not going to be playing anymore because the object is gone so what we need to do is make this animation independent of our current time. time scale and we do that by going into the pass menu onto the animator and changing the update Mo mode it's currently set to normal which most of these animators should be but we want to change it in our case to unscaled time so when we change the time scale this is going to just ignore that so when we now hit play and hit Escape you can see that our PA menu animates on with just a quick fade in which helps make thing look things look a lot nicer and finally to our buttons all we really need to do here is maybe just uh enable our pass menu just so we can see what we're working with finding our say continue button and you just need to choose one of them to start with and we'll apply the change to all of the others in a very easy way we need to change the uh transition here to animation and hit autogenerate animation and this is just going to uh well first create a uh animation controller and let's just call this one button really really General um maybe we should call it something no that's fine pause menu button let's do that no yeah let's just do button actually and let's hit save so what we can do here is now we have an animator automatically set up with the button controller and if we look down in our animation window we have four different animations the normal the highlighted the pressed and the disabled and we are not really disabling our buttons in any way so we can just focus on the first three when it's normal we want the scale up here to be 1 one one and so if we just quickly modify something here it inserts a key frame automatically and we can just set that back so now we have a key frame here where the scale is one 111 then we can go to our highlighted mode and we can maybe bump this up to 1.05 on the X and on the Y so you can see that just makes the button a tiny bit bigger bit bigger and let's go under pressed and do the same as with our normal mode so let's just quickly edit that and have it be at 111 we don't need to do any actual um uh key framing inside of the uh button States themselves because Unity is actually going to blend between these animation States for us and so it should already be working one thing that we could do is maybe when Hing some of these buttons we could create a tiny bit of um movement uh that could be pretty cool so inside of our highlighted here uh we could actually go a bit forward in time and animate it so we could have it maybe go down to 02 here and then back up up and then right click and select flat so it's it's kind of pulsating you could totally have that so let's now disable the recording here and this should actually already be uh working except again this animator update mode needs to be change to uncale time or else it will not work and then if we disable our pause menu and hit play we should actually see now that Unity does this nice blending and you can see we have our animation in there as well I actually kind kind of like that animation I think it's pretty funky so let's just keep it in here so the next thing that we want to do is just apply this to our other buttons as well and that's super easy all we need to do is copy the animator copy that component find our retry button change the transition type to animation and let's now U paste the component as new down here and we do the same thing with our menu again change the animation right click paste component as new so now when we hit play and this is probably our final playthrough so let's just maximize the game here so we can get a good view hit Escape you can see that we have a nice hover animation for all of our buttons and it seems super smooth and we can of course continue the game we can retry it or we can go to the menu or at least we will Implement that very soon so that was pretty much all I wanted to show you for this video I hope you enjoyed it I actually covered a lot of the stuff that I wanted to cover for this course so if if you have any suggestions I'm very open to hear them so without further Ado I will see you in the next video and thanks for watching this one bye thanks to all the awesome patreon supporters who donated in October and a special thanks to Sultan elff faal marifi and James Kell Hound become a supporter at patreon.com Brees