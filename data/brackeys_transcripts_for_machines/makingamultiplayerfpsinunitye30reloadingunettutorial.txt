thanks for tuning in at brakus and I wanna welcome to this video in creating a multiplayer face in unity today we are going to be creating a reload system for our game so whenever we run out of bullets we will force a reload upon the user and we'll probably also add a shortcut which is probably gonna be the our key for reloading immediately so we'll have a max bullet count will count down to zero and then we'll have some kind of animation in there that place while we are reloading that will be displayed on all clients pretty easy stuff to do but it's gonna be a lot of fun so let's just dive right into it so as you can see I'm here in unity and what I want to begin with is to just kind of sketch out the logic so if we find the script that is responsible for shooting which is our player shoot script and double click that and remember this script sits on the player object itself and it's enabled for all of our different clients so this code will be called for all the clients and in here you can see that we do some updating and we do some firing and most importantly down here is the shoot method where we check if we're the local player and if we are well then we want to go ahead and shoot we want to fire out a ray cast and do all that stuff with damage and finding the player we've hit and all that stuff so let's go ahead and add some more code honor this and really what I want to begin with is having some kind of idea of how many bullets we have left and so far all information about our weapon is stored inside of the player weapon class and this is handled by the weapon manager so let's do it go ahead and just open up these two scripts you can see our weapon manager takes care of switching between weapons and currently we only have a primary weapon that we have enabled all the time I've promised you guys to do weapon switching and I definitely will I'm just holding it back a tiny bit because I have some stuff that I want to do first and because I want to have some cool models ready for you so you have something to switch bit swing but don't worry I know that you guys want to see that and I definitely want to do it as well so it's on the roadmap but for now in here we have a primary weapon and we have a reference to the weapon that we currently have equipped call our current weapon and that work is basically just this data so let's just go ahead and add some new data fields here let's make a public integer which is going to be our max bullets and this is just going to be defaulted to something like 20 and then we can have and hide an inspector here because we don't want to show this and make it editable in the inspector which is our current amount of bullets so we can just call this one bullets and what I really want to do here is add on to this a constructor so a class constructor that will set some variables whenever this class is instantiated so we'll create a public player weapon here and this is how we create a constructor and this basically allows us to just set bullets equal to max bullets whenever this class is used so um that's awesome and then we can go into our player shoot script here and we can use the fact that we already have a reference to our current weapon so we declare that up here you can see we set our current weapon equal to the weapon manager get current weapon so we'll use this reference down here and we'll simply say that if current weapon dot bullets is less than or equal to zero meaning we've run out of bullets well then we want to return out of this because we don't want to call all the rest code all the remaining code and we can maybe do a debug that log statement here saying I'm out of bullets so and this is where we'll probably false a reload so this is where we'll call some method that will have sit on the weapon manager in order to reload the weapon and what we'll also need to do is remember that whenever we shoot we want to subtract our current bullet amount so I will say current weapon dot bullets so we'll just want to subtract 1 each time we shoot cool so this should actually work and let's just add a bit of information here let's just do a debug the lock up here stating the current amount of bullets we have right before shooting so we could also do it down here as well but let's just do it here for actually I want to do it after we just shot so let's just do a debug turlock saying room raining bullets and then we'll do plus current weapon dot bullets awesome so let's say that and let's try to see if this is working in unity already so let's hit play and host the game and host the game come on unity please don't freeze on me so we can create a room here and you can see that if I just switch into the console and do some shooting you can see it says remaining bullets 19 18 17 and we just keep going until it hits zero and now it says out of bullets and I can't shoot anymore notice there's no shooting animation awesome so what we really just need to do is add some functionality for action and now reloading the weapon and then reenabling ourselves to shoot because this is based on the current amount of bullets we don't even need to do need to do any kind of checking in here we just need to know our amount of bullets and when that's replenished we can begin shooting again so inside of our weapon manager let's add a new function and this is just going to be a public void reload and instead it's not going to take in any arguments and what we want to do here is basically keep track of whether or not we are already reloading because we only want to call this once and we only want to do a reload once we don't want him to replay his animation and things will look weird or restart the reload in middle of another reload and stuff like that we just want to go through a full reload and that's it and this way we do that easily by just adding a private pool up here called is reloading and setting that to false by default and then in here we just say if we are already reloading so if is reloading we just return and in case we're not we can go ahead and do a bunch of code what I want to do is just set is reloading equal to true and when we're done doing all of our code we'll set it back to false and you might think isn't this kind of dumb to do because it's going to execute this function really quickly and there's not going to be any code running in between these two things and you're totally right about that except we are going to just in a moment move this code into an ACO routine or an iron numerator as we refer to them in cyber unity but they're still coroutines and we're going to be delaying this code so we're going to be setting up a wait for a second call that is going to wait exactly let's say one second until is reloading is done and will be set to false and that is why we have to keep track of where we are in terms of the reload stage so we said is really reloading to true and then we can just go current not current graphics current weapon dot bullets dot bullets equals current weapon not current graphics Jesus Christ current weapon dot max bullets there we go and now we've reset our mount of bullets and we should be able to shoot again and again right now this is an immediate effect but we should be able to see this working already inside of unity it's just going to skip a single frame and then it's going to reload however it won't do that until we actually call the function so inside of our player shoot instead of saying out of bullets we're just going to go in here and say weapon manager dot reload awesome and now all we really need to do is maybe notify ourselves that this is happening so let's just go in here and throw a debug the log statement saying debug the lock reloading and let's just do two dots here because it's and something we're waiting to finish so let's hit a hit play now and host the game and let's go through this and you can see it's s remaining bullets and all that and when we reach zero it's and then click it's going to say reloading dot dot and we can now shoot again and if I just hold down the trigger here you can see that it very quickly reloads you might not even be able to notice it on the camera the reloading is almost instantaneous so what we'll do here is of course add some kind of delay to this and that's why we'll use a kuroh team so let's go up here let's say using system dark collections collections which we need to do it we want to use the karate then we go down here let me create a private ienumerator and we call this one I'll reload coroutine I don't it's not we need to distinguish between this reload and the private one here you can call it whatever you want I'm just gonna tell myself this is a co routine and we need to use it that way you can do whatever you want with the naming here and yeah everything else is good so now we just need to move all of this our code here inside of the core team so read or coroutine here it's gonna say reloading and it's going to set this and then before we change the amount of bullets we want to wait so we're going to do a yield return new waitforseconds and the amount of seconds we could set to something fixed say 1 second or we could have it be dependent on the weapon so some weapons might read out really fast such as a pistol where just what you swap out the magazine or some weapons might take a while say a light machine gun when you need to do all kinds of reloading action so what we'll do is we'll go inside of our player weapon and we'll add this as another field so let's just create a and actually I want it here let's just create a public float which is going to be our reload time and it's going to say let's just set it at 1 by default and let's put that in here so now we just go current weapon dot reload time cool so this should actually already work for the delay all we need to do now is call this corrodium so we go start coroutine and we put in the reload curl routine and remember this is a function so we need the parentheses so now let's save this and we should again see this working inside of unity so let's hit play now let's create a new realm test and we should see if I just hold down my mouse now that it actually does a 1 second pause before continuing each time it reloads cool but we don't currently have any kind of visual representation of what is going on and since we haven't added any sound to the game it can be kind of hard to unnotice so what we'll do is create right now just a simple animation but you can be an ass van advanced with this as you want to and have this be called on all of our different clients that we want to call it on the local one which we're doing right now with this function here this is only cold on the local player and then we'll have it be called on all of the other clients as well where we do this kind of reload animation so let's begin by creating the animation and let's then move on to actually calling it in here so um in order to create this animation let's set up a simple little system here so let's go into our main level one and let's take our prefabs and find our actually our players out here let's drag a player in here and that should switch up our camera here let's find our camera our weapon holder and let's set our scifi automatic as a child object of that so now let's focus on this and let's reset the transform component so now we can see that this is set to zero zero zero and zero zero zero on both the position and the rotation and the weapon hold you here is offset in some kind of way that enables us to do that so now we can select our scifi automatic and we can add a simple little animation to this so let's go on to animation and let's hit and you can see right now that this is actually relative to not our scifi automatic but to another animation component that we have in here and you can see we might be able to see my cat kind of going crazy with some wires here on the desk so I'm just gonna put him down on the ground so um you can see that this is currently on using our animator that sits on the player himself so let's go under a scifi automatic and let's create a separate animator here so let's go animator create one there let's also create a animated controller so we'll have to go in here and I've already created a folder here called animation and one called weapons undo that you can just go ahead and create those folders by rightclicking create folder let's create now an animator controller here and this is just going to be well now we can call it our scifi automatic but we might just have the or use the same animations for all of our different weapons we'll see it depends on what weapons we decide to add some some weapons might be really similar and some might need separate animation but for now let's just call it the scifi automatic and you can see now that if we reference this if we reference this here dragon our scifi automatic there you can see that we can create some new animations to begin animating scifi automatic create an animation clip so we're gonna do that so let's hit create and let's go on your animation weapons and it's called this one the idle animation and of course we'll have to create some kind of idle and this can be really really simple you can just leave it in here just add some keyframes for the position just like this and you might want to add some for the rotation as well there you go and you can just delete these so we only have our base keyframes so our position is at zero and our rotation is at zero and you can definitely just leave that in here but what I kind of wanted to try is just animating this idle a tiny tiny bit let's just try moving forwards let's say a pretty big amount let's say 1.5 and then dragging it up a tiny bit to something like 0.05 is going to be fine I think and then going back to the animation or to the keyframe that we have before it so let's put that at four let's rightclick or not at four at three I've messed something up here so actually let's put this at two and this at four let's try that let's right click and hit flat and let's try and play this so that's that might be a bit too slow or it might be really nice it depends on your game it just adds this kind of subtle breathing and you might be thinking well we're playing as a robot does you really need to breathe I know he does definitely not you can just leave this out I just wanted to try it in here so now let's hit create new clip and create a reload animation as well so let's call this one reload and this of course needs to be a bit fancier and when I say fancy I mean ridiculously simple but you can create these animations inside of a blender or Maya or 3ds Max and you can import them in here or you could export your gun to be sort of modular split into parts and really do a nice animation inside of unity that's totally up to you I'm just gonna do something really simple here for the sake of the video and then at a later point again I want to show you some really cool weapons that you can add to your game so for now let's just take this here and let's move it down and I'm actually want to move it down quite a bit and that's also tilted forwards let's tilde kinda to the side something like that something that very clearly says this weapon is currently not able to be used just kind of moving it out of the frame and you know there's notice that this looks super weird and that's because we're currently only viewing this from our default camera this camera right here but what we have is the weapon camera that when we're in the game displays the weapon with another kind of a foe we and which is positioned a bit differently so things are going to look much nicer but I actually think that is kind of all we need to do for a reload animation so let's go to reload here and what I want to do is not actually include the transition here I just want to remove the original keyframes and just move these to the very start of the animation and then we'll have the blending between the two animations occur from unities automatic blending in the Meccan em system so this is kind of just two different states that we're blending between and we don't have any kind of animation in here yeah so one thing that I might want to do of course is just maybe make this one second long so we'll just add the same keyframes here and we have this static thing going on and we can always change this if it doesn't look good so now that we have these two animations I just want to go and take our cipher maduk move it away from our player and hit apply because we've added some new components here let's now delete it and let's also delete all player what will then do is go into our animator and doubleclick on a scifi automatic and you can see that currently our idle animation will play by default that's totally fine then we want to go and make a transition from that onto our reload and let's also make a transition back again and another cat is joining in there we go so I'm turning into an old cat lady here it's not too good I think pretty much all my videos have a cat in them lately so um yeah so we want to transition to our reload animation whenever we reloading and in order to do this let's add a parameter up here and let's do a trigger so this is just an ability to uh or this is a parameter that you can edit inside of unity you can just say set trigger and then the name of the parameter and that means that the animation will play instantly and that the trigger here unlike a boolean will be set back as soon as the animation has started then we can also go up here and actually that's the only parameter we need so then we can find our animation from the idle to the reload and we can add a new condition which is going to be you can see here the reload some once that's triggered it's going to switch from the idle to the reload and we don't want this to have any exit time we want to be able to do this immediately then on our way back we don't want any condition so if nothing has changed we just want to play the reload animation and then transitions back to the idle so um yeah what we can do then is um animate this inside of our script so we just have to trigger these animations now all we need to edit is this parameter but let's just see if this is working inside of the game first so let's find our lobby and it's a play and let's create some kind of game in here and what I'll do is just hit escape here and you can see that our idle animation is currently playing and I actually really like it in here I just adds a tiny bit of animation feel on to the player making everything look a bit less static but I mean some games prefer just having the weapons really really fixed counterstrike is an example of a game which has almost no weapon sway it has a bit of weapon sway but mostly when you're walking so yeah and you can of course add different animations here you can add a walk animation if that's something you wanted to do using the exact same system now I've opened up a world of possibilities for you hopefully and you can just go crazy with the kind of stuff so um yeah what I want to do is just select our player select a camera or weapon holder and our scifi automatic and we can now see in here on animator and if we switch this over to fill the inspector instead and move things over if I now hit reload it's going to play that animation and we can go into our game view and see what that looks like so a very very simple reload animation here but it just works so that's really cool so let's now do this through a script instead of manually through the editor so all we need to do is go into our visual studio into visual studio into our weapon manager script and we need to actually call this on not only the local client but on all clients and so we need to go through first a command which is called on the server this server will then call an RPC on all of the different clients so we'll have a command here which is going to be a command or a void command reload let's call this on reload so we can have all kinds of different stuff happening here whenever we're reloading because this is not actually taking care of any reloading we do that locally we just want stuff mainly with graphics to happen when we reload and we just want to call and now if you see here so that's two RPC on reload call that and then we mark this here as a client RPC and it's to avoid RPC on reload there we go and then we can add some functionality in here we also want to make sure to call this so this is going to happen right after we begin reloading and yeah so in here what we can then do is get the animator component which sits on a current graphics object and their current graphics is the weapon object with all of our graphics so we do current graphics that get component of type animator animator and we might want to check if this is no so let's store it in a temporary variable our animator here let's store this in something called annum and let's just say that if annum it's not equal to null well then we want to play some animation so let's do Adam dot set trigger and the trigger will be called it reload so that should handle everything for us and we should basically now be able to test this in the game so let's just begin by testing this on the local client here and then let's do a build right after if things aren't working to test it on the other clients as well so that's it create room here let's hold down the trigger and once we reached 0 it's gonna reload and it's gonna pop back in awesome that is working so smoothly that's also just before we test this on the on other clients by making a build let's also add the ability to force a reload so let's just go into our player shoot here and we can maybe add this into our update here so you can see we don't want to be able to do this if we're past and if we're not well that is true and that is true so we can maybe just add this before the actual shooting takes place I think that should be fine let's just do that so we're just gonna go in here and say if our current actually just if input get key down and the key that we want to check for here is key code key code dot our and we can just say reload so we can do current weapon dot not current weapon weapon manager dot reload and one thing you might want to do here is just set the bullets equal to zero temporarily because now we're reloading and in case the player is shooting we don't want that to go through you could also expose the variable here this arm is reloading we could just make this public and that will allow us to use that variable instead which is probably more stable so let's just go in here and say well we want to reload here and then we want to return and we only want to shoot in case we're not reloading so we're just going to go in here and say if we're not the local player and we're not located reloading so and weapon manager dot is reloading is false there we go so that should make sure that we don't shoot when we force a reload and everything else seems pretty good one thing we can do in here is maybe just check if our magazine is already full because if it is it's kind of weird to do a reload anyway so let's just say if we get this key down actually let's wrap this in a separate if statement so let's say if current weapon dot bullets or less than our chrome weapon dot max bullets so if we have shot and use some bullets in some way then we want to be able to call this stuff in here awesome and instead of using in put that kit key down key code R we could use the default or the building unity our input system so let's go project settings input and let's see what we have here if there's already a reload in here it might be that's actually not but that's fine we can make one ourselves so let's just duplicate this array element and instead of fire now it's going to be reload and it's going to take in as a positive button it's going to take in actually this is currently set up to use this is actually fine I this is all fine good isn't it I think it is yeah this is fine so our positive button here is going to be the R button and I believe you can just do that and let's figure out if you can I always get confused with unity is our input system let's say now input dot get buttondown and then we use the reload reload button and that should do the trick so now we can close that down let's go in here and hit play let's create a new room test and nothing should happen now when I press R if I fire a bullet and press R it reloads and it's back up awesome so one thing that you might want to do is display this on the UI in some way I'll go ahead and hit build here while I'm talking and we'll definitely I hope at least to do that in a video to come if it's something that you really want to see let me know and I'll prioritize it I also want to display our Hills at some point so it could be a good kind of video to do some UI work displaying the hills and displaying the bullets and maybe also some cures as to what which buttons does what yeah I think it would be good to work a bit on the UI so let's now host the game here let's hit play again just call this test let's join it over here and of course this is going to take a few seconds but that is fine because I believe that this is going to work so now you can see if I jump down here and hit reload it just reloads and it works on all of the different clients it works as well if I run out of bullets and we can see the same thing happening here act except that is kind of hard to see so let's just move over unity here and let's run them in parallel and I will have to focus in on the guy there and you can see now that when I reload it works there as well awesome so that was pretty much all that I wanted to show for this video I hope you enjoyed it let me know if you want to see some UI work next and if you want to see some weapon switching I definitely wanted so thanks for watching and I will see you in the next video thanks to all of the awesome patreon supporters who donated in October and especially thanks to Sultan L should've Facebook mera Phi and James Calhoun become a supporter at patreon.com slash breakfast