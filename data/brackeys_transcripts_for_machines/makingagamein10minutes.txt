the reason the address asked me how much time do you need to make a game feeling a bit bold I confidently said 10 minutes I mean it's not like you would have any way of finding our of course he responded with great let's make a video on that after which my confidence was gone but I've now have time to adjust to the idea and think it sounds really fun also doing game challenges like this is always a great way to practice I'm gonna try and replicate super hexagon which is a really cool mobile game so without any more introduction let's make a game in 10 minutes all right so all the cameras are rolling there are so many cameras here there's one there one there one there and this even one up there so it's pretty exciting and I think we're all ready so let's just start the timer and let's get started so the first thing that we want to do here is probably just sketch out our level so I'm just gonna select my main camera and I'm gonna give it some kind of fairly vibrant red color I think this looks pretty good you can always play around with this later I'm also going to go ahead and create a 2d sprite and for this party I'm gonna select a knob I'm also going to reset the transform and set the scale some to something like 3.8 by 3.8 I'm also going to set the color to black and make it transparent and this is just going to mark the center of our screen let's then go to the object sprite and create all players so let's rename this to player again reset the transform on this and for the sprite that's also just choose to knob here we are on a limited time let's set the Y to point 6 to move him up and now we can have him rotate around the knob of course in order to do that we need a few components we first of all need a rigidbody 2d that we're going to mark as kinematic because we only want to move it through script and not by forces let's also create a circle Collider 2d and mark it as a trigger because we don't want collision we just want to know when he collides with something and let's then also create a player script and this is of course what is going to move around a player so let's double click that this to open it up in visual studio and hope the visual studio opens quickly today please wasting valuable time alright so let's get rid of our start function here and instead let's create a public float and since we're going to be moving our player we of course want to know how fast let's create a move speed by let's say 600 by default then inside of our update min method we can get some input used get access wrong because we don't want any input smoothing here and I'm going to get the horizontal axis so that is the AMD keys or left and right on the keyboard that's actually store this in a variable because we don't want to do the movement itself instead of update let's do movement equals zero and it set it equal to on input and now we can create a separate fixed update method which much bit much better to do our input when use transform that rotate around and this is pretty cool method because it allows us allows us to rotate around a certain point and I want to rotate around the center of our screen or knob so vector 3.0 and the axis is going to be viktor 3.4 with this set axis and the angle is going to pend on our movement multiplied with time dot fix delta time multiplied with our move speed and i believe that we need to reverse this so I'm gonna put a minus here but I might be wrong so let's say that heading to unity and hit play and hopefully hopefully yes we can move around our player that's good player movement done yay so the next thing that we need to do is of course add in a hexagon so that we have stuff to avoid and there we could do this by opening up Photoshop and quickly creating a sprite but that would mean that when we scale the hexagon the width of the line would scale as well so instead let's create a line renderer here and I'm just going to reset the transform on this and inside the physicians array we can now start to use a line that's set the C to zero we always wanted that to be zero but you can see here that we can now create this line and I'm gonna try and approximate a hexagon using this method so a hexagon has six positions or six points and six sides and the first one is going to be something like negative 0.5 by negative pointeight just point eight that's two point eight and then the second one here is going to be negative point nine 500 point nine five don't have time for errors by zero you could also just do one but I think this is going to be better because it's not a round number if I have my math right which is very much in my head right now point eight point five oh this is stressful to do negative point eight again yes it's looking like something 0.95 now in Syria and finally it's going to be 0.5 and negative pointeight no just point 8 funny yeah alright that that actually looks like a hexagon might want to bring in the sides a bit more it's just an approximation bear with me guys so we now have a hexagon and the cool thing is that when we scale this the line thickness remains the same so we can go in here and set the width to something like 0.2 and it's always going to there cool awesome we then name it something like X are gone and of course we need to a few things on this first of all we need a colliders that's going here and create another object I'm gonna put this on a subject separate object so that we can mess with it and you'll see why in a sec and let's do an edge Collider 2d and we want this to have all the same points we want it to follow the shape so let's go ahead and lock this layer and let's go and add another inspector not lock the layer oh hi too many inspectors in here now so we have two inspectors now and we can select the hexagon because this one is locked and we can go into the line render and now we can see all the positions and simply copy them in really cause I'm just gonna do this quickly because like I don't think I can do this while talking alright I think that's right so we can now close this inspector here and also unlock this inspector here and now we should see that when we select our Collider dice indeed a green line that goes around and the cool thing is because it's on a separate layer means in this scale it in a bit and it's now on the inside only of our hexagon which is where we want to register collisions so that's perfect and now on our hexagon we can go ahead and create a few components we want a rigidbody 2d again this is going to be kinematic and it's also creating a hexagon script cool and yes I do want to open that but please open it quickly there we go awesome so inside of our hexagon script we of course need a reference to a rich body so let's create a public rigidbody 2d and it's called it RB we also need to define some kind of shrinks play speed so let's do float shrink speed equals 3 and then inside of our start method we can start by setting a random rotation for rigid body so we can do rotation equals random that range between 0 and 360 degrees and we can also set our scale transformed not locally to the angles local scale equal to vector 3.1 multiplied with some large number that's just 210 hopefully that works out the inside of an object method we need to always shrink it so Doku again local scale please equals vector 3.1 multiplied with shrink speed multiplied with time.deltatime I think that's gonna work and then we can check that if our transform that local scale maybe we use any coordinate I'm just going to use X gets below 0.05 we probably want to remove it so destroy game object alright I think that's gonna work so if we now go in and we need to remember to link up our rigidbody now it's about to forget that so link up the red body here hit play we should see that our Higgs again gun becomes really big and then so it slowly shrinks and then disappears awesome it works so we can now take our hexagons and move it down here in order to create a prefab out of it and of course we need to now spawn in some hexagons so we'll create some kind of spawning let's just call it spawner and we'll also create a component called spawner and spawn a spawner spawner open this up spawn it there we go and this is actually fairly simple we need to create some kind of spawn rate so public float spawn rate spawn rate equals 1 and we'll also need to create a public game object hexagons prefab and a public float private float doesn't really matter but it does next time to spawn so this marks the next time that we want to spawn in a hexagon and then inside our update method we can check that if time that times our current time is greater than the next time to spawn well then we want to go ahead and spawn in a hexagon so we'll instantiate a hexagon prefab at the centre of a world vector 3.0 with no rotation so quaternion that identity and we also want to set the next time to spawn equal to time that time our current time plus 1 divided by our spawn rate awesome I think that's your work again I guarantee so in doing things this fast oh no no no I hit play yeah that's an arrow because we need to link our hexagon prefab oh my god so stressful and that's hit play and now it spawns in hexagons amazing of course nothing happens when we actually collide with them so to fix that let's go into our player script a player script let's add a quick method here and this is just going to be a void ontriggerenter 2d something something interests our trigger let's restart our level in order to restart a level we need to be using engine dot scene management there we go and then down here we can go a scene manager that loads scene and we want to reload the currently active scene so seeing manager don't get active scene dot build index and there we go we can also print some kind of message or slow the game down or show some kind of game over but for now we'll just restart it so now we should see that if we hit the sign here yes I'm so happy that work and the final thing that super hexagon does I think we have time for this I have no idea the final thing that super hexagon does is that it kind of rotates the camera constantly in order to give this pretty cool nauseating confusing but cool effect and to do this fairly easily is just add a script on our main camera called something like rotator nut row ADA rotator and if we open this up inside for update method we simply want to do transform rotate by victor 3.4 word again around woops around the set axis and our rotation should be time.deltatime multiply it with some speed I'm gonna go 30 and again I want this to move in a counterclockwise direction I believe just going from the hunch and I think that should be it so now when we play this yes our camera is constantly rotating and we now have a game that's it we did it that super hexagon not quiet it's not super hexagon it's an amazing game and it takes more than this but we have something and I believe it's within the time frame someone tell me that's amazing so hopefully you guys like this sort of format I think it's it's really fun to be challenged and to to do something that you want usually do it's it's always fun to make a game where you don't get caught up in how pleased the code is or optimization and all these bigger thoughts and just adding lots and lots of features that sometimes it's fun to just sit down and do a game really quickly and hopefully I don't know what camera to speak to here but hopefully you guys kind of will try this out yourselves so I am now challenging you guys to do this yourselves that's right I want you to grab your mouse and keyboard and try to make a game in ten minutes and if you want to be a super badass you can even film it and share the video and game on discord we've gone ahead and created a channel specifically for the 10 minute game challenge of course I completely understand that creating a game in ten minutes might seem really scary and hard and it is but it's also a really great way to improve and force yourself to just make something after all who cares how good the end result is you only had ten minutes also make sure to let everyone know that you're participating by tweeting with the hashtag 10 minute game and I would actually like to challenge Sam psyche who is specifically to do this challenge also if you don't already know Sam's channel you should definitely check him out also make sure to leave a comment to help encourage him on that I wish you the best of luck with the timeline and game challenge and I really look forward to seeing your submission thanks for watching I'll see you in the next video thanks of the awesome patreon supporters who donated in September and especially thanks to enter kononenko art arming true VR systems simmer IO extended player Cheeta 3d Jeff Johnson infinity PBR Sybok mummy Dennis Sullivan Chris Sheriff Abdullah pizza Murphy thanks alone Leela set Vincent and skewer shreya ste Dirk Eames Kirk Ronan Chima polar bear Bruins cat now akiva sake brother appears Larry tweet James Rogers Rob Baron pecan Vania Erasmus Robert bond car Jackson James P Anthony Patton q Swedish key and a brief see you guys Roth