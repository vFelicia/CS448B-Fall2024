thanks for tuning in at braies hello everyone and welcome to video number eight in going 2D today we're going to take a look at creating some DUI that will allow us to restart the game we will also just fix a couple of bucks we are actually getting pretty close to finishing the game up and being able to export it so um not a lot of videos to go so let's just get started with today's video so first up open up units as always cool so first we're going to look at a bug that has been annoying quite a few people and that is the ball uh ball sometimes slowing down when colliding with the top of the players um even though the bounciness is set to uh one and the friction to zero the ball can still slow down at times so I've written some okay code uh to fix it um it's basically just uh patching things up uh it's not the best practice U but the alternative would be to uh write the ball Collision uh completely from ground up and I think that's just too much for this video uh so today we're just going to implement the code I came up with which is a uh pretty basic um setup cool so first of open up the ball control. Javascript file and let me just zoom in on the text here and then we're going to make an update function so just right below the function start create an function update and open up the brackets there and in here we will just do VAR XV for x velocity of type float equals rigid body to 2D where the first R here is just non capitalized dot velocity do X so we're just storing our uh x velocity the movement speed on the xaxis into a float variable so we can just reference it throughout then we're going to say if this x velocity is smaller than and I'm going to say 18 here uh you can go ahead and change this it's going to depend on the speed you set the ball off with uh the ball speed up here you don't set that directly you set that using add force uh which B which basically means that instead of changing the velocity directly down here we use the add Force function so that um we if we add the force of 100 here it won't actually uh travel with a x velocity of 100 so you're going to have to just figure that out yourself and I can just quickly show you a pretty easy way to monitor your ball's velocity and we simply go debug.log velocity and then just plus the X Val there so now when we save this and head back into Unity uh we get an error here un identifier oops I missed a d there 2D cool so now when we hit into unity and hit play we can see in the console uh that it will output the velocity of our ball and we can see here that the ball uh currently lies around the uh 19 uh or minus 19 when it switches uh so I think that 18 will be a pretty good value to say that if it's less than 18 we will bump up the velocity a bit you don't want to do this constantly because that can mess with collision and stuff so just leave a bit of a barrier there uh that it has to cross before we change the velocity cool um so now we can do if xvl is smaller than 18 and make two and signs XV is bigger than Min 18 and last one XV is not equal to zero because it's going to be equal to zero when we are resetting the ball and we don't want it to just fly out or conflict here when resetting the ball cool so now inside of this if statement we're going to write another if statement where we're going to figure out if it's traveling to the right or to the left so now we say if xvl is bigger than zero open up some brackets and then in here we are ready to add the uh velocity so we just do rigid body and here we need to add the velocity directly to the rigid body and we can't just change this value because that wouldn't actually apply to the rigid body so we need to do rigid body 2D do whoops 2D do oh that's annoying dot velocity dox equals 20 and again that's just something you're going to have to play around with else rigid body 2D velocity. x equal minus 20 so we're just going to boost it in the other direction so basically what our code does now is it first off stores our currently x velocity as a float variable then it checks if we are traveling between 18 and minus 18 uh in either to the right or to the left and it checks if we are standing still and if we are not standing still and are between the 18 and minus 18 values it's going to check whether or not we're traveling to the right or to the left and then apply velocity in the direction we're traveling cool uh so now what we can do is we can just monitor what it's doing by adding debug.log so now we can simply say debug.log uh velocity uh before plus x velocity XV here and then close that off and then also a debug.log saying velocity after plus and then just rigid body Tod velocity dox I'm just going to do a small B there cool so basically what will happen now is we will add the velocity and then it will say what it was before and what it's uh it has now been changed to just so you can follow along in what it's doing behind this um behind the scene so now we can clear off the console here and uh just to T Test out if this is working we can uh select our ball bounce and we can uh try to bump down uh the bounciness a little bit but right now my inspector is stuck here so hopefully it will just sometimes I have some issues while uh Dropbox is sinking and it's it's pretty normal see if we can get it to select there cool so select our our bounciness and simply change this to something like 0.8 and now in the console we will be able to monitor what's going on there and we can see that it changed it changes itself uh actually not what right now it sets the before to the same as the after that shouldn't be happening let's just see what's going on here okay so I figured out what our problem was uh the Cod was actually working but I forgot to put the debug. logs inside of the if statement here so they were constantly being called which they shouldn't be so now if we just put them in here and make some space for them there uh we should see this working correctly so now when we hit play clear off all our console locks here we can see that the velocity changes from 15.9 to 20 every time it hits so that will just allow it to um that would just force it to have the right velocity at all times cool so now that that is done uh we can set the bouncing this back up we can clear the console here and if you don't want the debugging uh you can simply just comment those out by selecting them right clicking and hit toggle line comments great so let's save this and head back into Unity because what we're going to do now is we're going to add a reset button and we're going to do this using a custom skin I've made which I'm going to show you in a sec let's first set up the code for the game manager so select the DM object select the game manager script and double click it to open it up in mono develop now here we're going to scroll down to the function on GUI and then we're going to make some space and we're going to type in if GUI button and then open up some parentheses and say new rect and open that up and we're going to do screen. width divided by two minus let's do 121 / 2 and uh the reason actually let me just show you this before we go into all this so just do screen dot width divided by two comma uh then we're going to do 35 and uh comma 121 comma 53 and these values are all very specific but that's because uh I've made a image that fits these values so I'm going to show that in a sec then we're going to write reset with capital letters and we're going to close it off and then open up some uh some brackets there and then we're going to just leave it empty in here so now when we save this out uh I'm just going to quickly show you why I've selected exactly those values and the reason why is that they fit the image I've the images I've made so if we go uh ahead and close down Unity here and go to the 2D assets pack which you can get from bra.com let's open this up we can see that we now have a new folder called DUI and if we go under this and then on the button we have three states of a button here uh the normal the hover and the pressed and this all looks really weird because it's on a white background but if we just select all of them and drag them into Unity we can set them up so select all three and then change the texture type to GUI and hit apply so now what we can do is we can insert this into our score skin but first let's just make sure that they are positioned exactly how we want them so if we just select the button normal here we can see that it's 121 by uh 53 pixels so if we go into unit uh back into mono develop we can see that I've set the width 221 and the height to 53 and then because when we are using screen. width remember that it uses the Anchor Point in the top left uh corner here so we need to Center this in the middle of the gii so we're going to subtract subtract half of its uh its width so we're going to do minus 121 / 2 cool so now when we head back into Unity it will position it exactly in the center and also something I've noticed is that our um font here is not correctly centered um or it wasn't before at least before it says said minus33 I've just gone ahead and changed this to minus 18 that's a bit closer to the exact center cool so now we can just go ahead and uh add in the skin here so the score skin select that one and then uh open up the button section and then under normal we can select a custom texture and we're going to do button normal then on under hover we're going to do button hover and then under active we're going to do button pressed then we're going to change the text uh color from for the normal and the hover to being completely black the active we're just going to leave that as is then we're going to change the font to I would like aial but you can just mess around with that and the font size to something like 24 so now we're actually ready to go ahead and watch our button in action so now when we hit play we can see that we have a button that is correctly centered called reset and we can press this and uh it will switch between the normal hover and press States correctly cool so now we just need to add some simple logic in order for uh making it reset so we're just going to do inside of the if statement we're going to do player score one equals zero oops that's play score we need player score and player score two equals z and then we're going to do uh a game object. find to find the ball and send a message uh to make it reset and we could do the game object. find here but that would be pretty taxing because then it would have to do it every time we hit the reset button so instead we can go ahead and make a function where it will store uh the uh ball as a variable so let's just do function start and then in here we can start as a variable so let's make a variable for variable for it called VAR the ball of type transform and uh close it off there and then under the function start we can do uh the ball equals game object. find and uh let's do game object. find game object with tag and then we're going to do Bow and uh let's just do transform and close it off so we just setting uh the uh ball as the uh variable here so now when we save this let's just go back into unity and remember to tag the ball correctly so let's go to tag and change it to add tag then write ball and then let's just selected there awesome now we go back into the code and under the player score we simply say the ball. game object. send message and then we're going to do reset ball is the name of the function uh of course you need to change it if you've called it something else and then let's close it off so now it will tell uh it will in the function start when the game starts it will store the ball as a variable as a transform and then it will go down here when we press the reset button and it will send a message to the game object that the reset button uh function or the reset ball function should be called so now when we go ahead and maximize and hit play we have a button that will reset our game so let's just see if we uh change the score a bit here and then hit reset the ball jumps back into place and the score resets so that's basically it for this video uh in the next one I think we're going to go ahead and do some exporting uh but maybe I'll find something else to do let's see um but the ser is pretty much coming to an uh to an end soon so thanks for watching and I'll see you in the next video