hello 1over come to the third video and make a game a series on making a cool little video game in unity in the last video we made our first script and I talked about components and game objects and overall how to use unity to do coding functionality and in this one we are going to expand on some of the code we made the last time to make our ball jump and we are also going to make a script that makes our main camera follow our ball around and we're also going to talk about 3d perspective and yeah it's going to be a lot of fun so first off let's open up the unity I've already done this and let me just explain the first group we are going to be making here it's this one and basically what we want to do is we want to check if we press a button and if the and this could be any button this could be a W this could be the the spacebar it could be anything but if the player presses a button and the ball is currently standing on something we want to check for this because else we would be able to jump a unlimited amounts of times in the air and therefore almost fly so we want to check if the ball is standing on something before you can jump well then we want to make the ball jump and we do this by adding velocity on the y axis if you don't know this 3d space is composed by three axes a normal screen just uses two so it's 2d surface uses two axes and these are normally called the X and the y axis and this is what makes up everything you see on a 2d display but once we add the depth in 3d we get dizzy axis so whenever you want up both to jump if we look at it from this perspective here we want him to jump in the yaxis so we add velocity now that's the first thing we're going to be making I know this is the second thing and it all looks very confusing but trust me it's not we'll get into it don't worry so cool so today we're just going to be doing all kinds of fancy scripting stuff to make our game fun to play and and then the next time we can do some level design and make it look cool ok so I've talked enough already let's double click the ball control script which is the one we are going to be changing so doubleclick it to open it up in monodevelop and it opened up on my other monitor so that we have it I'll just zoom in here so you guys can see and ok so first off let's make the variable we are going to be needing this one is called jump height or strength or weigh whatever you want to call it I'll call it jump height and by default this is going to be equal to 8 that's just an estimate of how large the numbers should be I actually can't remember quite exactly then we want to make a private variable and this is something we are going to be using just in a sec and basically to explain what a private variable is let me first explain the variable link so the variable is a container of information it's basically a box where we can put everything in and then later open it and use it in a script like we do here we make a box with the rotation and then we open it and access everything in it and then we use it with the Delta time that's that's the basic idea of it but we also have different kinds of boxes we have a a box which we can change inside of unity so if that's just a normal variable this can only be accessed inside of the script or by changing in the inspector panel then we have private variables like the one we are going to be making now called private var and this is basically a closed box which you can only access inside of this script which wants show up in the inspector and then of course we have static variables these are these are often confused with public variables and what they do is it's basically a box open to everyone so all the other scripts can also accessed it but we'll just leave startup with a private variable here we'll get into using the other ones at some point probably so a private bar and we are going to call this this falling and the reason why we want this to be private is because we don't want to be able to change this inside of unity this is only something we need in the script and this is going to be equal to false remember the semi code cool now in the function update let's go down the low area where we handle the rotation and actually right above that let's make a new line and then two slashes like this tube dashes and that means a comment so whenever we make these two signs we can write whatever and it won't do anything it's only a comment on the script so here we can write handle rotation handle ball rotation let's call it lat but you can write everything you want so if you find that I tell you something you'll find hard to remember please write a comment about it or something you you wouldn't be able to just look at and know what is write a comment it's great and it makes it easier for others to read your code too okay moving on I'm really rambling today sorry ok so now we want to add now we want to check for input so we type if open a parenthesis and if statements I'll explain that in a sec let's first type input dot get key down open parenthesis key code that W you can also do that space I'll do that W close the parenthesis close the other parenthesis and then make to bracket keys okay so this all looks very confusing it's not you might get the basic idea if statements are made for checking if things are true if things happen if things are equal to other things it's made for checking all kinds of stuff and therefore if so if the requirements inside of these parentheses are met then it will call all of the code it will do all of the actions we put inside of these two bracket keys that's what an if statement does an if statements are some of the most used things in coding now let's take a look at the requirement we put here it's called input gate key down so if we get the key pressed called keiko w and there are many ways to write this we could also do get button down and then jump this is actually a better way to do it though it's not always set up correctly we'll have a look at buttons later probably but for now we'll just type get key down key code dot W like that and then close it off awesome so there are also different kinds of input events we could also just say get key this is if you want something to happen all the time when you're pressing a button so this is this will call the function as long as you're pressing the button get key down we'll call it only when you press it which means once and get key up we'll call it when you release the button which again means once inside of this will now type rigid body again just when we as we did when we access the when we access the rotation or the torque we will now access the velocity and then we will do it in the dot y axis which means up and down and we want this to be equal to jump height so basically we are setting a velocity for our object on the y axis to the jump height which is 8 which means it will go up if this was negative 8 it would go down and cool now that we have that in place let's go ahead and test it out you will notice that we haven't used our private variable date yet we'll get to that in a second I just want to show you what we have so far so if we hit play now and remember we already have the script attached to our ball so we don't have to do that again we can see it's sitting right there and we have the jump height variable and if we hit jump or W we can see up a ball jumping nicely and we can combine this with our ability to move and all of a sudden we have a pretty fun game there is one problem though if I press W a whole lot I ball goes flying and I can do that an infinite number of times so to get rid of this again we will make sure to check if it's standing on something for this unity has made a function we can use normally when you check the things you use the if statement I just showed you but this time we're not going to use the if statement we are going to use the a separate function so outside the function update that's again type function and this one is called on collision stay this is something unity made for us in order to check for stuff like if we are on the ground it's a really great feature but it's unusual to check for something outside an if statement so this is really only when you're doing collision and triggers then you type in in a separate function if you want to check for something in all other cases you use the if statement as a general rule so open up the bracket keys and in here we can type is falling should be equal to false because now with when we collide with something or stand on an object we are not falling awesome then we can go under the if statement here we can go and tell we can add something to our if statement basically we want to check whether or not we are falling so instead of making a separate if statement inside of this one we could do that we could make it look like this make the separate if statement in here and then just change this then we will simply use the + sign to check for multiple things so but right next to the input that get buttondown key code W we will make a space use the two and symbols and needs to be two of them another space and now we can just type another requirement which needs to be met this one is of course is falling should be equal to false and whenever you check if any variable is something you use to equals if you only want to assign a variable or tell the variable to be something you use one equals all of this is not something I I you should remember just off of the top of your head it will come slowly but surely surely but now you can just type after me and then you will get it in the future I promise so it and is falling is equal to false so if we on the ground and then of course if we do jump then we want our is falling to be true because now we are not longer on the ground we have just jumped we have added our velocity we cannot be on the ground any longer so now that we have this code let's go ahead and save it and we should have a beautifully working jump function so let's go ahead and jump a few times and there I was actually able to jump twice and this is because because it's a really good idea to move the is falling outside of this if statement and put it right there the reason why is not something I'm going to explain it's a longer just make sure to put it there and it should handle the code correctly it's something about how unity reads code now we should be able to jump just right up and down and roll from side to side and if I just keep on pressing the button I can only jump once we hit something great so now we got our basic controls working congratulations that's the first part of this video I'm going to go ahead and cut the video of here guys since else it's going to going to continue off in the distance but well it Part B will be out soon hopefully I will I will not take too long before it comes out don't worry so thanks for watching and I'll see you in the next video