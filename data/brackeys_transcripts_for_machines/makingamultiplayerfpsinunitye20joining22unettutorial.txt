so this is the second part on creating our own custom server browser immunity if you haven't seen the first one I suggest you go ahead and do that now by clicking on the screen so what we can then do is we can go ahead and say room list dot add and now we simply want to add our room list item geo so we'll now we have now added it to the list and we will now keep track of it as we go so I believe that's all we need to do for now and if we hit play here of course it's going to say it's not going to do anything because well basically wait wait this is not pretty so what do we have okay so we of course need to set up some of these references here so we'll take our status text and drag it under the status we'll take a room list item prefab and drag that under there and we'll have a room list parent which is going to be our content there we go oh I set all of those up in plane mode so room list item prefab status text and room list parent there we go so now let's hit play and we shouldn't get any errors but we aren't getting any arm getting any servers either because there aren't currently any active and we could of course go ahead and make a case for this in here simply say if maybe we should say down here that if room list dot our count is equal to zero well then we can set status dot text equal to no rooms at the moment and now when we hit play we should see that it goes through all of these steps and it finds all of the matches but it finds out that there are no rooms available at the moment and you can see here that we just need to expand this to make room for the text so if we play here again it says no rooms at the moment so that's fine and we can go ahead and hit refresh and and nothing will happen so that's the next part that is we need to load up this UI here so I'm just going to find our refresh button and undo unclick we can drag in our join our game object up here going to function join game and then find the refresh room list and now when we play you should see it add and searches for rooms and when we hit refresh it does so again and it very quickly says loading up here so that's it so we have feedback on what is currently happening so let's go ahead and test this out by creating a separate client so I'm going to hit ctrl B or command B if you're on a Mac to quickly build a player here and I'm going to just have this sit in a room with a name that we create here so this is our client I'm just going to resize this I'm going to have this sit on my secondary monitor in some kind of game and this is just going to be our awesome game so let's create a room here and I'm going to just drag this over here all it's going to do is sit here in our level and then now when we hit play here you could say see here that it doesn't change the name on the amount of players but it actually pops up and it does so no matter how many time times I refresh so that's super cool and you can also see that our loading object there is to looking kind of fun kind of funky and maybe what we should do is actually go ahead and clear the room list when we are before we refresh here so if we just clear the room list right here I think that will make a bit more sense and I still have the other client working here generally you shouldn't have clients on different versions connect to each other but in this case it's fine so you can see there that it says loading and then it finds the new list so that's much better so cool now that we have this set up we of course again want a way for us to actually join the game and then wait for it to update this text so you can see right now when I click this nothing happens so to do this let's go to a room list item and add a new component and we'll call this one indeed room list item there's no way to further come okay thanks you so let's double click click that to open it up in monodevelop and we need a few things in here we're not going to be using system that collections however so we can remove some of the functions here and the first thing that I want is a way for us from our joint game here to pass in the match that we are currently ahh that this room list item is associated to so that it can set up the name and the amount of players so therefore we need a variable in here that is going to be a private and this is going to be a match description so therefore we need to be using unity engine done networking dot match so a match description and this is just going to be our match you can call this match info whatever you want to and with then we are going to have a public void and this is going to be a set up method and what we want here is to take in as a parameter the match that we have found on your giant game so this is going to be another match description and this is going to be our underscore match and then we can set match equal to underscore match and we can then change the text on this object using match dot and match dot user or its current size and max size that's what it is so if we just save that and hit back into unity we can now maybe actually we need a reference here so we need to make a civilized field and this is going to be a private text and because we're using a text we need to use unity engine dot UI and this is going to be a private text and this is going to be our room list item text we could also just call this the room name text I think that's better so a room name text and what we can do down here is simply set room name dot text room name text dot txt equal to man dot name and then + and I'm just going to have a sip of water here because this tutorial is crazy long so match the name + and then we'll have a parenthesis plus and then match dot current size plus and then a slash or or whatever slash I think + match dot back size and then + and in in parentheses and I believe that is all we need to do so it's written out like this so this is going to display a match name and then the current amount of players out of how many players there is room for so that's fine that all looks great and we can now try this out as long as of course we remember to call this from our joint game method so have a component sit on the game object that is now done and we can get a reference to this very easily recently do a room list item and we call this on a score room list item and that's what why I wanted to prefix or um put geo at the end of this name and we can now set this equal to K get component room list item there we go and just for you know good practice sake we should error check to see if this is actually there so if room list item is not equal to null excuse me well in that case we want to go room list item dot setup and we want to pass in the match and the match in this cage in this case is match from up here so we just pass in the match there and everything should be good then all we need to do on the room list item is find our text object and drag it in there so let's hit play and you should see it says rule name which is not the name of our room so what is going on here so we are calling the set up and we are setting the text equal to match name here so that should actually be working but for some reason this isn't updating so let me just check we have the room list item here it probably means that the setup method is never called but it should be called so let's just try and see if this setup method is actually cold so let's try and debug that like this and say test let me just check here it says if room list item is not equal to null oh we're using getcomponent here we of course need to use room list item geo dot get component there we go so we can remove this debug block statement and now we are calling it so we want to search for this under the object and not the join game object that this is sitting on so now we should see this working so if we hit play here we can see that it creates a button here and it's called awesome game and that's currently one out of six players man I want to join this but we can't so how do we set up the ability for us to join this game well basically what we can have is a and a function on the room list item that is called by our button here by our on click event and we can just link those up so let's go into our room this item let's have a public void here called join game it's that symbol and what we want to do here is another thing but what we can do is then go on to our our room list item our prefab excuse me again and add a new one click event and drag our room list item into that Grundy function and room list item and select the one called joint game so that is now being called however we now want our joint game to link to what every game that we now want to join so we want that to call a function over here under the joint game script that is that is then aware of what match to join and the way we do this is again we can do then because now we've done that is by setting up a callback function so how do we do this well in a room list item we want to now create a delicate so if I go up here and create a public delicate and this is going to be a void and it very much looks like a function because that's pretty much what it is it's a pointer to a lot of different functions so a public delegate void and in here I'm going to call this the R join and instead of calling this joint game I really think we should call this join room just so we're consistent with our our naming and we should remember to set that up in a in a moment so this is going to be a join room delicate and this is going to take in as an argument a match description called match and we can close that off so this is what our function should look like this is what the function that we want to call should look like then we can create an instance of the this delicate so our public delicate void can now be turned into a public join room delegate which we are going to call will join room delicate like that great okay so we are here this fine actually I think we can go ahead and make this private which would be great and then here in our setup we can pass in a function now that we want to associate to our join room delicate and that function will then be called uh when every this joint room is cold so if that sounds confusing I really understand why let me just type this out and I can explain further so let's go ahead and do this so let's call this a join room delegate and this is going to be cold underscore join room delegate or maybe join room Colback or something like that we don't need to name it Delek it actually let's just call this the join room call Bacchus world and we can go down here and then set join room call back equal to underscore join room call back like that and then under your join room we can say join room call back dot invoke and we can pass in our match from up here okay so what the heck is going on here well basically what we're saying is that we want to be able to make a delicate that will contain a bunch of references to a set of functions that we want to call however we don't necessarily know what these functions are at the moment we only know that at runtime at some point in the future so what we do is we create this delicate which is bathed basically a callback that means that functions are able to subscribe to this callback so that when we invoke it all of the functions subscribe to it will be called in our case we only want one function to subscribe to this so we're creating a delegate void and then we're creating an instance of that and that is such join room callback then down here we are adding the possibility for us to when we're setting up put in a function that we will set our join back a join room callback equal to that means that went down here we we invoke our join room callback whatever function we passed in up here is going to be called so that's basically it so it just allows us to input a function as an argument and call that function down here no matter what that function is or what it does cool so now we can go into our and we are going to get an error here but we could still be able to go into a room list item here nope we're not so what's going on here clear that no overload method takes one okay so it's in here rule missed item set of match and now we can input both our match and the join room call back whatever function we want to be out here and in our case and that is a new function that we want to make cold and this should be public I believe public void join room and this join room of course takes in a match description and we'll call that match great and down here we want some functionality for this but I'm just going to say debug deadlock joining and then we are going to do the underscore match dot okay cool and now in here we can simply say join game there we go join room general john room there we go okay and that's all we need to do there then in here what we can do is wait for this to refresh and then we need to just change this rule room besides him to join room instead of join game it's disappear now so that's great and hit play and now this here it's it looks like nothing has changed but basically this button has now linked itself to a method on a joint game that will make sure that it joins the game that we've clicked on so that's super cool so we can when we click this now we should actually be joining the game and that did not work there we go so joining awesome game there you can see so the first time was because I hadn't selected the window so first it selected it and then it took the button press so and you can see I can keep on doing this so and then that now works and that super great so joining awesome game and what we can then do is instead of just having it say this we should actually go ahead and make it do this and it's really really simple so this is actually the most simple step at all so we're going to go under our network manager and we're going to call something under our matchmaker cold joined match this of course takes in again a bunch of arguments and let's just see them here so first it takes in a unknit ID we get this by calling match dot it work ID then it takes in a password in our case that is just nothing and then it takes in a callback in our case that we'll just use the one on your network manager and this is the one called on join match on match joint there we go and then let's close that off then we'll also clear our room list and we will set our status text equal to joining dot dot all right so that's basically it so let's clear this out let's hit play and now we should be able to join the game and you can see here that the other client is still running the game and I can now go and hit and hit click to join so did that again there so let's it click to join here and aah that's annoying so we'll have a look at fixing that in just a moment so it I actually was able to join here and you can see that I'm now in the game so that's perfect that's working and if we go and hit play you can see it says still says two out of six but that's because I didn't disconnect probably properly I simply just hit the stop playing button here we'll have a look at this disconnecting in a proper way later so don't worry about that for now that will change at some point but you can see we can hit refresh here and that does work so that's perfect and then all I wanted to do is simply fix this problem of not hitting the button right so if we find a room list item here we can just drag it under our under join game scroll view viewport content there we go so what is the issue here we should be able to hit that it's probably our status text is above this and what I think what's happening is that we hit the status text box here maybe maybe so what we can do is simply drag this above the viewport and I actually think that might have salted it could also be that we are we're hitting this click to join but I think that would still work but I'm not a hundred percent on that so let's try and hit apply on this and just see if it's fixed already if it was that easy that would be awesome so that's yeah and now it works so that was basically all that we needed to do in order to fix that and you can see that we now have a working server browser that will display the amount of games and all that I'm just going to show you here that if I hit play and then I'll terminate my other client here actually this might not work because again I'm terminating this so if I hit play here and then yeah now it's just three out of six so that just made it a lot weirder so that's because we need to disconnect probably we'll do that in a separate video I want to create one for our passing the game and then properly disconnecting so that was it for this video I hope that you enjoyed it I know it was quite crazy all of this with delicates and UI things and networking and it is confusing it really is network games can be pain to work with sometimes but when it works it's just so rewarding and basically we're at a stage now where you can send this to all of your friends and actually have them create some rooms and jumping there and enjoy the game with them so I think that's really exciting so without further ado thanks for watching and I'll see you in the next video thank you so much to all of the awesome patreon supporters who donated in July and a special thanks to vixen famous own and UK and Locke's game TV these videos wouldn't be possible without you