hello everyone and welcome to this video on creating a armed Angry Birds replica inside of unity this is a live stream so I'll be looking at the chat once in a while and answering some questions towards the end we'll do a full Q&A that's a lot of fun a lot of weird questions normally but also some constructive ones and basically let me just show you what it is we are going to be creating in unity here so if I hit play it's an Angry Birds replica and we can see here that I have some cool spring physics working and we can drag this guy back to gain some momentum and I basically just killed both our enemies with one ball there so that's pretty cool and if we expand all of our cannonballs it's going to restart the level and it's just so fun creating these physics based games because they're really really easy to edit and create multiple multiple levels from I mean our if we wanted to create something bigger here we could take some of these walls move over stack them on top of each other and now it's an entirely different level in the way that it feels here so now we have this to get to get past and in action they might help us a little bit that we have those you can see just how quick it is to prototype these sort of games so there it really didn't act in our favor we can maybe try shooting over it and this is pretty embarrassing I never do game play because I really really suck at it but you can try no this is going to be so hard to get to yeah I failed so you can see just how fun and easy this is um to to mess around with so yeah let's just get started by creating a new unity project so let's go to file new projects and let's begin by naming it something like Angry Birds um please do not sue okay we'll do something else we'll just call it replicas and then we can call it make it a 2d project hit create and yeah let's just go ahead and save the changes to that by the way the sprites that we're going to be using today are of course going to be made available after downloaded to YouTube and the entire project will also be uploaded to github so that you can download it and have a look at all the source code and you have the entire project really all of the settings all that steps so I will make everything available if you are watching on youtube there's a link in the description for sure unless I've forgotten in which case you can go ahead and be really angry in the comments so now we're basically ready to start sketching out a level and that means we'll begin with kind of a background and a ground plane and then we can have a look at getting our first physics objects in there so in here I have a folder called sprites it's just something I have on my local system I just created a bunch of Photoshop files with some well decent graphics and I'm just going to take all of them basically into unity at the same time here so we have them to mess around with and you can see there's a background that's a bowl an enemy a ground I also have a white square really don't know about that we'll just delete him a whit block it would normal and a would tall so we can go ahead and create a new folder for all of these called sprites and just shift select them and drag them in there cool and then we can drag our background inside of our unity level and let's just scale this up a tiny bit so let's reset the transform and just scale it up that we're sure it's going to fit our entire camera even though we go full screen and basically what I want to do with this background is kind of lock it on its own separate layer because when we start drinking or bringing other stuff in here such as the ground we want to make sure that this always stays on top and right now it's really just a coincidence that this ground object is on top so to do that let's select our background layer let's go under sorting layer hit add new sorting layer let's hit the plots a plus sign and we can name this sorting layer background for all of our backgrounds object in our case it's just going to be the sky here and we can drag that on top of our default layer that means that it will be rendered first and therefore drawn underneath cool so then we can select our background and we can set the set the sorting layer to background as well and the cool thing now and this is something a lot of people don't know is we can go up here to where it says layers in the top right corner and we can select and we can go to where it says background sorting layer and we can hit the lock and that means that now we are unable to select it inside of the scene and so if we want to select multiple objects say we have a bunch of stuff in here that we want to select at the same time we don't have to be afraid of just going like that to select all of it it's so much nicer and when you click away you don't have to scroll out and click it ready from the background and go back so a really really handy feature so let's go ahead and delete these three guys here and let's position our ground correctly so let's reset the transform let's shift drag him down to only drag on uy let's see inside the game view something like this already looks pretty good and then we can maybe just scale it on the X here again to make sure that it's going to be wide enough that even if we go fullscreen it's still going to cover the entire screen um cool yeah so now we're basically okay let's just save the scene here so that sits ctrl s or command s if you're on the Mac and we can go ahead and call this something like mainlevel it's going to be fine right now we're just going to be creating this single level but really you can go ahead and create multiple levels so easily and transition between them using the scene manager so really really easy thing to set up so um yeah let's bring something in here so let's start by maybe creating our arm ball and some wooden blocks so let's bring our ball in here let's just go to the scene view take our ball drag it in there and we're pretty much done with that then we can hit add component and we want to add a new physics component called the circle Collider 2d so that will make sure that he collides with the environment and I just want to configure the collider here a tiny bit I want to offset it by something like point zero one on the Y just to get in the center and also maybe edit the collider and just drag it in a tiny bit something like that we want that to feel pretty accurate cool so then we want a rigidbody because we want him to bounce around the scene so let's go ahead and create a physics 2d rigidbody 2d and we want him to be dynamic by default so that when we hit play it's going to start falling but of course he is going to fold through the ground right now because the ground does not have a Collider so let's select that go add component physics 2d and then select box Collider 2d and yeah I think that's pretty well configured right off the bat so now we should be able to play and he'll fall to the ground however I want a bit of bounciness on this bowl I mean it's pretty boring if he's just going to fall flat and every time he hits the ground he's just going to stop it's a bit boring so to edit some of his properties when it comes to his physics interaction with other objects we create what is called a physics material that's going to allow us to define two properties one is the friction so the forces that act when you rub him against another object and the other one is the bounciness so let's go ahead and rightclick in the project panel and go create and we'll find it here physics material 2d and let's call this one the ball and we can basically just take our ball and drag the physics material into the material slot so yeah he should act and now we can basically select the ball physics object and change the friction I'm just going to leave that at point four but I definitely want to bounce in this up about 0.5 so now you can see if I hit play it's going to bounce up and down a bit just already feels a lot more cartoony and fun so this way you can use the bounciness to your advantage or maybe it's going to just jump over what you want it to hit and be really annoying I think it makes it a bit more skill oriented cool so um yeah now that that's in there I think that we're ready to do shooting of the ball and this is probably the part that most people are watching this tutorial for because it can feel really scary I mean we want some nice smooth physics we want him to be hinged kind of on a joint and then when we click and drag him you should follow our mouse but then as soon as we let go you should start shooting based on what we just did and then not be affected by the mouse so we kind of have different stages to go through for our ball and the weight most I mean that's a lot of weight ways to get around this one way is to just script everything yourself so basically give him some kind of anchor point some kind of hook I will be doing that and then as we drag him around we'll calculate the trajectory of how he needs to land based on the distance from the hook and based on the direction that he aims through the hook so that's that stuff quickly becomes fairly advanced I mean we could definitely do it and it's just yeah if you've had physics in in college or whatever you would hopefully be able to do something along those lines but what is much easier it's using just unity spilled in spring component because it does all that stuff and it does it in a much nicer way that we would be able to do so in order to do that let's create a new new 2d object and use sprite and let's just select a knob here for the sprite that's part of the build in sprites here and let's just scale that up to something like 2x2 just to make it visible we'll make it totally black and we'll make it pretty seethrough something like that and this is what we're going to use for the base of our arm Bowl so if we just go ahead and place that here we can take a ball here and whoops and move him away and on this object we're going to coil it and call it something like anchor or hook whatever you want to do we are going to not have a Collider but we are going to have a rigidbody 2d however this hook here is not going to move and it's not going to be moved through script either so what we go ahead and do is change the body type to static and this way unity knows that we need this to calculate physics but we don't need to calculate any movement on this object whatsoever and that's just going to optimize things quite a bit then what we can do is on a bowl create a new component under physics 2d and then it's called spring joint there we go spring joint 2d and basically what we need to do here is first off set our ball to be angered to the hook so let's just take our hook here copy the component paste it on to our um ball here paste component values and it was scaled up so we'll just reset the scale we'll take the ball here and change his sorting layer to something like to just to move it up so it will be drawn on top of the hook then what we do is drag the hook into our connected rigidbody slot and that should mean that when we now move our ball you can see that there is a green line drawn from a bowl to that hook and that basically means that they are currently connected through a string then if we hit play we can already see this on this spring at work so it looks already fairly decent if we want to change kind of how the spring into acts with our object let's say we want to give it less let's say we want to give it less bounciness so that it's going to be more strict and pull in the object a bit quicker we can go ahead and bump up the frequency I mean a higher number here as you see here the frequency in Hertz for the oscillation whilst trying to achieve the specified distance that means that the higher the value the quicker it's going to get back to the distance that or big get back to the point that we've specified as the anchor in our case the hook and that means that if we lower this it's going to be really really sloppy so you can see this effect here so that's at point one this set point five okay didn't do anything that said one hmm okay if we I think we have to change this before playing the game so this is that two really really strict there if we just put it at 0.5 let's see what happens yeah it's a really large spring there so that's that's kinda our that works I played around with it and I found that a value of 1.5 looks pretty good or works pretty good but really you should just mess around with it all you want so I'm just going to have a look in the chat here to see if everything's working all right a good nice microphone discussion I'm not going to put this in the video so I don't really want to talk about it now but man I could talk about microphones forever but yeah not going to get into that cool so now that we have our ball spring working we have to of course connect this with a script so that we can when we hit play actually grab the object and then at some point release it and it's going to use the spring to gain some momentum so to do this let's create a new component let's just call it ball and it's of course going to be a csharp script and let's double click it to open it up in Visual Studio my preferred editor of choice and it's opening up here let's see cool so that is so basically what we want to do here is we want to keep track of whether or not we are currently interacting with the bowl and we can do that by using to unity callback methods the first one is called board on Mouse down 2d I believe to Sydney 2d let's figure it out and the other one is called on mouse op 2d maybe not 2d but we'll figure that out so on Mouse down and we'll just throw a debug log statement here saying something like mouse click and if we save that now hit back into unity good into the game view here and click it yeah it's not 2d I knew it identity and their naming always gets are confused with that yeah it's not 2d so we have onmousedown and we also have void on mouse up and basically let's go ahead and create a boolean up here so a private bull called something like is pressed or is hold down is dragging whatever and we call default that to false when we get a down press we're going to set is pressed to true and we we get a release we're going to set it is pressed back to false this way in the update method we will be able to do some stuff on the object only when we are pressing it so here we can basically say if is pressed is equal to true we're currently holding down on the object well then we can change its position to match the position of our mouse but we don't want to do that as long as a spring joint is active that's going to interfere with our moving of the ball and it's going to be a battle between us saying that the ball should move to the mouse and the spring joint saying that it should move back again applying forces in the other direction and it's going to look weird so what we want to do is actually disable the spring joint while we are not on trying to change its position and the way to do this is by first getting a reference to it and we could do that up here or we could also just use getcomponent i think we should do it up here that's probably the best way and arm actually we don't have to disable this spring joint probably even better would be to set the rigid body to kinematic and then move it so let's do that so let's do rigidbody 2d RB and then down here we go our B dot kinam is kinematic and we said that to to true and then down here we said our RB is kinematic to false I believe that should indeed work so if we try now and hit play here and of course we need to reference the rigidbody so let's just drag in the rigidbody 2d here in order to get it to work so now we can hit hit him here and you can see that something weird happens in that weird is he's just going to continue in the direction he was going when we are actually clicking but he's no longer affected by any other thing that what we are trying to do that means that now inside of our is pressed we can basically just set our P dot position equal to and then of course we need to get the input from our mouse so input dot Mouse position and my input dead mouse position is in screen coordinates so that means it's basically how many pixels from I believe it's the top left corner or the bottom left corner I believe it's the top one how many pixels from that point it goes on the X and then on the Y and that means if we just convert that directly like this our object is just going to fly off the screen because a lot of pixels go into very little movement inside of unity so we need to convert this into world points and the way to do that is by going camera dot main dot our screen to world point and then feeding it all your mouse position so now we should be able to it save and camera that main of course just references our camera here which is tagged as main camera so now when we hit play we should see that when we are holding down on the object that he will follow the direction of a mouse that's awesome it's not currently nonrestricted and when we let go you can see him bouncing back but east of course not going to shoot off and this is the next thing that we have to look at because currently if we start dragging him and we pull him back here what we want to happen is we want him to shoot over and then about here when you reaches this point we want the on we want the spring to let go and just be just stop working and then we want him to go flying but currently it just bounces back and this spring is still applied one thing you could do is you could check the arm distance to the hook in order to determine if he gets close to the hook and if he does you can make it break stuff like that but it quickly becomes complicated and I found a pretty easy way to cheat stuff and that is by going into Visual Studio and basically just setting a small delay actually let me just demonstrate this so if we drag him here let down we're just going to set a small delay 8.1 seconds and after that point one second say it reaches about here we're going to let it go that also means that if your delay is too on too long say we set it to half a second we have a situation where he goes like this bounces back and then it's released and it's going to be thrown over here that's not what we want so we have to set it set our delay right but as long as we do that it actually works really well and feels really nice and definitely feels like something that you're able to control as long as you get the hang of it so the way to do this is by using a Kuro teen of course whenever we need to delay something in code work and wait a certain amount of seconds it's a bit of very weird syntax associated with that and yeah there's really no way around it I'm sorry just follow me if you don't know what Kuro teens are and have never ridden and ienumerator statement in your life if you have it's awesome if not right after me so the first thing is make sure you have system dot collections imported up here make sure you have this line then we go down here we write I in numerator and we write something like a release or unhook something like that I'm just going to call it release and we basically just yield return new waitforseconds and that means that we are going to wait a number of seconds and the amount of seconds that we'll wait we'll put in here and instead of hardcoding that in let's make it into a public float and call it something like release time set that to 0.15 is what I discover it work pretty well but you can of course edit that all you want I will say that the higher you make your frequency the lower you want your release time because the quicker the higher the frequency the quicker it's going to travel from the place you've dragged it to to the hook and so the quicker you want to release it unless it's gonna go yeah bounce back and yeah it's going to act weird so in here let's put release time and then after we've waited that amount of seconds we basically just want to grab our um spring joint 2d component just using getcomponent is fine and going dot enabled equals false so just disabling that component and we're not going to be doing this more than once per Bowl and that's exactly when we release it and that's why using getcomponent will be just fine and we're never going to be enabling it so once it's fired its fired and that's it so I think this looks pretty good um let me just think if there's anything else we need to do well we can pretty much just test it inside of unity now and see if it works so if we select our ball we have a release time now if we hit play and drag our ball it doesn't release all right so what's going on here well of course inside of our script we also have to call this release method and the way to do that is not by and we want to call it inside of the on mouse up because that's when we release our button and we want it to go flying but we can't just go release like this which we would do with a normal method when we have a kuroh teen meaning a method that is of type ienumerator we have to say start coroutine and then input the release function into that it's just another step that makes the syntax a bit weird but you just have to do it and learning that that is the way that things are done so now when we drag this you can see we have flying cannonballs that's awesome so you can see that we can really shoot this in a lot of fun ways we're not replenishing it we don't have a lot of cool stuff to show it on yet and currently we don't have any restrictions on this guy so we can come flying really fast but it is indeed working so I think the next part is to probably just getting some other objects in here so that we can see the game kind of working and then we can have a look at adding all of that that I just talked about in a second so let me just take a sip of water here let's see here everything is looking pretty good so on one guy asks why I cannot use the wait for seconds in an online numerator I can do that in JavaScript but you are not able to do that inside of csharp in csharp you have to mark on the function as an ienumerable be at kuroh teen and that allows you to do a wait for seconds you cannot do that inside of a normal function it's not going to work what you can do is make a normal function and then use invoke to call that function and in the invoke you can then specify a delay before the function is called but you can't wait inside of the function itself the whole thing about coroutines is that they are kind of pieces of code that run on em in a way that's not directly connected to your order of methods so you can go ahead and call one coroutine in one line that code teen is going to go off waiting for five seconds until doing something else then right after you can call another coroutine and if that crow teen doesn't wait that's going to be executed before your other coroutine and so it doesn't have to go back and finish before continuing a normal method it's going to call that method it's going to execute it and then go ahead and call something else so kuroh teens are basically methods that the compiler when running it or that at runtime aren't waited upon before continuing so that's kind of what it does behind the scenes ah cool so will I upload this to youtube yes this will definitely be on YouTube when we're done so now we're basically ready to to get some other physics objects in here so if we go into our sprites here we have the would normal and would tall and we also have the would block I'm just going to take a normal word here and let's go ahead and add a new and the component is going to be a box Collider 2d hit F to focus on it let's edit the collider to match it up because I have a bit of shattering on the object here and so we want to make sure that this aligns perfectly with the actual blog and not the shadow and we can stop editing that Collider and we can go ahead and add a rigidbody 2d as well so now this should already be working inside of the unity physics space and I actually want to take a ball and hook and move them back a tiny bit as well to increase the distance that we have to aim so something like that looks pretty good and you can see that that is already able to be knocked over so now we essentially have a game here so what we can do now is maybe just build a small castle thing or whenever you build something that feels a little fun let's actually before duplicating this let's turn this into a prefab so let's go and create a prefabs prefabs folder and let's take a wooden all mode drag it on the drag it under that and let's also do kind of the same thing to our wood tole here so we can basically go in here add a rigidbody 2d add a box Collider 2d and I think on this one we probably want the mass to be twice as big and we can go in here and edit the Collider so let's take the Collider here drag that down drag this in to adjust it drag this in this wall and this one and we can stop editing the collider and we should see that interacting already so let's go ahead and knock those two over that's awesome and you will notice that it does have a bigger mass if we were to change this to something like 10 it will be a lot harder to knock over there you go so I'll definitely play around with having objects of different masses and maybe different materials you can create some metal that's a lot harder to not go with that that makes the game a lot more fun now let's take this Wood tall and drag it under the prefabs folder as well if I'm able to hit that with my mouse and let's just build out a a level real quick here so we'll have this AK this our base this one is going to be flipped over 90 degrees please there you go why is it render so we're there we go so we can place this here maybe we can take an enemy and place those here but we'll do that in a second when we've actually created those so far we can just take another normal block here and maybe we can take a tall block here as well to kind of hinder you or we could put it I don't know I'm not very creative when it comes to making levels to be honest I never really struck me as a thing that I'm good at but let's just go ahead and see what we can do here actually they want to duplicate this one and move it up something like that that that looks fun it looks something that could be in flappy bird is or I keep saying flappy bird Jesus Christ is that the same thing in the YouTube video it's it's really bad I think every problem with that so I know let's hit play and just see if if this is working that already looks really fun and for some reason this one I dragged in this sprite see I have to drag in the actual object there we go so now that should be working let's just test it out and here we go of course I didn't hit it yeah there we go awesome so um yeah the next thing is of course getting some enemies in here and the way that we do that is by of course starting by taking an enemy stripe dragging it in there adding a new component that we're going to be using this circle Collider 2d again we want to probably give this a tiny bit of offset on the Y I'm just going to do point zero one and maybe also lowering the radius down to say point three and then we can add a rigidbody 2d component as well to this one and I think I want to scale it down to something like point eight just to make it a tiny bit smaller than the player I think that's going to look a bit better and we can take this guy turn them into a prefab I'm sorry about that duplicate them moving over and maybe even duplicate him once again and move one up here that looks pretty fun something like that and we should already see that these guys are now interacting in the level and I'm just going to go ahead and try and knock those over that is already working and one thing that I do want to edit and I'm editing the prefab here so that it will affect all of them at the same time it's give them a tiny bit of linear drag something like point 1 and setting the angular drag up to point 1 as well just so they won't be moving until we actually start hitting them the thing that looks pretty good next up we of course want to detect when these guys are hit that means that we want to have something happen when they are struck by something really hard and we want them to die when they fall from a certain distance and there's a lot of different ways to do this the main or probably the easiest way is by going to our enemy and we're going to have to add a new script here we'll call that the enemy script and let's say create an ad to UM create this as a csharp script let's double click it to open it up in one of the official studio and what we can do here is just delete those two functions and then step we'll use yet another eternity callback will be using void on collision enter 2d and on this one I know you have to put 2d so don't know why you don't have with the other one but you do have to do that here and basically on collision any 2d allows us to gather some information about the collision such as the difference in velocity between the two objects that has collided so to do that we go up here and we say that we want some collision 2d info and we can call this whatever we want I'm going to call it call info for collision info and we can basically go in here and say that we want to debug dot log collision info dot relative velocity and we want to use dot magnitude and that should be it so basically what we're doing here is we are saying that I mean relative velocity is a 2dimensional vector saying the velocity of one object compared to the other object and that means that the speed that they are moving at compared to each other in both the x direction and the y direction and then we use dot magnitude on top of that to convert that into a single number that represents the length of that vector meaning on kind of the velocity that they've collided with so if we go ahead and save this now we should see that our three balls here give us some information about their fall apparently what they hit were objects where the collision had a relative velocity of one one and one point six if we now take one of these guy and drop them from a large height you will see them reporting back with nine point six and if we drop him from a bit lower down you will give us a six point six if we then take this object drop it on top of him from here it's going to give us a two point nine and if we drag it from oops if we drag it from all the way up here it's going to give us a 11 so you can see how that is going to be pretty representative of how hard we were hit so I'm going to have to take some more water here guys sorry I was sick recently as always so um yeah so now we can basically just use this number to check whether or not it's higher than some ratio what we could do is create a health variable and say every time we are hit by something we're just going to subtract this number from our health and when our health reaches zero we're going to die but I think in most of these games they actually have have it set up in such a way that the collision has to be bigger than one set number or nothing is going to happen basically so that's what we'll be doing here and we'll still be creating some kind of health variable we could call it something like um aa minimum or max damage taken or something like that something like max velocity to be hit by something like that but we can also just go yeah health and I'll look default that to a number of or I think that's going to be working quite fine makes it a bit difficult of course this is a float a bit difficult to get rid of these guys sometimes but it also makes it a bit more competitive and then basically in here we can just say that if this number called that fo related velocity that magnitude is greater than our health in that case we can go ahead and dice so we'll just call some kind of die method and then down here will create that die method and right now we're just simply going to destroy this game object without anything else happening so let's see how that works if we had play now they shouldn't die right away because there are collisions here really small we then go ahead and rig some havoc yeah awesome so those collided with each other and died and this guy didn't really fall anywhere but you can see that working now ah they collided with each other and notice by the way that we can still mess around with our ball here and that is causing some really really weird behavior but we'll go ahead and disable that in just a second cool so now on a ball just to get rid of that annoying behavior let's just go in here and say that when we release we also want to take this on component and disable it so this dot enabled is going to be false that means that we can now not miss around with our ball anymore whoops you see here that after we drag on him you can see I cannot click him cool so next up is probably creating something like a cool puff of smoke that these disappear into we could also do something like limiting the radius that we're able to drag the ball away from it's hookin and we can of course also what do we have here let's see of course we keep track of our number of enemies and some restarting and replenishing cannonballs there's plenty of stuff to do so um I think we're just going to start by limiting this guy in its radius then we'll create particles and then we can have a look at everything else hopefully let me just check time here yeah that should be should be doable but I don't want this to run too long now let me just see if everything is all right in the chat see some guys are saying that the screen is flickering sorry about that I don't really know what could be causing that let me know if more people are getting that error someone is saying that I should draw draw the trajectory of the ball that's actually really easy we just have to go onto the ball add a line or not a line render a trail renderer like that and we should pretty much be ready to go here so oops no for some reason we're not and this is why you never decide to do stuff like this on the live stream maybe we have to go ahead and add a material for this to work it's actually been a long time since I missed with the trail renderer so yeah okay so it's working on inside of unity but it's not showing in the game because it's not drawing on top of everything else so on what we could probably just go ahead and do is arm inside of this add some kind of default material like the sprites default material we do that it might go ahead and render yes it does so this is of course a really really ugly material but you you probably get the idea we can go ahead and make the color here of something like black to black actually I'm just going to go ahead and delete this last keyframe and we can make this a really really faded black probably so delete that keyframe as well we can take the Alpha here and drag it down quite a bit and we can also decrease the width here to something like point 1 and now we should actually see that this is working yeah awesome so you can of course mess around with that this is by no means pretty but I just wanted to show you that that can be done really really easily cool so now we're pretty much ready to go ahead and limit this guy so if we jump inside of your studio what we want to do is we want to check for how for the distance from our ball to the hook and to do that we basically just add an if statement here up in our update saying if it is pressed well then we want to check if vector 3 dot distance and then we want to have the distance between a hook and a ball and our ball is currently the mouse position so let's go ahead and store that up here so let's take this one and store that in a vector 2 variable here called mouse pose let's set that there so distance between the mouse position and and then we need a reference to your hook so we'll go up here and create a public rigidbody 2d called hook and we'll say the distance between our mouse position and the book variable that we just created if that is greater than and then we can insert some numbers say 2 or 3 I don't know exactly how large we want this to be probably somewhere around 2 and we can make that into a public float as well something like on max distance or max drag distance we should probably say and that will just tpd fold it to 2 and we can say that if that's greater than the max drag distance and then we want something to happen here and if it's not then we are going to set our bead position equal to our mouse position so basically um Oh hook dot position awesome so what we're doing here is we are getting the position of our mouse in world space we are storing that in a twodimensional vector then we're checking if vector 3 the distance meaning if the distance between our mouse position and the position of our hook is greater than the distance that we wanted specify which is 2 units well then we want to go ahead and make some special case where we only use the direction and not the length specified by our mouse so we can still aim but it's going to be locked inside of 2 units distance and else we are going to be just setting it directly equal to our mouse so if this is not the case what we can or if if it's greater than the max drag distance we can go ahead and set our B dot position equal to and here comes a bit of vector math so basically we want to get the direction from our mouse position to our hook and we do that by saying um what is the order so from a mouse position to a hook with that means hook dot position Mouse position and then we want to use dot normalized to make sure that the length of that vector is 1 and then we can multiply that with our max drag distance and that means that it will now be a vector pointing from our mouse position over to the hook position that is two units long and we want to add that on top of our current hook position so hook that position plus that stuff that should hopefully work so now if we go into unity and drag here we of course need to reference some stuff so let's find our Bowl and drag in our hook rigidbody there we go hit play and we should see ok so it flips so of course I messed it up I always miss this stuff up so now we have to do Mouse position hooked up position instead mouse post hook up position there we go save that hit hit back into unity and we should see now that we can drag him only yes only two units out so in here we have full control and out here we can only control the direction it will not go any further and we can just adjust this down here and you can see everything else is still working mean still firing him in any direction that we want yeah it's working oh I'm really happy that that worked on the first try I didn't think it would almost on the first try on the second try cool um yes there will be a video on YouTube and yes there will be a project download on github as well as a download for the sprites that I'm using so don't worry you'll have everything to play around with you don't really need to of course you need to stick around but your you don't need need to be scared if you are not able to follow along for some reason um also yeah just gonna check let's see here how we are doing with the follower count actually that's not updated on my system here so I don't know how are we got how are we doing guys in the chat uh oh we are over 7000 or are we wait wait no wait I I don't have the number do you know what's going on where are we guys it's not updating for some reason I'm live streaming and yet it looks like I've lost the internet connection it's really bad yeah okay I'll just continue with the with the tutorial so um yeah what were we getting sidetracked as always this is live stream footage there's bound to be some trial and error cool so um now that we have our 7.1 kay is it true that's awesome thank you guys um so uh we can go ahead and finish up our enemies now because we have our Bowl working the way that we want I think we need a bit cooler of an effect when these guys die at least we need an effect so let's just go ahead and create a particle system let's rightclick in the hierarchy let's go on particle system and let's reset the transform on that let's go in here change the shape to a sphere and let's definitely make the sphere a lot smaller let's position it here near these um enemies so that we know kind of the look of those and can compare that let's also change the start the start speed is actually fine I think maybe we should make that a random between zero and five that's probably going to be a lot better I want to give this a negative gravity modifier some negative one so that it will start flying upwards I definitely think we should change the start size to a random between two constant and have something like point four and point eight or something like that and we also need to make this not blend in so much with the background so let's just go ahead and change the start color to fit the color of our enemies something like that by the way I just use the color picker there allows you to pick any color from the unity scene so I just pick that one and we also want these to fade over time so the way to do that is just going into our color of a lifetime here and then simply animating the Alpha Channel to fade out I think that actually looks pretty good then of course we don't want this to emit in just or over time we want it to admit admit in bursts so let's set the rate to zero and then instead add a burst here and on it's freezing up there we go and we want it to be a burst of say between 15 and 20 and we can go ahead and set the duration here to one only and that actually gives a fairly nice effect I think we can definitely lower the start speed to be between zero and three but overall I really like the look of this I think it gives a really nice rewarding feeling so um yeah if we're satisfied with that um we can pretty much just go ahead and wrap this in to a prefab let's also turn off looping and let's rename this to something like enemy death effect and let's drag it into our prefabs folder and it's deleted in our scene and now we can head into Visual Studio go to the enemy where it dies and we can go ahead and instantiate the enemy death effect that we need a reference to so let's go up here and create a public game object death effect and we can go down here and say we want to instantiate the death effect at our current position so transformed our position and the rotation doesn't matter so we'll just do a quaternion dot identity so now we hit play and um did we reference it I don't think we did so let's go to our enemy indeed we'd end and drag in the enemy debt effect and make sure to do that in the project panel that it will apply to all of our guys at the same time so now if we kill off one of these dudes yes we have a much better death effect that just improves the feel of the game so much that was really rewarding cool so the next thing is our keeping track of how many enemies we currently have alive in order to make ourselves a win condition so um let's see here ah yeah so you guys are making fun of me in the chat I see yeah when I said over 7,000 I meant views of course that's awesome but we are also over 1k followers so you guys Rock thank you so much that's that's so fun I'm really enjoying these live streams yeah sorry for messing up the view part but I I know we don't have 7,000 followers I'm getting ahead of myself but I mean we can get there so yeah okay enough about that let's continue with the tutorial here so now that we have that working um let's go ahead and keep track of the Akari enemy count and there is a bunch of ways to do this I've basically demonstrated each single way so far in different tutorial series but I think the way we'll go with here is probably also the easiest and that is by having a public static integer called the enemies alive and I will default that to 0 then in our start method each enemy is going to increase that by 1 so we will go enemies alive plus plus and that means that if we have 3 enemies ours in our scene each one is going to call the start method and increase enemies alive by 1 so yeah enemies alive will be 3 then in our diameter we'll go ahead and set or Inc or because decrease enemies alive so enemies alive and then we check if enemies alive is less than or equal to zero but then we can go ahead and restart the game and the way we do that is by going up here and using Unity engine dot scene management we can go in here and we can say a scene manager dot actually I don't think we necessarily want to restart the game what you would do is transition to a new level but I think in our case we're just going to go ahead and write a debug deadlock statement you can also make a win level or whatever you would really just load the next level here but let's just go out into a debug that logs saying something like a level one cool and that should actually work right off the bat except when we go in here later and then restart the game we can have a situation where it's going to restart without killing all the enemies and that would mean that the static variable here wouldn't reset and so we would add on to the amount of enemies and then even if we kill off the enemies we would still not reach zero and that would cause a bug but we'll have a look in that at that in in a second so now we should be able to hit play here I don't know I'm never going to be able to do this guys I have to perform oh I didn't kill them never know this is not going to happen what we can do disable those to have this one drop off roof and when we play any dies yeah level one we killed all the enemies awesome so that is indeed working and if we say start with with two enemies in here I'm just going to make this guy drop off a cliff minus one and then we can kill this guy I'm sure yes and it's going to say level one so it is indeed working and that is again where you would transition to a new level or transition over to some kind of wind screen so uh yeah next up is replenishing our balls here so if we go ahead and make this ball in to a prefab like we've done with everything else we can easily duplicate them a few times here and move that up here so we have all them in the same place the reason why I'm duplicating him is because I basically just want to enable another ball when the current one is released and the reason for that is you can go ahead and spawn in another ball each time that um that you want a new one to to play around with but the problem with that is that you would have to connect the hook through script you would have to set up the spring joint you will have to connect the ball hook down here and set up the anchor and all that stuff through script and that's a lot harder so what we'll go ahead and do is just have these two as disabled objects and it's also going to be a lot more performant because we have a limited amount of balls that we want to be able to shoot then inside of our first ball here we'll go ahead and throw in a reference a public um game object and this is going to be the next ball and then down here under the release we will go ahead and return yield return new waitforseconds and we'll go ahead and wait a certain amount of seconds I think we should just wait two seconds again you can expose this as a variable up here if you want and basically we just want to set our next poll to active and I think we have a cat that is waking up here so let's have him say hi to the stream see he's there playing around with the microphone he just woke up so he's a bit grumpy yeah I'll get you down before you do something evil to me awesome so um we basically just going next bolt that said active and then true and and that should be all so if we just save that we should see now that if we link these up so on this one is going to reference ball one and Bowl one is going to reference ball two and then we can actually go ahead and do this two times so we can drag this guy over shoot him we actually won that one first try and drag that guy over and a new one spawns that's awesome except now we're going to get an error because there are no more poles so what we'll do there is say that if next ball is not equal to know then we'll go ahead and and simply oops I want to make some curly brackets then we'll go ahead and set the next one to active and else meaning that the next pole is equal to null well in that case we've pretty much lost because if we haven't transition to a windscreen or a new level and we run out of balls there's nothing to have to do and that means that we failed this level so in here we would do something like restart the scene have some game over screen some stats something like that in our case we're just going to restart the current level so we'll go up here and say our using unity and whoops that's a weird symbol using unity engine dot scene management and down here we'll say scene manager dot load level or load scene and then scene manager dot get active scene and then we want to do dot build index and close that off so now we should see that if we are unable to complete the level here so I'll just be really really bad on purpose and I'm just yeah on purpose we can go ahead and shoot all of our cannonballs and they didn't hit anything and so the level restarts awesome so we're basically at the point that we were when I showed this in the video I don't think there's too much left to show for this game really now you should go ahead and play around with it expand on it make sure that it transitions to new scenes make some better um some some better game over screen all that the only thing that we have left to fix is of course the bug that I mentioned and that is if we go into our visual studio here we can go and say that when we load the current scene we load the current scene here we want to go enemy dot enemies alive equals zero so that we make sure to reset that number just so that if we fail in one level transition to the next and it's going to reset the amount of enemies and not just add three more on to that so we're going to have six level enemies that we have to kill and that's pretty much impossible if they're all if they're not on the screen and you can see stuff can fall off the screen here you can add some colliders if you want if you don't want that to happen or you could have it as part of the game that's totally up to you you could also one thing that could be really fun to do is add a camera that follows around our ball and I've shown how to do camera smoothing in a lot of videos also in some of the live streams I believe so if that followed the ball around that would look super cool when it's fired here that the camera went off with it but yeah really just play around with it create a bunch of levels go nuts and I believe that's pretty much all for the video part of this tutorial so let me just check the chat here if everything is going correctly let's see here yeah everything is pretty much looking good yeah awesome so um I think we are now ready to transition over to the QA and so yeah it's be a time basically yeah I don't have a beer lined up but um I will drink some water instead I don't think my throat will handle a a beer right now but let's go ahead and see if we can line this up so let's go to chat here I hope you guys like that to turtle so um this is Q&A so just fire away with all of your questions guys let's see how to do life have fun I mean hot on the on the behalf of others have fun in a very respectable and yeah timbre gloss um so let's see I'm just gonna put you guys over on my main monitor here so that I don't look over there when I'm trying to answer some questions you guys like the video and yeah everything will be up on YouTube again and on github there will be links to all of the source and stuff like that again I will mention that if you haven't checked it out go check out dev assets comm it's a website I've worked on for several months I think it's it's really awesome so go check that out we are really really really really really close now to hitting 200,000 subscribers on YouTube which is just amazing I'm just going to switch to the live count here just a moment so let me see here whoops that looks pretty crazy so here is the live count this is how close we're currently I that's that's so awesome guys thanks for all that we support let me switch back to the chat here let's answer some questions so um will there be a bullet trace in the FPS series I believe you mean the multiplayer FPS I haven't thought about doing a bullet trace but I am currently doing kind of a few standalone shooter videos that I don't want it to bury in a lot of multiplayer first videos like the sniper scope one I would like to do some more in that style so bullet traces could definitely be a thing there I definitely also want to redo the shooting tutorial because the one I have it's fine but it's very old and I cringe when I see it so I really want to redo that one um let's see what's what else is going on here what was the funniest bog I ever had that's a good question I don't really keep can bugs be fun that's new to me I don't know um when when you mess around with procedural mesh generation some really weird stuff can happen especially if you've ever tried doing procedural animation that stuff is really difficult and it's bound to be messup messed up and if you don't get it right you can get the weirdest of shapes and movements that is definitely something you guys should try out if you're really looking for a challenge the best place to go there would probably be a talk the Kree of overgrowth growth made at GDC game development conference a few years back it's amazing procedural animation overgrowth just search for that and you're going to be amazed to find some of the guy some of the stuff he did um let's see here who is typing in the Maron do do you who's typing in the background that is of course my lovely girlfriend who is assisting me in the chat asked the sofa Bob moderator she is saying hi and yeah so that's just her is this the end of the stream I mean it's the end of the tutorial but we are still doing some Q&A and answering some questions but yeah it is kind of revving up slowly so right away what's the most complex game I ever made I think the worst games I ever made were the more complex ones really if you make something that's too complex you're not doing it right really every every game should be really easy to look over and understand if it gets too complex you're not writing proper code it's one of the most difficult things one that I really did guilty of is having an a hard to maintain code base um will I publish videos about game up to my station that's actually a really interesting subject unity has a lot of great up blog posts about game up to my station that are worth checking out so maybe do that um I'll consider doing a video tutorials more gay more people asked for that can I make a full game please I don't necessarily know what you mean by a full game I'm I've pretty much showed the game creation process from start to finish or at least to the point where you get it on a store but of course all of the store and marketing and all that fixing bugs and maintaining users and all that it's a whole other part and it's something I haven't really covered so that's what you mean I guess I'll think about it let's see what else here unreal tutorials I would love to do some tutorials on Unreal Engine at some point but right now it's just so much demand for unity tutorials that I would feel like I'm letting you guys down my certain shirts by suddenly sorry just pivoting to something else um do you have any tips on how to make a text adventure games I know not really too many tips on that I know that yeah I would probably not use unity for that I would use something just maybe just the console really if you check out my csharp tutorial course I basically make some textbased games than that it's just a lot of if and switch statements to be honest let's see um hold were I when I started coding good question I don't remember it depends on what you mean by coding because I tried out a bit of coding when I was really really young like yeah before I hit 10 definitely um but I was so ridiculously bad and I stopped so quickly that I wasn't really coding I mean I checked out some HTML wanted to and learn that I mean everybody has to look over HTML at some point checked out a tiny bit of CSS and I've also done a bit of Visual Basic before I really got into programming but when I started with unity is about I don't know five six years ago or something like that that's where I really felt like programmer is it's actually in unity and yeah csharp is definitely my favorite language um it's what I feel most comfortable with but really it's it's hard because for web development my favorite language is not csharp so yeah um could I let's see did you do um I was wondering if you would make some basic / advanced AI tutorials with more complex enemies I think it would be a good idea to make a separate enemy AI tutorial actually using something like the astar path finding algorithm or rain by rival theory I will definitely think about that one put a pin on it so yeah that could be really fun but I have shown how to do some artificial intelligence in some of the other videos like the 2d platformer the one as a fairly relevant still um or a few fairly relevant videos on just doing enemies that will follow you around the screen and find the shortest path and avoid obstacles and all that stuff it's really what all you need for most games at least can act as a good base which one is good on really generally they have both really really good pieces of software I mean unity is probably my favorite piece of software of all time just because of how convenient I find it to use I find it's pretty much just an extension of myself and there's just so little to do from idea to having something working I mean prototyping in unity is amazing and what they're doing now some of the tweaks that they've made recently since they became a bigger company that's made roading from the way from prototype to actually publishing a working game and maintaining it a lot better as well so I just love unity but unreal is amazing software as well some of their technical guys are just on a whole lot of other levels so that's really awesome what do you think about unity 5.5 I love it some very much needed changes in that one still waiting for nested prefabs though and build in volumetric linings but if you want volumetric lighting I showed you in a recent video check out out on the YouTube channel how you can get that using the current version seems unreal scrap fix more good than unities or is it just you I mean it really depends on what you mean with good graphics unreal out of the box will probably look better when it comes to 3d with a lot of image effects on motion and lighting baked and all that stuff then unity but it really depends on what you mean with good graphics because if you want to do 2d stuff unity probably has more control and if you want to do a certain look unity can be tweaked to pretty much anything and now unity also has a full PBR workflow and enlighten with superawesome are realtime global illumination and all that stuff so unity is come a really long way but it's it's true that when it comes to really powerful 3d graphics features especially the particle system unreal is still ahead they've already always been been leading in that stuff but I mean if you want to have say GPU accelerated particles where you can have a million particles floating around with noise and all that stuff there are definitely guys working on that I found a guy didn't don't remember his name who created an awesome plugin for that he had an amazing github something I think it was called vet like que VA NT but yeah so it's it's a really hard thing how did I learn to code slash program please no capital letters in the chat give everyone an even chance but I shouldn't answer the question when you do capital letters I'm gonna do that anyways so I learned to code in program we're watching a lot of tutorials now I'm making them that's that's life I guess and by reading a book it's about to save a few books but that would almost be a lie I pretty much just read on something like introduction to programming by Jason Lin which is a csharp book that helped me out a lot but really just by practicing and watching tutorials just practice practice practice guys did I make the website on my own if you're referring to Broca's calm almost on my own I had a guy who helped me with that that's so long back it's written it's running on WordPress it's back when I had almost zero a web development experience and we wanted to do some custom things that I didn't know how to do and so I had a guy or friend of mine helped me out with that but now I'm doing all website development for myself and apps have been for a few years and the dev app sits website is created from scratch by me it's created in something called Jekyll which is basically just a static site generator that allows you to write HTML CSS sass stuff like that from scratch and then write template for it and reuse parts of your code so it becomes really awesome and then it just spits out really basic HTML and CSS code so it loads really really quickly and you don't have to access a database I could talk about that forever it's really really cool and then of course a bit of FDR script and jQuery on that how often do I plan to update deficits as often as I possibly can I mean the artists working there right now are awesome they're really spitting out a lot of great content and I'm doing my best to also get it on the site as quickly as possible there's a lot of work that goes into each asset pack I mean the stuff that is on there right now such as the scifi vehicles and the modern weapons each pack has probably taken over a month over a month of work both for the artists and for me to get everything totally solid in unity all the textures and models and backandforth and finetuning and polishing and doing the promotional renders and videos and descriptions and getting everything neatly organized for you guys and testing it oh that's so much work in each pack so that's why it really makes a huge difference if you can support us for because yeah we basically so far we basically be doing it for free and while I like free I can't live off free so yeah the more you guys support us the more we can focus on that instead of having to do try and work or whatever might be distracting us so yeah it's really up to you guys how many updates we can have which software do I use to record my screen I use OBS right now open broadcaster service and think software software probably yeah OBS it's more what most five streamers and youtubers used to capture the screen it's both on Windows and Mac and sometimes I use Nvidia shadowplay if that is lacking so if if I'm having some framerate issues for something really taxing say a hardcore render in unity I switch over to Nvidia shadowplay why I'm not streaming on YouTube don't know if you want me to stream on YouTube instead I will do that I just really liked which I mean which is awesome as a lot of custom features that unity does not so I wanted to try out on Twitch but let me know if you guys would much rather have me switch or stream on YouTube I'll switch to that um let's see please create and if a cute I have any you but it's really old and really bad and I don't want you to see it I don't know what I would write in my FAQ for deficits yeah we should have an FAQ that's we should definitely have an FAQ oh yeah I'll write that down someone say stay on Twitch that's awesome um let's see one if I could make intermediate sprite kit tutorials I tend to stay away from tutorials based on a certain asset or smaller software I like to keep it very neutral so that people aren't forced to use any kind of third party stuff unless yeah sometimes I don't know if sprite kit is paid or not but I definitely stick to only free software and when I can uh if you want to make GTA you can do it that's good to know have you ever released a game you made on Steam I haven't actually released something on Steam now I had once had a game plan for release on Steam but we chose to go other other places and so I haven't been that through that process I'm not one to advise on that do I go back and update dev assets content to the latest unity version I hope to do so again I am working really really hard on everything right now so I can't promise that I'll do that but I mean I would love to really and if something just breaks I stopped working let me know anywhere and I will fix it immediately of course um so yeah I think we're pretty much can you show us how you did the algorithm in geogebra um yeah can i I don't think I saved that one I believe it was just a fairly simple algorithm I don't think there was any special part to it okay I'll just switch over here so this year okay I'm gonna whoop all of the live stream software this here is gr Corral if you haven't watched the latest game math Theory video that's what or not game theory how I always used a geographer for that if you haven't watched the latest video showing the making of my Ludum dare entry into the 37 combo it was called it or the theme was one room and my submission was called maniac Inc I basically used this to prototype an algorithm I wrote and basically I mean in here you just write something like y equals and then you do like 1 over X and it's going to display that for you and you can just edit the formula in here it's so super nice for on visualizing stuff like this and you can even automate it with with the sliders so you can input slider values into this function and then you can see it updating it's it's an awesome piece of math software that's basically all I did and I think I just had like in some kind of function that would decrease over time and then I just slapped a sine wave on top of that to give it a tiny bit of variation and randomness so yeah that's basically how I did that let me bring back up the chat here and yeah final questions guys and we're going to close the stream in just a second again thank you so much for helping the on the twitch here reach a thousand followers that's awesome so cool and if you guys haven't already check out patreon complex pattern is what we have to thank for being able to make these are monthly live streams and really having a fixed video schedule it's because of you guys who are donating if you don't know patron is a way for you to make a monthly recurring donation of your choosing and it's cancelable at anytime so check that out and consider becoming a patron I offer some humble rewards in return it's just so awesome it really um I wouldn't be able to do this fulltime if it wasn't because of patron so thanks guys um yeah final questions let's see here whoops I just moved something inside of OBS I was not on purpose like fee um let's see ah TT what is my unity layout I want to copy it and I don't know how well my unity layout is really really really simple I haven't really edited too much so let me just show you that if I go into main here I keep on going away from the chat this is what my unity layout looks like if we go ahead and reset it I'll just quickly recreate it so reset the layout here to default this is what it looks like on the bat the first thing is changing this project panel here and we do that by going and pressing this little button and selecting one column layout dragging that over here into the hierarchy then we drag our console into the scene view and we drag our inspector out a tiny bit and now we've basically gone ahead and recreated it so it's really easy to set up I like it a lot better than the default one back into OBS back into the chat ah today um cool will I do 2d racing car tutorials I would actually really love to do something with racing games I don't know if it will be 2d just yet we have a guys working on a really really cool photorealistic REO asset for deficits don't tell anyone and I would really love to do something with that getting that up and running with some vehicle controllers I mean I'm so excited about that one so that's probably what I'll aim for but I mean it could be the subject for the next live stream maybe is creating some small racing game it could be really fun when will this be upload to YouTube I hope to upload it as soon as we're done here and then it will be out this Sunday so this Sunday is when we should have that going cool so for some reason I just disabled the preview on my own OBS but hopefully it's still running let's see yeah there we go and yeah last comments here TTT make a 3d drifting game that would be so awesome especially if we could get some cool engine science like oh so much fun um yeah and yeah as Sophia Elsa has written in the chat my video visual studio theme is called mono Kai check it out it's an awesome theme so that's pretty much it I might make a blended tutorial at some point um I could be pretty fun so that's it for the stream guys I hope you enjoyed it just as much as I did I thought you thought it was freaking awesome really fun game to play around with and a good Q&A session here as well um so and I'm not gonna save room again so thanks again for the stream again if you want to support stuff like this you can go to patreon.com/crashcourse totally optional this video is going to be live on youtube soon it's going to be up on Sunday and we'll also have a link to the github project and so you can download everything and you can go to dev assets comm to download some highquality 3d asset packs and get all that jazz so I'm not going to be mentioning any more now thanks guys so much and have a good day bye thanks to all the awesome patreon supporters who donated in December and a special thanks to Sultan alsharif Derek M jerk face tamara phi james callaghan robert Barnum and Jason Lotito if you want to become a picture in yourself you can do so at patreon.com slash practice