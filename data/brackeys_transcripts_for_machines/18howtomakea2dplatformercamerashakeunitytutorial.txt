thanks for tuning in at brackets hello everyone and welcome to video number 18 into how to make it 2d platformer course in today's video we're going to take a look at creating a screen shake effect so we are going to be making this camera shake script and that is going to apply to most games and that should be pretty easy to implement so without further ado let's open up unity and before we get started I just want to mention that if you have any questions throughout this video go to farm drag is calm as always cool so I don't know why it's giving errors there but we should be good to go anyways and I'll just clear up that notification there and I will make a unity visual studio video how to integrate the two nicely don't worry I've promised you that now on the last platform a course or a platform a video you guys told me that you wanted to see that so don't worry I'll get around to it soon but let's get started so if we check out our main GM object here this is kind of where I want our screen shake to sit you could also place it on the main camera but just to make it kind of more modular I'll place it on the GM object and just think that makes a bit more sense and we'll name this camera shake as it says there so camera shake and then new script and of course C sharp so we create an ad there and double click it to open it up in Visual Studio and it's opening up on my secondary monitor here so I'll just drag it over and zoom in cool so we can start out by firstly creating a reference to the camera that we want to shake so a public camera here and we're just going to call that maybe main cam or it just can I'll call this our main cam and then we'll have a private variable that stores the shake amount and will default that to 0 then in our kind of awake function here I like using awake for setting up references instead of start it's generally better to do it in a wake then we're going to check if I'm Maine Camus equal to null and if it is we'll just set it to the main camera like this so you don't necessarily have to provide a reference in the editor I don't think we'll be doing that cool so we can delete this start and update we will not be needing goes and instead we'll make a void just a private one called begin shake and this here will of course start the shaking effects and down here we'll make one called stop shake cool but every time we want to shake the camera we don't want to call first begin shake and then tell it how much to shake and then for how long and then call the stop shake and all that we want that to just be in one method so we're going to make kind of this more general method which we are going to make public so we can call it from an outside script I will just call that simply shake and for that we are going to take in a float with the amount and a float with the length kind of the how long the our shake should last and then inside of this will set the shake amount the private variable that we declare up here equal to our amount that we've passed in as an argument and then we're going to do what is called invoke and Method and we are going to use that the invoke repeating method to do that so basically what we do here is we say that we want to call this we can shake method we want to do that in 0 seconds so immediately and we want it to repeat every 0.0 0.0 one seconds so this way we can control how quickly things will shake so every time that this in kind of gets cold which is 0.01 seconds we are going to do a shaking effect so this is a pretty easy way syntax wise to do a shaking loop and then we are going to invoke both the stop shake method and make sure you get the names right here it's not going to give you an error if you don't and we are going to stop shaking in length so basically what we are saying here is that we wanted to begin this shaking method and just repeat that and then after X amount of seconds which is called length it should stop shaking and down here will then stop it from repeating so let's start out by saying if shake amount is greater than 0 so if we should be shaking at all then we want to set float and we'll just call this shake empty x equals or kind of this is actually the amount that it's going to be shaking so we'll just set that equal to random dot value and we'll multiply that with shake amount and we'll multiply it with 2 and then 2 shake amount and now you might be asking why do we do this exact calculation here and the answer doesn't really exist I just looked up on the internet I wanted to do some camera shaking and thought what would be a nice way of calculating where the camera should be and I found this calculation right here which I thought looked pretty great inside you could also just do a random value and then multiply it by shake amount and it should give you something interesting but I thought this actually looked pretty nicely in game so you can of course play around with that equation and see if you can make it look even more awesome and we do this individual leave with the different axes in order to get a coollooking shake so not kind of this diagonal shaking which which some games have which looks ridiculous so make sure to do a different random value for each axis so it's going to look weird you can of course only include this on one axis you could also do the z axis if you wished to do that but since we're using an orthogonal camera that wouldn't make a whole lot of sense cool so now we're going to declare a vector3 actually I want to do that up here I think so we're going to make a vector3 here which is just going to store the cam position from before so we can set it back right after so we're going to do main camp that transform that position and then down here we can simply say that we want the campus to dot x to be multiplied or added by the shake amount X and we're going to do the same with the Y here so plus equals shake amount Y and then down here we can say that main kam dot transform that position should be equal to cam that pass so basically what we're doing here is we are creating a temporary value variable that we are setting equal to the position of the camera we are then making to float values that will kind of equal how we want to offset our camera so we could call this offset amount I actually might go ahead and do that I think I'll do that just so we don't confuse it with the shake amount set up there so we'll just call this offset X and apply and just reflect to this one also so just call that one offset Y just like that so I've just simply renamed those and I think that makes a lot of sense then we add that onto the xaxis and the yaxis and then we we kind of put the position of a temporary variable back into the main camps transformed our position so that should update the position when we are done calculating so now that we kind of have that in place what we simply need to do down here is we want to cancel the invoke that we've started and the one we are we want to cancel this D pick and shake and then down here we can say main can dot transform that local position and simply set that to vector 3.0 and the reason why I'm setting it to vector 3.0 here is that I want to do kind of anything in the hierarchy that will make sure that we don't confuse the position so one thing that you will often run into is some issues between the camera shaking and the camera following or a camera tracking script that you're using those can often conflict and that will just make things look super weird so what we are going to do instead here down that we've saved this and hopefully see no errors we don't so that's great there we see the main camp variable so what the thing we are going to be doing here is we'll take the main camera and we'll just make an empty object and we'll call this just camera and then we'll copy the transform value so copy component of the main camera paste them into place component values into the camera object then drag the main camera under camera then copy the camera 2d follow component and remove it from here and then paste it as a new component onto the camera so now basically what we have is the setup where we have an empty camera object that only has the kind of job of following the player and then under we have a main camera which position is now relative to the camera object so we can shake this freely and everything will be relative to the camera so the cool thing about this is that when we wanted to reset we can simply say that we want the main cam that transform that local position to be equal to zero comma zero comma zero so that's super cool and makes things a whole lot easier and yeah definitely easier to understand so now that we have that in place I'm kind of wondering if I want this to be called begin shake or if I just want it to be called do shake I think I wanted to be do shake here because that's kind of more accurate with its actual function so now that we have that in place we should be able to call the shake method from wherever and just to test this let's make a quick update function here and I will just check if input dot get keydown whoops get key town and we'll check for a key code dot T for test and if we get that key we'll just simply call shake with an amount of valid C 0.1 F and a length of 0.2 F there so that's a pretty quick shake so now when we play we should see that when we hit T the camera quickly shakes awesome so now that we have that in place we can implement this in two different places in our game so for example whenever we destroy an enemy and it makes an explosion we don't have the particle system for that yet but then we couldn't could shake the camera or whenever we fire a powerful gun we could shake the camera we could go under the player here go under arm piss go into the weapon script and in here we could do a separate variable that kind of stores the amount that we would like to shake so I actually think that's a pretty good idea so let's make a separate variable here a public float and let's do cam shake amount and set that equal to zero point F by default and the length here I think we'll just keep at a standard rate I don't see why we should mess with that in here I mean some weapons might cause a longer shake but I don't think it's very necessary to expose that so then when we find the chute here we also called a colon effect here method and I think it's in here that we should do this so one thing that we would like to do is maybe just make a comment here and then say a handle camera shaking and in here we would probably also want a reference just a private one to the camera shake so we'll do a camera and actually we'll do a camera shake of course and we'll just call this cam shake and now we should be able to reference this so in the awake method will do underscore GM or actually let's do this in the start method just to make sure that our TM object is is completely set up at this stage so in here we should be able to do gamemaster Dodge GM don't get component and then say camera shake like this should be valid cool and then we'll simply set cam shake equal to that whoops looks like I've hit a wrong key here so okay so we'll set cam shake if I can spell this correctly equal to a game master the GM getcomponent camera shakes so remember we set up the game master so that we could also always get the local instance by doing dot GM and then dot get component to find the camera shake on that object so now down here actually we'll just ride on an error if that didn't work so we'll say if cam shake is equal to null then we'll simply debunk dot error log error and we'll say no camera shake camera shake script found on GM objects so that should be pretty descripted we could also just make it so that you don't need a camera shake object but I think that we'll just set it up this way you can of cortex of course exclude this if you're not interested in it but I just think it makes it kind of a lot more interesting to look at when we have the shaking effect when cool things happen so then under the private void effect pretty much at any point we could do this I'm just going to do it at the end here we'll just shake the camera and we'll do this by saying cam shake dot shake and will input the amount which is going to be the can shake amount and we'll do that with a link length of let's try 0.2 F cold so we head back into unity and we should see the variable appearing here in one second there it is the shake amount and now when we fire whoops we get an error so what's going on here so it's saying that the object reference is not set to an instance of the object okay so that basically means that Cam shake is not currently equal to anything and that means that this probably has failed but did we actually get an error message we did not so I'll just quickly investigate this and then get back to you in a moment okay so I found out what was wrong here and if we take a look here it says null reference exception object reference not set to an instance of an object and it does so at the start method so if we double click that it highlights this line right here and that's kind of weird because if it says that it cannot find the reference here it can't be the cam shake because that's what we are setting equal to so kind of what we have to think here is that it doesn't know how to access get component because GM doesn't exist and indeed when I went to investigate this I was correct so if we open up the game master you'll notice that we are setting the GM reference or the GM variable inside a start method and that's really not something we want we want to set this inside of an awake method so we can be sure that it's already set in the start method so now that we've changed this to awake we should be actually able to access this and things should be working so let's try again let's hit play and let's try and shoot here and you can see that the camera indeed does shake this is a pretty crazy shaking amount and I actually think that the length is a bit too long so I change my mount about that let's just expose this anyway so let's do a float with the cam shake length and we'll just set that equal to something like 0.1 F and I would like to clear up the default this a bit lower so now down here all we have to do is simply put in the shake length also so now inside of our pistol here we should PC see this updating and then we can bump down the amount here and keep the length at 0.1 and let's try this again I think that's a bit more reasonable with the camera shake you might think this is still a bit too much since this is not a and in a crazy powerful gun but I actually think it looks pretty good so far cool so that was basically it what I wanted to do very soon is I want to add some particles explosion particles to this enemy I know at East land in the last video but I now really want to do that and also we should of course make the camera shake when that explodes we should also get a game in here some way for our enemies to strike back and maybe some point systems there are lots of things to be done so I'm cool that was basically it for this video I hope you enjoyed it and I'll see you in the next one