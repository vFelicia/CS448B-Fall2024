thanks for tuning in at brakus hello everyone welcome to video number six in the how to program in csharp course I'm really sorry that it's been so long since the last one but I've been really busy with some important projects so I haven't really had time to do that many videos but no but seriously cool stuff coming so in today's video what we're going to do is we're going to take a look at what is called four loops which will greatly expand on what we can do with our code so important lesson today and yeah let's just stick right into it if my voice sounds a little weird it's because I've just been sick and yeah so that might come through on the recording so as always I've opened up examen studio and if you have any questions throughout this video you can hit over to forum break is calm so if you find this code here to be a bit difficult to understand or whatever just head over there and many people including me are ready to answer your questions so first off I'm just going to answer the question that I had already challenged that I gave you in the last video which was to create this program where you need to multiply two numbers and then give you give the user responses based on just how well you did so first off we have different random messages for when the user answers correctly and then we have different messages for depending on how close he gets to answering correctly so let me just quickly walk you through this code this is not going to take too long so as always we are creating a random number generator and we are generating two random numbers then we are prompting the user to to write out the answer to this questions and we are collecting the answer in a int variable then we are checking if it's correct and if it is we are printing out some different responses based on another random number and if it's not correct we are taking the difference which are just called death starring it in an integer value and you can see that I simply take the answer and some tract subtract the correct answer so this is the user answer and this is of course the solution not one times num2 should hopefully give us the solution and then i'm wrapping this in a mat in a math dot absolute statement and what this does it simply converts everything inside these two parentheses which means everything in here it simply takes that and takes the absolute value of that meaning that if it's a negative number it's simply going to multiply it with minus one so this number will always be positive so now we have the absolute value which is our difference and we're saying that if it's simply equal to one we are going to write so cliffs if it's more or or less than or equal to 10 we're going to write you can do better than that or if it's more than ten we can then write you're not even close cool so now we can just go ahead and delete most of this code I'm simply going to keep the main function and all of the class and name space stuff and then the console that rekey now what I'm going to go ahead and do here is simply show you what a for loop can do so let's say that we want to print out on some numbers each on a separate line so let's say we want to print out the numbers one through ten on each on a separate line in the console so what we would do here is we would write four and then we will write int I equals one I is less than or equal to 10 I plus plus and then inside of the brackets that we are now going to make here and simply type after me right now in and I explain exactly what this means in the sack inside of these two brackets we're then going to write console dot write line and then we are simply going to give it I so if we go out and hit play right now you can see that it says one two three four five six seven eight nine ten so let me just explain you quickly why this is doing just the thing that it is so if for Lube is basically a way to iterate through to do something a certain number of times and we do this but first making a variable here we are calling it I and we are setting it equal to a starting number let's in this case we're setting it equal to one then we are saying that we want to do whatever is inside these brackets as long as this condition is met so as long as I is less than or equal to ten we want to execute this line here and then right here is what is called the increment or decrement stage and this is where we put in what we want to happen with I after the loop has gone through so after we've we've written out the line it it will then increment which means add on just one to the I here so this is basically the same as if we just leave that out and then down here whoops we still need the parent the semicolon there I'm pretty sure and then we just down here say I plus equals one that's exactly the same it's simply to make sure that I doesn't just stay one and it will never reach ten its to make sure that it's incremented so if we add one on to I every single time we go through the loop and then what we can do inside of the two brackets is we can then use I for different things so now we can just we have complete access to this I so in this case we're simply writing it out on a line so again with all that in mind we are creating a for loop which means that we can do an action a certain number of times we are creating a variable called I and setting it equal to one we're saying that we want this to run as long as I is not above ten and then we are simply increment an eye after each iteration so now let's hit play and again you can see that that is indeed what's happening we have one two three and it's just incrementing each time all the way through up to ten cool so let's say we wanted to do something more with this we could go ahead and set in AI equal to let's say zero and we can make this maybe run up to so let's say just I is less than and then a hundred this is another very common way to write for loops then instead of starting in I add one we started at zero and then we simply say that as long as I is less than 100 so this is going to print out again 100 but it's different numbers but it's going to start at zero and this is a very common way of thinking about for loops the way that we start at zero because that's what the computer often does and we're going to see that when we work with lists and arrays because then we're going to use for loops to access different parts of arrays so let's say we have a list of students we can use for loops to go through each student represented by an index which is here shortened by and we can access their information so you're going to see that in a later video so what I want you to do until next video is to create a for loop yourself that will print out all the even numbers and only the even numbers from 1 until 100 so in order to do this you're going to need a basic for loop and also you need to know how to determine whether or not a number is even or uneven and the way you do this programmatically is say if you have two numbers let's say two and two and you want to check if this one here is are even what we do is we use this percentage sign and this is a math operated just like plus or division but what this percentage sign will do is it will return the remainder of a division so it's going to say two divided by two that's completely even to do so that's going to simply return zero so if this was not an even number let's say this was three this is not going to return this is not going to return zero so simply take the value that we are checking that's called this egg's and use the percentage sign which will return again the remainder of a division and they want the the number that we want to divide by is going to be two and then we can simply check if that is equal to two is equal to zero well then indeed the number is even so with that in mind try and see if you can go ahead and create this for loop or if not again head over to forum branches comm where I among many others are waiting to answer your questions so again I hope you enjoyed this video and I'll see you in the next one