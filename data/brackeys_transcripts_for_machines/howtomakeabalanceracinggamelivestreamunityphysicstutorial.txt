this video is brought to you by sutan Al Sharif thank you so much for donating if you want to support Brees yourself you can go to patreon.com breis thanks for tuning in at braies hello everyone welcome to the live stream today we are going to be creating one of those um physics balancing 2D racing games uh that you often see on mini clip sites with uh small games and it's really fun thing to do it's been around forever and now with unity they've made it super easy we're going to be using the wheel joint 2D component to easily do this kind of spring um uh physics and um yeah so we're going to be doing a bit of scripting we're going to import a bunch of elements that I will make sure to make available for you uh through a GitHub download once we're done I'm going to upload this to YouTube along with the project so you can play around with everything yourself and um then we're going to be doing a lot of setup uh inside of uh Unity so really exciting and I'm just going to have a sip of coke here um before we get started and uh let's just jump right into it so what I want to do is uh Begin by creating a new project so uh the demo scene here we just check that out and you can see how this is working we have some uh live crates and we have this um bouncing card and at the end we have a cool looking flag which currently doeses nothing and then when we land on our head the game restarts so that's what we'll U be making so that's go to file new project and uh let's create a totally empty project here and let's place it in our projects folder wherever that is on your system I'm going to switch to 2D here and I'm going to name this um balance racing game and let's hit uh create project and I'm just going to save that and let's wait for Unity to uh create all of the necessary files in order for this to function and that might take a little while but it shouldn't be too too bad and as you can see I've pref prepared some different Graphics here I've prepared a car a crate a goal a map and a sky and we're going just going to be using those I'm not going to show you how to uh create those um it's really simple stuff all of it and I am again going to make this available to you once I um upload it to YouTube so you will get your hands on these but it's really something that you can just Google your way to or open and use uh something really simple so the first thing that we kind of want in here in our empty project is um well a map so let's start by uh importing our map here and this is a Photoshop file you can use pgs or jpix or whatever and um we'll also need a sky to have a nice looking background so let's take these two files and let's drag them inside of unity and wait for it to import and we'll select both of them and turn them into Sprites I can see it's already done that for me that's because I selected 2D by default just make sure you change it to that and um everything everything else looks pretty fine except our map here is actually pretty huge so I'm just going to bump up the max size and I'm also going to make this a true color I don't want any compression on this AET um so everything else looks good except I want to uh decrease the pixels per unit to make it bigger inside of the game and I also want to do that to the sky so I want the sky here to be really really big uh it's not that big in terms of pixels it's only 400x 225 so let's just increase the pixels per unit here to really blow it up so now we can take our map and we can drag it in here and you can see we have this huge looking map already and it's uh it looks quite fine and uh what we really just need is a sky behind it so let's take our Sky drag that in as well and you can see it fills up our entire main camera and we are going to be moving around our main camera so let's just make sure to parent our sky to the main camera as a child object so we can now move around our main camera and the sky will move with it that means that our sky is totally static but because it's so blurred out uh you aren't really going to notice it so what we can do then is just adding a few sorting layers here we're going to have one for the background we're going to have one for the default and we're going to have actually I don't think we're going to be needing anything in the foreground so we'll just have those two and we'll take our sky here and add that as the background layer so that just make sure to sort it U behind our map app so now we can drag in or actually let's just save our level here save it as something like main level uh it's not really important what you call it and uh now we're ready to import our car so um let's take our car PSD and drag him in as well and uh let's just drag him into the project panel again we want him to be a Sprite so in case he's not just uh quickly adjust uh that and I think he's going to be fine with the default settings uh one thing that you might might want to do I think he's a bit blurred out here is go in here and uh tuckle off um Mid Maps I'm just going to do that that kind of kind of makes him look a lot more crispy uh cool so we're going to need some wheels on this guy but first let's make him actually interact um in the physics space so let's add a component to him and we're going to be adding the rigid body to D and this is what of course you use whenever you want something to move uh using Unity spill in physics system also if you're going to be moving around objects it's a good idea to just add a rigid body anyway because Unity will be doing some optimizations on that object just make sure to then tick is kinematic so whenever you're dealing with uh with moving objects that has anything to do with the uh physics system you really want a rigid body there um so let's also add a box collider 2D and uh let's quickly adjust adust this and you might have a hard time seeing this so um what I actually can just do is just disable the sky so you can more clearly see the green bounding box here and let's edit this collider a lot of people just adjust these values but you can actually just hit this edit collider and then drag it down yourself so of course this is going to match up completely and you could use a polygon collider if you want something more precise but I've been playing so much around with this car and I haven't noticed it one bit so this is a lot more effective so we're just going to be using this we're also going to be adding um another box collider for uh triggering whenever we uh hit our our head into something um where we want to restart our game uh but right now we'll just uh leave that and we'll add it in a second instead cool so let me just have a look at the chat here everyone's doing great that's awesome where can you find the assets the assets are made by um by me just very quick quickly and they will be on the YouTube channel once the uh video goes up which is hopefully tomorrow uh and uh yeah is it like going to be like Hill Climb um I don't remember that game but it sounds like something that might overlap with this it's very happy wheels like it's probably the biggest game that overlaps with what we're doing here um so yeah awesome and yeah I will be doing a Q&A towards the end cool so um what we can do now is just uh try and hit play and we will see that our player falls down but of course we need him to also collide with our environment so first of all one thing that I just remembered is we want to bump up his orderin layer so that he's always on top of our um of our uh map here so let's go to our map and let's add a collider to this as well and this is not going to be a bug collider we want to go into physics 2D and find the polygon collider 2D and then will automatically generate a pretty nice looking polygon collider uh that fits our environment here so what we can then do is maybe just offset this a tiny bit because it as you can see it creates this uh collider in a way that leaves a gap between on the car and the environment so let's just offset this by something like. one on the Y that's going to make it look a lot better just like that that's actually pretty good and uh now we are ready to add some wheels so again I've created a wheel Sprite here and it's actually not in here but I have created it I just didn't remember to put it inside of this folder so let me just find it on my system here so on projects under the um racing game that I just uh showed you I made a wheel PSD here so let's just take that in there as well awesome so now we can drag this inside of our project panel and uh everything should line up in terms of scale and settings uh again one thing we might want to do is just disable mid Maps just to make it more uh crisp and clear and our wheel should definitely overlay our car so uh as the ordering layer we're going to be put on two here and we also make it want to make it a child of the car object and I'm going to move it uh to fit right around there and also over here and don't worry this is something you can very easily adjust at a later point and it's some definitely something that you should play around with because it has a lot of effect on how the game actually plays uh the further apart the wheels are the more more stable uh everything is going to feel uh because you're spreading out um all of the weight uh cool so yeah that looks good and what we can then do to the wheels is of course add um Circle colliders so we can go under physics 2D and add a circle collider to those we can also decrease the radius on that to something like 0 2 uh and This way everything just looks a bit better down here as you can see and right now you will notice that the movement here is very stiff that's because we still haven't added um the actual wheel joint 2D component which is the magical component that will make everything feel awesome and fun um but uh for initial setup this looks just fine and I believe that we need to add rigid body uh bodies to these wheels as well we do so let's go on Rigid body 2D and let's change the mass here to something like 0.5 and everything else I believe you can just leave as is then we can take our car here and change the mass of him to let's say two just to make uh there's a different masses and right now you can see this is of course causing some problems because they aren't attached anywhere and normally you really shouldn't uh Nest rigid bodies you shouldn't have a rigid body where child objects has have rigid bodies as well but because we are going to be hooking this up with the component that kind of requires it um we do that cool so let me look in the chat here everyone umh uh yeah yeah the point of this stream is making a complete uh game tutorial one stream that's totally true I'm pretty much just um doing a live tutorial and then towards the end we'll do the Q&A so looking forward to that of course awesome so why did you add a rigid body at the wheels that's because it's required U by the component that we going to be using in just a moment uh but normally it is kind of uh bad to do that all right so let's just uh continue I'll take a sip of this so I don't sound like a very old person and we can continue so um on our car here we want to add two new components so let's do that we are going to go into physics 2D we're going to scroll down and find the wheel joint 2D and we're actually going to add this twice um and maybe we yeah let's just go ahead and add another one so let's just search for wheel joint 2D and let's set these up so uh we want to link each of these to our two wheels so let's first rename these this is going to be our wheel um back and this is going to be our wheel uncore front not Freud it's going to be front and let's drag this in so we'll have our back wheel and we'll have our front wheel and the way that we are going to set things up is um having the uh car powered by both wheels so they're go both going to be connected to the motor uh but you could easily just disable one of them just remove some of the code and uh only have it powered by the U Back wheel or the front wheel you can do a lot of stuff with this it's super easy to set up so what we then want to do is uh move the Anchor Point of these wheels so you can see that I can move this anchor over and we want this of course to sit at the current center of our wheel so that when a wheel gets out of position it is going to try and get back to that point by applying forces and um we want to do that with the other wheel as well so as you can see we can move this anchor too and we just want to drag that down here so that that again when it gets out of position is going to try and get back to that point cool um and then we can us play around with some of the values here most importantly is everything under suspension so the suspension is of course um what allows us to have these wheels act actually act as a physics objects instead of just being very static this is what uh gives this bouncing effect and what applies forces to get the wheels into position so the damping ratio is how much the wheels are actually going to um move we're not going to actually uh edit that that's fine at 7 the frequency is kind of how quickly they are going to move back to the position that they should be in so the frequency in Herz for the oscillation of the suspension and that sounds really hard to understand but let me just show you instead what this looks like so if we now hit play you can see that our car actually all way already rolls away as soon as we hit play so what we can do say we lower the frequency here set it to something like um .5 for both of the wheels that should make the spring here way looser so you can see here now that our car just totally sinks in and if we then increase the frequency to something like 10 which is a pretty extreme value you can see that it goes back up and we have this very stiff spring uh that uh isn't quite as bouncy so I think a good default value for this is around four uh to give kind of a nice bouncy effect but still have a lot of control because the more bouncy it is the harder it is to move around and um yeah so I think this is really good then what we also have is a motor and we can toggle this on and off by uh toggling the used motor and we have some settings for this and that's just a motor speed which is the speed at which our motor will rotate and you can see that is in me/ second or degrees per second and we also have a maximum motor force and this is the point where we are not or this is the amount of force the maximum force that we want to apply in order to try and get the mode of speed that we we specify up here we're just going to leave the maximum motor Force but the motor speed is what we'll be modifying through a script so that's going to depend on our user input and you can see right now what happens if I go in here and modify that motor speed so right now you can see that our car doesn't go rolling off and the reason why is that I've currently enabled the motor here and that means that the motor down here is trying to stay at a speed of zero and this is the back wheel if I then increase this you can see and that's actually backwards that it will try and move at that speed however because uh of um physics not always doing what you want uh the the car is just going to go sliding uh because the friction of these isn't well infinite it is going to just slide away and generate some heat down here but Unity doesn't include that so what we can also do is hit play and do a negative motor speed here which is going to drive us forwards so you can see as I decrease the motor speed here it's going to make a forwards movement and you can see what that does awesome so this is why we are going to be toggling the motor on and off uh depending on whether or not we want to move and if we want to move then we are going to toggle it on and adjust the motor speed uh to whatever speed we determine and also uh to uh fit the dire direction that we want the player to drive in so that's what we're going to be making now so in order to do this let's create a component on our car here called something like car controller let's just create that as a c script and let's double click this to open it up in visual studio and again I'm going to have a sip of code ah lovely not sponsored by the way and let me have a look at the chat everything things looking good awesome uh when's the next uh multiplayer FPS video coming out when I make one I haven't actually prepared the next video yet there's a tower defense hopefully later today this one is going to come out hopefully tomorrow and I will have a look at the multiplayer FPS but um I have something larger that I'm working on that is kind of taking time away from the multiplayer FPS series I'm sorry it will come back uh in and and redeem itself um we'll have a look at that soon uh but I don't have a an ETA for the next video there and uh yeah let's just continue so as you can see here um we have this car controller and uh we just want to access the wheel joints and change around some parameters on the motor so first off we need of course a variable to determine the speed at which we want to move so let's make a public float here and call this one speed and set it to something like and this is actually going to be a fairly large number uh so something like 1,500 by default and um the way that we're going to be doing this is inside of the update method is where we will get some user input and then inside of the fixed update inside of the fixed update is where we will actually um do the movement so inside of our update here we can get our current um movement up and down is going to adjust forwards and backwards and left and right is going to to uh tilt the car so in order to get our forwards and backwards meaning up and down we are going to use input. get AIS and we're going to get the raw axis here and we're going to get the vertical axis and this means that we're getting a value between negative 1 and one and it's going to be zero if you don't press a key it's going to be one if you press up and negative one if you press down so what we can use this for is um um setting our motor speed equal to this value and then multiplying it with our speed in order to get well in order to control how fast we want the car to move so let's first off store this in a private variable and this is going to be our movement and let's just default that to zero and we simply going to set movement movement equal to input.getaxis Raw vertical let's also multiply it with speed and because we know that a positive value moves our card backwards let's also put a minus here uh so that we reverse that situation then we can go into a fixed update and we can access the wheel so let's create a reference to that wheel so we'll create a public and this is going to be a wheel joint 2D and this is going to be our back wheel then we can go down here we can say back wheel do motor and we want to access the motor speed but we can't actually change this directly we want to set this equel to Movement we cannot do that and the reason why motor is a struct so it contains all kinds of information and we can actually only change it if we create a new struct populated with the information that we want and then put it back in so we can access individual parameters but I'll show you how to do this so what we want to do is essentially create a struct which is uh and now I have to check what the name of the struct here is so back wheel. motor this is a joint motor 2D that's the name of the struct data type that is containing all of the information about our motor so our joint motor 2D and we're just going to call this one motor equals a new joint motor 2D and then we can do this and this means that we can just set parameters directly and you can see we have two parameters here that we can set first off we want to set our motor speed equal to our movement next off and we do a comma here we want to set our Max motor torque equal to well what it already was we really don't want to uh uh edit that so we're just going to go back wheel. Max uh motor. Max motor torque and that should be all or you could just put in here uh the value some kind of uh value that you hard code in or of course you could make it um oops like this or you could of course um make it AA as a variable up here I'm just going to set this to 10,000 because I believe that's what it was inside of our back wheel here so let's find it that is 10,000 so I think we're just going to leave it at that but you can play around with it so now all we need to do is actually access our back wheel and say back wheel. motor equals and then the new motor that we just created that's it so all we need to do now is um on top of editing the Movement we also need to tockle the motor on and off because if we now go inside of unity you should see and I think we of course need to assign this variable so we need to find our car controller and drag in our first uh wheel joint here hit play you should see that the U motor speed here changes as we move so that's awesome but it isn't really doing anything and the reason for it or it is actually doing something but it's never snapping out of this use mod mode and we want that to be um actually it is but it's just enabling it and it's not disabling it again all right so for some reason Unity enables that by default when you declare new struct uh don't ask me why so what we really want to do is check whether or not we should currently be moving so we just want to go if movement is equal to zero well in this case we don't want to have a motor applied so we just want to go back wheel. motor or do use motor and set that to false and in case that case we actually want to move so if that movement value is larger than or smaller than zero then we want to go back wheel. use motor and set that to true and only in this case we want to go in and actually uh do all of this stuff and right now we're only using the back wheel so you can see now that our car will only be D driven by the back wheel and I'm going to add the other wheel in just a moment but just to show you that this is working so we can ignore this one it doesn't use the motor until we actually tell it to and it went off the screen there until we tell it to by moving the car and you can see that it's it's really spinning the wheel quite fast here but it's not going that many places and the reason why is because of friction this scene is currently almost friction list uh you can see that our wheel is just spinning around but it it's not really getting much done so what we need to do is add more friction between the map and the wheel and we do this using something Unity called a physics 2D material so let's create one of those let's create one from for the map and let's create one for the uh let's go where is it where is it physics 2D material let's create one for the wheels so for a map here let's set set the friction to something like U one and let's do the same with the wheels that's quite a increase in friction and it's definitely it's not necessarily realistic uh but it is what many of these game uh uses or use um in order to get that nice effect where you have a lot of control and where if you're good enough you can almost Drive uh in a vertical position so that's a lot of fun to play around with and this also allows you to create easily create an ice map where you don't have that much control by simply going in and changing the friction on the map to zero and now everything is just going to slide around so let me show you this so let's find our map and let's find our material here and let's drag our map into that one and of course it's not the Sprite renderers material it's the collider material let's do the same thing on the two wheels except we drag in the wheels awesome let's hit play and actually I think I want to do this to the Cari as well so let's just drag in our Wheels here as well that's going to be fine cool so now you can see that we can actually control this I mean if if the heat uh the hill is too steep we don't have that much control but it is a lot better than before and we actually now able to climb this hill here uh using that system awesome and we have a bit of weird things going on here and that might be because we are colliding with ourselves so in order to get rid of the internal collisions here in case the wheel joint doesn't do it which I found that sometimes it does not um what we can do is simply uh put these on different layers so let's take our car here add a new layer and this is going to be our car uh base and this is going to be our car wheels and we can take our two wheels and add the car wheels layer and we can take our car and add the car base layer and we don't want to change the children there we want it to be that object only that should fix some of that stuff awesome so that's already really fun to play around with and again if we want to make a snow ice level let's set the friction to zero and now you can see that we are totally helpless we're just going to go sliding off cool so um the next thing that we want to add is some um uh torque on the front wheel as well and that's done in the exact same way we just go in at the front wheel here front wheel and we just go here and do all of the same stuff so we go um whoops and we of course need a simle in there don't know why I didn't do that so front wheel use motor false and all the same stuff here we're going to set front wheel do use motor to true and down here we want to set front wheel. motor equal to the same motor so we want the same torque on both both of them and now when we play or of course we have to drag it in so we might get some errors here okay it didn't hit play so we can drag in the secondary wheel joint and we should now be able to uh move using both Wheels woo that's awesome but we easily tip over so what we need to now add is some way for us to kind of tilt our car forwards and backwards so we need to add some rotational torque and uh before we do that let me just have a look in the chat yes I'm going to upload this video to YouTube uh a lot of people saying yes down there uh it's awesome thanks for helping out with answering some of this stuff um what uh let's see what's the difference between fix update and regular update so regular update is called um every uh time the computer draws a frame so that's a graphics thing when we draw a new frame which means uh 60 times a second 120 times a second um often a lot of times a second um that Loop is going to call uh and that is the mo most frequent update and then fixed update is an on a constant time because uh the update might vary depending on your computer settings how much load it's under how much it needs to uh draw stuff like that fixed update will always render at a constant time so at a constant interval and that can depend from system to system or game to game but once you've opened up the game it's never going to change and that's uh that's why we we do physics stuff in there because you can always count on it uh having the same amount of time between each step and you can have your physics code run at a separate um uh on a separate rate than all of your graphics code so you can have your graphics code run really fast and not do physics iteration every time that could be really taxing or in case you're doing a lot of graphic stuff you could have on the physics stuff do a lot of calculations uh in between frames in order to get more um more um precision and uh then you can update your graphics um more slowly say 30 times a second whereas the physics might want to update 120 times a second so that is the different uh the difference between the two I hope that makes sense uh awesome yeah so let's jump back into creating the game um so in order to do this all we really need to uh do is just add add some Force to the base of our car because our wheels are going to uh go or just follow the base of our car you can see here if we hit play and move the car here the wheels just follow it and the same thing if we rotate it so uh what we then do is go into a car controller and we add another thing to our update now we want to get input. getet access and this time I don't want it to be actually I want it to be raw and uh the difference between get access and get access wrong get access does a bit of smoothing on your input and can sometimes feel nicer but not as respondent respondent and get AIS raw is only the raw value between and not any smoothing so that means either negative one or one so um here is going to be the horizontal axis and we're going to store this in another private float and this is going to be our tilt or rotation I'm just going to do rotation and we want to default that to zero as well so now we can set rotation equal to that and we can use it down inside of the fixed update and we want to do this with regardless of if we're moving or not so let's just do that at the end of the frame and uh we're simply going to rot uh rotate it by going of course we need a reference to our physics component so um we could either get that using a reference up here so requiring require component type of rigid body 2D that's going to make force Unity to actually have a rigid 2D rigid body 2D component on the same object as the car controller and then we could use get component or we could just do the same thing that we've been doing all along which is just making a bunch of public components here that we can drag inide of the inspector let's do that so let's have this be our our RB for rigid body and all we do here is simply go rb. add torque which is rotational force and the amount of torque we want to add is rotation and I believe we need to flip the direction of that and then of course we need a speed amount uh so we're going to create another public float and this is going to be our rotation speed and we're going to default that to about uh 15 I'm going to put an if there as well and we want to multiply that down here so that is the rotation speed awesome and we want to multip ly this with time. fixed Delta time right yes we do awesome so now let's try and hit play and we probably want the rotation speed here to be a lot greater actually we need to drag in on the rigid body here in order for this to work and let's see if this is working so yeah right now I'm pressing the keys but not much is happening and that is definitely because we want to bump this up so let's try, 1500 might be too much it's actually really fun but I think it's a bit too much this is yeah you can really do a lot of flips like this let's try like a th000 or maybe maybe 800 not 8,000 you're crazy that wouldn't be good let's try 800 um okay didn't get to test that really um we could either zoom out the camera just use the scene view here we'll be making a character controller in a second or camera controller in a second yeah I really like the feel of this um you can always play around with it more but I think it's working quite well right now so that's awesome um so next up we're going to be um adding a camera follow and I'm going to enable the sky here again so we can see things and they look nice uh so next up yeah uh is a camera controller uh that follows our car around and then finally we are going to be adding uh some crates and a trigger for whenever we land on our head but first let me have a look at the chat again uh a lot of people discussing CocaCola uh that's awesome what um see here this is the greatest car control of all time thank you uh that's awesome um let's see yeah nothing stressing as far as I can see make an RPG tutorial maybe at some point not right now uh yeah let's just continue most of this stuff is about Coke anyways cool so camera movement what do we want to do well the most simple form of camera movement is always just pting the camera to the car but you can quickly see and then positioning the camera to be on the car but you can quickly see why this is a problem when we have something that rotates this really really quickly becomes very funky and this can be a challenge of course but it's kind of way too crazy this is not a good idea I get seasi already so what we really want to do is have our camera using a script only follow the position of our car so let's create a new component here and let's call this one uh camera controller and let's just hit create an ad and we can double click that to open it up in visual studio and this is a lot easier to program than what we were just uh doing don't worry so we'll just be making a public trans trans form and this is a reference to the Target that we want to follow around and we'll be making that reference inside of the inspector so now we can just save that we can go into the inspector here and we can drag in our car as the target then inside of the fixed update me U method here we are going to set our position so transform. position equal to the target. position so we're just going to set our position equal to the same position as our car however there's one slight problem with this and that is the fact that we are also using the Z component here so uh right now we just snapped our camera in when it really needs to be out here it just snapped it in and that means that we can't really see anything that's going on so in order to change this what we do is we create we store on the position of our Target in a vector 3 so this is going to be our new position Target position and we set that equal to target. position and then we set new position. Z only that coordinate equal to 10 and then down here we set our position transform. position equal to the new position so we store it in a temporary Vector 3 we edit the Z component to pull our camera back so we can see everything and then we set our position to that new position so let's try and hit play here and now you can see we have a very very simple camera follow script and you can add luring to smooth out the following and everything to make this look and feel super awesome but really I like this very responsive camera and because we have so much bouncing in the car already I don't think we need much smoothing so that was the camera script uh quick and easy and let me just check the chat again here uh let's see um is there any option if there are multiple random. range not give the same numbers I'm not totally sure what you mean here um random. range is not instanced the same way that the C random generator is so that should give you uh random numbers each time but what you can do is specify a seed uh so you can give random.range seed which means a number that if you use that multiple times it's going to produce the same numbers but as soon as you change the seed it's going to give you a new number but by default it should just give you random numbers each time no matter where and how many times you use it um am I going to do a backflip SL SL uh front flip reward not right now uh that is a bit more complex you would have to do some checking uh to uh see whether or not the user actually does that and that code could quickly become a bit complicated I'm thinking about how to do that um so not at the moment but um you can definitely experiment with that on your own you just have to keep track of the car's rotation and um add an event if that increases ah yeah it's actually not totally easy to do but it is doable uh but not for this video I'm sorry um some stuff about how I learn unity and stuff like that we're going to take that uh at the end of the stream where we're going to do a Q&A it's going going to be a lot of fun I'm sorry that I'm not going to answer that kind of stuff right now this is Unity 2D totally correct all of the graphics are done in Photoshop and will be available with the Youtube upload and um will you make the levels randomly generated again I could that could be a lot of fun I can't fit that into a single live stream if it's something you really want to see like randomly generated stuff let me know and I might do a YouTube series uh on it at some point uh but not today so yeah uh and also uh this here is just a static Sprite created in Photoshop if you want to make this U procedural or easier to manipulate inside of the unity editor there are a lot of really cool plugins for this on the store on the asset store they're not free and I even searched around for a free alternative uh to show you uh here uh but I couldn't actually find anything that was updated I found a single one which is I believe it was called like ed2 or e2d or something like that um and for for Endless terrain 2D or something um but it was just the code was too old and not M maintained so um yeah couldn't really get it to work I would have to write rewrite a lot of stuff so um but there are definitely assets for that on the store so let's continue so the next thing that we want to create is some kind of punishment for whenever we land on our head so let's take our car and let's move him down to the beginning of our map and let's move the camera with him and let's now focus on a kai and let's add a new box collider 2D so yes we have multiple box colliders but that's totally okay let's going to move uh let's go ahead and move this up as well there we go so they're sitting in the same place and this one we want to be a trigger and we also want to edit the collider so that it just uh kind of uh goes around the head of our player uh so again I'm going to just quickly disable the guy here and let's hit edit collider and drag this in so position it somewhere around there whoops let's try that again and here move it down and move it over and something like this looks pretty good the colliders are overlapping a tiny bit so what we'll do is we'll take the cider here and actually move that down a tiny bit I think that's going to be fine something like on that and you can of course go in and add a polygon collider again if you want it to be more detailed so I really like this um and what we'll then do is utilize the fact that this is a trigger so we'll create you could use the car controller but we'll create a separate component which is something like like um end game or uh we could also make it something like a game manager but let's just call this endgame um and all this is pretty much going to do if we open it up is whenever something ENT our trigger so on trigger enter 2D this is called every time a collider enters the trigger then we want to uh restart the game so we want to be using Unity engine. scene management up here this will allow us allow us to load new scenes or reload the current one and we want to go scene manager. load scene and the scene that we want to load is the currently active scene so let's go scene manager. getet active scene and then we want to get the build index of that because the load scene doesn't take an actual Scene It Only Takes either a build index or a name so we can just save that now and um we should see that as soon as we start the game it restarts actually it did not but they are overlapping but the problem here is um if we have something else hit the um the player uh the trigger here should pretty much uh be called uh no matter what hits us not only if it's the map also if it is our own car here if I try and reenable this actually it doesn't do that that's really weird if I try and offset it make I'm really impressed by this so it doesn't do it with uh uh internal colliders apparently so let's just try and make a new 2D Sprite here just select some uh default Sprite some UI Sprite let's just add a component to this so let's add a collider box collider 2D and and we should see there you go so it it pretty much registers with everything so what we could do here is um just have the car uh not collide with itself so what we do is we go under uh edit and then project settings and then go under physics 2D and we go in here and we say well the car base we don't want that to be able to collide with on the wheels and we don't want the car wheels to be able to collide with uh themselves and we don't want the car base to collide with the car base so there we go now nothing on this car should Collide so we can just hit play and everything should work fine and dandy and if we now jump on our head you can see that the level indeed does restart so that is pretty much all of the core functionality that I wanted to put into this game I also want to uh show how I added some fun physics crates and let's also add like a finish flag down here and we can maybe even do a quick trigger on that just to show you how that's done so um uh again I'll have a look in the chat and we'll continue why not use a solid color for the background could totally do that I just wanted a bit more detail it might be hard to see on the uh twitch stream but there is actually a bit of clouding uh inside of this and I just think it looks a bit nicer uh why not a circle collider you could totally use a circle collider uh there's no issue with that whatsoever I just wanted to make it a bit tall and you can't really do that with a circle collider but you might be right that it's better um so uh going to put it online when it's finished totally I'm going to put it on GitHub and on the YouTube page uh as a separate video um but only tomorrow I think it's because you're using on trigger enter nothing is entering it well I tried kind of moving the collider around to see if it would uh would enter but for some reason it it didn't really do it but sometimes Unity does that it's it's kind of hard to to know when when Unity is uh is entering something and and stuff like that what you really want to do is just be safe U by disabling that kind of collision um why using polygon colliders colliders instead of edge colliders super good question uh not for any particular reason you could go in here and use an edge collider 2D and uh the only reason why I used a polygon collider is because it just sets itself up uh in here you really have to go in and and edit it yourself and you could totally do that it doesn't take long uh but there's no automatic way to do this so I just wanted to use the polygon collider but if you're really um really um uh interested in getting this as performant as possible use the edge collider that's totally true um how do I activate the full screen game view while I'm not playing well you can go up here and right click and hit maximize or you could just use shift space this is some of the most awesome this is probably the most awesome Unity uh shortcut and one of the least wellknown if you just shift space over any view whatsoever it's going to maximize it it makes it so easier U for example inside of the animator sometimes you have hugely complex stuff inside of the animator and you don't have multiple screens well in case you're on a laptop or well if you don't have like a multi screen setup you can just hit shift space and easily focus on Whatever It Is Just Tab out it's it's so awesome it's a really really good um uh shortcut um off topic do I use SSD or HDD I use both I have two ssds I have one for uh my Windows system uh and I have one for uh video editing on and doing stuff like that and then I have one hard dis drive for uh storage and uh programs or like not so important software all right so a lot of questions coming in I'm sorry I'm going to continue the video here because it's it's not too good for the YouTube video so might even cut this out but um we'll just uh finish up the game and we'll do a lot of Q&A don't worry about it I am up for a lot of answering of stuff I still have more CocaCola to go and I really need to stop saying that brand I I need I need I need some money if you're out there CocaCola I'm totally willing to do awesome so um yeah what do we want to do let's start with the flag here let's just put that in really quickly uh all you want to do is take the uh flag the goal here that I created which you don't have you can find one on the Internet or you can wait for tomorrow just drag it in here uh that easy and place it there you go that was all I did for the preview video there I like it I like to play it a bit uh into the map here I think that looks pretty nice and uh I'm just going to pause the game here take our car and drag him over there and replay the game and you can see how that looks inside of the game so now let's just make this interactable by on the goal adding some kind of collider in our case we're going to be adding a box collider 2D and uh if you haven't noticed I really like box colliders and we're going to mark this as a trigger we're going to add a component and this is is just going to be our uh goal component and then double click this to open it up in uh Visual Studio refresh that and we can add a void on trigger enter 2D the exact same way that we did it before however this time I think we need to check if what we're colliding with is actually the player so whenever you only want uh to collide with one thing one uh it's really easy to just check for a name or a tag and in our case um we can just tag the car as player or as car so um We Gather some information about what is currently entering the trigger to do that we go collider 2D and we call this coll Collision info I'm just going to call this call info and call in for fo now contains information about the name of what we hit the tag of what we hit and other stuff like the collider and the game object itself so now we can simply go if collider info do uh name. tag it's equal to uh player well then the player hit us and we can continue to the next level you can continue to the next level since I'm not going to be making a Next Level I'm just going to throw in here uh game one there we go so now we have a win state and it's an actual game and then we can uh maybe just reload uh the scene so people can play again because let's face it this level has infinite replay value uh so let's go in here and import scene management once again go scene manager do load scene and the scene we want to load is scene manager. getactive scene. build index whoops we need to specify this as a function build Index close that off save the script done hopefully done let's try so let's move our car over let's find our car there's our car moving over hit play the camera snaps over there let's try and move through this and it's restarting the scene but it's not throwing a debug that log statement that's actually really really weird Unity should definitely do this is it somehow restarting the level without uh getting to actually throw the debug. log that is so weird and it shouldn't even do this because it's not taged as player I have no idea what's oh of course of course so what is happening is our flag isn't firing but our car is so we're registering that we're hitting the flag I'm so dumb so what we do now is uh just go inside of oh well how do we get rid of this uh Let's see we can go inside of our ingame and we can add a collision info here as well to kind of specify that we don't want to do this if it's the flag um actually we could also add all of this Cod code into the uh end game um there are multiple ways of doing this I don't really know what I want to do with this uh I think I don't know I think what we're going to do is going into our end uh endg game here and add some um Collision info maybe let's see edit project settings physics 2D so we could of course put the flag here on a separate layer and just uh disable um the uh collision between the two but the problem here is um that we are then not going to register whenever the uh trigger actually enters so and a lot of people are saying that I should use compared tag that's totally true I should definitely go in here and use dot compare tag and we want to compare that with the player I believe that's how you use compared tag it's one of those uh little things it's definitely a little bit faster but I would I believe that Unity would optimize that actually behind the scenes but it is better but we still have our problem here so uh what we could go in and do is under our in game here we could the same way add a collider 2D with our Collision info and we could say that um if our Collis info do layer or do tag and again we do compare tag um and we could have some kind of tag called collidable uh for example or um destroys player in game whatever we'll just say collidable um then we want to uh reload the scene this way we can have objects that doesn't do this and we can specify which objects actually do this this and in this case we want to of course go into our map add a new tag here and we'll make this uh collidable believe that is how Collide double Collide double Collide double I believe it's like this awesome uh and we can specify that on our map so change that to collidable and now we should uh be able to actually die on a map yes but not on the flag no that's OD awesome and then what we can do is I want to move this goal in front of our players so I'm just going to put five here or something uh that looks a bit nicer I think cool and uh then finally uh what we'll do is um specify the car here as a player so we'll tag that as a player and now we should see that our flag was will fire and it does it says game one so that was the solution for that problem and if you want to be really neat about this you will go inside of the goal and you will wrap this uh inside of some kind of um I numerator in order to delay the action a little bit and then you can have some text popup saying game one and then after a certain amount of seconds it will transition to the next level we've done loads of this stuff in the past such as in the 2D platform of course so if that's something you're interested in just go there and check that out cool so that was all the core functionality let's um add in a few crates and we're done so let's take our car here move him back and uh let's add a Craig so dragging this into the scene that looks good we can maybe scale this down a bit because it's currently huge uh so maybe make this of size like 200 pixels per unit and um everything else is is looking fine we can maybe disable the mid Maps uh and make this true color and uh what really what we want to do is just add a box collider 2D add a rigid body 2D and I think I want to decrease the mass a little bit to something like point three and that should actually do it I think this should be interactable now and we can definitely turn this into a prefab let's just organize everything a bit we'll have a scripts folder we'll have a uh Sprites folder we'll have a physic material folder and yeah so let's take all of our physics materials here move them in under physics mat let's take all of our scripts move that on scripts and let's take all of our Sprites and move those you guest it under Sprites come on Unity is freezing here let's try that one more time move those under Sprites for some reason Unity is really bucking out when I try to do this so we'll just go one at a time there we go move all of our different spres and the endgame oners scripts cool uh so yeah what we can do with our crate is just turn it into a preat but drag it in here and now we can just distribute this uh throughout the scene so we'll have uh one that sits uh this one is going to fall down there so we'll have one here that might hit the player and um because we are going to select the tag here as collidable and hit apply uh this these are actually going to kill the player so if he gets hit by a falling crate it's going to be really really fine it's a kind of an evil thing to do and we can put one at the top of the hill here and let's now hit play and see how this works so there is the falling crate and let's uh move that up a bit higher and a bit uh more over so that if you m time this you're going to get hit by it that's awesome uh so yeah we are going to drive right over that guy and you can see that we can push these crates around and you can add of course a separate material to those if you want them to have more friction um and glide more around in the environment I might actually do that so that was pretty much the way that I added the crates and just to um finish things up here let's add a physics 2D material for the crate let's drag this under physics mat Let's uh drag this onto one of the crates uh here let's hit apply let's go on do the crate and change the friction to something like well point 4 is going to be pretty good actually let's try 2 and you should see that that makes it uh slide down the hills and just makes them a bit more fun to play around with so that was pretty much all I wanted to show in this video I hope you enjoyed it um as um as we're just trying this out in full screen and seeing if everything is working and um yeah I think we're pretty much ready to jump over to Q&A mode I'm really really happy with these results again um I'm sorry that I didn't provide a link to whoops kind of getting stuck here oh there you go or fixed it to all of the Sprites but I will definitely upload those um to GitHub along with all of the source code and um and you can just grab it from there so I hope you enjoyed making this game and uh yeah let's let's do some questions awesome so let me just transition over here and you should see the twitch chat here it's a new layout that I'm trying out so hopefully this is working um yeah cool so let me see chrans everyone just fire away and we'll have a blast so how long to the QA session it's now here um please somebody suggest me site or video to learn basic game development mathematics actually they just started a course um called game ma theory that explains some of the uh very fundamental stuff like U vectors sine waves and uh I'm currently working on one explaining um some a field in Applied Mathematics which is forces and um well it's called Dynamics uh which is applying forces and torque and stuff like that that's going to be a lot of fun and uh you can of course suggest other stuff that you want to hear as well um so let's see um uh it's already been um yeah there will be a replay on Twitch and on YouTube definitely um first on Twitch and then tomorrow on YouTube uh yeah that's awesome how do you change the theme in visual studio so you go into Visual Studio reload all here um it's just in the way you go um tools customize nope tools options I always forget this and uh you can go in in here and edit everything there's so much stuff in here also fonts and colors and you can go in and edit every single thing but what you normally do is download a theme of uh some website there's a lot of websites for this um I'm just going to find the one that I normally use if you just search for visual studio themes I like to use the one called Studio Styles studi style. and uh there's a lot of stuff here just download one and then you double click it in order to import it so you can go go to tools Import and Export settings you go to import selected environment settings you select a file and you can select the different thing parts of that that you want to import um and one part of it is going to be on the styling uh yep so that's how you do that um and I believe that I was in chat mode that entire time so I'm just going to switch over and do that one more time I'm so sorry so um let me just show you this one more time so we have um Visual Studio here let me open up a script just to find you the panel uh so let's see this is under Tools options uh and you can go under fonts and colors and you can play around with everything uh or you could go to Import and Export settings and you can download a theme off of a website called Studio Styles uh which I will now write in the chat so let me just do that and you can check it out there uh so I will just write it to you right here oh all of these windows I have opened it's way too much so it's called Uh studio studio style. there you go awesome so uh when am I going to upload the project in GitHub tomorrow uh hopefully um when did I start coding that's a good question and it's actually one that's kind of hard to answer um because it's it's been so long and also um when what is coding really I mean I started doing visual coding actually well that's not totally true I started by making one of those console applications a really long time ago trying to make a calculator in Visual Basic but that's so long ago I don't even really remember it turned out or if I even finished it and then I I moved over to game maker which was a lot of fun and that does have a bit of um visual programming um and not the current game maker a very very old game maker that was made by entirely entirely different studio and um that was a lot of fun had some simple Sprites and stuff I could do a bit of movement um and then I transitioned over to doing blender actually um whenever blender introduced their game engine I I used their visual programming not any python um and from there it pretty much just unlocked a world of programming I did uh Unity programming C and JavaScript I've also done some website stuff now and um I know a fair amount of languages but a really long time ago with blender uh but I got into Unity like I don't know five year years ago or something like that yeah um maybe even this no five years is about right cool um have I ever made money off a game that's a really good question I've published a lot of free games but I've actually never monetized them uh in if you follow the channel for a while you know that I have this thing where I'm really much in love with free stuff I haven't charged a single thing on the brais channel and I've made a lot of software as well on the on the um asset story there's the UPA toolkit and there's also the very old inventory system and everything has just been a available for free so yeah that's how it is I've done a bit of adware on on YouTube but that that's all um see what do I think about python I think it's a great programming language and it's awesome for multiple reasons it's super simple syntax wise it doesn't get easier um that's also sometimes its biggest biggest flaw is is the syntax and how simple it tries to be uh that's why I get annoyed with it at points but it can be used for so many things it can be used for making games it can be used it's used by a lot of scientists for um either doing some processing or for uh displaying data uh so it's a really really U versatile language that can be used in a in a range of different ways and it's just so easy to pick up so I really recommend a lot of beginners uh to start with um python um or Unity of course Unity is awesome but uh unless you want to get directly into 3D games uh python is a really great way to start um um my could you do a my top 10 tips in unity video like the shift space tips you talked about where you have some great tricks up your Steve thank you um greetings from Sweden um hi in Sweden um yeah that's a pretty good idea I could definitely consider that I'll put it on the suggestions list that could be really really fun I mean I would have to think about what I wanted to put on there but yeah the shift space one is definitely um one that should be there there are some pretty handy uh Unity things that a lot of people don't know about uh one thing that I've now shown in the videos uh quite a bit is if I just uh switch over to Unity here is the um fact that you can go into debug mode in order to see private variables that just sped up my process so freaking much if we go into the car for example and have a look at the car controller we have a few private variables here what you can do is just go up here change it to debug and it's going to display those kind of faded but it is going to display them so you don't have to create a separate variable or force them to be public just because you want to view them uh that's a really handy thing um so let me see what else um in scale from 1 to 10 how hard is Unity C for me um that's really hard question it totally depends on on what I want to do I mean the language itself um is really just an extension of myself at this point I've I've written so much code in in C and for the unity API that um I pretty much just know what to write and I don't have to look that much stuff up um yeah but it's just practice and you'll get there and it will become easier in the beginning it was totally scary and impossible to do uh but it gets easier so bring up the twitch chat here um uh what do I do for the living uh I do this I just finished up my education so uh now I'm fulltime with breis and it's it's a lot of fun thank by the way thank you so much to all of the patron supporters I haven't made mention Patron all this time if you want to support uh me and the the channel and all of the videos and these live streams these are live streams are only made possible because of patreon uh you can go to patreon.com braies there's um I normally display a link on the screen but uh it should be on the chat somewhere um and you can donate with a monthly recurring donation it just it means the world it it's what makes me able to do this because you need or YouTube AdSense is the rates on that kind of stuff is really really low so it's amazing uh if you guys support and uh thank you so much to PE the people who are already doing that but yeah this is my fulltime job um so yeah a lot of people or some people are asking for the fulltime for the final game here so I'm just going to switch over and show it in action this is the final game we have the controls working we have uh flying crates and this kind of stuff and oh I flipped over right so I'm actually really bad at this game and I've always always been bad at these types of games I don't know that's maybe why I wanted to create one myself so I could make it easier didn't succeed on that I guess uh make a mobile RPG tutorial that's something that I'm not going to do I'm sorry um RPGs are really content heavy and therefore take a while to create they also require a lot of programming you pretty much need a team in order to do an RPG and uh for tutorials that makes things even harder and mobile is just narrowing things down and making the the hard to do stuff almost impossible because then you have to worry about optimization and everything so I'm sorry that's not something that I'm going to be making a a a tutorial series on um what education did I just finish um that is also a good question um the Danish term is gymnasium which is basically the equivalent of our high school so yeah just finish that up um what do you think about C++ is it a good programming language this is a very broad question I mean um C++ is great in many ways because you can get super performant native code you can your code runs so fast you have a lot of control and uh there's a I mean so much stuff is written on C++ so of course it's a really really good language to know because sometimes you just have to delve into the really hardcore stuff um but it it's also full of pit traps and it's not beginner friendly in any way and sometimes you're just you're scratching your head looking at something for days in order to fix it uh C++ can either be really fun because you make super performing code or hell because that super performing code can be just as hard to deog um uh let's see uh am I planning on taking any further education since gymnasium education isn't sufficient for a job if so what are you thinking I'm not planning on continuing U with an education um for several reasons and the first one is I don't feel like it uh I I got kind of tired um with um my education towards the end I had it was a fine place that I went to and everything but um I'm really happy to not be in the educational system anymore what I really enjoy is making videos for you guys and programming and doing game projects and all of this stuff all of this interaction is super fun and I I just don't have the uh time and um uh I'm not really able to do that if I'm in an education at the same time so that I would have to sacrifice some of this and that's not something that I'm really to do right now but of course uh I might have to do something at some point so we'll see um am I new here on Twitch um yes I'm fairly new here on Twitch this is my third live stream I do a monthly live stream uh in case you haven't seen the YouTube channel you can go to youtube.com/ Brees um I do tutorials so hi to the guys who are discovering me through twitch uh that is Twitch is not my primary thing this is a scary thing this odd thing that I only do once a month uh but it's it's a lot of fun um fun fact C++ was my first language and it took 3 months just to get the basic well congratulations that you were able to get the basics in 3 months uh some people spend years trying to understand understand for loops and while loops and memory management I mean uh C C++ is super hard um how old am I I'm 19 years old um how do you have multiple people working on the same Unity project at the same time that's a super good question Unity has a lot of stuff for collaborating on with teams they have their own um a verion control that allows people to work even inside of the same scene and that's a super powerful thing especially because Unity now has um the ability to load multiple scenes together and have them nest and that makes it really easy to um make your game more modular so have the designer work on one part or have multiple script modules loading in and uh what you really want to pick up is just some kind of um um a version control system and what I would use is GitHub so I always use GitHub that's awesome it makes it easy to just look over what was changed on one side what was changed on other side and then merge the changes if they conflict and stuff like that it makes things pretty easy to do but it does require some planning you do always have to plan for it could I make a 2d platformer Fighter game already have a 2d platformer series I know it isn't like Melee fighting but there's gun there are guns in there and you can very easily just edit that to um if you just limit the range it's basically a fighting game then you can add Combos and some animations but all the other code is totally re reusable um do I know another engine for game development uh better than Unity I don't know anything better than Unity but I know stuff that is better for certain types of projects I know stuff that arguably could be just as good my favorite will always or is so far Unity because it's so easy to change it's so easy to extend it's um awesome for teaching the scripting system is super solid everything in unity is just a breeze to use and it's really fun um but if you want to get AAA Graphics you can do that inside of unity but if you want something that works just right out the box I would recommend picking up on real 4 for example the Unreal Engine is a great place to start if you want to make a um a really high quality shooter game for example uh but it's also a lot harder to use and I definitely recommend that you only use it if you in some kind of a team because using Unreal as a single person just takes a lot of time and unity is fast so yeah so it totally depends on your project um uh do I think that Unity will still be there in uh 10 years yeah I think uh the industry in many ways are shifting towards using this kind of middleware that Unity is this base or this engine with a total complete insane editor on top of it what people did before was um well that didn't exist many little game studios all of this Indie developer thing is a very New Concept and if they did um the results that these teams were able to accomplish weren't normally that impressive right now people can um even single individuals or teams of four or five people can make really really high quality games and that's because of middleware such as Unity what you did before was have large large Studios where you have a team dedicated to building an engine and maintaining it then you have another team dedicated to Mak making editor tools for the artist to use and then you have a third team for actually making the game and unity just takes the two first teams the ones that build the engine and the ones that make the tools for the artists and almost completely removes that workload of course you can go in and edit it and of course you can extend the editor to do uh more stuff specific to a game but it just makes everything so much easier and I think um in in more years uh or with more years on its back it's just going to do more so is it possible to build a game without the unity screen intro totally is uh I do believe you still have to have some kind of unity subscription in order to get rid of the intro but you can do that I don't know if if they changed it but I don't think they have um they even create a uh Unity screen intro customization thing uh that I don't know if it's out yet but it will definitely come soon so you can um manipulate how you want to to use it or how you want it to look but yeah you need Unity Pro uh how do you save High scores in game s remembers after game restart that depends on uh if you mean local high scores or networked high scores networks you will have to upload the high scores to some kind of server that you either host yourself or rent some hosting space and uh most of the time you just save it as a text file as a um XML file or as Json and um another way is um to just save it locally on the system and um that means just using player prefs is the easiest if you search for player prefs as in preferences you can um uh find the unity documentation on that it's a super easy way to save uh small pieces of data using Unity or you could uh look into saving XML or Json files locally so it's called data serialization for a fancy word and you can totally look into that it's not super hard and there's a lot of uh res resources showing how to do local high scores um I didn't take a college with any game design course at all and no I don't mind you asking um so let's see here uh did I learn English in school or another way of learning uh both I learned English in school I wasn't a totally quick learner but somewhat came around hopefully you don't think my accent is too thick um but yeah I I learned English uh through schools and through playing a lot of games and watching a lot of YouTube videos I was the one of those kid kids who would sit there and watch Call of Duty videos and um I learned that way it was a lot of fun and worldall of Warcraft was awesome as well I was kind of addicted to that game um so yeah playing games I think of a lot of um mostly Bo Bo learn English that way at least around here when you ask around that's that's how people learn because uh the the English that you learn in school is very generic and doesn't really allow you to express yourselves uh it's just yeah learned English through RuneScape that's awesome uh but that's just very generic conversations like I want to buy an apple and stuff like that that's particularly interesting so I'm glad I had a computer um um do I think Unity would be a good tool to play around with uh artificial neural networks and neural Evolution I played around with that um like last week and it was a lot of fun um I I just saw a cool video on um like genetic algorithms and neural networks and and that kind of stuff and I thought it looks super cool so I hopped into unity and and tried it out and Yeah Unity is a great place to do that kind of stuff any kind of simulation is awesome to do with unity uh but Unity is also to totally overkill for that kind of stuff you could use python or something else uh but you can of course do that inside of unity um thoughts on Game Maker game maker is awesome it's a very simple uh and it's very approachable and a lot of people love it I haven't used it too much I've played a little around in the editor and stuff like that I'm a Unity fan if you haven't noticed but game maker is great really great uh but only for 2D um any tips or resource if someone wants to understand oh and then the uh thing disappeared off my screen wait wait wait wait uh I'm finding the question uh where is it any tips or resources if someone wants to get better at understanding game physics and or making their own I making a video for this so uh very soon hopefully I will have it done it's another video in the game math series um course and it's about uh Dynamics which is a field of Applied Mathematics which overlaps with physics which is about forces how you apply forces to an object and how gravity works and how those forces translate into motion uh with Concepts like acceleration velocity and position so I'm definitely going to show that kind of stuff and that's going to be a Fine Place to Start uh U but yeah any kind of physics book will teach you the basics and they are pretty easy to apply I mean if you have a basic understanding of mathematics and especially if you know what vectors are and how to use them um you're going to be fine with uh doing physics calculations however um Collision detection and that kind of stuff is a story on its own that's a very program Pro programming specific technical thing uh but you can of course look that kind of stuff up um uh let me see um what is the best way to handle slopes in a 2d game um don't entirely follow what you mean if you mean like the character falling you can really what you can do is you can break cast to the surface and you can get an idea of where the surface is pointing and depending on the angle of that surface or that particular Edge that you've hit with the raycast uh you can determine whether or not you want to slide down it or work walk down and that is the short technical explanation uh yeah can you do an AI tutorial I'm having trouble finding a good one I've done some AI tutorials um but AI is a huge broad topic uh I mean when it comes to AI um there's so much you can do and it totally depends on what you want to do AI could be a Talking Machine it could be uh enemies flying around trying to shoot you and it could be uh an opponent in chess and all of that stuff is technically AI so um but if you just mean like enemies following you around and stuff like that check out the 2D platformer course I use the AAR pathfinding algorithm to implement AI you can also check out rain from uh H what are they called rain rain AI I have rival Theory right those that's a great and comprehensive AI solution but really you probably want to pick up some kind of pathf finding algorithm um you can implement it on your own uh then you can just search for AAR is very simple so AAR pathf finding algorithm implementation tutorial is what I would type into to Google in order to find that uh but you can check out the 2D platform of course for example um is it worse that I normally only use one scene for my whole game that totally depends on the scene a lot of smaller games only need one scene if you are switching from one environment to another you probably want to switch scene uh but it totally depends I mean if it's performant doesn't matter you can have everything inside of one scene um have I ever been to Germany yeah I love Germany um I've been there a long loads of times actually my uh parents when I were I was I was younger had an apartment there where we would go on vacation trips and we went there a lot and we rented out sometimes and um yeah now Germany is a blast um I would love to go back soon it's been a long time since I I was there uh last but yeah it's it's just an awesome place to be um a lot of concerts a lot of good concert opportun unities in Germany uh so if you're a music fan uh it's a good place to travel um if I ever participated in any type of computer science contest not computer science no I participated in ludum Dar which is a game development competition and I also did one myself called 10hour games which was a lot of fun but not in anything computer science specific um um are we starting or is this already the end I'm sorry to bring it to you this is the end of the stream but it will be uploaded to YouTube you have a few more minutes to ask questions and then I think we're going to close the stream off because then I will have stream for like two hours and I think that's that's enough my my voice can't handle anymore um were I in Poland never been to Poland I would like to go um why did you choose Unity I'm using on real Engine 4 uh because most of the projects that I want to do is easier to do in unity it's faster it's easier to extend um it's very easy to prototype in Unreal Engine has come a long way since I chose Unity originally as like my main engine that I wanted to do tutorials on and stuff like that um but yeah totally depends on the project do I like game jams game jams are awesome do you prefer working in teams or alone on game jams I really like doing like a little project on my own but I've also done a lot of uh like uh Tim limited project as a team and that can be just as fun it really depends on what you want to do and and what you want to get out of it if you can find someone who is kind of in line with your thing and and thinking and who you have a great time uh um doing this sort of stuff with you should definitely do it as a team it's it's it's just so much fun um uh let's see am I working on any personal projects at the moment um not too many personal projects I did a bit of neuro Evolution and genetic algorithms here uh for fun also a lot of terrain generation I've had a lot of fun doing that inside of unity um but really I've been working on a website uh which is this huge new secret thing that you're going to see soon that I'm really really excited to show you guys it's going to be I think you're going to have a blast using it um I can't say too much right now I don't want to spoil it until it's totally done but it means free stuff so that's awesome so I'm really I'm working on something really big that I've been pouring a lot of hours into and it's also taken hours away from the multiplayer FPS course I'm sorry about that but don't worry it's it's not gone it will be right back have I been in Norway I don't believe I have U maybe maybe just traveling through but I haven't really spent time there sorry um how can I learn if I had a have a hard time coding so you want to program and it's difficult it is for everyone in the beginning no one has an easy time getting into programming um if you have a really really hard time and find you just constantly get stuck pick up something easier if you don't start with C++ um I think pretty much the easiest thing that you can start with in terms of like real programming and not like HTML CSS kind of stuff just not just styling um would be uh Python and uh then you can move on to Java or C or JavaScript which is even easier so I think uh python is a great place to start or you can start with the make a game course if you want to make games that is on my YouTube channel in the beginning do a lot of copy pasting and just try uh don't don't you don't have to like write everything yourself you can just copy things in uh from The Forum or what whatever just search for the functionality copy the script and see if you can make it work and edit it and tweak a few things and see when it breaks and when it works and when it becomes awesome uh and then later don't worry you'll get the hang of it and you will start be able to write code on your own and that's when it really kicks off and and becomes super fun but everyone's been there having a hard time learning to code um what language do I speak I speak Danish that's my primary language I also speak English somewhat and I speak a tiny bit of German but it's embarrassing so I'm not going to do that which is we get taught that in school and it's always been kind of the language that I refuse to learn so I'm I'm in no way going to do that um want to see some more advanced tutorials it's good to know uh doly noted uh do I study computer science or something in that direction I don't study at the moment no um but of course uh I study in my free time just with the internet there a lot of stuff out there don't need to take an education um uh people are already asking me to do the the German thing um um yeah yep I am Danish uh yeah so I think the questions have PL Toad and people are now just discussing languages so um if you have any burning questions ask them now I don't have three parents uh if you have any burning questions serious questions preferably ask them now or else we are going to close down the stre the stream here so we have have one minute guys um why did I learn to use uh Unity through practice through tutorials I I watched the tonado twins back in the today uh that was fun and um yeah loads of practice um you can pick up a book on c as well if you have a hard time understanding it um but just make some projects find something that you want to do and just have a go at it don't doesn't matter what it is or if you finish it or not I think in the beginning all you really need to do is just jump out uh jump into it um if I could choose one feature they should Implement in unity what should it be Jesus Christ that's a good question actually I I just uh got done watching the keyote from uh yesterday and there's a lot of exciting stuff in there right now I think the timeline has been lacking for a long time so that's really really exciting to finally see it that would probably have been my answer um previously but now I have to kind of rethink that one so sorry I don't have a really good answer right off the bat um no no I have nothing I'm actually really satisfied with the amount of functionality right now uh most of the stuff that I've been asking about has been added or fixed or whatever so yeah but you also mostly notice this kind of stuff when you're really uh deep into working on a game and I'm not working on any big game projects right now so I don't have anything to complain about just doing tutorials and that is most of the time just scratching the surface um what projects are planned in the coming months big projects exciting projects secret projects coming up don't worry do I have a girlfriend yes she's sitting next to me and uh she's the admin here she's called Sophie Bob she's saying hi uh she's moderator uh so you will see here in the chat um what was my first game that was a game called uh your game that I was actually that's not totally true but my very first game was a console application then I did um a kind of racing is physics based uh game with just cubes and blender a lot of fun with that did a lot of different stuff in blender the first unity game was uh something called awake which was a horrible horrible uh 2.5d platformer and then I tried to do one called your game didn't turn out too well uh where people could create their own game uh as a mobile app um so yeah that was my first like big project um let's see here um thanks to all the people uh supporting thanks to all the people saying great stream that's awesome um what language do I prefer C what language should I learn that depends on where you are uh if it's your first python if you're experienced um c um yes it will be posted on YouTube um nested prefabs that's a great suggestions I can't believe I forgot that one I will now Revitalize my answer to nested prefabs that is the number one thing that I want to see Jesus Christ that has been a long time in the process um all right by the way if to those of you who watched the uh Unity um presentation the unity keynote I love the joke with the cancel button if you're a longtime Unity user that was the thing like I think the thing that was most discussed on the fs when that first come out was the with the freaking cancel button so um do you like visual uh scripting no I like it for beginners it's a great way to understand the logic but I really don't like using it uh I like typing it's a lot faster and you don't need to move your hands all the way over to the mouse which can be oh exhausting let face it uh but it's it's it's really great as a learning tool and for artists who refuse to get into the programming side um I say I have a lot of work to do but I watch a 2hour keynote I consider it my job to spend time knowing that kind of stuff I cut down on sleep honestly um can you give a quick overview on uh how to do script events in un I'm sorry that's uh not right now it's a bit too late but you can just look up scripted events Unity there tutorials there um a lot of them actually I've seen some myself U when I first wanted to do that stuff um I don't have time for showing you some of my games I will do so at a later point maybe and um yeah all right I think we're going to close the stream here how to read my name we can finish with that my name is espon uh but most people just go aspon or something like that that's fine um the ear makes it kind of weird so thank you so much for tuning into the stream guys I had a blast it was so much much fun I hope you enjoyed on the game and the stream and the explanations and the cura sessions ah now I'm going to have some sleep uh so yeah thank you so much for watching um that was this was a lot of fun it will be on the twitch archive right now in case you miss something right away and it will be on YouTube hopefully tomorrow along with the source code on GitHub if you want to see more of this stuff go to patreon.com Brees and without further do bye guys thank you so much you're awesome keep being awesome bye thanks to all the awesome patreon supporters who donated in October and a special thanks to Sultan elff fa of marifi and James Kell Hound become a supporter at patreon.com Brees