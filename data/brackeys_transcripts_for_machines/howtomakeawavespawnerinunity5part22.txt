thanks for tuning in at brakus so what happens when we are waiting well currently we don't have any logic for this well first off when we are waiting it means that we've spawned all of our enemies but we don't want to be counting down just yet firstly we need to give a player a chance to kill off all of these enemies some wave spawner is do it on a fixed countdown timer but I like the ones that wait until you've killed off the entire wave before giving you a new challenge so in order to do this up here under the update method we are going to say if state a sequel to spawn state dot waiting well then we want to check if our player has killed all of the enemies so let's make a method for that so here we want to check if enemies are still alive so we can do this down here and we're going to make this a return type of pool because we want to be returning true or false depending on whether or not we still have an enemy alive and we're simply gonna call this enemy is alive and what we're going to do in here is we could do a very simple check simply say if game objects don't find game objects with tag and then we could give all enemies attack of let's say enemy and this returns an array of all of all enemies or if all cane of game objects with this tag so we could say that if that has a length of length of 0 well then there are no enemies we could also simply do game objects that find game object with tag and singular and can put in enemy here and say that if that is equal to No meaning if we haven't found anything well then we want to simply return that return false meaning that no enemy is alive and then if not we return true this is a very simple check and this is going to work just fine just know that this is a fairly taxing operation because if we have a lot of game objects in our game which it's natural that we'll have if we spawn a bunch of enemies and have buildings and all kinds of stuff and particle system is it's going to loop through everything in order to find objects with its this tag so instead what we want to do it set this on a fixed timer so it will only check whether or not an enemy is alive let's say once a second instead of every frame because that's just unnecessary the player really won't notice if we only do this once once one time each second so in order to put this on a timer we basically make a lot of this we basically do the same trick as with the wave count down here so it's instead of having a wave count down we'll have a private float we don't need to see this in the inspector and this is going to be the I'm going to call this the search countdown and you could if you wanted to we are going to default this to or one you could have a time between searches variable but I think we'll just hard code this for now so we'll simply set it equal to one then down here we'll check if search countdown actually firstly we'll subtract here so we'll say search countdown my equals time Delta time and then we'll check if search countdown is less than or equal to zero well then we want to do our search here and if we find something we return our false and if it isn't well then we don't do any check then we simply go down here and return true they're still in in your life because and the reason why we can do this is we are only going to be checking if an enemy is alive if we've actually spawned some enemies so this is going to work just fine so let's have a look at what this will actually do well after we've done spawning we set the state eagles to spawn state dad waiting then we go up to the update method which is being called all the time and it says that well if we're currently waiting then we need to check if enemies are still alive so in here we could say if enemy is alive and this will check of course if we have any enemies in our scene and so if we don't have any enemies alive this is the same as doing this equal or it's equal to false that's the exact same simply put an exclamation mark there well what do we want to do then well then we want to kind of begin a new round then we want to start counting down we want to set the next wave we want to increment that by one and we might want to let the player know that he's completed this wave and give him some points maybe on something like that so that completes the current round and begins a new one and if some enemies are still alive so else if we still have enemies alive well then we simply want to return because we don't want to go down here and do all of the wave counting and on all of that if we still have enemies alive then we simply want to let the player kill those off before doing anything else so here we want to begin a new round and how do we check well we call this method which says that if we that that has the search countdown and if it hits zero well then we want to check if we found a game object with the tag of enemy and if we haven't well then no enemies are live so we'll return false and if we have or if we don't want to be checking then we return true and there's only one thing wrong with this code right now and that is we need to set our search countdown equal to oops that shouldn't be done there that should be done here equal to 1 F once we hit zero so in the instance that our search countdown reaches zero and there is still enemies alive well then we want to be checking in one second so we need to set that back to what so I think this is pretty much error free I hope at least so we can put in some debug deadlock statement and see how this is working in just a second so in here we want to begin a new round so therefore we will simply put in debug deadlock wave completed and down here we want to I think we can just leave this be actually and then the spawn wave will say spawning wave and then we'll give it the wave dot name and down here we have this spawning enemy method we of course need to add some stuff to a spawn enemy method in order for this enemies alive to actually check actually work because that searches for game objects and currently behind actually instantiating any game objects so instead of choosing a random spawn point let's simply just instantiate some enemies at the current position of our wave spawner so that's just gonna be our TM object and in my case that set 0 0 0 so we'll just instantiate the enemy here at transformed position and transform rotation you could also just put in vector 3.0 and quaternion identity if you wanted to have it instantiate at 0 0 0 so and I think it's a bit more logical to have this above and let's see if this is actually working one thing you will have to do and make sure that you do this is you'll have to go in find your prefab and I have mine here of the enemy and make sure it's tagged as enemy if this isn't tagged as enemy it's going to spawn all of the enemies and then it's simply going to continue on to the next wave because it's not gonna find any enemies that are alive once it checks so make sure that you mark that correctly and you want to be doing that with all of the enemies that you want to be spawning so now on our key GM object you can see that we have this waves array and we can maybe expand this to 3 and the first one is going to be alien invasion and it's going to have this alien spaceship it's going to spawn two and it's going to do so with one a second then we have alien invasion 2.0 and again this spaceship and it's going to spawn 3 at a rate of 2 actually let's do 1.5 and then finally we'll have one while you can and again the spaceship and this is going to have a count of five and a rate of two so now we have these different waves and in the time between waves here we'll just leave that at five and we want to be able to see the wave count down so right now it should get as far as to saying wave completed and then nothing should happen so we'll simply return here just to make sure that things are working so far so down here we should see or we should see that it starts counting down and here we should see that it starts spawning that's the first enemy that's the second one once I kill those off it says wave completed there so that's perfect and we'll just see that again so you can see it starts counting down it spawns some enemies it's currently searching if these enemies are still alive and as soon as I kill this off it says wave completed whoops cool so once a wave is completed we want to make a method that deals with this and you can of course call this wave completed or you could call it begin new round I think we are going to call this will call this wave completed so we want to put a debug log statements in there and we of course want to be calling it up here so we'll call wave completed there put in this debug that log statement and in here we'll first off set our next wave index will increment that by one will also say that spawn state dot or that state equals spawn state dot counting because now we want to be counting down again and of course when we're counting down we also want to make sure that our wave count down equals time between waves and are there any more things that we want to reset I don't believe that there is one last thing that we might want to do is right now when we hit when we go pal okay so we have three level waves defined here and if we go above that limit meaning if we complete the last one here it's simply going to give us an error once it tries spawning a wave with an index of three meaning the fourth wave so what we can do here simply say that if next wave plus one because that's the next wave we are going to be spawning this is currently the current wave and then plus one is the next wave if that is bigger than waves dot length plus one also or minus one I should say because of the differences between length which is the number of waves and index which is zerobased so meaning that if the next way we are going to whoops it's my phone going off there sorry so this means that if the next wave we are going to be spawning has a it's bigger than the number of waves that we have well then we want to set next wave equal to 0 and T bar Tadlock that we have completed all waves I should say all waves complete and then we can say looping so that's simply going to go back and spawn the first wave again and that's of course not going to be it changed in difficulty as is it's simply going to spawn the wave but this is where we could add on some kind of stat multiplier which would also add on a game finished screen and well done you've completed the game or do whatever you can continue with the game start a new scene with new waves you can do all kinds of stuff in here this is where the game state is currently complete and of course if we haven't reached the final wave and completed it yet well then we simply want to continue on to the next one so this should actually be working now so if we go in here and hit play of course this will all be spawning right here but we should be able to kill off this wave and it's going to say wave completed and it starts counting down again and we can kill out the next wave should have three three spaceships which which is it it does and this wave should have five and indeed it does and it should say down here all waves complete looping and it start spawning the first wave again oops actually that wave had three so okay so that's because we actually let it do this so we need an else statement here currently we let it set next wave to zero and say all waves complete looping and then it went down and incremented the wave immediately so it we went up to one which is the second wave but that should be fixed now so the very last thing that we want to be implementing here is a way for us to spawn on our enemies at random spawn points so in order to do this we could of course have some complete random spawning where they can spawn everywhere on the map we just have to check if they spawn inside of Collider and that's really cumbersome and I don't think it's something most games need so instead we're going to be going with the old tactic of having a bunch of spawn points that we define before run time and then simply selecting a random one so in order to do this all we need to do is just like we have this wave labret we also need to create a public spawn public transform array called spawn points and we can define that inside of the editor I also want to change this to private now there's no reason why we should be seeing that in the inspector and basically what we want to do here is down when we spawn an enemy we say that we're spawning this enemy and that's fine and then we want to instantiate him but we first want to choose a random spawn point of it simply gonna call this underscore SP and it's going to be equal to spawn points and then the index that we are going to be accessing is going to be random that range between zero and spawn points dot length so this means that you have to be sure that you have at least one spawn point in your spawn points array or this code is not going to be working because then we don't know where we want to spawn our enemy but if you do have one well then this is going to work fine and now instead of transformed our position we simply say SP deposition and SP dot rotation and we can of course do a quick check here that says give spawn points this dot length is equal to zero then we want to debug that lag era no spawn points referenced and I think this is something we want to be doing inside of the stat method so if we go up here we can check for it that we can also check for waves being out of length and and all that stuff and I'll just leave you to doing that if you want to be ultra safe but I think this script is actually working now and let's go in and add some spawn points so you can see that a new array appears here called spawn points and we can just maximize or it just insert three elements here and this assembly of type transformed so we can make a new empty game object here and call this enemy spawn point and we'll simply reset the transform on that and we'll give it an icon and I'll simply make that red and I'm going to take this and making in it make it into an prefab by simply dragging it into the project panel and I'm going to be dragging up some of these in here so we'll just make some more so we have three spawn points and I'll rename all of these to enemy spawn point and I think I'll parent all of these to the TM objects I also have a spawn point here for the player and I think we'll just rename that too now we'll just leave that at spawn point but we have the enemy spawn points here and I'll simply drag this out so you can see them in action and now and this is hopefully the last time that we have to play test we simply need to a drag in the spawn points into our array and finally hit apply hit play and I'll maximize here turn on the gizmos it's counting down and it's spawning enemies at random points so that was basically all for this video quite a long one I might need to split it up but I hope you enjoyed it and I hope that you find it kind of understandable enough that you can tweak this to suit your own game I hope that I've made this kind of generic not enough that you can actually tweak it and use it how you want you so thanks for watching I hope you enjoyed it and I'll see you in the next video