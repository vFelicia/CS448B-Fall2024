We're rolling? Awesome! Decals! Andreas gave me this for Christmas. *laughs* (nice) Decals are a great way to add a detail to your level and help tie everything together. You can think of decals like a projector that will overlay an image on top of a surface. This makes it super easy to add details like grunge, dirt, and different kinds of weathering. You can also use it while the game is running to create dynamic effects like bullet holes. So, today we will have a look at how to do all that. But first, this video is sponsored by Skillshare. Skillshare's an online learning community with more than 25,000 q u a l i t y classes on game development, tech, and more. Let's say you want to make a logo for your game but you don't know where to start. Well then this course, taught by graphical designer Aaron Draplin, gives you the perfect introduction. Aaron is a great and fun teacher and in only 70 minutes you will have learned techniques that take you one step closer to creating a compelling logo for your game. So whether you want fuel your curiosity or creativity, Skillshare's the perfect place to keep you thriving and learning in 2019. A premium Skillshare membership gives you unlimited access to all classes for less than $10 a month. Join more than 7 million other creators by simply clicking the link in the description (do it I dare you). and the first 500 people will receive their first two months for free. Now before we get started, I just want to mention that Andreas and I were on a PODCAST! *Makes weird chicken noises and flaps wings* PO PO PO PO PO PODCAST! *Laughs* The podcast is called Game Dev Unchained and the guys who make it are REALLY cool. And we had a lot of fun being on the show! So if you wanna learn a bit more about us and what goes on behind the scenes, definitely check it out using the link in the description. Alright! Let's jump right into decalification...ization(?) *Smiles awkwardly* of things. *awkwardness continues* So the first thing that we want to do is make sure that we're using the HD render pipeline. To do this, let's go edit > project settings, and under graphics, We can check whether or not we have an "HDRenderPipelineAsset" configured. If not, you need to either set this up for a project, I'll make sure to have a link on how to do that in the description, and you can of course always create a new project with HDRP as the template. So once that's done, creating your first decal is actually insanely easy. Let's go to the hierarchy and right click and let's create a new rendering > decal projector. And this is going to spawn this box structure into our scene. I'm just gonna move it over and place it on a piece of open ground here. And right now you can see not much is happening. That's because in order to display a decal, we need to create a material for that decal. So inside of our project, let's go create and let's create a material. Let's name it something like "LogoDecal" and at the top here let's change the shader by going under HDRenderPipeline and selecting the decal shader. Now the decal shader is fairly simple. The options you're gonna be using the most is the base color, where we can input a texture, we can also input a normal map for that texture, and then we can adjust the opacity for our decal. Let's try and give it a texture here. So I've gone ahead and imported a few textures that we can play around with. One of them is the Brackeys logo, so I'm simply going to take this, and drag it into the base color slot. I'm also going to select our decal projector object, and now drag our local decal material into the material slot. And right away we can see that the Brackeys logo is being projected onto the ground surface. You'll notice that we have this wide arrow here which shows which way we are currently projecting onto the surface This means that, just like any other object, we can rotate our projector, and we see that we are now projecting this at an angle. We can also scale the projector to size it up and down, and we can do this individually on the different axes as well. And the cool thing is that if we go ahead and move this over other objects, we can see that it changes to fit onto these objects. And this applies to all objects in our scene. We can also project it onto the workbench here just as well. And if you want your decal to be more visible, we can of course adjust the opacity. To do this we go under the material, and we can just do that from here, and adjust the global opacity. And you can see just what an effect that has. We can also see that if we move this over now, its not showing on our ground That's because our ground is not within this box. If you want to show a decal on an object, you need to make sure that it's within this bounding box. So, we could either go ahead and stretch it on the y (axis) to make it actually appear, Or we could move our decal down, which has the same effect. So now that we know how to insert decals into our scene, Let's have a look at how this can be useful. So, if we go ahead and ignore our local decal here and create another decal projector, so that's right click, go rendering > decal projector. And let's call this something like "Dirt Decal." Of course we need again to create a new material for this, so we'll go to the project, hit create, go material. Let's call it "DirtDecal" as well. Again, we'll change the shader to HDRP, and decal. And now for this one, I'm going to input this dirt grunge texture that I found online Notice how in the preview here it's stretched, and also the transparent parts are currently black. D o n ' t m i n d t h i s a t a l l . If you wanna show transparency, you can check alpha is transparency and hit apply, but this is not at all needed for the decal. In fact if I go ahead and turn it off, and we then input it into our texture on the dirt decal here, and then go to our dirt decal projector and input the material into the material slot, well then we can see that it works just fine! The dirt decal is still right here. Let's go ahead and rotate it, and we can clearly see it! So I'm gonna go ahead and rotate this box here by 90 degrees to make this white arrow face towards our wall. So I'm going to hold down control to snap this, and now it's rotated by 90 degrees. We can move it over to our wall, and let's also scale this up a bit. We then move it up and place it where we want it to be on our wall. I think something like that looks pretty cool! We then of course go into our dirt decal material and adjust the opacity. So you can see just how easy it is to add grunge, dirt, and other kinds of weathering effects to your scene. These kinds of details can really help tie together objects where there are scenes, or to help break up tiling in your textures. It's just a really great tool for making your levels come together. But we can of course also create decals at runtime, which means that they're super useful for doing stuff like bullet holes. I've gone on and created this bullet hole scene, which is pretty much the same scene but without all the clutter, and I've placed a main camera that kind of faces this wall. On this main camera I have a shoot script, and if we open this up we can see that it's really simple. We simply check if the player presses the fire button, and if he does, we're going to call the fire method. Here we're going to cast out a ray from our cursor's current point on the screen, and if it hits something, we're going to instantiate a tiny hit effect. This is just some simple particles that I've created. So, just to demo this let's hit play *unity crashes*, and that was NOT supposed to happen *laughs*. *Pretends like nothing happened* So just to preview this let's go ahead and hit play. And as you can see, I can click on this wall here, or on the ground for that matter, the sphere, or these wooden planks, and it's going to spawn a tiny particle effect. However, we're not currently seeing any damage being done to these objects. In other words, we need to add bullet holes. So to do this, we are going to use the exact same method as before. Right click > rendering > decal projector We'll rename it to "Bullet Hole Decal," we'll create a new material for it so create > material. Again, "Bullet Hole Decal," change the shader to HDRenderPipeline > decal, and for the texture here I've gone ahead and found a bullet hole texture that we can use as well. So I'm simply going to throw that in there. When it comes to bullet holes, I definitely recommend using a normal map as well for the increased realism. However, since this is just to show the general idea, I haven't included one. Now let's select our projector and drag in our material, let's move up our projector here, And we can now see a HUGE bullet hole on our ground. Let's focus on this, and the first thing that we wanna do is probably scale it down. So I'm just gonna use the scale tool and make it quite a bit smaller. Something like that definitely seems more reasonable. We then go into our material and increase the global opacity. You could set this to 1, but I found that sometimes it's pretty good to just have a tiny bit of the background seeping through. So I'm gonna set mine 2.9. And that looks pretty decent. We then take this object and turn it into a prefab. So let's simply click and drag it into our project panel. And it's now a prefab. Let's remove it from our scene by hitting delete, and the only ting that's left to do is spawn this through script whenever we hit something. So let's go into our shooting script. And again this code is super simple. We cast out a ray, if that ray hits something, we'll go ahead and create a hit effect. So right underneath this line we can go ahead and create the bullet hole. And of course in order to instantiate it, we need to first reference it. So we'll go to the top here. Right under where it says "effectPrefab," we'll create a public game object, and this one we'll call "decalPrefab." Then down here we can instantiate that decal prefab, and the position where we want to spawn it is going to be the same one as our effect, which is just the point that we hit. And remember, whenever you're working with raycasts like this, it's really easy to get some info about what you hit. And I've stored mine in this "hitInfo" variable. So I'll simply write "hitInfo.point," which is the point that we hit, and then we need to give it a rotation. For this we'll use "Quaternion.FromToRotation," which allows us to create a rotation from a certain direction to another direction. And the direction we want to give here is "Vector3.up," and the to direction is going to be "hitInfo.normal." If you don't exactly know how to visualize this, I completely understand. Visualizing directions and especially rotations can be quite difficult. Just know that we are doing this to make sure that our decal is going to point to the surface that we hit. If we hit this wall, for example, we want the decal to be rotated in such a way that the white arrow points towards this wall. And to do this, we're using the normal vector which is the arrow that points out from the given surface that we hit. I totally understand if that's a bit confusing, but it should work. So if we now go and save our script, go into Unity, select our main camera, we now have a decal prefab slot. And here we just drag in our bullet hole decal prefab. And now, when we play and if we now go ahead and click on the wall here, you can see that it spawns both our hit effect as well as this bullet hole decal. Now the effect is definitely a bit exaggerated here it's a bit to large we could definitely shrink it. But it i s w o r k i n g . And we can go ahead and create as many of these as we'd like, and also hit around and it's going to work just as fine. We can do the same thing for our wooden planks over here, and notice how the decal even wraps on weird angles like this. And this is the really cool thing about using projectors for decal, is that it's going to actually wrap onto whatever you hit. So in the case that we have a curved surface like this a sphere here, we can still do it safely because it's simply going to project itself onto the surface of the sphere which is great, because if we were just using a plane with a transparent texture, well then it would start to look really weird when we tried to put that plane on something that curved like a sphere. And right now it doesn't! So, awesome! And we can also see here why using a normal map for this will definitely be great because then we will have the light actually bend to show that there was a hole here. Right now it looks a bit too two dimensional. But that's just a matter of dragging in a normal map into the slot here. Awesome! That's pretty much it for this video! If you enjoyed it, make sure to subscribe and ring that notification bell so you don't miss the next one. Also, don't forget to check out Skillshare to pick up new skills in 2019. Simply click the link in the description to get started. On that, thanks for watching and I will see you in the next video. (uhh what is this?) *making suspenseful sounds* (Jump scare in 3) (2) (1) *idk what to call that* *uncontrollable laughter* Thanks to all the awesome patreon supporters who donated in December, especially thanks to (gonna have to turn on volume for this lol) (I hope you guys liked the subtitles in this video!) (This is my first time writing subtitles and I hope they were helpful for you) MAKE SURE TO SUBSCRIBE TO BRACKEYS! ...for the support on patreon. You guys rock!