this video is brought to you by our own Metta thank you so much for donating if you want to support breakage yourself you can go to patreon.com/scishow geez thanks for tuning in at brakus so this is the recording of yesterday's monthly livestream I had so much fun and I really hope that you will enjoy it if you want to follow along with the project and maybe downloaded for yourself you can go to github.com I have a link for that in the description and the project will be there also towards the end we do a quite a long Q&A session and my girlfriend also joins the stream to test out the game with me so have fun and I hope you enjoy hello everyone to the people who have joined we are going to start the tutorial on creating a curve fever replica and this is going to be without multiplayer but it it's going to be with local multiplayer we're not going to do any unit stuff that's too much for a single tutorial and um basically and we're going to be using unity five point five and that's currently in public beta so if you want to follow along you will have to go and download that beta and I'm just going to show you how to do that right away so let me jump into unity here and you can see this is five point four or five point five it says so in the left hand corner and I've downloaded this from going to Chrome and going to unity 3d comm slash unity slash beta and then scrolling down here to unity five point five or you can just of course type in unity five point five in google and it will be the first one and you can run it like any other installer so I will also say that if something goes terribly wrong with unity which I hope it does not we will make Mac have to improvise a little bit but we'll see how that goes so um this is the project that we're going to be creating I have two players in here with a movement and this kind of snake effect and you can see how they are generated over here in the left side here how we are actually generating the mesh and that is using the line renderer and if I select one of these whoops if I let the game play a bit here and select one of them you can see that we actually have an edge Collider going all the way through here so I'll show you how to do exactly that so let's go ahead and create a new project so let's go to file and then new project and it's going to load here and I want to say save this in my projects folder and I want to call this something like curve fever replica and then we'll turn this into a 2d scene and we'll will we will disable our unity analytics that's no reason for us to include that and then hit create project and unit is going to do its magical thing where it boots up our project here and just see how did I make my unity black that is on unities paid version but I really think that with their current subscription plan there's really not much reason to upgrade to unity paid unless that you're a fulltime developer and almost working in the team I mean you can really publish a full of that game just using the free stuff so the only difference that you're going to be seeing here is really the color off of the editor cool so what I want to begin by doing is finding our main camera and changing the background color to a more soothing black they're just completely black and let's go in here and create some empty object here and we'll reset the transform and we'll call this one trail or tail or whatever you add actually let's do tail that's better and let's add a new component on to this and this is going to be a line renderer and we are going to have a lot of fun with this line renderer so let me just show you what is new with this well if we are you can already see it on some of the settings maybe so if we change our positions array here and this is just a series of points each point being a place that our line will go to so right now you can see that it's going from zero on the z2 one on the Z and that means that we cannot see it in the 2d view because it's only going in the depth here and you can see I've changed my scene view to wireframe you can also change it to shade it but there's not much to see currently so let's change back to wireframe to get this on view of it and let's change back to 2d and instead of going on the Z here we'll go up let's say on one on the wall and let's create a third point here let's go up on one on the X and one on the Y there we go and you can see it's currently a huge arm a huge line here so what we can do is just edit the width to something like 0.1 I think that's more suiting and you can already now see the difference if you were to make this inside the old editor this would look super wonky and that's because the old line renderer was really bad if you wanted to do fast turns like this it would twist in odd ways and look really really bad but you can see here it's preserving the width of the line all the way which is so nice and what we can then do is we can add some corner vertices actually I'm going to go in here and write maybe three or five I'm just going to do five on the corner and five on the gaps and that will just insert some extra vertices you can see what it's done here to round off the line and that's just going to make it look so much more nice so um essentially what we can then do is have this tail here where we then change the array of positions here so our position array and then just add a bunch of points each time we get far enough away from the previous point and this way we can get these kind of curving lines that does mean that if we will play for a very long time say we doing a half hour long session and for some reason no one dies um this positions array will be totally cluttered and overpopulated and that will slow down that game so this is not something they can do if you want to have a million players in there and want them to play for a long time but it is definitely something you can that you can do if you just want and normal like a couple of minutes play sessions top play session tops with say three to four players that is going to be just fine so um in order to actually edit this through script let's find let's actually just create a new script here let's just call this one on the tail script and it create an ADD and on there we go so let's double click on that to open it up in visual studio and we'll have a look at actually coding this and I'm just going to look at the chat here if I can bring that up and to see if anyone is um asking some questions so what is curve fever um curve fever is a very snakelike game but a bit more modern in that it's it can move in more than just these very fixed directions and um yeah some comments about my Danish accent that I'm going to exclude for the video cool so you can see Visual Studio opened up on my secondary monitor here and here we go so what we can do is just remove system data collections but we are going to be using system data collections generic because we want to store it on some things in a list and we'll also import up here system link I like this and that is handy for a few methods like getting the last element in a list so that's why we'll be importing that and we want to require component up here and the component that we want to require this of type line renderer just to make sure that we have a line renderer XM attached to the same script which is the game same game object as this script and this way we can safely store a reference to that and it's not a rigidbody it's a line renderer and we can call that just line and then in our start method we can set line equal to equal to get component of type line renderer awesome so now we have a reference to our line what I then want to do is create some kind of array or some kind of list is what we're going to be using which is basically just a resizable array so some kind of list of items um and more specifically we want a list of points in space so we are going to create a list of vector tools because it's a twodimensional game and this is going to be our points that both our line renderer will follow it's point that we have been in space and that our Collider when we added later will follow as well so we'll create this on point array here and we'll also create a public flare and this is going to be up point spacing so this is how far between we want up our points to be and we want to set that to something like maybe 0.1 units is going to be definitely enough and yeah so I think that everything there is fine so what we can then do is go down here into our update and we could basically just set a point here create some method for setting a point every single frame but that is not very efficient so what we'll do instead is we will check whether or not we're far away enough from the last point and that we want to create a new point or else it will look weird so we'll create that check in a second but let's first have a look at how we would actually set down a point so this is where we'll axe actually access our line renderer so let's start by adding our current position to our points arrays and we do that by simply pressing points add and what we want to add is our current position so transformed up position and that's pretty easy then what we can do is we can say that we want our line dot number of positions to be equal to the length of our points array so points are a dot count so basically imagine that when we start off the game out we are going to have zero points so um and then we are going to go through and is going to draw a frame you're going to be somewhere and it's going to set the first point that means that our points array will add our transformed up position and we will now have one point that means that our number of positions on the line should be equal to one and then what we can do is we can see say line that said position and we can use an index which is going to be points count minus one because if we have one element and want to access that element it has the index of zero and so one minus one equals zero and again if we have three elements once two we want to access the last one that's going to be an index of two so we go to minus or three minus one equals two so that's why we have to put the minus one in there and of course we just want to use transform a dot position again here cool so now we have that in there and we also want to make sure that we on our line here or our that we actually instantiate our points array here so at the very beginning we want to set up points array or our points list equal to a new list of vector twos and then we can start off the game by setting our first point so now it's going to set a bunch of points and if we go in here you will see that happening so if I hit play and try and move around this tail here you can see that it sets a bunch of points but this is really Rea too much you can see our positions array just going completely nuts and once it goes this far you can see some weird behavior starts happening so let's control this a little bit and we do that by going in here and adding a simple check so all we want to see see is whether or not our distance so we use vector three distance between the last point and our current position so we do our points that last and this is a function that is only available to us because of system that link between our last point and our current position if that is greater than some number which is going to be our point spacing well then we want to set a new points so always saying here is that we only want to set a new point in case we've moved far enough away from the old one in order for it to make sense and we do that by checking the distance between the last point and our point and seeing whether or not it's greater than the amount or the distance that we want to see and that is our point spacing so if that makes any sense to you we should now see that when we hit play here it inserts just a single one right at the beginning and you can see here in the position to rate it has only one and then when I start moving it we can see it starts to add new points so that's awesome whoops and I've did something weird with the mouse mouse there but you can actually see it working it will or don't also notice that it just look to smooth when it adds new points here but that's okay because the front of our line here is going to be covered by the head of our player we're going to create a little player head there so that is actually not going to be noticeable so how about we now create our player head or actual snake and how about we also make some betterlooking graphics for this line here so let's start by maybe making this line look a tiny bit nicer and one thing too one way to do this is by actually inserting a material so the reason why it's pink right now is because the material array is completely empty and just like any other object our line needs some way to draw on colors on the scene whether or not to use lighting if you want a texture or just a solid color so that's what we're going to add and this is where this is where I'm going to just have a look in the chat to see if you guys are right and are able to follow along here so um you see here um do I work with programming yes that brakus is my job so I definitely work with programming and yeah nothing too pressing as far as I can see so I think we'll just go ahead and continue cool so um what we want to do here is go down into a project and right click and go create material to create a new material and this is going to be our tale material so I'm just going to do tail matte and we can take our tail here and drag our tail matte into this empty material slot you can now see it turns gray and that's because we're using this standard shader what we in fact want to use is the sprites default shader and this is just going to draw us some our color in this case just told white without applying any lighting and because we don't have any lighting on in our scene so we just wanted to draw a flat color and you can tint this color on the material but we're not going to be doing that because we want two different players and so we want to change the color independently for each player and therefore we want to go to the color parameter here under the line renderer and this is in fact a gradient so we can go in here and change the color on one end and have it like smoothly transition from one end to another and we can do the same with the opacity so this is actually super fun to play around with and if you want some very funky looking snakes I definitely recommend you spend some time in here but for now I'm just going to undelete the last key here to make the color totally solid and then I'm going to edit this first parameter here and we're going to make it some kind of light cyan blue like this very lazy and I think that looks pretty nice it's it's what acting the curve our curve fever definitely uses and more water there all right cool so now we can cover this up with a head to our snake but first let's save our level here and this is just going to be main level and I just hit ctrl s or command s to do that I also go to file save scene and let's create a new object for this let's create and to the object sprite and let's reset the transform on this and this is going to be our snake or our head you can call it whatever you want actually I think I'm going to call it let's just call it snake and um we can then choose a sprite for this and I'm just going to use the default unity building an OP sprite but you can of course just serve search for any kind of circular sprite on the web or create one yourself but I just thought this was pretty fitting and wanted to use that and I don't know about the Kali huge you could choose a color you could just go completely white I'm just going to go white with this but of course s always spend more time on the graphics than I do they are super important so now we can create a script on our snake here and to make it move however what we want to do is of course link up our tail to our snake because currently we are using transform top position on in side of our tail script here and to actually move this line around however if we put our tale as a prefab or as a prefab as a child of our snake on things should immediately work as soon as we move our snake here we should see the tail updating but this is not actually going to work whenever we create an edge Collider for our tail because our edge Collider will move along with our tail that doesn't have these worldspace positions that is relative to our tail so we actually want our tail to stay in place so in order to do this what we'll do is we'll go inside of our tail and we'll create a reference to our snake so will go public game object and call this one snake or snake head or whatever and we'll simply go on and that's this is not going to be a game object this is going to be a transform and then instead of doing transform that position we do snake that position there and down here so snake that position both places and that should just fix that right away as long as of course we remember to drag our snake into that slot so now when we hit play nothing happens when we move our tail but lots of stuff happens when we move our snake that's awesome and I can see the array going crazy here and the reason why is we need to change it one more place and that is up here so we need to do snake that position there as well in order for this to work and now we should see that when we move around the snake here things just work and I think it's super exciting to see how unity draws on the geometry over here and I actually think that this works pretty well in fact if you want to create a painting program well here you go that was pretty easy so that's pretty cool and um let's actually create some controls for our snake so um again looking in the comments here because I've got some requests last time to look at more comments how old am i I am 19 years old um so are we making a snake game yes we are making a replica of curve fever um and I think we can just move on here circulate um awesome so let's create a new script for this so let's find our snake let's hit add component and let's call this one our snake or you can do movement or whatever he create an ad and let's double click this to open it up in Visual Studio there we go and you can see up here that it imports systems are collections and system data collection start in Eric we're not going to be using those in this script instead we are going to be using updates and we are not going to be using stock and we are also going to be using a new function called fixed update awesome so the idea here is to have the snake always move so at any time we want our snake moving forwards on at a speed that we determine with a variable so let's start by creating that speed bear one this is of course going to be a public float and we are just going to call this one speed and maybe the folded to something like three then we'll have the ability to rotate this snake and we'll do that using another variable another public float and this is going to be our rotation speed or our turn speed or whatever and this is going to be a lot higher this is going to be something like two hundred and yeah so what we'll do is we'll use our update method to capture input so we can go in here and say input dot get access wrong and the reason why I'm using get get access raw is because we really don't need any smoothing on this movement and get access raw will make sure that we don't get that if you want some more slow and clunky controls but that might allow players who are better to do more finetuning you can go ahead and use get access but I think that get access raw works better for the game and what we'll do here is we will get the axis called horizontal and what we will do with this is we'll store it in a private variable up here and we'll call this one our just let's just call it horizontal and defaulted to serum and then we can say here that horizontal equals that input.getaxis and we can then use this to move so let's begin by making our snake move forward so in order to do this we want to say transform dot translate this is going to allow us to move using this translation which is how far we want to move on the XY and Z and in our case we want to move vector R 2 dot ops so we want to move upwards which is following this green arrow that's going to be our steering point that is going to be a forward point for a snake and we want to do that using our speed so multiply that with our speed and multiply this world with time fixed Delta time to make it independent on the rate of our fixed update so our fixed update runs at a fixed rate that means that we have a fixed amount of iterations over this loop each second and on that rate it's on stored in this variable so this is the amount of time since the last time this loop ran and we're going to multiply that in so that if one computer runs on a different fixed rate than another computer that is going to be evened out by multiplying this variable and therefore we are going to move and at the same pace on all computers cool and we want to orient ourselves using space dot cell so we want this movement to be local and not on the world because if we always moved up no matter of our rotation the game would be pretty boring we want to move up and then if we rotate we want to move towards the new up cool and so that should work already and if we actually save that and hit into unity we should see that our snake just moves up so that's perfect and all we really need to do now is use this horizontal movement here too as a rotation so we do transform dot rotate and we basically want to rotate around vector three dot forward so if we have a Logan I've seen here switch to 3d mode here you can see that we have this blue zaxis and this is in fact our forward axis so when I say that we want to rotate around this what I mean is that we rotate this way here so in these directions and you can see that is exactly what we want to do is rotate around the z axis and how much we want to rotate is going to depend on the exact same things as it did up here so it's going to depend on our our rotation speed and time dot fixed Delta time Cole except this will not work because if we save this now we're just going to keep rotating here you can see that we're just rotating in a circle look a perfect circle isn't that nice if only my math teacher would have been able to draw this I should have shown him this program so um this is just going to spin infinitely what we want to use in order to orient where we want to rotate is our horizontal variable here because input.getaxis raw gives us a value a float variable value between minus 1 and 1 0 being no movement minus one being to the left and one being to the right so what we can do here is we can multiply that in as well down here so if we multiply that in to our multiplication chain here that means that if we press to the side things are going to be or to the left we are going to reverse this to the right we're just going to let it be and if we don't change or if we don't press any buttons meaning does it this will be 0 we're going to rotate zero degrees there you go so it's that easy and one thing that I want to do here that I only know because I've done this before is that we want to put a minus in front well as our controls will be reversed but if you want to have reversed controls that's all you have to do is change this little minus right here and now we should be able to jump inside of unity hit play and accurately move around just like in curve fever so I actually think that this is kind of exciting and it's really fun to play around with it feels awesome with this tail being rendered right after you and I they think that we can easily bring up the rotation speed to something like 250 that works a little better makes it some somewhat harder to move around but also feels more fastpaced so you can play around with these variables and it's very easy to add pickups to this you simply change the speed of rotation speed if you want to do opposite movement all you do is you put a negative sign in front of the rotation speed and there you go you have flipped the direction of movement you can do all sorts of stuff if you want to clear out the tail here all you do is that you set the position to right here or your own list inside of the script you just simply use dot clear it will clear out the entire array and it will start from new so you can very very easily implement all of these different powerups that are in the original curve fever but which are but I don't have time to really implement in in this stream so I'm just going to see here how the chat is doing so um thanks for all of the people saying that you like it I'm really glad that you do I'm trying my best here and um let's see here um not too many questions that might mean that I'm doing something right ok cool so right so will I ever do a csharp scripting tutorial this is a csharp scripting tutorial it one dedicated to a csharp I have a series on that if you mean if I'll ever do another one I definitely hope to but I'm not going to do one until I have some subject that I really think is necessary and I really did all that I wanted with that series but I'm not closing it out either because that's definitely more to explore with the csharp language but the original thought was just to kind of have it be a introduction to the language with and it really turned into everything you need to know to create a pretty good game actually so I already went further with it than I thought I would but maybe I want to do more that's kind of unknown so how am i doing I'm doing great can I show till that C is code yes it's right here there you go what I'll do is I'll put this up on YouTube if you want to see any of it and I will also um make sure to upload this project to probably github just as we did with the last livestream so everything will be available and of course guys I cannot answer it every question right now because things are crazy but at the end we'll do some Q&A so don't worry about that what if you make a game developer starter kit tutorial series on I'm not exactly sure what do you mean I have a series called make a game that goes from the very beginning of development like from installing unity to actually getting something in the scene but you could definitely use that as a starter series it's exactly meant for that so you can use that um so the set point method works like this so this is how we add points so we add a point to the array using snake type position we then set the amount of positions on in a line array to how many positions we have stored locally and then we set the last position in that array to snake that position so there you go that's what we're doing there what's my name of the theme in Visual Studio it's mono Kai I've edited a bit but I will just put that in chat it's mono Kai there you go you can download that and import it into your projects as well we all know that if there's something more important that than skills or anything it is our programming colors it's what makes us look professional so make sure to get that right so yeah I think we're just going to continue the video here so um the next thing that I want to do is add in some collision on detection and then after that we'll add in another player and then maybe some boundaries to a map so Adam at the moment here you can see that no neither our snake or our tail has any kaleidos on them whatsoever so let's go ahead and change that let's begin by adding a Collider to our snake so we're going here and hit add component and we'll create a physics 2d and circle Collider now go and let's shift back to shaded mode here and let's bring in the radius just a bit we definitely don't want to have this be too large and one nifty trick that I'll show you here is if you are editing something some variable like dragging in here in unity and then hold down alt that will allow you to finetune so that's a really handy shortcut that I use pretty much all the time just holding down alt and you can finetune any number and that looks pretty good and I'm just going to shift back to 2d mode here makes more sense and then what we can do is turn this into a trigger because we're not going to have any unity physics in here we are going to do all of the physics ourselves I mean we've done the movement independent of the unity physics system and we're not going to have any flying objects or anything like that so I really don't think there's any reason to use it however whenever we are moving and collided remember to attach a rigidbody 2d anyways and then just mark it as kinematic and you can see here how this has changed in 5.5 there's a lot of cool stuff in here I'm not going to go into any of it right now but that is definitely something that you should check out overall I'm really enjoying this beta I think it's the best one that they've shipped for a while there's also a bunch of improvements on the particle system that is super exciting so um yeah make sure to change that to kinematic so that it won't act on its own its own it will only act if we tell it to and there you go so we're still moving around the scene and now we need to do now is add a Collider to our tail so how do we do this well um one way or actually the best way I would say is adding a component here on the physics 2d called the edge Collider and the nifty little thing about the edge Collider is that it works exactly the same way as our line right and that's awesome because basically it just has an array of points just as we have up here um that we want this line to go through so you can see here if I set the same point as we have up here so I create three points here and we have a 0 1 we have a 1 1 and a 0 0 you can see now that our line goes through there we have this Collider it might not be too visible on the screen and this on the stream there I can just maximize here by the way maximizing a window shift space you can do it with anything in unity it's super handy so you can see that it just goes through there so all we really need to do is modify our script a tiny bit to actually change these points so let's go into our tale let's require new component so require component type of and then we do and we're going to call this one edge Collider 2d and we create a new private variable here so it it's Collider 2d and this is just going to be our coal for Collider and up here we want to set coal equal to get component of type edge Collider 2d cool so that allows us to down here change some things about this Collider so if we don't do coal dot I believe it's just points here we can set that equal to our points list and all we need to do is take this here you can see and convert it from a list into an array and to do that we just use dot to array of type vector 2 and then round it off with some parentheses so that is really really easy to do so we just feed that right in there one thing that you will notice is if we now hit play we will get an error right off the bat here and other than that things are going to be working so I will just make sure to play the game a bit better here so let's just play the game a little bit we can pause the game we can take a look at our snake here and you can see out of our at our till and you can see that we have this line at a pretty good resolution actually so that's pretty pretty damn accurate and of course we get this error so it says invalid points assigned to 2d edge Collider and the reason why is that the first time that we call this set point we only have one point and the edge Collider does not like to have less than two points because well frankly it makes sense you cannot make a line out of a single point so that's why it throws out an error here and you could just ignore it because it doesn't really have an impact on the gameplay it doesn't stop the the game or anything but it looks bad to ignore stuff like that so what we're going to do here is going to add it or just move this line up here actually we'll do that in a second and I'll show you why but what we can do is just add in here an if statement where we say that if points dot count is greater than one so we only want to do this if we have more than a single point inside of our list and that should get rid of that error there and everything else should be working just fine cool and next why I wanted to actually move this you will see in a moment and it has to do with colliding with your own tail so if we now take a look and add our of course we want to change this to trigger that's important at our snake script so let's open up a snake script in Visual Studio oh and we are going to um let's see here right so we are going to add a function void on trigger enter to D and of course this is a callback method just like start or update by unity so you need to name it exactly as I've done here and basically all it does is that whenever we hit another trigger or hit another Collider with a trigger this is going to be called and it's going to give us some information about what we hit and that information is going to be of type Collider 2d and it's going to be let's just call it call for Collider you could also do call info let's just do call and it's really important that you put 2d here both places let's just call this call and what this allows us to do is for example debug deadlock what did we just hit so the name of the collider that we just hit so if we do this now we should expect that nothing happens until we collide with our tail but what really happens is we collide with our tail a lot actually we collide every frame so what is happening here for each time we'd make a new point at least so what's happening here well the reason why and you will see this very obviously is if we pause the game zoom in on our snake head and then select our tail you can see that our edge Collider and again this might be hard to see but we have this green line going here and it actually moves all the way in here meaning that we are colliding with the very tip of our tail each each time each frame so how can we change this well it's really easy what we do is we simply allow ourselves to ignore that first point in the array so we just don't add the first point of on our with that I should see say the recently added point will just not add that to the array so we'll go in here we'll move this code up here and let me walk you through what's happening so we are on far enough away from our last point that we want to set a new one we go down here and we say if we have more than one point we want to add some points to our Collider you're going here and add what we currently have then we add a new point and then we add that to our line so we will draw the tail all the way up to the tip all the way up to our head but we will not actually draw that last point that we just inserted before the next loop so if we now go here and hit play we should see this fixed and actually we had two collisions there of the bad and I believe and the reason why is how we set up a circle Collider here so that's just or on our edge Collider here so let's just take these points here change them back to two and move them way off so let's just do on nine hundred nine nine nine nine nine nine nine nine nine nine nine okay that's just to 100 on those there you go just move them completely off the scene and that should fix that error there we go so if I now hit play and zoom in you can see that our Collider here is only drawn on to the previous point and therefore we'll never be able to touch our head however if we then go in here and collide you can see it says tail each time you cross awesome so what we can do with this is of course make some logic for well stopping the game every time we hit a tail and this is well just have a look at the chat again so let's see here if everyone has some have some questions and that requires more elaboration I definitely recommend you to go to the practice forum because there's well a whole place where you can submit your code and your project files and everything and people are awesome in there and I will also MIT video point out that this live stream is made possible by the awesome supporters over at patreon so if you go to patreon.com/scishow can choose to support me with a monthly donation of any amount and in return you can get some cool rewards so if you want to see more of this stuff and that is really the way that you can help me make it so thank you so much to people to the people who are already donating I'm having so much fun doing these live streams and being able to do this fulltime so that is freaking amazing so let me see what is going on here umm funfair there you go umm yep it would be awesome if every time the game started a German with the deep voice said the name of the game could I do that octo they're cool I don't know why but I think like every German person sounds really angry I think I've watched like too many world war movies why not move position instead of translate you can definitely use move position but that's really no reason to unless you want it to be part of the physics system and with that I mean that if you want to do like if you want to do collision detection while moving which we don't want to do we only want to do it when we have moved or right before moving so if you want a Collider to actually be able to stop you in your translation then you would use a rigid body move position but we just want to move no matter what and then we will handle what happens if we actually collide with something and that's why we use transform dat translate and I'm sorry to all of the German people who had just offended I really did not mean to do that and the tail is made up of a bunch of arrays not a bunch of arrays it it's made up of one array with a bunch of points in it that's correct but you can really limit the amount of points especially because unity is doing such a great job of smoothing the curve and if you want to do even more with this you can use Bezier curves and get a maybe pick up an asset on the story or learn the math yourself which is an awesome way to blend or do these smooth curves so that's something you could check out and now I think it's time to kind of continue this video we're getting towards the end of it so that's awesome and again stick around because at the end we are going to do a Q&A and we are going to advise invite Sophie back onto the screen as well so it's going to be a lot of fun and you don't want to miss P your time I say even more stump stuff when it's beer time who knows what nationality I will offend next stick around to know or to find out cool so um what we're going to do now is um maybe add another player so let's go in here and this is really really easy to do all we want to do is create an empty object reset the transform and this is going to be our player and we can then take our tail and our snake and move those under our player because both of them have well if we just Center our player it's not going to matter because all of the positions will work out so what we can then do is take our player here drag it into a project to turn it into a prefab then duplicate it and rename the first one to player one and the second one to player two and that should be fine and then we can maybe move this over so our first snake here if we focus in on this we'll start at a position of two and actually let's do negative two native two and two and we want this to be facing downward so let's rotate this 180 degree degrees on the z so that it will move this way when the game starts our second snake here is going to start ad 2 and then negative 2 on the Y and this is going to be moving upwards when we start the game again a super awesome improvement to this game would be spawning in these players and then having them spawn at random positions just make sure that they are a bit further away from each other that would mean that would make the whole thing feel a lot more random and give more variety to your game so that's one thing that you can definitely do then what we'll do is we'll take the our first tail here and just leave the color but the second tail we want to change the color and let's see if we can see that updating currently the two tails on top of each other so what we'll do is just disable this tail really quickly and then edit the other one here and I just want to remove the last part here and change the cool the color here to maybe an orange color could be pretty cool something like that I actually really like the color here and then we can reenable the other tail as well and you will notice that these two players should actually be working out so if we the play here and move around they will move around and they will do so ah but they will um oh there we go and you can see the collision works for both of them so they will move around and they will do so just on a mirrored axis that's fine if you fit find that that's funny but that what we will do is we will map them to two different parts of the keyboard so I want to do this let's go under edit and then project settings input and let's open up the axis here and we can find the one called horizontal this is the one that we are using you can see that there's also a horizontal down here but this is for handling joystick input and we're not going to be dealing with that at all but you could definitely use that as well if you want to allow for using a joystick so in our case here the name is horizontal and we have a negative button and a positive button and this add the left and right arrow keys however it also allows us to use a and D so let's split this up into different ones so let's delete a and D from this let's create a new one by simply duplicating the array element and calling this one horizontal two and then instead of going left and right here we go a and D so now we have one with left and right and we have one with a and D and now all we need to do is inside of our script for our snake is add a public variable and this is going to be a public string and it's going to be the input axis and you can put a name there but I'm just going to do input axis and it's going to default to horizontal and then we can go into unity oops of course we need to put our input axis down here no use hardcoding it when you want to use the variable so input that down there then we can go into unity take our player to here and find the snake and then we can input something else here so instead of horizontal we can now input horizontal too and that will now be wired to that input axis so this is a allows us to a play and control them completely separately which my brain for the life of me cannot do Jesus Christ this is hard but you can see that the collision and everything is working awesome mmm so on the very last thing on that I kind of wanted to do in this game is have a game over I want to have some walls because frankly now you can just go off the screen and then that way you can like you can never lose frankly and I also wanted to show you how you can maybe check down here whether or not it is actually a player you've hit so that you want dice a if you wanted to add pickups to your game those wouldn't kill you that's kind of a good idea to not have them do that so let's actually do this so let's create the game over state so in order to do this let's create a new script on a new empty game object so reach set the transform that and let's call this one the game manager let's add a component called game manager hit create an ad there and let's open it up in Visual Studio there we go and we want to use none of these and not none of these and then we can have a public method in here called end game and um this is going to end the game so we're just going to write debug lock game over something like that and you could of course display what player has lost and stuff like that in a moment we'll reset the scene but I really encourage you to add some UI to let the user know what's really going on but for now we'll just throw a debug deadlock there and then we'll call this from inside of a snake so here we go if something hits us we'll go if collider tag is equal to and then we can go like killable or a death object or whatever so you want to add some kind of tag for all of the objects that could potentially kill the players so kills I don't know you can add whatever you want you could also have different tags so we could have something like a player tail and we could have something like a wall and have their happens different stuff if you collide it for now I'm just going to add a tag something like kills player and then if the object is tagged as kills player will then find our game manager by going game object dot find object of type game manager and again whenever we do this sort of stuff I encourage you to use a singleton pattern or some way that's a bit better because finding an object of a certain type is a very sloppy call and it is taxing on the computer so if you want to check out how to really do that you can check out one of the tutorial series so pretty much implement a single ton in all of them at least in the 2d platformer course and in the multiplayer FPS course it will definitely see me do that but maybe the 2d platformer of course is the best place to go if you want to see stuff a bit more advanced programming patterns and stuff like that so find game object of type game manager and then of course because we made this a public method we can then go in game and it's going to end the game right away awesome but one thing that we do want to happen because we might have a slight delay on when the game ends is to have the player who collided with the other player and of course now we need to tag them so let's find our player one and two tag their tails as new tag here and we'll create a new tag to the list cold and it was a kills player I believe oh I doubt myself there you go kills player and of course we need to go back in here and actually tag that there you go and now we can see that if we play and I run into one of the players too it just keeps going it says game over and then it just keeps going so on what we'll do is we'll just in here change our speed to zero and our rotation speed to zero as well so that will just make sure and I'm actually going to do this right above the other hole here no particular reason I just find it a bit clear to do the local stuff first and then go to other objects it's just an OCD thing really so now you can see that I can hit the guy here and he will stop moving and the other player will not stop moving so if we go in here and hit play the other guy will continue there you see awesome so on the player who dies is pacified and then we can go into a game manager and I want to add a slight delay and whenever we talk about waiting inside of a method adding some kind of delay what I'd like to use and what you should use is a kuroh team so we go up here import system dark collections generic not not generic just system dark collections and we go down here and create an i enumerator and this is the Kuro team and we call this the play end game animation and I'm not going to have any animation in here for now we're just going to wait I'm going to throw out a debug deadlock and then just wait I'd really encourage you to create some UI that comes on the screen says this player one persecutor play again or just plays again on whatever just let the user know what's going on but for now because this is of course a limited amount of time we have I also want to do the QA and we also have some walls I'm just going to write game over here and then we will wait a certain amount of seconds so we'll do yield return new waitforseconds and in here we will input the amount of seconds that we want to wait and our case we're just going to wait one second and then we can on transition or reload the scene so we can do using Unity engine dot scene management and down here we then go scene manager dot our load scene and the scene that we want to load is the currently loaded scene so we just want to reload that scene and we do that by getting the currently loaded scene by going scene manager dot active scene or get active scene there we go and then we want to use either the name or the build update in build index of that scene and I'm just going to use the build index there we go so if we write that out and hit play we should see that if one of our players dies it waits one second wait something is not working here and the reason why is of course we need to call this method so you can't just go like this because it's a Kuro teen instead we have to do start coroutine and then input the method and there we go close that off make sure you have the correct number of parentheses that should be four in total and then we can hit play and let's now see if this is working there we go game over and one second after it restarts so we have the very central logic in play so now it's as easy expanding the level we're just going to make some walls but you can really go crazy here and add all sorts of stuff and that the player should avoid or pick up and stuff like that and add some you eyes to let the you some UI to let the user know what's going on a menu a pause menu stuff like that and all of this stuff is something I show how to implement in other tutorials again if you find that this is the correct kind of level for you kind of level of difficulty I definitely suggest you check out the 2d platformer course a lot of the stuff that you see here will be repeated in there but with a lot new stuff as well and I'll show how to create menus and all that stuff that this game could definitely need after we finish up the livestream so just wanted to plug that I think hopefully I'm allowed to do that and without further ado let's just add the walls so I can get on to answering your questions um I think there's no reason to stop now we're so close so let's open up Photoshop and I'm going to use Photoshop you can use anything really doesn't matter you can use a white square and build it inside of unity you can search for this you can use skimp whatever I'm just going to be using Photoshop and I'm just going to create a new I don't even know what it is canvas or whatever a new file and we're going to call this on walls and the pixels here we'll just have it be 1080 by 1080 that's definitely too much but we'll just use that and double click that call it BG let's remove it let's now create a new square shape here drag from one corner to the other hit ctrl T just drag this to make sure that it snaps to the edges hit enter to apply that transformation let's and then instead of having this be filled out with white let's remove the fill and instead add a stroke so I'm just going to add a red stroke here so you can clearly see what's going on and I in fact i think this stroke might be pretty good excuse me so we can maybe make it a bit tinier something like 10 points I think it's going to be fine and let's make this completely white so that we can control the color inside of unity because whenever you have something totally wide it allows you to tend it into any color if you have something black you can't end it at all if you have something red it's difficult to tend it in opposite colors such as green it's just going to be a weird brown because of the way the colors are added together so whenever you want to change stuff inside of unity just make it white and you can do it inside of unity so let's now save this and I'm just going to save it directly in as a Photoshop file and that's going to work fine but you can also export to PNG not jpg because you want transparency here so let's go into projects and find our curvy replica assets and this is going to be a walls okay and there we go set the yoga and then we can find a wall subject down here and set our pixels per unit to something like 120 yeah so that is absolutely perfect we can maybe go 115 even yeah just make the map a tiny bit on larger and are not all we need to do inside of unit itself is select the walls object and add a polygon Collider to this and that just makes sure that unity will automatically fit a Collider onto that and we will make sure to tag it a skills player as well if you want to have the functionality where some player teleports from one end of the screen to the other so the player can really just go through the wall and will come out on the other side that's not something we're going to be doing today but that is definitely possible for what we are doing what I would then recommend is you having multiple line renderers and instantiating them in so that whenever you want a line renderer to end you just stop putting in more points in that one create a new one and then start putting points on the opposite side of the screen and you can of course just slap the position of the player over to the other screen but that is a bit more complicated and frankly would take some time to get working so it feels really nice so um today we're just going to make the walls kill the players and I think I think in fact that this is working now so one thing you will notice is that we can get multiple gay mobile screens here so you can get two ones and that's not something that we want so inside of Visual Studio let's just correct this by adding some kind of private boolean variable and by the way the reason why I write private here it's just a habit you don't have to do that you can just write bull this well I just like to be very explicit with what I'm doing and sometimes I do it in a tutorial even though I haven't done it any of the other places don't tell anyone there you go so private ball and we will call this one has ended start by setting that to false and then if the game ends here we'll say has ended equals true but we will only do this if we haven't ended so if has ended we just want to return out here there we go so that should make sure that we only end the game once so we play now and go in here you can see only one game over the other guy will stop moving as well but we only get one game over coal all right so that's pretty much all I wanted to show in the stream we made it through that's amazing so I think it's kind of time to invite Sophie Bob onto the screen come here and and we should test out the game since we are creating a twoplayer game say hi say hi all right let's try that again okay so this is the official one I just have to get the control thing you can see that's what happens when when I open a beer man make some space I forget everything yes no I'm not good no you can say Carl you can say whoops that works sure do want to do it what a wuss okay let's do this I'm gonna yeah again I'm orange she's sayin let's do it if you go one more time over I just say if this was acting in their powers and stuff I would definitely yeah you would kick my ass I know awesome thanks for playing so um I'll switch over to this UI you can keep sitting if you want you could you could also change over whatever suits you and we'll do some questions how about that so first of all cheers everyone it's beer thank you yes pretty good so that when will um yeah so come with all of your questions personal questions or about the project or whatever and we'll figure something out let's see here let me see so much stuff here ah I'm just scrolling through to find is there big difference between csharp and C++ yes that's kind of a big difference in at the same time that's not um they're both objectoriented programming languages they're both both ARM based on C so that makes them very similar but C++ needs you to do a lot of stuff that csharp doesn't that also allows you to do stuff that csharp does not but it you definitely need to be more careful with doing stuff like mimic memory management that's something that csharp does on its own on the garbage collector you have to be careful with that stuff on single spot so you get a memory leak and by no means that C means the C++ expert but in average you have to write more code to get the same features working do I know any Swedish no I do definitely not know any Swedish I suck at Swedish and it's funny because people always expect like Danes and Swedes to understand each other but every time a sweet ovince it smells like Oh like what I can redo English or something yeah yeah it's the fiercest I'm the only one who doesn't but alright why would your colors of the lines be grey even though you've set the color so I'm just going to switch into unity here and there are a few things that could allow that to happen one thing is if you have set the gradient wrong here make sure to delete both ends here so that you only have a single one and make sure to set the color on that make sure to also have the opacity the Alpha here set completely all the way up to 255 and finally on your material here the material you add up here make sure that's only one and that the shader on that material is set to sprites default with a tint of completely white there you go those are all the things that I can kind of think of that could go wrong and what about German I had a little bit of German in school but I was embarrassingly bad so I am NOT going to speak anymore German I'm sorry I am Danish yes you're also Danish but live in France that's cool I've never lived in France I've been to France that was fun where can I start learning to create 2d sprites environments players NPCs I'm really new a noob when it comes to game design alright so if you want to do like 2d graphics it's really I know this is annoying to say but 2d graphics is one of those things that are pretty easy to get the basic stuff you don't need many tools to get started but you need so much practice when it comes to like making things beautiful because it's such an artistic platform and it's frankly one with some very simple tools I mean it's just a pen instead of using a paper and pen and paper you're just using your mouse there's really not much of a barrier there between what you want to do and what comes on the screen but it would definitely recommend just practicing a lot I would recommend maybe if you're just starting out to do some pixel graphics pixel art can be a bit less frightening because you don't have to know as many techniques you just have to kind of fill in the holes actually they have a acid store package called UPA toolkit where you can download that and you can do pixel graphics inside of unity but you could also use some internet tool or Photoshop or if you're just starting out I like Photoshop a lot but if that is kind of with not within your price range is just fine I would recommend not watching some basic tutorials and then just get going try and create something and very quickly import it into your game and try and see if it works because making something look good is not necessarily the same as making it look good once it's in the game so that's kind of all I got I'm by no means a grade 2d artist um awesome so uh yeah do pix a lot if you're a beginner I totally agree that's a great place to start but it really depends on what you want to do I don't think that's like one thing to do um what was my first game and first language oh that's that's a hard one to remember I'll have a sip yeah think so so actually my entire I've been making games and I'm doing stuff on the computer since I was little so one of the very first things that I did I believe that was in Visual Basic and it was so old and so bad that I don't even want to talk about it then I begin to use the blender engine quite a bit once it was very young and I used it to actually actually use the internal engine to do a very simple a cube game where you would avoid some cubes and other cubes would fall onto you and it was kind of fun but sucked and then I transitioned over to unity because I wanted to do a game called your game and the idea was it was going to be an iOS and iPad application I don't initially an iOS application because the iPad wasn't fully announced at the time and what I wanted to do was just have the player be able to create small levels inside of the app and have them experience what it's like to be a developer but like with a very small entry barrier and very small learning curve and that's why I started to use unity actually and that's also why I started the brackish channel is because I thought well I have no way as a totally young developer to get this out into the world and let people see um what's it all what it's all about so I started the tutorial channel kind of to get people to recognize the name of Brett keys and to pimp out the game and then I the game didn't turn out too well and I thought that during tutorials was really fun and so I just transitioned over to doing that and exclusively that um but of course I've made the game since but that has always been my main focus since then and that's I don't know five six years ago all right so what software do I use that's an extremely vague question I use so much software um I used unity I use Visual Studio I use Photoshop Adobe Audition Adobe Premiere okay I'm going to say what I actually use them for Photoshop for 2d artwork some vector graphics illustrator for only vector graphics Adobe Audition for recording some sound OBS for recording everything like now and for streaming and stuff like that I use Premiere Pro for editing After Effects for editing more advanced stuff if you want effects and stuff like that and I can't remember all of the other ones I use source tree for syncing stuff through github and a variety of other programs I'm really a software nerd right so let me see here will you continue the survival game series so the survival game series is currently in a kind of annoying State and I will have a sip of the beer here the survival game is currently in a kind of annoying state because um I feel that I didn't finish it I didn't write round off the series probably but I also got to a point where I didn't have too much fun making the videos because I wanted to start other projects and people were really asking for a lot other stuff and not so much for more videos on the series and so I stopped with the intention of returning to it for a while and now it's just gotten to the point where those videos are so outdated and so many of them are created at a time where I didn't have as much as experience as I as I do now and whenever you kind of evolve a certain develop brand as a video maker you look back at old works and think what was I doing and I think that all the time when I look at that series so it's kind of when people ask me about it I just do this I just turn away I didn't hear that don't tell anyone so yeah but what I want to do is I definitely want to address it at some point I would like to do that but I don't think that I'm going to return and spit out more videos because they're just so old and I would have to redo the entire series if you like to make it something that I was really proud of but if a ton of people request me to of course I'm going to do that so it's really on you guys to request it but it's really not what I feel like people want to see right now so it's all on you so how to start in 3d design alright so 3d design is something that I'm really not good at so just for the disclaimer in there I've used a bunch of different software whenever it comes to 3d because I'm so bad I always thought well the software has got to be the problem and it never was I've used cheetah 3d I've used a blender I've used Maya 3dsmax Mudbox ZBrush I even used what was it called wings 3d I knew a guy I know a guy who is really fun of that software even though it's kind of wonky um and I've never used sketchup but a lot of people are really like that and so what I would recommend is just picking up some software have a video called what modeling software to choose something like that it's on the channel just search for modeling software picking up one of those and just keep at it I think becoming really good and in one of those programs is some is one of the best things that you can do so just pick one stick to it and again practice a lot find some basic tutorials on it and and just go from there and as always whenever you want to do 3d modeling stuff like that just as with the 2d try and put it into your project try and integrate it into some kind of production pipeline to use a fancy term because if you're just creating the models for yourself you're going to be disappointed when it doesn't work when you want to build a game so just try and and and bring things into unity and play around with them and you're going to have a lot of fun alright so let's see what else do we have here um please continue the survival game series all right I have noted your request why did you choose unity are not Unreal Engine have you ever thought about switching to unreal after it became free I've never thought about like switching to unreal I mean um the thing about game engines is and really any technology when it comes to power in your game or it comes to making good assets or whatever it's all about choosing what you find suits your projects so um what you want to use what software you want to use is a question of what do you know and what are you able to learn and what suits your project it should never be about what software is just superior to the other quiz or a period it should always be a matter of what do you want to achieve with your project what are your requirements how large is your team so if I was in a team of maybe five to ten people more towards ten I would definitely pick up unreal and I would play around with it of course depends on what I wanted to make if I wanted to make a 2d game put it on mobile I would not use unreal if I wanted to create the next Unreal Tournament I would probably use unreal so it really depends on what you're going to do with it I think learning both is a great idea and I might do some unreal tutorials at some point but I really think that my target is primarily new developers and developers who aren't necessarily part of a larger team and I think in general that unity is better suited for those kind of people so that is why that I have such a love towards unity and so many other smaller reasons as well but really choose what you want to use and what suits your project while I'm rambling more more beer you'll join my team really appreciated I will get in touch if I decide to create one what are the settings on the Colitis I'm just going to show you that really quickly let's jump in here so here's the tale and the settings are the same edge Collider huge just a trigger nothing in here that's going to be set through the script and the player here or the snake has a circle Collider also a trigger and that it has a rigidbody of type kinematics so those are the collider settings the gorgeous demo unity made was in the current unit version yes that is correct and it was freaking awesome I really liked that I hosted it on my channel as well so that was fun they reached out to me and said hey do you want to show this and I was like show me the demo when I just thought it was amazing so of course I wanted to show it can we have a video on changing weapons and changing maps on your FPS series also the ability for people to add their own maps would be cool like make it mountable a multi is not on a part of the scope of that tutorial at least not yet I think that's kind of without the reach of the tutorial at least for now but I think the other requests could be really fun whenever it comes to like adding the ability to create different Maps well you have to make more maps and frankly I spent so long getting the arena to look just right and seeing how we could easily implement it in like an hourlong video and still have a really coollooking level and the whole model was created by Simeon Ivan awesome guy you can check him out and it just it took him so long so I don't think necessarily that we going to be creating a second map but I might add some functionality for it and I might do some weapon switching I definitely want to have a look at some new exciting mechanic that we can add to the this series because I think the last one was bug fixing and we've been so caught up in the whole login account civilized data serialization system we need some more exciting features on that but I haven't totally planned out what yet but you very welcome to suggestive this has become the game of spaniel Christian so it's answered I'm sorry about that I will I'm doing my best here how would you recommend how would I recommend to learn code much practice tutorials um decide to make a game and learn the code needed to do that or look at everything in the code language and play around with each function individually definitely not the last one I always think that the best way to learn anything is having an idea of what you want to do with it because I think it's so hard to learn anything out of context and frankly it's it's a problem with the way that a lot of stuff is taught my main problem with going to school was that everything was taught in a way that um it was so hard to understand the concepts or at least many students felt that because um they were never really applied to something useful I mean some of the knowledge that you get in school is amazing some of the stuff that you learn is it's really really great to know but a lot of times especially in mathematics it never gets applied I mean I learned about vectors I learned about different types of functions and if I hadn't done game development on the side I would have never understood that kind of stuff because you have to show in context what it does and why it's useful and that's why I think working in this project oriented way that kind of allows you to have a look at where you are and where you want to go and take a look at all the stuff that can get you there and exploring wow that's super awesome so great for my project Jesus vector graphics are awesome because they can do with this and that and that that is really really useful for a lot of people of course everyone learns differently but at least from my experience that is what gets on or is is the biggest motivator for keeping added because you can always have a look at how what is the best way to learn something but I think the best way to learn something is just not to give up and just to keep going at it and therefore it is to do what you think is fun so just find some project that you think this would be so cool this is what the world needs even if it's in the next Call of Duty just try it out and have fun with it of course I tend to recommend that you stick with some smaller probe programs in the beginning because it will make it easy on yourself to finish something and see the whole production process but if if the next Call of Duty is what you want to make just get started so am I using a green screen or am i in a black hole that is a very good question neither this is not a green screen this is in fact a black screen here so you can see black black fabric no if I can show you this it's very black and I compress the colors a little bit to make it to make it impossible to see all the wrinkles in the class and stuff like that but I baited on using a green screen but I think it looks not too good sometimes so I really like this and yeah if you want to have a look around my apartment and see some of the gear that I'm using because some people are asking about that I just uploaded like yesterday a setup video showing all of that stuff so you can check that out now on the channel and this is another time to do a patreon plug so it's there so if you want to support the channel and like this stuff and want to see more live streams and more videos go to patreon.com slash Blackie's you can donate a monthly amount of your choosing and get some rewards in return and it just helps out so much and thank you so much to all the people who are already on donating and look who is joining in again oh say hi this one's called charlie so charlie say hi to the stream isn't it cute he's very tired look I will put him down to rest alright um I made a textbased Pokemon game in Java that's awesome like that could be really fun make sure to share that on the forum or something would you do programming challenge type of videos that could actually be really fun but I'm also really afraid of the embarrassment so I definitely want to do more on game dev contests like the Damned re definitely want to participate in the next one of those but um with the programming challenge maybe maybe not so we've been live for one and a half hour so I think it's pretty much time to close this soon it's been so much fun I'm gonna get some more beer before we stop and come with the last questions here we'll go 5 or 10 more minutes at what game development company would I'd like to work not not not really in any of them I would like to keep doing this I think this is so much fun and if I were to do a game I definitely wanted to do it independently with a team that I assemble always some guys that I hang out with and we could have fun doing it I don't want to become part of any lie to your company though that's not really my thing I like this it gives a lot of creative freedom and the interaction with you guys is amazing so I think it's a lot of fun I love my videos thank you that's very kind would I ever do a video about integrating iOS and Android specific features to a game example Google Play services etc there are official guidelines or guides out there but you make it so much easier oh thanks yeah I think integrating some mobile stuff could definitely be a lot of fun but I haven't had too many requests especially as of late I think maybe the whole mobile app trend has worn out a little bit but um if enough people suggested I would definitely do that would I ever do a racing game I actually really want to do racing game I don't know what it is I had someone suggested in the comments here recently and read over it and I was like that could be so much fun so I might do that in the future well whenever I decide to create a new series but we'll see again it totally depends I'm really pretty much willing to do anything um it didn't sound good I'm not that cheap I'm pretty much willing to do any kind of tutorial as long as enough people are suggesting it and it's it's what you really want to see I definitely hope to do a poll for the next video that I decide to do on to kind of let you guys or to kind of involve you guys in the process so that's what I'll do here so I brought up the chat on the other screen here and that makes things a lot easier what about RTS RTS games are really fun and they're super fun to program as well because there are just so many data structures and different elements to an idee RTS that people normally don't think about just something like selecting a bunch of units and moving them around and all of the AI involved in that is actually a lot of work so I think it could be super fun to do but it also might be too much to take on for a tutorial series or at least it would be have I have to be in the advanced category and I haven't done too many of those I mean the multiplayer FPS is one but I don't want to have multiple advanced video series going at once because that's just too much work for me and will cut out some of the cut off some of the beginners to intermediate so and I might do that at some point but it is a difficult one so yeah and that was an RTS so they're they're really hard to do could I do a tutorial on a flight simulator like one already existing or like creating one I have a good friend of mine is totally into flight Sims I had to I would have to ask him for advice I don't think I know enough about airplanes and frankly not even physics to do do that because Jesus some of those are realistic and you also want to load in huge maps and stuff like that that would be really advanced I don't think I would go into that mostly because this is the first time I've ever heard anyone suggested so yeah um awesome could I explain how to do a curved bullet trail please I'll stop spamming that by the way something as railgun trail from quake 3 I can't really remember what it is exactly you're referring to but if whenever you want to do like a curved trail you can just have it rotate around some axis that you decide on and that should curve the bullet so I hope I couldn't see that being too hard I mean you have just seen how to create lines in space and you can also just use the trail renderer attached to some empty object and move that around that would look just fine as well so yeah um I could do a MOBA game series or MMORPG again really difficult games to create especially the MMO part that stands for massive multiplayer online game you can even hear it in the in this in the sound of the title right so that is a really scary thing to create and um it's probably not something that I'm going to create I could create an RPG that's already a lot of data and a lot of code but an MMORPG is just not possible for a single person MOBA games are really fun but also are really content heavy so yeah these are really advanced topics can you tell me with which tutorial I should start if I want to learn programming if you if you mean my tutorials I have one called make a game that is a unity tutorial with some Java scripting in unity JavaScript is fairly easy to pick up you can check that out if you want to start making a game if you are more specifically geared towards just programming and want to start with say csharp I have a video called how to program in csharp that goes from the very beginning of like explaining stuff like variables how to write things in the console onto functions onto classes and data structures onto lists and arrays and stuff like that and then more advanced topics but that's that's what you could do you could also put up pick up a book if you want to read about it but really there's so much out there it really depends on what you want to do will upload this stream to YouTube yes I will I will make sure to do that hopefully tomorrow and textbased adventure that could be really exciting I've actually wanted to do some textbased stuff for a while as well so if not if not if enough people suggest that I will get right on that mmm a football soccer game I've never um I've never played too many of those and it's always difficult playing or creating games that you haven't played but if could of course pick one up and and try it out play some FIFA that's pretty much the only football game that I know that's shows out and I don't even know how many versions of that game it's probably like 12 or something soli keen for a textbased adventure more textbased adventure yes please alright so that's exciting I think that could be really fun textbased RPG yeah that could be really fun as well I mean textbased stuff is easy and some and also hard because you're limiting yourself so much and some of the technology then becomes really easy to do but I mean creating an interesting game in text is really hard so I would have to play a lot of those games to kind of be sharp on what to do and some of the tricks there but that could be really fun alright so I'm I'm I'm moments away from rounding up the stream here I've had so much fun guys this is really last questions right now and we're going to stop the stream here because my voice voice is just getting absolutely slaughtered I don't understand streamers who can just go eight hours straight that's so impressive if you want to see program livestreams you can go to cool 18 as well he does some pretty crazy coding marathon sometimes it's my financial situation difficult I wouldn't say it's difficult I'm definitely not panicking about it but it's not it's not like I'm making a lot of money off of youtube I mean my primary reason for creating a patreon is because it just helps me get over the edge on to being able to support myself and and live a normal life while doing this and it's so essential I mean without the patreon that would be really difficult so I'm really really thankful for that and also sophia has a job of course so she chips in um but no I wouldn't call it difficult but definitely not overwhelming maybe I wanna go into game development as well and yeah maybe you could talk about your experience um how did how did oh how did my financial situation look before or my life look before YouTube um YouTube is awesome I'm having a lot of fun doing this I think it's awesome that that you guys are enjoying it as well and being a game developer is is a lot of fun it's it's a really creative process so if you enjoyed this that stuff you're going to love it but you definitely have to show there's a lot of responsibilities especially if you're taking responsibility for a team and then that's a lot of mouths to feed and expectations to meet so be careful with not shouldering too much and having too great expectations because there are a lot of game developers and it can of course be very very difficult to get your game out there you have to build up several games more most developers have to build up several games in order to be able to support themselves and only rare occasions you can do that with only one game I could have a competition where you can send in gonna map models and then just use them that's definitely correct I could do that so far I haven't involved in the artistic process of that series that might be something that I want to do but for now I really have some other stuff in mind but that that is definitely an option could be a lot of fun why don't I stream on YouTube that's a good question I just really liked which I think some of the stuff that which offers is awesome I might streaming on YouTube in the future if that's something you would rather see but definitely just really liking twitch so far everything has worked so smoothly and oh yeah so press the subscribe or follow or you don't even remember the one that isn't paid down below if you want to see more on Twitch let's hear will I ever make a shader tutorial that's possible but I think the requirement for shade of programming went down a lot with the standard shader just because it's so good and it does so much but definitely a lot of stuff still requires some shaded programming so that is something that I could do as soon but that there are awesome shaded programming tutorials out there just search for it on Google especially the textbased ones are really good do I ever answer 24 programming 24 hour programming competitions I did Ludum dare a that's not 24 that's 48 and I also hosted one myself called ten hour games that's a while back now if anyone in in here participated I'll say that in the chat it was just so much fun but never exactly 24 hours what do I think about Pokemon have I played it I've played a lot of Pokemon games program is awesome a lot of fun and the new one the great big programming game was also a lot of fun but just such a mess codewise like it was so buggy and yeah that's so much stuff that they could have done to to make that better it's crazy what's next for the FPS series we just talked about that and some new feature very loose answer um since you like programming games what are the games do you play um I actually play a variety of games but I don't have time to play that much actually it's been I think it's been like a month since I last picked up a game and just played but I've played a lot of the big franchises I was such a Call of Duty junkie when I was younger like 600 hours in that game I've played a lot of counterstrike in general multiplayer games is what I've dedicated most time to because I really like gaming as a social experience and I've also played a bunch of other games some of the singleplayer games that I've enjoyed while halflife and portal for example and Skyrim is awesome and some other games I really like Ratchet and Clank and stuff so I've I've played a lot of different games an amazing indie game that you could check out that I recently played as Thomas was alone I was really late on playing that but that's just an amazing experience so you could check that out well they do a draw my life video that would be so much fun I think that trend is kind of over but that would be so much fun to do I will definitely do something more personal on the channel so it's not just in these live streams maybe a full Q&A video could be fun where I kind of pick out the best ones and answer them hopefully a bit better than I do here um yeah and I think that is all guys so I think we're going to stop it here I hope that you enjoyed the stream as much as I did I don't think that's possible I had so much fun you guys are awesome thanks for supporting and for being here I just had so much fun doing it and um yeah so if you want to see more subscribe on youtube that's their youtube.com slash break ease if you have any questions about today go and post questions on the forum if you want to see more if this stuff go to the patreon page where you can support again that's patreon.com/lenguin thank you so much let's see you bye thank you so much to all of the awesome patreon supporters who donated in August and the special thanks to our own meta Robert rose James Calhoun vixen P and Andrew K