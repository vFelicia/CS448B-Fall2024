hello everyone and welcome to the second video in make a game a series on making a cool video game in unity in the last one we set up a basic scene install the tools we are going to be using and I explained a few things about the UI in this one we are going to talk about components do a little bit of scripting and therefore we get our character or our ball rolling in our scene so as always I've opened up unity and once I opened it up after having saved my scene and closed down my computer I was met by a completely blue blue screen to fix this you simply have to double click the level or whatever you saved it as I saved it as level 1 this is because by default unity doesn't always load up the scene you want it to so just double click that and say it don't save to the current scene now we have our level loaded to save a level or loader level you could always go up to file save scene or open scene okay so for now let's first of all explain what is a game object and what is a component if you for example select our ball we can see that there is a lot of information over in the inspector panel the bolt is a game object and everything you see on the ball is properties for that game object but the properties has split up into different sections these sections are called components and you can choose whether or not you want on a component to be on a game object it's all up to you by default when we create a sphere it has three basic components it has the sphere mesh filter this is what makes it round it has the sphere Collider which makes it able to collide with other game objects then it has the mesh renderer which will show it in the scene and it will do that using a material and by default that's called default diffuse so that's what giving it the gray color the material also defines stuff like transparency and reflectivity now let's move on so that's the basics of components we want to create a new component a script where we can tell the bowl that whenever it will press certain keys we needed to get rolling but first we wanted to actually collide and move in physics space because right now when we play a game we can see it's completely still even if we go onto our scene select the ball go to the scene view hit F to focus on it and you can see right now I'm in wireframe mode so we can go up here in the left hand corner of the scene view so it's too textured which is where you want to be in the most of the time and move it up and then hit play you can see that the ball doesn't fall to the ground this is because we have to add some physics this is mostly done using a rigidbody go to add component if you don't have this you have an older version of unity then you can go to the top where it says component anyway go to add component go into physics select rigidbody now physics are applied to our ball we have different properties to adjust which you can always look up if you are unsure on what stuff does remember that increasing the mass won't make it fall faster now let's hit play we can now see that our ball drops to the ground if we also move it over a bit we will see it roll off the plane oops maybe a little more like this we can also too take our game view and drag it over so we can all so we can observe the game while it's playing in the scene view also lets it play and the ball rolls off now let's take the game view and put it back let's also adjust the position of our ball back again on the z axis needs to be zero and we can drag it down again not too low oils the bulb will fall through the cube so just a tad over that's perfect if you're experiencing that your ball is falling through the cube no matter what make sure that both the ball has a sphere Collider and that the ground has a box Collider attached if we for example disable the Box Collider the sphere will fall right through notice that our box here our ground is static it isn't moving that's because we haven't added a rigidbody component that's something you want for ground things ok so now let's create the script that will make our ball move to do this go to add component new script and let's call this ball control we are going to be using javascript in this series since I think it's the easiest to learn but you can feel free to follow along in C sharp or boo I recommend you have a script for beginners now let's hit create an ad now it's time to load up the script in monodevelop so doubleclick it normally unity will open scripts in monodevelop though it's not always installed with unity so sometimes you have to do it manually you can do this by going to mono develop calm Heelys download it and then select it in unity i'll show you how to do that in a sec you can always choose to use another program such as notepad plus plus which is great for window or TextWrangler which is great for mac it's really up to you most beginners are fine with monodevelop to choose what text editor you want to use go to unity edit then preferences under external tools you see the external script editor here you can choose the team between programs if unity doesn't recognize it you can browse and find where you installed it it's that simple okay so here's the script opened up in monodevelop by default unity will include the start function and the update function along with the prac Maastricht the prog Maastricht can just be ignored this will make sure that you don't do things that are completely insane detecting on the computer but least some of them the function stat we can just remove that that's what's called just when you start the game so anything you put between these two bracket keys the open and closed one will be called just when starting the game this is where you can do stuff like finding the player or setting up a level let's just remove this then we have the function update the function update is called every time the computer draws a frame just like movies computer games are drawed by a series of images this is called every time one of those images appear this means that we can put stuff here such as checking for input and then doing something for example movement controls we can also put stuff like checking if the player has entered a certain region and then doing something based on that that's usually done using stuff like function on trigger function on collision and so on so there are many ways to define when something should happen for now let's create something inside the function update what we are going to be here is simple movement we're going to be using the builtin physics system in unity to make our ball rotate and therefore roll off in the direction we wanted to to do this let's type var rotation of type float equals input dot get axis and of course remember that unity is cap sensitive let me just zoom in on this so you can see more clearly what going what's going on input that get axis horizontal times rotation speed this is quite confusing and I don't expect you to understand everything that's going on here basically we are making a variable called rotation a variable is something that stores something such as a number or whether something is true or false it could also store a player by an object this is the name of the variable this can be whatever you want we use this name to reference the this variable so variables are basically used it instead of typing in numbers every time of finding the player all the time we can do it once and then reference it by name this is a type float that means a number with decimals and it's equal to input that get axis horizontal this is something unity are set up for us to easy easily make our game respond to a and D keys such so that we can row to the right and to the left this will also work with the arrow keys and it will also scale to consul's then we are going to multiply it by the rotation speed that's another variable we are going to be creating in a second and that's something we can adjust inside of unity without even doing any scripting that's the easiest way to quickly adjust what how fast you want the ball to rotate so let's make that variable this is done above the function update because we want this to appear inside of unity let's type var space rotation speed again you can call this whatever you want as long as you both change it here and here this is going to be equal to a hundred this is just the lucky guess since I know what kind of number we're looking for you can easily change this however you want and if we save this now it won't be working but we can see that when we select the ball which has our script applied we have a new property called rotation speed which we can drag on or type a new number into it's completely up to you how fast you want your ball to be going cool now let's do more with the rotation so now a new line below var rotation we're going to type rotation x equals time.deltatime we are going to ignore this line for now just type after me basically we're making sure that our ball reel will rotate and keep on rotating in the same amount depending o not depending on your frame rate if that was complete bla bla please just skip this now make a new line type in rigidbody because now we're referencing the rigidbody where we can do stuff like add forces or add torque we are going to add relative torque torque is like pushing an object to make it rotate and that's what we want to do then open up a parentheses type vector three dot back space times rotation close up the parentheses and end it with a semicolon you might have noticed that all these three lines and also the variable one and with semicolons all commands does this so whenever you are making a variable or rotating something or making something another color every time you do something you enter line with a semicolon this is very important also make sure that the function update has a capital u since many forget this and unity won't recognize it cool let me just explain this line we are telling our rigidbody that we want to rotate it that's what the first part does then inside of the parenthesis it asks us how do you want to rotate it we want to use the vector three dot back we can use the vector three which basically means 3d coordinates to do stuff like vector 3 dot forward or week 2 3 left if I want to invert it I can simply do x 1 for now we'll do that back since that the axis that's the axis we are going to be working with then we multiplied with the rotation which was the amount we made up here that's going to make it rotate depending on the rotation speed the input axis and the time that Delta time so it won't be dependent on framerate I know this was a lot to take in and I definitely don't expect you to and everything if you do well congratulations you are much quicker than I am now it's same let's head into unity and see if it's working you can go to the console and check for errors just ignore the one that was there we can see right now we don't have any errors should you have an error feel free to write to me oh and also there are always the unity answers page with a lot of nice people willing to help you out of course reach the read the error message and see if you can answer it yourself now let hits let's hit play and if we now hold down the D key we can see the ball rolling off let's replay this and we can also roll the other way and we can basically control it however we want congratulations you have now created your first script and made some pretty cool functionality already this is already a fun game in that you can duplicate the ground and make a lot of these all around to make it hard for the ball to reach a final destination so feel free to play around with this in the next video we are going to be expanding on this to do stuff like jumping and also make it more exciting to look at thank you for watching and I'll see you in the next video