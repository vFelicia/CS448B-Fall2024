thanks for tuning in at brakus hello and welcome to video number 23 and make a game Aiken series on making a video game in unity in today's video we'll take a look at making an end scene which would be displayed once we've completed all of our levels we'll also have a look in that context at scene switching and we'll also do some GI work to update how our score it is displayed so here's the plan for today we'll start out by making the graphics for our end point but before we can start it I just click the mana mention that if you have any questions go to forum to practice to come and also if you want to support practice or just want some cool motion dice you can go to breaki Spreadshirt dive net the link will also be in the description and I will probably have some kind of annotation on the screen and here you can buy all kinds of breaking breccia smashing dice there's also an IM developer tshirt and I've kind of redesigned the story here so if you want to support brackets and not own it you can do that by of course donating or going here and getting something cool for yourself okay so that was enough selfpromotion for one video I think so let's get started by opening up a unity and you will see that nothing really has changed here however you will notice that I'm currently using the tag theme but again everything we are going to be doing will be completely available to you using the personal Edition which is of course free cool so the first thing we'll do here is making the graphics for our end point so currently we have these invisible checkpoints and our end point will work somewhat like those so first off let's go to game objects let's go under and and create a particle system let's drag this over here actually let's reset the transform to make it our reset under the drag it up a bit and over here so we can see what we're doing we'll also make a 3d object sphere and we'll rename this let's just rename this to endpoint make sure to check is trigger on the sphere Collider because we're going to be using it as a trigger later we'll then drag the particle system under our in endpoint and reset the transform on that and reset the transform on our endpoints this way we can simply drag both of them and things should look pretty awesome and now inside of this endpoint here this is kind of B this is going to be kind of our core and so I just want this to be kind of an additive material so we'll rightclick create material and we'll simply call this let's do simply endpoint matte maybe I will figure that out as we go but I want to go under the particles additive and the texture is just going to be the default particle one and that should be imported with any unity project and we'll simply leave the tint color as is here and drag it under there just to give it this coollooking glowy core um once we get some particles in here this will look much better you can of course change the tiling here on to make to adjust kind of how it will look but for now this should be pretty fine so actually yeah let's just call that the end point Matt and I will duplicate this and make this the end point particles alright or maybe particle whatever you want to name that and that's going to be the material for our particles and so now we can go into our particle system and we can go on to the renderer and we can drag in our endpoint particles and now we can adjust that material down here for example we can tint the color in a kind of orange looking color there and I'm actually going to go all in with that for now I think that looks pretty nice and because we are using the additive blend mode you can see that it looks super cool depending on what the background is awesome so let's go into the shape here and change that to a sphere let's just drag this out and by the way this video might be a bit longer than usual but we'll just see as we go I might need to split it up into multiple parts cool so let's just drag this out a bit and basically the effect I'm going for here is this kind of wojtek's where our particles are getting drawn towards our center here so in order to do that I want to emit only from the shell and instead of letting the particles kind of flow out let's inverse their speed to something like minus 1 and that might be a bit too much so let's change this to a random between two constants and let's do minus 0.3 maybe and minus 0.5 so you can see that they are moving in which and we can change the lifetime to maybe 3 and you can see now that they are getting sucked towards the center and we can also change the status signs just bump that down for now so we can see more clearly what's going on you can see right now this lifetime is actually too short or too long because they are moving past the center and then continuing so let's just change the lifetime to let's try 2 and that actually looks pretty accurate I kind of want them to pile up in the center here what we can do is we can change the velocity over a lifetime simply limited over lifetime actually to make them slow down as they reach the center and we can do that by what is it we need to change the speed here by using a curve yeah okay so go over here and select curve and we will simply make that fall off so you can see they slow down as they reach the center and should start piling up in there and now we can just bump up the lifetime again and we'll be sure that they don't go too far so that looks pretty good next up I want to kind of make them grow as they reach the center so in order to do that we are going to set the size size of a lifetime so the size here will simply drag I'm just going to choose one of these presets with a curve here so I'm going to change this to everyone and I'll just bump up the live the slab size a bit so that they are not entirely invisible once they spawn and I think we can bump up the overall size a bit to something like that looks a lot better and we can maybe also rein them so let's use random between two constants and let's do 0.4 and 0.6 maybe just so that doesn't look too uniform and it's also bump up the emission amount let's try a 30 now that's starting to look really awesome and yeah I'm actually quite satisfied with that let's also fade them in and out so let's go into color over lifetime bump that down and up here we'll simply choose an FF 0 here we'll choose it an alpha of max which is 255 and just get that quick fade out there and do the same up here something like that and I think that looks really smooth and cold so let's see that in the game and I want this to be a kind of concentrated effect I can see that they start out a bit too large the looks a bit cooler and I also want to bring this in a bit which means that we'll have to bump down our lifetime here to let's say two and I also want to simply scale down our endpoint graphic there a bit whoops that actually scaled our particle system too and so one thing we might want to do is simply remove this vehicle ID from this create an empty game object instead which is going to be our end point we can then rename this to let's say mesh or graphics or whatever you want to do I'm going to call this one graphics and I'm going to have the particle system here also so particles and then this way we can control all of these separately so we can simply scale down this without affecting the rest you can see that gives us a coollooking core especially if we go into this material here and change the color to something more orangey and we can also rotate this so that the highlight points towards our camera I think that looks really cool and now we can add a sphere Collider here change the trigger and simply bump in the radius so that it fits and we are going to reset these on on the transform whoops that reset everything so we are simply going to reset the position so 0 0 0 and 0 0 0 yeah that looks really awesome and now we can reset that one drag it up drag it over and you can see that everything is what is actually working now so once we hit play now we should see this core here which we can bump into you will however notice that it starts out looking a little bit weird and that's because we have to pre warm our particle system in or for it to look cool right from the beginning or else it's going to start spawning particles from when we play the game you can bump up the size a bit on these particles if you want the effect to be more crazy or maybe do a bit more particles something like this but I think this looks good for now and of course you can always do more tweaking so let's drag this into a prefab and plate place it onto the prefabs folder now on this we're going to create a script that will switch scenes once we collide with this trigger so in here we'll simply create an endpoint script and of course we want this to be of type JavaScript now let's double click this to open it up in monodevelop oops come on there we go and it's opening up and in here I'm just going to assume may not appear on the code here basically all we want to do is we want to have a function call on trigger enter and make sure to spell it the exact same way that I've done because remember this is a method that a unit is set to call whenever something enters our trigger and we're going to collect some Collider info and that's going to be of type Collider and that Collider info is going to allow us to check for a tag and we're going to check if that's equal to player and this is all something we've been over before then if it is actually the player we are colliding with we want to call a method that we are storing on our game master and that's going to be the load next level method and we're going to create that in a second but we're simply going to call it for now so we're going to make a game master reference here type game master and then in here we're simply going to do game master dot load next level this way our game master will take care of everything once we are loading a next level such as storing the score and what level we want to load and everything like cool so now we can simply save this script and it is going to give us some error because some errors because currently we don't have this method actually it's not but it is going to do that once we play and enter yeah there you can see that we aren't oh yeah that's because we haven't set up the reference so we can do that to simply drag in the TM there and that should be working now you can see that it couldn't load this level because it wasn't added to the build settings that's actually kind of we okay I see why it wasn't give us and giving us an error now that's because I've changed the script just to practice out what we're going to be doing today let's now have reverted those changes and you should see that yeah okay that there is no load next level on the game master so now it's actually complaining like it should ok sorry about that never mind it so basically what we want to do is go into the game master script and in here we want to add oops we want to add a method a function called dot next level and it's not going to take in in any parameters however it is going to simply load up oops application dot load level and the level that we are going to load is simply going to be the next level in our build settings so you could do it some kind of a variable that shows what level to load here you can load using a name so simply if you want to want it to load an int level if we've made that you can do that using a simple string but I'm simply going to do application that loaded level so it's going to take the current level by an index and then through a +1 in order to make it load the next level in the series so if we do this and save this out will actually have complete control over what level is loaded inside of our file build settings in here we can simply add scenes and it's simply going to load the next one so suddenly the build settings order is going to be very important because you can see over here we have the index so if we on level one it's going to try and load one plus one which is level two and that also means that if you don't add a level here it's going to give us an error so make sure that you've dragged in the you drag in the gamemaster here and hit play and you can see that this is going to give us an error and the error is that level two couldn't be loaded because it has not been added to the build settings that's actually a very good error because it tells you exactly what you need to do awesome so basically what we want to do now is we want to make another level and we can simply make a quick taste test level here you can have as many levels such as you want so I'm simply going to duplicate level one and make it level two here instead whoops I haven't saved it so it didn't give store all the changes let's load up level one here make sure we have an end point and let's also apply our check and change this on that save the scene and now we duplicate the level it's going to automatically rename it to level two and just to show that this is another level I'm going to add in some kind of object here just a cube so we can see the difference on the two levels that has a cube right there and I'm going to save that and when we now go into our main menu let's just play from the beginning hit play game go in here it's going to lead load up whoops of course we need it we need to add it to the build settings so build settings and drag in level two you here and let's try that again hit play play again go in there and it's going to load up level two now let's say that we wanted to have an end scene which displays our final score and I find the score is simply going to be a sum of all of the amounts of coins we've collected throughout our levels but currently we only have a system that actually remembers the score that we have for the current level because if we go into our game master script you will see that we have this static variable called current score and remember static variables will persist between scenes so this is going to be remembered but it's reset every time we restart the scene so basically we want to have another static variable called the final score and this is also going to be of type integer and default to zero then what we can do with this is we make sure not to reset it every time but every time we load a next level and you don't want to do this inside the restart level we only want to do this if we've actually completed the level then we want to add on to the final score so we want to say final score plus equals the current score so this way the final score will be stored between levels if you actually quit the game or restarted in the editor and the progress is going to disappear so if that's something you want to change you might want to look into player preferences but if you just play from start to end this is going to work just fine so if if that's not good enough for you you're going to look have to look into some kind of saving system unity has a very easy one called player prefs I believe I teach that in in the unity survival course but if not there's plenty of tutorials out there and if you want to get very serious you need to do some kind of binary civilization or something like that they're also assets on the asset soil story to help you with this but I do thing we're going to be going into it here cool so now that we have that let's simply save that out and now we know that we have the static variable remembering our score however we are currently not displaying this variable so right now I want to go ahead and create an end scene because we've had a look at our endpoint graphics so we can delete that we've done scene switching we can delete that now it's time to probably end our game so let's duplicate our main menu I think that's going to be a good starting point for this and let's call this the end level let's load it up and actually I want to keep pretty much everything inside of this scene however I do want to delete our music and instead add in a game manager so under prefabs I'll drag in the GM object and place it at the top because I like to have it there and we'll just leave the player as none and the game over sound as none because we're not going to be using it because we're not actually playing our game here this is just a menu of sorts and then inside of our canvas let's go under the 2d mode here and zoom in on that I want to delete everything and instead create some text objects the first one is going to be a yeah of course UI text and this is going to say game completed and I'm simply going to use the Arial font I would recommend you get something more original but that's going to be fine for now you can simply import files by dragging them into the project and selecting them here the plenty on the asset store and that fund that way every you want to use then we're going to change the type to bolt we're going to Center it on the x and y and we're going to definitely bump up the size here quite a bit want to make this really huge and we're going to change the color here to white you will however notice that this makes it blend with the background so let's also add a shadow simply search for shadow and this effect should be very quickly applied and that just gives it this cool shadow edge it's not a soft shadow for that you will have to find again another way but this is going to work just fine for our use so I'm simply going to drag it up a bit here maybe just a bit more something like that and under that I want to add a score so that's called this the game completed text let's just duplicate that call this the score text and let's make this a lot smaller something like 28 is going to be fine for now let's also make the actual object smaller let's drag this down change it to score and then we'll just put in a temporary number which is going to be let's say 20 just to see how this will look and basically we can just use all of the same settings however I want to snap it to the left and drag it over a bit here also just a bit to the top left corner something like that and I think that it's going to be looking pretty great I will just make this a bit less tall and just drag it up here to make it closer to the text and I think that looks pretty nice you can of course play around with this more to get it looking exactly how you want cool so now we want to change the score text depending on what our score actually is and also while we remember it let's add this level to the build settings so simply drag in the end level here cool so now let's create a script on discord text that will link up with the DM object to get its current score or the final score I should say so let's call this the score GUI script and let's make it of type JavaScript and basically I want to have this a score GUI script access rgm object and then I wanted to change the text component that we reference so in order to do this we simply need to access the final score which is a static variable so we don't need any references to our game master script and this way we can simply go we'll do this in the function start and in here we'll simply say that our okay we need a reference and we need a reference to our kuia object so we'll call this the score text and it's going to be of type text or you will notice that this doesn't work unless we import the unity GUI system so we need to import unity engine which is the unity namespace daunt UI this way on the text type will actually be imported and now we can simply say score text and to access this string that this hosts we need to do dot text and we need to set that equal to game master and remember this is capital because it's a static method or a static variable that we are trying to access and then a final score and this should work just fine this way we can go in here and if we wait a bit whoops cannot convert into string that's because we are currently setting the string score text text equal to the integer of final score and one way to get rid of this is good to do dot to string like this or we could simply just and this is something we need to do anyways say score like that Plus game mastered final score because we wanted to say score we don't only want to display the number so we're going to do that clear that and you can see that we can now drag in our text which is going to be the same object that it's currently sitting on and now we can simply hit play and this should change to a zero cool you will however notice and this is the other thing we have to change up here it says score zero we don't want this to this be displayed on our end level and actually we don't want it to be displayed anywhere else I don't think this graphic is very pretty I think we should be using the new UI system instead and that's the final point is updating the score display so just like we've done it here where this shows the final score on stat we want to create an object up here on all of our levels that stores our current score on update mmm cool so let's actually implement that so inside of our our method here we'll simply create a boolean because I think we should whoops that's not the correct syntax I think we should make this squeeze script both be able to be used on the actual actually let's just make a separate script we'll do that so this is going to be our final score GUI let's rename that make sure that it still sits on the score text here the final score GUI you might need to close it in monodevelop to make sure it's synced up and let's make another script of type JavaScript and this is going to be our current score GUI and this is going to update every time we draw a frame because we don't know when it will be changing we could make a method or a function for actually updating this text object which we could then a call every time we collect the coin but for simplicity's sake we're simply going to be updating inside of the update function so very similarly we are going to be doing almost the same we're going to import the GUI system so import Unity engine it's the namespace GUI and we're going to store a reference to our score text of type text and we are simply going to set our score text equal oak text equal to score or maybe we should say coins or something like that we could also say I I think I'm actually going to say coins collected + and then we're going to do game master dot current score it should be that simple hopefully this will be working now we need to simply load up a level hit save on that and we need to change the game master script here to not display the ugly GUI that we've currently been using so simply remove that GUI method there and we can also delete the size X and size and all of this offset code because that's just for messing around with the GUI instead we're going to be using the pretty new GUI system and in here I simply want to create a UI text and you will notice that it automatically creates the canvas and let's just call this GUI let's do blue canvas and that's I'll rename this to score text and let's sit this onto the game up GM object I think that would be a pretty good idea because this way we can simply know because that way it's going to be displayed everywhere so let's make this into a separate object and simply have that sit on all levels that we create and in here we are simply going to rename our score text to coins collected and then let's just insert 20 again here and let's make this a lot better bigger Center it bump up the font size let's do something like 20 bring it up here let's also snap it to the top or anchor it to the top so that when we the screen is resized it will move with the top here as you can see and let's change this to white and add a shadow again see how that's looking I think that's pretty great and now we simply want to make this actually update we could make a tiny background for this and that's kind of up to you if that's something you want to do you could also change it to black and add a white outline you could do lots of things here you can see how that looks in black we might just want to keep that in black I definitely want it to be bold actually and let's bump it up even higher maybe that's even better I don't know why I actually like the white whoops divided with a black shadow but we can make the shadow a bit bigger so we can do two here and minus two and maybe also make it less transparent something like that looks pretty fun actually cool so of course play around that and now we simply need to drag on our final score script to that object no oh no not our final score our current score script to that object and simply drag in the text onto the score text awesome now we can simply drag this into the prefabs folder and we can make sure that it's added to level two also so let's load up level two and drag in the presets here the Google canvass and just drag it up here and now when we play in the main menu hit play game cards collected zero coins collected one we go on to the next level oh it resets to zero because that's dependent on the level it's going to say one here we're going to load the final level and it's going to say score is two so that's exactly what we needed and frankly that's the end of a very long tutorial this was wow this was actually pretty long I think it's enough to barely fit into one video so that's awesome and yeah that's pretty much all I wanted to show today I know this was a lot of coding and back and forth and we did some graphics and everything sir I hope you caught it and if not you can simply copy my steps and you will understand that some some point don't worry but yeah thanks for watching the video again if you have any questions about this go to farm to breakfast to come and also check out the new store at brackish that Spreadshirt dotnet cool so that was everything for this video I hope you enjoyed it and I'll see you in the next one you