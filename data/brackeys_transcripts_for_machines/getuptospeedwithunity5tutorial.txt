thanks for tuning in at braies hello everyone and welcome to this Unity 5 primer this video is not going to be part of any particular series but instead aims to give you insight into the new features introduced with unity 5 and how to use them so I've tried to pick out some of the most important and the largest changes and uh you should see them on screen now this video is probably going to be pretty long and you might know some of it already so just click on the subjects that you want to learn more about if you want to skip ahead or you can of course just watch the video the whole way through so click on something now and uh we're going to continue cool so the first thing we are going to be taking a look at today is the rendering pipeline quite a few things has changed in rendering most importantly uh the lighting so if we opened up Unity double click on Unity 5 once you've downloaded it you can see that we have this new um open dialogue where we have access to tutorials documentation and the projects that we're working on let's just hit new project under this and let's call this Unity five primer and we're going to put it on the desktop I am at least and we're going to set the defaults up for 3D uh you can of course do 2D but uh most of the changes to the rendering pipeline is on the 3D if you want to know more about the 2D things that has changed um please go ahead and see the uh newest addition to the uh 2D platformer course because there I talk about how to update to Unity 5 and kind of what that means for our project you can also import some asset packages here I'm not going to do that cool let's hit create project and it's going to very quickly open up this project uh notice just how fast that is now I've been using the store so let's just browse away from that and uh everything pretty much looks uh the way it um it used to when it comes to the layout but you will notice that inside of the scene view we now have a new default Sky boox which looks very awesome uh if you ask me at least so the first thing we're going to be looking at here is just uh setting up a basic scene where we can play around with some of the new rendering features so let's hit uh right click let's go on the 3D object and create a cube which we're just going to reset and uh make 20 by 1 by 20 to kind of get us a ground here and we're going to just rename this ground then we can uh make another object right click 3D object sphere let's again reset this move it up just a bit let's call this ball and um yeah I think it looks pretty good like this you will notice that right now that everything is very blown out because these two are completely white so let's just go ahead and make these some materials where we can then change the color so let's go to Project right click go under material and uh let's make a ground material and also right click material and make a ball material and I'm just going to change the albo on the ball here to be a bit darker and then drag that onto the ball and then the ground we can maybe make that a color so let's just make it a bit red here cool so now that we have this set up you some things become very apparent first of all we have this nice looking Shader on the balll um with some nice glassiness and this metallic feel and you can also see that we have some Reflection from the Spy Sky Box onto uh our ground so what is going on here well with unity 5 a lot of stuff has changed about the way that we render images so first off we uh there has been introduced a whole new lighting system uh it's called inlighten and uh basically it allows for things like Global illumination which means that we can have uh lighting Bounce Around uh the scene so that uh lighting isn't just direct but we also get this indirect lighting that happens when a light bounces off objects and that can be colored depending on the properties of the object uh so that makes everything look much more much more interesting we also have a bunch of new uh stuff to the shaders here I'm going to talk about that in a second and then we also have um the ability to get lighting from our Sky boxes and and stuff like that so I'm going to get into everything but first thing that I want you to notice is that we have a soft Shadow here and this is different because also make sure that you are in uh you have selected lighting up here just to make sure that that's okay but that's different from the normal unity3 version because um soft Shadows used to be a pro feature what has happened with unity 5 is basically all the stuff that used to be Pro and the stuff that used to be free are now all free that means that what was before Unity Pro is now called Unity personal Edition and then we have some extra stuff that now costs so um everything that concerns the engine such as soft Shadows or whatever or image effects and all that is available to us as long as we don't make a huge amount of money each year um and uh everything except the Dark theme so if you're very very uh fond of of the Dark theme you will still have to purchase that um but stuff like Cloud building uh the team license and uh these extra features and still also building to certain platforms does still cost money uh and this is a really great way to do it because it allows us to create very very powerful full software uh using this free editor cool so that means that free soft Shadows are free you can see that they are also selected by default and what we can also do is we can go ahead and right click go under light Point light and you will notice here if I just drag this up and go into shadows and select soft Shadows that soft shadows will indeed also work with Point lights so that's super super cool cool so let's just delete that light there actually let's have it there I changed my mind so let's go into video object uh no light uh I'm just going control Z this that's easier cool just so we have some uh more more threedimensional lighting so it doesn't come from just one place that looks pretty cool and uh what I want to dig into now uh please select this as static and also the directional light as static that will allow us to do some more effects uh so what I want to do now that I've talked about Shadows is talk a bit about the new shaders so um unity's Shader system has been can pretty much redone from scratch uh it's introduced a whole new kind of Shader called a physically based Shader or PBR for physically based rendering and what a PBS a physically based Shader does is that it describes the property of our object it describes it using um terms that we use in real life such as how metallic something is or how shiny or whatever and then it emulates that inside of our scene and what this allows us to do is first off it's very easy to create and describe the way that you want your object to look but also you don't have to kind of fake the look of every object because what we did before was we wrote a bunch of custom shaders or at least if you were able to or found some on the internet and you customize them and tweak them and they look really good in the scene but as soon as you put them into another lighting condition uh everything started looking bad again the cool thing about physically based rendering is that we describe the properties of the object and so no matter where we place it it's going to look absolutely beautiful so that's the really cool thing and to show you this I want to quickly download some textures so let's head into the unity asset store uh I'm just going to log in here so uh I'm just going to uh pause the recording for a second and I'll be right back I'm back now and I've logged in and what I want to do is just find some textures and materials so we're going to go under the textures and materials uh tab there and uh I found some uh pretty cool looking ones if we go ahead and sort by price we only want the three ones I'm just going to see if I can find them uh here I did find some some nice ones we might need to go into my browsing history so let's do that let's go in here and let's uh search for ground we have the ground textures pack so you can just search for that hit download on that and the out uh or the outdoor ground textures you can also download that I'm just going to go with the uh outdoor ground textures I think if we go in here uh we can see that they are with normal specular and height maps for General use and that's going to be really cool we want something other than just the diffuse map so let's import those and I also found another package as soon as it's done importing here that you might want to check out and that was um oh let's see if I can I can remember this one second I'll just check what it was okay so I'm back and I found it it was the tilable Cobblestone texture so let's just import that one also so now that we have these imported you can of course import whatever you want to I'm just going to use these for demonstrational purposes so and now that we have these imported uh let's start out by making ourselves a ground so let's uh change this back to White excuse me let's go under the atg textures go under ground volume one and uh under ground one we are going to find a diffuse map which we can drag into the little square here this albo here is what we call the uh diffuse and uh we are going to change from the Shader up here from standard to standard specular because we have a speculum map and the standard Shader here I have an explain this is basically where we do 99% of our material work this is going to do so much for us as you can see it has room for specular Maps normal Maps height Maps emission and uh detail maps and and secondary maps and all that it has so much very nice functionality and the great thing about it is that if you don't use some of these parameters this it's not going to actually compile the code so it's not going to be any slower uh if uh that if you use this and don't use all of the properties then if you were using a highly optimized or uh Shader that didn't do as much this is very very optimized and it it works really great so the Albedo is what we usually call the diffuse then the specular we're going to drag in our specular map and uh as you can see what this does it it basically prevents the whole surface from being this reflective specular thing and only makes the important parts which are basically the Rocks here uh actually have some specular value and if we select the ground again here we can then drag in the normal map this is a nor uh standard normal map and you can see just how huge an effect this can have uh I'm just going to maybe bump this down a bit to something like 0 maybe 0 .4 it's going to be plenty I think I don't want to overdo it with the normal map this is already quite a lot and then we have a height map and uh it's not too apparent on this one uh so I'm not going to talk about it yet but I will talk about it when we do the ball it's it's very much clearer there so that is just a a quick overview on how to set up a basic material uh in uh using the new physically based Shader standard Shader uh then let's set up the ball here let's again change the albo to White let's go under Cobblestone and we can drag in the Cobblestone specular whoops under the map there uh let's change the timing of this to maybe 3x3 oops not down there 3 by3 something like that that looks pretty good and uh we again going to change this from actually let's REM remain at standard here then we're going to drag in the normal map and we we're going to drag in our displacement map under height map and uh you can see that it already sets up a very nice looking material what we can do is we can change just how metallic we want this object to be so if you want this to be completely metal you can see what this actually does now it looks like a metallic surface but this rock here is very not uh very much not metallic and so we want this to be pretty low and in fact I want it to be zero and the smoothness here is uh kind of the smoothness of the specula uh and uh and kind of the reflection on uh from the outside and uh I want this to be fairly smooth uh but I still want to see some detail uh so maybe um 0.4 uh pretty close to the default is going to be pretty good for this texture uh you can maybe make it even more faded uh but I still want to have some some nice details and wrinkles there uh I think that looks pretty nice cool now it almost looks wet we might want to make it a bit more smooth or or a a set the smoothness a bit lower I should say uh cool and uh here let's try and adjust the height map map slider to see what this does so we can bump it up and you can see that it extrudes certain parts of the image and we can bump it down and you can see that it goes back to flat so that's basically what the height map does and um the displacement map here is not not genius um I think it could be a whole lot better but you get an understanding of what it actually does oops that was for the ground we're going to go back to the ball here and just give it a bit of height maybe 0.3 is going to be fine so you can see these um displacements up here uh which is really makes the material look more realistic when you view it from this side cool so that was an overview of uh the physically based rendering Shader this video is going to be so long um I've already talked a bit about global illumination I'm just going to show you uh what this does under the light settings and we're going to look at a mission also so if I go in here and create some new objects first off I want to Mark the ball and ground here as static and you can see down here that it starts doing some rendering and that's because on static objects it's going to calculate some some nicer looking lighting so everything that is going to be static please mark it as static so now go on the 3D object and let's make a cube here let's drag this guy up here and I'm just going to duplicate him and move him over and on uh the left one of these I want to make a new material let's make make a new material whoops right click create material let's call this red drag it onto the left guy let's change this color to Red now go select both cubes and mark them as static and you will see something magical happen as soon as it's baked here you can see that we have spill light so we have light that bounces from our two light sources onto the red surface and then the light that returns from the red surface is now colored both from the uh the source of the light and depending on the properties of the material here which is of course very red and it's going to spill onto the object over here so that's really cool that's called Bounce light or spill light so now that we have that set up I'm just going to show you how you can adjust some lighting settings under the lighting panel so I have mine over here you can find it under window light lighting cool I'd like to dark it by the inspector panel what we can do here uh is we can uh first off adjust our Skybox this one up here we can then say what are we want our ambient lighting source to be before ambient light uh was pretty much um pretty much um could pretty much only be uh a one single color a a one single color here and uh it really didn't look too good now the light will depend on from uh will the color of the light and the intensity of the light will um be colored depending on the sky box so the direction of the light will actually matter and you can see what this scene would look like if we complete the turn off the ambient light so let's drag down the ambient intensity here and you can see that now we have no ambient light and if we disabled our point and directional light in here and it baks you can see that we almost can see anything we still can see a little bit and the reason why it's under lighting we also have reflection intensity so if we pump that down everything gets black but the reflection intensity here is really really cool it allows us to adjust on a global level how much reflection we should see from the sky box and then also from reflection probes which I'm not going to go into but that allows you to create reflection depending on not only the sky box but the actual objects in scene so that's super cool and you can of course adjust the bounces uh and and play around with all that so I'm just going to bump up the ambient and intensity too and uh turn back on the lights so we have this cool looking scene again and uh you can see here what the reflection intensity does to I seen here I actually think it's a bit too high uh by default default at least for our scene here we can go into our each object here and manipulate it um but I think we should just uh do it on a global level so I'm just going to uh bump Down The Reflex and intensity a bit there this looks a bit better cool uh you also have a bunch of other settings I'm not going to go too much into them uh but we can uh boost the indirect lighting that's going to happen and you can see what that does that's a cool slider to have we also have the bounce boost the bounce lighting I was talking about when something hits and then bounces off and I could go on forever just wanted to show you kind of that that does then we're going to look at emission so if we take and duplicate this object one more time and notice that it's marked as static and uh we can just scale this up a bit maybe and then scale it down and scale scale it up on this axis so we have this nice flat surface that we can maybe turn over a bit this process this is going to be very known to you if you ever used a blender uh blender sliding system called cycles and uh this allows us to create light emitting from a surface so let's make a new material for this create material and let's call this uh emission let's drag it on the plane and uh let's just let leave the albo and the metallic and all that we're going to go under emission and set this to one notice you can both get get this from a texture or from just a a single color actually let's set this to five to make it more apparent and we can maybe change the light here to um a greenish color or red or whatever you want to do so let's do a a uh a brackes purple here without it being too girly and uh let's just bump this down again so maybe something like three so you can see what that does and um that's actually a really really cool feature awesome so now that we have that in place I just quickly want to show you also that if we take our ball here move it over create a new material for this called um reflection and uh drag it onto the ball uh what we can do is we can bump up the metallic and you can see just how reflective these materials can be and if we even tidy up the smoothness here it you can get these really cool looking glassy uh surfaces which will of course also be affected by a height map or a normal map so you can get these really cool looking wrinkled metallic surfaces just a cool tip for you awesome so that pretty much concludes the whole lighting part of our rendering essential s to say and the last part is just that we now have image effects available this was before a pro feature so if we uh maybe go under our game view here and adjust it so it looks a bit better so let's find our camera let's oops uh for some reason my Unity froze there for a sec okay it's back uh so if we move up this camera um actually I think that's a feature called Center camera on view move to view here com control all shift and then uh align with view control shift f there we go so now our camera will be aligned and if we uh bring up our game view for some reason that closed there we go you can see that our camera sees what we see then we can go under edit project settings quality and make sure this is set to fantastic indeed it is and uh then at last we can import a package called effects uh image effects are also under effects there are a bunch of things under effects and uh it's just going to process these so just wait for that um I think it's actually pretty annoying that it isn't just called image effects I don't think the new names are that descriptive of the content for example if you just look over it it's hard to say where you would find for example some Sky boxes it's not under your environment for example so uh but it's just going to import these and uh hopefully we can get done with this so we can move on to the next segment can see it it uh makes an editor folder and some standard assets under effects here so that's really cool and uh what we can do is we can select our main camera hit add component and we now have image effects and uh we can maybe go under Bloom and glow select the bloom here so you can see we now have that effect available that's uh really a favorite then we can maybe select some camera depth of field Maybe so we can get that going too and this is going to look really weird and uh you have all of these available we could also go on color adjustments maybe uh making a color correction or whatever we can do a viget also which is probably under camera here so we can bump that up we have all these cool things to play around with so this looks pretty artistic so uh that's actually kind of fun and uh you get the idea awesome so that concludes the first segment and let's go ahead and jump on to the next one which is going to be the audio mixer okay so welcome to the audio segment uh this is where we dig right into the audio mixer that is now introduced with unity 5 and um actually probably the largest workflow change that we see with this new update is uh how we go about doing audio in our game so that's really really awesome and I have so much to show you so let's just get right into it you can see I've set up this test scene just using the same techniques as I showed you in the rendering parts and uh it has this ball which I've called the speaker this represents uh an audio Source uh that is in our scene of some sorts and then we have a ground and what I want to do uh if you haven't done this already is right click down here go under import package and import all of the characters I've just done that already so you don't have to wait uh and this way we can drag in and a first person controller which you see here under first person character under characters first person character prefabs and then FPS controller and let's just drag that in there uh the cool uh thing about this guy if we just reset the transform and drag him up a bit here to make him stand on our surface maybe pull him back a bit too is that he will have some uh if some audio on him already uh with footsteps and jumping and Landing footsteps and jumping and landing and uh we'll also be able to move around so we can see how that affects uh the sound so if we hit play now as you can here we now have footsteps and we'll be able to hear this when we jump and land uh so that's really cool and uh I've also gone ahead and imported two uh free packages from the Unity asset store and uh they are both under audio the one is free game music and the other one is the ambient sample pack uh so we're just going to be using some sample audio both of them are free and uh you can of course use any audio you would like so what we are going to do is first off we're going to right click up here we're going to go under audio and select audio Source uh we already had have an audio listener which is the other part uh of any kind of uh audio setup on the FPS controller we should have an audio listener it should be here somewhere maybe under the first person character there we have it on with the camera we have an audio listener so just make sure you have one and only one of those and uh now we also have an audio source and uh in the source we're going to drag in uh some ambient uh sound and this is a rain loop on 29 seconds we're going to drag that into the audio clip this looks pretty familiar except we have a bunch of new settings down here and then we're going to make sure it plays on a wake and that it will Loop the priority you can just leave as B and the volume you're going to adjust another way just make sure that the spatial blend and yes you can now blend between 2D and 3D uh simulation so that's really awesome is pushed all the way over to 2D excuse me cool so what will happen now if we just rename this to uh Ambient sound uh and and we hit play we can hear some rain so that's really cool and uh this will stay with us no matter where we walk so our Direction and our placement in 3D won't uh affect this at all what I also want to do is I want to on the speaker here place an a audio Source component so simply type in source and hit enter and you can see that it places a source right here and uh what I want to do here is I want to drag in some music to this so this with love from vertic Studio 4 that's what I'm going to drag under uh here make sure it plays on awake make sure it loops and now drag the spatial blend all the way to the right so now when we hit play we can hear footsteps we can can hear rain and when we get closer to this we should also be able to hear some music so that will depend on where we face so you should be able to hear this go from one monitor to the other if you don't then uh that's fine then the stereo audio hasn't uh cover uh gone over to whereever whatever device you're watching on but uh the main thing is that it is indeed uh stereo sound here and it emulates 3D space but that is not really new the new part comes now with with the audio mixer taada this is a really really awesome feature it's something that I've been missing in unity for so long and I've tried a bunch of different uh plugins and all that to make it uh make it uh it work but uh nothing has been quite satisf satisfactory as to the level that this new mixer is so if you go in the window you can select audio mixer it's also under control Aid and uh we simply going to go ahead and hit the plus sign here to create a new mixer and we're just going to call this one main mixer excuse me there and you can see that we have a bunch of settings appear first off uh most importantly we have the groups and uh basically the groups uh allows us to split uh a bunch of different s sounds into some different uh groups here or buses maybe uh and uh what we can do with those is we can control uh their um we can we can control their volume we can control whether they're Solo or muted and we can give them a bunch of effects so to demonstrate this let's make three new groups first off we're going to make a one for music we are also going to make one for whoops don't want that to be inside of Music we want it to be inside of Master you can Nest these groups which is really cool uh then we want one for um let's do player here with footsteps and all that and we also want one called Ambience so you can see we now have three sliders and the master slider each um representing a volume and uh if we just go ahead and hit play right now you'll notice that the audio plays just like before but we don't get any response in here and the reason why is we need to assign the different audio sources to these groups so if we go um into uh let's say first off a speaker find the audio Source you can see it has an output and we need to here give it uh a uh mixer group that it should output two so this idea of routing uh different sources to different channels uh is really really important so you can either go in here and select something or you can drag from the project down here you say the cool mixer setup we have here or you can even drag it from the mixer that's up to you I'm just going to drag from the mixer here so drag the music into there oh my God keeps going I'm sorry um cool so now that we have the mixer or the music um main mixer group selected there let's also select our FPS controller find our audio source and it's everything is under one audio Source here and uh we simply going to drag in the players there and then find our uh Ambient sound and drag in Ambience um there so um you can of course have multiple um audio sources assigned to each group that's kind of the point uh but uh this is just a demonstration so I don't uh want to go into that so what we can do now is we can hit play and we will see the different mixers actually showing the current volume in decibles that is going through the mixer Channel and this is super awesome and if we dog it uh down here by the console move this up go into game view you can see that the player will also react when we do some footsteps and the cool thing about this is that we can while we are playing edit these settings so uh to show you this uh simply click edit in play mode and this will allow you to edit you have to click this or you cannot actually change anything and the reason why this button is here is because changes to the audio mixer will carry over from play mode normally when you make a change it just disappears as soon as you stop playing this is really great for testing but it's annoying if you want to tweak things while the game is running which is very important for audio that's why we have this button so simply click edit in play mode and now we can for example adjust the volume so we can maybe uh make the Ambience a bit louder drag down some of the player footsteps I think they're just a bit too much and um we'll just uh leave the music be I think so this way we can really adjust our mix and I mean we can go all kinds of crazy here you don't have to be as limited as I am here in my in my options so um we can just maybe drag down the music a tiny bit there cool so other than uh adjusting music we also have the ability to add effects and this is where it gets really cool so a good example of this is actually with this music here I have this red ball set up to be a speaker but sound coming from a speaker isn't just natural clear sound often if it's a a a a mid to lowend speaker there will be some Distortion uh it will maybe change the um the sounds spe from the frequencies uh a bit maybe to make them sound better or if it's a bad uh speaker it will make them sound worse and uh so we can gohe and add some effects to this to make it sound like there's a speaker in game so uh let's move a bit closer to the ball here so we can really hear the music and uh I just uh quickly want to uh add some effects to this so I'm going to drag back the audio mixer up here so we can go away from from uh game mode and into the audio mix instead drag down the console here and uh let's add some effects so let's select the music let's go to the right here called uh where it says add effect or you can click add here the effects will appear down here just like any uh D digital audio workstation that you might have used in the past if if any if you have then all this will be very familiar you have the mute button which of course mutes the solo button which solos the track and then you have this B this is for bypass and that basically turns off all the effects on um on your channel uh which basically allows you to quickly listen with and without effects and compare so if we click add effect here now uh we can go under and we can add some different effects uh first off I want to do a program EQ this allows us to change the frequencies uh the frequency spectrum you can hear that I can turn off all of the high frequencies so it gets really dark or we can turn off the low frequencies or we can boost a certain part of the spectrum uh for example if we just wait for the music to come back here we can boost them the lows boost the highs boost the mids so you can really hear what that does so from in my case here I want to kind of uh maybe boost the middle Channel and then we can add another effect and for this I want to do a low pass so we cut off some of the high range here I want some resonance so this will really distort the the music and you can play around with the cut off frequency there sounds pretty good I think that will turn off all of the clarity in the sound and uh then maybe a bit of the Distortion uh please note that Distortion will make your music quite a lot louder so you want to bump down the volume and then bump up the Distortion something like this actually sounds pretty good and you can listen with and without defs so you can hear it's much louder but it's also distorted I going just going to bump that down a bit actually when we had this clo close we wanted to really fill out the space yeah I think that actually sounds really really nice and uh why don't we go ahead and just have a listen from the beginning here so if we go into game mode I'm going to stop talking and uh just play around this cool so now that actually sounds like a speaker in our game one quick thing I want to mention about the audio mixer now that we've been over sources groups and effects is snapshots we're not going to go into views snapshots are basically presets of settings so if you've made a configuration like I have here it's a good idea to store it in a snapshot and then you can quickly shift between different configurations for example if we hit play here go to the audio mixer whoops we go into the audio mixer hit edit in play mode create a snapshot call this maybe uh no music then we can turn off the music here and uh maybe bump up the ambience instead and the player sound and uh now you can hear that when I switch between these they will animate so that's a very quick and easy way to animate a bunch of parameters very easily so you don't have to go in through code and just change all of them at the same time awesome and you can of course set one of them as default by right clicking and hitting set as start snapshot so that will do awesome so that was basically the audio walk through now we're going to continue on to the next segment so now we're going to have a look at scripting what has been changed in terms of programming in unity so so um first of all I quickly want to open up Unity here of course and show you a scene I've set up so this is very basic uh it's just using um the technique showed under the render segment where I have this ground I have light I have a ball with a red material on it and I've added a rigid body which is currently using gravity to that make sure it's not marked as as static uh because this is going to be moving and I also have an F PS controller standing on the ground this is from the standard asset so if you right click go on import package characters then it will be under the characters first person character and then prefabs there is the FPS controller just to get your card up so now when we hit play you'll notice that we have a ball here that we can push around and we can also jump and look around ourselves cool so what we want to do now is have a quick look at what has changed in terms of scripting and really there are so so many changes to uh the unity API and um there's there are so many additions there a bunch of cleanups uh a lot of code is going to run much more efficiently now and uh really one thing that has been improved quite a lot is how uh quickly we can instantiate objects and that's very awesome so uh I'm going to show you a case where we are going to instantiate a bunch of of objects and and just show you how fast that is now I'm also going to show you uh the new uh physics system how easy it handles a bunch of objects at the same time it's now been upgraded to physx uh 3.0 I believe and uh and it it's definitely got a gotten a a huge update uh which makes it much easier to have this huge uh amount of objects or rigid bodies in a scene so we're going to combine those two instances and then I'm also going to show you the changes with uh these easy component uh accesses so uh to do this I'm going to create a script uh right now uh that is going to spawn a bunch of balls uh on a line that are then going to fall so in order to do this I've made this ball into a prefab by dragging it to the project panel and now I want to make a an empty game object so control shift n or command shift n if you're on the Mac and I'm just going to call this underscore spawner it really doesn't matter what it's called and I'm going to uh reset the transform and then move it up to where I we want the balls to start spawning uh upwards and uh then go under add component new script and we're going to call this one uh spawner then let's double click it to open it up in mono develop and it's just going to take a moment cool I'm just going to zoom a bit in on the code here and everything looks pretty much like it used to uh I'm going to delete the start method and instead make uh two variables um the first one is going to be uh a reference to our ball so that's going to be of type that's actually going to be a public so we're going to do public transform and we're going to call it ball then we also going to have a private and this is just going to be a Boolean uh called do once that will make sure that we only spawn uh all of these uh balls once and not each frame we're simply going to use the update function method um to uh check whether or not we are going to spawn so in here we're going to say if time. time which is the amount of seconds that has elapsed since we started playing if that is bigger than three so if 3 seconds has gone by I want the balls to start spawning and in order to spawn a huge amount of objects we are going to be using a for statement so for in I equal Z when I is less than and then maybe 100 we can maybe make this into a int variable here up here so we might say amount spawn amount uh so if I is less than amount then we're going to default this to 100 then we want to increment I oops and then inside of this for statement uh we want to instan anate and uh what we want to instantiate is the ball and the position is going to be for out transform. position and uh simly using Quan do identity so it doesn't have any uh rotation whatsoever and uh then down here we want to set do ones equal to false because we are going to be defaulting this to true and then here we want to check if it's true so if time is greater than three and do once is true so that's uh the setup that will make sure that when the 3 second Mark has passed it's going to spawn 100 Balls and then it's going to make sure that it doesn't do it next frame also but currently they all spawn in the same position I want them to do this um kind of just uh this huge row of objects so we're going to create uh a way for us to change the position depending on the increment um so in order to do this let's create a temporary variable this is going to be of type Vector 3 this is going to be called pass for position and we're going to make this equal to a new Vector 3 Vector 3 being a variable that stores three numbers in here we're going to type transform.position dox I simply wanted to have the uh X position of our spawner then it's going to be transform.position doy and then plus I so as I gets uh bigger as we spawn more balls it's going to set the position higher so it's going to start from the button and then just spawn upwards uh you can of course do I * 2 if you want a a bigger space between them I'm pretty sure that my ball here has a one one one scale so this is just going to put them as close as they can be and then transform. position do Z because we want to emulate that or duplicate that from uh the spawner itself so now we can hit save we can head back into Unity see that no areas are here but it's going to note uh tell us that pass is not used which is very important because we have to put pass in there great so now we should see it working and we can click on our spawner and we can drag in the ball and set the amount just leave that to 100 for now now when we hit play we should see that we spawn into the scene and right about now it spawns a huge amount of balls and then they're just going to stand there and jump and if I walk into these they're going to start falling at a pretty rabid rate so we have this huge amount of balls falling down and uh the recording might not show this um but actually we have a pretty good frame rate uh throughout this um demonst ation I'm just going to put on the stats here so you can see our frame rate now we spawn not a single frame drop here and now we all of the rid bodies start moving and the FPS is completely steady so that's really amazing uh both on behalf of the physics system but also when it comes to the spawning operator I will however show you that it it does do some calculation because this way this case right here is an excellent example of uh how we can use the profiler because if we can't see a visual change on the uh FPS or if we can but we don't know what's causing it we can use the unity profiler to tell us what is currently taking up a lot of performance use both on the CPU the GPU memory one on the physics system everything is there and it's really amazing and it's now available because all of the pro features are now free so if we go under window and select the profiler or control 7 and simply duck it here actually I'm going to duck it down here by the console and then just drag it up so we can see both the game View and the profile at the same time you can see we have a bunch of different things here and right now it's excluding the GPU but we can just include that if you want to so it's right here but I'm simply not going to include it because it's not really um that important for the test we're doing here and I'm going to check on everything physics vsync GI others every parameter that is I want to see it here and make sure it's set to record now we can hit play and we can see in real time what is happening and as soon as they spawn we should see a spike cool so the first Spike we see is right here but you can see there are multiple spikes in here and some of them are caused by rendering some of them are caused by physics and it also has this very annoying vsync which doesn't really tell us a whole lot it spends quite a lot of time on it but vertical syncing is something that you can choose to have or not to have not really something that is easy to optimize so we can disable that this makes everything quite a bit easier if we are not focusing on the rendering which we are not right now we can disable that too and also stuff like the garbage collector Global illumination and others is not important to us right now it's really only the physics system and scripts and the physics systems you can see down here so we're going to disable the physics system on the CPU also but just notice before we do how small of a change that is from this point where it's only our character controller to over here where we have actually 100 rigid bodies acting at the same time it's really amazing so uh now let's disable that and we can see now only the scripts how much they take up and you might be wondering well why are there even any um um why is there even even happening anything up until this point I mean we are not running in the scripts but yeah some scripts are of course in Ed with the first person controller so that's what you're seeing but if we go over here to the first bike right about there we can see this uh uh that wait for Target FPS takes uh 61% please just ignore that but if we select our Behavior update this is where we see all of our mono behaviors updating so if we go under this we can see spawner do update that's our spawners update function and inside of this we should see an instantiate call and we can see that it has 100 calls how much time it takes it takes 6 milliseconds which is amazing uh considering how many we are spawning and uh the percentage of time it's uh taking up on the CPU that frame so that's really amazing and we can even go further in and see what the instantiate function is actually doing so uh this profile is is completely amazing on isolating issues finding out what is taking time really uh comparing uh like on an actual use case on an actual use level uh what um method is best for doing what and and all that uh because you can theorize about performance all you want uh this actually shows you um a graph so that's really really awesome and you can hook it up to an external build and do all kinds of stuff with that so that's a feature that is very handy to have in unity free now so I'm going to clear that out and uh that will pretty much conclude the uh no no no no that will conclude the profile part but I still have to H have to talk about uh the most important API change uh to scripting which is removing component property Getters aha so what does that mean that basically means that you're going to see quite a bit of get component when scripting so let's uh try out a use case here so let's say that we want our balls to spawn but we also want to tell the balls that um they shouldn't that the rate body should disable gravity you want some No Gravity Balls that sounded wrong um but what we are going to do here is we are going to go into our scene we're going to drag down our spawner here so we have we are able to interact with these socalled low gravity uh balls here so um then we're going to have head back into unity and uh what we can do is of course we can collect the rigid body and uh then access one of its properties called gravity and uh set that to false so in order to do this first off we want to collect our instantiated prefab and we do this by making a temporary variable so let's for example say game object uh and then we're going to call this just go for game object equals instantiate and we are going to have to tell it that it should instantiate as a game object so you make sure to cast it and uh then here we can say that go do R Body and no why is this not working I mean if we say go. transform it's here if we say go. game object that's here but if we say go. rigid body it's not and it's not with collider either or audio why is this well that's because Unity has made a choice to go in and remove some of the easy accessors that they've made they have made these quick component Getters so we don't have to do get component each time but they found out that this actually confuses more than it gives and it also doesn't very very clearly show how how much performance it actually takes up it looks like we're not doing a get component call but really we are so that functionality has now been removed to make everything more explicit in our code I I really like the decision some newer members often don't uh because they now have to write more code but um really it it helps you look at or or understand what the code is doing so we have to do go.get component then find the rigid body component oh K component rigid body like this and then we can do. gravity use gravity equals false this is now the new way to access the rigid body and it's the same with audio it's the same with collider it's the same with all kinds of components so that's very important that you understand that now so let's save that and let's H head back into Unity and let's hit play here and we should say that a bunch of balls spawn whoops apparently we're getting a null reference exception and this is going all kinds of crazy uh it's not set to an instance of an object um I'm sure we are spawning but for some reason it might not be finding the rigid body on the component but it should be I'm just going to quickly look into this and find out what I'm doing wrong okay so I found the solution and simply go ahead and replace game object with transform both here and here and it will work so now you see when we hit play wait a second here for it to spawn there we go there they are and they are now without gravity as you can see they are floating off into space so that's basically it for this scripting part of this tutorial hello everyone and welcome to the last section of this Unity 5 primer in this part we're going to have a look at the new ability to export to webgl what this does it is allows us to have to use Unity or run Unity games in the browser without downloading a plugin so it's much more smooth uh in the way in the sense that your uh users don't have to uh install some kind of ugly uh plugin and then my miss out on your game so if we just open up Unity here and this is going to be a quick walk through uh we can go to file build settings so press contrl shift B to open up the build settings and I just have a a small game here which I've actually just going to show you here uh we made that right before the scripting section and you can see it just spawns some balls and uh then you can uh go into them and uh there are a 100 physics objects acting together here I'm just going to show you how quick that runs in the browser I'm also just going to bump up the uh sensitivity of the FPS controller because for some reason reason that goes down when you are exporting to webdl um so I'm just going to find the first person controll here go on the mouse look and change the X and Y sensitivity to something like six instead just try this out in game that's much much nicer cool so uh what we can go ahead and do now oops just stop playing there is uh go to the build settings so control shift B we can uh add the current scene make sure that you have a scene added there make sure that you go down and select webdl and it's currently only in the preview version it won't uh it will have quite a few bucks uh so be aware of that and actually the first time I tried to build I ran into one um currently I with this configuration and this Scene It won't build for me if I slow um which means that it will build fast um so instead as the optimization level I had to select fast you can play around with that and really it takes some time to export as is you can also check if you want a development build I'm also going to leave that off because I had some trouble with that too uh but again this is a preview so uh once you're happy with that and have went into your player settings and um maybe typed in your company name and the product name which is is going to be um awesome physics um uh red balls all over of Destiny of course um and put in an icon and all that then we are ready to hit build and uh once you do that you can maybe make a builds folder which I've already done and I've already build it because it takes again quite some time so uh once you've done that you can hit into the folder go under Unity 5 primer builds and you can see that there are a bunch of folders here we have the compressed data we have the release uh also some data files and then the template data and uh the template here is really just the style of the uh web page if we open this up with notepad um Plus+ here just going to remove the other things I've been doing here you can see that you can adjust um the uh C CSS file here this is simple pretty standard CSS so you can uh adjust how you want your page to look and you also have some different uh images and uh then we of course have the index page itself which is you can of course also edit this is just uh normal uh HTML with some uh JavaScript in uh in it and um yeah so that what you that's what you have the ability to kind of edit uh if if you right click on this you're going to have to select open with Firefox and the reason why is Firefox is actually the only browser currently that is supported if you want to run this in Chrome which I assume uh or at least hope that most of you want um then you're going to have to download uh Chrome 35 uh which is currently in beta and the reason why it doesn't work with 34 is because it it uh sometimes uh freezes because that's an issue with Java so uh if if that's a a problem uh if you don't want to get the beta just download Firefox it's a very quick install uh I've done that so that works quite uh fine so as you can see it just opens up we have this cool uh interface here uh you can uh play around uh in your scene here you can see the balls jumping up and down and you can maybe even uh make this full screen you can see just how how slowly it is to to move uh the camera here so again you want might want to rebuild that and then we can just walk into these and you can see all of the uh objects falling down at actually a very nice frame rate so it's it's having no trouble handling over or just about a 100 uh physical objects so that's a a really great performance so I just wanted to quickly show you how that actually works and that it actually does work uh somewhat at least so yeah that was just the webdl part of this video and uh that pretty much concludes the whole unity5 primary video I hope you really enjoyed it that it lift up to expectations I've spent quite a lot of time it's it's really a long one uh so if you've made it all the way through congratulations you are a champ really really well done and um it would of course mean a lot if you can share this video uh to other Unity users that you might know so they can also get a hang of unity 5 uh I've really put some work into this video so I hope you enjoyed it and I'll see you in the next one