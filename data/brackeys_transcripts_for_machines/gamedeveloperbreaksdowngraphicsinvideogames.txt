Graff fix prayer fix oh yes so recently I've seen a lot of breakdown videos on YouTube and thought it would be really cool to do the same but with game development now I've been doing game development for around ten years now so I've seen everything from the highest of highend graphics so graphics that maybe aren't so great so let's jump right into it and start with one of my alltime favorite games Ratchet and Clank so here we're looking at the PlayStation 2 version compared to the PlayStation 4 version of the first read chilling Clank I think Ratchet and Clank is actually the perfect example of a game that has evolved in a really cool way with technology so if we look at this clip right here this of course a massive change without a doubt the most important thing is the change in lighting in the first step we see pretty much no directional lighting at all everything is just ambient lighting which means that all the objects are lit equally from all directions and there's pretty much not a single shadow in the shot other than Brad shade himself however in the new version there's a very clear direction to the light which helps bring depth through the scene and pretty much all the entities or objects have shadows but really one of the most amazing things here is just the sheer amount of objects that are in the new version in the first version we have a few trees scattered around we have a few rocks lying about and just a few arm kind of animated objects or enemies in the second version we have a huge amount of foliage we have ships flying around we have particles going off all the stuff rendered on screen is just due to the new graphics capabilities that we have we would never have been able to put that much stuff in a single shot before so of course that's pretty cool all right so let's continue all right so a really big difference that we see here is kind of the difference in materials or shaders and this refers in game development to kind of the look and feel of a surface now we of course see all the same lighting differences here and especially the fact that we have this many screws and bolts fly around but the main difference here is definitely the quality of the materials and what do I kind of mean by this well if we look at the oldschool Ratchet and Clank every surface reflects the same amount of light in fact it reflects pretty much no light it's just completely flat this is fine for stuff like dirt and the difference in dirt between the two isn't really that big but we come to stuff like metals shining light off metals is extremely important for us to be able to understand it as a metallic surface take for example the armor of this character right here so in the original version it's completely diffuse it doesn't look like metal however in the new version we have all these specular reflections that give the appearance of that particular piece of armor being different than say the body or the ground this is really really important and it's something that we've seen a huge shift in in fact we now refer to this as PPR a physically based rendering because we define the properties and differences in materials based on real physical properties it's really cool and when ratchet starts to fight this bus we can also see something else happening which is emissive materials because in the first version the lava seems well pretty dull and the reason for this is that it doesn't cast light onto the surroundings and so it doesn't feel like glowing and dangerous lava it just feels like another kind of shade of dirt and this is pretty much the same thing happening with metal but lava doesn't just reflect light it casts its on to its surroundings so it's even clearer here and when you combine this with a postprocessing effect like bloom which pretty much just takes the bright parts of an image and kind of blurs them out to give the impression that they're growing on to the camera we really start to see this effect come to life in fact I did the same thing for a game that I made recently using just these techniques emissive materials and bloom okay I can see what's what's gonna be the difference here so of course a big big thing in rendering has always been water how do you do realistic water and I think for the time that the first ratchet game was made the water here is actually pretty decent it has transparency it has kind of differences in the height of the water which is meant to emulate waves and it also has kind of foam scattered around however it doesn't really look like water still because what is an extremely complex thing and one of the most important things that go into making water realistic is refraction this means the way that light scatters when it hits the water and kind of distorts everything underneath this makes what it looked like actual fluid instead of just kind of a transparent glass like surface and also of course there are lots of foam particle effects being added here and you also see that they've kind of implemented into this water shader the fact that it should create foam lines whenever it intersects with other objects this is actually something that we try to create recently on this channel and it's actually not that difficult with modern technology so overall I think what makes the difference between old ratcheting thing and the new one is that they've kept the same art style and stay true to that which I really really like but they run it through kind of a more realistic physicallybased actually even though it's not a realistic physically based game renderer so that gives this really highend looking graphics but still in the same old Ratchet and Clank style I think another example of a game doing this is overwatch of course overwatch is a new game but they've done the same thing in creating a really stylized look and really stylized aesthetic run through a realistic renderer and I personally really like the outcome of that alright so what's next oh all right you guys are really treating me with this one so another game that I really like is actually hearthstone and this is for a plethora of reasons but one of them is that I think it's a genius way of combining 2d and 3d elements because when creating a virtual card game you're kind of faced with the question of how do you make something twodimensional like a playing card feel real and lifelike in a virtual environment and I think that's exactly what they've done here the board itself is actually entirely 3d everything from the card stack to the buttons to the 3d buildings on the environment and the cards themselves however are 2d but because of the way that they're combined with 3d elements in a threedimensional scene they start to feel way more real and I think they use many subtle tricks to establish this feel I mean the cards themselves are being drawn from the deck using a three dimensional animation the card backs actually have 3d applied to them whether this is a shader or an actual 3d mesh I don't know but it definitely gives the impression and if you notice the cards actually cast 3d shadows onto the threedimensional environment so they feel part of this physical scene because of this I think hearthstone just feels more real and alive than any other card game that I've tried and it also helps bring the characters in these cards to live in this environment and fun fact hearthstone is built using the Unity game engine so a game engine is pretty much just a piece of software that runs underneath any game and kind of specified how the game should be run it registers input from the player it is responsible for drawing graphics so depending on the game engine you'll be able to achieve different levels of quality and a bunch of other stuff like networking and sound and so on and if you haven't watched this channel before the cool thing about unity is that it's a standalone game engine and it's available for free why is this interesting well it's interesting because Blissett is a huge company and normally they are creating game engines from scratch for their games which takes maybe 200 employees just to make a fairly simple thing work however because they chose to use a Unity for hot stone they were able to do it with a team of around 15 people and if you have yet to try out game development yourself this is actually a pretty great news because you can download unity today and get started in fact we have a bunch of videos on this channel that shows you how to get started using it and making some simple games and just me you don't need 15 people to do that also if you want to try out game development but maybe don't trust yourself with just watching tutorials we're collaborating with an awesome guy called Jason Wyman Jason is offering courses where you get to work alongside other students and always access to oneonone help from Jason himself I think this is a really cool way to learn and Jason has courses that cover everything from the very fundamentals of game dev to highly professional workflows right now we offer the first 50 people who sign up a free tshirt from line of code a big discount as well as other bonuses on the courses ok so pop G well first of all I can start by saying that pub G is created with another standalone engine called Unreal Engine 4 and it's known for creating some of the most beautiful looking graphics in the industry however personally I'm maybe not the biggest fan of the art direction on pop G so remember whenever you're trying to create a realistic look it's gonna be really taxing on the hardware and we're also making a battle royale which is a huge technical challenge I think you're kind of setting yourself up for some failure and just watching this something tells me that they've had to cut some corners either because of technical limitations or just because of time restrictions so let's try and break this down so right away in this clip here we can see the character falling towards the ground and there's a distinct lack of shadows and lighting information everything seems extremely flat and especially the coastline kind of catches the eye the water is a very uniform dog blue which is somewhat ok but near the coastline we should always see foam patching up and should be able to see a nice blend from the rocky sand to the water itself yeah this this clip definitely also reveals a lot so the very first thing that I see here is something is wrong with the lighting this building here seems to be completely unlit or at least lining is very much not clear in it there are no contact shadows what we refer to as ambient occlusion and this is what happens when two objects are intersecting or get really close to each other light gets kind of caught between the two object and is unable to escape and therefore whenever two objects are close we kind of see a shadow between them this is not really visible here which means that the object don't feel part of the scene they kind of feel like they're floating on top of the ground which gives the very realistic appearance you can also see a distinct lack of normal maps so normal Maps is a technology used to try and create more threedimensional detail than what you can do with the 3d model because you can only put so much detail in there and your computer will start to cramp up so instead you use normal maps which are basically just images of what we call textures that you apply on to an object containing information about kind of the ups and downs and the bumps and crevasses of the surface and what we can then do with this is instead of actually having this detail on the model we can just whenever a light shines onto the object use this normal map to tell us how we can bend this slide a tiny bit to kind of simulate that detail being there this doesn't work if you are viewing an object from this side because then the texture will just be completely flat and the detail won't be there but if you are viewing it at kind of an angle you can start to look really realistic however here we definitely see a lack of that because all the surfaces look extremely flat in fact I don't see much more than just two color detail here and the bricks on the walls seem to be well kind of painted on it also seems to be kind of low definition textures overall that has just slapped on two objects again we're seeing some problems here with the metallic nassif some of these surfaces it looks like the metallic nests of each object is defined for the entire object however I would recommend for something like this using a metallic map this is also texture just like we have a colored texture and we have a normal texture we would also put a third texture which is a metallic texture and this just defines what parts of the object should look metallic and reflect a lot of light and what parts shouldn't and if we look inside this building we also see that there is really poor to no indoor lighting and indoor lighting is extremely difficult especially if you're trying to save on performance because normally you will just have one big directional light which is the Sun and every time you then have an interior that is just going to be completely dark you're gonna have no shadows in there because the Sun is not going to be casting shadows inside the building at least if it is it's going to look unrealistic so you need to start thing about how to light your interiors with extra lights and that way you can really quickly bloat your scene with all these point lights that are rendering inside of your houses and you're never able to see them unless you actually enter so that's a lot of performance optimization that needs to be done there where you make sure you don't actually render these lights unless you look inside the building which is not an easy thing to do you can also kind of pre calculate lighting which is the technique that a lot of games use if the conditions of your scene isn't going to change some Foofa thought there this can definitely be improved however I have seen much worse cases of trying to go for a realistic look and they're just not being enough time and resources and actually this part here looks much better I don't know if this is a different or new way map but this has metallic Maps the lighting looks to be way way better the detail on the ground here tells me that there are proper normal Maps being applied this looks really really good so well done all right what's next oh okay so for tonight so of course you can talk about pop G without mentioning for tonight and this is not only because these games are both parallel it's actually because they're made with the same game engine for tonight is also made with Unreal Engine 4 and this tells you kind of the power of some of these standalone game engines because they're extremely versatile these two games although they share similarities in gameplay have a very very different aesthetic and I personally think that for tonight is an example of really good art direction because they're realistic with what they're trying to accomplish so first of all everything in Fortnight looks very balanced I really like the aesthetic that they're going for here the lighting seems to be playing off of the colors in a really really nice way they have some really solid postprocessing going which is basically like image effects that make everything blend together it's just a very balanced visual appearance and I think the number one reason why this works so well is because they're using something called hand painted textures so again the textures are the images that we slap onto objects in order to give them color and in the case of pop G they using reallife images for this so you might go out you take an image of a brick wall and you just slap that onto your 3d model and you have a texture that's the most simple way again you can combine this with normal maps and all these are the kinds of scans for increased detail however that is the very simple idea for for tonight they haven't used real live images for this because they're going for that stylized look instead they're using well handpainted textures which is just what the word sounds like it's someone going into Photoshop or some other 2d image editing software and drawing out the textures by hand this can be a pretty tedious process but it also means that you get to save a lot on performance because whenever you're hand painting textures you can make a lot of assumptions about how you want your lighting to look and so you can paint in just digitally by hand you can paint in highlights shadows and crevices and this helps everything pop without having to rely on the renderer to give you this detail which just gives a really cool look in my opinion also the cool thing about handpainted textures is that because they have less detail than a reallife image there's a lot of detail in real life you can actually decrease the resolution of them quite a lot without having them look washed out or just outright bad and that definitely helps to their advantage whenever you are creating something like a battle royale so I think you can see this especially on surfaces that are very flat like rocks you can see all of the different brush strokes that went into creating these textures and also stuff like wood now comparing pup G to Fortnight is actually also interesting in another way and that's because there was quite a bit of controversy when Fortnite came out that's because not only are these two games made with the same engine but the company that made fortnight Epic Games is actually also the company behind the Unreal Engine and they're the one licensing it out to the creators of pub G so all the sudden you have this really complex relationship where a company creates an engine and gives another company permission to use this of course at a cost this company creates something really cool and interesting this other company sees it and because they own the engine and have access to all this information about what this other company is doing they can maybe your nose speed up the process a little bit and create something fairly similar in terms of gameplay really really quickly so that was kinda moral argument at the time and it's really interesting how these standalone game engines that are being shared between all these different game development studios are being used so that's pretty much all the clips and that is my opinion on some of these games if you like this format and would like us to continue it definitely let us know and also definitely write if there's something specific that you would like us to break down also don't forget to check out jason's courses simply click the link in the description to get started and on that thanks for watching and I will see you in the next video thanks of the awesome patreon supporters who donated in July and a special thanks to infinity PPR Dennis Sullivan loss to violence love forever Chris face Tamara Phi David Lipka louisette Ronan Daniel Sonic Jacob Sanford consensus Carranza's Nokia Vaisakhi Gregory Pierce Alison the fierce Erasmus and cool Swedish key you guys Rock