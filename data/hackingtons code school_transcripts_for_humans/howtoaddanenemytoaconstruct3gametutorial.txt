With timestamps:

00:00 - all right let's add in our enemy it's a
00:03 - very similar process to adding in the
00:05 - player but we're gonna give the the
00:06 - enemy some autonomous functions some AI
00:10 - some ability to make decisions and kind
00:13 - of attack on its own and that's where
00:15 - the magic comes in so first things first
00:16 - right click insert new object and it is
00:20 - going to be a Sprite game object
00:23 - and then click where we want it I'm just
00:25 - going to put mine here sure why not now
00:28 - we're going to add in all of the
00:29 - animations for the
00:32 - um the the enemy the Cyclops in this
00:34 - case open up my RPG assets they're going
00:37 - to go into actor and then I'm going to
00:38 - go to monsters and for me I'm going to
00:41 - use the Cyclops 2 which is this green
00:44 - Cyclops here I think it's going to
00:45 - contrast well against the red ninja so
00:48 - what I'm going to do is going to grab
00:49 - the entire Sprite sheet this is a four
00:51 - by four Sprite sheet and we're just
00:53 - going to use a couple of the different
00:55 - animations
00:56 - um in our game here so I'm going to drag
00:58 - that in and then import from Sprite
01:00 - strip and it is four by four replace
01:04 - entire animation import okay so now we
01:07 - have all of the frames this first
01:09 - animation I'm going to rename to just be
01:11 - idle this is going to just be the very
01:14 - first frame of the entire animation so
01:17 - what I'm going to do is I'm going to
01:18 - hold down I'm going to click this first
01:19 - uh or the the second frame hold down
01:23 - shift grab the last frame and then hit
01:25 - backspace and that's going to delete
01:27 - every other frame of Animation out of
01:29 - this Sprite here cool create a second
01:32 - animation this is going to be the
01:35 - walking animation
01:38 - then I'm going to go in and grab that
01:40 - same Sprite sheet the exact same thing
01:43 - import from Sprite strip it's going to
01:44 - be a four by four just like before but
01:47 - now I'm going to grab just the frames of
01:50 - the animation where the Cyclops is
01:52 - facing me we're just going to use the
01:54 - generic facing you to do the entire
01:58 - animation whenever they're moving that
02:00 - way we don't have to keep track of which
02:01 - direction the player is and then play
02:03 - the animation based on where the player
02:05 - is in relation to the enemy that's not
02:07 - going to be worth it in my opinion so
02:09 - we're just going to use the front one so
02:10 - I'm going to delete every other frame of
02:13 - this animation besides where the Cyclops
02:16 - is facing directly towards me now if
02:18 - you're doing a different monster you're
02:20 - going to have to play with this and
02:21 - figure out what you like the best you
02:23 - might not have a 4x4 animation is there
02:25 - a Sprite sheet you might have a just the
02:28 - walking animation something like that
02:29 - but
02:30 - just so you know the idle animation is
02:33 - just the first frame of the walking
02:35 - animation and then we're only going to
02:37 - be using the walking frames that the the
02:39 - monster is facing us because that just
02:41 - makes the most sense in our game all
02:42 - right let's go ahead and close that up
02:44 - we have both animations in there I'm
02:46 - going to go ahead and rename this enemy
02:49 - from Sprite to be enemy all set up now
02:53 - we add in some behaviors so let's think
02:56 - about what we want our enemy to be able
02:59 - to do I want it to kind of just stay in
03:01 - a stationary spot and then when it sees
03:04 - the player it starts to move towards the
03:07 - player
03:08 - and then if we hit the enemy the enemy
03:10 - flashes to show that we've damaged the
03:13 - enemy so let's go into those behaviors
03:14 - and see if we can find something that'll
03:16 - do that so let's add a new Behavior I
03:19 - want
03:20 - that that looking at part first so if
03:24 - the if the enemy can see the player okay
03:28 - so if I just type in C okay that doesn't
03:30 - do anything
03:32 - um well we've got we've got site let's
03:34 - try site okay so line of sight if we
03:37 - read the read the description here line
03:39 - of sight test if an object has line of
03:41 - sight if it can see an object or
03:44 - position that's what we want we want
03:46 - line of sight because we want the enemy
03:47 - to attack if they can see the player and
03:49 - you can't see through solid objects it's
03:51 - like the walls in our game you can't see
03:53 - through those so it won't attack yet so
03:55 - line of sight and then we want the enemy
03:58 - to move to the player when it has line
04:01 - of sight so we want it to move oh move
04:04 - two perfect move an object to a position
04:06 - with an acceleration and deceleration
04:08 - that is exactly what we want so we want
04:10 - to add move to and then we want the
04:12 - enemy to flash when it gets hit so flash
04:14 - there we go
04:16 - so see how I thought through that I came
04:19 - up with an idea of what I wanted to
04:21 - happen I went into behaviors and it just
04:24 - started searching around for what
04:25 - construct already has inside of their
04:28 - behaviors and I was able to find
04:29 - everything that I needed so if you have
04:31 - a new idea of a new mechanic see if it's
04:34 - in behaviors before you code it from
04:35 - scratch
04:36 - all right so we're going to change a few
04:38 - things about some of these behaviors so
04:41 - the lineup site I'm going to leave empty
04:43 - the same as it was before nothing's
04:45 - going to change about that
04:47 - this move too though I do need to change
04:49 - it so my max speed of being 200 is just
04:51 - too fast for me so I'm going to change
04:53 - that back down to 50. and I'm going to
04:56 - go ahead and leave acceleration
04:58 - deceleration alone rotate speed is zero
05:00 - and then we're gonna go ahead and check
05:02 - stop on solids and then we're going to
05:05 - uncheck set angle it's not going to
05:06 - actually rotate it's just going to move
05:08 - to and it's going to keep that that same
05:11 - like front facing look this stop on
05:15 - solids is important because now it can't
05:16 - phase through walls it can't phase
05:18 - through objects if it runs into a solid
05:21 - it will stop so that will be super
05:23 - helpful let's go into the event sheet
05:25 - and start coding this all right let's
05:27 - add an event and this is when the enemy
05:30 - has line of sight to the player so
05:32 - what's going to happen when the enemy
05:34 - sees the player so let's go down to line
05:37 - of sight
05:38 - has line of sight between positions no
05:41 - to an object because the object is the
05:45 - player so when it can see the player we
05:47 - want it to do something all right so
05:49 - what do we want it to do when it sees
05:51 - the player well we want it to move
05:53 - towards the player and then play The
05:55 - Walking animation so let's code that so
05:58 - we're going to move to
06:00 - the enemy is going to move
06:05 - to
06:08 - an object that object is the player so
06:12 - if it has line of sight
06:15 - it will move to the player
06:19 - okay it's moving but we've left it in
06:21 - its idle animation so it's just going to
06:23 - Glide across the screen like it goes so
06:25 - let's go ahead and switch its animation
06:26 - to be the walking animation so set
06:29 - animation to exactly how we have it
06:32 - spelled in our Sprite walking done all
06:36 - right this is what we have so far but we
06:39 - do want to change it up so that if it
06:42 - can't see the player anymore it stops or
06:44 - by default if it doesn't have line of
06:46 - sight tell it what to do so we're going
06:48 - to copy this code here copy
06:51 - and then we're gonna paste it in
06:55 - and what we're going to do is right here
06:57 - I'm going to see see how this was this
07:00 - whole event was selected I just want to
07:02 - select the the conditional event I'm
07:05 - going to right click it and I'm going to
07:06 - choose invert which is going to say that
07:09 - the enemy does not have line of sight of
07:12 - the player so this is the opposite we
07:15 - inverted this event here and now instead
07:18 - of doing this move too we want to stop
07:20 - the move too so I'm going to go ahead
07:22 - and delete that and add an event where
07:26 - the enemy is going to move to and
07:31 - actually we want to stop move to so
07:33 - we're going to stop the move two awesome
07:36 - and we're also going to set the
07:38 - animation from walking
07:40 - to
07:42 - idle so we go ahead and freeze and then
07:46 - we set the animation for us just
07:48 - standing there so now if the enemy sees
07:50 - us it walks towards us and if it doesn't
07:52 - see us it stops if I play this game you
07:55 - can see that the enemy starts walking
07:56 - towards me because it has line of sight
07:59 - to me now we can't break that line of
08:01 - sight because well
08:03 - there are no solid objects in the scene
08:06 - so the enemy always can see us we're
08:08 - going to solve that in a little bit all
08:10 - right so the next thing that we want to
08:11 - do is if we throw a throwing star at the
08:15 - enemy and it collides with the Enemy we
08:17 - want the enemy to stop moving we want it
08:18 - to destroy the shooting star we want it
08:21 - to flash we want it to wait and then we
08:23 - want it to destroy the enemy so that we
08:26 - it's basically a one-hit kill for the
08:27 - enemy so we're going to add an event the
08:30 - enemy collides with an object
08:35 - collision with another object and that
08:37 - object is the throwing star
08:40 - all right so now when the enemy collides
08:42 - with the star we're going to do some
08:43 - stuff well the first thing that we want
08:45 - to do is it's a one hit kill so the
08:48 - enemy is dead so we want to stop it from
08:50 - moving it can't move it's dead so we're
08:52 - gonna go ahead and add in a a little
08:55 - action here it's going to go to that
08:57 - move two that we have before and we want
09:00 - it to stop so stop the move to that's
09:03 - the very first thing we want it to do
09:05 - before it waits before it flashes before
09:07 - anything we want the enemy to freeze so
09:09 - that even though it's dead if it
09:10 - continues to move and it hits us it
09:12 - still damages the player even though
09:14 - we've killed it with our throwing star
09:16 - next we want to actually destroy the
09:19 - throwing star so we're going to grab the
09:20 - throwing star and destroy it this way
09:22 - the throwing star can't go through
09:24 - enemies and kill like two or three of
09:26 - them in a row as soon as it encounters
09:28 - one it gets embedded embedded in that
09:31 - enemy and it stops and gets destroyed
09:34 - now we're going to go ahead and Flash
09:35 - the enemy to give us an indication that
09:38 - we've actually hit the enemy so we're
09:41 - gonna grab the enemy and we're going to
09:42 - grab that flash
09:45 - I'm going to start the flash now this is
09:47 - a little bit important because what we
09:49 - want to do is we want to set up this
09:50 - flash so it takes as long as the weight
09:53 - before it gets destroyed so the on time
09:56 - is going to be 0.1 the off time is going
09:58 - to be 0.1 but I only want it to flash
10:01 - um a little bit so I'm going to say 0.2
10:03 - so it'll turn on turn off and then
10:05 - that's it it'll just flash and then
10:07 - we'll wait and it'll get destroyed so
10:10 - we need to add in a weight here why are
10:13 - we adding in a weight well because if
10:17 - and we're going to make this weight the
10:19 - exact same amount of time as the
10:20 - duration of The Flash because we want
10:23 - the game object the enemy to flash
10:26 - before it gets destroyed if we fire this
10:29 - Flash and then immediately afterwards
10:31 - fire the destroy this Flash doesn't know
10:34 - to wait it doesn't have a built-in
10:36 - weight it will flash for as many seconds
10:38 - as you tell it and also run the next
10:40 - command it's a it's an async event so it
10:44 - will Flash and continue running the net
10:45 - less bit of code so we're going to wait
10:48 - 0.2 seconds before we destroy the enemy
10:53 - let's try this out so I'm going to go
10:55 - ahead and show my entire snippet of code
10:57 - here so line of sight it doesn't have
11:00 - line of sight and then what happens when
11:02 - we hit it with a throwing star let's
11:03 - play the game and see if it works
11:06 - all right so I can run away I hit the
11:09 - enemy it flashes a couple of times and
11:11 - then gets destroyed it's working exactly
11:14 - the way we want it to this is awesome we
11:16 - have a working enemy now that we have an
11:18 - enemy we can add in health to the player
11:20 - so the enemy actually is dangerous let's
11:23 - do that in the next video

Cleaned transcript:

all right let's add in our enemy it's a very similar process to adding in the player but we're gonna give the the enemy some autonomous functions some AI some ability to make decisions and kind of attack on its own and that's where the magic comes in so first things first right click insert new object and it is going to be a Sprite game object and then click where we want it I'm just going to put mine here sure why not now we're going to add in all of the animations for the um the the enemy the Cyclops in this case open up my RPG assets they're going to go into actor and then I'm going to go to monsters and for me I'm going to use the Cyclops 2 which is this green Cyclops here I think it's going to contrast well against the red ninja so what I'm going to do is going to grab the entire Sprite sheet this is a four by four Sprite sheet and we're just going to use a couple of the different animations um in our game here so I'm going to drag that in and then import from Sprite strip and it is four by four replace entire animation import okay so now we have all of the frames this first animation I'm going to rename to just be idle this is going to just be the very first frame of the entire animation so what I'm going to do is I'm going to hold down I'm going to click this first uh or the the second frame hold down shift grab the last frame and then hit backspace and that's going to delete every other frame of Animation out of this Sprite here cool create a second animation this is going to be the walking animation then I'm going to go in and grab that same Sprite sheet the exact same thing import from Sprite strip it's going to be a four by four just like before but now I'm going to grab just the frames of the animation where the Cyclops is facing me we're just going to use the generic facing you to do the entire animation whenever they're moving that way we don't have to keep track of which direction the player is and then play the animation based on where the player is in relation to the enemy that's not going to be worth it in my opinion so we're just going to use the front one so I'm going to delete every other frame of this animation besides where the Cyclops is facing directly towards me now if you're doing a different monster you're going to have to play with this and figure out what you like the best you might not have a 4x4 animation is there a Sprite sheet you might have a just the walking animation something like that but just so you know the idle animation is just the first frame of the walking animation and then we're only going to be using the walking frames that the the monster is facing us because that just makes the most sense in our game all right let's go ahead and close that up we have both animations in there I'm going to go ahead and rename this enemy from Sprite to be enemy all set up now we add in some behaviors so let's think about what we want our enemy to be able to do I want it to kind of just stay in a stationary spot and then when it sees the player it starts to move towards the player and then if we hit the enemy the enemy flashes to show that we've damaged the enemy so let's go into those behaviors and see if we can find something that'll do that so let's add a new Behavior I want that that looking at part first so if the if the enemy can see the player okay so if I just type in C okay that doesn't do anything um well we've got we've got site let's try site okay so line of sight if we read the read the description here line of sight test if an object has line of sight if it can see an object or position that's what we want we want line of sight because we want the enemy to attack if they can see the player and you can't see through solid objects it's like the walls in our game you can't see through those so it won't attack yet so line of sight and then we want the enemy to move to the player when it has line of sight so we want it to move oh move two perfect move an object to a position with an acceleration and deceleration that is exactly what we want so we want to add move to and then we want the enemy to flash when it gets hit so flash there we go so see how I thought through that I came up with an idea of what I wanted to happen I went into behaviors and it just started searching around for what construct already has inside of their behaviors and I was able to find everything that I needed so if you have a new idea of a new mechanic see if it's in behaviors before you code it from scratch all right so we're going to change a few things about some of these behaviors so the lineup site I'm going to leave empty the same as it was before nothing's going to change about that this move too though I do need to change it so my max speed of being 200 is just too fast for me so I'm going to change that back down to 50. and I'm going to go ahead and leave acceleration deceleration alone rotate speed is zero and then we're gonna go ahead and check stop on solids and then we're going to uncheck set angle it's not going to actually rotate it's just going to move to and it's going to keep that that same like front facing look this stop on solids is important because now it can't phase through walls it can't phase through objects if it runs into a solid it will stop so that will be super helpful let's go into the event sheet and start coding this all right let's add an event and this is when the enemy has line of sight to the player so what's going to happen when the enemy sees the player so let's go down to line of sight has line of sight between positions no to an object because the object is the player so when it can see the player we want it to do something all right so what do we want it to do when it sees the player well we want it to move towards the player and then play The Walking animation so let's code that so we're going to move to the enemy is going to move to an object that object is the player so if it has line of sight it will move to the player okay it's moving but we've left it in its idle animation so it's just going to Glide across the screen like it goes so let's go ahead and switch its animation to be the walking animation so set animation to exactly how we have it spelled in our Sprite walking done all right this is what we have so far but we do want to change it up so that if it can't see the player anymore it stops or by default if it doesn't have line of sight tell it what to do so we're going to copy this code here copy and then we're gonna paste it in and what we're going to do is right here I'm going to see see how this was this whole event was selected I just want to select the the conditional event I'm going to right click it and I'm going to choose invert which is going to say that the enemy does not have line of sight of the player so this is the opposite we inverted this event here and now instead of doing this move too we want to stop the move too so I'm going to go ahead and delete that and add an event where the enemy is going to move to and actually we want to stop move to so we're going to stop the move two awesome and we're also going to set the animation from walking to idle so we go ahead and freeze and then we set the animation for us just standing there so now if the enemy sees us it walks towards us and if it doesn't see us it stops if I play this game you can see that the enemy starts walking towards me because it has line of sight to me now we can't break that line of sight because well there are no solid objects in the scene so the enemy always can see us we're going to solve that in a little bit all right so the next thing that we want to do is if we throw a throwing star at the enemy and it collides with the Enemy we want the enemy to stop moving we want it to destroy the shooting star we want it to flash we want it to wait and then we want it to destroy the enemy so that we it's basically a onehit kill for the enemy so we're going to add an event the enemy collides with an object collision with another object and that object is the throwing star all right so now when the enemy collides with the star we're going to do some stuff well the first thing that we want to do is it's a one hit kill so the enemy is dead so we want to stop it from moving it can't move it's dead so we're gonna go ahead and add in a a little action here it's going to go to that move two that we have before and we want it to stop so stop the move to that's the very first thing we want it to do before it waits before it flashes before anything we want the enemy to freeze so that even though it's dead if it continues to move and it hits us it still damages the player even though we've killed it with our throwing star next we want to actually destroy the throwing star so we're going to grab the throwing star and destroy it this way the throwing star can't go through enemies and kill like two or three of them in a row as soon as it encounters one it gets embedded embedded in that enemy and it stops and gets destroyed now we're going to go ahead and Flash the enemy to give us an indication that we've actually hit the enemy so we're gonna grab the enemy and we're going to grab that flash I'm going to start the flash now this is a little bit important because what we want to do is we want to set up this flash so it takes as long as the weight before it gets destroyed so the on time is going to be 0.1 the off time is going to be 0.1 but I only want it to flash um a little bit so I'm going to say 0.2 so it'll turn on turn off and then that's it it'll just flash and then we'll wait and it'll get destroyed so we need to add in a weight here why are we adding in a weight well because if and we're going to make this weight the exact same amount of time as the duration of The Flash because we want the game object the enemy to flash before it gets destroyed if we fire this Flash and then immediately afterwards fire the destroy this Flash doesn't know to wait it doesn't have a builtin weight it will flash for as many seconds as you tell it and also run the next command it's a it's an async event so it will Flash and continue running the net less bit of code so we're going to wait 0.2 seconds before we destroy the enemy let's try this out so I'm going to go ahead and show my entire snippet of code here so line of sight it doesn't have line of sight and then what happens when we hit it with a throwing star let's play the game and see if it works all right so I can run away I hit the enemy it flashes a couple of times and then gets destroyed it's working exactly the way we want it to this is awesome we have a working enemy now that we have an enemy we can add in health to the player so the enemy actually is dangerous let's do that in the next video
