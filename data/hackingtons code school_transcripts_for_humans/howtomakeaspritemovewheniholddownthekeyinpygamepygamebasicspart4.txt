With timestamps:

00:10 - [Music]
00:20 - all right so my game has movement to the
00:22 - right and to the right only also I have
00:24 - to hit the arrow key and individual time
00:28 - every single time I want it to go to the
00:29 - right let's clean up this movement let's
00:32 - do some advanced movement so what I'm
00:34 - going to do here is I'm going to create
00:36 - four variables that keep track of
00:38 - whether or not a certain key has been
00:40 - pressed now you could do a dictionary
00:42 - you could do a list you could do a lot
00:43 - of different things but for the ease
00:46 - meanness of this and the fewer things
00:48 - that I have to teach you before you
00:49 - actually start typing code let's just do
00:51 - four variables so we'll call move left
00:54 - and we're set that equal to false this
00:57 - is going to be a boolean this is going
00:59 - to be a switch that is either turned on
01:00 - or off I'm going to do the same thing
01:03 - for a move right and you could probably
01:06 - guess what I'm going to do after this go
01:08 - ahead and get them all typed in here now
01:09 - that half my variable is created that
01:11 - are the switches that are going to keep
01:12 - track of whether or not a key has been
01:15 - pressed down now when I press the right
01:18 - key instead of actually doing the
01:20 - movement I'm just gonna turn a variable
01:22 - on I'm gonna say move right is now true
01:27 - okay let's do this for the rest of the
01:29 - keys all right so here is my new while
01:33 - loop so when I press a key down I turn
01:36 - these to true if it happens to be the
01:39 - correct key now I need to turn them back
01:41 - off when I let up on the key so what I'm
01:44 - going to do is going to copy this entire
01:45 - if statement and I'm going to put it
01:48 - down here it's gonna fix my indentation
01:52 - so that the F key downs line up so we
01:56 - can see if and if that all lines up I'm
01:59 - going to change this to an LF so that it
02:01 - registers correctly and then instead of
02:03 - doing key down I'm gonna say key up so
02:06 - when I let go of a certain key
02:08 - I will then set these movements back to
02:10 - false basically all we have done is said
02:16 - if you're pressing the key it's true if
02:18 - you're no longer pressing the key it's
02:19 - false all right so now that we have
02:22 - flipped these boolean x' now we can
02:27 - actually apply the movement based on the
02:30 - condition of the variables okay
02:32 - something
02:33 - all down here now this is gonna be a
02:35 - little hard to see here guys but I am
02:38 - making sure that I am no longer in the
02:40 - for loop I'm no longer getting an event
02:43 - now I'm just reading variable names so I
02:46 - no longer have to listen for events and
02:48 - now I can say if move underscore right
02:54 - now I'm not saying if move right equals
02:57 - equals true because move right itself
03:00 - holds the value of true or false so I
03:03 - can just say if move right then I can do
03:06 - player underscore X plus equals 10 I'm
03:11 - just going to move it to the right now
03:13 - if I run my game here I can now woah
03:16 - woah that was that was really that was
03:17 - really fast okay let's try that again so
03:23 - I hit it once oops let's click on again
03:25 - so if I hit it once I move 10 but ever
03:27 - hold it down I move all of the tens so
03:30 - tens way too much let's just do one
03:31 - let's try that let's run it again click
03:37 - it I move I hold it down I move cool
03:39 - it's not perfectly smooth obviously
03:41 - there's lots more optimization that can
03:43 - happen here but at least we have that
03:44 - working now I'm going to do the exact
03:47 - same thing for all the other movements
03:49 - so I'm going to copy this and I'm gonna
03:51 - go down here I'm going to paste it in
03:52 - and I'm gonna say if move left now I can
03:58 - subtract one because we're going in
04:00 - negatively we're going the other
04:02 - direction the X direction if you
04:04 - increase X and move right then you must
04:06 - decrease X to move left now I'm going to
04:09 - go through and then do this for all of
04:10 - the rest of the keys and make sure it
04:12 - works rerun my game and I can see the
04:14 - movement totally works and because of
04:17 - how we're using the boolean z' i can
04:19 - measure two key presses at the same time
04:22 - which allows me to move diagonally in my
04:25 - canvas here okay this is exciting we
04:27 - have advanced movement we've got an
04:29 - image on our screen now we just got to
04:31 - build an actual game if you've already
04:33 - built an actual game drop it in the
04:35 - comments if you thought this was a
04:36 - terrible way to do things and you have a
04:38 - better way tell me tell me in the
04:40 - comments I want to learn that's why I
04:42 - make these actually I make these to
04:44 - teach but you know learnings product
04:45 - part of teaching too
04:47 - all right build this have fun you guys
04:48 - will see in the next one

Cleaned transcript:

all right so my game has movement to the right and to the right only also I have to hit the arrow key and individual time every single time I want it to go to the right let's clean up this movement let's do some advanced movement so what I'm going to do here is I'm going to create four variables that keep track of whether or not a certain key has been pressed now you could do a dictionary you could do a list you could do a lot of different things but for the ease meanness of this and the fewer things that I have to teach you before you actually start typing code let's just do four variables so we'll call move left and we're set that equal to false this is going to be a boolean this is going to be a switch that is either turned on or off I'm going to do the same thing for a move right and you could probably guess what I'm going to do after this go ahead and get them all typed in here now that half my variable is created that are the switches that are going to keep track of whether or not a key has been pressed down now when I press the right key instead of actually doing the movement I'm just gonna turn a variable on I'm gonna say move right is now true okay let's do this for the rest of the keys all right so here is my new while loop so when I press a key down I turn these to true if it happens to be the correct key now I need to turn them back off when I let up on the key so what I'm going to do is going to copy this entire if statement and I'm going to put it down here it's gonna fix my indentation so that the F key downs line up so we can see if and if that all lines up I'm going to change this to an LF so that it registers correctly and then instead of doing key down I'm gonna say key up so when I let go of a certain key I will then set these movements back to false basically all we have done is said if you're pressing the key it's true if you're no longer pressing the key it's false all right so now that we have flipped these boolean x' now we can actually apply the movement based on the condition of the variables okay something all down here now this is gonna be a little hard to see here guys but I am making sure that I am no longer in the for loop I'm no longer getting an event now I'm just reading variable names so I no longer have to listen for events and now I can say if move underscore right now I'm not saying if move right equals equals true because move right itself holds the value of true or false so I can just say if move right then I can do player underscore X plus equals 10 I'm just going to move it to the right now if I run my game here I can now woah woah that was that was really that was really fast okay let's try that again so I hit it once oops let's click on again so if I hit it once I move 10 but ever hold it down I move all of the tens so tens way too much let's just do one let's try that let's run it again click it I move I hold it down I move cool it's not perfectly smooth obviously there's lots more optimization that can happen here but at least we have that working now I'm going to do the exact same thing for all the other movements so I'm going to copy this and I'm gonna go down here I'm going to paste it in and I'm gonna say if move left now I can subtract one because we're going in negatively we're going the other direction the X direction if you increase X and move right then you must decrease X to move left now I'm going to go through and then do this for all of the rest of the keys and make sure it works rerun my game and I can see the movement totally works and because of how we're using the boolean z' i can measure two key presses at the same time which allows me to move diagonally in my canvas here okay this is exciting we have advanced movement we've got an image on our screen now we just got to build an actual game if you've already built an actual game drop it in the comments if you thought this was a terrible way to do things and you have a better way tell me tell me in the comments I want to learn that's why I make these actually I make these to teach but you know learnings product part of teaching too all right build this have fun you guys will see in the next one
