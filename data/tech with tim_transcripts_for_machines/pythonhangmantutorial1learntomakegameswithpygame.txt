hello everybody and welcome back to another brand new Python tutorial series in this next three videos what we're gonna be doing is working towards creating our very own version of hangman so you can see hangman on the screen and what we're gonna be doing here is learning more about Python learning about a popular module called a PI game which allows you to create 2d games and then of course applying all of those skills to our own project I find that the best way to learn is actually working towards an end goal which is a project and learning a little bit about the theoretical concepts about why and how things work and then immediately applying them into some kind of project like we're gonna be doing here so this series is gonna be wellsuited for people that have a little bit of experience in Python but then maybe aren't too confident maybe they don't know how to set up a large program yet and I think there's gonna be a lot of lessons and things that people can learn just by seeing the way that I'm actually gonna go about setting up this program so this is gonna be about a hundred and fifteen lines of code it might be a little bit longer a little bit shorter but in that range and I think that if you're a beginner being able to see how you can actually set up a program of this length how you can declare things like constant value some best practices it's a really valuable skill and of course I'm gonna be trying my best to teach that to you as we apply these skills to our own hangman game so with that being said let me give a quick demo of this game and then we're gonna talk about the online coding platform I'm actually using and then of course we will get into the code and talk about everything you need to download and anything you need to do to get set up so the first thing we'll do is actually look at this game hangman so I've made this this is a demo version our final version may look a little bit different depending on if we change anything and of course as we go through this series you're welcome to modify anything you like and I would encourage you to do so so you can see hangman I assume all of you know how hangman works but essentially we have a bunch of letters here this is the word that we're trying to guess and we can pick these letters and if we get them corrected we'll fill in these blanks otherwise another part of the man on this whatever we want to call it will pop up so let's have a look here if I type C we can see that that apparently was not in the word so we got if I type B we get the torso and now let's put a letter that is their D okay can you guys guess what the word is I'm gonna go V that one was there J that's not there okay no e okay let's go with an R alright G let's go with an L let's go with an O and I know what this word is I'm gonna go with a P so the word was developer we got that correct and then the game adds so that is the basics of this hangman game of course we may or may not add more things to it and I will be showing you near the very end of this series how you can kind of customize this make new words and all of that fun stuff so with that being said let me talk about this online coding platform that we're actually going to be using which is called repla so for this series I wanted to use a platform that requires pretty much no setup for us and that anyone will be able to use regardless if if you're on a phone if you're on an iPad if you're on a laptop doesn't matter what machine you're using so long as you have internet access and a browser you will be able to follow along with this tutorial series and that's because we're gonna be using a website called repple dot I T otherwise known as repli'd so the URL is repl dot I T you can see I'm on it right here and this is an online collaborative coding environment now what this means is that you can hop into your browser you can type in this URL and immediately you can get brought into this coding environment and start writing code so you don't need to download anything you don't need to set anything up and it's a bunch of really cool features on this website that I'm just gonna walk you through slowly because I think they're really valuable and that you guys will find a lot of value from them so repli'd has sponsored this tutorial series I'll be clear here but these are some of the features of repli'd that I want to discuss so there's an inbrowser IDE this means that's kind of the online coding environment you were looking at before it has realtime collaboration which actually means if you wanted to you can invite your friends you could invite other people to modify your code in real time that's actually a really cool feature that I don't see on many other platforms and as github integration which will become important as you work on larger projects in the future 50plus languages including support for Pi game which is the module we're going to be using you can host and deploy your code there's a bunch of learning resources and tutorials right on the website that you can follow along with there's team plans and then there's API and plugins which probably aren't that relevant to all of you but this is the platform we're gonna be using so the first step for us in this series is going to be to head over to rappelled 80 again otherwise known as repli'd URL is repl IT and of course that link will be in the description so once we head over there what you're gonna need to do is start create an account or log in I believe you can sign in with your Google account that's what I've done and once you do that you should be asked to enter your favorite programming languages and then you'll be brought to a page that looks like this so I would recommend selecting a Python as one of your favorite programming languages not a huge deal if you don't but just wait until we get to a page like this once we're here we're pretty much ready to go so I'm just gonna give you a quick walkthrough of this website the first thing I want to talk about is actually this tutorials pane which i think is really cool so here on the sidebar is kind of all of the main menu features that you can look at you can see if we click on tutorials there's a bunch of different tutorials we can scroll through for example there's one here in C++ we can look at the new ones that have been posted there's one that was posted two hours ago and then there's all these other options we can look at as well so we can look at challenges we can ask questions there's announcements and all of that fun stuff and then if we go over here to templates if this loads what we can see is there's actually a bunch of templates that are already created for us if we wanted to do something like make a website if we wanted to let's see here make a game so they have this p5.js thing really cool and just makes it really easy to kind of hop on here and quickly experiment with things and start working on code next we can go over here which is actually to our profile section so if you click on your little icon or you little person and what you'll see here is you can actually have all of your games that you've created on a public profile this means if you want to share your work with someone all you have to do is have your repple be created on your public profile you can share the link with someone and that means you don't need to send them a zip file they don't need to download it anything anything on their computer they can just come to this website press run on your code and be able to see what you've actually worked on which i think is a really cool feature so not there's the my repla section this is where you can organize all of your code when you make a new project we're gonna call that a repple and that's what the website is calling it and then you can see all of the projects here you can organize them into folders and that is pretty much the basic walkthrough of this website now to actually get started here what we need to do is click on new rap at the top and we need to select PI games so go ahead and search for PI game here and you'll see that that's popping up again this is a module in Python that is supported on repli'd so we select PI game and that's gonna automatically set up our environment so we're ready to start using this module whereas if we were doing this on our local machine we need to install a bunch of things and get some stuff set up so I'm gonna go ahead and put PI game here and I'm going to name my project hangman feel free to name yours whatever you'd like notice that it says your apples will appear on your profile if you didn't want that to happen you could upgrade your account and you would have access to private rebels so let's go ahead here and click create rattle and again keep in mind all of this is free I haven't paid for any of this only if you want the upgraded features what you need to do that so we're gonna give this a second to boot up here you'll see that it's starting to install some things on the sidebar here and while this is happening I'm just gonna go through the different panes on this website so we're all clear on the different things when I discuss them so here on the bottom righthand side of my screen my FaceCam might be covering some of it we have what's known as the console now the console is where we're actually gonna be running our Python code so this will kind of automatically be working and updating for us and what we do is when we're ready to actually run our PI game project when we set that up is there's a button up here and we'll press run and then the actual PI game window will pop up here where right now it's just a gray square because we have we haven't yet put any code in this middle pane here this is actually where we're gonna be writing all of our code and this is what's going to be rendered and showed on this righthand side here in the console when we go ahead and click that Run button next we have the finals pane here this is where we can make new files add images all of that and then we have the version control tab packages tab and settings you may want to go in here to the Settings tab and modify for example your theme from light to dark I do like working in the dark theme so I'm leave it like that and then of course there's a bunch of other things you can change like the font size which I'll make mine a bit larger so it's easier for you guys to read and I've made my indent size four instead of two so with that being said we're pretty much ready to go the next thing we need to do is actually download some images that we're going to be using in this project so if you click on these three dots right here there's something that says upload folder we're gonna do that in one second but I need to tell you how we can actually download the images for this project so there's actually gonna be a URL that I'm leaving in the description so go down there and look right now and it says image download you're gonna click on that and it should immediately download a bunch of images from my website which are gonna be the six hangman images we're actually going to be using so let me go ahead and open these up I just need to find them let's go here and I'll just show you what one of them looks like you can see it looks something like this so that's hangman image one this is hangman image two it has the torso and what we'll be doing is actually drawing these images on the screen when we want to show the different hangman States so download those images that will actually be in a zip folder let me go here so you can see if I go here it says images it's all zipped up what you'll need to do is rightclick on that and click extract all there might be something called decompress I don't know what operating system you're on but either way you can also click in you can grab this image folder and you can cut it and you can paste it somewhere else so you can see that I can I'm just gonna replace because there's already this image folder and then what we're gonna do is we're gonna go to these three dots on this website once you have your images folder extracted and somewhere on your computer and we're gonna upload those images so we're gonna click here we're gonna go upload folder we're gonna go ahead and find where that is so for me I believe that's on my desktop I have hangman and I have images so I'm gonna upload all of these images it's gonna say well you allow this I'll say yes I will allow all these images to be uploaded and now we have six images right beside our main dog pie file and we're actually ready to start drawing and loading these into our program so hopefully that made sense but download the images extract the images so extract that folder upload all of the images here to rebel they will stay here they will be saved and we're pretty much ready to actually start writing some code so now after that long introduction which I do apologize for we are ready to start writing some code so the first thing we're actually going to do in here is we're gonna import two modules that we need to use which is PI game and OS so whatever we're using something that's not built into Python by default so for example we're not using a for loop or an if statement or something like that then we need to import these modules because they're gonna have some new syntax and features that now we're able to access so we're getting these green lines because we have not used these modules yet don't worry about that that's not an error that's just a warning trying to tell us hey you might not need this module because you haven't used it but we are going to use them so the first thing we do after we int sorry import PI game is we need to initialize it so this is kind of a necessary step just to make sure we don't have any errors or any bugs or anything that happened immediately this just sets up PI games that we're ready to go and actually start using the PI a module so import PI game import OS PI game in it and next what we need to do is define the dimensions of our script so we need to pick a width and a height in pixels that we want our game to be now this is gonna be a little bit different than we might usually decide because we're gonna be working on this website and maybe a little bit of a smaller box here but I've determined that a good width and height for our project is gonna be 800 by 500 so I'm gonna say width comma height if I can type this equals 800 by 500 so notice if you haven't seen the syntax before we can define multiple variables in the same line simply by separating them by a comma and then just making that many items on the other side of the equal sign separated by commas so with obviously as 800 and height is going to be 500 now to actually tell pygame that we want our width and height to be this what we need to do is go high game dot display dot set underscore mode and then inside of a set of brackets we're gonna put width and height this is because a PI game accepts a topple for the width and the height so we put inside a brackets when we want the width and the height be now the reason I've defined these as capitals is because these are constant values these are values that do not change and since there's no notion of a constant in Python what we do just to have some kind of good practices and understand that these should be treated as constants is we make the variable name all capitals so that's a good habit to get into whenever you declare something that you don't plan on changing anywhere in the program make it in all capital letters so that people know and yourself knows that hey this is a constant I should not change this and it's not going to be changing anywhere so now that we have this we have pygame display dot set underscore mode we have actually created the dimensions for our pi game screen i can't run it yet for you because if I do it'll just open and immediately close and we won't see it but the next thing we're gonna do is actually um was it define what we want the name of our game to be so pi game dot display dot set underscore caption and then inside of here we're gonna put a string that defines what our caption should be in this case I'm just gonna make this hangman game hangman man hangman game like that and now you'll see when our screen pops up and this will happen in a minute or two when I run this that we actually have hangman game as kind of a little label on the top bar for our game so we've set the mode which is pretty much just defining the dimensions and then we've set the caption the next thing we need to do is actually create what's known as our game loop so whenever we make a PI game program we need a loop so some kind of looping mechanism that's gonna constantly runs gonna be doing things like checking for collision checking if we clicked something I'm checking if time has ran out doing anything that you would normally do in a regular game that's what our game loop does so we need that so that we make sure that we're constantly running the game and we don't just open it once and then close it so what we're gonna do is we're gonna set up what's known as a while loop but the first thing we need to do is define actually the speed at which our game is gonna go out so this is also known as FPS right frames per second if you played a game like fortnight if you've played any shooter game you've probably seen that you have some kind of FPS now in PI game it's not really FPS but it's a very similar thing we're gonna define what we want the max FPS to be so that we don't have games that are running way faster than other games they're all running at a very similar speed so we're gonna say FPS and all capitals is gonna be 60 so I want this to be 60 frames per second that will be what the maximum FPS will be then what we're gonna do is actually create a clock object in PI game that will make sure that our loop is gonna run at this speed so what I'm gonna do is I'm gonna say clock equals PI game time and then dot clock with a capital C and inside of here I'm gonna put FBS so I'm pretty much saying I want to set up a clock object that's going to count at 60 frames per second so we're just gonna keep track of the time for me essentially using this fps and again I define the FPS up here all right now I'm gonna make a variable I'm gonna call this run and I'm gonna set this equal to true and this is gonna be what controls our while loop so I'm gonna put a while loop right here and what this essentially says is Wow whatever is on the righthand side of this so while the variable run is equal to true do whatever is indented inside this well very simple while this variable stays true keep running this loop so essentially we will run this loop until we set this variable to false and we'll only set that variable to false once we've lost the game or once we've quit or we're exiting the game essentially inside of here what I'm gonna do is I'm gonna write clock dot tick now this is necessary just to make sure that our while loop runs at that speed that we set up here so we made the clock object we're gonna have the clock object tick and then that's pretty much saying hey tick at this speed and that's pretty much all we need to do and in fact I've realized I've made a mistake this FPS that's inside of line 10 here on the clock we need to actually put that inside of the tick method here so clock tick and that will make it run at the proper speed my apologies about that now inside of this while loop what we actually need to do and the first thing we always set up is we check for events so in PI game whenever something happens like pressing the mouse pressing a keyboard button pretty much doing anything an event is triggered and to be able to look through all those events which we're gonna want to do B we want to see for example when the user presses the mouse when they click the exit button there's a few events we want to check we need to grab them and we need to look at them so we're gonna use a for loop we're gonna say for event in PI game dot event dot yet like that we're gonna put a colon and then we're gonna go inside of here and we're gonna actually start looking for the events so essentially what this will do is any event that's happened will be stored inside of here you can think of it almost like a list you can think of it as some whatever data structure you want that just has a bunch of events we're gonna loop through all of the events and every loop one of those events is gonna get thrown into the variable event so what we can do inside of here is we can say something like if event dot type equals equals so we're checking if the type of the event is equal to and then whatever we want to check so in this case the first event I want to check is actually pi game and then in all capitals dot quit what this means and what this event is is when we click that red X button on our window so you know you can kind of see even here right there's an X at the top that's gonna be the same thing that's gonna show up for our PI game window to be able to close it and well this is the event that happens when we press that button so inside of here what we should do is we should stop running this while loop and we should quit Pi game so what I'm gonna do is I'm gonna say run equals false and what that does know is mean but the next time we hit the top of this wanna loop we are no longer gonna run we're gonna stop and we're gonna quit hiking and in fact what I need to do at the very bottom of my program is say pi game dot quit like that and what this will do now is essentially say ok as soon as we pass this while loop and we get out here we're gonna quit high game which just means close the window and that is as easy as it is so let's actually move this over here now let's do run and let's see if this works properly sometimes it does take a second to boot up so I will be back when this boots up alright so how'd any small trouble running this program and maybe that's actually good because I can tell you guys what I did to fix it so if for some reason you can't seem to press run and get this to work it's probably just because pygame is quite difficult to run from the web what you need to do is just change the name of your project you can change your back after but I just changed it and not forced to refresh and then that way I was actually able to see this project so anyways you can see that I just press run and now we get hangman game popping up and well you can move this window around a little bit and if we press the X button it quits the game so that is pretty much what we were trying to go for here you can see that now it's no longer running anymore because I pressed quit and now we're pretty much good to continue coding so that's kind of the first run and I'd also added this line of code here you don't need that so let me get rid of that I was just troubleshooting but that is how you get your first kind of initial Windows setup and the first event which is pressing on that X button to actually register and work so the next thing I want to show you is how we can actually register Mouse events so since we're already doing this let's see how we can actually get the position of our mouse when we're pressing it on the screen and this should hopefully tell us actually how the coordinate system works in PI game which is going to be an important thing to understand for the next step which is going to be to start loading in some images and getting those displayed on the screen so let's go ahead and do that what I want to do is I want to check what my mouse is out when I actually move my mouse and when I click down so the event to check for a mouse press is if event dot type equals equals and then we're gonna save my game dot and in all capitals mouse button down like that if that happens let me zoom out a tiny bit so that we can zoom like that okay so we can see this whole thing so if a vente type equals equals pi game down mouse button down then what we're gonna do is just print to the console pi game dot mouse and dot pause with brackets like this so in fact let me throw this into a variable let's go pause equals PI game mouse table pause and let's print out pause so pause just stands for a position and what I'm trying to do is just get the XY position of my mouse in the window the reason this is important is because later when we start adding those buttons to the screen we want to check if they were pressed and will to be able to do that I'm gonna have to compare the mouse position of my mouse to the position of where those buttons are to check I've actually hit one of them then if I hit one of those buttons we're gonna do something on the screen right so this is how you get the position of the mouse you say pawns POS equals PI game mouse stop pause and then if you want to check to only get that when you press the mouse button down you use this event right here so let's go over here let's make our console a bit bigger hopefully you guys can see all this and let's run this one more time alright so it comes up and now let me start pressing down on the mouse and what does it say here PI game mouse has no attribute pause ah my apologies guys I do make mistakes as well this should be get underscore pause okay that makes more sense get underscore pause this is essentially get position so let me run this one more time you notice I did get an error there because I had some wrong code so let's run this and now let's press down and notice that we get the position of the mouse showing up down here in the console now let's actually see what the position of my mouse is so really we would imagine that based on our kind of understanding of a coordinate system the middle of this window should be zero zero right but when I click on this I'm getting 397 to 46 that's not zero zero in fact what happens when I come down here I'm getting 386 496 so it seems as though as I go up the Y position decreases and as I go down the Y position increases this is actually the first thing to understand about PI game is that the top coordinate so zero zero coordinate is actually in the top lefthand corner of the screen so notice I'm clicking here and I'm at one one pretty much right at the top lefthand corner if I go to the right hand corner I'm actually at 796 3 which is pretty much the maximum width and the minimum height so just note that when we talk about coordinate systems in PI game when we increase the X we move further to the right and when we increase the Y we move further down and this is actually really good to understand as well because when we start drawing things on the screen we actually draw them from the top left hand corner which means that say we're drawing some image that's like you know 50 by 50 well when we start drawing that we start drawing it from the top lefthand corner which means the far right edge of that image will be 50 pixels further than where we decided to draw it and will be 50 pics or pixels lower than where we decide to draw it as well so if I click here really it will be like a box like that it's hard to show you with my mouse but hopefully that makes kind of sense just understand the top left is zero zero that's very important to understand impacting alright so now that we have that the next thing I want to do is actually load in these hangman images and show you how we can start drawing and putting some things on the screen because right now it's kind of boring right we don't like what are we doing with just you know clicking the mouse that's not very fun so what we're gonna do is first of all actually I'm gonna go up to line six here and I'm gonna put a variable to store my display so I'm gonna say win so WI n equals PI game display dot set underscore mode I forgot to do this earlier this is just because we are gonna need to use this variable to draw some things on the screen so we'll just set it up and say win equals bats alright next we're gonna load in a bunch images so I'm gonna do something here I'm gonna put a comment and I'm gonna say load images a lot of the times what I like to do is kind of separate my program into a few small blocks so up here I would say something like set up display I'm gonna say load images and I would say set up game loop here just so that if I come back to this later I kind of have a really easy way to see the clear separation between the different parts so that's what I like to do but anyways let's load in the images so what I'm gonna do is I'm actually gonna make a list of images and a list is essentially just a structure that can hold multiple items so a list could look something like this I'm gonna have five six seven eight you could have a string in here like this it's just a collection of elements that we can store inside of this kind of structure and a few small things you need to know about lists I'll go through them quickly cuz I assume many of you have probably seen this before is that to be able to access an element from a list so say here all of these different things like five hello eight these are all what we call elements and they're a part of the list and inside the list they have an order right five comes first hello is last well if I want to access the first in the list what I do is I type images 0 like this so I use these square brackets I put what's known as the index or the position of the element in the list and the first position of all of our list is always 0 so 0 would access 5 and then 1 2 3 4 4 would access hello so that's kind of the basics of lists and what we need to know and then if we want to add something to the end of the list what we do is we do dot append like that and what this will do is take whatever we put in these brackets and simply add it to the end of the list those are the basic operations and I just wanted to show you those because we're gonna be using them a lot in this series so what I'm gonna do is I'm gonna say for I in range and here I'm actually gonna put 6 now what this is gonna do is essentially loop starting at 0 going up to but not including 6 and give me the value I on every loop so this is gonna say ok we want to loop 6 times and we want to have this counter variable I that starts at 0 and counts up to 6 but doesn't include 6 so essentially this loop will run whatever is inside of these indented blocks here so whatever would be where pass would be this will happen 6 times and I every time this happens will increment by 1 so we'll start the first loop will be 0 then it will be 1 then it will be 2 and so on and you're gonna see why that's important because look at the numbers that I have for my images because what I'm gonna do in Surrey actually this should be 7 my apologies what I'm gonna do is I'm gonna loop through all of these the numbers from up to 7 but not including 7 I'm gonna load all of these images because we go hangman 0 hangman 1 hangman 2 hangman 3 and so on and add them into this images list it'll make more sense in a second but essentially what I'm gonna say is images dot append and I'm gonna say hi game dot image dot load and in fact I'm gonna split this up into some variables just so that it's a little bit easier to see so I'm gonna say image equals PI game image dot load this is how we load an image we write this and then inside the brackets here what I do is I actually put the name of the image that I want to load so I have to put the exact name so hangman zero dot PNG but since I don't want to just write this seven times for each of these images I'm gonna use this for loop to help me out so what I'm gonna do is I'm gonna say hangman like that plus the string equivalent of the value I which keep in mind is this variable right here which will be going from zero and then it will be one and then it will be two and so on and so forth and then I'm gonna go plus dot PNG so essentially what I'm saying is let's make a string that is hangman whatever this number is which will be in the range of zero to seven so it won't be seven but it'll be zero up to six including six and then plus the PNG so it will go hangman zero hangman one on hangman so on and then we'll add that into images so I'm gonna say images dot append image like that now I actually don't need this OS module here I was gonna use that but we're not gonna use it anymore and now let me actually go ahead and just print out what images looks like for you so that when we run this you can see that what happens is we immediately load all of these images into this list so let's go ahead and run this let me move this up here and let's go run let's give it a second to boot up here and we can see that right down here hopefully my FaceCam isn't covering it we get all these different surfaces so this is telling us the width height and color depth of this image believe that's correct and it's telling us that we've loaded in a surface the reason for that is because all of these images that we've loaded get turned into a bunch of pixels that we call a surface and then we can actually draw that surface onto our PI game window so everything in PI game kind of works with surfaces so if you see the word surface or you hear me say surface that's what I'm talking about just some collection of pixels that I want to put onto the screen alright so now that we have all that let me close this here let's actually show how we can draw some images and refresh the display and I think that will be a good place to leave off this first tutorial so we have all these images right and when I print out images I get a list of all of the images all these different surfaces well how can I actually go about printing or sorry displaying one of these images the first thing I'm gonna do is I'm actually gonna make another comment here and I'm gonna say game variables because I have all these images right so you know hangman zero which is this one hangman six which is the final guy he's fully hung up right and I need to know which one I want to display when this game starts right because I want to show that image and then as soon as we press a button that is wrong so there's a letter in the word that we press a letter that's not in the word we're gonna you know make the next body part appear so I actually need a variable that I'm gonna call hangman status like that I'm gonna set this equal to zero so this is pretty much gonna tell me what image that I want to draw at each point in the game so I'll start it at zero and that means I'm gonna draw hangman image 0 and then hangman image 1 well that will happen if I make this one and of course if I make this six then we'll draw the sixth one so we're gonna say hangman status but that's not all we need to do inside of this while loop here what I'm actually gonna do is I'm going to update and refresh the display and then draw the current hangman image so to actually put some kind of background for our display because right now we can see that it's just black right maybe I need to actually make this Y you know maybe I want to make an another color what I do is I type win which is the name of my window which I defined right here and I'm gonna say win dot fill and inside of here I'm gonna put a color that I want to fill the window with so when we define colors inside of Pi game what we do is we pick an RGB value so red green blue essentially how much red how much green and how much blue do we want this color to have and the way we define that is by putting brackets like this and then we just set three numbers now these numbers have to be in the range of 0 and 255 where 0 is none of that color and 255 is as much of that color as possible so using red green blue we can create any color we want to actually do white which is what I want to use we knew 255 255 255 b5 because that's a combination of all of the colors so let's see what happens when we actually type wind fill 255 255 255 and we put that right inside of the while loop cuz that will happen every frame right every time this while loop runs this will fill so let's actually go ahead and run let's see what we get well it seems as though it's not going white why isn't it going way we're filling the screen every second with white right what's happening well that's because we forgot an important step which is to actually update the display in PI game we need to manually tell it when we want to update so whenever we draw something what we need to do is say hey update the display with all this stuff we've drawn so we're gonna go ahead and go PI game dot display dot update and this will update the display with any of the most recent things that we've drawn on it so we can draw a bunch of different things and then all of a sudden when we want to actually display them we do PI game display update so let's run this now and let's see if our background color changes and there we go now our background color is white awesome perfect great now the next thing I want to do is draw that hangman image and in fact I'm actually gonna clean this code up a little bit I'm gonna take this color white and I'm gonna put this into a variable because I think I might want to use this later on so up here I'm gonna go and I'm gonna say colors like that oops not compile colors and then down here I'm gonna say white and all capitals because it's gonna be a constant is equal to 255 255 255 and now I'm gonna put white inside of here in case I ever want to use this color again I have it defined it and now it's way easier to read that hey this is white I'm drawing white and sorry that doesn't go in there that goes in there and that goes like that okay what awesome next thing I want to do is actually draw the hangman image so what I'm gonna do is I'm going to go and I'm gonna say win da blitz blitz stands for draw image essentially draw some kind of surface that's what it's saying whereas fill is just filling the entire screen with a color so I start by filling the entire screen with a color this will in fact to actually override anything that was previously on the screen so we don't see multiple images being drawn then I'm gonna blitz the image that I want to draw in this case it's gonna be images hangman status because remember that to access the different images inside of this list we use numbers from 0 up to 6 right where six is the last image in the list and 0 is the first image so whatever hangman status is that's the image that we'll get so if we put hangman status here then that will automatically index the correct image from the list and then all we need to do here is tell it where we want to draw the image so we need to give an XY position for the top lefthand corner of this image now I'm gonna look on my other screen here to figure out where we want to draw this and I think where we want to actually put this is gonna be 150 100 so this is where I want to draw it this is the top left hand corner of where I want to start drawing this image and then of course it will be wider and it will be longer so it will fill up more of the screen let's actually have a look at what happens when I blit this image to the screen so let's run this and we see that now we're getting this hangman popup and let's actually see what happens if I change this hangman status to say 4 and I go ahead and run this now well there we go now we're getting a different hangman image popping up on the screen so I think with that I'm gonna wrap up tutorial one here of course there's a lot more to cover but I think we did a decent job and we went through enough and we've covered kind of the core concepts on how pygame works how to display images and in the next videos of course we'll get into some more complicated logic and start doing some more fun things so with that being said if you enjoyed make sure you leave a like subscribe and hopefully I will see you in the next hangman tutorial