hello everybody and welcome back to the go blank programming tutorial so in this video what were you doing is talking about chained conditionals now chained conditionals are very similar to conditions are they kind of adding on an extending all that we just did in the last video but essentially this is a way that we can combine multiple boolean expressions or conditions whatever you want to call them together to get one answer so previously we had something like this right like maybe we had five less than seven and that was going to obviously be equal to true now the idea is that we want to actually make more of these so we want to have one larger expression that maybe checks more than one thing and if you've done any kind of logic classes before you've seen truth trees or truth tables you'll probably you know what these are but we have these operators on which what are they called here I got to look at the formal name the logical operators which is and or and not and the way we use them as we put them in between sets of boolean expressions and based on whatever this means and I'll talk about them in a second we evaluate the whole thing we check all the expressions then we get one answer either true or false so if I said like 5 is less than 7 or 7 is greater than 9 this is the or operator I'll talk about this in a second what this says is let's evaluate this what is this equal to is it true or false well this is true so we put true there what is this is this true or false well this is false so now we have true or false right so now we check well what does or mean in this case or just checks whether one of the two values is true so that means this whole thing would become true so that's called chaining conditionals together when we kind of combined them with these logical operators so the operators that we have is not for and and now these are the way that you write them this is very similar to other programming languages this means not now what not does is just reverse whatever it is that you have so if I have true then not true equals false if I do not false that equals true if I do not not true that's true because you say ok not the not of true so that's false the not of false is true so you can imagine that this can get quite complex when we start adding all these things together but you can put this exclamation point before like I can do something like not seven less than five and then this will actually be true because well this is false then you knot it that becomes true right so that's the idea behind that one okay so that's the not operator now this is the or operator the or operator pretty much tells you if there is true on the left or right hand side of the expression so I do something like you know true oops what the heck true or false that gives me actually the value of true if I say true or true that's true because yes there is at least one true on the left or right hand side but if these were both false so if I do false false then this whole thing is false because there is no true anywhere so that's or it checks if either of them are true or both of them are true both the my true that's fine as well and finally what and does is and tells us if both of them are true so it's very similar to English right like true and false would be false oops that's not man son true and false would be false because there's a false here because they're not both true but true and true is obviously true so that's how you use and or and not now I'm just gonna do a few examples here and just show you kind of the output of these things just so you can kind of guess and have some way to check whether you really do understand this and then yeah we'll be on to the next video so true or false and true right so what happens when I do something like this now this is the question I'm actually gonna look up the president precedents of these I believe what happens is that ands are evaluated fault okay so I've written this example true or false and true now looking at this you try to determine what the answer is actually going to be here now this is weird because we're using two different operators right so we have the or and we have the and so we have to determine how we're gonna evaluate these because based on the way that we evaluate them this could be different right because if I evaluate true or false first then that's true right so then that becomes true and true and this whole thing will be true but if I vol al you ate false and true first then this whole thing is gonna be false here right so that's gonna be false then we have true or in this case false which will give us true but sometimes there is instances where based on the order you evaluated them in you'll get different answers so just keep that in mind in this case it doesn't matter because we have this true or you don't happening but stuff okay so let's just run this and I'll just see actually what the answer is here to make sure that we're getting is correct so that gives us the value of true as we expected now let's change this around and let's make add some brackets or something or do something crazy so let's do true or false okay true or false and I'll put that in brackets and then and false so what do you think this is gonna happen well whenever you see an and and you see a false anywhere in it you immediately know that's gonna be false because well both sides aren't true right so if you run this we will see that the answer is false now what happens if I actually go like this and I put a knot in front of that false well then what we get we look at this here will be the answer of true because this will become true and then this is true so we and them together we get true now of course we could keep going and add more orders and more ants and we can even throw in variable as an expression to your like I can do or X is I guess I can say X 8 is less than 9 right or we can go up here means 2 X colon equals 8 and I'll just put X here and we can chain all of these things together so just because I'm writing true and false doesn't mean you just have to write true and false but you just need to have an expression that evaluates to true or false right so the we'll be valid let's have a look at what this one's gonna be and see what we get we get true okay I guess X is less than nine right so we have that or and that's the idea behind this that we can just chain all these things using the and ORS and nots and it will get a little bit complicated when you write these really large chain conditionals but you can also do things like chain chain conditionals right like if I have Val is equal to that and then I have Val equal you know Val or false like you can separate them out into separate lines if it starts getting crazy when it's going too long if you're doing these kind of expressions so that's the idea behind chain conditionals I'm trying to think of as anything else I can show you guys and I can't really think of anything off the top of my head so just remember that what we can do is well we can chain these things with four and and not or checks whether one of the two things on the left or right hand side is true or both of them that's fine and checks if both of the things are true and the knot will simply reverse whatever you have so it's false goes true if it's true it goes false and if you did two knots then that would cancel out because that would be you know not not false and that's a double negative so that's just the cancels it out right okay so that has been chained conditionals I hope you guys enjoyed it if you did make sure they like subscribe and I will see you in the next goal Inc tutorial