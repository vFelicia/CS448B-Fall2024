hey guys and welcome back so it's a super exciting video because this is the first ever collaborative video on my channel and what I'm going to be doing here is essentially talking about what makes a great programming project with an X Google engineer so we're gonna be here with Clements I'm sure some of you guys have heard of his channel but he has an awesome YouTube channel it talks about entrepreneurship software engineering how to get a job as you know an Internet is a fulltime position at one of these large tech companies and I've really tried my best to extract as much knowledge from him as possible you'll notice that I kind of try to sit back a little bit through what I call a little interview our discussion here because I really want to get you know his expertise and his knowledge and share that with you guys so anyways I hope you guys enjoy this video if you do smash a like go check out Clements channel he has an awesome you know I I watch it all the time it's great and anyways let's get into the video and you know hear about what makes a great programming project hey Tim thanks for having me yeah I'm really excited to be here my name is cl√©ment Klem for short and I've been a software engineer at Google at Facebook now I'm working fulltime on my company algo expert algo exper do it's a coding interview prep platform and I also have a YouTube channel awesome okay sweet so yeah on your YouTube channel I mean I've actually been a kind of a lowkey fan of your channel watching some of the videos you just talks about like software engineering and just some really cool interesting topics I definitely recommend that you guys go over there and check that out and also I've been using algo expert which is Clem's kind of product I guess your what a cofounder of it right yep yep so you know if you guys want to use that product I do have a 15% discount code its tech with Tim there's also a link in the description I have some videos going through when I've used it but a genuine is a really great tool and you know I've done a video on Clem's channel you guys will see where a live coding interview and kind of the reason for my maybe success and that is because of using algo expert but it was enough of that let's get into this so the first question I want to ask you is do you need a ton of projects on your kind of programming coding resume I see people all the time asking how many I do I need you know how great do they have to be so do you need a tunner is one enough that's a good question and I think that the answer unfortunately is it depends there is no right answer or rather no clear answer I think the main thing that it depends on is the amount of work experience or internship experience that you have if you have a lot of work experience you probably don't need that many projects in fact I'd say the more senior you get the fewer projects you need the more junior you are so if you're straight out of college the more projects you need if you have no work experience whatsoever and even no internship experience which is the position that I was in when I applied to Google cuz I had kind of a weird you know experience with colleagues where I didn't do a computer science degree I had no internship experience and then I did a coding bootcamp right out of college but since I had no work experience relevant to software engineering I ended up having four software engineering projects on my resume and I think four would be a good number for someone who has no experience no internship experience if you have like one internship maybe you only need two good projects or three good projects if you have two years of work experience you probably only need one project and then if you have more than that maybe you no longer need then at that point awesome so it sounds like really you know if you have more experience that kind of shows what skillset you already have whereas if you're coming in kind of fresh or you're coming right out of school the more projects can really demonstrate you know what you know right whereas you might not have that experience to fall back on awesome yeah I would even say because I recently chatted with a Google recruiter and she put this in a good way where a project is really meant to show to people that you are passionate about software engineering that you have skills demonstrably skills you're able to build stuff you know and that's really useful if you don't have work experience but then if you have work experience then you need you you don't need to prove that as much if that makes sense for sure that makes a ton of sense I think everyone kind of understands that awesome so I mean you talked about passion which is actually something I wanted to ask these projects is it important that these projects come from outside of school or is it okay to kind of highlight you know two or three really good group projects or school projects that you worked on kind of weird what's the balance between you know some stuff outside of school to really show the your passion and you are you know taking to make the projects and the school project if that makes any sense like what holds you know higher ground does it matter if it's just school project should you have a mix of both your thoughts on that maybe yeah and again here I would say it really depends okay I think that ideally a mix of both could be really good and the reason I think college projects for school projects might be really good is because typically those projects tend to be class projects or team projects rather and that can be a good thing to show that you're able to work as part of a team two small caveats there if you do have team projects that you're sewing make sure to really highlight the work that you did maybe you can you can word your resume or your description of the project in a way that really conveys that you were part of a team and you handled all of the back end for instance or maybe you were the the direction giver of the project does that make sense yes the other caveat is that you probably don't want only team projects it's probably good to have at least one or two projects that you just did all by yourself from scratch to have a nice balance there okay awesome yeah so I think that makes a lot of sense so really just you know if you have a group project on they're highlighting exactly what you did in the project cuz it's one thing to just slap one on especially when we know you know people in group projects one person typically ends up doing a lot of the work right and then just showing some individual projects to to really show that you know your passion and that this is what you can do on your own it's not just in a group right but then just just one more thing that I would add here is that like ultimately you really have to ask yourself what is the goal of a software engineering project on your resume like we just said before it's to show to your recruiters or potential hiring managers that you have demonstrably skills you have passion and all that if you are really really proud of a couple of class projects or even multiple yeah more than two may be the only projects that are proud of are the ones that you did as part of the team in the class then so be it just go with those right you're just trying to sell yourself as best as possible so even though I think the recommendation would be a nice balance of the two go with what sells you best if that makes sense for sure you have to make sure that you know you really liked the project and if that gets brought up you can talk about skills that you applied in the project and you know it's a great kind of starter question it's a great like leeway into what you did and your skill set right awesome okay so I think another question I get asked this a lot too people say how complex does my project need to be to put it on a resume like if I have something that's you know maybe kind of medium level not super crazy complex maybe not a massive like thousand line coat can I put it on or do I need to be showing stuff that's like really impressive really amazing is okay to have a few kind of simple projects that demonstrate some skills or do they need to be you know crazy one massive project right yeah so I think that here again you have to first remember what you're trying to accomplish with these projects and the context around your application so if you're a college student for instance you are not going to be expected to have built an app with millions of downloads or website with millions of customers or thousands of customers right so that's one thing from that point of view you should not feel discouraged if your project is kind of you trivial in a way or not legit in a way because it's not expected if that makes sense the second thing is as far as complexity complexity is very ambiguous and subjective first of all what really makes a project complex is it the technical complexity is that the products complexity you know getting everyone together if it was a team project so that's something that can be difficult to to measure so I wouldn't worry too much on having something that's hyper complex and then the third thing which now I guess goes into what makes a project good yeah I would say that more than complexity you want a project that a recruiter or a hiring manager or a software engineer reading your resume is going to be able to grasp very quickly and is gonna be impressed by at a glance and again that doesn't necessarily translate into the most technically complex project if I look at examples of my projects I have a video on my youtube channel that you know my software engineering projects my most technically complex project was like creating a sort of basic programming language and an interpreter for it it wasn't very visual or very easily graspable and so I don't think it was actually my best project so so I would say you know because be wary of complexity basically that's so that's sort of what I'm getting at for sure so it sounds like you need to make sure this project almost kind of sells itself right like if they read through it and they hear the title they're gonna understand exactly you know what went into the project what was involved that whereas if it you have a very technically complex project it could be hard to kind of demonstrate why that was so complex right and you know you might not get as much credit for it because the interview or the recruiter looking at it doesn't understand what you had to do for that project whereas you have something more visual and I think you had a project we did like some sorting and some searching algorithm visualization I know when I looked at that it looked really impressive immediately just because of all the visuals right and I think that's a good probably point that you brought up to make sure that your projects you know people can understand kind of what's gone into them maybe there is some visual components and it's appealing to a recruiter someone reading through like to understand what it is by your brief description right so is that that's coming exactly out for that exactly and I saw your recent video on projects that you can spin up or develop in a week yeah and I think that in that video a really good example of a project was the very first one you had the pseudo coup solder the reason that was a good project in my opinion is because putting a sign of the fact that like you said you can develop that in a weekend basically but it's very easy to explain to someone it's a you you wrote an algorithm that solves a pseudo coup board and the majority of people know what pseudo who is if they don't you can briefly describe pseudo who is a puzzle like game that is difficult to solve for human beings you know something like that and you learn algorithm that solves it but then you also added that visual component the GUI the graphical user interface for it right that's actually super important because suddenly this project that was otherwise very understandable at least you know in writing but not necessarily visual suddenly you actually have something that some can interact with and really there they immediately grasp it it's complex enough you know you don't need to have way fancier algorithm and you've got a great project yeah so that I think that really ties it all together right so if you guys haven't seen that video leave a link or card so you can check out what that project is but essentially it just is you can play the game of Sudoku and then you can actually view the backtracking algorithm that I used to solve it going through and solving it stepbystep and creating those visuals can be you know an extra addon but it really is not that difficult it takes an extra few hours and it really kind of highlights well the complex thing what goes into the project it allows someone to just quickly easily even if they don't know much about programming to see it and understand it yeah so that's a great point come ok so here's some shorter questions maybe do interviewers look at your source code like your github repositories and that's a good question I don't have the answer to that question mainly because I haven't seen what happens behind the scenes at least when I was applying I would say that in the majority of cases they won't for instance you're applying to a big tech company like Google or Amazon I highly doubt that a recruiter is certainly not a recruiter because a recruiter is not meant to be technical they don't need to know how to code but even an engineer I highly doubt that an engineer is gonna look at your github code for instance they might you know that you might have a couple people who will go poking around it but unlikely in a smaller startup maybe that's more likely because there they might be hiring you almost less on potential and more on your you know objective skills and abilities and there they might be more like hmm does this person actually know how to write JavaScript because we're gonna need them to write JavaScript immediately you know but overall hard to say okay so I think that's a good answer I mean I just want a lot of people ask me you know does my code have to be crisp clean there's enough to be amazing and I think that kind of helps answer the question you should do as good at the job as you can but you know if you need to get the project out and put it on your resume chances are if you're applying at a larger company it's less likely they're gonna look at and just from a time sake as well it makes sense right it's hard to look through six different programming projects on each May and read through the source code and see what's going on right in the so exact course austere best you know write good code but don't make it necessarily like you know it doesn't have to be the best production code in the world ok great so that's that's great ok so you know you have these projects you go into a resume our arrest me you go into an interview and you know they're kind of going through your resume and they're asking questions what should you really touch on in your projects and we already we talked about this before but I really want to hammer it in so someone that's going to an interview and they you know they have these projects to discuss what should they really talk about what's the thing that they should focus on that's gonna be most impressive and you know lead to potentially getting hired just because of some of the stuff from their projects if that question makes any sense yeah so ideally lead with your best foot forward meaning if you have a project that you're really passionate about and you think it's the most impressive make sure that it's highlighted on your resume as the first project or something like that because an interviewer is likely gonna look at the first one and ask you about that one and if they ask you just arbitrarily tell me about a project you worked on obviously talk about the one that you're more comfortable with or that you think is more impressive and then have some sort of 30second pitch for the project it's almost like if you take a look at entrepreneurship right when you have a company and you're pitching the company and you want to be able to explain it to someone who has no idea what the company is in a word or in a sentence same thing for the project if you need to spend three minutes giving me the backstory behind your project so that I can even start understanding it that's not good right so yeah as an example take your your pseudo COO project the way that I would probably say it and you know 20 seconds you go hey are you familiar with the pseudo kupaza ls yes no and you explain what it is depending on the answer there and then you say okay I wrote I I did a project where I wrote an algorithm that solves the pseudo coup and I wrote an interface for it where you can actually solve the Sudoku as you go through it and see the algorithm working giving you hints or tell you if it's correct and then you you know you can say hey if you want I can show it to you boom you've explained it in ten seconds they know what it is and then you can follow the conversation if they want to ask you more about it great I think that's great advice for everyone you know take make sure that whatever you're doing you know you can explain that quickly right so someone that's not so technical or even just in like maybe a behavioral interview if you get asked about something like that right that you can really easily explain it so if you're going in make sure that if you list all these projects on your resume you know how you're gonna summarize them to someone who's never seen the source code are never seeing what it looks like before so that's definitely great advice and the last question what which I think is gonna be actually fairly interesting I'm excited to know the answer what is the most impressive or maybe just the coolest project you've ever seen on someone's resume when you're like looking at I'm I know you do the technical interview so I'm not sure how many resumes you've had a chance to look at what's the most impressive one you've seen you know coming in from someone who's trying to get a job yeah and so here you know for all of those of you who are who are watching right now I swear that Tim did not pay me or help me to say this beforehand he has no idea I'm about to say this yeah but and I say this not to flatter you Tim but I would honestly say that your resume and I haven't seen your axial resume but I can just imagine what it would look like your YouTube channel I would say is probably the most impressive project that I that I can think of from someone who might be applying to jobs your YouTube channel is like a portfolio on steroids oh you have basically your YouTube channel I can click on it right you first of all I know you put it in your resume YouTube channel on tech they already just that I know what it is I'm gonna click on it I can actually open it super quickly it's online right and I'll see holy crap this person has hundreds of videos covering all sorts of things like working on projects within a project it's like project ception so that would be the best the best project I would say Wow well I definitely really appreciate that I think like we said I had no idea you was gonna say that but yeah that's I mean that shows you guys the right like take initiative go out there and get some stuff done and that's the number one thing that I say to anyone who asked me like what project should I work and what should I do I'm like just do something and that's where I do all the time is you know I don't know exactly what I won't work on I don't have the most impressive learning prodigy to show you guys I just picked something that I think would be like kind of cooler that I'm kind of interested in and just do it and if you really can't do that you know go to watch on my videos watch some of club's videos get some inspiration and then just go and make something and that's you know how I've built kind of this portfolio for myself is just not worrying so much on like the fine details on exactly what I'm building but just building it and just doing it and learning and then as you go you know you can pick some other more interesting things okay so that great you know is pretty much gonna wrap up our video do you have any last stuff you want to say the audience this has been amazing by the way so thank you so much I hope everyone that's still here has got a ton of value but I'll give you one last chance to kind of wrap it up if you want sure what one last little idea that pops up here about the project is just one thing to make sure that you don't do is make sure that you don't make your project descriptions super hard to understand try to give your project descriptions in your resume to someone one of your friends who doesn't know about the project and if they can't tell you what your project is after reading your two line sentence they're really confused that's not gonna be good the recruiters are also gonna be confused so that's like one last little you know tip awesome I think that's a great tip okay guys so that is pretty much gonna wrap it up definitely go check out clym's channel he has a ton of awesome stuff on there I've personally been watching almost every video he's been posting and getting a ton of value and again you know massive thank you for helping everyone out here I'm sure a lot of people are really gonna appreciate this and you know leave a like on the video subscribe to the channel and I will see you guys