hey guys and welcome back to other Python quick tips in today's video we're gonna be talking about the bin function which is also known as the binary equivalent function so what this does is return to a string that represents any integer number as a binary number starting with the letter 0b I'll show you what I mean by that essentially if I print out bin num this is gonna turn 23 into a binary number when I print this you see we get 0 B 1 0 1 1 1 now the zero B just stands for this is a binary equivalent and actually the type that's returned by this is a string and not some kind of number there's no specific type in Python for a binary number it just gives you a string now this is important because if we try to do something like turn our binary number back into an integer I'll show you what happens so notice this is our binary number now I'm just gonna remove the zero B from it and the way that you can do that since this is a string is just by indexing and getting from index 2 onward which means we're gonna start here and go to the end of the string so when I do that you see we get 1 0 1 1 1 now let's just convert this into an integer by putting int and let's see what we get I mean in theory you think we should get 23 back because you're gonna convert from a binary but what we really end up getting is the same thing with the actual 10111 which obviously was not the same number that we converted into binary so just be aware of that once you go into binary you cannot go backwards unless you have some like weird conversion method and you've written something to do that but anyways that's kind of how bin works I'll show you one more thing here on how we can actually use this on our own type of objects this is a really basic object I've set up I just called it my object I know I'm extremely creative and anyways what we can actually do is we can write this underscore underscore index underscore underscore index method as a part of any of our objects and this will return what we want to convert into binary so I know you might be confused here but just watch what happens essentially what I get here is when I call bin on my object since I've implemented the functionality of this I return self dot X plus self dot y which in this case is actually going to be the value 4 so right here is gonna be 4 and then that's converted into the binary equivalent which is 1 0 0 now I know this is strange but essentially whenever you call bin on an object that has this implemented on it what it will do is return some integer value and then just turn that integer value into the binary equivalent which is what we've done here you can see if I add 3 here and I do this now we get five as the binary equivalent so one zero one and obviously I know I can mess around with this and go for o not s we can go for ten there and you can see that we get a new binary number so that's kind of how the bin function works sometimes it's useful when you want to work with binaries and you don't want to have to convert them manually with that being said that has been it for this video if you guys enjoyed it make sure you leave a like and let me know what you want to see on the future with Python quick tips