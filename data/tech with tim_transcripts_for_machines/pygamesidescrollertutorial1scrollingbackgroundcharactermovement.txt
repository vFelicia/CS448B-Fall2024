hey guys and welcome back to another YouTube video so I apologize for not posting for a few days I've been working really hard to get this game finished that I'm about to do a tutorial on so I apologize for that but all the videos will be done today and then I'm gonna be posting them every other day I think I have like three or four of them so expect that for about the next week as my regular uploads now for this game that I'm gonna be doing a tutorial on it is a side scroller so I'll show you a little bit of it right now just a sneak peek this isn't all of it this is like halfway through it you can see we have a little guy he runs down the screen there's a saw that appears or like there'll be another obstacle and then he had either has to jump over it or if it's an obstacle that he can duck under he'll have to duck under it now you'll see that it continually gets faster so as time progresses it gets faster and therefore gets more difficult because it's gonna take longer to jump over stuff and yeah so that's pretty much how the game works it's not done yet obviously this is just a little sneak peek for you guys to see okay so that's what I'm gonna be showing you right now so before we even get started with any of the code there is something that we need to download so I have a bunch of images there that I was using so just to make it easier for you guys I read open up little github here I'll leave a link to it down in the description below I just go ahead go to the page it'll look just like this click clone or download little green button and just click download zip once you do that just extract the zip so I'll you can show you guys just to make sure there's no confusion it's gonna say side scroller just drag that off to your desktop and then inside this folder here there is something called a starter file which is what I'm in right now so you can open that up and you're gonna work from this file so this just ensures that we're not gonna have any issues loading up any images and I have a bit of code in the starter file just to start us off so that's not gonna take too long to to copy down some of the complex stuff I have here and like all these numbers here you don't wanna type those out so I just put them in the starter file okay so you can see here I'll just go through what I have in the starter file really quickly and then we'll move on to the new code and getting the background to start scrolling so pretty much we have our imports up here pretty selfexplanatory we're gonna be using pi for this game width and height of the screen this is just because the height of the background is 447 you could change this if you'd like and then we have our background image which is here and then we have our clock which is gonna set up so that we can have we can change the fps as we move so the way that I actually increase the speed of the game is buying credit increasing this speed of the FPS so that way we don't have to change the velocity of our character and of our of our background we just change one property I'll get into that in a minute then I have this player class and there's a ton of stuff in here in terms like loading in the images and the player jumping and so on so pretty much all I did in here is I did all the character animation because realistically all that's happening with the character is it's not actually moving on the screen he's just either jumping up or down or he's jumping or he's a what he called he's sliding down the screen right so he doesn't actually end up moving right or left he's just gonna be moving up or sliding down so we want to make it look like that so I've done all the animation here for you because it is pretty tedious to get it down and I've made it as good as I can it does look a little bit slow at the beginning in my opinion but this game isn't for like we're not gonna be releasing it professionally or anything so it's fine if it looks like that for now it's just for learning yeah all the images we load up here this massive list I think it has like 56 I know it has a hundred and six numbers in here 108 numbers in here this is just for jump our character jumping so we can get him to jump at the exactly correct speed as to the looks proper so I did that for you so you guys don't have to copy this out and then yeah so that's about it for the starter file okay so now let's get in to actually coding so we want to make a scrolling background which means pretty much all the objects on our screen are gonna be standing still pretty well and our background is gonna be moving left so it makes it look like we're moving right so the first thing we have to do and this will be always do when we're setting up a new game we're gonna do our main loop so would say well run down here and then inside this loop I always like to start with my Loup so for event in pi game dot events dot get and then we start with if events don't type equals equals pi game dot quit like this now we want to quit the game so we're gonna do hugging dot quits and then simply quit like this and we can just do actually before we do all that let's do this run equals false so you don't run into any errors then after this think that's all we need for the event loop right now and now we're gonna get into our background so at the top of our starter file here you can see I've already set up two variables for us we have background X and then background x2 so these two variables are gonna keep track of the x position of two different images now the way that our background is going to move is just by moving the background image so we're gonna continually blit the background image moving left at a certain speed so we need two images so that way it never goes blank on the screen and you'll see what I mean once we actually get into it so just copy this down for now so what we need to do here is we just need to actually we'll start off by just setting a variable up here I'm gonna call this speed set this equal to say 34 right now and then we are going to do our fps in here so just do clock dot tick and then speed like that so that this way it's gonna go at the the speed of our of our variable which we're gonna change as you move on now we want to move our background back every every frame so we're gonna say BG X equal and I just like to use one point for if you want to go faster then you can modify that number to make it larger or smaller accordingly and then one point for here we're gonna move the other background image at the same speed the only difference is they're going to be at different positions and you'll see how it works in a second now we're going to do a little if statement here is say if v GX is less than V G dot cut underscore width and be due to stands for background by the way times negative one then we are going to set our background equal to be G dot get underscore width and there we go for that now we're gonna do another if statement and we're gonna copy this today I'll paste it down here save us some time and all we're gonna do is replace all the BG X with two so like this so there we go so the way that this is going to work is our first background image is going to start at zero zero right so it's gonna start at zero zero and then it's gonna start moving backwards until eventually it gets to the negative width of the background so if our background for example is 900 pixels long then once the X values at negative nine hundred that means that it's officially off the screen we can't see any part of it so we're gonna reset it so that it goes to positive background width so that means that it's at like kind of the end of the screen that gets off the screen to the right side sorry I wish I had a visual for you guys to do this but I'm trying to explain it the best I can now we have another background object that's gonna be right behind this object so once this one gets to the end of the screen this one is just going to be coming back on to the screen so that it's gonna keep looking like it's moving and I'll run this in just a second to show you want to make sure that I have everything here so now what we need to do is we need to just set up a function and this function is just gonna draw our background and all that stuff onto the screen if you follow my other tutorials I just like to call it redraw a window and all the drawing that we do in this program I'm gonna be doing in this function so that if we have any issues with drawing we know where to go back to we don't have to look through a ton of code it's a really good way to do things if you're writing a game all your drawings should happen in one place ok so we're gonna draw our background at the background exposition and then 0 and then we're gonna do the same thing with the other background new background and then BG X to 0 and then we're just gonna update our screen so PI game doc display dot update now if I run the program running into an issue here oh that's because I didn't call this function I bet so app hearings good call redraw window and now let's check it hmm what seems to be the issue here one second Oh Ron equals false servant that Ron equals true all right now let's see there we go now we have a scrolling background now you can see right now the background just get moving at a constant speed it's not getting any faster that's what we're gonna cover right now you can see is pretty cool we have a scrolling background and if we wait for a second you'll see when the other background starts moving on now just due to the nature of this background the way it is you can see where the other background kind of comes on to the screen you can see right here it's like a little bit cut off it doesn't bother me too much just because this is like a starter game we're not going to be using this for anything super serious but if this was bothering you then you'd have to line it up so this background perfectly aligned with this one or just use a different background that's constant doesn't change as much as this one if that makes sense okay so now let's get the background moving faster so to do this what we're gonna do is we're just gonna increment our speed variable like this now the way to make sure that it's gonna go faster the same no matter what machine it's working on it's just by running a timer event so the way that we set a timer event is just by doing this rinse it pan game dot timer so it's set underscore timer like this in here we're gonna type user event plus 1 and then comma 500 so this is in millisecond so this means every halfsecond we're gonna increase the speed by calling this event so what this timer actually does is just here you can see we have four event and pygame done event I'll get it actually triggers this user event 1 to be true every half a second so to be able to check when this event is happening we have to do within our event loop here so we're gonna say if event dot type equals equals and the we're just gonna type what we have there user event plus 1 then what we're gonna do is arrest a speed plus B pulls one like that now let me make sure that everything's looking good here I'm actually just gonna move this clock tick down to the bottom of our while loop because that's where it should be so make sure you do that and then we're gonna run the program running into an issue my game has no module timer oh sorry this should not be timer it should just be time my bad there we go and now you can see if we watch this it should start to progressively get faster alright watching and there we go it seems like it's moving faster okay pretty good so that means that's all working so now let's get into the next part so we have our scrolling background but now we need to add our character to the background so it's pretty straightforward so we've already set up this class here I've set this up view it's called player and it has one method in it which is the draw method so we just need to create an instance of our player I'm just gonna call my guy run ik and we say runner is equal to player let's give them an X Y width and height the X what should we set for is X um let's see here let's give them 400 for the X and then 313 actually we're not gonna do 400 that's too far in screen really 200 313 this is what I determined was like kind of exactly at ground level so it looked like his feet were running on the ground and then he's a 64 by 64 sprite so we'll use that alright we have a runner now now we need to draw a runner so after we draw the background we're gonna draw a runner Y just didn't run it out draw put one in here is the name of our window and there we go that should be good let's run the program and there we are you can see that we have our runner and he is running on screen that's what it looks like at least now we need to make him be able to jump up and down and slide because you can see at the moment I'm clicking keys and clicking space up arrow key down arrow key and he's not moving downwards now another interesting thing here is as the background gets faster so does he and that's because obviously if our ground looks like it's moving faster faster then his feet are gonna be having to move faster so that's why we use that that clock speed that I showed you at the beginning okay so now let's make our character so to do this what we're gonna do is we're just gonna say keys equals and this what I did my other PI games tutorial it's a really good way so that if the person hits more than one key at once it's gonna register properly because if we just tried to do the checking in the event loop here if they tried to hit two keys at the same time then they weren't they wouldn't both trigger so say for example if you hit the up arrow key and the right arrow key depending on which one you hit like a little bit faster that's gonna be the one that triggers so it's gonna be delayed if it makes sense so just do it this way say if keys and then in here I game dot okay underscore space it's a spacebar spacebar is hit or keys and we're just I'm just doing this so that the person can use either the up arrow key or the space bar okay underscore up like this okay and then in here all we're gonna do is we're gonna say if not runner dot jumping so this just means if our runner is not already jumping then we will allow him to jump this just so we can't be jumping well we're already jumping in midair pretty straightforward I want to say runner dog jumping equals true like that straightforward enough cuz I've already set up the class now we'll say if keys PI game key down in here okay underscore down then we're gonna do the same thing here we go say if not your honor dot sliding then we are somebody gonna say runner got sliding equals true like that so now same thing here if our runner is sliding when we hit the down arrow key we're not gonna let him slide again pretty straightforward there okay so let's test this out now make sure everything's working all right let me click the up arrow key and there we go our player jumps into the air now that's what I'm talking about with the animation it looks a little bit slow right the reason I had to do this is cuz the background doesn't move too fast so I want the character to be in the air for long to be able to get over top of an obstacle that would possibly be sliding out the screen at the speed the sliding same thing here I get him to slide for a decent hour at a time to make sure that he would be able to get underneath that obstacle and we might play with some of those numbers as we move through the tutorial if we find that it's too slow or it's too long and yeah so there we go and I think that's gonna do it for this first video so if you guys enjoyed the first video and it helped you on you're able to follow along please help me out by leaving a like and subscribing to the channel and the next video will be out in what is it today Sunday so we'll be out on Tuesday and then every other day from there I will post the rest of the videos alright so I'll see you in the next video