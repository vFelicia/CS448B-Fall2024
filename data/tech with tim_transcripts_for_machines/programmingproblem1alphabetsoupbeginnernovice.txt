hey guys and welcome back to another YouTube video I just want to start off again by apologizing it's been about a week since I last posted and that's just because I've been extremely busy right now in Canada at least the school that I go to it's been midterm season so I've been having to kind of focus on school and I haven't really had time to be making any videos so right now I'm getting back into it midterms are over so I'm all set ready to go now I could have more consistent upload schedule and I'm getting right into things with a new series now I've been getting a lot of positive feedback on some of my Python programming videos so on some of the tutorials for pygame the side scroller one that I recently did and then the other pioneers that I have for beginners that 10 video series a lot of people have been commenting commenting saying that they wanted more videos they want to learn more about Python so here we are now the whole purpose of this series and you can see on my screen right now is it's gonna be kind of a problem solving series now if you're interested in computer science or coding or programming it's probably because you like solving problems or you like thinking and you like being able to create solutions to something at least that's what I like to do obviously there's the side of programming which is like game development and stuff like that but even within your games there's a lot of problems you're gonna have to solve and just doing something that I'm gonna show you here today is really useful and I can even just help you throughout your life to be able to think about things more critically so this series pretty much what I'm gonna do is once a week on Thursdays so I'm starting it now is I'm gonna introduce a problem to you guys and then I'm going to show this solution so obviously you don't want to watch the solution part of the video until you've read the problem and tried it out unless you just want to see the solution right away you have no idea how you would approach the problem but in this case right here I would suggest that you first off start by reading the solution by yourself I'm gonna read it to you guys as well and then take a few minutes try to figure out how you're gonna approach the problem tried to do so and then if you're still stuck or afterwards just check your solution up against mine and yeah so let's get right into it so the first problem I'm going to be showing you is very simple and we're gonna be progressing and getting harder and harder as we move on so right now you might think this easy I don't even want to try this problem it's not worth my time that's fine as we keep going on in the videos progressively move forward so from number one to number ten so on we're gonna get more difficult so the first problem is given a string of alphabetical characters following the rules seen down below and I'll talk about that in a second in Part A and Part B return a new string with the characters in alphabetical order capital letters should appear before the same lowercase letters example here you can see if we have a capital B that should be before the lowercase B's so on and there will be no strace spaces in any of the strings so pretty much what's gonna happen here is I would give you a string of text and then you would have to see if your program is able to output the correct output so in Part A we see the string contains only lowercase letters and in Part B the string contains both lowercase and uppercase letters so let's talk about Part A first if you're not quite understanding exactly what the problem is it's always helpful to look at the sample input and output as I can help you to understand what the program wants you to do so the sample input for this program would be hello this is just a sample one at the beginning and then the output beh ll o now obviously we know the alphabet we know that this is corresponding to it so those ehoh ehoh in the same order that the alphabet goes now that's part a so that's a sample sample input and output for Part A and that is not too difficult to do at least in Python so the language that I'm going to show you the solution is always gonna be in Python in other languages there's gonna be different solutions there gonna be different ways to do things Python is the simplest in my opinion and that's why I use it also has some cool tricks that make problems a lot easier to solve now for Part B and this is a little bit of a harder part so if you're already stumped just focus on Part A don't even worry about Part B because it's gonna be a bit more difficult the input is this so it's elephant except we have a few uppercase letters so you can see we have LEP and then an A and this is what the output should look like so we have a and then our uppercase e fold but the lowercase e and then we have h L peaty so on so again the difficulty for this problem I'm classifying as beginner although Part B could be somewhat in between beginner and intermediate as a little bit more difficult and it should take you about 10 to 15 minutes to solve this problem if it's taking you longer don't worry about it that just means you need to do a bit more work on your programming okay so I'm gonna let you guys try to focus on this problem and see how you would solve it I don't want to talk about it too much this is just as if I were to hand you a piece of paper in class and tell you go ahead and solve this problem I wouldn't go through all the detail and if you wait about five seconds so pause the video I'm gonna go through the solution with you right now okay so I hope you guys have had a chance now after looking at the problem and trying to find a solution to hopefully come up with one at least for Part A if not if you're having trouble with Part B just look at the solution here so the solution that I have I've already got it up in a file here and for Part A it's very simple you can see it's about not what's it's seven or eight lines now for this I just made a new function called it alphabet soup takes one parameter of string you don't have to do this in a function there's other ways to do these things everyone's gonna have somewhat of a different solution as long as yours gets the same answers then we're good so we just start off I'm just setting up a new variable called Li and I just start by sorting it so the first thing I'm doing is I'm turning my string into a list and then I'm sorting it so this is why Python is so useful what this actually does is it just sorts it right into a sorted list and since we know that for Part A they're all gonna be lowercase letters this is perfect and it just pretty much sorts it for us and that's all we really have to do after this all I'm doing is just now converting my list back into a string by simply adding all of the elements of the list into a new string and then I'm returning that string so we can see run the program here if I type below then we get the correct output here eh LLO wonderful right so that was pretty straightforward for Part A have any questions leave them down in the comment below I'm sure myself or someone else be happy to answer them for you for Part B this is where things get a little bit trickier now I'm gonna show you why the solution for Part A doesn't work for Part B now this is because if you can see I'm gonna type in elephant I already got a copy down here just to make sure it's the same from my my problem that I have you can see we get a a a ELP eh NT now the reason that we get this is because the way that Python actually works for sorting things is it uses something called an ordinal value now an ordinal value I'm gonna just type in a console here is of a string so it gives you a number value of a string so you can see my type ordinal of a we get 97 lowercase I keep that in mind nice I type word note of B we get 98 now you'd think that if I type ordinal of uppercase a we would get 97 as well but we actually get 65 now again it's predicted or predictable that if we type ordinal of uppercase B we get 66 now why is this significant the way that Python sorts things is by using these ordinal values so pretty much when you just type that sorted in that I've done here like that what's gonna actually do is it's gonna find the lowest ordinal values in the strings and it's gonna put them at the beginning and then it's gonna take the greatest ones and it's gonna put them at the end and obviously store it through at the middle so when we have something like an uppercase a in an uppercase B those are gonna go before our lowercase a so we could have all the uppercase letters up to Z and that would still go before our a if we're just using this builtin method or function in Python called sorted now that's why we have to come up with a different solution so that's what I do down here and I'm gonna show you that now now this solution here that I just have commented out just so that it wasn't gonna run while we had our other one running is works for both Part A and Part B so if you were trying to do both problems it probably made sense just to make one solution that works for both of them and this is something like it would look like so I'm going to go through my process of thinking about this and how I came up with the solution right now now it is important to think about the way that I approach the problem as well because that's a way that you guys can approach problems that might not be the same as this but similar in a way so I first started off by simplifying the problem and by simplifying the problem that's why I did this I was just thinking about if it's only lower cases then it's really easy we can just sort it through but since it's upper cases what do we need to do to approach this problem now my first thought process was just to sort it and then take sort into two lists so an upper case list the lower case list and then merge those two together into the same list now that would work but that would be a little bit too much work for me and I wanted to do something simpler so I thought of this solution now what this solution does is we start off by doing the same thing as the last one as getting a sorted list so we simply take the string we sort it into a list and then what I do is I do the same thing except a lower case list so this list up here is going to have for example like a e L capital and then the rest of the letters whereas this one is just gonna have them all in lowercase now I create a blank list called caps blank strings where we're gonna store our final answer and then we go into my for loop so what this for loop does here is it just generates our character list or our capitalist sorry so this pretty much just looks through our what do you call it our upper case list here and it says if any of the characters there are capital I'm just gonna add them into my caps list here pretty straightforward now the reason we have this caps list is so that we can compare it to our lower case list what I ended up thinking of was well if I have a lower case list that has all of the characters all I need to do now is just check if an uppercase character exists and if it does exist then what I'm gonna do is I'm gonna replace the lowercase character in this lower case list with that uppercase character and keep moving through the string like that and you'll see kind of how it works as I talked about this for loop here so what I do now in this for loop is I'm saying we're gonna look through every letter in our lower case list so in the list the has every single lowercase letter what we do is we look through each of them and we're just gonna start by saying if caps dot count so we're gonna count how many times we see the letter in our lowercase list as an uppercase up here so say for example we have our lowercase list I'm going to type it out here and it says like a a b b CC that's our lowercase list we start at a and then we have our oops we have our caps list that looks like this it looks something like this a b c with quotations around them obviously we say well if we count one a then what we're gonna do is we're simply going to append the same letter in our lowercase list into our note our new string but as an uppercase letter so what we do there is we say well we have an a but since there's an a that exists in the capital list what we're gonna do is we're going to turn this into a capital A and we're gonna throw it up here like that pretty straightforward now after that what we need to do though is we need to remove this from the list because it's possible that we could have multiple capital letters right we could have two A's so what we do is we add that into the list here we remove this from this list or into the string we remove it from the list and then we keep going to the Forbes now we go to the next letter we have another a well there's another capital A in our list of capitals so what we're gonna do is we're gonna change this to an A so we're gonna put an A like that we're gonna remove this from the list and we're gonna keep moving through and we keep going through and we keep proceeding this keep going with the same process now after we've gone through all of these letters what we eventually end up doing is we say well if caps count equals zero so if it's if it's not equal to zero then we go to the else statement then we're just simply going to append the letter because that means there is no capital so say we're on let's put a D here say we're on D we look in a capitalist list there's no D's in there we're simply going to append or add the lowercase D into our new string and that is how this problem works so I'll show you it working I can't remember if I did already or not and when I put in elephant can see we get the cur or actually sorry that's that was we're doing the one above sure this is the one below elephant there we go we should get the correct answer except we have two A's here so just give me a second to fix it okay so just leave it blank for the beginning because that's the first one for Part B type elephant and we get the correct answer I believe you can see we can compare the two yep it looks to be correct so that is how I went about solving this problem if you guys think that you have a better solution a more efficient efficient solution or just something different go ahead leave that solution in short enough you could just paste it down into the comments below I'll be sure to have a look at it if you guys did have one that was much better than the one that I had I'll be sure to shout you guys out in the next video and just give a mention to your comment and that's what I'm going to be doing for the rest of these videos because just like you guys I love to be learning and if someone has a better solution that I do obviously I want to learn what that solution is how I could improve on my coding and be sure to show you guys out in the video for doing so so if you guys did enjoy this video and you want to see more problems the next one will be a bit more difficult than this make sure you leave a like on the video and subscribe to the channel and I will see you again in the next video