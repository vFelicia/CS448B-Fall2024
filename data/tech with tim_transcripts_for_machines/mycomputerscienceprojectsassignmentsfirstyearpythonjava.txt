hey guys and welcome to a brand new video where I'm gonna be showing you all of the projects and assignments I had to complete during my first year of university majoring in computer science so those of you that are new here I'm 18 years old I just finished my first year of computer science and throughout computer science what we were doing was learning Python and Java so kind of some fundamentals of programming and you guys gonna see that throughout this video if you guys are new here I post videos like this explaining and talking about my experience as a computer science student and I also do all kinds of tutorials mainly on the Python programming language that will definitely help you guys get ahead in your courses so make sure to subscribe if you're not already so with that being said let's get into the video and look at all of the assignments and projects I had to do throughout my first year alright so the first assignments and projects I'm gonna show you are from my first programming class which was called ITI 1120 and it was basic Python programming and just kind of an introduction to computer science and programming in general this was probably the easiest class I've ever taken almost I want to consider it throughout high school as well in that consideration of classes I did not work very hard in this course at all I finished most of the assignments the day that they were assigned and again that's not to brag it's just to really tell you that how simple this course actually was if you guys do any programming outside of school you will be more than fine in your first programming class so this is the first assignment that we had to do I'm not really gonna go through it much because it's super basic and really boring essentially we just had to create a ton of very basic functions that answered like super simple questions and at this point they didn't even teach us like loops for most things and if you use the loop that was like advanced um she has to get the point like draw car this was the most advanced one we had to draw a car using the turtle graphics module cad cashier calculates the change in canadian dollars that a user should receive because in canada we don't have one cent so it has surrounded everything to five just really basic stuff like that and that was assignment 1 now assignment 2 was not much more difficult but I will open it up here for you and it was an increasing split tester but essentially what an increasing split tester did was given any number so like type in like a 10 or something then you give it a split and the split will be the number at which its split so for example if you had it to contend length number and you put a split of two then every two digits would be split off and it would check if those two digits like in order were increasing I'm actually gonna run the program for you guys to show you how this works but this is all of the code again really straightforward what is your name Tim would you like to put a number in yes enter your positive number so you have one two three four five six seven eight and I give it a split of let's say four then we see we get a sequence of 1 2 3 4 5 6 7 8 and the sequence is increasing because while this number is smaller than this one and you can go through and mess with that program and you see how that kind of works so that was part one of assignment 2 all right on to assignment 3 now this one was a card game not super difficult but definitely more advanced than some of the other stuff and I'll show you how the card game works now by running the program but I think the point of this assignment was to get you comfortable using lists alright so this is a rummy game it's like a different rummy game but let's see the standard deck has 52 cards 13 ranks 4 suits would you like to change the number of cards by changing the number of ranks I'm just gonna say no but you can do that if you want to here you're playing with a deck of 52 cards as your starting hand welcome to round 1 please roll the dice see you roll the dice it's just simulating a card game for you essentially and then what you have to do is look at these which are representation of cards and figure out whether you have like I don't know what it's called but you're trying to create like groupings of cards to get rid of cards from your hand so I think I can like do you have a sequence of 3 more cards of the same suit or two or more of a kind I think I do so I'll just say yes let's see what ones would I even have 110 for 10 those would be the same card so if I do that then it removes those two cards and I can just keep going until I don't have any more sequences or pairs to remove so assignment 4 is where things got slightly more difficult and at least some of my classmates struggled quite a bit I didn't find this one that difficult but again I'm me so yeah so anyways what this one is like kind of a social networking kind of thing where there's these massive lists of actually not load this one it would be one of friends so like zero is friend with 100 zero is friend with 101 and you can see that this list is something like what like 10,000 lines long and it just has a pair of all these different friends and essentially your program has to answer a bunch of different questions looking through the network and doing it in a certain time complexity so the point of this was to teach you like binary search trees or not binary search tree sorry just binary search as opposed to linear search in different ways of kind of being a bit more efficient with some of your code because some of this stuff can take a long time so if I go to them to the bottom here this is the main line of the program and I'll run it for you guys see an idea of exactly how it works before hi so enter the name of the file in this case I am just gonna use big txt like that and then what it says is the average number of friends is nineteen point seven eight in the social network the maximum number of friends any person has is 347 there are one people with 347 friends and their ideas ID 0 now pick a number at random that number is 43 let's see how many people have that many friends there's 119 people with 43 or more friends there's nobody that knows everybody we are now ready to recommend a friend for user you specify so this is like a friend recommendation system the way it works is just it finds like the amount of friends in common and then picks someone or something like that I don't remember let's do like ID 4 for the user with ID 4 we recommend the user with ID 339 this is because users 4 and 339 have two common friends and user 4 does not have more common friends than anyone else so honestly this one was a bit more interesting and I found this one more cool kind of shows you how like the Facebook network all that kind of stuff I works on like a very very very basic level and now time to go into a Simon fine so assignment 5 is now in 10 just more more functions I'm pretty sure actually let me go down here oh no this one was like a dictionary thing so the way that this worked is there's a bunch of if I can find it here like dictionaries and it's like a word lookup system or something I don't remember how this works to be honest I think I'm just gonna have to run the heat code and see so let's run a five part one and see what we get so alright so now enter the name of the file in this case I'll do war and peace dot txt it's gonna open up the file read in every single line says enter one or more words separated by spaces or cue to quit so what this is gonna do this I just got a quick refresher here is you gonna type in words and then it's gonna find the lines in the file that have all of those different words now the point of this was to be using dictionaries and sets so that things happen very very quickly and you kind of get an idea of the time complex the difference between a dictionary and something like a list for example because we're reading in like tens of thousands of lines of text so I do like hello and my or something like that the words you enter do not coexist in the same line okay let's just do like hello and see the word hello is not in the file okay this is great let's try I don't even know what like a common phrases let's do the so these are all of the lines that exists on obviously like almost every line in the file if I do that and my then you can see that all of these lines are the ones that contain those two words together if I do like this is mine then these are the three lines that contain those three words not necessarily in that order and if I do put Q then I can quit and that is kind of how this works now part two of this assignment was just understanding a little bit more about objects we had to create all these different objects and just use some basic Python what do you call it like methods and stuff like that but that was kind of it for all of the first programming class very very basic and again you guys get it that it's just introducing you to the Python programming language so now it is time to go over to the Java course which got a little bit more interesting with some more in different kind of projects all right so now time time to talk about my second programming class which I took last semester my second semester in computer science and this was a job ramming course so essentially the point of this one was to kind of teach you about interfaces programming structure objectoriented design and some more advanced computer science topics they did not really teach Java syntax whatsoever it was just computer science like course to taught in Java so you were kind of assumed to have known the Java syntax which most people did not and you had to learn on your own and then they just kind of gave you a bunch of assignments and labs and all that and you just did it now this was definitely a more challenging program class again not two not crazy difficult in my eyes but they also taught us about data structures and things like breadthfirst search and like tree like hash maps and trees and all that kind of stuff and binary search trees and more theoretical things as opposed to really practical programming in my opinion now there's a lot of assignments here and there's a ton of code so I'm not gonna go through all of them because the way that you code in Java is with tons of different classes if you guys aren't aware these projects took a lot longer to complete usually I had to work on them over a few days or maybe even a few weeks but I will run some of them so you guys get an idea of what I created now the first assignment and this one was like within the first month of being in this class was just to recreate our assignment three from our ITI 1120 class which was in python so essentially that rummy game that I showed you exact same thing just ran in Java so if I do I'll just do a yes here and pick four ranks and you can see here that we get really the same kind of thing just deck is a little bit different same game as before so I'm not really gonna go through this that much that was assignment one assignment two was dealing with ArrayList and breadthfirst search now I can't actually run this code for you because it runs on unit tests which I don't have but essentially what it was meant to do was find the shortest possible solution to what's known as a lightsout game which I'm gonna show you in just one second as a graphical representation because that's what our third project was so our third project was essentially using all of the code from the second project that we created and making a GUI using swing and Java so let me run this one for you guys right now and you guys will get an idea of what I mean by this okay so when I run this now you can see that we get a nice beautiful little GUI that pops up here that is not resizable that allows us to play this game called lightsout now the way the lightsout works is you try to essentially get all of the lights on this board to be lit up in the shortest amount of steps now you can see it shows the steps in the bottom corner and this is actually way harder than it looks now the challenging part with this is we had to make the solution solver for this so essentially what we had to do is be able to put solution and then after running some crazy algorithm that actually takes a really long time to run that's why this is still going it's gonna show you the lit up steps that you need to take to well complete this game so just give this one second and that we should hopefully see it alright so after running that and you can see it took a fair amount of time it tells me what I need to click to actually complete this game so I'll go ahead and click on those I made this it's kind of hard to see like which ones you need to click on but if you just go ahead and follow it then you can see that you can complete the game it says congratulations you want in 21 steps you want to play again sure let's play again and then if you go random it'll just randomly put ones on the screen like that and obviously you can go around and click them and the hard part was obviously getting that solution to work like that so this is a nice little Java QE probably one of the more fun projects we had to do because he actually get to work with some of the graphical user interface all right so my file assignment assignment for this was the last one that we had to complete it was actually had to be handed in like the last day of exams and essentially what this one was was a plagiarism checker now what it did was it took two files and it compared the similarity between the files now this was actually meant to teach us about linked structures and tree structures so we did linked lists doubly linked lists singly linked linked lists tree structures we did word maps all this kind of crazy stuff just to compare the speed difference between these because actually having to compare the similarity between two different documents depending on the way that you do that can take a really long time so this was a good kind of way to show why you would want certain down structure and set them up so you can see this is the implementation of a linked list and we have to do all kinds of stuff like that like for example test word map like this and these are just unit tests for certain things I'm not gonna run this for you guys because I don't even really remember how to do that cuz it's been a while since I wrote this but that's kind of what this last one was and it just looked at these kind of documents here or sorry this where is it this data here and we'll compare the similarity between any given documents that you gave it so anyways that has kind of been it for all of the projects that I did in my first year of computer science I know this video is long but I hopefully you guys got an idea of some of the different things that you guys will be doing in computer science and maybe whether or not your skill level is kind of up to par if you want to do a little bit of practice before maybe you start next year with that being said if you guys like to see more stuff like this and be talking more about what I did during my first year of computer science definitely let me know know down below and with that being said I will see you guys in another video