hey guys and welcome back to another discord rewrite tutorial so in today's video I'm actually gonna be talking about kind of logging things so if you're a server administrator or what do you call it the owner on discord server you're probably interested in logging some kind of information so you have moderators um you want to log like if they're deleting messages or anything like that maybe you just care about like server health so you want to see how many messages are sent how many people join a day not something I'm interested in so what I'm actually gonna be doing in this video is just logging every minutes how many messages are sent and how many people join the server obviously this is a bit extreme I probably don't need to be updating a log every minute considering the size of my disk word servers like 150 people so I'm not gonna have crazy amounts of messages and amount of people joining but I figured I'd just show you how to do this and then you can kind of play around with the timing and it'll give you a sense of what exactly to do now all for my actual discord bot I have it so it logs to a database and the database is like in the cloud right I use MongoDB to do that if you guys want to learn how to do this with a database let me know and I'd be happy to do a MongoDB tutorial it's pretty easy I don't think I would need to show you how to implement it with discord because if I just show you how to use MongoDB like it's one of the easiest ones it's easier than what he called my SQL like all that stuff so let me know and I'm happy to do that but I need some kind of feedback otherwise I'm not just going to create that tutorial so anyways let's get started so I already imported time and async io essentially what I'm gonna do is I'm gonna create a background task that's gonna run every 60 seconds now that background task is gonna be I'm actually gonna create the function for it now so essentially async and then we're just gonna define and let's just say update underscore stats okay what this is gonna do is it's just gonna rewrite something into a text file for me so I have a text file stats here you can see I was already messing with it I didn't get it quite working yet but I figured I just do in the tutorial and it's just gonna write like how many messages are sent every so many seconds so I want to do this per minute when I if I actually use it but that's kind of a long time to wait to see here so I'll probably just do it every like five seconds for the purposes of example but essentially what I'm gonna do in here is I'm just gonna type a few things we'll talk what they do after so I'm gonna wait a client dot wait until ready and so she's gonna wait until we actually end up calling this function before it runs because these async functions they kind of work a bit differently than regular functions anything I'm also gonna global two things I haven't yet created and it's gonna be messages and what he call its use joined let's call it joined okay so that means what I'm gonna do is I'm gonna go up here and I'm gonna say messages joined will replace this comma with an equal sign and we'll just say equals zero and we'll just declare that was up here to start now what I'm gonna do in here on member join is I'm gonna add one to joint so every time that someone joins we'll just add one to that so that's easy enough well they join plus equals one because obviously this represents when someone new joins and for messages well you can probably assume what we're gonna do here we will just add one to messages and we're just making a global write so that we can actually change this variable we don't get any issues okay so that's actually only need to mess with for these other functions and this won't take us too long so for update stats just ever created the stats file if you guys don't know how to do that right click on your folder click new file name it stats txt or whatever you want to name it essentially and just make sure it's in the same directory as you are file when I say directory I just mean folder so whatever this is if you open up like your Explorer and you go I don't know let's go to discord right just make sure that it is in you can see both files okay just in case anybody's confused by that it's because otherwise it's not gonna work if you don't know how to properly like path to it okay okay so now what we're gonna do is I'm just gonna say wow client dot closed okay and we'll do that is closed but I think we have to do it not while not client dot is closed so essentially means while the bot is running we're gonna continue to do what's in here so when I what I'm gonna do now is we're kind of going back and forth here but I'm gonna create a new task and this is the way that you have to do it whenever you want to if you want to run multiple background tasks you just repeat what I'm gonna do with like different functions and different creating tasks so to do this we're gonna do client dot loop dot we ate underscore task and then he were just gonna put our name which was what update stats like that so this is now gonna say well we want to run this function in the background so we're gonna create it as a new task and then inside this function since this is its async we're gonna define how long until we how long we want to wait until we rerun it okay so have well not client DUT is closed then what we're gonna do is we're going to try something and we're going to accept exception as e will print this exception to the screen and now what we're gonna do is we'll actually get to the code so essentially what I'm gonna do is I just want to update this stats dot txt file so to do this all I'm gonna do is I'm gonna say with open and we'll just say stats dot txt we're gonna open this in append mode so we're pending to the end of each time open it as the file name F and I'm gonna do those two F dot right and in here we can write what well we want right so in this case I'll do an F string again and I'm just gonna write the time the amount of messages and then the members that joined in that time so to do the time right I'll just do time and then I'm gonna do time dot time but I'm gonna round this to in integer okay just because I don't want to get those those decimal values that come with time if you know how this works and you'll see that when we print it out anyways so time we'll do messages and then here we'll just print messages and then same thing here we will do what was it joined do members joined like this and same thing and we'll just do joined now we just have to remember to add this backslash n here can you see this I didn't even have the backslash backslash and if you're impiety arm it should be highlighting orange but essentially this just means that um we're gonna like go to the next line after we write this because when you actually have text files you can't read them like you don't see the symbol but what it actually happens is it looks like this like hello slash and Tim slash and like it's just one line and the way that it prints it out to us as like humans is that you it wouldn't ever sees one of these it goes down one line so you just need to add these backslash ends into your text file so we're gonna do that at the end of this line so that we make sure we go to the next one so when we're writing the next line and then what we're gonna do is we're gonna reset our variables so we're the same messages equals zero and joint equals zero because we've already updated this for that for whatever this minute this time frame so now we need to set kind of that delay so to set the delay remember I imported async IO up here what I'm gonna do is I'm going to wait a sync dot IO dot sleep and in here I'll put the time I'm gonna do 5 seconds right now but I would recommend you do like a minute two minutes something like that we're gonna copy this and we'll do it here now essentially we get what we're doing right as we created this task that's we're not gonna run in a loop and it knows it's running in a loop because we did that we have the loop here this just gonna keep going until eventually I bought disconnects we're just gonna keep trying to open the stats file and then if we do when we update that file we're gonna do it every 5 seconds so then we're gonna wait this async dot sleep for 5 seconds and we'll run this run through this wall up again and we'll just keep going keep going keep going until eventually our client is closed I think that should make sense you guys how that works so assuming I didn't make any mistakes let's run this let's go to discord let's just go I guess you can see I was trying to do stuff in here earlier will do hello hi bye I'll just keep typing a bunch of letters to see if we can get kind of some decent numbers in our file and see if is actually working so stats awesome so this is working great so we've see we had at this time and I know these times don't mean anything to you but you can kind of actually figure out what they are based on all these numbers we had zero messages that we had then we had five if I go back now you can see that's updating again zero zero and it'll just continue doing this until eventually we stopped the bots so if I stop like this then obviously this should stop going and I guess wait one two three four five and you can see that we've stopped writing any messages now just to show you if I run the bot again and I go here and you type some more and we you put me type and we type then we come back here and you can see that now it's updated with one and if we go back again in whatever many seconds you see it's one again so that is essentially how this works and it'll log that for you and you can do this um like you could write another log so say you wanted to do it for like you wanted to keep track of every message for each user so I want to keep track of in my server how many people send or what person sends like the most amount of messages and like how many messages on average per day or whatnot then you could just add like days recorded in here like you could add a bunch of stuff but I'll give you a quick idea of how you could keep track of every user's messages what I would do if I were you is I would use pandas first of all as a data frame if you know how to use that but I'd create a dictionary for like temporary storage and I would do the user names like Tim hashtag nine to nine eight and I do Poland and then the amount of what he called messages they've sent so in this case one now what I would do sorry I miss explain this a bit better is I would check this dictionary every time a user sent a message and I would see if that message sought author right I think we did this at some point member dot mention yeah message dot author I would see if the message dot author if that's in the dictionary if that key exists now if it does exist I'd grab this key value and I just update this to be +1 so for example if time exists any sent a message I would make it to three keep going up right now if the key didn't exist I would add a new key into the dictionary with that username so let's say Bob hashtag one two three four sent a message but he didn't exist in here I would just add one and I'd add this into the dictionary and then every time I updated my like user file what I would do is I'd look through the user file so like say stats here that's getting along now I would look for the username if the username existed I would just update that line to be the new amount of messages like I'd add to the amount of messages if the user didn't exist already in the frame then I would just add it in with whatever the amount of messages were in this dictionary then I clear this dictionary and just continue going like we're kind of doing a similar here with messages and joined anyways this has been it for kind of logging I want figured I'd show you this just because it's pretty useful on how to do that in the next video I think I'm gonna go into some voice chat stuff because that's pretty interesting playing some music playing some sounds and then let me know what you guys want to see you won't see database stuff um just just let me know and I'm happy to do anything like that as always if you guys enjoyed the video please make sure you leave a like and subscribe to the channel and I will see you again in the next one