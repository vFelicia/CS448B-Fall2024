hello everybody and welcome to another c plus plus tutorial for beginners now in this video we are going to be covering the switch statement now the switch statement is very similar to an if else if else block but allows us to do something in a much cleaner and more elegant way so with that said let's talk about the switch statement so before we dive into the switch statement i'm just going to quickly give you an idea of what you can expect for the rest of the series so in the rest of the series what i'm going to be trying to do is covering pointers references functions classes strings and a few other more advanced things in c plus plus we're not going to get too crazy into the objectoriented programming aspect of c plus plus because that is just more advanced and you need to kind of master this stuff first but i will definitely talk about pointers and definitely talk about references and kind of those more intricate and difficult details in c plus anyways in this video we're going to cover the switch statement so let's do that so as i said in the introduction the switch statement is very similar to an if and else if structure or if else if else however what it actually does is it takes in one expression now an expression could be a variable an expression could be like a variable plus one so for example if i say something like into x equals one and then i say into y equals two then an expression is something like x plus y or x plus y plus 2 or even just x itself so it takes some expression and it compares that expression to a ton of different values now if that expression is of a certain value then it will do what's in that switch case now you'll see what i mean in one second when you write out the switch statement but one thing to i guess point out here is that you don't need a switch statement what i'm showing you here and a lot of the stuff i'm showing you you can do in different ways and actually in a lot of programming languages there is no switch statements so if there is a switch statement it's great to use it but you do not need to use it and you could use an if and else if structure to do the exact same thing i'm going to show you here a switch is just a bit more elegant so i'm going to code out a switch i'm going to say switch like that and when you do this what you need to put inside of these parentheses is an expression so let's make a variable let's say into x equals 2 and we're going to put x as our expression and in fact actually let's do x plus 1. so what's going to happen now is inside of this switch statement we are going to write cases and a case is just a block of code that tells us what to do when this expression is equal to a certain value so i'm going to say case one colon and then after this colon in an indented block i'm going to put what i want to happen when the case is one so we will continue in one second but i need to quickly thank the sponsor of this video and the series which is alco expert algo expert is the best platform to use from preparing for your software engineering coding interviews at the highest quality coding interview questions data structures crash course mock interviews and a ton of other features on the platform get started with algo expert today by clicking the link in the description and using the code tech with tim for a discount on the platform so any code that i want to run when x plus 1 is equal to 1 goes in here so i can just say oops uh c out and let's just say cool for now and then i'm going to put break and now what i've done is i've ended this case so the basic syntax is you do switch you have your parenthesized expression you then have the curly brackets inside of here you add your cases or case if you only had one case although it didn't wouldn't really make sense to do that with the switch statement so you say your case that's the keyword you then put the value you want to compare to the expression you put a colon and then indented so you press tab uh you put all of the code you want to run now i believe this does not need to be indented i'm pretty certain if you do this it will still work but it's better practice to put this indented because then it's just way easier to read and you can kind of see where the cases start and where the actual code that's running is and then once all of your code is done you add a break you can kind of think that think of that as terminating the case all right so i'm gonna do another case i'm gonna say case two colon and then here we'll say c out and we'll just say not cool uh and then we will say break okay so let's just run this and let's see what happens when x is equal to two so two plus one is going to be equal to three so just take a guess out what's going to happen so when i run this you're gonna see that nothing happens right and the reason nothing happens is because well x is equal to two and we don't have a case for three is one two plus one we get three we don't have a case for three so let's change x to one and now let's see what happens when i run this you're gonna see that we get not cool printing out again the reason we get that is because well one plus one is equal to two this is the case two and so we print out not cool finally we can change x equal to zero and let's run this and we get cool so that is really the basics of a switch statement now you can put as many cases here as you want right so i can do another case uh let's go case and let's go like 10. and say uh interesting or something like that did i even spell interesting right do i need another e uh i think so interesting yeah okay that sounds about right uh let's change this now to be nine let's run this and there we go we get interesting all right so now you know how to use a switch statement you do your case you do whatever you want to happen then you can add a break to terminate your case and note you can do multiple things here you don't have to just say c out something we could add like an if statement here or something or we can add anything else essentially in this block but break will end each of our cases and then there's one more thing to show you here which is called default so notice that when i did something like 4 right if there's no case for 4 that's fine sometimes we don't actually want to do anything when there is no case for whatever the expression value is so for four if we didn't want to do anything we could leave it like this and well nothing would happen but if we do want something to happen we want to have what's known as a default case we can do that now the default case is kind of equivalent to like an else in the if else if else structure so if one of these cases is not the case no pun intended then we have the default which will run so oops said it means to do that i'm going to add default and the default doesn't take anything after the colon because this is anything right the value of the expression can be anything other than one of these cases and then in here we'd say c out and let me just see our default for now just so that we understand this is the default case so now if x is equal to four and i run this you can see that we get default if i now make this equal to one though so our case is now going to be two and we run this we get not cool so really that's all i need to cover for the switch statement i mean i could drag this video on and show you a ton of different examples but i think you guys probably get the point here you just define your different cases you put your expression inside of here the expression can be anything i'm adding 1 to x but you can just put the variable x that totally is fine that works as well you don't only have to do this with ins you could do this with strings with booleans whatever all you're doing is you're comparing the this expression right here to the value of all of these cases you can think of it as writing an if statement where you say if x is equal to one and then you could say you know else if x is equal to two and then so on and so forth and then finally the default would just be represented by the else you can use either structure that you would like uh the switch is just more elegant when you're just going to be comparing the value so with that said if you guys enjoyed this video make sure to leave a like subscribe to the channel and i'll see you in another youtube video you