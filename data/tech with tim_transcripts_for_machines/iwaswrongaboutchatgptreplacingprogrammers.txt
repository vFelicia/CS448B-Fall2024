foreign a few months ago I made a video when chat GPT first came out and was available to the public and I kind of shared my opinions on it and that video was pretty misinformed I didn't know much about the tool I didn't have a lot of experience using it and I didn't make very strong arguments in that video about why it might replace programmers why you shouldn't be worried Etc so now a few months later I have a lot more experience using this I've used it in a lot of different contexts for example some of my videos have been scripted by chatgpt a lot of my shorts it's helping helped give me kind of ideas for those and even from a programming standpoint I've been handing off and kind of delegating a lot of smaller tasks to chat GPT so in this video I want to share with you my new kind of formed opinion on this where I see it going in the next few months and years and how I'm using it as a programmer to be more efficient so first let me share with you how I use Chad gbt now I will admit this is not a massive part of my workflow a lot of what I'm doing as more of a senior programmer right now is writing or architecting code myself however I do treat chat gbt kind of like a low paid intern where I'm handing it off kind of smaller tasks discrete things things that I can describe relatively fast and that would be faster for me to describe to the AI than to write from scratch by myself now a lot of you might relate to this problem where you're working in some kind of engineering team and if you're in any kind of management role or you're kind of leading other developers oftentimes it's actually faster for you just to write the code and kind of fix a problem than it is to try to describe what needs to be done to someone else so in the situation in which it's very easy for me to describe something I'll go to chat gbt describe that and then have it spit out that code for example I'll write some code maybe like an API endpoint and then I'll paste that into chat GPT and say hey can you write a unit test for this or can you make sure this code doesn't have any bugs I'll treat it as kind of like an auditor for some of my code and I'll get it to do monotonous and just repetitive tasks that would just cost me a lot of keystrokes but not a lot of like comp mutational effort in terms of me thinking about what the actual task needs to do so testing is a big thing that I ask it to do I'll give it kind of the objective of what this code should do I'll ask it to write the test for the code and then to ensure that the code kind of adheres to those tests and then I also get it to do things like writing small functions so for example if I need a function that's reversing a string I know that's very straightforward but I might ask chatgpt to do that I might also get it to refactor some code so maybe I write some really messy spaghetti code as long as it's not super long and I'll say hey can you clean this up for me rewrite it and usually it gives me a pretty decent solution now in my experience using this chat GPT is pretty good at doing code generation especially in the popular programming languages like JavaScript python Etc which are mostly the ones that I'm using however it does have quite a few mistakes a lot of times it will incorrectly write a test sometimes its code has actual syntax errors in it and I need to tell it to correct its mistake the interesting thing here is that when I tell it that it made a mistake even if I don't point out where that mistake is it actually is pretty good at going in and correcting it so that's pretty powerful the fact that it can actually reason based on what I'm telling it and say oh I need to review this code and fix a specific mistake here there's also times where it uses like a very obscure feature or something that I don't want to be in the code base so I'll tell it hey do this but write it in a different way same in terms of efficiency so that's kind of how I'm treating chat GPT really like a low paid intern where I'm handing off and delegating these different tasks and I would use it more if I felt that it would be faster for me to describe the tasks to the AI rather than just to solve them myself now when it comes to kind of architectural decisions and larger type decisions here I'm still handling that on my own I might ask for tips or advice from chatgpt but at the end of the day I'm kind of the one that needs to make the decision having the full context of the project so here's where we'll talk about where chat gbt is kind of lacking and why we still do need programmers in the world now I think that's obvious but the reality is if you're working on a large application that has hundreds maybe even thousands of files all kinds of different systems different Integrations deployments all of this stuff going on chat gbt at the current point in time is not capable of ingesting all of that data building context around the project and then putting something into practice right like actually building an endpoint or building whatever it may be you need to give it very specific instructions just like you would give like a more low level employee that doesn't fully understand the system so in my situation I can't rely on chat gbt to write a majority of the code for the code base because I would have to give it so much information for it to be able to do that and at that point it's just faster for me to write it myself however where I think things are going and from what I've heard in kind of rumors of soon chat gbt will actually have plugins this means you can connect it to like Google Sheets Google Docs eventually probably GitHub maybe even your IDE or your development kind of environment that you have set up if that actually happens that could be a massive game changer for how good the code generation could be from chat GPT if this can hook into my GitHub repo read the entire GitHub repo and then give me suggestions on how I could clean up my code refactor it different ways to write things even start producing individual files directories systems that will be an absolute Game Changer and I think that we're going in that direction and that's kind of why I'm making this video because previously when I looked at chat GPT I said okay this is cool but really it's only capable of acting as again like a low paid intern where it's doing very discreet tasks that need to be described in extreme detail if we get to the point where it can ingest this massive amount of data and it can view the entire code base and actually kind of Reason about that and build context about the systems then that's going to change things drastically at least that's what I feel and from what I've heard that's the way that we're going soon there'll be all these plugins directly in chatgpt and I don't know how how powerful or how good they're going to be immediately but I know they'll get to a point where Chad gbt can go to GitHub read your GitHub issues and start submitting pull requests that are fixing those issues for you if we get to that point that does seriously put quite a few programmers in danger so with that said what does that mean for people that are more Junior maybe just getting started and trying to land a programming job right now well from what I've seen there hasn't been a huge Wipeout of programming jobs obviously that's different than you know all the Google layoffs Facebook all of that I don't think that's really related to AI regardless in kind of the General market not this huge Tech Market I haven't seen like a massive decrease in programming listings in fact programmers are still pretty high in demand and I think that's because a lot of companies realize that even though these AI tools exist they still need programmers to use these tools like your average Layman person can't really go in and accurately use these tools and even follow the instructions that are being provided by it and they want to train employees that have eventually the more junior level guys can move up to be senior programmers right eventually we're going to run out of senior programmers people are going to leave companies and there needs to be some kind of investment in training for people that are at a lower level so they can eventually be a more senior developer so to wrap up this video just say that as I've used this tool more and more really my opinion has become that this is not necessarily going to wipe out programmers or replace software developers it's more going to change the way in which people work right it's going to change how your average developer goes about contributing to a code base it's possible that you have chat GPT that's now reviewing your code on a GitHub repo that could very well be happening in the next few months I just know that things are happening very very quickly obviously there's a ton of investment in open Ai and just in AI Tools in general and this is kind of the next big push when it comes to technology so I'm trying to watch it fairly carefully anyways I think if you're a programmer if you're just getting started you don't need to freak out and panic a ton it's definitely worth having it on your radar and considering how you can utilize these tools I think these tools can also allow you to learn programming a lot faster and to hopefully kind of reduce that skill gap between yourself and someone who's maybe been programming for a long time I think really the main point is that we're all going to have to adapt to this it's going to change the way in which we write code and produce software and even though we might not like it it's just the reality of what's happening and that's kind of what I wanted to State here anyways if you guys enjoyed this video make sure to leave a like subscribe the channel and I will see you in the next one foreign