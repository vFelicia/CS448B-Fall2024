hello everybody and welcome to another youtube video so in today's video i'll be sharing with you a list of 25 terms that all programmers need to know now obviously there is a lot more terms than just 25 that i could put on this list but what i've done is i've kind of picked the terms that i thought were confusing that people often make a mistake with or use incorrectly and that i know i have used incorrectly in the past anyways with that said let's get into the video after a quick word from our sponsor before we get started i need to thank the sponsor of this video which is alco expert algo expert is the best platform to use from preparing for your software engineering coding interviews and has the highest quality coding interview practice questions with 160 practice questions detailed solutions in nine of the most popular programming languages a featurepacked browserbased coding environment extensive test suites and conceptual overviews and code walkthroughs for each and every problem algo expert is the best resource to use to ace your coding interviews algoexpert also has a data structures crash course coding interview assessments and a mock interviews feature i can highly recommend algo expert as a former customer myself and now an official instructor on the platform get started using algo expert today by clicking the link in the description and using the code tech with tim for a discount on the platform alright so let's go ahead and get started just a few quick things to note i'm going to read these terms in alphabetical order i have them in front of me so on my middle monitor you see me looking in this direction that's what i'm doing i'm just reading the definition or reading the term i will put all of the definitions up on the screen if they require further explanation then of course i will do that i'm also going to go quite quickly so feel free to pause the video if you need further clarity on the definition or you just want to read it yourself regardless term number one that i have for you is api which stands for application programming interface now an api is a set of tools protocols and or procedures that allow you to write software a lot of people like to refer to an api as the glue between a front end and a back end if you have something like a front end so maybe the front end of your website it may call an api or use an api to fetch some specific data or do some other type of operation so apis are very useful and there is many different types of apis that exist so term number two that i have for you is algorithm now an algorithm is really just a set of steps or a procedure that you need to follow to solve a problem an algorithm is not only applicable in the context of coding you could write an algorithm to follow to solve a mathematical problem you could write an algorithm to follow to upload a video to youtube you can write all kinds of different types of algorithms and usually people refer to them in the coding context but i just want to clarify that algorithm is a general word it's not just for coding so moving on to term number three we have argument now an argument is simply a value that you pass to a routine a function or a method so if i called a function say like func and i pass the value 1 2 the arguments to that function would be 1 and 2. pretty straightforward moving on we have ci now ci stands for continuous integration and this refers to the continuous integration so the continuous merging of code from multiple contributors into one large software project now typically before you can merge code into say the master branch of your github repository it needs to pass all of these types of checks and well that would be the automation of this process you are making sure that you cannot merge any code or combine code into the larger project if it has any problems bugs or is breaking any of the automated tests that you would have written moving on we have cli now cli stands for command line interface and this is simply a program that runs on your computer that allows you to modify files navigate directories and execute programs now really the best examples of a cli is something like a terminal or your command prompt depending on the operating system that you're on the next term i have for you is known as compile time now compile time simply refers to the time in your program's execution where it is being compiled or transcribed into another programming language so whenever you run your code one of the first steps that needs to happen is that code needs to be translated down into a lower level language that definition is coming up don't worry and then that lower level language can typically be ran through an interpreter and actually executed on the cpu so compile time is just the time when you're compiling your program which means turning it into a different language that can then be ran by your cpu or a specific interpreter moving on the next term i have for you is a constant now a constant is simply a value in your program that should never change during the execution of the code the point of a constant is so that you can use it in multiple places in your code by only having to reference the variable name and then if you ever want to change what that constant value is say if you're running the code another time you just change it in one place and then it will change everywhere usually a constant is denoted by the constant prefix or by using all capital letters for a variable name so the next term that i have is known as declaration now this is a term that i misuse all of the time but a declaration is simply a statement that defines what a variable or a specific name means in the context of your program so if i declared a function and i wrote def func and then you know the parentheses like that in python then that would be me declaring that a function has this specific function body same thing with a variable if i did something like x equals 2 i am declaring that x is equal to 2 i'm assigning the value 2 to the variable x moving on we have expression now this is the same as an expression in math but really an expression is anything that could eventually be evaluated to get a value so if i do something like 1 plus 2 this is an expression that then evaluates to three so moving on we have a framework now a framework is simply a platform that is used for developing software applications typically it's going to contain code libraries compilers hooks and then functionality for solving common problems moving on we have a high level language now a high level language is simply a programming language that is close to english it is easily understood and read by humans and some examples of high level languages are pretty much all modern programming languages so python javascript java c plus plus etc those are all high level languages next we have the term iteration now iteration simply means to repeat the same steps or procedure multiple times in the context of coding this is usually looping through a block of code or looping through some type of data structure the next term we have is keyword now a keyword is simply a reserved builtin keyword in a programming language that has some builtin functionality so something like if for while all of those are going to be keywords and you cannot override them in a programming language next we are moving on to lowlevel language now a lowlevel language is the opposite of a highlevel language this is a language that is closer to the computer hardware meaning it's closer to actually being executed by your cpu it is something that is not easily understood or read by humans an example of lowlevel languages would be something like assembly or machine code now we have object now an object is simply a collection of data and behavior so we typically have attributes and methods the attributes are our data and the methods are our behavior now objects clearly only exist in objectoriented programming languages and their behavior and attributes is defined by the class that you create the object from so moving on we have the term parameter now i kind of like to think of the parameter as the opposite of an argument parameters are simply the names of values that you are accepting inside of a function or a routine and so if i define a function in python i say define foo and i have a b both a and b would be parameters and then i could use those in the function and whenever i call the function i would pass four a and b two arguments so the arguments are what you pass to the function and what you're looking to accept in the function are the parameters next we have a pointer now this only exists in certain programming languages but a pointer is simply a variable that stores the memory address location of a specific value so rather than storing the actual value it's storing the address to where that value is so if you wanted to see the value associated with a pointer you would need to first go to the address the pointer stores in memory and then look at the value that's at that address in the computer's memory when i say memory i'm talking about ram so random access memory next we have the term reference now a reference is simply a value that allows you to indirectly access data so for example let's say i have a variable a and i have the value 1 inside of a if i make a reference to a so i say b is equal to the reference of a now what this means is i can indirectly access the value stored inside of a by modifying b so the next term we have is run time now run time is the time in which your code is actually being executed so this will happen after compile time you will start by compiling your code then you will run the code in well while the code is running that is known as the run time so if you ever see a runtime error that means you didn't actually have any syntax errors or anything that didn't pass the compiler checks that it does beforehand something actually went wrong during the execution of your code so you would see an exception or some type of error in your program if it's a run time error next we're moving on to statement now a statement is really just a single line of valid code that completes some task hard for me to define it more than that pretty much everything you're writing when you're programming is a statement a statement could be an expression a statement could be a declaration really any valid code is just a statement in a programming language finally the very last term i have for you is known as syntax now the syntax i like to think of as the grammar or the set of rules for a particular programming language so just like english has its own grammar it has its own words it has ways of forming sentences so do programming languages except we call this the syntax so with that said that is going to wrap up the 25 terms that all programmers need to know i understand a lot of these were pretty basic and i just gave really quick definitions but if you want some more advanced terms then make sure to like this video leave a comment and let me know and i will likely make a part two with that said i hope you enjoyed if you did leave a like subscribe to the channel and i will see you in another one you