hey guys welcome back to the seventh video in my Python programming series today we're going to be talking about while loops so in the last video we talked about four loops and before that we talked a lot about conditions so it's going to be important to understand those things before we can move on today to this video so if you haven't seen those videos go back at my channel and check those out first okay so let's get right into it today we're going to be talking about while loops so let's first of all just put an example down and get these syntax okay so we have well condition then we are going to do whatever is inside the loop so it seems simple enough but they can get fairly complex so well condition is equal to true so for example this condition here this could be a variable well that is equal to true then we're going to do whatever is inside of this loop so again we keep talking about conditions they're very important in Python we really need to understand them before we can move into more complex topics okay so well conditions equal to true we're going to do whatever's in this loop so how does this really work well pretty much what happens is we have the while loop here we have the condition so this is true this means we're going to do this now what happens is we actually come back up to the top after we've done this we say well is this condition still true well yes it is so that means now we're going to do this again and we just continuously do this until eventually the condition is equal to false or we have a keyword appear called break like this now I'll do an example so we can understand this but this is just the basic syntax we have while we have a condition and then we have a colon followed by an indented block which will be whatever is going to run okay so let's start off by using a variable we're going to just call it loop we're going to set it equal to true now we're going to make our while loop and say well loop now by just putting a loop here it defaults to say well loop is equal to false on putting loop there's the exact same thing as typing this it's just shorter to put loop instead of doing that equals equals true okay we're going to get some input from the console so we're going to say name is equal to input and then I'm just going to put in here insert something okay and then we're going to put an if statement which we talked about in another video so if you haven't seen that go back and check that out when I say if name is equal to stop then we are going to break out of the loop by typing break or we could also do this we could set the condition equal to false so we set the variable up here equal to false now I know I just typed a lot there so let's talk about what really is going to happen so we have our condition we say well loop is equal to true right now we set it equal to true up at the top so it's going to automatically run at least once now we get input from the console in store it in the variable name now we have a basic if statement here that pretty much says if name is equal to stop well then we're going to stop the loop and we're going to break out of it otherwise we're going to keep asking the user to insert something until eventually they type stop so let's see how this all works okay so insert something I say one two three it didn't like that once we insert something again I say we okay what about hello keep going okay now I'm going to type stop and you see that the program stops running okay so again I'll show you that we can do this by just setting the variable equal to false same thing again if I type hi keeps going I type stop it's going to stop and then maybe if we get rid of the variable here we can also just type in the word break like that and same thing again if I type in some random things and I type stop it stops okay so pretty much the way that the break keyword works is by simply saying okay are we inside any loops right now it checks whatever loop you're inside so right now we're inside the while loop and it says okay well this line has now run so what we're going to do is we're going to get out of the loop so it pretty much will now start reading from the next blank line in the file meaning that it's going to get out of this loop and just continue going down the program okay and that's pretty much it for while loops we can talk a little bit more about why we would use a while loop instead of using a for loop the reason we might use a while loop is for something like this so for example if you want to ask someone to insert a password so we're going to password like this and we'll just change this variable password so paths are short and now maybe we wanted to check we want to say well oops well let's just do password because past is a key word in Python I forgot about that password and we want to make sure that the password has for example at least one letter in it well we're going to keep asking the user to re input their password until it meets the certain criteria so for example it might have to have one capital it might have to have one letter in it I may have to have a few numbers something like that right so we would keep asking the user for a password until they gave it to us correctly now the reason we wouldn't use a forloop for this is because a for loop usually we know how long we want to run the for loop for that's why we put a number in the range so for example we put 10 or we put 12 well as a while loop we don't know how long we're going to run it for so for example someone could get the password first try that they can put it in correctly with the right criteria or it could take them 30 tries right we don't know how long it's going to take them okay so that's it for today's video if you liked the video please like it and subscribe and I will see you again tomorrow tomorrow with a new video