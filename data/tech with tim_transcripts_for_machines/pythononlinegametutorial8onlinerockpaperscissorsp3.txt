the first thing we're going to need to do you need to say run is equal to false or is equal to true I always do that we're gonna say clock equals PI game time dot clock capital C hereby bad okay next we're gonna say N equals Network right because we're importing Network up here we're gonna do a very similar thing to what we did before and all the previous tutorials where we just connect initially by doing that initialization and then we're gonna say P equals actually player equals and dot get P right and you should already have that method it's just returning that like connect what we connected to right so when we connect we get the player number which is either 0 or 1 so we need that now it reminds me it's gonna be a number so we got to put in to round this so that we can compare it with other integers okay and last we're gonna just print just so we have this you are player player now this just indicates to us like when we initially run if we know we're 0 or 1 just to make sure everything's working fine now we're gonna make a while loop we're going to say it's our main game loop we're gonna say well run and then in here we're gonna do clock dot tick 60 very similar to what we've done before guys I'm gonna start adding some new stuff in a second ok so now that we've done this it's time to start actually connecting and asking the server for information so what we should be doing here is every frame we should be asking the server to send us the game especially at the beginning of this loop because right now we haven't actually created a game class right we need to get that from the server so we're connected now we know what player we are so now what we can do is we can try to get that from the server so to do that we're going to say game equals n dot send get and that's literally as easy it as it is usually doing except and then we'll just what do you call it we'll say run equals false and we'll say print couldn't get game ok and the reason we're doing this and we're gonna break as well is because when we if we send this and we don't get a response from the server that means the game doesn't exist and what what if that happens well then what we should do is we should exit out of this game we should print saying we couldn't get the game and then we should try to reconnect or start a new game with someone else so this main function is going to be like the actual game running but once we exited this main function we're gonna go to a main menu and the main menu will allow us to choose like we want to play against and a bunch of other stuff as well okay you guys will see that later okay so that's how we do that next what we're gonna do is we're gonna say if game dot both went now what we're gonna do here is if both players went well we're not waiting for anything now we need to see which one won so what we're gonna do here is going to check which player one and we're gonna display that message accordingly on the screen so what we're gonna do initially is we're gonna redraw the window the reason we do this right away is because we want to make sure that if both players went we're updating the window and on the window it'll check like if both players have gone like in this redraw window and it'll draw the player moves for us so you guys will see how that works in a second we're gonna do a delay when a pie game time delay 200 and now what we're gonna do is we're going to try game sorry game equals Adam don't send reset now why we're doing this obviously is because well if both players went we need to tell the server to reset those player moves right so inside a game if we call reset went we're just going to reset it so that we were able to play the next round after okay we're gonna except except of course I can't spell that we're gonna say Ron equals false we're gonna do the same thing as before we're gonna print couldn't get game couldn't get game and now we're gonna break okay now under this so after we send that reset now what we want to do is we want to display a message on the screen indicating whether player 1 1 or player 2 1 or like if you want or if the other player 1 so the way we're gonna do this it's actually a decent amount of lines is because we have to like render font and then we got to determine where we're gonna draw the font and what's gonna be on the font so we're first we're just gonna start by defining a thought so we'll say font equals PI game dot font dot sys font okay in here we'll say comic sans font size let's go 90 for this one now we're gonna say if game dot winner and remember if we go to game winner is going to respond to us with either a 0 a 1 or a negative 1 so it would you have to check if winner is 1 and player so whenever our current player is 1 then we're going to say you won if winner is 1 but the current player is 0 we're gonna say you lost right so that's how we can check this so to do that we're gonna say if game don't winner equals equals 1 and player equals equals 1 and remember we got that player from the server so we know if we're either player 0 or player 1 on the client side and is actually is do I need an aunt oh sorry or what's we need to do or game dot winner equals equals 0 and player equals equals 0 so essentially what we're gonna do here is win a check if this player won so we know what player we are and we know what player 1 so if that coincide like what player we are and the player that one then will print out and we'll say or will put on the screen you want right telling that client they want so we'll say text equals font render and then here we simply say u 1 exclamation point and then we can just do one and then a color and obviously color we just you like read that again from the screen okay so else actually L if and now we're gonna check it they lost washi I think we could do this easier we're gonna say L if game winner equals equals negative 1 so if it if we tied what we'll do here is will say text equals font render and we'll just say tie game exclamation point 1 again we'll put that in red ok and now else so if we didn't win and we didn't tie we must have lost so we can literally just copy this and we'll just say you lost as the text okay so you lost da sweet and now what we're gonna do is just render that font put it on the screen so our not render it just put on the screen so say wind blitt text and now we're gonna do the exact same thing that we did before to get it in the middle of the screen and just be a little bit easier so we're just gonna say I believe to a needler brackets no I don't think so we'll say width over to and that's the width of the actual screen text get underscore width we need those brackets over to you comma and now we'll just do the same thing with height so we'll say height over to text dot get underscore height over to okay so that's gonna put in the middle of screen we're gonna update the display I game display update and we're going to delay so pygame dot time delay and I'm gonna put two thousand for two seconds you guys can put whatever you want in here okay so let's break this down really quickly if both players went that means now we're gonna check who won so what we're gonna do is we're going to redraw the window we're going to what do you call it apply a small delay of 0.2 seconds just so that you can see what both Claire's did before it immediately pops up who wanted who lost so actually let's make this a lay half a second we're gonna send to the server reset so we're gonna reset both players went so the next time that we start playing we can both players are allowed to move we're gonna say Ron equals false if this doesn't happen if this doesn't work we're gonna prank couldn't get a game we're gonna break now otherwise so like if this worked we sent the game we're gonna create a font we're going to check who won so either we won we tied it we lost when display that to the screen we're in delay for two seconds and then we're gonna play the game again after okay awesome so we're almost done I'm just gonna add this pretty actually complex for loop in here so we're gonna do now is gonna say for event in PI game event doc gets very standard for Poggi probably seen this before I'm gonna say if event dot type equals equals PI game dot quits then what we're gonna do is gonna say run was false and we're gonna say PI game dot quit so this just means that they hit the whole X button at the top of this corner now we're gonna check if they actually press their mouse button down so this is how we're gonna check if they pressed a button this what we're gonna do now it's a if event dot type equals equals PI game dot mouse button down then we will do is we'll get the mouse position to do that range say if we're gonna say paga you've got pause hi I'm dawn Mouse doc get underscored pause so what we're doing here is we're checking if they press right mineral or left mouse button if they do let's get the mouse position now for every single button we're gonna check if we click that button if we did we're gonna do something accordingly okay so we're gonna do now I'm gonna say for button in BT ends remember we defined buttons up here then what we're gonna say is if BTN dot click pause now if they did click the position there's a few things need to check oh and else when you check this sorry and game dog connected sorry so what this game duck connected is doing is just making sure that it's not gonna let us press like rock paper scissors unless we both players are on so that's just so that we don't run into an issue where we can make a move before the other player connects ok so just add this and game DUP connected what we'll do now is we're gonna check what our current player is because this is gonna determine how we send a move so we're gonna do now is gonna say if player equals equals zero if not game dot what do you call it p1 went then we'll do something otherwise so we'll just put else here and we'll check it not ptoo game PT 1 ok so what we're doing now and I haven't coded the rest of it yet is we're just gonna check if we press one of the buttons so remember we have that click method in our button that tells us if we clicked on it so if we do click on it and we're connected to the game what we're gonna do is we're gonna check of our current player is 0 or 1 now what we're doing is if we're player zero well we're gonna check if player zero has gone yet if they've gone obviously we're not gonna let them make a move right because they've already made that move they can't change their move once they made it same thing with player two so if we're not player zero we're player 1 clearly so that means we're gonna check if player 2 is gone yet and if they haven't gone will allow them to move ok so what we'll do in here now is we're gonna make a move now to make a move remember we just need to send to the network our move so we're just gonna say n dot sent or to the server sorry and all we're gonna do is we're just gonna send the text of the button now the text of the button will be a rock paper or scissors right and that's it precisely the move that we're gonna make depending on what button we're clicking it's just a really nice dynamic way to do that now once we've done that right so if we go to server what happens here is if we send that we're gonna play that move and we're gonna update it on the game so that the other client when it gets that game board again we'll have that updated move you guys will see how this works in a second ok so that's working well now all we need to do is just add in line with this right here we say redraw window we're gonna give it win we're gonna give it what else do I need to give it game and P which sends for a current player and that's actually it for and make sure you just call are calling main down here at the end of climb that's actually it for this main function so now all we need to do is do redraw window and we're really close to done so we got another like 20 lines and then once we do that we're actually finish this game and then we can start testing it out and talking about some more things we can add to it ok so what we're gonna do now is yeah it's actually quite a bit of work is we're gonna draw all the stuff on the screen now so we've done all the logic aspect of it down here in this main function now we need to draw everything so it's more tedious than it is difficult or just first start by checking if not game dot connected now this just means if we have not yet had the other player connect then all we're gonna do is we're gonna print on the screen waiting for player and we're not going to show anything else so to do that we're inside font equals PI game dot font sys font name obviously is Comic Sans and then the how big should be let's make it eat okay and then we're gonna say text equals font dot render in here we're gonna say waiting for Claire dot dot one color let's do a nice red and let's actually add true here for bold okay okay so we're gonna blip this on the screen so to do this we'll say wind dot blintz and we're gonna do again that same I know a tedious thing to get in the middle the screen so we're just gonna say with over to minus text get underscore width and then we're gonna say height over to minus text get underscore height and actually we need to make sure we're dividing both the width and the height by two so let's do that okay that's it for that now else so this means if we actually are connected both players are in now it's time to start drawing the real stuff on the screen so we need to draw that what was it so actually let me pop up a client for you guys you can see what it looks like it's around server rotten client client great so if we want to see the client what we do is we need to draw this this this this and then the three buttons case we're gonna have to do these for text and the thing is these texts need to change on like they're gonna be different depending on what player is looking at it right so for example here it's showing us what our move is but notice that just as locked in for opponents it doesn't tell us what our move is and with the other players move is right so we need to do that as well okay so to do that let's start we're gonna make another font a font equals pie game dot font dot sys font Comic Sans size of this font let's make it 60 and then what we're going to do is I say text equals font dot render and we're gonna do your move so we're gonna start by just doing your move and like opponent move because those aren't gonna change they're gonna stay the same no matter what and for that we're gonna do one and the color I had there was like a nice cyan I think right so we'll do this feel free to change the color I know it probably doesn't look the best and let's just split this at a static position on the screen so we'll say text and let's go 8,200 okay alright next so actually still in this else statement we're gonna copy this I'm just sorry what am i doing just this text and this wind part and we're gonna put it down here and say your move we're gonna say a ponent move does that a you spell that let's change that to opponents and actually let's just get rid of moves me too big opponents and same color except we're just gonna change the x value so that we draw it at what you call it 380 like that okay so that's it for your movement opponents next what we need to do is bit more complicated because now we have to draw what the actual moves are